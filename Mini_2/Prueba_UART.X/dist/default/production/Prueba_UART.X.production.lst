

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 17:31:13 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289                           
   290                           	psect	idataCOMMON
   291  0740                     __pidataCOMMON:
   292                           
   293                           ;initializer for _contador2
   294  0740  3401               	retlw	1
   295  0019                     _TXREG	set	25
   296  0018                     _RCSTAbits	set	24
   297  0009                     _PORTE	set	9
   298  0008                     _PORTD	set	8
   299  0007                     _PORTC	set	7
   300  0006                     _PORTB	set	6
   301  0005                     _PORTA	set	5
   302  0007                     _PORTCbits	set	7
   303  0008                     _PORTDbits	set	8
   304  001A                     _RCREG	set	26
   305  00C7                     _SPEN	set	199
   306  0065                     _RCIF	set	101
   307  0042                     _RD2	set	66
   308  0099                     _SPBRG	set	153
   309  008F                     _OSCCONbits	set	143
   310  0089                     _TRISE	set	137
   311  0088                     _TRISD	set	136
   312  0087                     _TRISC	set	135
   313  0086                     _TRISB	set	134
   314  0085                     _TRISA	set	133
   315  04C1                     _TRMT	set	1217
   316  04C5                     _TXEN	set	1221
   317  043F                     _TRISC7	set	1087
   318  043E                     _TRISC6	set	1086
   319  04C4                     _SYNC	set	1220
   320  04C2                     _BRGH	set	1218
   321  0189                     _ANSELH	set	393
   322  0188                     _ANSEL	set	392
   323                           
   324                           	psect	strings
   325  0003                     __pstrings:
   326  0003                     stringtab:
   327  0003                     __stringtab:
   328  0003                     stringcode:	
   329                           ;	String table - string pointers are 1 byte each
   330                           
   331  0003                     stringdir:
   332  0003  3000               	movlw	high stringdir
   333  0004  008A               	movwf	10
   334  0005  0804               	movf	4,w
   335  0006  0A84               	incf	4,f
   336  0007  0782               	addwf	2,f
   337  0008                     __stringbase:
   338  0008  3400               	retlw	0
   339  0009                     __end_of__stringtab:
   340  0009                     STR_1:
   341  0009  3431               	retlw	49	;'1'
   342  000A  3400               	retlw	0
   343                           
   344                           	psect	cinit
   345  07EB                     start_initialization:	
   346                           ; #config settings
   347                           
   348  07EB                     __initialization:
   349                           
   350                           ; Initialize objects allocated to COMMON
   351  07EB  120A  118A  2740  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   352  07F0  00F9               	movwf	__pdataCOMMON& (0+127)
   353                           
   354                           ; Clear objects allocated to BANK0
   355  07F1  1383               	bcf	3,7	;select IRP bank0
   356  07F2  3020               	movlw	low __pbssBANK0
   357  07F3  0084               	movwf	4
   358  07F4  305C               	movlw	low (__pbssBANK0+60)
   359  07F5  120A  118A  2746  120A  118A  	fcall	clear_ram0
   360                           
   361                           ; Clear objects allocated to COMMON
   362  07FA  01F7               	clrf	__pbssCOMMON& (0+127)
   363  07FB  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   364  07FC                     end_of_initialization:	
   365                           ;End of C runtime variable initialization code
   366                           
   367  07FC                     __end_of__initialization:
   368  07FC  0183               	clrf	3
   369  07FD  120A  118A  2FA5   	ljmp	_main	;jump to C main() function
   370                           
   371                           	psect	bssCOMMON
   372  0077                     __pbssCOMMON:
   373  0077                     _contador:
   374  0077                     	ds	1
   375  0078                     _recibido:
   376  0078                     	ds	1
   377                           
   378                           	psect	dataCOMMON
   379  0079                     __pdataCOMMON:
   380  0079                     _contador2:
   381  0079                     	ds	1
   382                           
   383                           	psect	bssBANK0
   384  0020                     __pbssBANK0:
   385  0020                     _buffer:
   386  0020                     	ds	40
   387  0048                     _pantalla:
   388  0048                     	ds	20
   389                           
   390                           	psect	clrtext
   391  0746                     clear_ram0:	
   392                           ;	Called with FSR containing the base address, and
   393                           ;	W with the last address+1
   394                           
   395  0746  0064               	clrwdt	;clear the watchdog before getting into this loop
   396  0747                     clrloop0:
   397  0747  0180               	clrf	0	;clear RAM location pointed to by FSR
   398  0748  0A84               	incf	4,f	;increment pointer
   399  0749  0604               	xorwf	4,w	;XOR with final address
   400  074A  1903               	btfsc	3,2	;have we reached the end yet?
   401  074B  3400               	retlw	0	;all done for this memory range, return
   402  074C  0604               	xorwf	4,w	;XOR again to restore value
   403  074D  2F47               	goto	clrloop0	;do the next byte
   404                           
   405                           	psect	cstackCOMMON
   406  0070                     __pcstackCOMMON:
   407  0070                     ?_setup:
   408  0070                     ??_setup:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_UART_TX_Init:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ??_UART_TX_Init:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_setOsc:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ??_setOsc:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_UART_Write_String:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_main:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_UART_Write:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ??_UART_Write:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     UART_Write@data:	
   436                           ; 1 bytes @ 0x0
   437                           
   438                           
   439                           ; 1 bytes @ 0x0
   440  0070                     	ds	1
   441  0071                     ??_UART_Write_String:
   442  0071                     UART_Write_String@i:	
   443                           ; 1 bytes @ 0x1
   444                           
   445                           
   446                           ; 2 bytes @ 0x1
   447  0071                     	ds	2
   448  0073                     UART_Write_String@buf:
   449                           
   450                           ; 1 bytes @ 0x3
   451  0073                     	ds	1
   452  0074                     ??_main:
   453                           
   454                           ; 1 bytes @ 0x4
   455  0074                     	ds	3
   456                           
   457                           	psect	maintext
   458  07A5                     __pmaintext:	
   459 ;;
   460 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   461 ;;
   462 ;; *************** function _main *****************
   463 ;; Defined at:
   464 ;;		line 60 in file "main_prueba_uart.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      void 
   471 ;; Registers used:
   472 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   473 ;; Tracked objects:
   474 ;;		On entry : B00/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   478 ;;      Params:         0       0       0       0       0
   479 ;;      Locals:         0       0       0       0       0
   480 ;;      Temps:          3       0       0       0       0
   481 ;;      Totals:         3       0       0       0       0
   482 ;;Total ram usage:        3 bytes
   483 ;; Hardware stack levels required when called:    2
   484 ;; This function calls:
   485 ;;		_UART_TX_Init
   486 ;;		_UART_Write_String
   487 ;;		_setOsc
   488 ;;		_setup
   489 ;; This function is called by:
   490 ;;		Startup code after reset
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           
   495                           ;psect for function _main
   496  07A5                     _main:
   497  07A5                     l785:	
   498                           ;incstack = 0
   499                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   500                           
   501                           
   502                           ;main_prueba_uart.c: 61:     setup();
   503  07A5  120A  118A  276C  120A  118A  	fcall	_setup
   504                           
   505                           ;main_prueba_uart.c: 62:     UART_TX_Init();
   506  07AA  120A  118A  275A  120A  118A  	fcall	_UART_TX_Init
   507                           
   508                           ;main_prueba_uart.c: 63:     setOsc();
   509  07AF  120A  118A  2741  120A  118A  	fcall	_setOsc
   510  07B4                     l787:
   511                           
   512                           ;main_prueba_uart.c: 68:  {;main_prueba_uart.c: 69:         RD2 = !RD2;
   513  07B4  3004               	movlw	4
   514  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   515  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   516  07B7  0688               	xorwf	8,f
   517  07B8                     l789:
   518                           
   519                           ;main_prueba_uart.c: 82:           UART_Write_String("1");
   520  07B8  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   521  07B9  120A  118A  2780  120A  118A  	fcall	_UART_Write_String
   522  07BE                     l791:
   523                           
   524                           ;main_prueba_uart.c: 86:         if(RCIF==1){
   525  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   526  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   527  07C0  1E8C               	btfss	12,5	;volatile
   528  07C1  2FC3               	goto	u81
   529  07C2  2FC4               	goto	u80
   530  07C3                     u81:
   531  07C3  2FD6               	goto	l803
   532  07C4                     u80:
   533  07C4                     l793:
   534                           
   535                           ;main_prueba_uart.c: 91:             recibido = RCREG;
   536  07C4  081A               	movf	26,w	;volatile
   537  07C5  00F4               	movwf	??_main
   538  07C6  0874               	movf	??_main,w
   539  07C7  00F8               	movwf	_recibido
   540  07C8                     l795:
   541                           
   542                           ;main_prueba_uart.c: 92:             if(recibido > 0) {
   543  07C8  0878               	movf	_recibido,w
   544  07C9  1903               	btfsc	3,2
   545  07CA  2FCC               	goto	u91
   546  07CB  2FCD               	goto	u90
   547  07CC                     u91:
   548  07CC  2FCE               	goto	l799
   549  07CD                     u90:
   550  07CD                     l797:
   551                           
   552                           ;main_prueba_uart.c: 93:                 PORTDbits.RD0 = 1;
   553  07CD  1408               	bsf	8,0	;volatile
   554  07CE                     l799:
   555                           
   556                           ;main_prueba_uart.c: 95:             if(recibido == 0) {
   557  07CE  0878               	movf	_recibido,w
   558  07CF  1D03               	btfss	3,2
   559  07D0  2FD2               	goto	u101
   560  07D1  2FD3               	goto	u100
   561  07D2                     u101:
   562  07D2  2FD5               	goto	l64
   563  07D3                     u100:
   564  07D3                     l801:
   565                           
   566                           ;main_prueba_uart.c: 96:                 PORTCbits.RC2 = 1;
   567  07D3  1507               	bsf	7,2	;volatile
   568                           
   569                           ;main_prueba_uart.c: 97:             }
   570  07D4  2FD6               	goto	l803
   571  07D5                     l64:	
   572                           ;main_prueba_uart.c: 98:             else {
   573                           
   574                           
   575                           ;main_prueba_uart.c: 99:                 PORTCbits.RC1 = 1;
   576  07D5  1487               	bsf	7,1	;volatile
   577  07D6                     l803:
   578                           
   579                           ;main_prueba_uart.c: 110:         contador++;
   580  07D6  3001               	movlw	1
   581  07D7  00F4               	movwf	??_main
   582  07D8  0874               	movf	??_main,w
   583  07D9  07F7               	addwf	_contador,f
   584  07DA                     l805:
   585                           
   586                           ;main_prueba_uart.c: 112:         _delay((unsigned long)((500)*(8000000/4000.0)));
   587  07DA  3006               	movlw	6
   588  07DB  00F6               	movwf	??_main+2
   589  07DC  3013               	movlw	19
   590  07DD  00F5               	movwf	??_main+1
   591  07DE  30AD               	movlw	173
   592  07DF  00F4               	movwf	??_main
   593  07E0                     u117:
   594  07E0  0BF4               	decfsz	??_main,f
   595  07E1  2FE0               	goto	u117
   596  07E2  0BF5               	decfsz	??_main+1,f
   597  07E3  2FE0               	goto	u117
   598  07E4  0BF6               	decfsz	??_main+2,f
   599  07E5  2FE0               	goto	u117
   600  07E6  2FE7               	nop2
   601  07E7  2FB4               	goto	l787
   602  07E8  120A  118A  2800   	ljmp	start
   603  07EB                     __end_of_main:
   604                           
   605                           	psect	text1
   606  076C                     __ptext1:	
   607 ;; *************** function _setup *****************
   608 ;; Defined at:
   609 ;;		line 120 in file "main_prueba_uart.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, status,2
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   623 ;;      Params:         0       0       0       0       0
   624 ;;      Locals:         0       0       0       0       0
   625 ;;      Temps:          0       0       0       0       0
   626 ;;      Totals:         0       0       0       0       0
   627 ;;Total ram usage:        0 bytes
   628 ;; Hardware stack levels used:    1
   629 ;; This function calls:
   630 ;;		Nothing
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           
   637                           ;psect for function _setup
   638  076C                     _setup:
   639  076C                     l715:	
   640                           ;incstack = 0
   641                           ; Regs used in _setup: [wreg+status,2]
   642                           
   643                           
   644                           ;main_prueba_uart.c: 121:     ANSEL = 0b00000000;
   645  076C  1683               	bsf	3,5	;RP0=1, select bank3
   646  076D  1703               	bsf	3,6	;RP1=1, select bank3
   647  076E  0188               	clrf	8	;volatile
   648                           
   649                           ;main_prueba_uart.c: 122:     ANSELH = 0;
   650  076F  0189               	clrf	9	;volatile
   651                           
   652                           ;main_prueba_uart.c: 124:     PORTA = 0;
   653  0770  1283               	bcf	3,5	;RP0=0, select bank0
   654  0771  1303               	bcf	3,6	;RP1=0, select bank0
   655  0772  0185               	clrf	5	;volatile
   656                           
   657                           ;main_prueba_uart.c: 125:     PORTB = 0;
   658  0773  0186               	clrf	6	;volatile
   659                           
   660                           ;main_prueba_uart.c: 126:     PORTC = 0;
   661  0774  0187               	clrf	7	;volatile
   662                           
   663                           ;main_prueba_uart.c: 127:     PORTD = 0;
   664  0775  0188               	clrf	8	;volatile
   665                           
   666                           ;main_prueba_uart.c: 128:     PORTE = 0;
   667  0776  0189               	clrf	9	;volatile
   668                           
   669                           ;main_prueba_uart.c: 130:     TRISA = 0b00000000;
   670  0777  1683               	bsf	3,5	;RP0=1, select bank1
   671  0778  1303               	bcf	3,6	;RP1=0, select bank1
   672  0779  0185               	clrf	5	;volatile
   673                           
   674                           ;main_prueba_uart.c: 131:     TRISB = 0;
   675  077A  0186               	clrf	6	;volatile
   676  077B                     l717:
   677                           
   678                           ;main_prueba_uart.c: 132:     TRISC = 0b10000000;
   679  077B  3080               	movlw	128
   680  077C  0087               	movwf	7	;volatile
   681  077D                     l719:
   682                           
   683                           ;main_prueba_uart.c: 133:     TRISD = 0;
   684  077D  0188               	clrf	8	;volatile
   685  077E                     l721:
   686                           
   687                           ;main_prueba_uart.c: 134:     TRISE = 0;
   688  077E  0189               	clrf	9	;volatile
   689  077F                     l71:
   690  077F  0008               	return
   691  0780                     __end_of_setup:
   692                           
   693                           	psect	text2
   694  0741                     __ptext2:	
   695 ;; *************** function _setOsc *****************
   696 ;; Defined at:
   697 ;;		line 137 in file "main_prueba_uart.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, status,2, status,0
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   711 ;;      Params:         0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0
   714 ;;      Totals:         0       0       0       0       0
   715 ;;Total ram usage:        0 bytes
   716 ;; Hardware stack levels used:    1
   717 ;; This function calls:
   718 ;;		Nothing
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           
   725                           ;psect for function _setOsc
   726  0741                     _setOsc:
   727  0741                     l739:	
   728                           ;incstack = 0
   729                           ; Regs used in _setOsc: [wreg+status,2+status,0]
   730                           
   731                           
   732                           ;main_prueba_uart.c: 138:     OSCCONbits.IRCF = 0b111;
   733  0741  3070               	movlw	112
   734  0742  1683               	bsf	3,5	;RP0=1, select bank1
   735  0743  1303               	bcf	3,6	;RP1=0, select bank1
   736  0744  048F               	iorwf	15,f	;volatile
   737  0745                     l74:
   738  0745  0008               	return
   739  0746                     __end_of_setOsc:
   740                           
   741                           	psect	text3
   742  0780                     __ptext3:	
   743 ;; *************** function _UART_Write_String *****************
   744 ;; Defined at:
   745 ;;		line 39 in file "USART.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  buf             1    wreg     PTR unsigned char 
   748 ;;		 -> STR_1(2), 
   749 ;; Auto vars:     Size  Location     Type
   750 ;;  buf             1    3[COMMON] PTR unsigned char 
   751 ;;		 -> STR_1(2), 
   752 ;;  i               2    1[COMMON] int 
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   762 ;;      Params:         0       0       0       0       0
   763 ;;      Locals:         3       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0
   765 ;;      Totals:         3       0       0       0       0
   766 ;;Total ram usage:        3 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; Hardware stack levels required when called:    1
   769 ;; This function calls:
   770 ;;		_UART_Write
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           
   777                           ;psect for function _UART_Write_String
   778  0780                     _UART_Write_String:
   779                           
   780                           ;incstack = 0
   781                           ; Regs used in _UART_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   782                           ;UART_Write_String@buf stored from wreg
   783  0780  00F3               	movwf	UART_Write_String@buf
   784  0781                     l777:
   785                           
   786                           ;USART.c: 39: void UART_Write_String(char* buf);USART.c: 40: {;USART.c: 41:     int i=0;
   787  0781  01F1               	clrf	UART_Write_String@i
   788  0782  01F2               	clrf	UART_Write_String@i+1
   789                           
   790                           ;USART.c: 42:     while(buf[i] != '\0')
   791  0783  2F97               	goto	l783
   792  0784                     l779:
   793                           
   794                           ;USART.c: 43:         UART_Write(buf[i++]);
   795  0784  0871               	movf	UART_Write_String@i,w
   796  0785  0773               	addwf	UART_Write_String@buf,w
   797  0786  0084               	movwf	4
   798  0787  120A  118A  2003  120A  118A  	fcall	stringdir
   799  078C  120A  118A  274E  120A  118A  	fcall	_UART_Write
   800  0791                     l781:
   801  0791  3001               	movlw	1
   802  0792  07F1               	addwf	UART_Write_String@i,f
   803  0793  1803               	skipnc
   804  0794  0AF2               	incf	UART_Write_String@i+1,f
   805  0795  3000               	movlw	0
   806  0796  07F2               	addwf	UART_Write_String@i+1,f
   807  0797                     l783:
   808                           
   809                           ;USART.c: 42:     while(buf[i] != '\0')
   810  0797  0871               	movf	UART_Write_String@i,w
   811  0798  0773               	addwf	UART_Write_String@buf,w
   812  0799  0084               	movwf	4
   813  079A  120A  118A  2003  120A  118A  	fcall	stringdir
   814  079F  3A00               	xorlw	0
   815  07A0  1D03               	skipz
   816  07A1  2FA3               	goto	u71
   817  07A2  2FA4               	goto	u70
   818  07A3                     u71:
   819  07A3  2F84               	goto	l779
   820  07A4                     u70:
   821  07A4                     l113:
   822  07A4  0008               	return
   823  07A5                     __end_of_UART_Write_String:
   824                           
   825                           	psect	text4
   826  074E                     __ptext4:	
   827 ;; *************** function _UART_Write *****************
   828 ;; Defined at:
   829 ;;		line 33 in file "USART.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;  data            1    wreg     unsigned char 
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  data            1    0[COMMON] unsigned char 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   843 ;;      Params:         0       0       0       0       0
   844 ;;      Locals:         1       0       0       0       0
   845 ;;      Temps:          0       0       0       0       0
   846 ;;      Totals:         1       0       0       0       0
   847 ;;Total ram usage:        1 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; This function calls:
   850 ;;		Nothing
   851 ;; This function is called by:
   852 ;;		_UART_Write_String
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           
   857                           ;psect for function _UART_Write
   858  074E                     _UART_Write:
   859                           
   860                           ;incstack = 0
   861                           ; Regs used in _UART_Write: [wreg]
   862                           ;UART_Write@data stored from wreg
   863  074E  00F0               	movwf	UART_Write@data
   864  074F                     l711:
   865  074F                     l104:	
   866                           ;USART.c: 33: void UART_Write(unsigned char data);USART.c: 34: {;USART.c: 35:   while(!T
      +                          RMT);
   867                           
   868  074F  1683               	bsf	3,5	;RP0=1, select bank1
   869  0750  1303               	bcf	3,6	;RP1=0, select bank1
   870  0751  1C98               	btfss	24,1	;volatile
   871  0752  2F54               	goto	u11
   872  0753  2F55               	goto	u10
   873  0754                     u11:
   874  0754  2F4F               	goto	l104
   875  0755                     u10:
   876  0755                     l713:
   877                           
   878                           ;USART.c: 36:   TXREG = data;
   879  0755  0870               	movf	UART_Write@data,w
   880  0756  1283               	bcf	3,5	;RP0=0, select bank0
   881  0757  1303               	bcf	3,6	;RP1=0, select bank0
   882  0758  0099               	movwf	25	;volatile
   883  0759                     l107:
   884  0759  0008               	return
   885  075A                     __end_of_UART_Write:
   886                           
   887                           	psect	text5
   888  075A                     __ptext5:	
   889 ;; *************** function _UART_TX_Init *****************
   890 ;; Defined at:
   891 ;;		line 18 in file "USART.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   905 ;;      Params:         0       0       0       0       0
   906 ;;      Locals:         0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0
   908 ;;      Totals:         0       0       0       0       0
   909 ;;Total ram usage:        0 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; This function calls:
   912 ;;		Nothing
   913 ;; This function is called by:
   914 ;;		_main
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           
   919                           ;psect for function _UART_TX_Init
   920  075A                     _UART_TX_Init:
   921  075A                     l723:	
   922                           ;incstack = 0
   923                           ; Regs used in _UART_TX_Init: [wreg]
   924                           
   925                           
   926                           ;USART.c: 20:   BRGH = 0;
   927  075A  1683               	bsf	3,5	;RP0=1, select bank1
   928  075B  1303               	bcf	3,6	;RP1=0, select bank1
   929  075C  1118               	bcf	24,2	;volatile
   930  075D                     l725:
   931                           
   932                           ;USART.c: 21:   SPBRG = 12;
   933  075D  300C               	movlw	12
   934  075E  0099               	movwf	25	;volatile
   935  075F                     l727:
   936                           
   937                           ;USART.c: 23:   SYNC = 0;
   938  075F  1218               	bcf	24,4	;volatile
   939  0760                     l729:
   940                           
   941                           ;USART.c: 24:   SPEN = 1;
   942  0760  1283               	bcf	3,5	;RP0=0, select bank0
   943  0761  1303               	bcf	3,6	;RP1=0, select bank0
   944  0762  1798               	bsf	24,7	;volatile
   945  0763                     l731:
   946                           
   947                           ;USART.c: 26:   TRISC6 = 0;
   948  0763  1683               	bsf	3,5	;RP0=1, select bank1
   949  0764  1303               	bcf	3,6	;RP1=0, select bank1
   950  0765  1307               	bcf	7,6	;volatile
   951  0766                     l733:
   952                           
   953                           ;USART.c: 27:   TRISC7 = 1;
   954  0766  1787               	bsf	7,7	;volatile
   955  0767                     l735:
   956                           
   957                           ;USART.c: 28:   TXEN = 1;
   958  0767  1698               	bsf	24,5	;volatile
   959  0768                     l737:
   960                           
   961                           ;USART.c: 30:   RCSTAbits.CREN = 1;
   962  0768  1283               	bcf	3,5	;RP0=0, select bank0
   963  0769  1303               	bcf	3,6	;RP1=0, select bank0
   964  076A  1618               	bsf	24,4	;volatile
   965  076B                     l101:
   966  076B  0008               	return
   967  076C                     __end_of_UART_TX_Init:
   968  007E                     btemp	set	126	;btemp
   969  007E                     wtemp0	set	126
   970                           
   971                           	psect	config
   972                           
   973                           ;Config register CONFIG1 @ 0x2007
   974                           ;	Oscillator Selection bits
   975                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   976                           ;	Watchdog Timer Enable bit
   977                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   978                           ;	Power-up Timer Enable bit
   979                           ;	PWRTE = OFF, PWRT disabled
   980                           ;	RE3/MCLR pin function select bit
   981                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   982                           ;	Code Protection bit
   983                           ;	CP = OFF, Program memory code protection is disabled
   984                           ;	Data Code Protection bit
   985                           ;	CPD = OFF, Data memory code protection is disabled
   986                           ;	Brown Out Reset Selection bits
   987                           ;	BOREN = OFF, BOR disabled
   988                           ;	Internal External Switchover bit
   989                           ;	IESO = ON, Internal/External Switchover mode is enabled
   990                           ;	Fail-Safe Clock Monitor Enabled bit
   991                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   992                           ;	Low Voltage Programming Enable bit
   993                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   994                           ;	In-Circuit Debugger Mode bit
   995                           ;	DEBUG = 0x1, unprogrammed default
   996  2007                     	org	8199
   997  2007  2CD4               	dw	11476
   998                           
   999                           ;Config register CONFIG2 @ 0x2008
  1000                           ;	Brown-out Reset Selection bit
  1001                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  1002                           ;	Flash Program Memory Self Write Enable bits
  1003                           ;	WRT = OFF, Write protection off
  1004  2008                     	org	8200
  1005  2008  3EFF               	dw	16127

Data Sizes:
    Strings     2
    Constant    0
    Data        1
    BSS         62
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      0      60
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Write_String@buf	PTR unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _main->_UART_Write_String
    _UART_Write_String->_UART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     138
                                              4 COMMON     3     3      0
                       _UART_TX_Init
                  _UART_Write_String
                             _setOsc
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setOsc                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Write_String                                    3     3      0     138
                                              1 COMMON     3     3      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_TX_Init
   _UART_Write_String
     _UART_Write
   _setOsc
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      3C       5       75.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      46      12        0.0%
ABS                  0      0      46       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 17:31:13 2021

                         pc 0002                          l71 077F                          l64 07D5  
                        l74 0745                          u10 0755                          u11 0754  
                        u70 07A4                          u71 07A3                          u80 07C4  
                        u81 07C3                          u90 07CD                          u91 07CC  
                        fsr 0004  __size_of_UART_Write_String 0025                         l101 076B  
                       l104 074F                         l113 07A4                         l107 0759  
                       l711 074F                         l713 0755                         l721 077E  
                       l801 07D3                         l731 0763                         l723 075A  
                       l715 076C                         l803 07D6                         l733 0766  
                       l725 075D                         l717 077B                         l805 07DA  
                       l735 0767                         l727 075F                         l719 077D  
                       l737 0768                         l729 0760                         l739 0741  
                       l781 0791                         l783 0797                         l791 07BE  
                       l777 0781                         l793 07C4                         l785 07A5  
                       l779 0784                         l795 07C8                         l787 07B4  
                       l797 07CD                         l789 07B8                         l799 07CE  
                       _RD2 0042                         u100 07D3                         u101 07D2  
                       u117 07E0                         fsr0 0004                         indf 0000  
                      STR_1 0009                        _BRGH 04C2                        _RCIF 0065  
                      _SPEN 00C7                        _TRMT 04C1                        _TXEN 04C5  
                      _SYNC 04C4                        _main 07A5                        btemp 007E  
                      start 0000                       ?_main 0070                       _ANSEL 0188  
                     _RCREG 001A                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _TXREG 0019                 ?_UART_Write 0070                       _setup 076C  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __initialization 07EB                __end_of_main 07EB                      ??_main 0074  
                    ?_setup 0070                      _ANSELH 0189                      _TRISC6 043E  
                    _TRISC7 043F         __size_of_UART_Write 000C                      _buffer 0020  
                    _setOsc 0741                __pdataCOMMON 0079     __end_of__initialization 07FC  
            __pcstackCOMMON 0070               __end_of_setup 0780                     ??_setup 0070  
                __pbssBANK0 0020                  __pmaintext 07A5                     ?_setOsc 0070  
              ??_UART_Write 0070               ?_UART_TX_Init 0070                  __stringtab 0003  
        __end_of_UART_Write 075A             __size_of_setOsc 0005                     __ptext1 076C  
                   __ptext2 0741                     __ptext3 0780                     __ptext4 074E  
                   __ptext5 075A              ??_UART_TX_Init 0070                     clrloop0 0747  
      end_of_initialization 07FC                   _RCSTAbits 0018                   _PORTCbits 0007  
                 _PORTDbits 0008              UART_Write@data 0070               __pidataCOMMON 0740  
            __end_of_setOsc 0746         start_initialization 07EB        __end_of_UART_TX_Init 076C  
                  ??_setOsc 0070                 __pbssCOMMON 0077                   ___latbits 0002  
                 __pstrings 0003                   _contador2 0079              __size_of_setup 0014  
                 clear_ram0 0746        UART_Write_String@buf 0073                 __stringbase 0008  
     __size_of_UART_TX_Init 0012          __end_of__stringtab 0009           _UART_Write_String 0780  
        ?_UART_Write_String 0070                    _contador 0077                _UART_TX_Init 075A  
       ??_UART_Write_String 0071               __size_of_main 0046                    _recibido 0078  
                  _pantalla 0048   __end_of_UART_Write_String 07A5                   stringcode 0003  
                _OSCCONbits 008F          UART_Write_String@i 0071                    stringdir 0003  
                  stringtab 0003                  _UART_Write 074E  
