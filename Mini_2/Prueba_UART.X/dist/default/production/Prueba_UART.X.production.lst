

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 18:05:05 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  008F                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  0105                     	;# 
   145  0107                     	;# 
   146  0108                     	;# 
   147  0109                     	;# 
   148  010C                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0185                     	;# 
   154  0187                     	;# 
   155  0188                     	;# 
   156  0189                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001B                     	;# 
   189  001B                     	;# 
   190  001C                     	;# 
   191  001D                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  0086                     	;# 
   197  0087                     	;# 
   198  0088                     	;# 
   199  0089                     	;# 
   200  008C                     	;# 
   201  008D                     	;# 
   202  008E                     	;# 
   203  008F                     	;# 
   204  0090                     	;# 
   205  0091                     	;# 
   206  0092                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0097                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  0105                     	;# 
   223  0107                     	;# 
   224  0108                     	;# 
   225  0109                     	;# 
   226  010C                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  0185                     	;# 
   232  0187                     	;# 
   233  0188                     	;# 
   234  0189                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  001D                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  0081                     	;# 
   273  0085                     	;# 
   274  0086                     	;# 
   275  0087                     	;# 
   276  0088                     	;# 
   277  0089                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  008F                     	;# 
   282  0090                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0095                     	;# 
   290  0096                     	;# 
   291  0097                     	;# 
   292  0098                     	;# 
   293  0099                     	;# 
   294  009A                     	;# 
   295  009B                     	;# 
   296  009C                     	;# 
   297  009D                     	;# 
   298  009E                     	;# 
   299  009F                     	;# 
   300  0105                     	;# 
   301  0107                     	;# 
   302  0108                     	;# 
   303  0109                     	;# 
   304  010C                     	;# 
   305  010C                     	;# 
   306  010D                     	;# 
   307  010E                     	;# 
   308  010F                     	;# 
   309  0185                     	;# 
   310  0187                     	;# 
   311  0188                     	;# 
   312  0189                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315                           
   316                           	psect	idataBANK1
   317  0800                     __pidataBANK1:
   318                           
   319                           ;initializer for _contador2
   320  0800  3401               	retlw	1
   321                           
   322                           	psect	strings
   323  0003                     __pstrings:
   324  0003                     stringtab:
   325  0003                     __stringtab:
   326                           
   327                           ;	String table - string pointers are 1 byte each
   328  0003  1BFF               	btfsc	btemp+1,7
   329  0004  280D               	ljmp	stringcode
   330  0005  1383               	bcf	3,7
   331  0006  187F               	btfsc	btemp+1,0
   332  0007  1783               	bsf	3,7
   333  0008  0800               	movf	0,w
   334  0009  0A84               	incf	4,f
   335  000A  1903               	skipnz
   336  000B  0AFF               	incf	btemp+1,f
   337  000C  0008               	return
   338  000D                     stringcode:
   339  000D                     stringdir:
   340  000D  3000               	movlw	high stringdir
   341  000E  008A               	movwf	10
   342  000F  0804               	movf	4,w
   343  0010  0A84               	incf	4,f
   344  0011  0782               	addwf	2,f
   345  0012                     __stringbase:
   346  0012  3400               	retlw	0
   347  0013                     __end_of__stringtab:
   348  0013                     __powers_:
   349  0013  3400               	retlw	0
   350  0014  3400               	retlw	0
   351  0015  3480               	retlw	128
   352  0016  343F               	retlw	63
   353  0017  3400               	retlw	0
   354  0018  3400               	retlw	0
   355  0019  3420               	retlw	32
   356  001A  3441               	retlw	65
   357  001B  3400               	retlw	0
   358  001C  3400               	retlw	0
   359  001D  34C8               	retlw	200
   360  001E  3442               	retlw	66
   361  001F  3400               	retlw	0
   362  0020  3400               	retlw	0
   363  0021  347A               	retlw	122
   364  0022  3444               	retlw	68
   365  0023  3400               	retlw	0
   366  0024  3440               	retlw	64
   367  0025  341C               	retlw	28
   368  0026  3446               	retlw	70
   369  0027  3400               	retlw	0
   370  0028  3450               	retlw	80
   371  0029  34C3               	retlw	195
   372  002A  3447               	retlw	71
   373  002B  3400               	retlw	0
   374  002C  3424               	retlw	36
   375  002D  3474               	retlw	116
   376  002E  3449               	retlw	73
   377  002F  3480               	retlw	128
   378  0030  3496               	retlw	150
   379  0031  3418               	retlw	24
   380  0032  344B               	retlw	75
   381  0033  3420               	retlw	32
   382  0034  34BC               	retlw	188
   383  0035  34BE               	retlw	190
   384  0036  344C               	retlw	76
   385  0037  3428               	retlw	40
   386  0038  346B               	retlw	107
   387  0039  346E               	retlw	110
   388  003A  344E               	retlw	78
   389  003B  34F9               	retlw	249
   390  003C  3402               	retlw	2
   391  003D  3415               	retlw	21
   392  003E  3450               	retlw	80
   393  003F  34EC               	retlw	236
   394  0040  3478               	retlw	120
   395  0041  34AD               	retlw	173
   396  0042  3460               	retlw	96
   397  0043  34CA               	retlw	202
   398  0044  34F2               	retlw	242
   399  0045  3449               	retlw	73
   400  0046  3471               	retlw	113
   401  0047                     __end_of__powers_:
   402  0047                     __npowers_:
   403  0047  3400               	retlw	0
   404  0048  3400               	retlw	0
   405  0049  3480               	retlw	128
   406  004A  343F               	retlw	63
   407  004B  34CD               	retlw	205
   408  004C  34CC               	retlw	204
   409  004D  34CC               	retlw	204
   410  004E  343D               	retlw	61
   411  004F  340A               	retlw	10
   412  0050  34D7               	retlw	215
   413  0051  3423               	retlw	35
   414  0052  343C               	retlw	60
   415  0053  346F               	retlw	111
   416  0054  3412               	retlw	18
   417  0055  3483               	retlw	131
   418  0056  343A               	retlw	58
   419  0057  3417               	retlw	23
   420  0058  34B7               	retlw	183
   421  0059  34D1               	retlw	209
   422  005A  3438               	retlw	56
   423  005B  34AC               	retlw	172
   424  005C  34C5               	retlw	197
   425  005D  3427               	retlw	39
   426  005E  3437               	retlw	55
   427  005F  34BD               	retlw	189
   428  0060  3437               	retlw	55
   429  0061  3486               	retlw	134
   430  0062  3435               	retlw	53
   431  0063  3495               	retlw	149
   432  0064  34BF               	retlw	191
   433  0065  34D6               	retlw	214
   434  0066  3433               	retlw	51
   435  0067  3477               	retlw	119
   436  0068  34CC               	retlw	204
   437  0069  342B               	retlw	43
   438  006A  3432               	retlw	50
   439  006B  345F               	retlw	95
   440  006C  3470               	retlw	112
   441  006D  3489               	retlw	137
   442  006E  3430               	retlw	48
   443  006F  34FF               	retlw	255
   444  0070  34E6               	retlw	230
   445  0071  34DB               	retlw	219
   446  0072  342E               	retlw	46
   447  0073  3408               	retlw	8
   448  0074  34E5               	retlw	229
   449  0075  343C               	retlw	60
   450  0076  341E               	retlw	30
   451  0077  3460               	retlw	96
   452  0078  3442               	retlw	66
   453  0079  34A2               	retlw	162
   454  007A  340D               	retlw	13
   455  007B                     __end_of__npowers_:
   456  007B                     _dpowers:
   457  007B  3401               	retlw	1
   458  007C  3400               	retlw	0
   459  007D  3400               	retlw	0
   460  007E  3400               	retlw	0
   461  007F  340A               	retlw	10
   462  0080  3400               	retlw	0
   463  0081  3400               	retlw	0
   464  0082  3400               	retlw	0
   465  0083  3464               	retlw	100
   466  0084  3400               	retlw	0
   467  0085  3400               	retlw	0
   468  0086  3400               	retlw	0
   469  0087  34E8               	retlw	232
   470  0088  3403               	retlw	3
   471  0089  3400               	retlw	0
   472  008A  3400               	retlw	0
   473  008B  3410               	retlw	16
   474  008C  3427               	retlw	39
   475  008D  3400               	retlw	0
   476  008E  3400               	retlw	0
   477  008F  34A0               	retlw	160
   478  0090  3486               	retlw	134
   479  0091  3401               	retlw	1
   480  0092  3400               	retlw	0
   481  0093  3440               	retlw	64
   482  0094  3442               	retlw	66
   483  0095  340F               	retlw	15
   484  0096  3400               	retlw	0
   485  0097  3480               	retlw	128
   486  0098  3496               	retlw	150
   487  0099  3498               	retlw	152
   488  009A  3400               	retlw	0
   489  009B  3400               	retlw	0
   490  009C  34E1               	retlw	225
   491  009D  34F5               	retlw	245
   492  009E  3405               	retlw	5
   493  009F  3400               	retlw	0
   494  00A0  34CA               	retlw	202
   495  00A1  349A               	retlw	154
   496  00A2  343B               	retlw	59
   497  00A3                     __end_of_dpowers:
   498  001A                     _RCREG	set	26
   499  0019                     _TXREG	set	25
   500  0018                     _RCSTAbits	set	24
   501  0009                     _PORTE	set	9
   502  0008                     _PORTD	set	8
   503  0007                     _PORTC	set	7
   504  0006                     _PORTB	set	6
   505  0005                     _PORTA	set	5
   506  0007                     _PORTCbits	set	7
   507  0008                     _PORTDbits	set	8
   508  00C7                     _SPEN	set	199
   509  0065                     _RCIF	set	101
   510  0042                     _RD2	set	66
   511  0099                     _SPBRG	set	153
   512  008F                     _OSCCONbits	set	143
   513  0089                     _TRISE	set	137
   514  0088                     _TRISD	set	136
   515  0087                     _TRISC	set	135
   516  0086                     _TRISB	set	134
   517  0085                     _TRISA	set	133
   518  04C1                     _TRMT	set	1217
   519  04C5                     _TXEN	set	1221
   520  043F                     _TRISC7	set	1087
   521  043E                     _TRISC6	set	1086
   522  04C4                     _SYNC	set	1220
   523  04C2                     _BRGH	set	1218
   524  0189                     _ANSELH	set	393
   525  0188                     _ANSEL	set	392
   526  00A3                     STR_1:
   527  00A3  3456               	retlw	86	;'V'
   528  00A4  3431               	retlw	49	;'1'
   529  00A5  3420               	retlw	32	;' '
   530  00A6  3420               	retlw	32	;' '
   531  00A7  3420               	retlw	32	;' '
   532  00A8  3420               	retlw	32	;' '
   533  00A9  3420               	retlw	32	;' '
   534  00AA  3456               	retlw	86	;'V'
   535  00AB  3432               	retlw	50	;'2'
   536  00AC  3420               	retlw	32	;' '
   537  00AD  3420               	retlw	32	;' '
   538  00AE  3420               	retlw	32	;' '
   539  00AF  3443               	retlw	67	;'C'
   540  00B0  344F               	retlw	79	;'O'
   541  00B1  344E               	retlw	78	;'N'
   542  00B2  3454               	retlw	84	;'T'
   543  00B3  3400               	retlw	0
   544  00B4                     STR_2:
   545  00B4  3425               	retlw	37	;'%'
   546  00B5  3431               	retlw	49	;'1'
   547  00B6  342E               	retlw	46	;'.'
   548  00B7  3432               	retlw	50	;'2'
   549  00B8  3466               	retlw	102	;'f'
   550  00B9  3420               	retlw	32	;' '
   551  00BA  3420               	retlw	32	;' '
   552  00BB  3420               	retlw	32	;' '
   553  00BC  3425               	retlw	37	;'%'
   554  00BD  3433               	retlw	51	;'3'
   555  00BE  3464               	retlw	100	;'d'
   556  00BF  3420               	retlw	32	;' '
   557  00C0  3425               	retlw	37	;'%'
   558  00C1  3433               	retlw	51	;'3'
   559  00C2  3464               	retlw	100	;'d'
   560  00C3  3400               	retlw	0
   561  00C4                     STR_3:
   562  00C4  3425               	retlw	37	;'%'
   563  00C5  3464               	retlw	100	;'d'
   564  00C6  3400               	retlw	0
   565  00C7                     STR_4:
   566  00C7  3431               	retlw	49	;'1'
   567  00C8  3400               	retlw	0
   568                           
   569                           	psect	cinit
   570  07E2                     start_initialization:	
   571                           ; #config settings
   572                           
   573  07E2                     __initialization:
   574                           
   575                           ; Initialize objects allocated to BANK1
   576  07E2  1683               	bsf	3,5	;RP0=1, select bank1
   577  07E3  1303               	bcf	3,6	;RP1=0, select bank1
   578  07E4  120A  158A  2000  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   579  07E9  00E5               	movwf	__pdataBANK1& (0+127)
   580                           
   581                           ; Clear objects allocated to BANK3
   582  07EA  1783               	bsf	3,7	;select IRP bank2
   583  07EB  3090               	movlw	low __pbssBANK3
   584  07EC  0084               	movwf	4
   585  07ED  30B8               	movlw	low (__pbssBANK3+40)
   586  07EE  160A  158A  2341  120A  118A  	fcall	clear_ram0
   587                           
   588                           ; Clear objects allocated to BANK1
   589  07F3  1383               	bcf	3,7	;select IRP bank0
   590  07F4  30CF               	movlw	low __pbssBANK1
   591  07F5  0084               	movwf	4
   592  07F6  30E5               	movlw	low (__pbssBANK1+22)
   593  07F7  160A  158A  2341  120A  118A  	fcall	clear_ram0
   594  07FC                     end_of_initialization:	
   595                           ;End of C runtime variable initialization code
   596                           
   597  07FC                     __end_of__initialization:
   598  07FC  0183               	clrf	3
   599  07FD  120A  118A  28D4   	ljmp	_main	;jump to C main() function
   600                           
   601                           	psect	bssBANK1
   602  00CF                     __pbssBANK1:
   603  00CF                     _contador:
   604  00CF                     	ds	1
   605  00D0                     _recibido:
   606  00D0                     	ds	1
   607  00D1                     _pantalla:
   608  00D1                     	ds	20
   609                           
   610                           	psect	dataBANK1
   611  00E5                     __pdataBANK1:
   612  00E5                     _contador2:
   613  00E5                     	ds	1
   614                           
   615                           	psect	bssBANK3
   616  0190                     __pbssBANK3:
   617  0190                     _buffer:
   618  0190                     	ds	40
   619                           
   620                           	psect	clrtext
   621  1B41                     clear_ram0:	
   622                           ;	Called with FSR containing the base address, and
   623                           ;	W with the last address+1
   624                           
   625  1B41  0064               	clrwdt	;clear the watchdog before getting into this loop
   626  1B42                     clrloop0:
   627  1B42  0180               	clrf	0	;clear RAM location pointed to by FSR
   628  1B43  0A84               	incf	4,f	;increment pointer
   629  1B44  0604               	xorwf	4,w	;XOR with final address
   630  1B45  1903               	btfsc	3,2	;have we reached the end yet?
   631  1B46  3400               	retlw	0	;all done for this memory range, return
   632  1B47  0604               	xorwf	4,w	;XOR again to restore value
   633  1B48  2B42               	goto	clrloop0	;do the next byte
   634                           
   635                           	psect	cstackBANK1
   636  00A0                     __pcstackBANK1:
   637  00A0                     ?_sprintf:
   638  00A0                     sprintf@sp:	
   639                           ; 2 bytes @ 0x0
   640                           
   641                           
   642                           ; 2 bytes @ 0x0
   643  00A0                     	ds	2
   644  00A2                     sprintf@f:
   645                           
   646                           ; 1 bytes @ 0x2
   647  00A2                     	ds	9
   648  00AB                     ??_sprintf:
   649                           
   650                           ; 1 bytes @ 0xB
   651  00AB                     	ds	5
   652  00B0                     _sprintf$928:
   653                           
   654                           ; 4 bytes @ 0x10
   655  00B0                     	ds	4
   656  00B4                     sprintf@ap:
   657                           
   658                           ; 1 bytes @ 0x14
   659  00B4                     	ds	1
   660  00B5                     sprintf@flag:
   661                           
   662                           ; 2 bytes @ 0x15
   663  00B5                     	ds	2
   664  00B7                     sprintf@width:
   665                           
   666                           ; 2 bytes @ 0x17
   667  00B7                     	ds	2
   668  00B9                     sprintf@tmpval:
   669                           
   670                           ; 4 bytes @ 0x19
   671  00B9                     	ds	4
   672  00BD                     sprintf@val:
   673                           
   674                           ; 4 bytes @ 0x1D
   675  00BD                     	ds	4
   676  00C1                     sprintf@eexp:
   677                           
   678                           ; 2 bytes @ 0x21
   679  00C1                     	ds	2
   680  00C3                     sprintf@fval:
   681                           
   682                           ; 4 bytes @ 0x23
   683  00C3                     	ds	4
   684  00C7                     sprintf@prec:
   685                           
   686                           ; 2 bytes @ 0x27
   687  00C7                     	ds	2
   688  00C9                     sprintf@c:
   689                           
   690                           ; 1 bytes @ 0x29
   691  00C9                     	ds	1
   692  00CA                     ??_main:
   693                           
   694                           ; 1 bytes @ 0x2A
   695  00CA                     	ds	5
   696                           
   697                           	psect	cstackCOMMON
   698  0070                     __pcstackCOMMON:
   699  0070                     ?_isdigit:
   700  0070                     ?___fleq:	
   701                           ; 1 bit 
   702                           
   703  0070                     ?___flge:	
   704                           ; 1 bit 
   705                           
   706  0070                     ?_setup:	
   707                           ; 1 bit 
   708                           
   709  0070                     ??_setup:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_UART_TX_Init:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ??_UART_TX_Init:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_setOsc:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ??_setOsc:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_UART_Write:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ??_UART_Write:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ?_USART_Read:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ??_USART_Read:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ??_isdigit:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_main:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?__Umul8_16:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?___wmul:	
   746                           ; 2 bytes @ 0x0
   747                           
   748  0070                     ?___awmod:	
   749                           ; 2 bytes @ 0x0
   750                           
   751  0070                     ?___lwmod:	
   752                           ; 2 bytes @ 0x0
   753                           
   754  0070                     ?__tdiv_to_l_:	
   755                           ; 2 bytes @ 0x0
   756                           
   757  0070                     ?__div_to_l_:	
   758                           ; 4 bytes @ 0x0
   759                           
   760  0070                     ?___lldiv:	
   761                           ; 4 bytes @ 0x0
   762                           
   763  0070                     ?___flneg:	
   764                           ; 4 bytes @ 0x0
   765                           
   766  0070                     ?___xxtofl:	
   767                           ; 4 bytes @ 0x0
   768                           
   769  0070                     UART_Write@data:	
   770                           ; 4 bytes @ 0x0
   771                           
   772  0070                     __Umul8_16@multiplicand:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     _isdigit$759:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ___wmul@multiplier:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ___awmod@divisor:	
   782                           ; 2 bytes @ 0x0
   783                           
   784  0070                     ___lwmod@divisor:	
   785                           ; 2 bytes @ 0x0
   786                           
   787  0070                     ___lldiv@divisor:	
   788                           ; 2 bytes @ 0x0
   789                           
   790  0070                     __div_to_l_@f1:	
   791                           ; 4 bytes @ 0x0
   792                           
   793  0070                     ___fleq@ff1:	
   794                           ; 4 bytes @ 0x0
   795                           
   796  0070                     ___flge@ff1:	
   797                           ; 4 bytes @ 0x0
   798                           
   799  0070                     ___flneg@f1:	
   800                           ; 4 bytes @ 0x0
   801                           
   802  0070                     __tdiv_to_l_@f1:	
   803                           ; 4 bytes @ 0x0
   804                           
   805  0070                     ___xxtofl@val:	
   806                           ; 4 bytes @ 0x0
   807                           
   808                           
   809                           ; 4 bytes @ 0x0
   810  0070                     	ds	1
   811  0071                     ?_UART_Write_String:
   812  0071                     isdigit@c:	
   813                           ; 1 bytes @ 0x1
   814                           
   815  0071                     UART_Write_String@buf:	
   816                           ; 1 bytes @ 0x1
   817                           
   818                           
   819                           ; 2 bytes @ 0x1
   820  0071                     	ds	1
   821  0072                     ??__Umul8_16:
   822  0072                     ___wmul@multiplicand:	
   823                           ; 1 bytes @ 0x2
   824                           
   825  0072                     ___awmod@dividend:	
   826                           ; 2 bytes @ 0x2
   827                           
   828  0072                     ___lwmod@dividend:	
   829                           ; 2 bytes @ 0x2
   830                           
   831                           
   832                           ; 2 bytes @ 0x2
   833  0072                     	ds	1
   834  0073                     ??_UART_Write_String:
   835                           
   836                           ; 1 bytes @ 0x3
   837  0073                     	ds	1
   838  0074                     ??___wmul:
   839  0074                     ??___awmod:	
   840                           ; 1 bytes @ 0x4
   841                           
   842  0074                     ??___flneg:	
   843                           ; 1 bytes @ 0x4
   844                           
   845  0074                     ??___lwmod:	
   846                           ; 1 bytes @ 0x4
   847                           
   848  0074                     ??___xxtofl:	
   849                           ; 1 bytes @ 0x4
   850                           
   851  0074                     ___wmul@product:	
   852                           ; 1 bytes @ 0x4
   853                           
   854  0074                     __Umul8_16@product:	
   855                           ; 2 bytes @ 0x4
   856                           
   857  0074                     ___lldiv@dividend:	
   858                           ; 2 bytes @ 0x4
   859                           
   860  0074                     __div_to_l_@f2:	
   861                           ; 4 bytes @ 0x4
   862                           
   863  0074                     ___fleq@ff2:	
   864                           ; 4 bytes @ 0x4
   865                           
   866  0074                     ___flge@ff2:	
   867                           ; 4 bytes @ 0x4
   868                           
   869  0074                     __tdiv_to_l_@f2:	
   870                           ; 4 bytes @ 0x4
   871                           
   872                           
   873                           ; 4 bytes @ 0x4
   874  0074                     	ds	1
   875  0075                     ___awmod@counter:
   876  0075                     ___lwmod@counter:	
   877                           ; 1 bytes @ 0x5
   878                           
   879                           
   880                           ; 1 bytes @ 0x5
   881  0075                     	ds	1
   882  0076                     ?___lwdiv:
   883  0076                     ___awmod@sign:	
   884                           ; 2 bytes @ 0x6
   885                           
   886  0076                     UART_Write_String@i:	
   887                           ; 1 bytes @ 0x6
   888                           
   889  0076                     ___lwdiv@divisor:	
   890                           ; 2 bytes @ 0x6
   891                           
   892  0076                     __Umul8_16@word_mpld:	
   893                           ; 2 bytes @ 0x6
   894                           
   895                           
   896                           ; 2 bytes @ 0x6
   897  0076                     	ds	1
   898  0077                     ?___awdiv:
   899  0077                     ___awdiv@divisor:	
   900                           ; 2 bytes @ 0x7
   901                           
   902                           
   903                           ; 2 bytes @ 0x7
   904  0077                     	ds	1
   905  0078                     ??__tdiv_to_l_:
   906  0078                     ??__div_to_l_:	
   907                           ; 1 bytes @ 0x8
   908                           
   909  0078                     ??___lldiv:	
   910                           ; 1 bytes @ 0x8
   911                           
   912  0078                     ??___fleq:	
   913                           ; 1 bytes @ 0x8
   914                           
   915  0078                     ??___flge:	
   916                           ; 1 bytes @ 0x8
   917                           
   918  0078                     __Umul8_16@multiplier:	
   919                           ; 1 bytes @ 0x8
   920                           
   921  0078                     ___xxtofl@sign:	
   922                           ; 1 bytes @ 0x8
   923                           
   924  0078                     ___lwdiv@dividend:	
   925                           ; 1 bytes @ 0x8
   926                           
   927                           
   928                           ; 2 bytes @ 0x8
   929  0078                     	ds	1
   930  0079                     ___xxtofl@exp:
   931  0079                     ___awdiv@dividend:	
   932                           ; 1 bytes @ 0x9
   933                           
   934  0079                     ___lldiv@quotient:	
   935                           ; 2 bytes @ 0x9
   936                           
   937                           
   938                           ; 4 bytes @ 0x9
   939  0079                     	ds	1
   940  007A                     ??___lwdiv:
   941  007A                     ___xxtofl@arg:	
   942                           ; 1 bytes @ 0xA
   943                           
   944                           
   945                           ; 4 bytes @ 0xA
   946  007A                     	ds	1
   947  007B                     ??___awdiv:
   948  007B                     ___lwdiv@quotient:	
   949                           ; 1 bytes @ 0xB
   950                           
   951                           
   952                           ; 2 bytes @ 0xB
   953  007B                     	ds	2
   954  007D                     ___lldiv@counter:
   955  007D                     ___lwdiv@counter:	
   956                           ; 1 bytes @ 0xD
   957                           
   958                           
   959                           ; 1 bytes @ 0xD
   960  007D                     	ds	1
   961  007E                     ??___flsub:
   962                           
   963                           	psect	cstackBANK0
   964  0020                     __pcstackBANK0:	
   965                           ; 1 bytes @ 0xE
   966                           
   967  0020                     ?___llmod:
   968  0020                     ___awdiv@counter:	
   969                           ; 4 bytes @ 0x0
   970                           
   971  0020                     __div_to_l_@quot:	
   972                           ; 1 bytes @ 0x0
   973                           
   974  0020                     __tdiv_to_l_@quot:	
   975                           ; 4 bytes @ 0x0
   976                           
   977  0020                     ___llmod@divisor:	
   978                           ; 4 bytes @ 0x0
   979                           
   980                           
   981                           ; 4 bytes @ 0x0
   982  0020                     	ds	1
   983  0021                     ___awdiv@sign:
   984                           
   985                           ; 1 bytes @ 0x1
   986  0021                     	ds	1
   987  0022                     ___awdiv@quotient:
   988                           
   989                           ; 2 bytes @ 0x2
   990  0022                     	ds	2
   991  0024                     ?___flmul:
   992  0024                     __div_to_l_@cntr:	
   993                           ; 4 bytes @ 0x4
   994                           
   995  0024                     __tdiv_to_l_@cntr:	
   996                           ; 1 bytes @ 0x4
   997                           
   998  0024                     ___llmod@dividend:	
   999                           ; 1 bytes @ 0x4
  1000                           
  1001  0024                     ___flmul@b:	
  1002                           ; 4 bytes @ 0x4
  1003                           
  1004                           
  1005                           ; 4 bytes @ 0x4
  1006  0024                     	ds	1
  1007  0025                     __div_to_l_@exp1:
  1008  0025                     __tdiv_to_l_@exp1:	
  1009                           ; 1 bytes @ 0x5
  1010                           
  1011                           
  1012                           ; 1 bytes @ 0x5
  1013  0025                     	ds	3
  1014  0028                     ??___llmod:
  1015  0028                     ___flmul@a:	
  1016                           ; 1 bytes @ 0x8
  1017                           
  1018                           
  1019                           ; 4 bytes @ 0x8
  1020  0028                     	ds	1
  1021  0029                     ___llmod@counter:
  1022                           
  1023                           ; 1 bytes @ 0x9
  1024  0029                     	ds	3
  1025  002C                     ??___flmul:
  1026                           
  1027                           ; 1 bytes @ 0xC
  1028  002C                     	ds	5
  1029  0031                     ___flmul@sign:
  1030                           
  1031                           ; 1 bytes @ 0x11
  1032  0031                     	ds	1
  1033  0032                     ___flmul@grs:
  1034                           
  1035                           ; 4 bytes @ 0x12
  1036  0032                     	ds	4
  1037  0036                     ___flmul@aexp:
  1038                           
  1039                           ; 1 bytes @ 0x16
  1040  0036                     	ds	1
  1041  0037                     ___flmul@bexp:
  1042                           
  1043                           ; 1 bytes @ 0x17
  1044  0037                     	ds	1
  1045  0038                     ___flmul@prod:
  1046                           
  1047                           ; 4 bytes @ 0x18
  1048  0038                     	ds	4
  1049  003C                     ___flmul@temp:
  1050                           
  1051                           ; 2 bytes @ 0x1C
  1052  003C                     	ds	2
  1053  003E                     ?_fround:
  1054  003E                     ?_scale:	
  1055                           ; 4 bytes @ 0x1E
  1056                           
  1057                           
  1058                           ; 4 bytes @ 0x1E
  1059  003E                     	ds	4
  1060  0042                     ??_fround:
  1061  0042                     ??_scale:	
  1062                           ; 1 bytes @ 0x22
  1063                           
  1064                           
  1065                           ; 1 bytes @ 0x22
  1066  0042                     	ds	7
  1067  0049                     _fround$926:
  1068                           
  1069                           ; 4 bytes @ 0x29
  1070  0049                     	ds	3
  1071  004C                     _scale$927:
  1072                           
  1073                           ; 4 bytes @ 0x2C
  1074  004C                     	ds	1
  1075  004D                     _fround$925:
  1076                           
  1077                           ; 4 bytes @ 0x2D
  1078  004D                     	ds	3
  1079  0050                     scale@scl:
  1080                           
  1081                           ; 1 bytes @ 0x30
  1082  0050                     	ds	1
  1083  0051                     ?___fltol:
  1084  0051                     fround@prec:	
  1085                           ; 4 bytes @ 0x31
  1086                           
  1087  0051                     ___fltol@f1:	
  1088                           ; 1 bytes @ 0x31
  1089                           
  1090                           
  1091                           ; 4 bytes @ 0x31
  1092  0051                     	ds	1
  1093  0052                     ?___fladd:
  1094  0052                     ___fladd@b:	
  1095                           ; 4 bytes @ 0x32
  1096                           
  1097                           
  1098                           ; 4 bytes @ 0x32
  1099  0052                     	ds	3
  1100  0055                     ??___fltol:
  1101                           
  1102                           ; 1 bytes @ 0x35
  1103  0055                     	ds	1
  1104  0056                     ___fladd@a:
  1105                           
  1106                           ; 4 bytes @ 0x36
  1107  0056                     	ds	4
  1108  005A                     ??___fladd:
  1109  005A                     ___fltol@sign1:	
  1110                           ; 1 bytes @ 0x3A
  1111                           
  1112                           
  1113                           ; 1 bytes @ 0x3A
  1114  005A                     	ds	1
  1115  005B                     ___fltol@exp1:
  1116                           
  1117                           ; 1 bytes @ 0x3B
  1118  005B                     	ds	7
  1119  0062                     ___fladd@signs:
  1120                           
  1121                           ; 1 bytes @ 0x42
  1122  0062                     	ds	1
  1123  0063                     ___fladd@aexp:
  1124                           
  1125                           ; 1 bytes @ 0x43
  1126  0063                     	ds	1
  1127  0064                     ___fladd@bexp:
  1128                           
  1129                           ; 1 bytes @ 0x44
  1130  0064                     	ds	1
  1131  0065                     ___fladd@grs:
  1132                           
  1133                           ; 1 bytes @ 0x45
  1134  0065                     	ds	1
  1135  0066                     ?___flsub:
  1136  0066                     ___flsub@a:	
  1137                           ; 4 bytes @ 0x46
  1138                           
  1139                           
  1140                           ; 4 bytes @ 0x46
  1141  0066                     	ds	4
  1142  006A                     ___flsub@b:
  1143                           
  1144                           ; 4 bytes @ 0x4A
  1145  006A                     	ds	4
  1146                           
  1147                           	psect	maintext
  1148  00D4                     __pmaintext:	
  1149 ;;
  1150 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1151 ;;
  1152 ;; *************** function _main *****************
  1153 ;; Defined at:
  1154 ;;		line 60 in file "main_prueba_uart.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : B00/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1168 ;;      Params:         0       0       0       0       0
  1169 ;;      Locals:         0       0       0       0       0
  1170 ;;      Temps:          0       0       5       0       0
  1171 ;;      Totals:         0       0       5       0       0
  1172 ;;Total ram usage:        5 bytes
  1173 ;; Hardware stack levels required when called:    4
  1174 ;; This function calls:
  1175 ;;		_UART_TX_Init
  1176 ;;		_UART_Write
  1177 ;;		_UART_Write_String
  1178 ;;		_USART_Read
  1179 ;;		_setOsc
  1180 ;;		_setup
  1181 ;;		_sprintf
  1182 ;; This function is called by:
  1183 ;;		Startup code after reset
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           
  1188                           ;psect for function _main
  1189  00D4                     _main:
  1190  00D4                     l3339:	
  1191                           ;incstack = 0
  1192                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1193                           
  1194                           
  1195                           ;main_prueba_uart.c: 61:     setup();
  1196  00D4  160A  158A  2379  120A  118A  	fcall	_setup
  1197                           
  1198                           ;main_prueba_uart.c: 62:     UART_TX_Init();
  1199  00D9  160A  158A  2355  120A  118A  	fcall	_UART_TX_Init
  1200                           
  1201                           ;main_prueba_uart.c: 63:     setOsc();
  1202  00DE  120A  158A  2001  120A  118A  	fcall	_setOsc
  1203  00E3                     l3341:
  1204                           
  1205                           ;main_prueba_uart.c: 68:  {;main_prueba_uart.c: 69:         RD2 = !RD2;
  1206  00E3  3004               	movlw	4
  1207  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1208  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1209  00E6  0688               	xorwf	8,f
  1210  00E7                     l3343:
  1211                           
  1212                           ;main_prueba_uart.c: 70:         UART_Write_String("V1     V2   CONT");
  1213  00E7  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1214  00E8  00F1               	movwf	UART_Write_String@buf
  1215  00E9  3080               	movlw	128
  1216  00EA  00F2               	movwf	UART_Write_String@buf+1
  1217  00EB  160A  158A  2437  120A  118A  	fcall	_UART_Write_String
  1218  00F0                     l3345:
  1219                           
  1220                           ;main_prueba_uart.c: 71:         UART_Write(13);
  1221  00F0  300D               	movlw	13
  1222  00F1  160A  158A  2349  120A  118A  	fcall	_UART_Write
  1223  00F6                     l3347:
  1224                           
  1225                           ;main_prueba_uart.c: 72:         UART_Write(10);
  1226  00F6  300A               	movlw	10
  1227  00F7  160A  158A  2349  120A  118A  	fcall	_UART_Write
  1228  00FC                     l3349:
  1229                           
  1230                           ;main_prueba_uart.c: 73:         sprintf(pantalla, "%1.2f   %3d %3d", 5.2,contador2,cont
      +                          ador);
  1231  00FC  30D1               	movlw	(low (_pantalla| 0))& (0+255)
  1232  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  1233  00FE  1303               	bcf	3,6	;RP1=0, select bank1
  1234  00FF  00A0               	movwf	sprintf@sp^(0+128)
  1235  0100  3000               	movlw	0
  1236  0101  00A1               	movwf	(sprintf@sp+1)^(0+128)
  1237  0102  30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1238  0103  00CA               	movwf	??_main^(0+128)
  1239  0104  084A               	movf	??_main^(0+128),w
  1240  0105  00A2               	movwf	sprintf@f^(0+128)
  1241  0106  3040               	movlw	64
  1242  0107  00A6               	movwf	((?_sprintf+3)^(0+128)+3)
  1243  0108  30A6               	movlw	166
  1244  0109  00A5               	movwf	((?_sprintf+2)^(0+128)+3)
  1245  010A  3066               	movlw	102
  1246  010B  00A4               	movwf	((?_sprintf+1)^(0+128)+3)
  1247  010C  3066               	movlw	102
  1248  010D  00A3               	movwf	(?_sprintf^(0+128)+3)
  1249  010E  0865               	movf	_contador2^(0+128),w
  1250  010F  00CB               	movwf	(??_main+1)^(0+128)
  1251  0110  01CC               	clrf	((??_main+1)^(0+128)+1)
  1252  0111  084B               	movf	(??_main+1)^(0+128),w
  1253  0112  00A7               	movwf	(?_sprintf^(0+128)+7)
  1254  0113  084C               	movf	(??_main+2)^(0+128),w
  1255  0114  00A8               	movwf	((?_sprintf+1)^(0+128)+7)
  1256  0115  084F               	movf	_contador^(0+128),w
  1257  0116  00CD               	movwf	(??_main+3)^(0+128)
  1258  0117  01CE               	clrf	((??_main+3)^(0+128)+1)
  1259  0118  084D               	movf	(??_main+3)^(0+128),w
  1260  0119  00A9               	movwf	(?_sprintf^(0+128)+9)
  1261  011A  084E               	movf	(??_main+4)^(0+128),w
  1262  011B  00AA               	movwf	((?_sprintf+1)^(0+128)+9)
  1263  011C  160A  118A  253B  120A  118A  	fcall	_sprintf
  1264  0121                     l3351:
  1265                           
  1266                           ;main_prueba_uart.c: 75:         UART_Write_String(pantalla);
  1267  0121  30D1               	movlw	(low (_pantalla| 0))& (0+255)
  1268  0122  00F1               	movwf	UART_Write_String@buf
  1269  0123  3000               	movlw	0
  1270  0124  00F2               	movwf	UART_Write_String@buf+1
  1271  0125  160A  158A  2437  120A  118A  	fcall	_UART_Write_String
  1272  012A                     l3353:
  1273                           
  1274                           ;main_prueba_uart.c: 77:         UART_Write(13);
  1275  012A  300D               	movlw	13
  1276  012B  160A  158A  2349  120A  118A  	fcall	_UART_Write
  1277  0130                     l3355:
  1278                           
  1279                           ;main_prueba_uart.c: 78:         UART_Write(10);
  1280  0130  300A               	movlw	10
  1281  0131  160A  158A  2349  120A  118A  	fcall	_UART_Write
  1282  0136                     l3357:
  1283                           
  1284                           ;main_prueba_uart.c: 80:         sprintf(buffer,"%d",5);
  1285  0136  3090               	movlw	(low (_buffer| (0+256)))& (0+255)
  1286  0137  1683               	bsf	3,5	;RP0=1, select bank1
  1287  0138  1303               	bcf	3,6	;RP1=0, select bank1
  1288  0139  00A0               	movwf	sprintf@sp^(0+128)
  1289  013A  3001               	movlw	1
  1290  013B  00A1               	movwf	(sprintf@sp+1)^(0+128)
  1291  013C  30B2               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1292  013D  00CA               	movwf	??_main^(0+128)
  1293  013E  084A               	movf	??_main^(0+128),w
  1294  013F  00A2               	movwf	sprintf@f^(0+128)
  1295  0140  3005               	movlw	5
  1296  0141  00A3               	movwf	(?_sprintf^(0+128)+3)
  1297  0142  3000               	movlw	0
  1298  0143  00A4               	movwf	(?_sprintf^(0+128)+4)
  1299  0144  160A  118A  253B  120A  118A  	fcall	_sprintf
  1300  0149                     l3359:
  1301                           
  1302                           ;main_prueba_uart.c: 81:         UART_Write_String(buffer);
  1303  0149  3090               	movlw	(low (_buffer| (0+256)))& (0+255)
  1304  014A  00F1               	movwf	UART_Write_String@buf
  1305  014B  3001               	movlw	1
  1306  014C  00F2               	movwf	UART_Write_String@buf+1
  1307  014D  160A  158A  2437  120A  118A  	fcall	_UART_Write_String
  1308  0152                     l3361:
  1309                           
  1310                           ;main_prueba_uart.c: 82:         UART_Write_String("1");
  1311  0152  30B5               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1312  0153  00F1               	movwf	UART_Write_String@buf
  1313  0154  3080               	movlw	128
  1314  0155  00F2               	movwf	UART_Write_String@buf+1
  1315  0156  160A  158A  2437  120A  118A  	fcall	_UART_Write_String
  1316  015B                     l3363:
  1317                           
  1318                           ;main_prueba_uart.c: 84:         UART_Write(13);
  1319  015B  300D               	movlw	13
  1320  015C  160A  158A  2349  120A  118A  	fcall	_UART_Write
  1321  0161                     l3365:
  1322                           
  1323                           ;main_prueba_uart.c: 85:         UART_Write(10);
  1324  0161  300A               	movlw	10
  1325  0162  160A  158A  2349  120A  118A  	fcall	_UART_Write
  1326  0167                     l3367:
  1327                           
  1328                           ;main_prueba_uart.c: 86:         if(RCIF==1){
  1329  0167  1283               	bcf	3,5	;RP0=0, select bank0
  1330  0168  1303               	bcf	3,6	;RP1=0, select bank0
  1331  0169  1E8C               	btfss	12,5	;volatile
  1332  016A  296C               	goto	u5681
  1333  016B  296D               	goto	u5680
  1334  016C                     u5681:
  1335  016C  29A1               	goto	l66
  1336  016D                     u5680:
  1337  016D                     l3369:
  1338                           
  1339                           ;main_prueba_uart.c: 90:             recibido = USART_Read();
  1340  016D  160A  158A  2339  120A  118A  	fcall	_USART_Read
  1341  0172  1683               	bsf	3,5	;RP0=1, select bank1
  1342  0173  1303               	bcf	3,6	;RP1=0, select bank1
  1343  0174  00CA               	movwf	??_main^(0+128)
  1344  0175  084A               	movf	??_main^(0+128),w
  1345  0176  00D0               	movwf	_recibido^(0+128)
  1346  0177                     l3371:
  1347                           
  1348                           ;main_prueba_uart.c: 92:             if(recibido > 0) {
  1349  0177  0850               	movf	_recibido^(0+128),w
  1350  0178  1903               	btfsc	3,2
  1351  0179  297B               	goto	u5691
  1352  017A  297C               	goto	u5690
  1353  017B                     u5691:
  1354  017B  297F               	goto	l3375
  1355  017C                     u5690:
  1356  017C                     l3373:
  1357                           
  1358                           ;main_prueba_uart.c: 93:                 PORTDbits.RD0 = 1;
  1359  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1360  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1361  017E  1408               	bsf	8,0	;volatile
  1362  017F                     l3375:
  1363                           
  1364                           ;main_prueba_uart.c: 95:             if(recibido == 0) {
  1365  017F  1683               	bsf	3,5	;RP0=1, select bank1
  1366  0180  1303               	bcf	3,6	;RP1=0, select bank1
  1367  0181  0850               	movf	_recibido^(0+128),w
  1368  0182  1D03               	btfss	3,2
  1369  0183  2985               	goto	u5701
  1370  0184  2986               	goto	u5700
  1371  0185                     u5701:
  1372  0185  298A               	goto	l68
  1373  0186                     u5700:
  1374  0186                     l3377:
  1375                           
  1376                           ;main_prueba_uart.c: 96:                 PORTCbits.RC2 = 1;
  1377  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1379  0188  1507               	bsf	7,2	;volatile
  1380                           
  1381                           ;main_prueba_uart.c: 97:             }
  1382  0189  298D               	goto	l3379
  1383  018A                     l68:	
  1384                           ;main_prueba_uart.c: 98:             else {
  1385                           
  1386                           
  1387                           ;main_prueba_uart.c: 99:                 PORTCbits.RC1 = 1;
  1388  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1389  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1390  018C  1487               	bsf	7,1	;volatile
  1391  018D                     l3379:
  1392                           
  1393                           ;main_prueba_uart.c: 102:             if(recibido == '+'){
  1394  018D  302B               	movlw	43
  1395  018E  1683               	bsf	3,5	;RP0=1, select bank1
  1396  018F  1303               	bcf	3,6	;RP1=0, select bank1
  1397  0190  0650               	xorwf	_recibido^(0+128),w
  1398  0191  1D03               	btfss	3,2
  1399  0192  2994               	goto	u5711
  1400  0193  2995               	goto	u5710
  1401  0194                     u5711:
  1402  0194  2999               	goto	l70
  1403  0195                     u5710:
  1404  0195                     l3381:
  1405                           
  1406                           ;main_prueba_uart.c: 103:                 contador2++;
  1407  0195  3001               	movlw	1
  1408  0196  00CA               	movwf	??_main^(0+128)
  1409  0197  084A               	movf	??_main^(0+128),w
  1410  0198  07E5               	addwf	_contador2^(0+128),f
  1411  0199                     l70:	
  1412                           ;main_prueba_uart.c: 104:             }
  1413                           
  1414                           
  1415                           ;main_prueba_uart.c: 105:             if(recibido == '-'){
  1416  0199  302D               	movlw	45
  1417  019A  0650               	xorwf	_recibido^(0+128),w
  1418  019B  1D03               	btfss	3,2
  1419  019C  299E               	goto	u5721
  1420  019D  299F               	goto	u5720
  1421  019E                     u5721:
  1422  019E  29A1               	goto	l66
  1423  019F                     u5720:
  1424  019F                     l3383:
  1425                           
  1426                           ;main_prueba_uart.c: 106:                 contador2--;
  1427  019F  3001               	movlw	1
  1428  01A0  02E5               	subwf	_contador2^(0+128),f
  1429  01A1                     l66:	
  1430                           ;main_prueba_uart.c: 109:         }
  1431                           
  1432                           
  1433                           ;main_prueba_uart.c: 111:         contador++;
  1434  01A1  3001               	movlw	1
  1435  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  1436  01A3  1303               	bcf	3,6	;RP1=0, select bank1
  1437  01A4  00CA               	movwf	??_main^(0+128)
  1438  01A5  084A               	movf	??_main^(0+128),w
  1439  01A6  07CF               	addwf	_contador^(0+128),f
  1440  01A7                     l3385:
  1441                           
  1442                           ;main_prueba_uart.c: 113:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1443  01A7  3006               	movlw	6
  1444  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  1445  01A9  1303               	bcf	3,6	;RP1=0, select bank1
  1446  01AA  00CC               	movwf	(??_main^(0+128)+2)
  1447  01AB  3013               	movlw	19
  1448  01AC  00CB               	movwf	(??_main^(0+128)+1)
  1449  01AD  30AD               	movlw	173
  1450  01AE  00CA               	movwf	??_main^(0+128)
  1451  01AF                     u5737:
  1452  01AF  0BCA               	decfsz	??_main^(0+128),f
  1453  01B0  29AF               	goto	u5737
  1454  01B1  0BCB               	decfsz	(??_main^(0+128)+1),f
  1455  01B2  29AF               	goto	u5737
  1456  01B3  0BCC               	decfsz	(??_main^(0+128)+2),f
  1457  01B4  29AF               	goto	u5737
  1458  01B5  28E3               	goto	l3341
  1459  01B6  120A  118A  2800   	ljmp	start
  1460  01B9                     __end_of_main:
  1461                           
  1462                           	psect	text1
  1463  153B                     __ptext1:	
  1464 ;; *************** function _sprintf *****************
  1465 ;; Defined at:
  1466 ;;		line 505 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  sp              2    0[BANK1 ] PTR unsigned char 
  1469 ;;		 -> buffer(40), pantalla(20), 
  1470 ;;  f               1    2[BANK1 ] PTR const unsigned char 
  1471 ;;		 -> STR_3(3), STR_2(16), 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  fval            4   35[BANK1 ] PTR const unsigned char 
  1474 ;;  val             4   29[BANK1 ] unsigned long 
  1475 ;;  tmpval          4   25[BANK1 ] struct .
  1476 ;;  prec            2   39[BANK1 ] int 
  1477 ;;  eexp            2   33[BANK1 ] int 
  1478 ;;  width           2   23[BANK1 ] int 
  1479 ;;  flag            2   21[BANK1 ] unsigned short 
  1480 ;;  cp              2    0        PTR const unsigned char 
  1481 ;;  len             2    0        unsigned int 
  1482 ;;  c               1   41[BANK1 ] unsigned char 
  1483 ;;  ap              1   20[BANK1 ] PTR void [1]
  1484 ;;		 -> ?_sprintf(2), 
  1485 ;;  d               1    0        unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  2    0[BANK1 ] int 
  1488 ;; Registers used:
  1489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1495 ;;      Params:         0       0      11       0       0
  1496 ;;      Locals:         0       0      26       0       0
  1497 ;;      Temps:          0       0       5       0       0
  1498 ;;      Totals:         0       0      42       0       0
  1499 ;;Total ram usage:       42 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; Hardware stack levels required when called:    3
  1502 ;; This function calls:
  1503 ;;		___awdiv
  1504 ;;		___fladd
  1505 ;;		___fleq
  1506 ;;		___flge
  1507 ;;		___flmul
  1508 ;;		___flneg
  1509 ;;		___flsub
  1510 ;;		___fltol
  1511 ;;		___lldiv
  1512 ;;		___llmod
  1513 ;;		___wmul
  1514 ;;		___xxtofl
  1515 ;;		__div_to_l_
  1516 ;;		__tdiv_to_l_
  1517 ;;		_fround
  1518 ;;		_isdigit
  1519 ;;		_scale
  1520 ;; This function is called by:
  1521 ;;		_main
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           
  1526                           ;psect for function _sprintf
  1527  153B                     _sprintf:
  1528  153B                     l3037:	
  1529                           ;incstack = 0
  1530                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1531                           
  1532                           
  1533                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const c
      +                          har * f, ...);D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 506: {;D:\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\Microchip\xc8\v2.31\pi
      +                          c\sources\c90\common\doprnt.c: 512:  char c;;D:\Microchip\xc8\v2.31\pic\sources\c90\comm
      +                          on\doprnt.c: 514:  int width;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 51
      +                          7:  int prec;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsigned sho
      +                          rt flag;
  1534  153B  30A3               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  1535  153C  1683               	bsf	3,5	;RP0=1, select bank1
  1536  153D  1303               	bcf	3,6	;RP1=0, select bank1
  1537  153E  00AB               	movwf	??_sprintf^(0+128)
  1538  153F  082B               	movf	??_sprintf^(0+128),w
  1539  1540  00B4               	movwf	sprintf@ap^(0+128)
  1540  1541                     L1:
  1541                           
  1542                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1543  1541  120A  118A  2FC7   	goto	l3323
  1544  1544                     l3039:
  1545                           
  1546                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  1547  1544  3025               	movlw	37
  1548  1545  0649               	xorwf	sprintf@c^(0+128),w
  1549  1546  1903               	btfsc	3,2
  1550  1547  2D49               	goto	u5141
  1551  1548  2D4A               	goto	u5140
  1552  1549                     u5141:
  1553  1549  2D5A               	goto	l3045
  1554  154A                     u5140:
  1555  154A                     l3041:
  1556                           
  1557                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;D:\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1558  154A  0849               	movf	sprintf@c^(0+128),w
  1559  154B  00AB               	movwf	??_sprintf^(0+128)
  1560  154C  0820               	movf	sprintf@sp^(0+128),w
  1561  154D  0084               	movwf	4
  1562  154E  1783               	bsf	3,7
  1563  154F  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  1564  1550  1383               	bcf	3,7
  1565  1551  082B               	movf	??_sprintf^(0+128),w
  1566  1552  0080               	movwf	0
  1567  1553                     l3043:
  1568  1553  3001               	movlw	1
  1569  1554  07A0               	addwf	sprintf@sp^(0+128),f
  1570  1555  1803               	skipnc
  1571  1556  0AA1               	incf	(sprintf@sp+1)^(0+128),f
  1572  1557  3000               	movlw	0
  1573  1558  07A1               	addwf	(sprintf@sp+1)^(0+128),f
  1574                           
  1575                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1576  1559  2D41               	goto	L1
  1577  155A                     l3045:
  1578                           
  1579                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1580  155A  01B7               	clrf	sprintf@width^(0+128)
  1581  155B  01B8               	clrf	(sprintf@width+1)^(0+128)
  1582                           
  1583                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1584  155C  01B5               	clrf	sprintf@flag^(0+128)
  1585  155D  01B6               	clrf	(sprintf@flag+1)^(0+128)
  1586  155E                     l3047:
  1587                           
  1588                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit((unsigned)*f)
      +                          ) {
  1589  155E  0822               	movf	sprintf@f^(0+128),w
  1590  155F  0084               	movwf	4
  1591  1560  120A  118A  200D  160A  118A  	fcall	stringdir
  1592  1565  160A  158A  2367  160A  118A  	fcall	_isdigit
  1593  156A  1C03               	btfss	3,0
  1594  156B  2D6D               	goto	u5151
  1595  156C  2D6E               	goto	u5150
  1596  156D                     u5151:
  1597  156D  2DAE               	goto	l3059
  1598  156E                     u5150:
  1599  156E                     l3049:
  1600                           
  1601                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0;
  1602  156E  1683               	bsf	3,5	;RP0=1, select bank1
  1603  156F  1303               	bcf	3,6	;RP1=0, select bank1
  1604  1570  01B7               	clrf	sprintf@width^(0+128)
  1605  1571  01B8               	clrf	(sprintf@width+1)^(0+128)
  1606  1572                     l3051:
  1607                           
  1608                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *= 10;
  1609  1572  300A               	movlw	10
  1610  1573  00F0               	movwf	___wmul@multiplier
  1611  1574  3000               	movlw	0
  1612  1575  00F1               	movwf	___wmul@multiplier+1
  1613  1576  1683               	bsf	3,5	;RP0=1, select bank1
  1614  1577  1303               	bcf	3,6	;RP1=0, select bank1
  1615  1578  0838               	movf	(sprintf@width+1)^(0+128),w
  1616  1579  00F3               	movwf	___wmul@multiplicand+1
  1617  157A  0837               	movf	sprintf@width^(0+128),w
  1618  157B  00F2               	movwf	___wmul@multiplicand
  1619  157C  160A  158A  23B1  160A  118A  	fcall	___wmul
  1620  1581  0871               	movf	?___wmul+1,w
  1621  1582  1683               	bsf	3,5	;RP0=1, select bank1
  1622  1583  1303               	bcf	3,6	;RP1=0, select bank1
  1623  1584  00B8               	movwf	(sprintf@width+1)^(0+128)
  1624  1585  0870               	movf	?___wmul,w
  1625  1586  00B7               	movwf	sprintf@width^(0+128)
  1626  1587                     l3053:
  1627                           
  1628                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width += *f++ - '0'
      +                          ;
  1629  1587  0822               	movf	sprintf@f^(0+128),w
  1630  1588  0084               	movwf	4
  1631  1589  120A  118A  200D  160A  118A  	fcall	stringdir
  1632  158E  3ED0               	addlw	208
  1633  158F  00AB               	movwf	??_sprintf^(0+128)
  1634  1590  30FF               	movlw	255
  1635  1591  1803               	skipnc
  1636  1592  3000               	movlw	0
  1637  1593  00AC               	movwf	(??_sprintf^(0+128)+1)
  1638  1594  082B               	movf	??_sprintf^(0+128),w
  1639  1595  07B7               	addwf	sprintf@width^(0+128),f
  1640  1596  1803               	skipnc
  1641  1597  0AB8               	incf	(sprintf@width+1)^(0+128),f
  1642  1598  082C               	movf	(??_sprintf+1)^(0+128),w
  1643  1599  07B8               	addwf	(sprintf@width+1)^(0+128),f
  1644  159A                     l3055:
  1645  159A  3001               	movlw	1
  1646  159B  00AB               	movwf	??_sprintf^(0+128)
  1647  159C  082B               	movf	??_sprintf^(0+128),w
  1648  159D  07A2               	addwf	sprintf@f^(0+128),f
  1649  159E                     l3057:
  1650                           
  1651                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(isdigit((unsign
      +                          ed)*f));
  1652  159E  0822               	movf	sprintf@f^(0+128),w
  1653  159F  0084               	movwf	4
  1654  15A0  120A  118A  200D  160A  118A  	fcall	stringdir
  1655  15A5  160A  158A  2367  160A  118A  	fcall	_isdigit
  1656  15AA  1803               	btfsc	3,0
  1657  15AB  2DAD               	goto	u5161
  1658  15AC  2DAE               	goto	u5160
  1659  15AD                     u5161:
  1660  15AD  2D72               	goto	l3051
  1661  15AE                     u5160:
  1662  15AE                     l3059:
  1663                           
  1664                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '.') {
  1665  15AE  1683               	bsf	3,5	;RP0=1, select bank1
  1666  15AF  1303               	bcf	3,6	;RP1=0, select bank1
  1667  15B0  0822               	movf	sprintf@f^(0+128),w
  1668  15B1  0084               	movwf	4
  1669  15B2  120A  118A  200D  160A  118A  	fcall	stringdir
  1670  15B7  3A2E               	xorlw	46
  1671  15B8  1D03               	skipz
  1672  15B9  2DBB               	goto	u5171
  1673  15BA  2DBC               	goto	u5170
  1674  15BB                     u5171:
  1675  15BB  2E01               	goto	l3075
  1676  15BC                     u5170:
  1677  15BC                     l3061:
  1678                           
  1679                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0x4000;
  1680  15BC  1736               	bsf	(sprintf@flag^(0+128)+1),6
  1681  15BD                     l3063:
  1682                           
  1683                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1684  15BD  3001               	movlw	1
  1685  15BE  00AB               	movwf	??_sprintf^(0+128)
  1686  15BF  082B               	movf	??_sprintf^(0+128),w
  1687  15C0  07A2               	addwf	sprintf@f^(0+128),f
  1688  15C1                     l3065:
  1689                           
  1690                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1691  15C1  01C7               	clrf	sprintf@prec^(0+128)
  1692  15C2  01C8               	clrf	(sprintf@prec+1)^(0+128)
  1693                           
  1694                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigne
      +                          d)*f)) {
  1695  15C3  2DF0               	goto	l3073
  1696  15C4                     l3067:
  1697                           
  1698                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *= 10;
  1699  15C4  300A               	movlw	10
  1700  15C5  00F0               	movwf	___wmul@multiplier
  1701  15C6  3000               	movlw	0
  1702  15C7  00F1               	movwf	___wmul@multiplier+1
  1703  15C8  1683               	bsf	3,5	;RP0=1, select bank1
  1704  15C9  1303               	bcf	3,6	;RP1=0, select bank1
  1705  15CA  0848               	movf	(sprintf@prec+1)^(0+128),w
  1706  15CB  00F3               	movwf	___wmul@multiplicand+1
  1707  15CC  0847               	movf	sprintf@prec^(0+128),w
  1708  15CD  00F2               	movwf	___wmul@multiplicand
  1709  15CE  160A  158A  23B1  160A  118A  	fcall	___wmul
  1710  15D3  0871               	movf	?___wmul+1,w
  1711  15D4  1683               	bsf	3,5	;RP0=1, select bank1
  1712  15D5  1303               	bcf	3,6	;RP1=0, select bank1
  1713  15D6  00C8               	movwf	(sprintf@prec+1)^(0+128)
  1714  15D7  0870               	movf	?___wmul,w
  1715  15D8  00C7               	movwf	sprintf@prec^(0+128)
  1716  15D9                     l3069:
  1717                           
  1718                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec += *f++ - '0'
      +                          ;
  1719  15D9  0822               	movf	sprintf@f^(0+128),w
  1720  15DA  0084               	movwf	4
  1721  15DB  120A  118A  200D  160A  118A  	fcall	stringdir
  1722  15E0  3ED0               	addlw	208
  1723  15E1  00AB               	movwf	??_sprintf^(0+128)
  1724  15E2  30FF               	movlw	255
  1725  15E3  1803               	skipnc
  1726  15E4  3000               	movlw	0
  1727  15E5  00AC               	movwf	(??_sprintf^(0+128)+1)
  1728  15E6  082B               	movf	??_sprintf^(0+128),w
  1729  15E7  07C7               	addwf	sprintf@prec^(0+128),f
  1730  15E8  1803               	skipnc
  1731  15E9  0AC8               	incf	(sprintf@prec+1)^(0+128),f
  1732  15EA  082C               	movf	(??_sprintf+1)^(0+128),w
  1733  15EB  07C8               	addwf	(sprintf@prec+1)^(0+128),f
  1734  15EC                     l3071:
  1735  15EC  3001               	movlw	1
  1736  15ED  00AB               	movwf	??_sprintf^(0+128)
  1737  15EE  082B               	movf	??_sprintf^(0+128),w
  1738  15EF  07A2               	addwf	sprintf@f^(0+128),f
  1739  15F0                     l3073:
  1740                           
  1741                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigne
      +                          d)*f)) {
  1742  15F0  0822               	movf	sprintf@f^(0+128),w
  1743  15F1  0084               	movwf	4
  1744  15F2  120A  118A  200D  160A  118A  	fcall	stringdir
  1745  15F7  160A  158A  2367  160A  118A  	fcall	_isdigit
  1746  15FC  1803               	btfsc	3,0
  1747  15FD  2DFF               	goto	u5181
  1748  15FE  2E00               	goto	u5180
  1749  15FF                     u5181:
  1750  15FF  2DC4               	goto	l3067
  1751  1600                     u5180:
  1752  1600  2E07               	goto	l3081
  1753  1601                     l3075:
  1754                           
  1755                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1756  1601  01C7               	clrf	sprintf@prec^(0+128)
  1757  1602  01C8               	clrf	(sprintf@prec+1)^(0+128)
  1758  1603                     l3077:
  1759                           
  1760                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0x1000;
  1761  1603  1636               	bsf	(sprintf@flag^(0+128)+1),4
  1762  1604  2E07               	goto	l3081
  1763  1605                     l256:	
  1764                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1765                           
  1766                           
  1767                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0x400;
  1768  1605  1536               	bsf	(sprintf@flag^(0+128)+1),2
  1769                           
  1770                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1771  1606  2E29               	goto	l3083
  1772  1607                     l3081:
  1773  1607  3001               	movlw	1
  1774  1608  1683               	bsf	3,5	;RP0=1, select bank1
  1775  1609  1303               	bcf	3,6	;RP1=0, select bank1
  1776  160A  07A2               	addwf	sprintf@f^(0+128),f
  1777  160B  30FF               	movlw	-1
  1778  160C  0722               	addwf	sprintf@f^(0+128),w
  1779  160D  0084               	movwf	4
  1780  160E  120A  118A  200D  160A  118A  	fcall	stringdir
  1781  1613  00C9               	movwf	sprintf@c^(0+128)
  1782  1614  00AB               	movwf	??_sprintf^(0+128)
  1783  1615  01AC               	clrf	(??_sprintf^(0+128)+1)
  1784                           
  1785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1786                           ; Switch size 1, requested type "simple"
  1787                           ; Number of cases is 1, Range of values is 0 to 0
  1788                           ; switch strategies available:
  1789                           ; Name         Instructions Cycles
  1790                           ; simple_byte            4     3 (average)
  1791                           ; direct_byte           11     8 (fixed)
  1792                           ; jumptable            260     6 (fixed)
  1793                           ;	Chosen strategy is simple_byte
  1794  1616  082C               	movf	(??_sprintf+1)^(0+128),w
  1795  1617  3A00               	xorlw	0	; case 0
  1796  1618  1903               	skipnz
  1797  1619  2E1B               	goto	l3407
  1798  161A  2D41               	goto	L1
  1799  161B                     l3407:
  1800                           
  1801                           ; Switch size 1, requested type "simple"
  1802                           ; Number of cases is 4, Range of values is 0 to 105
  1803                           ; switch strategies available:
  1804                           ; Name         Instructions Cycles
  1805                           ; simple_byte           13     7 (average)
  1806                           ; jumptable            260     6 (fixed)
  1807                           ;	Chosen strategy is simple_byte
  1808  161B  082B               	movf	??_sprintf^(0+128),w
  1809  161C  3A00               	xorlw	0	; case 0
  1810  161D  1903               	skipnz
  1811  161E  2FFD               	goto	L3
  1812  161F  3A64               	xorlw	100	; case 100
  1813  1620  1903               	skipnz
  1814  1621  2E29               	goto	l3083
  1815  1622  3A02               	xorlw	2	; case 102
  1816  1623  1903               	skipnz
  1817  1624  2E05               	goto	l256
  1818  1625  3A0F               	xorlw	15	; case 105
  1819  1626  1903               	skipnz
  1820  1627  2E29               	goto	l3083
  1821  1628  2D41               	goto	L1
  1822  1629                     l3083:
  1823                           
  1824                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & (0x700)) {
  1825  1629  3000               	movlw	0
  1826  162A  0535               	andwf	sprintf@flag^(0+128),w
  1827  162B  00AB               	movwf	??_sprintf^(0+128)
  1828  162C  3007               	movlw	7
  1829  162D  0536               	andwf	(sprintf@flag+1)^(0+128),w
  1830  162E  00AC               	movwf	(??_sprintf+1)^(0+128)
  1831  162F  082B               	movf	??_sprintf^(0+128),w
  1832  1630  042C               	iorwf	(??_sprintf^(0+128)+1),w
  1833  1631  1903               	btfsc	3,2
  1834  1632  2E34               	goto	u5191
  1835  1633  2E37               	goto	u5190
  1836  1634                     u5191:
  1837  1634  120A  118A  2E20   	goto	l3245
  1838  1637                     u5190:
  1839  1637                     l3085:
  1840                           
  1841                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag & 0x1000)
  1842  1637  1E36               	btfss	(sprintf@flag+1)^(0+128),4
  1843  1638  2E3A               	goto	u5201
  1844  1639  2E3B               	goto	u5200
  1845  163A                     u5201:
  1846  163A  2E3F               	goto	l3089
  1847  163B                     u5200:
  1848  163B                     l3087:
  1849                           
  1850                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6;
  1851  163B  3006               	movlw	6
  1852  163C  00C7               	movwf	sprintf@prec^(0+128)
  1853  163D  3000               	movlw	0
  1854  163E  00C8               	movwf	(sprintf@prec^(0+128)+1)
  1855  163F                     l3089:
  1856                           
  1857                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*(double *)__va
      +                          _arg((*(double **)ap), (double)0));
  1858  163F  0834               	movf	sprintf@ap^(0+128),w
  1859  1640  0084               	movwf	4
  1860  1641  1383               	bcf	3,7	;select IRP bank0
  1861  1642  0800               	movf	0,w
  1862  1643  00C3               	movwf	sprintf@fval^(0+128)
  1863  1644  0A84               	incf	4,f
  1864  1645  0800               	movf	0,w
  1865  1646  00C4               	movwf	(sprintf@fval+1)^(0+128)
  1866  1647  0A84               	incf	4,f
  1867  1648  0800               	movf	0,w
  1868  1649  00C5               	movwf	(sprintf@fval+2)^(0+128)
  1869  164A  0A84               	incf	4,f
  1870  164B  0800               	movf	0,w
  1871  164C  00C6               	movwf	(sprintf@fval+3)^(0+128)
  1872  164D                     l3091:
  1873  164D  3004               	movlw	4
  1874  164E  00AB               	movwf	??_sprintf^(0+128)
  1875  164F  082B               	movf	??_sprintf^(0+128),w
  1876  1650  07B4               	addwf	sprintf@ap^(0+128),f
  1877  1651                     l3093:
  1878                           
  1879                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval < 0.0) {
  1880  1651  0846               	movf	(sprintf@fval+3)^(0+128),w
  1881  1652  00F3               	movwf	___flge@ff1+3
  1882  1653  0845               	movf	(sprintf@fval+2)^(0+128),w
  1883  1654  00F2               	movwf	___flge@ff1+2
  1884  1655  0844               	movf	(sprintf@fval+1)^(0+128),w
  1885  1656  00F1               	movwf	___flge@ff1+1
  1886  1657  0843               	movf	sprintf@fval^(0+128),w
  1887  1658  00F0               	movwf	___flge@ff1
  1888  1659  3000               	movlw	0
  1889  165A  00F7               	movwf	___flge@ff2+3
  1890  165B  3000               	movlw	0
  1891  165C  00F6               	movwf	___flge@ff2+2
  1892  165D  3000               	movlw	0
  1893  165E  00F5               	movwf	___flge@ff2+1
  1894  165F  3000               	movlw	0
  1895  1660  00F4               	movwf	___flge@ff2
  1896  1661  160A  118A  2006  160A  118A  	fcall	___flge
  1897  1666  1803               	btfsc	3,0
  1898  1667  2E69               	goto	u5211
  1899  1668  2E6A               	goto	u5210
  1900  1669                     u5211:
  1901  1669  2E87               	goto	l3099
  1902  166A                     u5210:
  1903  166A                     l3095:
  1904                           
  1905                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -fval;
  1906  166A  1683               	bsf	3,5	;RP0=1, select bank1
  1907  166B  1303               	bcf	3,6	;RP1=0, select bank1
  1908  166C  0846               	movf	(sprintf@fval+3)^(0+128),w
  1909  166D  00F3               	movwf	___flneg@f1+3
  1910  166E  0845               	movf	(sprintf@fval+2)^(0+128),w
  1911  166F  00F2               	movwf	___flneg@f1+2
  1912  1670  0844               	movf	(sprintf@fval+1)^(0+128),w
  1913  1671  00F1               	movwf	___flneg@f1+1
  1914  1672  0843               	movf	sprintf@fval^(0+128),w
  1915  1673  00F0               	movwf	___flneg@f1
  1916  1674  120A  118A  20C9  160A  118A  	fcall	___flneg
  1917  1679  0873               	movf	?___flneg+3,w
  1918  167A  1683               	bsf	3,5	;RP0=1, select bank1
  1919  167B  1303               	bcf	3,6	;RP1=0, select bank1
  1920  167C  00C6               	movwf	(sprintf@fval+3)^(0+128)
  1921  167D  0872               	movf	?___flneg+2,w
  1922  167E  00C5               	movwf	(sprintf@fval+2)^(0+128)
  1923  167F  0871               	movf	?___flneg+1,w
  1924  1680  00C4               	movwf	(sprintf@fval+1)^(0+128)
  1925  1681  0870               	movf	?___flneg,w
  1926  1682  00C3               	movwf	sprintf@fval^(0+128)
  1927  1683                     l3097:
  1928                           
  1929                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 0x03;
  1930  1683  3003               	movlw	3
  1931  1684  04B5               	iorwf	sprintf@flag^(0+128),f
  1932  1685  3000               	movlw	0
  1933  1686  04B6               	iorwf	(sprintf@flag+1)^(0+128),f
  1934  1687                     l3099:
  1935                           
  1936                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1937  1687  1683               	bsf	3,5	;RP0=1, select bank1
  1938  1688  1303               	bcf	3,6	;RP1=0, select bank1
  1939  1689  01C1               	clrf	sprintf@eexp^(0+128)
  1940  168A  01C2               	clrf	(sprintf@eexp+1)^(0+128)
  1941  168B                     l3101:
  1942                           
  1943                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!=0) {
  1944  168B  0846               	movf	(sprintf@fval+3)^(0+128),w
  1945  168C  00F3               	movwf	___fleq@ff1+3
  1946  168D  0845               	movf	(sprintf@fval+2)^(0+128),w
  1947  168E  00F2               	movwf	___fleq@ff1+2
  1948  168F  0844               	movf	(sprintf@fval+1)^(0+128),w
  1949  1690  00F1               	movwf	___fleq@ff1+1
  1950  1691  0843               	movf	sprintf@fval^(0+128),w
  1951  1692  00F0               	movwf	___fleq@ff1
  1952  1693  3000               	movlw	0
  1953  1694  00F7               	movwf	___fleq@ff2+3
  1954  1695  3000               	movlw	0
  1955  1696  00F6               	movwf	___fleq@ff2+2
  1956  1697  3000               	movlw	0
  1957  1698  00F5               	movwf	___fleq@ff2+1
  1958  1699  3000               	movlw	0
  1959  169A  00F4               	movwf	___fleq@ff2
  1960  169B  160A  158A  24BD  160A  118A  	fcall	___fleq
  1961  16A0  1803               	btfsc	3,0
  1962  16A1  2EA3               	goto	u5221
  1963  16A2  2EA4               	goto	u5220
  1964  16A3                     u5221:
  1965  16A3  2F94               	goto	l3127
  1966  16A4                     u5220:
  1967  16A4                     l3103:
  1968                           
  1969                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*(&eexp) = (uns
      +                          igned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1970  16A4  1003               	clrc
  1971  16A5  1683               	bsf	3,5	;RP0=1, select bank1
  1972  16A6  1303               	bcf	3,6	;RP1=0, select bank1
  1973  16A7  0D45               	rlf	(sprintf@fval+2)^(0+128),w
  1974  16A8  0D46               	rlf	(sprintf@fval+3)^(0+128),w
  1975  16A9  3E82               	addlw	130
  1976  16AA  00C1               	movwf	sprintf@eexp^(0+128)
  1977  16AB  30FF               	movlw	255
  1978  16AC  1803               	skipnc
  1979  16AD  3000               	movlw	0
  1980  16AE  00C2               	movwf	(sprintf@eexp^(0+128)+1)
  1981  16AF                     l3105:
  1982                           
  1983                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1984  16AF  30FF               	movlw	255
  1985  16B0  07C1               	addwf	sprintf@eexp^(0+128),f
  1986  16B1  1803               	skipnc
  1987  16B2  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  1988  16B3  30FF               	movlw	255
  1989  16B4  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  1990  16B5                     l3107:
  1991                           
  1992                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 3;
  1993  16B5  3003               	movlw	3
  1994  16B6  00F0               	movwf	___wmul@multiplier
  1995  16B7  3000               	movlw	0
  1996  16B8  00F1               	movwf	___wmul@multiplier+1
  1997  16B9  0842               	movf	(sprintf@eexp+1)^(0+128),w
  1998  16BA  00F3               	movwf	___wmul@multiplicand+1
  1999  16BB  0841               	movf	sprintf@eexp^(0+128),w
  2000  16BC  00F2               	movwf	___wmul@multiplicand
  2001  16BD  160A  158A  23B1  160A  118A  	fcall	___wmul
  2002  16C2  0871               	movf	?___wmul+1,w
  2003  16C3  1683               	bsf	3,5	;RP0=1, select bank1
  2004  16C4  1303               	bcf	3,6	;RP1=0, select bank1
  2005  16C5  00C2               	movwf	(sprintf@eexp+1)^(0+128)
  2006  16C6  0870               	movf	?___wmul,w
  2007  16C7  00C1               	movwf	sprintf@eexp^(0+128)
  2008  16C8                     l3109:
  2009                           
  2010                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 10;
  2011  16C8  300A               	movlw	10
  2012  16C9  00F7               	movwf	___awdiv@divisor
  2013  16CA  3000               	movlw	0
  2014  16CB  00F8               	movwf	___awdiv@divisor+1
  2015  16CC  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2016  16CD  00FA               	movwf	___awdiv@dividend+1
  2017  16CE  0841               	movf	sprintf@eexp^(0+128),w
  2018  16CF  00F9               	movwf	___awdiv@dividend
  2019  16D0  160A  158A  2620  160A  118A  	fcall	___awdiv
  2020  16D5  0878               	movf	?___awdiv+1,w
  2021  16D6  1683               	bsf	3,5	;RP0=1, select bank1
  2022  16D7  1303               	bcf	3,6	;RP1=0, select bank1
  2023  16D8  00C2               	movwf	(sprintf@eexp+1)^(0+128)
  2024  16D9  0877               	movf	?___awdiv,w
  2025  16DA  00C1               	movwf	sprintf@eexp^(0+128)
  2026  16DB                     l3111:
  2027                           
  2028                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp < 0)
  2029  16DB  1FC2               	btfss	(sprintf@eexp+1)^(0+128),7
  2030  16DC  2EDE               	goto	u5231
  2031  16DD  2EDF               	goto	u5230
  2032  16DE                     u5231:
  2033  16DE  2EE5               	goto	l3115
  2034  16DF                     u5230:
  2035  16DF                     l3113:
  2036                           
  2037                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2038  16DF  30FF               	movlw	255
  2039  16E0  07C1               	addwf	sprintf@eexp^(0+128),f
  2040  16E1  1803               	skipnc
  2041  16E2  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2042  16E3  30FF               	movlw	255
  2043  16E4  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2044  16E5                     l3115:
  2045                           
  2046                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.integ = scale(-
      +                          eexp);
  2047  16E5  0341               	decf	sprintf@eexp^(0+128),w
  2048  16E6  3AFF               	xorlw	255
  2049  16E7  120A  158A  2140  160A  118A  	fcall	_scale
  2050  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2051  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2052  16EE  0841               	movf	?_scale+3,w
  2053  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2054  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2055  16F1  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2056  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2057  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2058  16F4  0840               	movf	?_scale+2,w
  2059  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2060  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2061  16F7  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2062  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2063  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2064  16FA  083F               	movf	?_scale+1,w
  2065  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2066  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2067  16FD  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2068  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2069  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2070  1700  083E               	movf	?_scale,w
  2071  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2072  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2073  1703  00B9               	movwf	sprintf@tmpval^(0+128)
  2074  1704                     l3117:
  2075                           
  2076                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.integ *= fval;
  2077  1704  0846               	movf	(sprintf@fval+3)^(0+128),w
  2078  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2079  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2080  1707  00A7               	movwf	___flmul@b+3
  2081  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2082  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2083  170A  0845               	movf	(sprintf@fval+2)^(0+128),w
  2084  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2085  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2086  170D  00A6               	movwf	___flmul@b+2
  2087  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2088  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2089  1710  0844               	movf	(sprintf@fval+1)^(0+128),w
  2090  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2091  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2092  1713  00A5               	movwf	___flmul@b+1
  2093  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2094  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2095  1716  0843               	movf	sprintf@fval^(0+128),w
  2096  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2097  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2098  1719  00A4               	movwf	___flmul@b
  2099  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2100  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2101  171C  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2102  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2103  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2104  171F  00AB               	movwf	___flmul@a+3
  2105  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2106  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2107  1722  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2108  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2109  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2110  1725  00AA               	movwf	___flmul@a+2
  2111  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2112  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2113  1728  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2114  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2115  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2116  172B  00A9               	movwf	___flmul@a+1
  2117  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2118  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2119  172E  0839               	movf	sprintf@tmpval^(0+128),w
  2120  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2121  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2122  1731  00A8               	movwf	___flmul@a
  2123  1732  120A  158A  249F  160A  118A  	fcall	___flmul
  2124  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2125  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2126  1739  0827               	movf	?___flmul+3,w
  2127  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2128  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2129  173C  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2130  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2131  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2132  173F  0826               	movf	?___flmul+2,w
  2133  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2134  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2135  1742  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2136  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2137  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2138  1745  0825               	movf	?___flmul+1,w
  2139  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2140  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2141  1748  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2142  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2143  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2144  174B  0824               	movf	?___flmul,w
  2145  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2146  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2147  174E  00B9               	movwf	sprintf@tmpval^(0+128)
  2148  174F                     l3119:
  2149                           
  2150                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpval.integ < 1.0)
  2151  174F  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2152  1750  00F3               	movwf	___flge@ff1+3
  2153  1751  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2154  1752  00F2               	movwf	___flge@ff1+2
  2155  1753  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2156  1754  00F1               	movwf	___flge@ff1+1
  2157  1755  0839               	movf	sprintf@tmpval^(0+128),w
  2158  1756  00F0               	movwf	___flge@ff1
  2159  1757  303F               	movlw	63
  2160  1758  00F7               	movwf	___flge@ff2+3
  2161  1759  3080               	movlw	128
  2162  175A  00F6               	movwf	___flge@ff2+2
  2163  175B  3000               	movlw	0
  2164  175C  00F5               	movwf	___flge@ff2+1
  2165  175D  3000               	movlw	0
  2166  175E  00F4               	movwf	___flge@ff2
  2167  175F  160A  118A  2006  160A  118A  	fcall	___flge
  2168  1764  1803               	btfsc	3,0
  2169  1765  2F67               	goto	u5241
  2170  1766  2F68               	goto	u5240
  2171  1767                     u5241:
  2172  1767  2F71               	goto	l3123
  2173  1768                     u5240:
  2174  1768                     l3121:
  2175                           
  2176                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2177  1768  30FF               	movlw	255
  2178  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2179  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2180  176B  07C1               	addwf	sprintf@eexp^(0+128),f
  2181  176C  1803               	skipnc
  2182  176D  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2183  176E  30FF               	movlw	255
  2184  176F  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2185  1770  2F94               	goto	l3127
  2186  1771                     l3123:
  2187  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2188  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2189  1773  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2190  1774  00F3               	movwf	___flge@ff1+3
  2191  1775  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2192  1776  00F2               	movwf	___flge@ff1+2
  2193  1777  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2194  1778  00F1               	movwf	___flge@ff1+1
  2195  1779  0839               	movf	sprintf@tmpval^(0+128),w
  2196  177A  00F0               	movwf	___flge@ff1
  2197  177B  3041               	movlw	65
  2198  177C  00F7               	movwf	___flge@ff2+3
  2199  177D  3020               	movlw	32
  2200  177E  00F6               	movwf	___flge@ff2+2
  2201  177F  3000               	movlw	0
  2202  1780  00F5               	movwf	___flge@ff2+1
  2203  1781  3000               	movlw	0
  2204  1782  00F4               	movwf	___flge@ff2
  2205  1783  160A  118A  2006  160A  118A  	fcall	___flge
  2206  1788  1C03               	btfss	3,0
  2207  1789  2F8B               	goto	u5251
  2208  178A  2F8C               	goto	u5250
  2209  178B                     u5251:
  2210  178B  2F94               	goto	l3127
  2211  178C                     u5250:
  2212  178C                     l3125:
  2213                           
  2214                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2215  178C  3001               	movlw	1
  2216  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2217  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2218  178F  07C1               	addwf	sprintf@eexp^(0+128),f
  2219  1790  1803               	skipnc
  2220  1791  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2221  1792  3000               	movlw	0
  2222  1793  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2223  1794                     l3127:
  2224                           
  2225                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(prec <= 12)
  2226  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2227  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2228  1796  0848               	movf	(sprintf@prec+1)^(0+128),w
  2229  1797  3A80               	xorlw	128
  2230  1798  00FF               	movwf	btemp+1
  2231  1799  3080               	movlw	128
  2232  179A  027F               	subwf	btemp+1,w
  2233  179B  1D03               	skipz
  2234  179C  2F9F               	goto	u5265
  2235  179D  300D               	movlw	13
  2236  179E  0247               	subwf	sprintf@prec^(0+128),w
  2237  179F                     u5265:
  2238  179F  1803               	skipnc
  2239  17A0  2FA2               	goto	u5261
  2240  17A1  2FA3               	goto	u5260
  2241  17A2                     u5261:
  2242  17A2  2FEA               	goto	l3131
  2243  17A3                     u5260:
  2244  17A3                     l3129:
  2245                           
  2246                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval += fround((uns
      +                          igned int)prec);
  2247  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2248  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2249  17A5  0847               	movf	sprintf@prec^(0+128),w
  2250  17A6  160A  118A  20A8  160A  118A  	fcall	_fround
  2251  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2252  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2253  17AD  0841               	movf	?_fround+3,w
  2254  17AE  00D5               	movwf	___fladd@b+3
  2255  17AF  0840               	movf	?_fround+2,w
  2256  17B0  00D4               	movwf	___fladd@b+2
  2257  17B1  083F               	movf	?_fround+1,w
  2258  17B2  00D3               	movwf	___fladd@b+1
  2259  17B3  083E               	movf	?_fround,w
  2260  17B4  00D2               	movwf	___fladd@b
  2261  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2262  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2263  17B7  0846               	movf	(sprintf@fval+3)^(0+128),w
  2264  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2265  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2266  17BA  00D9               	movwf	___fladd@a+3
  2267  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2268  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2269  17BD  0845               	movf	(sprintf@fval+2)^(0+128),w
  2270  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2271  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2272  17C0  00D8               	movwf	___fladd@a+2
  2273  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2274  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2275  17C3  0844               	movf	(sprintf@fval+1)^(0+128),w
  2276  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2277  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2278  17C6  00D7               	movwf	___fladd@a+1
  2279  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2280  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2281  17C9  0843               	movf	sprintf@fval^(0+128),w
  2282  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2283  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2284  17CC  00D6               	movwf	___fladd@a
  2285  17CD  160A  118A  22B3  160A  118A  	fcall	___fladd
  2286  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2287  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2288  17D4  0855               	movf	?___fladd+3,w
  2289  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2290  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2291  17D7  00C6               	movwf	(sprintf@fval+3)^(0+128)
  2292  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2293  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2294  17DA  0854               	movf	?___fladd+2,w
  2295  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2296  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2297  17DD  00C5               	movwf	(sprintf@fval+2)^(0+128)
  2298  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2299  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2300  17E0  0853               	movf	?___fladd+1,w
  2301  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2302  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2303  17E3  00C4               	movwf	(sprintf@fval+1)^(0+128)
  2304  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2305  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2306  17E6  0852               	movf	?___fladd,w
  2307  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2308  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2309  17E9  00C3               	movwf	sprintf@fval^(0+128)
  2310  17EA                     l3131:
  2311                           
  2312                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eexp > 9)||(fval 
      +                          != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2313  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2314  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2315  17EC  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2316  17ED  3A80               	xorlw	128
  2317  17EE  00FF               	movwf	btemp+1
  2318  17EF  3080               	movlw	128
  2319  17F0  027F               	subwf	btemp+1,w
  2320  17F1  1D03               	skipz
  2321  17F2  2FF5               	goto	u5275
  2322  17F3  300A               	movlw	10
  2323  17F4  0241               	subwf	sprintf@eexp^(0+128),w
  2324  17F5                     u5275:
  2325  17F5  1803               	skipnc
  2326  17F6  2FFA               	goto	u5271
  2327  17F7  120A  118A  29B9   	goto	u5270
  2328  17FA                     u5271:
  2329  17FA  120A  118A  2A0A   	goto	l3139
  2330  17FD                     L3:
  2331  17FD                     L2:
  2332  17FD  120A  118A  2FDB   	ljmp	l3325
  2333                           
  2334                           	psect	text2
  2335  0940                     __ptext2:	
  2336 ;; *************** function _scale *****************
  2337 ;; Defined at:
  2338 ;;		line 433 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  scl             1    wreg     char 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  scl             1   48[BANK0 ] char 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  4   30[BANK0 ] char 
  2345 ;; Registers used:
  2346 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2352 ;;      Params:         0       4       0       0       0
  2353 ;;      Locals:         0       5       0       0       0
  2354 ;;      Temps:          0      10       0       0       0
  2355 ;;      Totals:         0      19       0       0       0
  2356 ;;Total ram usage:       19 bytes
  2357 ;; Hardware stack levels used:    1
  2358 ;; Hardware stack levels required when called:    2
  2359 ;; This function calls:
  2360 ;;		___awdiv
  2361 ;;		___awmod
  2362 ;;		___flmul
  2363 ;; This function is called by:
  2364 ;;		_sprintf
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           
  2369                           ;psect for function _scale
  2370  0940                     _scale:
  2371                           
  2372                           ;incstack = 0
  2373                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2374                           ;scale@scl stored from wreg
  2375  0940  1283               	bcf	3,5	;RP0=0, select bank0
  2376  0941  1303               	bcf	3,6	;RP1=0, select bank0
  2377  0942  00D0               	movwf	scale@scl
  2378  0943                     l2663:
  2379                           
  2380                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed char scl);D:\
      +                          Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;D:\Microchip\xc8\v2.31\pic\s
      +                          ources\c90\common\doprnt.c: 436:  if(scl < 0) {
  2381  0943  1FD0               	btfss	scale@scl,7
  2382  0944  2946               	goto	u4141
  2383  0945  2947               	goto	u4140
  2384  0946                     u4141:
  2385  0946  2AF4               	goto	l2685
  2386  0947                     u4140:
  2387  0947                     l2665:
  2388                           
  2389                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl;
  2390  0947  09D0               	comf	scale@scl,f
  2391  0948  0AD0               	incf	scale@scl,f
  2392  0949                     l2667:
  2393                           
  2394                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=110)
  2395  0949  0850               	movf	scale@scl,w
  2396  094A  3A80               	xorlw	128
  2397  094B  3E12               	addlw	-238
  2398  094C  1C03               	skipc
  2399  094D  294F               	goto	u4151
  2400  094E  2950               	goto	u4150
  2401  094F                     u4151:
  2402  094F  2A38               	goto	l2675
  2403  0950                     u4150:
  2404  0950                     l2669:
  2405                           
  2406                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsig
      +                          ned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigne
      +                          d char)(scl%10)];
  2407  0950  300A               	movlw	10
  2408  0951  00F7               	movwf	___awdiv@divisor
  2409  0952  3000               	movlw	0
  2410  0953  00F8               	movwf	___awdiv@divisor+1
  2411  0954  0850               	movf	scale@scl,w
  2412  0955  00F2               	movwf	___awmod@dividend
  2413  0956  01F3               	clrf	___awmod@dividend+1
  2414  0957  1BF2               	btfsc	___awmod@dividend,7
  2415  0958  03F3               	decf	___awmod@dividend+1,f
  2416  0959  3064               	movlw	100
  2417  095A  00F0               	movwf	___awmod@divisor
  2418  095B  3000               	movlw	0
  2419  095C  00F1               	movwf	___awmod@divisor+1
  2420  095D  160A  158A  2561  120A  158A  	fcall	___awmod
  2421  0962  0871               	movf	?___awmod+1,w
  2422  0963  00FA               	movwf	___awdiv@dividend+1
  2423  0964  0870               	movf	?___awmod,w
  2424  0965  00F9               	movwf	___awdiv@dividend
  2425  0966  160A  158A  2620  120A  158A  	fcall	___awdiv
  2426  096B  0877               	movf	?___awdiv,w
  2427  096C  1283               	bcf	3,5	;RP0=0, select bank0
  2428  096D  1303               	bcf	3,6	;RP1=0, select bank0
  2429  096E  00C2               	movwf	??_scale
  2430  096F  3001               	movlw	1
  2431  0970                     u4165:
  2432  0970  1003               	clrc
  2433  0971  0DC2               	rlf	??_scale,f
  2434  0972  3EFF               	addlw	-1
  2435  0973  1D03               	skipz
  2436  0974  2970               	goto	u4165
  2437  0975  1003               	clrc
  2438  0976  0D42               	rlf	??_scale,w
  2439  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2440  0978  0084               	movwf	4
  2441  0979  120A  118A  200D  120A  158A  	fcall	stringdir
  2442  097E  00C3               	movwf	??_scale+1
  2443  097F  120A  118A  200D  120A  158A  	fcall	stringdir
  2444  0984  00C4               	movwf	??_scale+2
  2445  0985  120A  118A  200D  120A  158A  	fcall	stringdir
  2446  098A  00C5               	movwf	??_scale+3
  2447  098B  120A  118A  200D  120A  158A  	fcall	stringdir
  2448  0990  00C6               	movwf	??_scale+4
  2449  0991  0846               	movf	??_scale+4,w
  2450  0992  00A7               	movwf	___flmul@b+3
  2451  0993  0845               	movf	??_scale+3,w
  2452  0994  00A6               	movwf	___flmul@b+2
  2453  0995  0844               	movf	??_scale+2,w
  2454  0996  00A5               	movwf	___flmul@b+1
  2455  0997  0843               	movf	??_scale+1,w
  2456  0998  00A4               	movwf	___flmul@b
  2457  0999  3064               	movlw	100
  2458  099A  00F7               	movwf	___awdiv@divisor
  2459  099B  3000               	movlw	0
  2460  099C  00F8               	movwf	___awdiv@divisor+1
  2461  099D  0850               	movf	scale@scl,w
  2462  099E  00F9               	movwf	___awdiv@dividend
  2463  099F  01FA               	clrf	___awdiv@dividend+1
  2464  09A0  1BF9               	btfsc	___awdiv@dividend,7
  2465  09A1  03FA               	decf	___awdiv@dividend+1,f
  2466  09A2  160A  158A  2620  120A  158A  	fcall	___awdiv
  2467  09A7  0877               	movf	?___awdiv,w
  2468  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  2469  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  2470  09AA  00C7               	movwf	??_scale+5
  2471  09AB  3001               	movlw	1
  2472  09AC                     u4175:
  2473  09AC  1003               	clrc
  2474  09AD  0DC7               	rlf	??_scale+5,f
  2475  09AE  3EFF               	addlw	-1
  2476  09AF  1D03               	skipz
  2477  09B0  29AC               	goto	u4175
  2478  09B1  1003               	clrc
  2479  09B2  0D47               	rlf	??_scale+5,w
  2480  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2481  09B4  0084               	movwf	4
  2482  09B5  120A  118A  200D  120A  158A  	fcall	stringdir
  2483  09BA  00C8               	movwf	??_scale+6
  2484  09BB  120A  118A  200D  120A  158A  	fcall	stringdir
  2485  09C0  00C9               	movwf	??_scale+7
  2486  09C1  120A  118A  200D  120A  158A  	fcall	stringdir
  2487  09C6  00CA               	movwf	??_scale+8
  2488  09C7  120A  118A  200D  120A  158A  	fcall	stringdir
  2489  09CC  00CB               	movwf	??_scale+9
  2490  09CD  084B               	movf	??_scale+9,w
  2491  09CE  00AB               	movwf	___flmul@a+3
  2492  09CF  084A               	movf	??_scale+8,w
  2493  09D0  00AA               	movwf	___flmul@a+2
  2494  09D1  0849               	movf	??_scale+7,w
  2495  09D2  00A9               	movwf	___flmul@a+1
  2496  09D3  0848               	movf	??_scale+6,w
  2497  09D4  00A8               	movwf	___flmul@a
  2498  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  2499  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  2500  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  2501  09DC  0827               	movf	?___flmul+3,w
  2502  09DD  00CF               	movwf	_scale$927+3
  2503  09DE  0826               	movf	?___flmul+2,w
  2504  09DF  00CE               	movwf	_scale$927+2
  2505  09E0  0825               	movf	?___flmul+1,w
  2506  09E1  00CD               	movwf	_scale$927+1
  2507  09E2  0824               	movf	?___flmul,w
  2508  09E3  00CC               	movwf	_scale$927
  2509                           
  2510                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsig
      +                          ned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigne
      +                          d char)(scl%10)];
  2511  09E4  300A               	movlw	10
  2512  09E5  00F0               	movwf	___awmod@divisor
  2513  09E6  3000               	movlw	0
  2514  09E7  00F1               	movwf	___awmod@divisor+1
  2515  09E8  0850               	movf	scale@scl,w
  2516  09E9  00F2               	movwf	___awmod@dividend
  2517  09EA  01F3               	clrf	___awmod@dividend+1
  2518  09EB  1BF2               	btfsc	___awmod@dividend,7
  2519  09EC  03F3               	decf	___awmod@dividend+1,f
  2520  09ED  160A  158A  2561  120A  158A  	fcall	___awmod
  2521  09F2  0870               	movf	?___awmod,w
  2522  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  2523  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  2524  09F5  00C2               	movwf	??_scale
  2525  09F6  3001               	movlw	1
  2526  09F7                     u4185:
  2527  09F7  1003               	clrc
  2528  09F8  0DC2               	rlf	??_scale,f
  2529  09F9  3EFF               	addlw	-1
  2530  09FA  1D03               	skipz
  2531  09FB  29F7               	goto	u4185
  2532  09FC  1003               	clrc
  2533  09FD  0D42               	rlf	??_scale,w
  2534  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2535  09FF  0084               	movwf	4
  2536  0A00  120A  118A  200D  120A  158A  	fcall	stringdir
  2537  0A05  00C3               	movwf	??_scale+1
  2538  0A06  120A  118A  200D  120A  158A  	fcall	stringdir
  2539  0A0B  00C4               	movwf	??_scale+2
  2540  0A0C  120A  118A  200D  120A  158A  	fcall	stringdir
  2541  0A11  00C5               	movwf	??_scale+3
  2542  0A12  120A  118A  200D  120A  158A  	fcall	stringdir
  2543  0A17  00C6               	movwf	??_scale+4
  2544  0A18  0846               	movf	??_scale+4,w
  2545  0A19  00A7               	movwf	___flmul@b+3
  2546  0A1A  0845               	movf	??_scale+3,w
  2547  0A1B  00A6               	movwf	___flmul@b+2
  2548  0A1C  0844               	movf	??_scale+2,w
  2549  0A1D  00A5               	movwf	___flmul@b+1
  2550  0A1E  0843               	movf	??_scale+1,w
  2551  0A1F  00A4               	movwf	___flmul@b
  2552  0A20  084F               	movf	_scale$927+3,w
  2553  0A21  00AB               	movwf	___flmul@a+3
  2554  0A22  084E               	movf	_scale$927+2,w
  2555  0A23  00AA               	movwf	___flmul@a+2
  2556  0A24  084D               	movf	_scale$927+1,w
  2557  0A25  00A9               	movwf	___flmul@a+1
  2558  0A26  084C               	movf	_scale$927,w
  2559  0A27  00A8               	movwf	___flmul@a
  2560  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  2561  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  2562  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  2563  0A2F  0827               	movf	?___flmul+3,w
  2564  0A30  00C1               	movwf	?_scale+3
  2565  0A31  0826               	movf	?___flmul+2,w
  2566  0A32  00C0               	movwf	?_scale+2
  2567  0A33  0825               	movf	?___flmul+1,w
  2568  0A34  00BF               	movwf	?_scale+1
  2569  0A35  0824               	movf	?___flmul,w
  2570  0A36  00BE               	movwf	?_scale
  2571  0A37  2C9E               	goto	l234
  2572  0A38                     l2675:
  2573  0A38  0850               	movf	scale@scl,w
  2574  0A39  3A80               	xorlw	128
  2575  0A3A  3E75               	addlw	-139
  2576  0A3B  1C03               	skipc
  2577  0A3C  2A3E               	goto	u4191
  2578  0A3D  2A3F               	goto	u4190
  2579  0A3E                     u4191:
  2580  0A3E  2AC7               	goto	l2681
  2581  0A3F                     u4190:
  2582  0A3F                     l2677:
  2583                           
  2584                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _npowers_[(unsig
      +                          ned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2585  0A3F  300A               	movlw	10
  2586  0A40  00F0               	movwf	___awmod@divisor
  2587  0A41  3000               	movlw	0
  2588  0A42  00F1               	movwf	___awmod@divisor+1
  2589  0A43  0850               	movf	scale@scl,w
  2590  0A44  00F2               	movwf	___awmod@dividend
  2591  0A45  01F3               	clrf	___awmod@dividend+1
  2592  0A46  1BF2               	btfsc	___awmod@dividend,7
  2593  0A47  03F3               	decf	___awmod@dividend+1,f
  2594  0A48  160A  158A  2561  120A  158A  	fcall	___awmod
  2595  0A4D  0870               	movf	?___awmod,w
  2596  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  2597  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  2598  0A50  00C2               	movwf	??_scale
  2599  0A51  3001               	movlw	1
  2600  0A52                     u4205:
  2601  0A52  1003               	clrc
  2602  0A53  0DC2               	rlf	??_scale,f
  2603  0A54  3EFF               	addlw	-1
  2604  0A55  1D03               	skipz
  2605  0A56  2A52               	goto	u4205
  2606  0A57  1003               	clrc
  2607  0A58  0D42               	rlf	??_scale,w
  2608  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2609  0A5A  0084               	movwf	4
  2610  0A5B  120A  118A  200D  120A  158A  	fcall	stringdir
  2611  0A60  00C3               	movwf	??_scale+1
  2612  0A61  120A  118A  200D  120A  158A  	fcall	stringdir
  2613  0A66  00C4               	movwf	??_scale+2
  2614  0A67  120A  118A  200D  120A  158A  	fcall	stringdir
  2615  0A6C  00C5               	movwf	??_scale+3
  2616  0A6D  120A  118A  200D  120A  158A  	fcall	stringdir
  2617  0A72  00C6               	movwf	??_scale+4
  2618  0A73  0846               	movf	??_scale+4,w
  2619  0A74  00A7               	movwf	___flmul@b+3
  2620  0A75  0845               	movf	??_scale+3,w
  2621  0A76  00A6               	movwf	___flmul@b+2
  2622  0A77  0844               	movf	??_scale+2,w
  2623  0A78  00A5               	movwf	___flmul@b+1
  2624  0A79  0843               	movf	??_scale+1,w
  2625  0A7A  00A4               	movwf	___flmul@b
  2626  0A7B  300A               	movlw	10
  2627  0A7C  00F7               	movwf	___awdiv@divisor
  2628  0A7D  3000               	movlw	0
  2629  0A7E  00F8               	movwf	___awdiv@divisor+1
  2630  0A7F  0850               	movf	scale@scl,w
  2631  0A80  00F9               	movwf	___awdiv@dividend
  2632  0A81  01FA               	clrf	___awdiv@dividend+1
  2633  0A82  1BF9               	btfsc	___awdiv@dividend,7
  2634  0A83  03FA               	decf	___awdiv@dividend+1,f
  2635  0A84  160A  158A  2620  120A  158A  	fcall	___awdiv
  2636  0A89  0877               	movf	?___awdiv,w
  2637  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  2638  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  2639  0A8C  00C7               	movwf	??_scale+5
  2640  0A8D  3001               	movlw	1
  2641  0A8E                     u4215:
  2642  0A8E  1003               	clrc
  2643  0A8F  0DC7               	rlf	??_scale+5,f
  2644  0A90  3EFF               	addlw	-1
  2645  0A91  1D03               	skipz
  2646  0A92  2A8E               	goto	u4215
  2647  0A93  1003               	clrc
  2648  0A94  0D47               	rlf	??_scale+5,w
  2649  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2650  0A96  0084               	movwf	4
  2651  0A97  120A  118A  200D  120A  158A  	fcall	stringdir
  2652  0A9C  00C8               	movwf	??_scale+6
  2653  0A9D  120A  118A  200D  120A  158A  	fcall	stringdir
  2654  0AA2  00C9               	movwf	??_scale+7
  2655  0AA3  120A  118A  200D  120A  158A  	fcall	stringdir
  2656  0AA8  00CA               	movwf	??_scale+8
  2657  0AA9  120A  118A  200D  120A  158A  	fcall	stringdir
  2658  0AAE  00CB               	movwf	??_scale+9
  2659  0AAF  084B               	movf	??_scale+9,w
  2660  0AB0  00AB               	movwf	___flmul@a+3
  2661  0AB1  084A               	movf	??_scale+8,w
  2662  0AB2  00AA               	movwf	___flmul@a+2
  2663  0AB3  0849               	movf	??_scale+7,w
  2664  0AB4  00A9               	movwf	___flmul@a+1
  2665  0AB5  0848               	movf	??_scale+6,w
  2666  0AB6  00A8               	movwf	___flmul@a
  2667  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  2668  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  2669  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  2670  0ABE  0827               	movf	?___flmul+3,w
  2671  0ABF  00C1               	movwf	?_scale+3
  2672  0AC0  0826               	movf	?___flmul+2,w
  2673  0AC1  00C0               	movwf	?_scale+2
  2674  0AC2  0825               	movf	?___flmul+1,w
  2675  0AC3  00BF               	movwf	?_scale+1
  2676  0AC4  0824               	movf	?___flmul,w
  2677  0AC5  00BE               	movwf	?_scale
  2678  0AC6  2C9E               	goto	l234
  2679  0AC7                     l2681:
  2680                           
  2681                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _npowers_[(unsign
      +                          ed char)scl];
  2682  0AC7  0850               	movf	scale@scl,w
  2683  0AC8  00C2               	movwf	??_scale
  2684  0AC9  3001               	movlw	1
  2685  0ACA                     u4225:
  2686  0ACA  1003               	clrc
  2687  0ACB  0DC2               	rlf	??_scale,f
  2688  0ACC  3EFF               	addlw	-1
  2689  0ACD  1D03               	skipz
  2690  0ACE  2ACA               	goto	u4225
  2691  0ACF  1003               	clrc
  2692  0AD0  0D42               	rlf	??_scale,w
  2693  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2694  0AD2  0084               	movwf	4
  2695  0AD3  120A  118A  200D  120A  158A  	fcall	stringdir
  2696  0AD8  00C3               	movwf	??_scale+1
  2697  0AD9  120A  118A  200D  120A  158A  	fcall	stringdir
  2698  0ADE  00C4               	movwf	??_scale+2
  2699  0ADF  120A  118A  200D  120A  158A  	fcall	stringdir
  2700  0AE4  00C5               	movwf	??_scale+3
  2701  0AE5  120A  118A  200D  120A  158A  	fcall	stringdir
  2702  0AEA  00C6               	movwf	??_scale+4
  2703  0AEB  0846               	movf	??_scale+4,w
  2704  0AEC  00C1               	movwf	?_scale+3
  2705  0AED  0845               	movf	??_scale+3,w
  2706  0AEE  00C0               	movwf	?_scale+2
  2707  0AEF  0844               	movf	??_scale+2,w
  2708  0AF0  00BF               	movwf	?_scale+1
  2709  0AF1  0843               	movf	??_scale+1,w
  2710  0AF2  00BE               	movwf	?_scale
  2711  0AF3  2C9E               	goto	l234
  2712  0AF4                     l2685:
  2713                           
  2714                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110)
  2715  0AF4  0850               	movf	scale@scl,w
  2716  0AF5  3A80               	xorlw	128
  2717  0AF6  3E12               	addlw	-238
  2718  0AF7  1C03               	skipc
  2719  0AF8  2AFA               	goto	u4231
  2720  0AF9  2AFB               	goto	u4230
  2721  0AFA                     u4231:
  2722  0AFA  2BE3               	goto	l2693
  2723  0AFB                     u4230:
  2724  0AFB                     l2687:
  2725                           
  2726                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigne
      +                          d char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned ch
      +                          ar)(scl%10)];
  2727  0AFB  300A               	movlw	10
  2728  0AFC  00F7               	movwf	___awdiv@divisor
  2729  0AFD  3000               	movlw	0
  2730  0AFE  00F8               	movwf	___awdiv@divisor+1
  2731  0AFF  0850               	movf	scale@scl,w
  2732  0B00  00F2               	movwf	___awmod@dividend
  2733  0B01  01F3               	clrf	___awmod@dividend+1
  2734  0B02  1BF2               	btfsc	___awmod@dividend,7
  2735  0B03  03F3               	decf	___awmod@dividend+1,f
  2736  0B04  3064               	movlw	100
  2737  0B05  00F0               	movwf	___awmod@divisor
  2738  0B06  3000               	movlw	0
  2739  0B07  00F1               	movwf	___awmod@divisor+1
  2740  0B08  160A  158A  2561  120A  158A  	fcall	___awmod
  2741  0B0D  0871               	movf	?___awmod+1,w
  2742  0B0E  00FA               	movwf	___awdiv@dividend+1
  2743  0B0F  0870               	movf	?___awmod,w
  2744  0B10  00F9               	movwf	___awdiv@dividend
  2745  0B11  160A  158A  2620  120A  158A  	fcall	___awdiv
  2746  0B16  0877               	movf	?___awdiv,w
  2747  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  2748  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  2749  0B19  00C2               	movwf	??_scale
  2750  0B1A  3001               	movlw	1
  2751  0B1B                     u4245:
  2752  0B1B  1003               	clrc
  2753  0B1C  0DC2               	rlf	??_scale,f
  2754  0B1D  3EFF               	addlw	-1
  2755  0B1E  1D03               	skipz
  2756  0B1F  2B1B               	goto	u4245
  2757  0B20  1003               	clrc
  2758  0B21  0D42               	rlf	??_scale,w
  2759  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2760  0B23  0084               	movwf	4
  2761  0B24  120A  118A  200D  120A  158A  	fcall	stringdir
  2762  0B29  00C3               	movwf	??_scale+1
  2763  0B2A  120A  118A  200D  120A  158A  	fcall	stringdir
  2764  0B2F  00C4               	movwf	??_scale+2
  2765  0B30  120A  118A  200D  120A  158A  	fcall	stringdir
  2766  0B35  00C5               	movwf	??_scale+3
  2767  0B36  120A  118A  200D  120A  158A  	fcall	stringdir
  2768  0B3B  00C6               	movwf	??_scale+4
  2769  0B3C  0846               	movf	??_scale+4,w
  2770  0B3D  00A7               	movwf	___flmul@b+3
  2771  0B3E  0845               	movf	??_scale+3,w
  2772  0B3F  00A6               	movwf	___flmul@b+2
  2773  0B40  0844               	movf	??_scale+2,w
  2774  0B41  00A5               	movwf	___flmul@b+1
  2775  0B42  0843               	movf	??_scale+1,w
  2776  0B43  00A4               	movwf	___flmul@b
  2777  0B44  3064               	movlw	100
  2778  0B45  00F7               	movwf	___awdiv@divisor
  2779  0B46  3000               	movlw	0
  2780  0B47  00F8               	movwf	___awdiv@divisor+1
  2781  0B48  0850               	movf	scale@scl,w
  2782  0B49  00F9               	movwf	___awdiv@dividend
  2783  0B4A  01FA               	clrf	___awdiv@dividend+1
  2784  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  2785  0B4C  03FA               	decf	___awdiv@dividend+1,f
  2786  0B4D  160A  158A  2620  120A  158A  	fcall	___awdiv
  2787  0B52  0877               	movf	?___awdiv,w
  2788  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  2789  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  2790  0B55  00C7               	movwf	??_scale+5
  2791  0B56  3001               	movlw	1
  2792  0B57                     u4255:
  2793  0B57  1003               	clrc
  2794  0B58  0DC7               	rlf	??_scale+5,f
  2795  0B59  3EFF               	addlw	-1
  2796  0B5A  1D03               	skipz
  2797  0B5B  2B57               	goto	u4255
  2798  0B5C  1003               	clrc
  2799  0B5D  0D47               	rlf	??_scale+5,w
  2800  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2801  0B5F  0084               	movwf	4
  2802  0B60  120A  118A  200D  120A  158A  	fcall	stringdir
  2803  0B65  00C8               	movwf	??_scale+6
  2804  0B66  120A  118A  200D  120A  158A  	fcall	stringdir
  2805  0B6B  00C9               	movwf	??_scale+7
  2806  0B6C  120A  118A  200D  120A  158A  	fcall	stringdir
  2807  0B71  00CA               	movwf	??_scale+8
  2808  0B72  120A  118A  200D  120A  158A  	fcall	stringdir
  2809  0B77  00CB               	movwf	??_scale+9
  2810  0B78  084B               	movf	??_scale+9,w
  2811  0B79  00AB               	movwf	___flmul@a+3
  2812  0B7A  084A               	movf	??_scale+8,w
  2813  0B7B  00AA               	movwf	___flmul@a+2
  2814  0B7C  0849               	movf	??_scale+7,w
  2815  0B7D  00A9               	movwf	___flmul@a+1
  2816  0B7E  0848               	movf	??_scale+6,w
  2817  0B7F  00A8               	movwf	___flmul@a
  2818  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  2819  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  2820  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  2821  0B87  0827               	movf	?___flmul+3,w
  2822  0B88  00CF               	movwf	_scale$927+3
  2823  0B89  0826               	movf	?___flmul+2,w
  2824  0B8A  00CE               	movwf	_scale$927+2
  2825  0B8B  0825               	movf	?___flmul+1,w
  2826  0B8C  00CD               	movwf	_scale$927+1
  2827  0B8D  0824               	movf	?___flmul,w
  2828  0B8E  00CC               	movwf	_scale$927
  2829                           
  2830                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigne
      +                          d char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned ch
      +                          ar)(scl%10)];
  2831  0B8F  300A               	movlw	10
  2832  0B90  00F0               	movwf	___awmod@divisor
  2833  0B91  3000               	movlw	0
  2834  0B92  00F1               	movwf	___awmod@divisor+1
  2835  0B93  0850               	movf	scale@scl,w
  2836  0B94  00F2               	movwf	___awmod@dividend
  2837  0B95  01F3               	clrf	___awmod@dividend+1
  2838  0B96  1BF2               	btfsc	___awmod@dividend,7
  2839  0B97  03F3               	decf	___awmod@dividend+1,f
  2840  0B98  160A  158A  2561  120A  158A  	fcall	___awmod
  2841  0B9D  0870               	movf	?___awmod,w
  2842  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  2843  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  2844  0BA0  00C2               	movwf	??_scale
  2845  0BA1  3001               	movlw	1
  2846  0BA2                     u4265:
  2847  0BA2  1003               	clrc
  2848  0BA3  0DC2               	rlf	??_scale,f
  2849  0BA4  3EFF               	addlw	-1
  2850  0BA5  1D03               	skipz
  2851  0BA6  2BA2               	goto	u4265
  2852  0BA7  1003               	clrc
  2853  0BA8  0D42               	rlf	??_scale,w
  2854  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2855  0BAA  0084               	movwf	4
  2856  0BAB  120A  118A  200D  120A  158A  	fcall	stringdir
  2857  0BB0  00C3               	movwf	??_scale+1
  2858  0BB1  120A  118A  200D  120A  158A  	fcall	stringdir
  2859  0BB6  00C4               	movwf	??_scale+2
  2860  0BB7  120A  118A  200D  120A  158A  	fcall	stringdir
  2861  0BBC  00C5               	movwf	??_scale+3
  2862  0BBD  120A  118A  200D  120A  158A  	fcall	stringdir
  2863  0BC2  00C6               	movwf	??_scale+4
  2864  0BC3  0846               	movf	??_scale+4,w
  2865  0BC4  00A7               	movwf	___flmul@b+3
  2866  0BC5  0845               	movf	??_scale+3,w
  2867  0BC6  00A6               	movwf	___flmul@b+2
  2868  0BC7  0844               	movf	??_scale+2,w
  2869  0BC8  00A5               	movwf	___flmul@b+1
  2870  0BC9  0843               	movf	??_scale+1,w
  2871  0BCA  00A4               	movwf	___flmul@b
  2872  0BCB  084F               	movf	_scale$927+3,w
  2873  0BCC  00AB               	movwf	___flmul@a+3
  2874  0BCD  084E               	movf	_scale$927+2,w
  2875  0BCE  00AA               	movwf	___flmul@a+2
  2876  0BCF  084D               	movf	_scale$927+1,w
  2877  0BD0  00A9               	movwf	___flmul@a+1
  2878  0BD1  084C               	movf	_scale$927,w
  2879  0BD2  00A8               	movwf	___flmul@a
  2880  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  2881  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  2882  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  2883  0BDA  0827               	movf	?___flmul+3,w
  2884  0BDB  00C1               	movwf	?_scale+3
  2885  0BDC  0826               	movf	?___flmul+2,w
  2886  0BDD  00C0               	movwf	?_scale+2
  2887  0BDE  0825               	movf	?___flmul+1,w
  2888  0BDF  00BF               	movwf	?_scale+1
  2889  0BE0  0824               	movf	?___flmul,w
  2890  0BE1  00BE               	movwf	?_scale
  2891  0BE2  2C9E               	goto	l234
  2892  0BE3                     l2693:
  2893  0BE3  0850               	movf	scale@scl,w
  2894  0BE4  3A80               	xorlw	128
  2895  0BE5  3E75               	addlw	-139
  2896  0BE6  1C03               	skipc
  2897  0BE7  2BE9               	goto	u4271
  2898  0BE8  2BEA               	goto	u4270
  2899  0BE9                     u4271:
  2900  0BE9  2C72               	goto	l2699
  2901  0BEA                     u4270:
  2902  0BEA                     l2695:
  2903                           
  2904                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _powers_[(unsigne
      +                          d char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2905  0BEA  300A               	movlw	10
  2906  0BEB  00F0               	movwf	___awmod@divisor
  2907  0BEC  3000               	movlw	0
  2908  0BED  00F1               	movwf	___awmod@divisor+1
  2909  0BEE  0850               	movf	scale@scl,w
  2910  0BEF  00F2               	movwf	___awmod@dividend
  2911  0BF0  01F3               	clrf	___awmod@dividend+1
  2912  0BF1  1BF2               	btfsc	___awmod@dividend,7
  2913  0BF2  03F3               	decf	___awmod@dividend+1,f
  2914  0BF3  160A  158A  2561  120A  158A  	fcall	___awmod
  2915  0BF8  0870               	movf	?___awmod,w
  2916  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  2917  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  2918  0BFB  00C2               	movwf	??_scale
  2919  0BFC  3001               	movlw	1
  2920  0BFD                     u4285:
  2921  0BFD  1003               	clrc
  2922  0BFE  0DC2               	rlf	??_scale,f
  2923  0BFF  3EFF               	addlw	-1
  2924  0C00  1D03               	skipz
  2925  0C01  2BFD               	goto	u4285
  2926  0C02  1003               	clrc
  2927  0C03  0D42               	rlf	??_scale,w
  2928  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2929  0C05  0084               	movwf	4
  2930  0C06  120A  118A  200D  120A  158A  	fcall	stringdir
  2931  0C0B  00C3               	movwf	??_scale+1
  2932  0C0C  120A  118A  200D  120A  158A  	fcall	stringdir
  2933  0C11  00C4               	movwf	??_scale+2
  2934  0C12  120A  118A  200D  120A  158A  	fcall	stringdir
  2935  0C17  00C5               	movwf	??_scale+3
  2936  0C18  120A  118A  200D  120A  158A  	fcall	stringdir
  2937  0C1D  00C6               	movwf	??_scale+4
  2938  0C1E  0846               	movf	??_scale+4,w
  2939  0C1F  00A7               	movwf	___flmul@b+3
  2940  0C20  0845               	movf	??_scale+3,w
  2941  0C21  00A6               	movwf	___flmul@b+2
  2942  0C22  0844               	movf	??_scale+2,w
  2943  0C23  00A5               	movwf	___flmul@b+1
  2944  0C24  0843               	movf	??_scale+1,w
  2945  0C25  00A4               	movwf	___flmul@b
  2946  0C26  300A               	movlw	10
  2947  0C27  00F7               	movwf	___awdiv@divisor
  2948  0C28  3000               	movlw	0
  2949  0C29  00F8               	movwf	___awdiv@divisor+1
  2950  0C2A  0850               	movf	scale@scl,w
  2951  0C2B  00F9               	movwf	___awdiv@dividend
  2952  0C2C  01FA               	clrf	___awdiv@dividend+1
  2953  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  2954  0C2E  03FA               	decf	___awdiv@dividend+1,f
  2955  0C2F  160A  158A  2620  120A  158A  	fcall	___awdiv
  2956  0C34  0877               	movf	?___awdiv,w
  2957  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  2958  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  2959  0C37  00C7               	movwf	??_scale+5
  2960  0C38  3001               	movlw	1
  2961  0C39                     u4295:
  2962  0C39  1003               	clrc
  2963  0C3A  0DC7               	rlf	??_scale+5,f
  2964  0C3B  3EFF               	addlw	-1
  2965  0C3C  1D03               	skipz
  2966  0C3D  2C39               	goto	u4295
  2967  0C3E  1003               	clrc
  2968  0C3F  0D47               	rlf	??_scale+5,w
  2969  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2970  0C41  0084               	movwf	4
  2971  0C42  120A  118A  200D  120A  158A  	fcall	stringdir
  2972  0C47  00C8               	movwf	??_scale+6
  2973  0C48  120A  118A  200D  120A  158A  	fcall	stringdir
  2974  0C4D  00C9               	movwf	??_scale+7
  2975  0C4E  120A  118A  200D  120A  158A  	fcall	stringdir
  2976  0C53  00CA               	movwf	??_scale+8
  2977  0C54  120A  118A  200D  120A  158A  	fcall	stringdir
  2978  0C59  00CB               	movwf	??_scale+9
  2979  0C5A  084B               	movf	??_scale+9,w
  2980  0C5B  00AB               	movwf	___flmul@a+3
  2981  0C5C  084A               	movf	??_scale+8,w
  2982  0C5D  00AA               	movwf	___flmul@a+2
  2983  0C5E  0849               	movf	??_scale+7,w
  2984  0C5F  00A9               	movwf	___flmul@a+1
  2985  0C60  0848               	movf	??_scale+6,w
  2986  0C61  00A8               	movwf	___flmul@a
  2987  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  2988  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  2989  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  2990  0C69  0827               	movf	?___flmul+3,w
  2991  0C6A  00C1               	movwf	?_scale+3
  2992  0C6B  0826               	movf	?___flmul+2,w
  2993  0C6C  00C0               	movwf	?_scale+2
  2994  0C6D  0825               	movf	?___flmul+1,w
  2995  0C6E  00BF               	movwf	?_scale+1
  2996  0C6F  0824               	movf	?___flmul,w
  2997  0C70  00BE               	movwf	?_scale
  2998  0C71  2C9E               	goto	l234
  2999  0C72                     l2699:
  3000                           
  3001                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _powers_[(unsigned
      +                           char)scl];
  3002  0C72  0850               	movf	scale@scl,w
  3003  0C73  00C2               	movwf	??_scale
  3004  0C74  3001               	movlw	1
  3005  0C75                     u4305:
  3006  0C75  1003               	clrc
  3007  0C76  0DC2               	rlf	??_scale,f
  3008  0C77  3EFF               	addlw	-1
  3009  0C78  1D03               	skipz
  3010  0C79  2C75               	goto	u4305
  3011  0C7A  1003               	clrc
  3012  0C7B  0D42               	rlf	??_scale,w
  3013  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3014  0C7D  0084               	movwf	4
  3015  0C7E  120A  118A  200D  120A  158A  	fcall	stringdir
  3016  0C83  00C3               	movwf	??_scale+1
  3017  0C84  120A  118A  200D  120A  158A  	fcall	stringdir
  3018  0C89  00C4               	movwf	??_scale+2
  3019  0C8A  120A  118A  200D  120A  158A  	fcall	stringdir
  3020  0C8F  00C5               	movwf	??_scale+3
  3021  0C90  120A  118A  200D  120A  158A  	fcall	stringdir
  3022  0C95  00C6               	movwf	??_scale+4
  3023  0C96  0846               	movf	??_scale+4,w
  3024  0C97  00C1               	movwf	?_scale+3
  3025  0C98  0845               	movf	??_scale+3,w
  3026  0C99  00C0               	movwf	?_scale+2
  3027  0C9A  0844               	movf	??_scale+2,w
  3028  0C9B  00BF               	movwf	?_scale+1
  3029  0C9C  0843               	movf	??_scale+1,w
  3030  0C9D  00BE               	movwf	?_scale
  3031  0C9E                     l234:
  3032  0C9E  0008               	return
  3033  0C9F                     __end_of_scale:
  3034                           
  3035                           	psect	text3
  3036  1D61                     __ptext3:	
  3037 ;; *************** function ___awmod *****************
  3038 ;; Defined at:
  3039 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  divisor         2    0[COMMON] int 
  3042 ;;  dividend        2    2[COMMON] int 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  sign            1    6[COMMON] unsigned char 
  3045 ;;  counter         1    5[COMMON] unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  2    0[COMMON] int 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2, status,0
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3055 ;;      Params:         4       0       0       0       0
  3056 ;;      Locals:         2       0       0       0       0
  3057 ;;      Temps:          1       0       0       0       0
  3058 ;;      Totals:         7       0       0       0       0
  3059 ;;Total ram usage:        7 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_scale
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           
  3069                           ;psect for function ___awmod
  3070  1D61                     ___awmod:
  3071  1D61                     l2221:	
  3072                           ;incstack = 0
  3073                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3074                           
  3075  1D61  01F6               	clrf	___awmod@sign
  3076  1D62                     l2223:
  3077  1D62  1FF3               	btfss	___awmod@dividend+1,7
  3078  1D63  2D65               	goto	u3001
  3079  1D64  2D66               	goto	u3000
  3080  1D65                     u3001:
  3081  1D65  2D6D               	goto	l2229
  3082  1D66                     u3000:
  3083  1D66                     l2225:
  3084  1D66  09F2               	comf	___awmod@dividend,f
  3085  1D67  09F3               	comf	___awmod@dividend+1,f
  3086  1D68  0AF2               	incf	___awmod@dividend,f
  3087  1D69  1903               	skipnz
  3088  1D6A  0AF3               	incf	___awmod@dividend+1,f
  3089  1D6B                     l2227:
  3090  1D6B  01F6               	clrf	___awmod@sign
  3091  1D6C  0AF6               	incf	___awmod@sign,f
  3092  1D6D                     l2229:
  3093  1D6D  1FF1               	btfss	___awmod@divisor+1,7
  3094  1D6E  2D70               	goto	u3011
  3095  1D6F  2D71               	goto	u3010
  3096  1D70                     u3011:
  3097  1D70  2D76               	goto	l2233
  3098  1D71                     u3010:
  3099  1D71                     l2231:
  3100  1D71  09F0               	comf	___awmod@divisor,f
  3101  1D72  09F1               	comf	___awmod@divisor+1,f
  3102  1D73  0AF0               	incf	___awmod@divisor,f
  3103  1D74  1903               	skipnz
  3104  1D75  0AF1               	incf	___awmod@divisor+1,f
  3105  1D76                     l2233:
  3106  1D76  0870               	movf	___awmod@divisor,w
  3107  1D77  0471               	iorwf	___awmod@divisor+1,w
  3108  1D78  1903               	btfsc	3,2
  3109  1D79  2D7B               	goto	u3021
  3110  1D7A  2D7C               	goto	u3020
  3111  1D7B                     u3021:
  3112  1D7B  2DAB               	goto	l2251
  3113  1D7C                     u3020:
  3114  1D7C                     l2235:
  3115  1D7C  01F5               	clrf	___awmod@counter
  3116  1D7D  0AF5               	incf	___awmod@counter,f
  3117  1D7E  2D8A               	goto	l2241
  3118  1D7F                     l2237:
  3119  1D7F  3001               	movlw	1
  3120  1D80                     u3035:
  3121  1D80  1003               	clrc
  3122  1D81  0DF0               	rlf	___awmod@divisor,f
  3123  1D82  0DF1               	rlf	___awmod@divisor+1,f
  3124  1D83  3EFF               	addlw	-1
  3125  1D84  1D03               	skipz
  3126  1D85  2D80               	goto	u3035
  3127  1D86                     l2239:
  3128  1D86  3001               	movlw	1
  3129  1D87  00F4               	movwf	??___awmod
  3130  1D88  0874               	movf	??___awmod,w
  3131  1D89  07F5               	addwf	___awmod@counter,f
  3132  1D8A                     l2241:
  3133  1D8A  1FF1               	btfss	___awmod@divisor+1,7
  3134  1D8B  2D8D               	goto	u3041
  3135  1D8C  2D8E               	goto	u3040
  3136  1D8D                     u3041:
  3137  1D8D  2D7F               	goto	l2237
  3138  1D8E                     u3040:
  3139  1D8E                     l2243:
  3140  1D8E  0871               	movf	___awmod@divisor+1,w
  3141  1D8F  0273               	subwf	___awmod@dividend+1,w
  3142  1D90  1D03               	skipz
  3143  1D91  2D94               	goto	u3055
  3144  1D92  0870               	movf	___awmod@divisor,w
  3145  1D93  0272               	subwf	___awmod@dividend,w
  3146  1D94                     u3055:
  3147  1D94  1C03               	skipc
  3148  1D95  2D97               	goto	u3051
  3149  1D96  2D98               	goto	u3050
  3150  1D97                     u3051:
  3151  1D97  2D9E               	goto	l2247
  3152  1D98                     u3050:
  3153  1D98                     l2245:
  3154  1D98  0870               	movf	___awmod@divisor,w
  3155  1D99  02F2               	subwf	___awmod@dividend,f
  3156  1D9A  0871               	movf	___awmod@divisor+1,w
  3157  1D9B  1C03               	skipc
  3158  1D9C  03F3               	decf	___awmod@dividend+1,f
  3159  1D9D  02F3               	subwf	___awmod@dividend+1,f
  3160  1D9E                     l2247:
  3161  1D9E  3001               	movlw	1
  3162  1D9F                     u3065:
  3163  1D9F  1003               	clrc
  3164  1DA0  0CF1               	rrf	___awmod@divisor+1,f
  3165  1DA1  0CF0               	rrf	___awmod@divisor,f
  3166  1DA2  3EFF               	addlw	-1
  3167  1DA3  1D03               	skipz
  3168  1DA4  2D9F               	goto	u3065
  3169  1DA5                     l2249:
  3170  1DA5  3001               	movlw	1
  3171  1DA6  02F5               	subwf	___awmod@counter,f
  3172  1DA7  1D03               	btfss	3,2
  3173  1DA8  2DAA               	goto	u3071
  3174  1DA9  2DAB               	goto	u3070
  3175  1DAA                     u3071:
  3176  1DAA  2D8E               	goto	l2243
  3177  1DAB                     u3070:
  3178  1DAB                     l2251:
  3179  1DAB  0876               	movf	___awmod@sign,w
  3180  1DAC  1903               	btfsc	3,2
  3181  1DAD  2DAF               	goto	u3081
  3182  1DAE  2DB0               	goto	u3080
  3183  1DAF                     u3081:
  3184  1DAF  2DB5               	goto	l2255
  3185  1DB0                     u3080:
  3186  1DB0                     l2253:
  3187  1DB0  09F2               	comf	___awmod@dividend,f
  3188  1DB1  09F3               	comf	___awmod@dividend+1,f
  3189  1DB2  0AF2               	incf	___awmod@dividend,f
  3190  1DB3  1903               	skipnz
  3191  1DB4  0AF3               	incf	___awmod@dividend+1,f
  3192  1DB5                     l2255:
  3193  1DB5  0873               	movf	___awmod@dividend+1,w
  3194  1DB6  00F1               	movwf	?___awmod+1
  3195  1DB7  0872               	movf	___awmod@dividend,w
  3196  1DB8  00F0               	movwf	?___awmod
  3197  1DB9                     l496:
  3198  1DB9  0008               	return
  3199  1DBA                     __end_of___awmod:
  3200                           
  3201                           	psect	text4
  3202  1E20                     __ptext4:	
  3203 ;; *************** function ___awdiv *****************
  3204 ;; Defined at:
  3205 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  divisor         2    7[COMMON] int 
  3208 ;;  dividend        2    9[COMMON] int 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  quotient        2    2[BANK0 ] int 
  3211 ;;  sign            1    1[BANK0 ] unsigned char 
  3212 ;;  counter         1    0[BANK0 ] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  2    7[COMMON] int 
  3215 ;; Registers used:
  3216 ;;		wreg, status,2, status,0
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3222 ;;      Params:         4       0       0       0       0
  3223 ;;      Locals:         0       4       0       0       0
  3224 ;;      Temps:          1       0       0       0       0
  3225 ;;      Totals:         5       4       0       0       0
  3226 ;;Total ram usage:        9 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_scale
  3232 ;;		_sprintf
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           
  3237                           ;psect for function ___awdiv
  3238  1E20                     ___awdiv:
  3239  1E20                     l2177:	
  3240                           ;incstack = 0
  3241                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3242                           
  3243  1E20  1283               	bcf	3,5	;RP0=0, select bank0
  3244  1E21  1303               	bcf	3,6	;RP1=0, select bank0
  3245  1E22  01A1               	clrf	___awdiv@sign
  3246  1E23                     l2179:
  3247  1E23  1FF8               	btfss	___awdiv@divisor+1,7
  3248  1E24  2E26               	goto	u2901
  3249  1E25  2E27               	goto	u2900
  3250  1E26                     u2901:
  3251  1E26  2E2E               	goto	l2185
  3252  1E27                     u2900:
  3253  1E27                     l2181:
  3254  1E27  09F7               	comf	___awdiv@divisor,f
  3255  1E28  09F8               	comf	___awdiv@divisor+1,f
  3256  1E29  0AF7               	incf	___awdiv@divisor,f
  3257  1E2A  1903               	skipnz
  3258  1E2B  0AF8               	incf	___awdiv@divisor+1,f
  3259  1E2C                     l2183:
  3260  1E2C  01A1               	clrf	___awdiv@sign
  3261  1E2D  0AA1               	incf	___awdiv@sign,f
  3262  1E2E                     l2185:
  3263  1E2E  1FFA               	btfss	___awdiv@dividend+1,7
  3264  1E2F  2E31               	goto	u2911
  3265  1E30  2E32               	goto	u2910
  3266  1E31                     u2911:
  3267  1E31  2E3B               	goto	l2191
  3268  1E32                     u2910:
  3269  1E32                     l2187:
  3270  1E32  09F9               	comf	___awdiv@dividend,f
  3271  1E33  09FA               	comf	___awdiv@dividend+1,f
  3272  1E34  0AF9               	incf	___awdiv@dividend,f
  3273  1E35  1903               	skipnz
  3274  1E36  0AFA               	incf	___awdiv@dividend+1,f
  3275  1E37                     l2189:
  3276  1E37  3001               	movlw	1
  3277  1E38  00FB               	movwf	??___awdiv
  3278  1E39  087B               	movf	??___awdiv,w
  3279  1E3A  06A1               	xorwf	___awdiv@sign,f
  3280  1E3B                     l2191:
  3281  1E3B  01A2               	clrf	___awdiv@quotient
  3282  1E3C  01A3               	clrf	___awdiv@quotient+1
  3283  1E3D                     l2193:
  3284  1E3D  0877               	movf	___awdiv@divisor,w
  3285  1E3E  0478               	iorwf	___awdiv@divisor+1,w
  3286  1E3F  1903               	btfsc	3,2
  3287  1E40  2E42               	goto	u2921
  3288  1E41  2E43               	goto	u2920
  3289  1E42                     u2921:
  3290  1E42  2E7A               	goto	l2213
  3291  1E43                     u2920:
  3292  1E43                     l2195:
  3293  1E43  01A0               	clrf	___awdiv@counter
  3294  1E44  0AA0               	incf	___awdiv@counter,f
  3295  1E45  2E51               	goto	l2201
  3296  1E46                     l2197:
  3297  1E46  3001               	movlw	1
  3298  1E47                     u2935:
  3299  1E47  1003               	clrc
  3300  1E48  0DF7               	rlf	___awdiv@divisor,f
  3301  1E49  0DF8               	rlf	___awdiv@divisor+1,f
  3302  1E4A  3EFF               	addlw	-1
  3303  1E4B  1D03               	skipz
  3304  1E4C  2E47               	goto	u2935
  3305  1E4D                     l2199:
  3306  1E4D  3001               	movlw	1
  3307  1E4E  00FB               	movwf	??___awdiv
  3308  1E4F  087B               	movf	??___awdiv,w
  3309  1E50  07A0               	addwf	___awdiv@counter,f
  3310  1E51                     l2201:
  3311  1E51  1FF8               	btfss	___awdiv@divisor+1,7
  3312  1E52  2E54               	goto	u2941
  3313  1E53  2E55               	goto	u2940
  3314  1E54                     u2941:
  3315  1E54  2E46               	goto	l2197
  3316  1E55                     u2940:
  3317  1E55                     l2203:
  3318  1E55  3001               	movlw	1
  3319  1E56                     u2955:
  3320  1E56  1003               	clrc
  3321  1E57  0DA2               	rlf	___awdiv@quotient,f
  3322  1E58  0DA3               	rlf	___awdiv@quotient+1,f
  3323  1E59  3EFF               	addlw	-1
  3324  1E5A  1D03               	skipz
  3325  1E5B  2E56               	goto	u2955
  3326  1E5C  0878               	movf	___awdiv@divisor+1,w
  3327  1E5D  027A               	subwf	___awdiv@dividend+1,w
  3328  1E5E  1D03               	skipz
  3329  1E5F  2E62               	goto	u2965
  3330  1E60  0877               	movf	___awdiv@divisor,w
  3331  1E61  0279               	subwf	___awdiv@dividend,w
  3332  1E62                     u2965:
  3333  1E62  1C03               	skipc
  3334  1E63  2E65               	goto	u2961
  3335  1E64  2E66               	goto	u2960
  3336  1E65                     u2961:
  3337  1E65  2E6D               	goto	l2209
  3338  1E66                     u2960:
  3339  1E66                     l2205:
  3340  1E66  0877               	movf	___awdiv@divisor,w
  3341  1E67  02F9               	subwf	___awdiv@dividend,f
  3342  1E68  0878               	movf	___awdiv@divisor+1,w
  3343  1E69  1C03               	skipc
  3344  1E6A  03FA               	decf	___awdiv@dividend+1,f
  3345  1E6B  02FA               	subwf	___awdiv@dividend+1,f
  3346  1E6C                     l2207:
  3347  1E6C  1422               	bsf	___awdiv@quotient,0
  3348  1E6D                     l2209:
  3349  1E6D  3001               	movlw	1
  3350  1E6E                     u2975:
  3351  1E6E  1003               	clrc
  3352  1E6F  0CF8               	rrf	___awdiv@divisor+1,f
  3353  1E70  0CF7               	rrf	___awdiv@divisor,f
  3354  1E71  3EFF               	addlw	-1
  3355  1E72  1D03               	skipz
  3356  1E73  2E6E               	goto	u2975
  3357  1E74                     l2211:
  3358  1E74  3001               	movlw	1
  3359  1E75  02A0               	subwf	___awdiv@counter,f
  3360  1E76  1D03               	btfss	3,2
  3361  1E77  2E79               	goto	u2981
  3362  1E78  2E7A               	goto	u2980
  3363  1E79                     u2981:
  3364  1E79  2E55               	goto	l2203
  3365  1E7A                     u2980:
  3366  1E7A                     l2213:
  3367  1E7A  0821               	movf	___awdiv@sign,w
  3368  1E7B  1903               	btfsc	3,2
  3369  1E7C  2E7E               	goto	u2991
  3370  1E7D  2E7F               	goto	u2990
  3371  1E7E                     u2991:
  3372  1E7E  2E84               	goto	l2217
  3373  1E7F                     u2990:
  3374  1E7F                     l2215:
  3375  1E7F  09A2               	comf	___awdiv@quotient,f
  3376  1E80  09A3               	comf	___awdiv@quotient+1,f
  3377  1E81  0AA2               	incf	___awdiv@quotient,f
  3378  1E82  1903               	skipnz
  3379  1E83  0AA3               	incf	___awdiv@quotient+1,f
  3380  1E84                     l2217:
  3381  1E84  0823               	movf	___awdiv@quotient+1,w
  3382  1E85  00F8               	movwf	?___awdiv+1
  3383  1E86  0822               	movf	___awdiv@quotient,w
  3384  1E87  00F7               	movwf	?___awdiv
  3385  1E88                     l483:
  3386  1E88  0008               	return
  3387  1E89                     __end_of___awdiv:
  3388                           
  3389                           	psect	text5
  3390  1B67                     __ptext5:	
  3391 ;; *************** function _isdigit *****************
  3392 ;; Defined at:
  3393 ;;		line 8 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  c               1    wreg     unsigned char 
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;  c               1    1[COMMON] unsigned char 
  3398 ;; Return value:  Size  Location     Type
  3399 ;;		None               void
  3400 ;; Registers used:
  3401 ;;		wreg, status,2, status,0
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3407 ;;      Params:         0       0       0       0       0
  3408 ;;      Locals:         2       0       0       0       0
  3409 ;;      Temps:          0       0       0       0       0
  3410 ;;      Totals:         2       0       0       0       0
  3411 ;;Total ram usage:        2 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; This function calls:
  3414 ;;		Nothing
  3415 ;; This function is called by:
  3416 ;;		_sprintf
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           
  3421                           ;psect for function _isdigit
  3422  1B67                     _isdigit:
  3423                           
  3424                           ;incstack = 0
  3425                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3426                           ;isdigit@c stored from wreg
  3427  1B67  00F1               	movwf	isdigit@c
  3428  1B68                     l2703:
  3429  1B68  01F0               	clrf	_isdigit$759
  3430  1B69                     l2705:
  3431  1B69  303A               	movlw	58
  3432  1B6A  0271               	subwf	isdigit@c,w
  3433  1B6B  1803               	skipnc
  3434  1B6C  2B6E               	goto	u4311
  3435  1B6D  2B6F               	goto	u4310
  3436  1B6E                     u4311:
  3437  1B6E  2B77               	goto	l2711
  3438  1B6F                     u4310:
  3439  1B6F                     l2707:
  3440  1B6F  3030               	movlw	48
  3441  1B70  0271               	subwf	isdigit@c,w
  3442  1B71  1C03               	skipc
  3443  1B72  2B74               	goto	u4321
  3444  1B73  2B75               	goto	u4320
  3445  1B74                     u4321:
  3446  1B74  2B77               	goto	l2711
  3447  1B75                     u4320:
  3448  1B75                     l2709:
  3449  1B75  01F0               	clrf	_isdigit$759
  3450  1B76  0AF0               	incf	_isdigit$759,f
  3451  1B77                     l2711:
  3452  1B77  0C70               	rrf	_isdigit$759,w
  3453  1B78                     l817:
  3454  1B78  0008               	return
  3455  1B79                     __end_of_isdigit:
  3456                           
  3457                           	psect	text6
  3458  10A8                     __ptext6:	
  3459 ;; *************** function _fround *****************
  3460 ;; Defined at:
  3461 ;;		line 417 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  prec            1    wreg     unsigned char 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  prec            1   49[BANK0 ] unsigned char 
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  4   30[BANK0 ] unsigned char 
  3468 ;; Registers used:
  3469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3475 ;;      Params:         0       4       0       0       0
  3476 ;;      Locals:         0       9       0       0       0
  3477 ;;      Temps:          0       7       0       0       0
  3478 ;;      Totals:         0      20       0       0       0
  3479 ;;Total ram usage:       20 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:    2
  3482 ;; This function calls:
  3483 ;;		___flmul
  3484 ;;		___lwdiv
  3485 ;;		___lwmod
  3486 ;; This function is called by:
  3487 ;;		_sprintf
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           
  3492                           ;psect for function _fround
  3493  10A8                     _fround:
  3494                           
  3495                           ;incstack = 0
  3496                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3497                           ;fround@prec stored from wreg
  3498  10A8  1283               	bcf	3,5	;RP0=0, select bank0
  3499  10A9  1303               	bcf	3,6	;RP1=0, select bank0
  3500  10AA  00D1               	movwf	fround@prec
  3501  10AB                     l2645:
  3502                           
  3503                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsigned char prec)
      +                          ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418: {;D:\Microchip\xc8\v2.31\p
      +                          ic\sources\c90\common\doprnt.c: 421:  if(prec>=110)
  3504  10AB  306E               	movlw	110
  3505  10AC  0251               	subwf	fround@prec,w
  3506  10AD  1C03               	skipc
  3507  10AE  28B0               	goto	u4061
  3508  10AF  28B1               	goto	u4060
  3509  10B0                     u4061:
  3510  10B0  29BE               	goto	l2653
  3511  10B1                     u4060:
  3512  10B1                     l2647:
  3513                           
  3514                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[p
      +                          rec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3515  10B1  303F               	movlw	63
  3516  10B2  00A7               	movwf	___flmul@b+3
  3517  10B3  3000               	movlw	0
  3518  10B4  00A6               	movwf	___flmul@b+2
  3519  10B5  3000               	movlw	0
  3520  10B6  00A5               	movwf	___flmul@b+1
  3521  10B7  3000               	movlw	0
  3522  10B8  00A4               	movwf	___flmul@b
  3523  10B9  3064               	movlw	100
  3524  10BA  00F6               	movwf	___lwdiv@divisor
  3525  10BB  3000               	movlw	0
  3526  10BC  00F7               	movwf	___lwdiv@divisor+1
  3527  10BD  0851               	movf	fround@prec,w
  3528  10BE  00C2               	movwf	??_fround
  3529  10BF  01C3               	clrf	??_fround+1
  3530  10C0  0842               	movf	??_fround,w
  3531  10C1  00F8               	movwf	___lwdiv@dividend
  3532  10C2  0843               	movf	??_fround+1,w
  3533  10C3  00F9               	movwf	___lwdiv@dividend+1
  3534  10C4  160A  158A  2479  160A  118A  	fcall	___lwdiv
  3535  10C9  0876               	movf	?___lwdiv,w
  3536  10CA  1283               	bcf	3,5	;RP0=0, select bank0
  3537  10CB  1303               	bcf	3,6	;RP1=0, select bank0
  3538  10CC  00C4               	movwf	??_fround+2
  3539  10CD  3001               	movlw	1
  3540  10CE                     u4075:
  3541  10CE  1003               	clrc
  3542  10CF  0DC4               	rlf	??_fround+2,f
  3543  10D0  3EFF               	addlw	-1
  3544  10D1  1D03               	skipz
  3545  10D2  28CE               	goto	u4075
  3546  10D3  1003               	clrc
  3547  10D4  0D44               	rlf	??_fround+2,w
  3548  10D5  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3549  10D6  0084               	movwf	4
  3550  10D7  120A  118A  200D  160A  118A  	fcall	stringdir
  3551  10DC  00C5               	movwf	??_fround+3
  3552  10DD  120A  118A  200D  160A  118A  	fcall	stringdir
  3553  10E2  00C6               	movwf	??_fround+4
  3554  10E3  120A  118A  200D  160A  118A  	fcall	stringdir
  3555  10E8  00C7               	movwf	??_fround+5
  3556  10E9  120A  118A  200D  160A  118A  	fcall	stringdir
  3557  10EE  00C8               	movwf	??_fround+6
  3558  10EF  0848               	movf	??_fround+6,w
  3559  10F0  00AB               	movwf	___flmul@a+3
  3560  10F1  0847               	movf	??_fround+5,w
  3561  10F2  00AA               	movwf	___flmul@a+2
  3562  10F3  0846               	movf	??_fround+4,w
  3563  10F4  00A9               	movwf	___flmul@a+1
  3564  10F5  0845               	movf	??_fround+3,w
  3565  10F6  00A8               	movwf	___flmul@a
  3566  10F7  120A  158A  249F  160A  118A  	fcall	___flmul
  3567  10FC  1283               	bcf	3,5	;RP0=0, select bank0
  3568  10FD  1303               	bcf	3,6	;RP1=0, select bank0
  3569  10FE  0827               	movf	?___flmul+3,w
  3570  10FF  00D0               	movwf	_fround$925+3
  3571  1100  0826               	movf	?___flmul+2,w
  3572  1101  00CF               	movwf	_fround$925+2
  3573  1102  0825               	movf	?___flmul+1,w
  3574  1103  00CE               	movwf	_fround$925+1
  3575  1104  0824               	movf	?___flmul,w
  3576  1105  00CD               	movwf	_fround$925
  3577                           
  3578                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[p
      +                          rec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3579  1106  300A               	movlw	10
  3580  1107  00F6               	movwf	___lwdiv@divisor
  3581  1108  3000               	movlw	0
  3582  1109  00F7               	movwf	___lwdiv@divisor+1
  3583  110A  0851               	movf	fround@prec,w
  3584  110B  00C2               	movwf	??_fround
  3585  110C  01C3               	clrf	??_fround+1
  3586  110D  0842               	movf	??_fround,w
  3587  110E  00F2               	movwf	___lwmod@dividend
  3588  110F  0843               	movf	??_fround+1,w
  3589  1110  00F3               	movwf	___lwmod@dividend+1
  3590  1111  3064               	movlw	100
  3591  1112  00F0               	movwf	___lwmod@divisor
  3592  1113  3000               	movlw	0
  3593  1114  00F1               	movwf	___lwmod@divisor+1
  3594  1115  160A  158A  23FD  160A  118A  	fcall	___lwmod
  3595  111A  0871               	movf	?___lwmod+1,w
  3596  111B  00F9               	movwf	___lwdiv@dividend+1
  3597  111C  0870               	movf	?___lwmod,w
  3598  111D  00F8               	movwf	___lwdiv@dividend
  3599  111E  160A  158A  2479  160A  118A  	fcall	___lwdiv
  3600  1123  0876               	movf	?___lwdiv,w
  3601  1124  1283               	bcf	3,5	;RP0=0, select bank0
  3602  1125  1303               	bcf	3,6	;RP1=0, select bank0
  3603  1126  00C4               	movwf	??_fround+2
  3604  1127  3001               	movlw	1
  3605  1128                     u4085:
  3606  1128  1003               	clrc
  3607  1129  0DC4               	rlf	??_fround+2,f
  3608  112A  3EFF               	addlw	-1
  3609  112B  1D03               	skipz
  3610  112C  2928               	goto	u4085
  3611  112D  1003               	clrc
  3612  112E  0D44               	rlf	??_fround+2,w
  3613  112F  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3614  1130  0084               	movwf	4
  3615  1131  120A  118A  200D  160A  118A  	fcall	stringdir
  3616  1136  00C5               	movwf	??_fround+3
  3617  1137  120A  118A  200D  160A  118A  	fcall	stringdir
  3618  113C  00C6               	movwf	??_fround+4
  3619  113D  120A  118A  200D  160A  118A  	fcall	stringdir
  3620  1142  00C7               	movwf	??_fround+5
  3621  1143  120A  118A  200D  160A  118A  	fcall	stringdir
  3622  1148  00C8               	movwf	??_fround+6
  3623  1149  0848               	movf	??_fround+6,w
  3624  114A  00A7               	movwf	___flmul@b+3
  3625  114B  0847               	movf	??_fround+5,w
  3626  114C  00A6               	movwf	___flmul@b+2
  3627  114D  0846               	movf	??_fround+4,w
  3628  114E  00A5               	movwf	___flmul@b+1
  3629  114F  0845               	movf	??_fround+3,w
  3630  1150  00A4               	movwf	___flmul@b
  3631  1151  0850               	movf	_fround$925+3,w
  3632  1152  00AB               	movwf	___flmul@a+3
  3633  1153  084F               	movf	_fround$925+2,w
  3634  1154  00AA               	movwf	___flmul@a+2
  3635  1155  084E               	movf	_fround$925+1,w
  3636  1156  00A9               	movwf	___flmul@a+1
  3637  1157  084D               	movf	_fround$925,w
  3638  1158  00A8               	movwf	___flmul@a
  3639  1159  120A  158A  249F  160A  118A  	fcall	___flmul
  3640  115E  1283               	bcf	3,5	;RP0=0, select bank0
  3641  115F  1303               	bcf	3,6	;RP1=0, select bank0
  3642  1160  0827               	movf	?___flmul+3,w
  3643  1161  00CC               	movwf	_fround$926+3
  3644  1162  0826               	movf	?___flmul+2,w
  3645  1163  00CB               	movwf	_fround$926+2
  3646  1164  0825               	movf	?___flmul+1,w
  3647  1165  00CA               	movwf	_fround$926+1
  3648  1166  0824               	movf	?___flmul,w
  3649  1167  00C9               	movwf	_fround$926
  3650                           
  3651                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[p
      +                          rec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3652  1168  300A               	movlw	10
  3653  1169  00F0               	movwf	___lwmod@divisor
  3654  116A  3000               	movlw	0
  3655  116B  00F1               	movwf	___lwmod@divisor+1
  3656  116C  0851               	movf	fround@prec,w
  3657  116D  00C2               	movwf	??_fround
  3658  116E  01C3               	clrf	??_fround+1
  3659  116F  0842               	movf	??_fround,w
  3660  1170  00F2               	movwf	___lwmod@dividend
  3661  1171  0843               	movf	??_fround+1,w
  3662  1172  00F3               	movwf	___lwmod@dividend+1
  3663  1173  160A  158A  23FD  160A  118A  	fcall	___lwmod
  3664  1178  0870               	movf	?___lwmod,w
  3665  1179  1283               	bcf	3,5	;RP0=0, select bank0
  3666  117A  1303               	bcf	3,6	;RP1=0, select bank0
  3667  117B  00C4               	movwf	??_fround+2
  3668  117C  3001               	movlw	1
  3669  117D                     u4095:
  3670  117D  1003               	clrc
  3671  117E  0DC4               	rlf	??_fround+2,f
  3672  117F  3EFF               	addlw	-1
  3673  1180  1D03               	skipz
  3674  1181  297D               	goto	u4095
  3675  1182  1003               	clrc
  3676  1183  0D44               	rlf	??_fround+2,w
  3677  1184  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3678  1185  0084               	movwf	4
  3679  1186  120A  118A  200D  160A  118A  	fcall	stringdir
  3680  118B  00C5               	movwf	??_fround+3
  3681  118C  120A  118A  200D  160A  118A  	fcall	stringdir
  3682  1191  00C6               	movwf	??_fround+4
  3683  1192  120A  118A  200D  160A  118A  	fcall	stringdir
  3684  1197  00C7               	movwf	??_fround+5
  3685  1198  120A  118A  200D  160A  118A  	fcall	stringdir
  3686  119D  00C8               	movwf	??_fround+6
  3687  119E  0848               	movf	??_fround+6,w
  3688  119F  00A7               	movwf	___flmul@b+3
  3689  11A0  0847               	movf	??_fround+5,w
  3690  11A1  00A6               	movwf	___flmul@b+2
  3691  11A2  0846               	movf	??_fround+4,w
  3692  11A3  00A5               	movwf	___flmul@b+1
  3693  11A4  0845               	movf	??_fround+3,w
  3694  11A5  00A4               	movwf	___flmul@b
  3695  11A6  084C               	movf	_fround$926+3,w
  3696  11A7  00AB               	movwf	___flmul@a+3
  3697  11A8  084B               	movf	_fround$926+2,w
  3698  11A9  00AA               	movwf	___flmul@a+2
  3699  11AA  084A               	movf	_fround$926+1,w
  3700  11AB  00A9               	movwf	___flmul@a+1
  3701  11AC  0849               	movf	_fround$926,w
  3702  11AD  00A8               	movwf	___flmul@a
  3703  11AE  120A  158A  249F  160A  118A  	fcall	___flmul
  3704  11B3  1283               	bcf	3,5	;RP0=0, select bank0
  3705  11B4  1303               	bcf	3,6	;RP1=0, select bank0
  3706  11B5  0827               	movf	?___flmul+3,w
  3707  11B6  00C1               	movwf	?_fround+3
  3708  11B7  0826               	movf	?___flmul+2,w
  3709  11B8  00C0               	movwf	?_fround+2
  3710  11B9  0825               	movf	?___flmul+1,w
  3711  11BA  00BF               	movwf	?_fround+1
  3712  11BB  0824               	movf	?___flmul,w
  3713  11BC  00BE               	movwf	?_fround
  3714  11BD  2AB2               	goto	l227
  3715  11BE                     l2653:
  3716  11BE  300B               	movlw	11
  3717  11BF  0251               	subwf	fround@prec,w
  3718  11C0  1C03               	skipc
  3719  11C1  29C3               	goto	u4101
  3720  11C2  29C4               	goto	u4100
  3721  11C3                     u4101:
  3722  11C3  2A6F               	goto	l2659
  3723  11C4                     u4100:
  3724  11C4                     l2655:
  3725                           
  3726                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[p
      +                          rec/10U+9U] * _npowers_[prec%10U];
  3727  11C4  303F               	movlw	63
  3728  11C5  00A7               	movwf	___flmul@b+3
  3729  11C6  3000               	movlw	0
  3730  11C7  00A6               	movwf	___flmul@b+2
  3731  11C8  3000               	movlw	0
  3732  11C9  00A5               	movwf	___flmul@b+1
  3733  11CA  3000               	movlw	0
  3734  11CB  00A4               	movwf	___flmul@b
  3735  11CC  300A               	movlw	10
  3736  11CD  00F6               	movwf	___lwdiv@divisor
  3737  11CE  3000               	movlw	0
  3738  11CF  00F7               	movwf	___lwdiv@divisor+1
  3739  11D0  0851               	movf	fround@prec,w
  3740  11D1  00C2               	movwf	??_fround
  3741  11D2  01C3               	clrf	??_fround+1
  3742  11D3  0842               	movf	??_fround,w
  3743  11D4  00F8               	movwf	___lwdiv@dividend
  3744  11D5  0843               	movf	??_fround+1,w
  3745  11D6  00F9               	movwf	___lwdiv@dividend+1
  3746  11D7  160A  158A  2479  160A  118A  	fcall	___lwdiv
  3747  11DC  0876               	movf	?___lwdiv,w
  3748  11DD  1283               	bcf	3,5	;RP0=0, select bank0
  3749  11DE  1303               	bcf	3,6	;RP1=0, select bank0
  3750  11DF  00C4               	movwf	??_fround+2
  3751  11E0  3001               	movlw	1
  3752  11E1                     u4115:
  3753  11E1  1003               	clrc
  3754  11E2  0DC4               	rlf	??_fround+2,f
  3755  11E3  3EFF               	addlw	-1
  3756  11E4  1D03               	skipz
  3757  11E5  29E1               	goto	u4115
  3758  11E6  1003               	clrc
  3759  11E7  0D44               	rlf	??_fround+2,w
  3760  11E8  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3761  11E9  0084               	movwf	4
  3762  11EA  120A  118A  200D  160A  118A  	fcall	stringdir
  3763  11EF  00C5               	movwf	??_fround+3
  3764  11F0  120A  118A  200D  160A  118A  	fcall	stringdir
  3765  11F5  00C6               	movwf	??_fround+4
  3766  11F6  120A  118A  200D  160A  118A  	fcall	stringdir
  3767  11FB  00C7               	movwf	??_fround+5
  3768  11FC  120A  118A  200D  160A  118A  	fcall	stringdir
  3769  1201  00C8               	movwf	??_fround+6
  3770  1202  0848               	movf	??_fround+6,w
  3771  1203  00AB               	movwf	___flmul@a+3
  3772  1204  0847               	movf	??_fround+5,w
  3773  1205  00AA               	movwf	___flmul@a+2
  3774  1206  0846               	movf	??_fround+4,w
  3775  1207  00A9               	movwf	___flmul@a+1
  3776  1208  0845               	movf	??_fround+3,w
  3777  1209  00A8               	movwf	___flmul@a
  3778  120A  120A  158A  249F  160A  118A  	fcall	___flmul
  3779  120F  1283               	bcf	3,5	;RP0=0, select bank0
  3780  1210  1303               	bcf	3,6	;RP1=0, select bank0
  3781  1211  0827               	movf	?___flmul+3,w
  3782  1212  00D0               	movwf	_fround$925+3
  3783  1213  0826               	movf	?___flmul+2,w
  3784  1214  00CF               	movwf	_fround$925+2
  3785  1215  0825               	movf	?___flmul+1,w
  3786  1216  00CE               	movwf	_fround$925+1
  3787  1217  0824               	movf	?___flmul,w
  3788  1218  00CD               	movwf	_fround$925
  3789                           
  3790                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[p
      +                          rec/10U+9U] * _npowers_[prec%10U];
  3791  1219  300A               	movlw	10
  3792  121A  00F0               	movwf	___lwmod@divisor
  3793  121B  3000               	movlw	0
  3794  121C  00F1               	movwf	___lwmod@divisor+1
  3795  121D  0851               	movf	fround@prec,w
  3796  121E  00C2               	movwf	??_fround
  3797  121F  01C3               	clrf	??_fround+1
  3798  1220  0842               	movf	??_fround,w
  3799  1221  00F2               	movwf	___lwmod@dividend
  3800  1222  0843               	movf	??_fround+1,w
  3801  1223  00F3               	movwf	___lwmod@dividend+1
  3802  1224  160A  158A  23FD  160A  118A  	fcall	___lwmod
  3803  1229  0870               	movf	?___lwmod,w
  3804  122A  1283               	bcf	3,5	;RP0=0, select bank0
  3805  122B  1303               	bcf	3,6	;RP1=0, select bank0
  3806  122C  00C4               	movwf	??_fround+2
  3807  122D  3001               	movlw	1
  3808  122E                     u4125:
  3809  122E  1003               	clrc
  3810  122F  0DC4               	rlf	??_fround+2,f
  3811  1230  3EFF               	addlw	-1
  3812  1231  1D03               	skipz
  3813  1232  2A2E               	goto	u4125
  3814  1233  1003               	clrc
  3815  1234  0D44               	rlf	??_fround+2,w
  3816  1235  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3817  1236  0084               	movwf	4
  3818  1237  120A  118A  200D  160A  118A  	fcall	stringdir
  3819  123C  00C5               	movwf	??_fround+3
  3820  123D  120A  118A  200D  160A  118A  	fcall	stringdir
  3821  1242  00C6               	movwf	??_fround+4
  3822  1243  120A  118A  200D  160A  118A  	fcall	stringdir
  3823  1248  00C7               	movwf	??_fround+5
  3824  1249  120A  118A  200D  160A  118A  	fcall	stringdir
  3825  124E  00C8               	movwf	??_fround+6
  3826  124F  0848               	movf	??_fround+6,w
  3827  1250  00A7               	movwf	___flmul@b+3
  3828  1251  0847               	movf	??_fround+5,w
  3829  1252  00A6               	movwf	___flmul@b+2
  3830  1253  0846               	movf	??_fround+4,w
  3831  1254  00A5               	movwf	___flmul@b+1
  3832  1255  0845               	movf	??_fround+3,w
  3833  1256  00A4               	movwf	___flmul@b
  3834  1257  0850               	movf	_fround$925+3,w
  3835  1258  00AB               	movwf	___flmul@a+3
  3836  1259  084F               	movf	_fround$925+2,w
  3837  125A  00AA               	movwf	___flmul@a+2
  3838  125B  084E               	movf	_fround$925+1,w
  3839  125C  00A9               	movwf	___flmul@a+1
  3840  125D  084D               	movf	_fround$925,w
  3841  125E  00A8               	movwf	___flmul@a
  3842  125F  120A  158A  249F  160A  118A  	fcall	___flmul
  3843  1264  1283               	bcf	3,5	;RP0=0, select bank0
  3844  1265  1303               	bcf	3,6	;RP1=0, select bank0
  3845  1266  0827               	movf	?___flmul+3,w
  3846  1267  00C1               	movwf	?_fround+3
  3847  1268  0826               	movf	?___flmul+2,w
  3848  1269  00C0               	movwf	?_fround+2
  3849  126A  0825               	movf	?___flmul+1,w
  3850  126B  00BF               	movwf	?_fround+1
  3851  126C  0824               	movf	?___flmul,w
  3852  126D  00BE               	movwf	?_fround
  3853  126E  2AB2               	goto	l227
  3854  126F                     l2659:
  3855                           
  3856                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 * _npowers_[pr
      +                          ec];
  3857  126F  303F               	movlw	63
  3858  1270  00A7               	movwf	___flmul@b+3
  3859  1271  3000               	movlw	0
  3860  1272  00A6               	movwf	___flmul@b+2
  3861  1273  3000               	movlw	0
  3862  1274  00A5               	movwf	___flmul@b+1
  3863  1275  3000               	movlw	0
  3864  1276  00A4               	movwf	___flmul@b
  3865  1277  0851               	movf	fround@prec,w
  3866  1278  00C2               	movwf	??_fround
  3867  1279  3001               	movlw	1
  3868  127A                     u4135:
  3869  127A  1003               	clrc
  3870  127B  0DC2               	rlf	??_fround,f
  3871  127C  3EFF               	addlw	-1
  3872  127D  1D03               	skipz
  3873  127E  2A7A               	goto	u4135
  3874  127F  1003               	clrc
  3875  1280  0D42               	rlf	??_fround,w
  3876  1281  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3877  1282  0084               	movwf	4
  3878  1283  120A  118A  200D  160A  118A  	fcall	stringdir
  3879  1288  00C3               	movwf	??_fround+1
  3880  1289  120A  118A  200D  160A  118A  	fcall	stringdir
  3881  128E  00C4               	movwf	??_fround+2
  3882  128F  120A  118A  200D  160A  118A  	fcall	stringdir
  3883  1294  00C5               	movwf	??_fround+3
  3884  1295  120A  118A  200D  160A  118A  	fcall	stringdir
  3885  129A  00C6               	movwf	??_fround+4
  3886  129B  0846               	movf	??_fround+4,w
  3887  129C  00AB               	movwf	___flmul@a+3
  3888  129D  0845               	movf	??_fround+3,w
  3889  129E  00AA               	movwf	___flmul@a+2
  3890  129F  0844               	movf	??_fround+2,w
  3891  12A0  00A9               	movwf	___flmul@a+1
  3892  12A1  0843               	movf	??_fround+1,w
  3893  12A2  00A8               	movwf	___flmul@a
  3894  12A3  120A  158A  249F  160A  118A  	fcall	___flmul
  3895  12A8  1283               	bcf	3,5	;RP0=0, select bank0
  3896  12A9  1303               	bcf	3,6	;RP1=0, select bank0
  3897  12AA  0827               	movf	?___flmul+3,w
  3898  12AB  00C1               	movwf	?_fround+3
  3899  12AC  0826               	movf	?___flmul+2,w
  3900  12AD  00C0               	movwf	?_fround+2
  3901  12AE  0825               	movf	?___flmul+1,w
  3902  12AF  00BF               	movwf	?_fround+1
  3903  12B0  0824               	movf	?___flmul,w
  3904  12B1  00BE               	movwf	?_fround
  3905  12B2                     l227:
  3906  12B2  0008               	return
  3907  12B3                     __end_of_fround:
  3908                           
  3909                           	psect	text7
  3910  1BFD                     __ptext7:	
  3911 ;; *************** function ___lwmod *****************
  3912 ;; Defined at:
  3913 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  divisor         2    0[COMMON] unsigned int 
  3916 ;;  dividend        2    2[COMMON] unsigned int 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  counter         1    5[COMMON] unsigned char 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  2    0[COMMON] unsigned int 
  3921 ;; Registers used:
  3922 ;;		wreg, status,2, status,0
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3928 ;;      Params:         4       0       0       0       0
  3929 ;;      Locals:         1       0       0       0       0
  3930 ;;      Temps:          1       0       0       0       0
  3931 ;;      Totals:         6       0       0       0       0
  3932 ;;Total ram usage:        6 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_fround
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           
  3942                           ;psect for function ___lwmod
  3943  1BFD                     ___lwmod:
  3944  1BFD                     l2285:	
  3945                           ;incstack = 0
  3946                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3947                           
  3948  1BFD  0870               	movf	___lwmod@divisor,w
  3949  1BFE  0471               	iorwf	___lwmod@divisor+1,w
  3950  1BFF  1903               	btfsc	3,2
  3951  1C00  2C02               	goto	u3161
  3952  1C01  2C03               	goto	u3160
  3953  1C02                     u3161:
  3954  1C02  2C32               	goto	l2303
  3955  1C03                     u3160:
  3956  1C03                     l2287:
  3957  1C03  01F5               	clrf	___lwmod@counter
  3958  1C04  0AF5               	incf	___lwmod@counter,f
  3959  1C05  2C11               	goto	l2293
  3960  1C06                     l2289:
  3961  1C06  3001               	movlw	1
  3962  1C07                     u3175:
  3963  1C07  1003               	clrc
  3964  1C08  0DF0               	rlf	___lwmod@divisor,f
  3965  1C09  0DF1               	rlf	___lwmod@divisor+1,f
  3966  1C0A  3EFF               	addlw	-1
  3967  1C0B  1D03               	skipz
  3968  1C0C  2C07               	goto	u3175
  3969  1C0D                     l2291:
  3970  1C0D  3001               	movlw	1
  3971  1C0E  00F4               	movwf	??___lwmod
  3972  1C0F  0874               	movf	??___lwmod,w
  3973  1C10  07F5               	addwf	___lwmod@counter,f
  3974  1C11                     l2293:
  3975  1C11  1FF1               	btfss	___lwmod@divisor+1,7
  3976  1C12  2C14               	goto	u3181
  3977  1C13  2C15               	goto	u3180
  3978  1C14                     u3181:
  3979  1C14  2C06               	goto	l2289
  3980  1C15                     u3180:
  3981  1C15                     l2295:
  3982  1C15  0871               	movf	___lwmod@divisor+1,w
  3983  1C16  0273               	subwf	___lwmod@dividend+1,w
  3984  1C17  1D03               	skipz
  3985  1C18  2C1B               	goto	u3195
  3986  1C19  0870               	movf	___lwmod@divisor,w
  3987  1C1A  0272               	subwf	___lwmod@dividend,w
  3988  1C1B                     u3195:
  3989  1C1B  1C03               	skipc
  3990  1C1C  2C1E               	goto	u3191
  3991  1C1D  2C1F               	goto	u3190
  3992  1C1E                     u3191:
  3993  1C1E  2C25               	goto	l2299
  3994  1C1F                     u3190:
  3995  1C1F                     l2297:
  3996  1C1F  0870               	movf	___lwmod@divisor,w
  3997  1C20  02F2               	subwf	___lwmod@dividend,f
  3998  1C21  0871               	movf	___lwmod@divisor+1,w
  3999  1C22  1C03               	skipc
  4000  1C23  03F3               	decf	___lwmod@dividend+1,f
  4001  1C24  02F3               	subwf	___lwmod@dividend+1,f
  4002  1C25                     l2299:
  4003  1C25  3001               	movlw	1
  4004  1C26                     u3205:
  4005  1C26  1003               	clrc
  4006  1C27  0CF1               	rrf	___lwmod@divisor+1,f
  4007  1C28  0CF0               	rrf	___lwmod@divisor,f
  4008  1C29  3EFF               	addlw	-1
  4009  1C2A  1D03               	skipz
  4010  1C2B  2C26               	goto	u3205
  4011  1C2C                     l2301:
  4012  1C2C  3001               	movlw	1
  4013  1C2D  02F5               	subwf	___lwmod@counter,f
  4014  1C2E  1D03               	btfss	3,2
  4015  1C2F  2C31               	goto	u3211
  4016  1C30  2C32               	goto	u3210
  4017  1C31                     u3211:
  4018  1C31  2C15               	goto	l2295
  4019  1C32                     u3210:
  4020  1C32                     l2303:
  4021  1C32  0873               	movf	___lwmod@dividend+1,w
  4022  1C33  00F1               	movwf	?___lwmod+1
  4023  1C34  0872               	movf	___lwmod@dividend,w
  4024  1C35  00F0               	movwf	?___lwmod
  4025  1C36                     l646:
  4026  1C36  0008               	return
  4027  1C37                     __end_of___lwmod:
  4028                           
  4029                           	psect	text8
  4030  1C79                     __ptext8:	
  4031 ;; *************** function ___lwdiv *****************
  4032 ;; Defined at:
  4033 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;  divisor         2    6[COMMON] unsigned int 
  4036 ;;  dividend        2    8[COMMON] unsigned int 
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  quotient        2   11[COMMON] unsigned int 
  4039 ;;  counter         1   13[COMMON] unsigned char 
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  2    6[COMMON] unsigned int 
  4042 ;; Registers used:
  4043 ;;		wreg, status,2, status,0
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4049 ;;      Params:         4       0       0       0       0
  4050 ;;      Locals:         3       0       0       0       0
  4051 ;;      Temps:          1       0       0       0       0
  4052 ;;      Totals:         8       0       0       0       0
  4053 ;;Total ram usage:        8 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; This function calls:
  4056 ;;		Nothing
  4057 ;; This function is called by:
  4058 ;;		_fround
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062                           
  4063                           ;psect for function ___lwdiv
  4064  1C79                     ___lwdiv:
  4065  1C79                     l2259:	
  4066                           ;incstack = 0
  4067                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4068                           
  4069  1C79  01FB               	clrf	___lwdiv@quotient
  4070  1C7A  01FC               	clrf	___lwdiv@quotient+1
  4071  1C7B                     l2261:
  4072  1C7B  0876               	movf	___lwdiv@divisor,w
  4073  1C7C  0477               	iorwf	___lwdiv@divisor+1,w
  4074  1C7D  1903               	btfsc	3,2
  4075  1C7E  2C80               	goto	u3091
  4076  1C7F  2C81               	goto	u3090
  4077  1C80                     u3091:
  4078  1C80  2CB8               	goto	l2281
  4079  1C81                     u3090:
  4080  1C81                     l2263:
  4081  1C81  01FD               	clrf	___lwdiv@counter
  4082  1C82  0AFD               	incf	___lwdiv@counter,f
  4083  1C83  2C8F               	goto	l2269
  4084  1C84                     l2265:
  4085  1C84  3001               	movlw	1
  4086  1C85                     u3105:
  4087  1C85  1003               	clrc
  4088  1C86  0DF6               	rlf	___lwdiv@divisor,f
  4089  1C87  0DF7               	rlf	___lwdiv@divisor+1,f
  4090  1C88  3EFF               	addlw	-1
  4091  1C89  1D03               	skipz
  4092  1C8A  2C85               	goto	u3105
  4093  1C8B                     l2267:
  4094  1C8B  3001               	movlw	1
  4095  1C8C  00FA               	movwf	??___lwdiv
  4096  1C8D  087A               	movf	??___lwdiv,w
  4097  1C8E  07FD               	addwf	___lwdiv@counter,f
  4098  1C8F                     l2269:
  4099  1C8F  1FF7               	btfss	___lwdiv@divisor+1,7
  4100  1C90  2C92               	goto	u3111
  4101  1C91  2C93               	goto	u3110
  4102  1C92                     u3111:
  4103  1C92  2C84               	goto	l2265
  4104  1C93                     u3110:
  4105  1C93                     l2271:
  4106  1C93  3001               	movlw	1
  4107  1C94                     u3125:
  4108  1C94  1003               	clrc
  4109  1C95  0DFB               	rlf	___lwdiv@quotient,f
  4110  1C96  0DFC               	rlf	___lwdiv@quotient+1,f
  4111  1C97  3EFF               	addlw	-1
  4112  1C98  1D03               	skipz
  4113  1C99  2C94               	goto	u3125
  4114  1C9A  0877               	movf	___lwdiv@divisor+1,w
  4115  1C9B  0279               	subwf	___lwdiv@dividend+1,w
  4116  1C9C  1D03               	skipz
  4117  1C9D  2CA0               	goto	u3135
  4118  1C9E  0876               	movf	___lwdiv@divisor,w
  4119  1C9F  0278               	subwf	___lwdiv@dividend,w
  4120  1CA0                     u3135:
  4121  1CA0  1C03               	skipc
  4122  1CA1  2CA3               	goto	u3131
  4123  1CA2  2CA4               	goto	u3130
  4124  1CA3                     u3131:
  4125  1CA3  2CAB               	goto	l2277
  4126  1CA4                     u3130:
  4127  1CA4                     l2273:
  4128  1CA4  0876               	movf	___lwdiv@divisor,w
  4129  1CA5  02F8               	subwf	___lwdiv@dividend,f
  4130  1CA6  0877               	movf	___lwdiv@divisor+1,w
  4131  1CA7  1C03               	skipc
  4132  1CA8  03F9               	decf	___lwdiv@dividend+1,f
  4133  1CA9  02F9               	subwf	___lwdiv@dividend+1,f
  4134  1CAA                     l2275:
  4135  1CAA  147B               	bsf	___lwdiv@quotient,0
  4136  1CAB                     l2277:
  4137  1CAB  3001               	movlw	1
  4138  1CAC                     u3145:
  4139  1CAC  1003               	clrc
  4140  1CAD  0CF7               	rrf	___lwdiv@divisor+1,f
  4141  1CAE  0CF6               	rrf	___lwdiv@divisor,f
  4142  1CAF  3EFF               	addlw	-1
  4143  1CB0  1D03               	skipz
  4144  1CB1  2CAC               	goto	u3145
  4145  1CB2                     l2279:
  4146  1CB2  3001               	movlw	1
  4147  1CB3  02FD               	subwf	___lwdiv@counter,f
  4148  1CB4  1D03               	btfss	3,2
  4149  1CB5  2CB7               	goto	u3151
  4150  1CB6  2CB8               	goto	u3150
  4151  1CB7                     u3151:
  4152  1CB7  2C93               	goto	l2271
  4153  1CB8                     u3150:
  4154  1CB8                     l2281:
  4155  1CB8  087C               	movf	___lwdiv@quotient+1,w
  4156  1CB9  00F7               	movwf	?___lwdiv+1
  4157  1CBA  087B               	movf	___lwdiv@quotient,w
  4158  1CBB  00F6               	movwf	?___lwdiv
  4159  1CBC                     l636:
  4160  1CBC  0008               	return
  4161  1CBD                     __end_of___lwdiv:
  4162                           
  4163                           	psect	text9
  4164  0C9F                     __ptext9:	
  4165 ;; *************** function ___flmul *****************
  4166 ;; Defined at:
  4167 ;;		line 8 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  b               4    4[BANK0 ] unsigned int 
  4170 ;;  a               4    8[BANK0 ] unsigned int 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  prod            4   24[BANK0 ] struct .
  4173 ;;  grs             4   18[BANK0 ] unsigned long 
  4174 ;;  temp            2   28[BANK0 ] struct .
  4175 ;;  bexp            1   23[BANK0 ] unsigned char 
  4176 ;;  aexp            1   22[BANK0 ] unsigned char 
  4177 ;;  sign            1   17[BANK0 ] unsigned char 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  4    4[BANK0 ] unsigned char 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4187 ;;      Params:         0       8       0       0       0
  4188 ;;      Locals:         0      13       0       0       0
  4189 ;;      Temps:          0       5       0       0       0
  4190 ;;      Totals:         0      26       0       0       0
  4191 ;;Total ram usage:       26 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:    1
  4194 ;; This function calls:
  4195 ;;		__Umul8_16
  4196 ;; This function is called by:
  4197 ;;		_fround
  4198 ;;		_scale
  4199 ;;		_sprintf
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           
  4204                           ;psect for function ___flmul
  4205  0C9F                     ___flmul:
  4206  0C9F                     l2501:	
  4207                           ;incstack = 0
  4208                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4209                           
  4210  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  4211  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  4212  0CA1  0827               	movf	___flmul@b+3,w
  4213  0CA2  3980               	andlw	128
  4214  0CA3  00AC               	movwf	??___flmul
  4215  0CA4  082C               	movf	??___flmul,w
  4216  0CA5  00B1               	movwf	___flmul@sign
  4217  0CA6                     l2503:
  4218  0CA6  0827               	movf	___flmul@b+3,w
  4219  0CA7  00AC               	movwf	??___flmul
  4220  0CA8  072C               	addwf	??___flmul,w
  4221  0CA9  00AD               	movwf	??___flmul+1
  4222  0CAA  082D               	movf	??___flmul+1,w
  4223  0CAB  00B7               	movwf	___flmul@bexp
  4224  0CAC                     l2505:
  4225  0CAC  1FA6               	btfss	___flmul@b+2,7
  4226  0CAD  2CAF               	goto	u3681
  4227  0CAE  2CB0               	goto	u3680
  4228  0CAF                     u3681:
  4229  0CAF  2CB1               	goto	l2509
  4230  0CB0                     u3680:
  4231  0CB0                     l2507:
  4232  0CB0  1437               	bsf	___flmul@bexp,0
  4233  0CB1                     l2509:
  4234  0CB1  0837               	movf	___flmul@bexp,w
  4235  0CB2  1903               	btfsc	3,2
  4236  0CB3  2CB5               	goto	u3691
  4237  0CB4  2CB6               	goto	u3690
  4238  0CB5                     u3691:
  4239  0CB5  2CC5               	goto	l2517
  4240  0CB6                     u3690:
  4241  0CB6                     l2511:
  4242  0CB6  0A37               	incf	___flmul@bexp,w
  4243  0CB7  1D03               	btfss	3,2
  4244  0CB8  2CBA               	goto	u3701
  4245  0CB9  2CBB               	goto	u3700
  4246  0CBA                     u3701:
  4247  0CBA  2CC3               	goto	l2515
  4248  0CBB                     u3700:
  4249  0CBB                     l2513:
  4250  0CBB  3000               	movlw	0
  4251  0CBC  00A7               	movwf	___flmul@b+3
  4252  0CBD  3000               	movlw	0
  4253  0CBE  00A6               	movwf	___flmul@b+2
  4254  0CBF  3000               	movlw	0
  4255  0CC0  00A5               	movwf	___flmul@b+1
  4256  0CC1  3000               	movlw	0
  4257  0CC2  00A4               	movwf	___flmul@b
  4258  0CC3                     l2515:
  4259  0CC3  17A6               	bsf	___flmul@b+2,7
  4260  0CC4  2CCD               	goto	l2519
  4261  0CC5                     l2517:
  4262  0CC5  3000               	movlw	0
  4263  0CC6  00A7               	movwf	___flmul@b+3
  4264  0CC7  3000               	movlw	0
  4265  0CC8  00A6               	movwf	___flmul@b+2
  4266  0CC9  3000               	movlw	0
  4267  0CCA  00A5               	movwf	___flmul@b+1
  4268  0CCB  3000               	movlw	0
  4269  0CCC  00A4               	movwf	___flmul@b
  4270  0CCD                     l2519:
  4271  0CCD  082B               	movf	___flmul@a+3,w
  4272  0CCE  3980               	andlw	128
  4273  0CCF  00AC               	movwf	??___flmul
  4274  0CD0  082C               	movf	??___flmul,w
  4275  0CD1  06B1               	xorwf	___flmul@sign,f
  4276  0CD2                     l2521:
  4277  0CD2  082B               	movf	___flmul@a+3,w
  4278  0CD3  00AC               	movwf	??___flmul
  4279  0CD4  072C               	addwf	??___flmul,w
  4280  0CD5  00AD               	movwf	??___flmul+1
  4281  0CD6  082D               	movf	??___flmul+1,w
  4282  0CD7  00B6               	movwf	___flmul@aexp
  4283  0CD8                     l2523:
  4284  0CD8  1FAA               	btfss	___flmul@a+2,7
  4285  0CD9  2CDB               	goto	u3711
  4286  0CDA  2CDC               	goto	u3710
  4287  0CDB                     u3711:
  4288  0CDB  2CDD               	goto	l2527
  4289  0CDC                     u3710:
  4290  0CDC                     l2525:
  4291  0CDC  1436               	bsf	___flmul@aexp,0
  4292  0CDD                     l2527:
  4293  0CDD  0836               	movf	___flmul@aexp,w
  4294  0CDE  1903               	btfsc	3,2
  4295  0CDF  2CE1               	goto	u3721
  4296  0CE0  2CE2               	goto	u3720
  4297  0CE1                     u3721:
  4298  0CE1  2CF1               	goto	l2535
  4299  0CE2                     u3720:
  4300  0CE2                     l2529:
  4301  0CE2  0A36               	incf	___flmul@aexp,w
  4302  0CE3  1D03               	btfss	3,2
  4303  0CE4  2CE6               	goto	u3731
  4304  0CE5  2CE7               	goto	u3730
  4305  0CE6                     u3731:
  4306  0CE6  2CEF               	goto	l2533
  4307  0CE7                     u3730:
  4308  0CE7                     l2531:
  4309  0CE7  3000               	movlw	0
  4310  0CE8  00AB               	movwf	___flmul@a+3
  4311  0CE9  3000               	movlw	0
  4312  0CEA  00AA               	movwf	___flmul@a+2
  4313  0CEB  3000               	movlw	0
  4314  0CEC  00A9               	movwf	___flmul@a+1
  4315  0CED  3000               	movlw	0
  4316  0CEE  00A8               	movwf	___flmul@a
  4317  0CEF                     l2533:
  4318  0CEF  17AA               	bsf	___flmul@a+2,7
  4319  0CF0  2CF9               	goto	l2537
  4320  0CF1                     l2535:
  4321  0CF1  3000               	movlw	0
  4322  0CF2  00AB               	movwf	___flmul@a+3
  4323  0CF3  3000               	movlw	0
  4324  0CF4  00AA               	movwf	___flmul@a+2
  4325  0CF5  3000               	movlw	0
  4326  0CF6  00A9               	movwf	___flmul@a+1
  4327  0CF7  3000               	movlw	0
  4328  0CF8  00A8               	movwf	___flmul@a
  4329  0CF9                     l2537:
  4330  0CF9  0836               	movf	___flmul@aexp,w
  4331  0CFA  1903               	btfsc	3,2
  4332  0CFB  2CFD               	goto	u3741
  4333  0CFC  2CFE               	goto	u3740
  4334  0CFD                     u3741:
  4335  0CFD  2D03               	goto	l2541
  4336  0CFE                     u3740:
  4337  0CFE                     l2539:
  4338  0CFE  0837               	movf	___flmul@bexp,w
  4339  0CFF  1D03               	btfss	3,2
  4340  0D00  2D02               	goto	u3751
  4341  0D01  2D03               	goto	u3750
  4342  0D02                     u3751:
  4343  0D02  2D0C               	goto	l2545
  4344  0D03                     u3750:
  4345  0D03                     l2541:
  4346  0D03  3000               	movlw	0
  4347  0D04  00A7               	movwf	?___flmul+3
  4348  0D05  3000               	movlw	0
  4349  0D06  00A6               	movwf	?___flmul+2
  4350  0D07  3000               	movlw	0
  4351  0D08  00A5               	movwf	?___flmul+1
  4352  0D09  3000               	movlw	0
  4353  0D0A  00A4               	movwf	?___flmul
  4354  0D0B  2FFF               	goto	l753
  4355  0D0C                     l2545:
  4356  0D0C  0824               	movf	___flmul@b,w
  4357  0D0D  00AC               	movwf	??___flmul
  4358  0D0E  082C               	movf	??___flmul,w
  4359  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  4360  0D10  082A               	movf	___flmul@a+2,w
  4361  0D11  160A  158A  23D6  120A  158A  	fcall	__Umul8_16
  4362  0D16  0871               	movf	?__Umul8_16+1,w
  4363  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  4364  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  4365  0D19  00BD               	movwf	___flmul@temp+1
  4366  0D1A  0870               	movf	?__Umul8_16,w
  4367  0D1B  00BC               	movwf	___flmul@temp
  4368  0D1C                     l2547:
  4369  0D1C  083C               	movf	___flmul@temp,w
  4370  0D1D  00AC               	movwf	??___flmul
  4371  0D1E  01AD               	clrf	??___flmul+1
  4372  0D1F  01AE               	clrf	??___flmul+2
  4373  0D20  01AF               	clrf	??___flmul+3
  4374  0D21  082F               	movf	??___flmul+3,w
  4375  0D22  00B5               	movwf	___flmul@grs+3
  4376  0D23  082E               	movf	??___flmul+2,w
  4377  0D24  00B4               	movwf	___flmul@grs+2
  4378  0D25  082D               	movf	??___flmul+1,w
  4379  0D26  00B3               	movwf	___flmul@grs+1
  4380  0D27  082C               	movf	??___flmul,w
  4381  0D28  00B2               	movwf	___flmul@grs
  4382  0D29                     l2549:
  4383  0D29  083D               	movf	___flmul@temp+1,w
  4384  0D2A  00AC               	movwf	??___flmul
  4385  0D2B  01AD               	clrf	??___flmul+1
  4386  0D2C  01AE               	clrf	??___flmul+2
  4387  0D2D  01AF               	clrf	??___flmul+3
  4388  0D2E  082F               	movf	??___flmul+3,w
  4389  0D2F  00BB               	movwf	___flmul@prod+3
  4390  0D30  082E               	movf	??___flmul+2,w
  4391  0D31  00BA               	movwf	___flmul@prod+2
  4392  0D32  082D               	movf	??___flmul+1,w
  4393  0D33  00B9               	movwf	___flmul@prod+1
  4394  0D34  082C               	movf	??___flmul,w
  4395  0D35  00B8               	movwf	___flmul@prod
  4396  0D36  0825               	movf	___flmul@b+1,w
  4397  0D37  00AC               	movwf	??___flmul
  4398  0D38  082C               	movf	??___flmul,w
  4399  0D39  00F0               	movwf	__Umul8_16@multiplicand
  4400  0D3A  0829               	movf	___flmul@a+1,w
  4401  0D3B  160A  158A  23D6  120A  158A  	fcall	__Umul8_16
  4402  0D40  0871               	movf	?__Umul8_16+1,w
  4403  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4404  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4405  0D43  00BD               	movwf	___flmul@temp+1
  4406  0D44  0870               	movf	?__Umul8_16,w
  4407  0D45  00BC               	movwf	___flmul@temp
  4408  0D46                     l2551:
  4409  0D46  083C               	movf	___flmul@temp,w
  4410  0D47  00AC               	movwf	??___flmul
  4411  0D48  01AD               	clrf	??___flmul+1
  4412  0D49  01AE               	clrf	??___flmul+2
  4413  0D4A  01AF               	clrf	??___flmul+3
  4414  0D4B  082C               	movf	??___flmul,w
  4415  0D4C  07B2               	addwf	___flmul@grs,f
  4416  0D4D  082D               	movf	??___flmul+1,w
  4417  0D4E  1103               	clrz
  4418  0D4F  1803               	skipnc
  4419  0D50  3E01               	addlw	1
  4420  0D51  1903               	skipnz
  4421  0D52  2D54               	goto	u3761
  4422  0D53  07B3               	addwf	___flmul@grs+1,f
  4423  0D54                     u3761:
  4424  0D54  082E               	movf	??___flmul+2,w
  4425  0D55  1103               	clrz
  4426  0D56  1803               	skipnc
  4427  0D57  3E01               	addlw	1
  4428  0D58  1903               	skipnz
  4429  0D59  2D5B               	goto	u3762
  4430  0D5A  07B4               	addwf	___flmul@grs+2,f
  4431  0D5B                     u3762:
  4432  0D5B  082F               	movf	??___flmul+3,w
  4433  0D5C  1103               	clrz
  4434  0D5D  1803               	skipnc
  4435  0D5E  3E01               	addlw	1
  4436  0D5F  1903               	skipnz
  4437  0D60  2D62               	goto	u3763
  4438  0D61  07B5               	addwf	___flmul@grs+3,f
  4439  0D62                     u3763:
  4440  0D62                     l2553:
  4441  0D62  083D               	movf	___flmul@temp+1,w
  4442  0D63  00AC               	movwf	??___flmul
  4443  0D64  01AD               	clrf	??___flmul+1
  4444  0D65  01AE               	clrf	??___flmul+2
  4445  0D66  01AF               	clrf	??___flmul+3
  4446  0D67  082C               	movf	??___flmul,w
  4447  0D68  07B8               	addwf	___flmul@prod,f
  4448  0D69  082D               	movf	??___flmul+1,w
  4449  0D6A  1103               	clrz
  4450  0D6B  1803               	skipnc
  4451  0D6C  3E01               	addlw	1
  4452  0D6D  1903               	skipnz
  4453  0D6E  2D70               	goto	u3771
  4454  0D6F  07B9               	addwf	___flmul@prod+1,f
  4455  0D70                     u3771:
  4456  0D70  082E               	movf	??___flmul+2,w
  4457  0D71  1103               	clrz
  4458  0D72  1803               	skipnc
  4459  0D73  3E01               	addlw	1
  4460  0D74  1903               	skipnz
  4461  0D75  2D77               	goto	u3772
  4462  0D76  07BA               	addwf	___flmul@prod+2,f
  4463  0D77                     u3772:
  4464  0D77  082F               	movf	??___flmul+3,w
  4465  0D78  1103               	clrz
  4466  0D79  1803               	skipnc
  4467  0D7A  3E01               	addlw	1
  4468  0D7B  1903               	skipnz
  4469  0D7C  2D7E               	goto	u3773
  4470  0D7D  07BB               	addwf	___flmul@prod+3,f
  4471  0D7E                     u3773:
  4472  0D7E  0826               	movf	___flmul@b+2,w
  4473  0D7F  00AC               	movwf	??___flmul
  4474  0D80  082C               	movf	??___flmul,w
  4475  0D81  00F0               	movwf	__Umul8_16@multiplicand
  4476  0D82  0828               	movf	___flmul@a,w
  4477  0D83  160A  158A  23D6  120A  158A  	fcall	__Umul8_16
  4478  0D88  0871               	movf	?__Umul8_16+1,w
  4479  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  4480  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  4481  0D8B  00BD               	movwf	___flmul@temp+1
  4482  0D8C  0870               	movf	?__Umul8_16,w
  4483  0D8D  00BC               	movwf	___flmul@temp
  4484  0D8E                     l2555:
  4485  0D8E  083C               	movf	___flmul@temp,w
  4486  0D8F  00AC               	movwf	??___flmul
  4487  0D90  01AD               	clrf	??___flmul+1
  4488  0D91  01AE               	clrf	??___flmul+2
  4489  0D92  01AF               	clrf	??___flmul+3
  4490  0D93  082C               	movf	??___flmul,w
  4491  0D94  07B2               	addwf	___flmul@grs,f
  4492  0D95  082D               	movf	??___flmul+1,w
  4493  0D96  1103               	clrz
  4494  0D97  1803               	skipnc
  4495  0D98  3E01               	addlw	1
  4496  0D99  1903               	skipnz
  4497  0D9A  2D9C               	goto	u3781
  4498  0D9B  07B3               	addwf	___flmul@grs+1,f
  4499  0D9C                     u3781:
  4500  0D9C  082E               	movf	??___flmul+2,w
  4501  0D9D  1103               	clrz
  4502  0D9E  1803               	skipnc
  4503  0D9F  3E01               	addlw	1
  4504  0DA0  1903               	skipnz
  4505  0DA1  2DA3               	goto	u3782
  4506  0DA2  07B4               	addwf	___flmul@grs+2,f
  4507  0DA3                     u3782:
  4508  0DA3  082F               	movf	??___flmul+3,w
  4509  0DA4  1103               	clrz
  4510  0DA5  1803               	skipnc
  4511  0DA6  3E01               	addlw	1
  4512  0DA7  1903               	skipnz
  4513  0DA8  2DAA               	goto	u3783
  4514  0DA9  07B5               	addwf	___flmul@grs+3,f
  4515  0DAA                     u3783:
  4516  0DAA                     l2557:
  4517  0DAA  083D               	movf	___flmul@temp+1,w
  4518  0DAB  00AC               	movwf	??___flmul
  4519  0DAC  01AD               	clrf	??___flmul+1
  4520  0DAD  01AE               	clrf	??___flmul+2
  4521  0DAE  01AF               	clrf	??___flmul+3
  4522  0DAF  082C               	movf	??___flmul,w
  4523  0DB0  07B8               	addwf	___flmul@prod,f
  4524  0DB1  082D               	movf	??___flmul+1,w
  4525  0DB2  1103               	clrz
  4526  0DB3  1803               	skipnc
  4527  0DB4  3E01               	addlw	1
  4528  0DB5  1903               	skipnz
  4529  0DB6  2DB8               	goto	u3791
  4530  0DB7  07B9               	addwf	___flmul@prod+1,f
  4531  0DB8                     u3791:
  4532  0DB8  082E               	movf	??___flmul+2,w
  4533  0DB9  1103               	clrz
  4534  0DBA  1803               	skipnc
  4535  0DBB  3E01               	addlw	1
  4536  0DBC  1903               	skipnz
  4537  0DBD  2DBF               	goto	u3792
  4538  0DBE  07BA               	addwf	___flmul@prod+2,f
  4539  0DBF                     u3792:
  4540  0DBF  082F               	movf	??___flmul+3,w
  4541  0DC0  1103               	clrz
  4542  0DC1  1803               	skipnc
  4543  0DC2  3E01               	addlw	1
  4544  0DC3  1903               	skipnz
  4545  0DC4  2DC6               	goto	u3793
  4546  0DC5  07BB               	addwf	___flmul@prod+3,f
  4547  0DC6                     u3793:
  4548  0DC6                     l2559:
  4549  0DC6  3008               	movlw	8
  4550  0DC7  00AC               	movwf	??___flmul
  4551  0DC8                     u3805:
  4552  0DC8  1003               	clrc
  4553  0DC9  0DB2               	rlf	___flmul@grs,f
  4554  0DCA  0DB3               	rlf	___flmul@grs+1,f
  4555  0DCB  0DB4               	rlf	___flmul@grs+2,f
  4556  0DCC  0DB5               	rlf	___flmul@grs+3,f
  4557  0DCD  0BAC               	decfsz	??___flmul,f
  4558  0DCE  2DC8               	goto	u3805
  4559  0DCF                     l2561:
  4560  0DCF  0825               	movf	___flmul@b+1,w
  4561  0DD0  00AC               	movwf	??___flmul
  4562  0DD1  082C               	movf	??___flmul,w
  4563  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  4564  0DD3  0828               	movf	___flmul@a,w
  4565  0DD4  160A  158A  23D6  120A  158A  	fcall	__Umul8_16
  4566  0DD9  0871               	movf	?__Umul8_16+1,w
  4567  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  4568  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  4569  0DDC  00BD               	movwf	___flmul@temp+1
  4570  0DDD  0870               	movf	?__Umul8_16,w
  4571  0DDE  00BC               	movwf	___flmul@temp
  4572  0DDF                     l2563:
  4573  0DDF  083C               	movf	___flmul@temp,w
  4574  0DE0  00AC               	movwf	??___flmul
  4575  0DE1  083D               	movf	___flmul@temp+1,w
  4576  0DE2  00AD               	movwf	??___flmul+1
  4577  0DE3  01AE               	clrf	??___flmul+2
  4578  0DE4  01AF               	clrf	??___flmul+3
  4579  0DE5  082C               	movf	??___flmul,w
  4580  0DE6  07B2               	addwf	___flmul@grs,f
  4581  0DE7  082D               	movf	??___flmul+1,w
  4582  0DE8  1103               	clrz
  4583  0DE9  1803               	skipnc
  4584  0DEA  3E01               	addlw	1
  4585  0DEB  1903               	skipnz
  4586  0DEC  2DEE               	goto	u3811
  4587  0DED  07B3               	addwf	___flmul@grs+1,f
  4588  0DEE                     u3811:
  4589  0DEE  082E               	movf	??___flmul+2,w
  4590  0DEF  1103               	clrz
  4591  0DF0  1803               	skipnc
  4592  0DF1  3E01               	addlw	1
  4593  0DF2  1903               	skipnz
  4594  0DF3  2DF5               	goto	u3812
  4595  0DF4  07B4               	addwf	___flmul@grs+2,f
  4596  0DF5                     u3812:
  4597  0DF5  082F               	movf	??___flmul+3,w
  4598  0DF6  1103               	clrz
  4599  0DF7  1803               	skipnc
  4600  0DF8  3E01               	addlw	1
  4601  0DF9  1903               	skipnz
  4602  0DFA  2DFC               	goto	u3813
  4603  0DFB  07B5               	addwf	___flmul@grs+3,f
  4604  0DFC                     u3813:
  4605  0DFC                     l2565:
  4606  0DFC  0824               	movf	___flmul@b,w
  4607  0DFD  00AC               	movwf	??___flmul
  4608  0DFE  082C               	movf	??___flmul,w
  4609  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  4610  0E00  0829               	movf	___flmul@a+1,w
  4611  0E01  160A  158A  23D6  120A  158A  	fcall	__Umul8_16
  4612  0E06  0871               	movf	?__Umul8_16+1,w
  4613  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  4614  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  4615  0E09  00BD               	movwf	___flmul@temp+1
  4616  0E0A  0870               	movf	?__Umul8_16,w
  4617  0E0B  00BC               	movwf	___flmul@temp
  4618  0E0C                     l2567:
  4619  0E0C  083C               	movf	___flmul@temp,w
  4620  0E0D  00AC               	movwf	??___flmul
  4621  0E0E  083D               	movf	___flmul@temp+1,w
  4622  0E0F  00AD               	movwf	??___flmul+1
  4623  0E10  01AE               	clrf	??___flmul+2
  4624  0E11  01AF               	clrf	??___flmul+3
  4625  0E12  082C               	movf	??___flmul,w
  4626  0E13  07B2               	addwf	___flmul@grs,f
  4627  0E14  082D               	movf	??___flmul+1,w
  4628  0E15  1103               	clrz
  4629  0E16  1803               	skipnc
  4630  0E17  3E01               	addlw	1
  4631  0E18  1903               	skipnz
  4632  0E19  2E1B               	goto	u3821
  4633  0E1A  07B3               	addwf	___flmul@grs+1,f
  4634  0E1B                     u3821:
  4635  0E1B  082E               	movf	??___flmul+2,w
  4636  0E1C  1103               	clrz
  4637  0E1D  1803               	skipnc
  4638  0E1E  3E01               	addlw	1
  4639  0E1F  1903               	skipnz
  4640  0E20  2E22               	goto	u3822
  4641  0E21  07B4               	addwf	___flmul@grs+2,f
  4642  0E22                     u3822:
  4643  0E22  082F               	movf	??___flmul+3,w
  4644  0E23  1103               	clrz
  4645  0E24  1803               	skipnc
  4646  0E25  3E01               	addlw	1
  4647  0E26  1903               	skipnz
  4648  0E27  2E29               	goto	u3823
  4649  0E28  07B5               	addwf	___flmul@grs+3,f
  4650  0E29                     u3823:
  4651  0E29                     l2569:
  4652  0E29  3008               	movlw	8
  4653  0E2A  00AC               	movwf	??___flmul
  4654  0E2B                     u3835:
  4655  0E2B  1003               	clrc
  4656  0E2C  0DB2               	rlf	___flmul@grs,f
  4657  0E2D  0DB3               	rlf	___flmul@grs+1,f
  4658  0E2E  0DB4               	rlf	___flmul@grs+2,f
  4659  0E2F  0DB5               	rlf	___flmul@grs+3,f
  4660  0E30  0BAC               	decfsz	??___flmul,f
  4661  0E31  2E2B               	goto	u3835
  4662  0E32  0824               	movf	___flmul@b,w
  4663  0E33  00AC               	movwf	??___flmul
  4664  0E34  082C               	movf	??___flmul,w
  4665  0E35  00F0               	movwf	__Umul8_16@multiplicand
  4666  0E36  0828               	movf	___flmul@a,w
  4667  0E37  160A  158A  23D6  120A  158A  	fcall	__Umul8_16
  4668  0E3C  0871               	movf	?__Umul8_16+1,w
  4669  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  4670  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  4671  0E3F  00BD               	movwf	___flmul@temp+1
  4672  0E40  0870               	movf	?__Umul8_16,w
  4673  0E41  00BC               	movwf	___flmul@temp
  4674  0E42                     l2571:
  4675  0E42  083C               	movf	___flmul@temp,w
  4676  0E43  00AC               	movwf	??___flmul
  4677  0E44  083D               	movf	___flmul@temp+1,w
  4678  0E45  00AD               	movwf	??___flmul+1
  4679  0E46  01AE               	clrf	??___flmul+2
  4680  0E47  01AF               	clrf	??___flmul+3
  4681  0E48  082C               	movf	??___flmul,w
  4682  0E49  07B2               	addwf	___flmul@grs,f
  4683  0E4A  082D               	movf	??___flmul+1,w
  4684  0E4B  1103               	clrz
  4685  0E4C  1803               	skipnc
  4686  0E4D  3E01               	addlw	1
  4687  0E4E  1903               	skipnz
  4688  0E4F  2E51               	goto	u3841
  4689  0E50  07B3               	addwf	___flmul@grs+1,f
  4690  0E51                     u3841:
  4691  0E51  082E               	movf	??___flmul+2,w
  4692  0E52  1103               	clrz
  4693  0E53  1803               	skipnc
  4694  0E54  3E01               	addlw	1
  4695  0E55  1903               	skipnz
  4696  0E56  2E58               	goto	u3842
  4697  0E57  07B4               	addwf	___flmul@grs+2,f
  4698  0E58                     u3842:
  4699  0E58  082F               	movf	??___flmul+3,w
  4700  0E59  1103               	clrz
  4701  0E5A  1803               	skipnc
  4702  0E5B  3E01               	addlw	1
  4703  0E5C  1903               	skipnz
  4704  0E5D  2E5F               	goto	u3843
  4705  0E5E  07B5               	addwf	___flmul@grs+3,f
  4706  0E5F                     u3843:
  4707  0E5F                     l2573:
  4708  0E5F  0825               	movf	___flmul@b+1,w
  4709  0E60  00AC               	movwf	??___flmul
  4710  0E61  082C               	movf	??___flmul,w
  4711  0E62  00F0               	movwf	__Umul8_16@multiplicand
  4712  0E63  082A               	movf	___flmul@a+2,w
  4713  0E64  160A  158A  23D6  120A  158A  	fcall	__Umul8_16
  4714  0E69  0871               	movf	?__Umul8_16+1,w
  4715  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  4716  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  4717  0E6C  00BD               	movwf	___flmul@temp+1
  4718  0E6D  0870               	movf	?__Umul8_16,w
  4719  0E6E  00BC               	movwf	___flmul@temp
  4720  0E6F  083C               	movf	___flmul@temp,w
  4721  0E70  00AC               	movwf	??___flmul
  4722  0E71  083D               	movf	___flmul@temp+1,w
  4723  0E72  00AD               	movwf	??___flmul+1
  4724  0E73  01AE               	clrf	??___flmul+2
  4725  0E74  01AF               	clrf	??___flmul+3
  4726  0E75  082C               	movf	??___flmul,w
  4727  0E76  07B8               	addwf	___flmul@prod,f
  4728  0E77  082D               	movf	??___flmul+1,w
  4729  0E78  1103               	clrz
  4730  0E79  1803               	skipnc
  4731  0E7A  3E01               	addlw	1
  4732  0E7B  1903               	skipnz
  4733  0E7C  2E7E               	goto	u3851
  4734  0E7D  07B9               	addwf	___flmul@prod+1,f
  4735  0E7E                     u3851:
  4736  0E7E  082E               	movf	??___flmul+2,w
  4737  0E7F  1103               	clrz
  4738  0E80  1803               	skipnc
  4739  0E81  3E01               	addlw	1
  4740  0E82  1903               	skipnz
  4741  0E83  2E85               	goto	u3852
  4742  0E84  07BA               	addwf	___flmul@prod+2,f
  4743  0E85                     u3852:
  4744  0E85  082F               	movf	??___flmul+3,w
  4745  0E86  1103               	clrz
  4746  0E87  1803               	skipnc
  4747  0E88  3E01               	addlw	1
  4748  0E89  1903               	skipnz
  4749  0E8A  2E8C               	goto	u3853
  4750  0E8B  07BB               	addwf	___flmul@prod+3,f
  4751  0E8C                     u3853:
  4752  0E8C                     l2575:
  4753  0E8C  0826               	movf	___flmul@b+2,w
  4754  0E8D  00AC               	movwf	??___flmul
  4755  0E8E  082C               	movf	??___flmul,w
  4756  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  4757  0E90  0829               	movf	___flmul@a+1,w
  4758  0E91  160A  158A  23D6  120A  158A  	fcall	__Umul8_16
  4759  0E96  0871               	movf	?__Umul8_16+1,w
  4760  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  4761  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  4762  0E99  00BD               	movwf	___flmul@temp+1
  4763  0E9A  0870               	movf	?__Umul8_16,w
  4764  0E9B  00BC               	movwf	___flmul@temp
  4765  0E9C                     l2577:
  4766  0E9C  083C               	movf	___flmul@temp,w
  4767  0E9D  00AC               	movwf	??___flmul
  4768  0E9E  083D               	movf	___flmul@temp+1,w
  4769  0E9F  00AD               	movwf	??___flmul+1
  4770  0EA0  01AE               	clrf	??___flmul+2
  4771  0EA1  01AF               	clrf	??___flmul+3
  4772  0EA2  082C               	movf	??___flmul,w
  4773  0EA3  07B8               	addwf	___flmul@prod,f
  4774  0EA4  082D               	movf	??___flmul+1,w
  4775  0EA5  1103               	clrz
  4776  0EA6  1803               	skipnc
  4777  0EA7  3E01               	addlw	1
  4778  0EA8  1903               	skipnz
  4779  0EA9  2EAB               	goto	u3861
  4780  0EAA  07B9               	addwf	___flmul@prod+1,f
  4781  0EAB                     u3861:
  4782  0EAB  082E               	movf	??___flmul+2,w
  4783  0EAC  1103               	clrz
  4784  0EAD  1803               	skipnc
  4785  0EAE  3E01               	addlw	1
  4786  0EAF  1903               	skipnz
  4787  0EB0  2EB2               	goto	u3862
  4788  0EB1  07BA               	addwf	___flmul@prod+2,f
  4789  0EB2                     u3862:
  4790  0EB2  082F               	movf	??___flmul+3,w
  4791  0EB3  1103               	clrz
  4792  0EB4  1803               	skipnc
  4793  0EB5  3E01               	addlw	1
  4794  0EB6  1903               	skipnz
  4795  0EB7  2EB9               	goto	u3863
  4796  0EB8  07BB               	addwf	___flmul@prod+3,f
  4797  0EB9                     u3863:
  4798  0EB9  0826               	movf	___flmul@b+2,w
  4799  0EBA  00AC               	movwf	??___flmul
  4800  0EBB  082C               	movf	??___flmul,w
  4801  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  4802  0EBD  082A               	movf	___flmul@a+2,w
  4803  0EBE  160A  158A  23D6  120A  158A  	fcall	__Umul8_16
  4804  0EC3  0871               	movf	?__Umul8_16+1,w
  4805  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  4806  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  4807  0EC6  00BD               	movwf	___flmul@temp+1
  4808  0EC7  0870               	movf	?__Umul8_16,w
  4809  0EC8  00BC               	movwf	___flmul@temp
  4810  0EC9                     l2579:
  4811  0EC9  083C               	movf	___flmul@temp,w
  4812  0ECA  00AC               	movwf	??___flmul
  4813  0ECB  083D               	movf	___flmul@temp+1,w
  4814  0ECC  00AD               	movwf	??___flmul+1
  4815  0ECD  01AE               	clrf	??___flmul+2
  4816  0ECE  01AF               	clrf	??___flmul+3
  4817  0ECF  3008               	movlw	8
  4818  0ED0                     u3875:
  4819  0ED0  1003               	clrc
  4820  0ED1  0DAC               	rlf	??___flmul,f
  4821  0ED2  0DAD               	rlf	??___flmul+1,f
  4822  0ED3  0DAE               	rlf	??___flmul+2,f
  4823  0ED4  0DAF               	rlf	??___flmul+3,f
  4824  0ED5                     u3870:
  4825  0ED5  3EFF               	addlw	-1
  4826  0ED6  1D03               	skipz
  4827  0ED7  2ED0               	goto	u3875
  4828  0ED8  082C               	movf	??___flmul,w
  4829  0ED9  07B8               	addwf	___flmul@prod,f
  4830  0EDA  082D               	movf	??___flmul+1,w
  4831  0EDB  1103               	clrz
  4832  0EDC  1803               	skipnc
  4833  0EDD  3E01               	addlw	1
  4834  0EDE  1903               	skipnz
  4835  0EDF  2EE1               	goto	u3881
  4836  0EE0  07B9               	addwf	___flmul@prod+1,f
  4837  0EE1                     u3881:
  4838  0EE1  082E               	movf	??___flmul+2,w
  4839  0EE2  1103               	clrz
  4840  0EE3  1803               	skipnc
  4841  0EE4  3E01               	addlw	1
  4842  0EE5  1903               	skipnz
  4843  0EE6  2EE8               	goto	u3882
  4844  0EE7  07BA               	addwf	___flmul@prod+2,f
  4845  0EE8                     u3882:
  4846  0EE8  082F               	movf	??___flmul+3,w
  4847  0EE9  1103               	clrz
  4848  0EEA  1803               	skipnc
  4849  0EEB  3E01               	addlw	1
  4850  0EEC  1903               	skipnz
  4851  0EED  2EEF               	goto	u3883
  4852  0EEE  07BB               	addwf	___flmul@prod+3,f
  4853  0EEF                     u3883:
  4854  0EEF                     l2581:
  4855  0EEF  0832               	movf	___flmul@grs,w
  4856  0EF0  00AC               	movwf	??___flmul
  4857  0EF1  0833               	movf	___flmul@grs+1,w
  4858  0EF2  00AD               	movwf	??___flmul+1
  4859  0EF3  0834               	movf	___flmul@grs+2,w
  4860  0EF4  00AE               	movwf	??___flmul+2
  4861  0EF5  0835               	movf	___flmul@grs+3,w
  4862  0EF6  00AF               	movwf	??___flmul+3
  4863  0EF7  3018               	movlw	24
  4864  0EF8                     u3895:
  4865  0EF8  1003               	clrc
  4866  0EF9  0CAF               	rrf	??___flmul+3,f
  4867  0EFA  0CAE               	rrf	??___flmul+2,f
  4868  0EFB  0CAD               	rrf	??___flmul+1,f
  4869  0EFC  0CAC               	rrf	??___flmul,f
  4870  0EFD                     u3890:
  4871  0EFD  3EFF               	addlw	-1
  4872  0EFE  1D03               	skipz
  4873  0EFF  2EF8               	goto	u3895
  4874  0F00  082C               	movf	??___flmul,w
  4875  0F01  07B8               	addwf	___flmul@prod,f
  4876  0F02  082D               	movf	??___flmul+1,w
  4877  0F03  1103               	clrz
  4878  0F04  1803               	skipnc
  4879  0F05  3E01               	addlw	1
  4880  0F06  1903               	skipnz
  4881  0F07  2F09               	goto	u3901
  4882  0F08  07B9               	addwf	___flmul@prod+1,f
  4883  0F09                     u3901:
  4884  0F09  082E               	movf	??___flmul+2,w
  4885  0F0A  1103               	clrz
  4886  0F0B  1803               	skipnc
  4887  0F0C  3E01               	addlw	1
  4888  0F0D  1903               	skipnz
  4889  0F0E  2F10               	goto	u3902
  4890  0F0F  07BA               	addwf	___flmul@prod+2,f
  4891  0F10                     u3902:
  4892  0F10  082F               	movf	??___flmul+3,w
  4893  0F11  1103               	clrz
  4894  0F12  1803               	skipnc
  4895  0F13  3E01               	addlw	1
  4896  0F14  1903               	skipnz
  4897  0F15  2F17               	goto	u3903
  4898  0F16  07BB               	addwf	___flmul@prod+3,f
  4899  0F17                     u3903:
  4900  0F17                     l2583:
  4901  0F17  3008               	movlw	8
  4902  0F18  00AC               	movwf	??___flmul
  4903  0F19                     u3915:
  4904  0F19  1003               	clrc
  4905  0F1A  0DB2               	rlf	___flmul@grs,f
  4906  0F1B  0DB3               	rlf	___flmul@grs+1,f
  4907  0F1C  0DB4               	rlf	___flmul@grs+2,f
  4908  0F1D  0DB5               	rlf	___flmul@grs+3,f
  4909  0F1E  0BAC               	decfsz	??___flmul,f
  4910  0F1F  2F19               	goto	u3915
  4911  0F20                     l2585:
  4912  0F20  0837               	movf	___flmul@bexp,w
  4913  0F21  0736               	addwf	___flmul@aexp,w
  4914  0F22  00AC               	movwf	??___flmul
  4915  0F23  01AD               	clrf	??___flmul+1
  4916  0F24  0DAD               	rlf	??___flmul+1,f
  4917  0F25  082C               	movf	??___flmul,w
  4918  0F26  3E82               	addlw	130
  4919  0F27  00BC               	movwf	___flmul@temp
  4920  0F28  082D               	movf	??___flmul+1,w
  4921  0F29  1803               	skipnc
  4922  0F2A  3E01               	addlw	1
  4923  0F2B  3EFF               	addlw	255
  4924  0F2C  00BD               	movwf	___flmul@temp+1
  4925  0F2D  2F4B               	goto	l2597
  4926  0F2E                     l2587:
  4927  0F2E  3001               	movlw	1
  4928  0F2F  00AC               	movwf	??___flmul
  4929  0F30                     u3925:
  4930  0F30  1003               	clrc
  4931  0F31  0DB8               	rlf	___flmul@prod,f
  4932  0F32  0DB9               	rlf	___flmul@prod+1,f
  4933  0F33  0DBA               	rlf	___flmul@prod+2,f
  4934  0F34  0DBB               	rlf	___flmul@prod+3,f
  4935  0F35  0BAC               	decfsz	??___flmul,f
  4936  0F36  2F30               	goto	u3925
  4937  0F37                     l2589:
  4938  0F37  1FB5               	btfss	___flmul@grs+3,7
  4939  0F38  2F3A               	goto	u3931
  4940  0F39  2F3B               	goto	u3930
  4941  0F3A                     u3931:
  4942  0F3A  2F3C               	goto	l2593
  4943  0F3B                     u3930:
  4944  0F3B                     l2591:
  4945  0F3B  1438               	bsf	___flmul@prod,0
  4946  0F3C                     l2593:
  4947  0F3C  3001               	movlw	1
  4948  0F3D  00AC               	movwf	??___flmul
  4949  0F3E                     u3945:
  4950  0F3E  1003               	clrc
  4951  0F3F  0DB2               	rlf	___flmul@grs,f
  4952  0F40  0DB3               	rlf	___flmul@grs+1,f
  4953  0F41  0DB4               	rlf	___flmul@grs+2,f
  4954  0F42  0DB5               	rlf	___flmul@grs+3,f
  4955  0F43  0BAC               	decfsz	??___flmul,f
  4956  0F44  2F3E               	goto	u3945
  4957  0F45                     l2595:
  4958  0F45  30FF               	movlw	255
  4959  0F46  07BC               	addwf	___flmul@temp,f
  4960  0F47  1803               	skipnc
  4961  0F48  0ABD               	incf	___flmul@temp+1,f
  4962  0F49  30FF               	movlw	255
  4963  0F4A  07BD               	addwf	___flmul@temp+1,f
  4964  0F4B                     l2597:
  4965  0F4B  1FBA               	btfss	___flmul@prod+2,7
  4966  0F4C  2F4E               	goto	u3951
  4967  0F4D  2F4F               	goto	u3950
  4968  0F4E                     u3951:
  4969  0F4E  2F2E               	goto	l2587
  4970  0F4F                     u3950:
  4971  0F4F                     l2599:
  4972  0F4F  01B6               	clrf	___flmul@aexp
  4973  0F50                     l2601:
  4974  0F50  1FB5               	btfss	___flmul@grs+3,7
  4975  0F51  2F53               	goto	u3961
  4976  0F52  2F54               	goto	u3960
  4977  0F53                     u3961:
  4978  0F53  2F70               	goto	l2609
  4979  0F54                     u3960:
  4980  0F54                     l2603:
  4981  0F54  30FF               	movlw	255
  4982  0F55  0532               	andwf	___flmul@grs,w
  4983  0F56  00AC               	movwf	??___flmul
  4984  0F57  30FF               	movlw	255
  4985  0F58  0533               	andwf	___flmul@grs+1,w
  4986  0F59  00AD               	movwf	??___flmul+1
  4987  0F5A  30FF               	movlw	255
  4988  0F5B  0534               	andwf	___flmul@grs+2,w
  4989  0F5C  00AE               	movwf	??___flmul+2
  4990  0F5D  307F               	movlw	127
  4991  0F5E  0535               	andwf	___flmul@grs+3,w
  4992  0F5F  00AF               	movwf	??___flmul+3
  4993  0F60  082F               	movf	??___flmul+3,w
  4994  0F61  042E               	iorwf	??___flmul+2,w
  4995  0F62  042D               	iorwf	??___flmul+1,w
  4996  0F63  042C               	iorwf	??___flmul,w
  4997  0F64  1903               	skipnz
  4998  0F65  2F67               	goto	u3971
  4999  0F66  2F68               	goto	u3970
  5000  0F67                     u3971:
  5001  0F67  2F6B               	goto	l759
  5002  0F68                     u3970:
  5003  0F68                     l2605:
  5004  0F68  01B6               	clrf	___flmul@aexp
  5005  0F69  0AB6               	incf	___flmul@aexp,f
  5006  0F6A  2F70               	goto	l2609
  5007  0F6B                     l759:
  5008  0F6B  1C38               	btfss	___flmul@prod,0
  5009  0F6C  2F6E               	goto	u3981
  5010  0F6D  2F6F               	goto	u3980
  5011  0F6E                     u3981:
  5012  0F6E  2F70               	goto	l2609
  5013  0F6F                     u3980:
  5014  0F6F  2F68               	goto	l2605
  5015  0F70                     l2609:
  5016  0F70  0836               	movf	___flmul@aexp,w
  5017  0F71  1903               	btfsc	3,2
  5018  0F72  2F74               	goto	u3991
  5019  0F73  2F75               	goto	u3990
  5020  0F74                     u3991:
  5021  0F74  2FA6               	goto	l2619
  5022  0F75                     u3990:
  5023  0F75                     l2611:
  5024  0F75  3001               	movlw	1
  5025  0F76  07B8               	addwf	___flmul@prod,f
  5026  0F77  3000               	movlw	0
  5027  0F78  1803               	skipnc
  5028  0F79  3001               	movlw	1
  5029  0F7A  07B9               	addwf	___flmul@prod+1,f
  5030  0F7B  3000               	movlw	0
  5031  0F7C  1803               	skipnc
  5032  0F7D  3001               	movlw	1
  5033  0F7E  07BA               	addwf	___flmul@prod+2,f
  5034  0F7F  3000               	movlw	0
  5035  0F80  1803               	skipnc
  5036  0F81  3001               	movlw	1
  5037  0F82  07BB               	addwf	___flmul@prod+3,f
  5038  0F83                     l2613:
  5039  0F83  1C3B               	btfss	___flmul@prod+3,0
  5040  0F84  2F86               	goto	u4001
  5041  0F85  2F87               	goto	u4000
  5042  0F86                     u4001:
  5043  0F86  2FA6               	goto	l2619
  5044  0F87                     u4000:
  5045  0F87                     l2615:
  5046  0F87  0838               	movf	___flmul@prod,w
  5047  0F88  00AC               	movwf	??___flmul
  5048  0F89  0839               	movf	___flmul@prod+1,w
  5049  0F8A  00AD               	movwf	??___flmul+1
  5050  0F8B  083A               	movf	___flmul@prod+2,w
  5051  0F8C  00AE               	movwf	??___flmul+2
  5052  0F8D  083B               	movf	___flmul@prod+3,w
  5053  0F8E  00AF               	movwf	??___flmul+3
  5054  0F8F  3001               	movlw	1
  5055  0F90  00B0               	movwf	??___flmul+4
  5056  0F91                     u4015:
  5057  0F91  0D2F               	rlf	??___flmul+3,w
  5058  0F92  0CAF               	rrf	??___flmul+3,f
  5059  0F93  0CAE               	rrf	??___flmul+2,f
  5060  0F94  0CAD               	rrf	??___flmul+1,f
  5061  0F95  0CAC               	rrf	??___flmul,f
  5062  0F96                     u4010:
  5063  0F96  0BB0               	decfsz	??___flmul+4,f
  5064  0F97  2F91               	goto	u4015
  5065  0F98  082F               	movf	??___flmul+3,w
  5066  0F99  00BB               	movwf	___flmul@prod+3
  5067  0F9A  082E               	movf	??___flmul+2,w
  5068  0F9B  00BA               	movwf	___flmul@prod+2
  5069  0F9C  082D               	movf	??___flmul+1,w
  5070  0F9D  00B9               	movwf	___flmul@prod+1
  5071  0F9E  082C               	movf	??___flmul,w
  5072  0F9F  00B8               	movwf	___flmul@prod
  5073  0FA0                     l2617:
  5074  0FA0  3001               	movlw	1
  5075  0FA1  07BC               	addwf	___flmul@temp,f
  5076  0FA2  1803               	skipnc
  5077  0FA3  0ABD               	incf	___flmul@temp+1,f
  5078  0FA4  3000               	movlw	0
  5079  0FA5  07BD               	addwf	___flmul@temp+1,f
  5080  0FA6                     l2619:
  5081  0FA6  083D               	movf	___flmul@temp+1,w
  5082  0FA7  3A80               	xorlw	128
  5083  0FA8  00FF               	movwf	btemp+1
  5084  0FA9  3080               	movlw	128
  5085  0FAA  027F               	subwf	btemp+1,w
  5086  0FAB  1D03               	skipz
  5087  0FAC  2FAF               	goto	u4025
  5088  0FAD  30FF               	movlw	255
  5089  0FAE  023C               	subwf	___flmul@temp,w
  5090  0FAF                     u4025:
  5091  0FAF  1C03               	skipc
  5092  0FB0  2FB2               	goto	u4021
  5093  0FB1  2FB3               	goto	u4020
  5094  0FB2                     u4021:
  5095  0FB2  2FBE               	goto	l2623
  5096  0FB3                     u4020:
  5097  0FB3                     l2621:
  5098  0FB3  307F               	movlw	127
  5099  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  5100  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  5101  0FB6  00BB               	movwf	___flmul@prod+3
  5102  0FB7  3080               	movlw	128
  5103  0FB8  00BA               	movwf	___flmul@prod+2
  5104  0FB9  3000               	movlw	0
  5105  0FBA  00B9               	movwf	___flmul@prod+1
  5106  0FBB  3000               	movlw	0
  5107  0FBC  00B8               	movwf	___flmul@prod
  5108  0FBD  2FF3               	goto	l765
  5109  0FBE                     l2623:
  5110  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  5111  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  5112  0FC0  083D               	movf	___flmul@temp+1,w
  5113  0FC1  3A80               	xorlw	128
  5114  0FC2  00FF               	movwf	btemp+1
  5115  0FC3  3080               	movlw	128
  5116  0FC4  027F               	subwf	btemp+1,w
  5117  0FC5  1D03               	skipz
  5118  0FC6  2FC9               	goto	u4035
  5119  0FC7  3001               	movlw	1
  5120  0FC8  023C               	subwf	___flmul@temp,w
  5121  0FC9                     u4035:
  5122  0FC9  1803               	skipnc
  5123  0FCA  2FCC               	goto	u4031
  5124  0FCB  2FCD               	goto	u4030
  5125  0FCC                     u4031:
  5126  0FCC  2FD9               	goto	l2629
  5127  0FCD                     u4030:
  5128  0FCD                     l2625:
  5129  0FCD  3000               	movlw	0
  5130  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  5131  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  5132  0FD0  00BB               	movwf	___flmul@prod+3
  5133  0FD1  3000               	movlw	0
  5134  0FD2  00BA               	movwf	___flmul@prod+2
  5135  0FD3  3000               	movlw	0
  5136  0FD4  00B9               	movwf	___flmul@prod+1
  5137  0FD5  3000               	movlw	0
  5138  0FD6  00B8               	movwf	___flmul@prod
  5139  0FD7                     l2627:
  5140  0FD7  01B1               	clrf	___flmul@sign
  5141  0FD8  2FF3               	goto	l765
  5142  0FD9                     l2629:
  5143  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  5144  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  5145  0FDB  083C               	movf	___flmul@temp,w
  5146  0FDC  00AC               	movwf	??___flmul
  5147  0FDD  082C               	movf	??___flmul,w
  5148  0FDE  00B7               	movwf	___flmul@bexp
  5149  0FDF  30FF               	movlw	255
  5150  0FE0  05B8               	andwf	___flmul@prod,f
  5151  0FE1  30FF               	movlw	255
  5152  0FE2  05B9               	andwf	___flmul@prod+1,f
  5153  0FE3  307F               	movlw	127
  5154  0FE4  05BA               	andwf	___flmul@prod+2,f
  5155  0FE5  3000               	movlw	0
  5156  0FE6  05BB               	andwf	___flmul@prod+3,f
  5157  0FE7                     l2631:
  5158  0FE7  1C37               	btfss	___flmul@bexp,0
  5159  0FE8  2FEA               	goto	u4041
  5160  0FE9  2FEB               	goto	u4040
  5161  0FEA                     u4041:
  5162  0FEA  2FEC               	goto	l2635
  5163  0FEB                     u4040:
  5164  0FEB                     l2633:
  5165  0FEB  17BA               	bsf	___flmul@prod+2,7
  5166  0FEC                     l2635:
  5167  0FEC  0837               	movf	___flmul@bexp,w
  5168  0FED  00AC               	movwf	??___flmul
  5169  0FEE  1003               	clrc
  5170  0FEF  0C2C               	rrf	??___flmul,w
  5171  0FF0  00AD               	movwf	??___flmul+1
  5172  0FF1  082D               	movf	??___flmul+1,w
  5173  0FF2  00BB               	movwf	___flmul@prod+3
  5174  0FF3                     l765:
  5175  0FF3  0831               	movf	___flmul@sign,w
  5176  0FF4  00AC               	movwf	??___flmul
  5177  0FF5  082C               	movf	??___flmul,w
  5178  0FF6  04BB               	iorwf	___flmul@prod+3,f
  5179  0FF7                     l2637:
  5180  0FF7  083B               	movf	___flmul@prod+3,w
  5181  0FF8  00A7               	movwf	?___flmul+3
  5182  0FF9  083A               	movf	___flmul@prod+2,w
  5183  0FFA  00A6               	movwf	?___flmul+2
  5184  0FFB  0839               	movf	___flmul@prod+1,w
  5185  0FFC  00A5               	movwf	?___flmul+1
  5186  0FFD  0838               	movf	___flmul@prod,w
  5187  0FFE  00A4               	movwf	?___flmul
  5188  0FFF                     l753:
  5189  0FFF  0008               	return
  5190  1000                     __end_of___flmul:
  5191                           
  5192                           	psect	text10
  5193  1BD6                     __ptext10:	
  5194 ;; *************** function __Umul8_16 *****************
  5195 ;; Defined at:
  5196 ;;		line 4 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;  multiplier      1    wreg     unsigned char 
  5199 ;;  multiplicand    1    0[COMMON] unsigned char 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;  multiplier      1    8[COMMON] unsigned char 
  5202 ;;  word_mpld       2    6[COMMON] unsigned int 
  5203 ;;  product         2    4[COMMON] unsigned int 
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  2    0[COMMON] unsigned int 
  5206 ;; Registers used:
  5207 ;;		wreg, status,2, status,0
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5213 ;;      Params:         2       0       0       0       0
  5214 ;;      Locals:         5       0       0       0       0
  5215 ;;      Temps:          2       0       0       0       0
  5216 ;;      Totals:         9       0       0       0       0
  5217 ;;Total ram usage:        9 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; This function calls:
  5220 ;;		Nothing
  5221 ;; This function is called by:
  5222 ;;		___flmul
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           
  5227                           ;psect for function __Umul8_16
  5228  1BD6                     __Umul8_16:
  5229                           
  5230                           ;incstack = 0
  5231                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5232                           ;__Umul8_16@multiplier stored from wreg
  5233  1BD6  00F8               	movwf	__Umul8_16@multiplier
  5234  1BD7                     l2163:
  5235  1BD7  01F4               	clrf	__Umul8_16@product
  5236  1BD8  01F5               	clrf	__Umul8_16@product+1
  5237  1BD9                     l2165:
  5238  1BD9  0870               	movf	__Umul8_16@multiplicand,w
  5239  1BDA  00F2               	movwf	??__Umul8_16
  5240  1BDB  01F3               	clrf	??__Umul8_16+1
  5241  1BDC  0872               	movf	??__Umul8_16,w
  5242  1BDD  00F6               	movwf	__Umul8_16@word_mpld
  5243  1BDE  0873               	movf	??__Umul8_16+1,w
  5244  1BDF  00F7               	movwf	__Umul8_16@word_mpld+1
  5245  1BE0                     l2167:
  5246  1BE0  1C78               	btfss	__Umul8_16@multiplier,0
  5247  1BE1  2BE3               	goto	u2871
  5248  1BE2  2BE4               	goto	u2870
  5249  1BE3                     u2871:
  5250  1BE3  2BEA               	goto	l772
  5251  1BE4                     u2870:
  5252  1BE4                     l2169:
  5253  1BE4  0876               	movf	__Umul8_16@word_mpld,w
  5254  1BE5  07F4               	addwf	__Umul8_16@product,f
  5255  1BE6  1803               	skipnc
  5256  1BE7  0AF5               	incf	__Umul8_16@product+1,f
  5257  1BE8  0877               	movf	__Umul8_16@word_mpld+1,w
  5258  1BE9  07F5               	addwf	__Umul8_16@product+1,f
  5259  1BEA                     l772:
  5260  1BEA  3001               	movlw	1
  5261  1BEB                     u2885:
  5262  1BEB  1003               	clrc
  5263  1BEC  0DF6               	rlf	__Umul8_16@word_mpld,f
  5264  1BED  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5265  1BEE  3EFF               	addlw	-1
  5266  1BEF  1D03               	skipz
  5267  1BF0  2BEB               	goto	u2885
  5268  1BF1  1003               	clrc
  5269  1BF2  0CF8               	rrf	__Umul8_16@multiplier,f
  5270  1BF3                     l2171:
  5271  1BF3  0878               	movf	__Umul8_16@multiplier,w
  5272  1BF4  1D03               	btfss	3,2
  5273  1BF5  2BF7               	goto	u2891
  5274  1BF6  2BF8               	goto	u2890
  5275  1BF7                     u2891:
  5276  1BF7  2BE0               	goto	l2167
  5277  1BF8                     u2890:
  5278  1BF8                     l2173:
  5279  1BF8  0875               	movf	__Umul8_16@product+1,w
  5280  1BF9  00F1               	movwf	?__Umul8_16+1
  5281  1BFA  0874               	movf	__Umul8_16@product,w
  5282  1BFB  00F0               	movwf	?__Umul8_16
  5283  1BFC                     l774:
  5284  1BFC  0008               	return
  5285  1BFD                     __end_of__Umul8_16:
  5286                           
  5287                           	psect	text11
  5288  1F43                     __ptext11:	
  5289 ;; *************** function __tdiv_to_l_ *****************
  5290 ;; Defined at:
  5291 ;;		line 60 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  f1              4    0[COMMON] float 
  5294 ;;  f2              4    4[COMMON] float 
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;  quot            4    0[BANK0 ] unsigned long 
  5297 ;;  exp1            1    5[BANK0 ] unsigned char 
  5298 ;;  cntr            1    4[BANK0 ] unsigned char 
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  4    0[COMMON] unsigned long 
  5301 ;; Registers used:
  5302 ;;		wreg, status,2, status,0
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5308 ;;      Params:         8       0       0       0       0
  5309 ;;      Locals:         0       6       0       0       0
  5310 ;;      Temps:          4       0       0       0       0
  5311 ;;      Totals:        12       6       0       0       0
  5312 ;;Total ram usage:       18 bytes
  5313 ;; Hardware stack levels used:    1
  5314 ;; This function calls:
  5315 ;;		Nothing
  5316 ;; This function is called by:
  5317 ;;		_sprintf
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           
  5322                           ;psect for function __tdiv_to_l_
  5323  1F43                     __tdiv_to_l_:
  5324  1F43                     l2715:	
  5325                           ;incstack = 0
  5326                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5327                           
  5328  1F43  0870               	movf	__tdiv_to_l_@f1,w
  5329  1F44  00F8               	movwf	??__tdiv_to_l_
  5330  1F45  0871               	movf	__tdiv_to_l_@f1+1,w
  5331  1F46  00F9               	movwf	??__tdiv_to_l_+1
  5332  1F47  0872               	movf	__tdiv_to_l_@f1+2,w
  5333  1F48  00FA               	movwf	??__tdiv_to_l_+2
  5334  1F49  1003               	clrc
  5335  1F4A  0D79               	rlf	??__tdiv_to_l_+1,w
  5336  1F4B  0D7A               	rlf	??__tdiv_to_l_+2,w
  5337  1F4C  00FB               	movwf	??__tdiv_to_l_+3
  5338  1F4D  087B               	movf	??__tdiv_to_l_+3,w
  5339  1F4E  1283               	bcf	3,5	;RP0=0, select bank0
  5340  1F4F  1303               	bcf	3,6	;RP1=0, select bank0
  5341  1F50  00A5               	movwf	__tdiv_to_l_@exp1
  5342  1F51  0825               	movf	__tdiv_to_l_@exp1,w
  5343  1F52  1D03               	btfss	3,2
  5344  1F53  2F55               	goto	u4331
  5345  1F54  2F56               	goto	u4330
  5346  1F55                     u4331:
  5347  1F55  2F5F               	goto	l2721
  5348  1F56                     u4330:
  5349  1F56                     l2717:
  5350  1F56  3000               	movlw	0
  5351  1F57  00F3               	movwf	?__tdiv_to_l_+3
  5352  1F58  3000               	movlw	0
  5353  1F59  00F2               	movwf	?__tdiv_to_l_+2
  5354  1F5A  3000               	movlw	0
  5355  1F5B  00F1               	movwf	?__tdiv_to_l_+1
  5356  1F5C  3000               	movlw	0
  5357  1F5D  00F0               	movwf	?__tdiv_to_l_
  5358  1F5E  2FFF               	goto	l547
  5359  1F5F                     l2721:
  5360  1F5F  0874               	movf	__tdiv_to_l_@f2,w
  5361  1F60  00F8               	movwf	??__tdiv_to_l_
  5362  1F61  0875               	movf	__tdiv_to_l_@f2+1,w
  5363  1F62  00F9               	movwf	??__tdiv_to_l_+1
  5364  1F63  0876               	movf	__tdiv_to_l_@f2+2,w
  5365  1F64  00FA               	movwf	??__tdiv_to_l_+2
  5366  1F65  1003               	clrc
  5367  1F66  0D79               	rlf	??__tdiv_to_l_+1,w
  5368  1F67  0D7A               	rlf	??__tdiv_to_l_+2,w
  5369  1F68  00FB               	movwf	??__tdiv_to_l_+3
  5370  1F69  087B               	movf	??__tdiv_to_l_+3,w
  5371  1F6A  00A4               	movwf	__tdiv_to_l_@cntr
  5372  1F6B  0824               	movf	__tdiv_to_l_@cntr,w
  5373  1F6C  1D03               	btfss	3,2
  5374  1F6D  2F6F               	goto	u4341
  5375  1F6E  2F70               	goto	u4340
  5376  1F6F                     u4341:
  5377  1F6F  2F71               	goto	l548
  5378  1F70                     u4340:
  5379  1F70  2F56               	goto	l2717
  5380  1F71                     l548:
  5381  1F71  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5382  1F72                     l2727:
  5383  1F72  30FF               	movlw	255
  5384  1F73  05F0               	andwf	__tdiv_to_l_@f1,f
  5385  1F74  30FF               	movlw	255
  5386  1F75  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5387  1F76  3000               	movlw	0
  5388  1F77  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5389  1F78                     l2729:
  5390  1F78  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5391  1F79  30FF               	movlw	255
  5392  1F7A  05F4               	andwf	__tdiv_to_l_@f2,f
  5393  1F7B  30FF               	movlw	255
  5394  1F7C  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5395  1F7D  3000               	movlw	0
  5396  1F7E  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5397  1F7F  3000               	movlw	0
  5398  1F80  00A3               	movwf	__tdiv_to_l_@quot+3
  5399  1F81  3000               	movlw	0
  5400  1F82  00A2               	movwf	__tdiv_to_l_@quot+2
  5401  1F83  3000               	movlw	0
  5402  1F84  00A1               	movwf	__tdiv_to_l_@quot+1
  5403  1F85  3000               	movlw	0
  5404  1F86  00A0               	movwf	__tdiv_to_l_@quot
  5405  1F87                     l2731:
  5406  1F87  307F               	movlw	127
  5407  1F88  02A5               	subwf	__tdiv_to_l_@exp1,f
  5408  1F89                     l2733:
  5409  1F89  3098               	movlw	152
  5410  1F8A  0724               	addwf	__tdiv_to_l_@cntr,w
  5411  1F8B  00F8               	movwf	??__tdiv_to_l_
  5412  1F8C  0878               	movf	??__tdiv_to_l_,w
  5413  1F8D  02A5               	subwf	__tdiv_to_l_@exp1,f
  5414  1F8E  3018               	movlw	24
  5415  1F8F  00F8               	movwf	??__tdiv_to_l_
  5416  1F90  0878               	movf	??__tdiv_to_l_,w
  5417  1F91  00A4               	movwf	__tdiv_to_l_@cntr
  5418  1F92                     l2735:
  5419  1F92  3001               	movlw	1
  5420  1F93  00F8               	movwf	??__tdiv_to_l_
  5421  1F94                     u4355:
  5422  1F94  1003               	clrc
  5423  1F95  0DA0               	rlf	__tdiv_to_l_@quot,f
  5424  1F96  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5425  1F97  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5426  1F98  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5427  1F99  0BF8               	decfsz	??__tdiv_to_l_,f
  5428  1F9A  2F94               	goto	u4355
  5429  1F9B                     l2737:
  5430  1F9B  0876               	movf	__tdiv_to_l_@f2+2,w
  5431  1F9C  0272               	subwf	__tdiv_to_l_@f1+2,w
  5432  1F9D  1D03               	skipz
  5433  1F9E  2FA5               	goto	u4365
  5434  1F9F  0875               	movf	__tdiv_to_l_@f2+1,w
  5435  1FA0  0271               	subwf	__tdiv_to_l_@f1+1,w
  5436  1FA1  1D03               	skipz
  5437  1FA2  2FA5               	goto	u4365
  5438  1FA3  0874               	movf	__tdiv_to_l_@f2,w
  5439  1FA4  0270               	subwf	__tdiv_to_l_@f1,w
  5440  1FA5                     u4365:
  5441  1FA5  1C03               	skipc
  5442  1FA6  2FA8               	goto	u4361
  5443  1FA7  2FA9               	goto	u4360
  5444  1FA8                     u4361:
  5445  1FA8  2FB4               	goto	l2743
  5446  1FA9                     u4360:
  5447  1FA9                     l2739:
  5448  1FA9  0874               	movf	__tdiv_to_l_@f2,w
  5449  1FAA  02F0               	subwf	__tdiv_to_l_@f1,f
  5450  1FAB  0875               	movf	__tdiv_to_l_@f2+1,w
  5451  1FAC  1C03               	skipc
  5452  1FAD  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5453  1FAE  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5454  1FAF  0876               	movf	__tdiv_to_l_@f2+2,w
  5455  1FB0  1C03               	skipc
  5456  1FB1  0A76               	incf	__tdiv_to_l_@f2+2,w
  5457  1FB2  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5458  1FB3                     l2741:
  5459  1FB3  1420               	bsf	__tdiv_to_l_@quot,0
  5460  1FB4                     l2743:
  5461  1FB4  3001               	movlw	1
  5462  1FB5                     u4375:
  5463  1FB5  1003               	clrc
  5464  1FB6  0DF0               	rlf	__tdiv_to_l_@f1,f
  5465  1FB7  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5466  1FB8  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5467  1FB9  3EFF               	addlw	-1
  5468  1FBA  1D03               	skipz
  5469  1FBB  2FB5               	goto	u4375
  5470  1FBC                     l2745:
  5471  1FBC  3001               	movlw	1
  5472  1FBD  02A4               	subwf	__tdiv_to_l_@cntr,f
  5473  1FBE  1D03               	btfss	3,2
  5474  1FBF  2FC1               	goto	u4381
  5475  1FC0  2FC2               	goto	u4380
  5476  1FC1                     u4381:
  5477  1FC1  2F92               	goto	l2735
  5478  1FC2                     u4380:
  5479  1FC2                     l551:
  5480  1FC2  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5481  1FC3  2FC5               	goto	u4391
  5482  1FC4  2FC6               	goto	u4390
  5483  1FC5                     u4391:
  5484  1FC5  2FE0               	goto	l2755
  5485  1FC6                     u4390:
  5486  1FC6                     l2747:
  5487  1FC6  0825               	movf	__tdiv_to_l_@exp1,w
  5488  1FC7  3A80               	xorlw	128
  5489  1FC8  3E97               	addlw	151
  5490  1FC9  1803               	skipnc
  5491  1FCA  2FCC               	goto	u4401
  5492  1FCB  2FCD               	goto	u4400
  5493  1FCC                     u4401:
  5494  1FCC  2FCE               	goto	l2753
  5495  1FCD                     u4400:
  5496  1FCD  2F56               	goto	l2717
  5497  1FCE                     l2753:
  5498  1FCE  3001               	movlw	1
  5499  1FCF                     u4415:
  5500  1FCF  1003               	clrc
  5501  1FD0  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5502  1FD1  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5503  1FD2  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5504  1FD3  0CA0               	rrf	__tdiv_to_l_@quot,f
  5505  1FD4  3EFF               	addlw	-1
  5506  1FD5  1D03               	skipz
  5507  1FD6  2FCF               	goto	u4415
  5508  1FD7  3001               	movlw	1
  5509  1FD8  00F8               	movwf	??__tdiv_to_l_
  5510  1FD9  0878               	movf	??__tdiv_to_l_,w
  5511  1FDA  07A5               	addwf	__tdiv_to_l_@exp1,f
  5512  1FDB  1D03               	btfss	3,2
  5513  1FDC  2FDE               	goto	u4421
  5514  1FDD  2FDF               	goto	u4420
  5515  1FDE                     u4421:
  5516  1FDE  2FCE               	goto	l2753
  5517  1FDF                     u4420:
  5518  1FDF  2FF7               	goto	l2763
  5519  1FE0                     l2755:
  5520  1FE0  3018               	movlw	24
  5521  1FE1  0225               	subwf	__tdiv_to_l_@exp1,w
  5522  1FE2  1C03               	skipc
  5523  1FE3  2FE5               	goto	u4431
  5524  1FE4  2FE6               	goto	u4430
  5525  1FE5                     u4431:
  5526  1FE5  2FF2               	goto	l558
  5527  1FE6                     u4430:
  5528  1FE6  2F56               	goto	l2717
  5529  1FE7                     l2761:
  5530  1FE7  3001               	movlw	1
  5531  1FE8  00F8               	movwf	??__tdiv_to_l_
  5532  1FE9                     u4445:
  5533  1FE9  1003               	clrc
  5534  1FEA  0DA0               	rlf	__tdiv_to_l_@quot,f
  5535  1FEB  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5536  1FEC  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5537  1FED  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5538  1FEE  0BF8               	decfsz	??__tdiv_to_l_,f
  5539  1FEF  2FE9               	goto	u4445
  5540  1FF0  3001               	movlw	1
  5541  1FF1  02A5               	subwf	__tdiv_to_l_@exp1,f
  5542  1FF2                     l558:
  5543  1FF2  0825               	movf	__tdiv_to_l_@exp1,w
  5544  1FF3  1D03               	btfss	3,2
  5545  1FF4  2FF6               	goto	u4451
  5546  1FF5  2FF7               	goto	u4450
  5547  1FF6                     u4451:
  5548  1FF6  2FE7               	goto	l2761
  5549  1FF7                     u4450:
  5550  1FF7                     l2763:
  5551  1FF7  0823               	movf	__tdiv_to_l_@quot+3,w
  5552  1FF8  00F3               	movwf	?__tdiv_to_l_+3
  5553  1FF9  0822               	movf	__tdiv_to_l_@quot+2,w
  5554  1FFA  00F2               	movwf	?__tdiv_to_l_+2
  5555  1FFB  0821               	movf	__tdiv_to_l_@quot+1,w
  5556  1FFC  00F1               	movwf	?__tdiv_to_l_+1
  5557  1FFD  0820               	movf	__tdiv_to_l_@quot,w
  5558  1FFE  00F0               	movwf	?__tdiv_to_l_
  5559  1FFF                     l547:
  5560  1FFF  0008               	return
  5561  2000                     __end_of__tdiv_to_l_:
  5562                           
  5563                           	psect	text12
  5564  0882                     __ptext12:	
  5565 ;; *************** function __div_to_l_ *****************
  5566 ;; Defined at:
  5567 ;;		line 60 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;  f1              4    0[COMMON] unsigned long 
  5570 ;;  f2              4    4[COMMON] unsigned long 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  quot            4    0[BANK0 ] unsigned long 
  5573 ;;  exp1            1    5[BANK0 ] unsigned char 
  5574 ;;  cntr            1    4[BANK0 ] unsigned char 
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  4    0[COMMON] unsigned long 
  5577 ;; Registers used:
  5578 ;;		wreg, status,2, status,0
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5584 ;;      Params:         8       0       0       0       0
  5585 ;;      Locals:         0       6       0       0       0
  5586 ;;      Temps:          1       0       0       0       0
  5587 ;;      Totals:         9       6       0       0       0
  5588 ;;Total ram usage:       15 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; This function calls:
  5591 ;;		Nothing
  5592 ;; This function is called by:
  5593 ;;		_sprintf
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           
  5598                           ;psect for function __div_to_l_
  5599  0882                     __div_to_l_:
  5600  0882                     l2767:	
  5601                           ;incstack = 0
  5602                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5603                           
  5604  0882  1003               	clrc
  5605  0883  0D72               	rlf	__div_to_l_@f1+2,w
  5606  0884  0D73               	rlf	__div_to_l_@f1+3,w
  5607  0885  00F8               	movwf	??__div_to_l_
  5608  0886  0878               	movf	??__div_to_l_,w
  5609  0887  1283               	bcf	3,5	;RP0=0, select bank0
  5610  0888  1303               	bcf	3,6	;RP1=0, select bank0
  5611  0889  00A5               	movwf	__div_to_l_@exp1
  5612  088A  0825               	movf	__div_to_l_@exp1,w
  5613  088B  1D03               	btfss	3,2
  5614  088C  288E               	goto	u4461
  5615  088D  288F               	goto	u4460
  5616  088E                     u4461:
  5617  088E  2898               	goto	l2773
  5618  088F                     u4460:
  5619  088F                     l2769:
  5620  088F  3000               	movlw	0
  5621  0890  00F3               	movwf	?__div_to_l_+3
  5622  0891  3000               	movlw	0
  5623  0892  00F2               	movwf	?__div_to_l_+2
  5624  0893  3000               	movlw	0
  5625  0894  00F1               	movwf	?__div_to_l_+1
  5626  0895  3000               	movlw	0
  5627  0896  00F0               	movwf	?__div_to_l_
  5628  0897  293F               	goto	l500
  5629  0898                     l2773:
  5630  0898  1003               	clrc
  5631  0899  0D76               	rlf	__div_to_l_@f2+2,w
  5632  089A  0D77               	rlf	__div_to_l_@f2+3,w
  5633  089B  00F8               	movwf	??__div_to_l_
  5634  089C  0878               	movf	??__div_to_l_,w
  5635  089D  00A4               	movwf	__div_to_l_@cntr
  5636  089E  0824               	movf	__div_to_l_@cntr,w
  5637  089F  1D03               	btfss	3,2
  5638  08A0  28A2               	goto	u4471
  5639  08A1  28A3               	goto	u4470
  5640  08A2                     u4471:
  5641  08A2  28A4               	goto	l501
  5642  08A3                     u4470:
  5643  08A3  288F               	goto	l2769
  5644  08A4                     l501:
  5645  08A4  17F2               	bsf	__div_to_l_@f1+2,7
  5646  08A5                     l2779:
  5647  08A5  30FF               	movlw	255
  5648  08A6  05F0               	andwf	__div_to_l_@f1,f
  5649  08A7  30FF               	movlw	255
  5650  08A8  05F1               	andwf	__div_to_l_@f1+1,f
  5651  08A9  30FF               	movlw	255
  5652  08AA  05F2               	andwf	__div_to_l_@f1+2,f
  5653  08AB  3000               	movlw	0
  5654  08AC  05F3               	andwf	__div_to_l_@f1+3,f
  5655  08AD                     l2781:
  5656  08AD  17F6               	bsf	__div_to_l_@f2+2,7
  5657  08AE  30FF               	movlw	255
  5658  08AF  05F4               	andwf	__div_to_l_@f2,f
  5659  08B0  30FF               	movlw	255
  5660  08B1  05F5               	andwf	__div_to_l_@f2+1,f
  5661  08B2  30FF               	movlw	255
  5662  08B3  05F6               	andwf	__div_to_l_@f2+2,f
  5663  08B4  3000               	movlw	0
  5664  08B5  05F7               	andwf	__div_to_l_@f2+3,f
  5665  08B6  3000               	movlw	0
  5666  08B7  00A3               	movwf	__div_to_l_@quot+3
  5667  08B8  3000               	movlw	0
  5668  08B9  00A2               	movwf	__div_to_l_@quot+2
  5669  08BA  3000               	movlw	0
  5670  08BB  00A1               	movwf	__div_to_l_@quot+1
  5671  08BC  3000               	movlw	0
  5672  08BD  00A0               	movwf	__div_to_l_@quot
  5673  08BE                     l2783:
  5674  08BE  307F               	movlw	127
  5675  08BF  02A5               	subwf	__div_to_l_@exp1,f
  5676  08C0                     l2785:
  5677  08C0  30A0               	movlw	160
  5678  08C1  0724               	addwf	__div_to_l_@cntr,w
  5679  08C2  00F8               	movwf	??__div_to_l_
  5680  08C3  0878               	movf	??__div_to_l_,w
  5681  08C4  02A5               	subwf	__div_to_l_@exp1,f
  5682  08C5  3020               	movlw	32
  5683  08C6  00F8               	movwf	??__div_to_l_
  5684  08C7  0878               	movf	??__div_to_l_,w
  5685  08C8  00A4               	movwf	__div_to_l_@cntr
  5686  08C9                     l2787:
  5687  08C9  3001               	movlw	1
  5688  08CA  00F8               	movwf	??__div_to_l_
  5689  08CB                     u4485:
  5690  08CB  1003               	clrc
  5691  08CC  0DA0               	rlf	__div_to_l_@quot,f
  5692  08CD  0DA1               	rlf	__div_to_l_@quot+1,f
  5693  08CE  0DA2               	rlf	__div_to_l_@quot+2,f
  5694  08CF  0DA3               	rlf	__div_to_l_@quot+3,f
  5695  08D0  0BF8               	decfsz	??__div_to_l_,f
  5696  08D1  28CB               	goto	u4485
  5697  08D2                     l2789:
  5698  08D2  0877               	movf	__div_to_l_@f2+3,w
  5699  08D3  0273               	subwf	__div_to_l_@f1+3,w
  5700  08D4  1D03               	skipz
  5701  08D5  28E0               	goto	u4495
  5702  08D6  0876               	movf	__div_to_l_@f2+2,w
  5703  08D7  0272               	subwf	__div_to_l_@f1+2,w
  5704  08D8  1D03               	skipz
  5705  08D9  28E0               	goto	u4495
  5706  08DA  0875               	movf	__div_to_l_@f2+1,w
  5707  08DB  0271               	subwf	__div_to_l_@f1+1,w
  5708  08DC  1D03               	skipz
  5709  08DD  28E0               	goto	u4495
  5710  08DE  0874               	movf	__div_to_l_@f2,w
  5711  08DF  0270               	subwf	__div_to_l_@f1,w
  5712  08E0                     u4495:
  5713  08E0  1C03               	skipc
  5714  08E1  28E3               	goto	u4491
  5715  08E2  28E4               	goto	u4490
  5716  08E3                     u4491:
  5717  08E3  28F3               	goto	l2795
  5718  08E4                     u4490:
  5719  08E4                     l2791:
  5720  08E4  0874               	movf	__div_to_l_@f2,w
  5721  08E5  02F0               	subwf	__div_to_l_@f1,f
  5722  08E6  0875               	movf	__div_to_l_@f2+1,w
  5723  08E7  1C03               	skipc
  5724  08E8  0F75               	incfsz	__div_to_l_@f2+1,w
  5725  08E9  02F1               	subwf	__div_to_l_@f1+1,f
  5726  08EA  0876               	movf	__div_to_l_@f2+2,w
  5727  08EB  1C03               	skipc
  5728  08EC  0F76               	incfsz	__div_to_l_@f2+2,w
  5729  08ED  02F2               	subwf	__div_to_l_@f1+2,f
  5730  08EE  0877               	movf	__div_to_l_@f2+3,w
  5731  08EF  1C03               	skipc
  5732  08F0  0F77               	incfsz	__div_to_l_@f2+3,w
  5733  08F1  02F3               	subwf	__div_to_l_@f1+3,f
  5734  08F2                     l2793:
  5735  08F2  1420               	bsf	__div_to_l_@quot,0
  5736  08F3                     l2795:
  5737  08F3  3001               	movlw	1
  5738  08F4  00F8               	movwf	??__div_to_l_
  5739  08F5                     u4505:
  5740  08F5  1003               	clrc
  5741  08F6  0DF0               	rlf	__div_to_l_@f1,f
  5742  08F7  0DF1               	rlf	__div_to_l_@f1+1,f
  5743  08F8  0DF2               	rlf	__div_to_l_@f1+2,f
  5744  08F9  0DF3               	rlf	__div_to_l_@f1+3,f
  5745  08FA  0BF8               	decfsz	??__div_to_l_,f
  5746  08FB  28F5               	goto	u4505
  5747  08FC                     l2797:
  5748  08FC  3001               	movlw	1
  5749  08FD  02A4               	subwf	__div_to_l_@cntr,f
  5750  08FE  1D03               	btfss	3,2
  5751  08FF  2901               	goto	u4511
  5752  0900  2902               	goto	u4510
  5753  0901                     u4511:
  5754  0901  28C9               	goto	l2787
  5755  0902                     u4510:
  5756  0902                     l504:
  5757  0902  1FA5               	btfss	__div_to_l_@exp1,7
  5758  0903  2905               	goto	u4521
  5759  0904  2906               	goto	u4520
  5760  0905                     u4521:
  5761  0905  2920               	goto	l2807
  5762  0906                     u4520:
  5763  0906                     l2799:
  5764  0906  0825               	movf	__div_to_l_@exp1,w
  5765  0907  3A80               	xorlw	128
  5766  0908  3E9F               	addlw	159
  5767  0909  1803               	skipnc
  5768  090A  290C               	goto	u4531
  5769  090B  290D               	goto	u4530
  5770  090C                     u4531:
  5771  090C  290E               	goto	l2805
  5772  090D                     u4530:
  5773  090D  288F               	goto	l2769
  5774  090E                     l2805:
  5775  090E  3001               	movlw	1
  5776  090F                     u4545:
  5777  090F  1003               	clrc
  5778  0910  0CA3               	rrf	__div_to_l_@quot+3,f
  5779  0911  0CA2               	rrf	__div_to_l_@quot+2,f
  5780  0912  0CA1               	rrf	__div_to_l_@quot+1,f
  5781  0913  0CA0               	rrf	__div_to_l_@quot,f
  5782  0914  3EFF               	addlw	-1
  5783  0915  1D03               	skipz
  5784  0916  290F               	goto	u4545
  5785  0917  3001               	movlw	1
  5786  0918  00F8               	movwf	??__div_to_l_
  5787  0919  0878               	movf	??__div_to_l_,w
  5788  091A  07A5               	addwf	__div_to_l_@exp1,f
  5789  091B  1D03               	btfss	3,2
  5790  091C  291E               	goto	u4551
  5791  091D  291F               	goto	u4550
  5792  091E                     u4551:
  5793  091E  290E               	goto	l2805
  5794  091F                     u4550:
  5795  091F  2937               	goto	l2815
  5796  0920                     l2807:
  5797  0920  3020               	movlw	32
  5798  0921  0225               	subwf	__div_to_l_@exp1,w
  5799  0922  1C03               	skipc
  5800  0923  2925               	goto	u4561
  5801  0924  2926               	goto	u4560
  5802  0925                     u4561:
  5803  0925  2932               	goto	l511
  5804  0926                     u4560:
  5805  0926  288F               	goto	l2769
  5806  0927                     l2813:
  5807  0927  3001               	movlw	1
  5808  0928  00F8               	movwf	??__div_to_l_
  5809  0929                     u4575:
  5810  0929  1003               	clrc
  5811  092A  0DA0               	rlf	__div_to_l_@quot,f
  5812  092B  0DA1               	rlf	__div_to_l_@quot+1,f
  5813  092C  0DA2               	rlf	__div_to_l_@quot+2,f
  5814  092D  0DA3               	rlf	__div_to_l_@quot+3,f
  5815  092E  0BF8               	decfsz	??__div_to_l_,f
  5816  092F  2929               	goto	u4575
  5817  0930  3001               	movlw	1
  5818  0931  02A5               	subwf	__div_to_l_@exp1,f
  5819  0932                     l511:
  5820  0932  0825               	movf	__div_to_l_@exp1,w
  5821  0933  1D03               	btfss	3,2
  5822  0934  2936               	goto	u4581
  5823  0935  2937               	goto	u4580
  5824  0936                     u4581:
  5825  0936  2927               	goto	l2813
  5826  0937                     u4580:
  5827  0937                     l2815:
  5828  0937  0823               	movf	__div_to_l_@quot+3,w
  5829  0938  00F3               	movwf	?__div_to_l_+3
  5830  0939  0822               	movf	__div_to_l_@quot+2,w
  5831  093A  00F2               	movwf	?__div_to_l_+2
  5832  093B  0821               	movf	__div_to_l_@quot+1,w
  5833  093C  00F1               	movwf	?__div_to_l_+1
  5834  093D  0820               	movf	__div_to_l_@quot,w
  5835  093E  00F0               	movwf	?__div_to_l_
  5836  093F                     l500:
  5837  093F  0008               	return
  5838  0940                     __end_of__div_to_l_:
  5839                           
  5840                           	psect	text13
  5841  1E89                     __ptext13:	
  5842 ;; *************** function ___xxtofl *****************
  5843 ;; Defined at:
  5844 ;;		line 10 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;  sign            1    wreg     unsigned char 
  5847 ;;  val             4    0[COMMON] long 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;  sign            1    8[COMMON] unsigned char 
  5850 ;;  arg             4   10[COMMON] unsigned long 
  5851 ;;  exp             1    9[COMMON] unsigned char 
  5852 ;; Return value:  Size  Location     Type
  5853 ;;                  4    0[COMMON] unsigned char 
  5854 ;; Registers used:
  5855 ;;		wreg, status,2, status,0
  5856 ;; Tracked objects:
  5857 ;;		On entry : 0/0
  5858 ;;		On exit  : 0/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5861 ;;      Params:         4       0       0       0       0
  5862 ;;      Locals:         6       0       0       0       0
  5863 ;;      Temps:          4       0       0       0       0
  5864 ;;      Totals:        14       0       0       0       0
  5865 ;;Total ram usage:       14 bytes
  5866 ;; Hardware stack levels used:    1
  5867 ;; This function calls:
  5868 ;;		Nothing
  5869 ;; This function is called by:
  5870 ;;		_sprintf
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           
  5875                           ;psect for function ___xxtofl
  5876  1E89                     ___xxtofl:
  5877                           
  5878                           ;incstack = 0
  5879                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5880                           ;___xxtofl@sign stored from wreg
  5881  1E89  00F8               	movwf	___xxtofl@sign
  5882  1E8A                     l2959:
  5883  1E8A  0878               	movf	___xxtofl@sign,w
  5884  1E8B  1903               	btfsc	3,2
  5885  1E8C  2E8E               	goto	u4971
  5886  1E8D  2E8F               	goto	u4970
  5887  1E8E                     u4971:
  5888  1E8E  2EA3               	goto	l2965
  5889  1E8F                     u4970:
  5890  1E8F                     l2961:
  5891  1E8F  1FF3               	btfss	___xxtofl@val+3,7
  5892  1E90  2E92               	goto	u4981
  5893  1E91  2E93               	goto	u4980
  5894  1E92                     u4981:
  5895  1E92  2EA3               	goto	l2965
  5896  1E93                     u4980:
  5897  1E93                     l2963:
  5898  1E93  0970               	comf	___xxtofl@val,w
  5899  1E94  00FA               	movwf	___xxtofl@arg
  5900  1E95  0971               	comf	___xxtofl@val+1,w
  5901  1E96  00FB               	movwf	___xxtofl@arg+1
  5902  1E97  0972               	comf	___xxtofl@val+2,w
  5903  1E98  00FC               	movwf	___xxtofl@arg+2
  5904  1E99  0973               	comf	___xxtofl@val+3,w
  5905  1E9A  00FD               	movwf	___xxtofl@arg+3
  5906  1E9B  0AFA               	incf	___xxtofl@arg,f
  5907  1E9C  1903               	skipnz
  5908  1E9D  0AFB               	incf	___xxtofl@arg+1,f
  5909  1E9E  1903               	skipnz
  5910  1E9F  0AFC               	incf	___xxtofl@arg+2,f
  5911  1EA0  1903               	skipnz
  5912  1EA1  0AFD               	incf	___xxtofl@arg+3,f
  5913  1EA2  2EAB               	goto	l797
  5914  1EA3                     l2965:
  5915  1EA3  0873               	movf	___xxtofl@val+3,w
  5916  1EA4  00FD               	movwf	___xxtofl@arg+3
  5917  1EA5  0872               	movf	___xxtofl@val+2,w
  5918  1EA6  00FC               	movwf	___xxtofl@arg+2
  5919  1EA7  0871               	movf	___xxtofl@val+1,w
  5920  1EA8  00FB               	movwf	___xxtofl@arg+1
  5921  1EA9  0870               	movf	___xxtofl@val,w
  5922  1EAA  00FA               	movwf	___xxtofl@arg
  5923  1EAB                     l797:
  5924  1EAB  0873               	movf	___xxtofl@val+3,w
  5925  1EAC  0472               	iorwf	___xxtofl@val+2,w
  5926  1EAD  0471               	iorwf	___xxtofl@val+1,w
  5927  1EAE  0470               	iorwf	___xxtofl@val,w
  5928  1EAF  1D03               	skipz
  5929  1EB0  2EB2               	goto	u4991
  5930  1EB1  2EB3               	goto	u4990
  5931  1EB2                     u4991:
  5932  1EB2  2EBC               	goto	l2971
  5933  1EB3                     u4990:
  5934  1EB3                     l2967:
  5935  1EB3  3000               	movlw	0
  5936  1EB4  00F3               	movwf	?___xxtofl+3
  5937  1EB5  3000               	movlw	0
  5938  1EB6  00F2               	movwf	?___xxtofl+2
  5939  1EB7  3000               	movlw	0
  5940  1EB8  00F1               	movwf	?___xxtofl+1
  5941  1EB9  3000               	movlw	0
  5942  1EBA  00F0               	movwf	?___xxtofl
  5943  1EBB  2F42               	goto	l799
  5944  1EBC                     l2971:
  5945  1EBC  3096               	movlw	150
  5946  1EBD  00F4               	movwf	??___xxtofl
  5947  1EBE  0874               	movf	??___xxtofl,w
  5948  1EBF  00F9               	movwf	___xxtofl@exp
  5949  1EC0  2ECE               	goto	l2975
  5950  1EC1                     l2973:
  5951  1EC1  3001               	movlw	1
  5952  1EC2  00F4               	movwf	??___xxtofl
  5953  1EC3  0874               	movf	??___xxtofl,w
  5954  1EC4  07F9               	addwf	___xxtofl@exp,f
  5955  1EC5  3001               	movlw	1
  5956  1EC6                     u5005:
  5957  1EC6  1003               	clrc
  5958  1EC7  0CFD               	rrf	___xxtofl@arg+3,f
  5959  1EC8  0CFC               	rrf	___xxtofl@arg+2,f
  5960  1EC9  0CFB               	rrf	___xxtofl@arg+1,f
  5961  1ECA  0CFA               	rrf	___xxtofl@arg,f
  5962  1ECB  3EFF               	addlw	-1
  5963  1ECC  1D03               	skipz
  5964  1ECD  2EC6               	goto	u5005
  5965  1ECE                     l2975:
  5966  1ECE  30FE               	movlw	254
  5967  1ECF  057D               	andwf	___xxtofl@arg+3,w
  5968  1ED0  1D03               	btfss	3,2
  5969  1ED1  2ED3               	goto	u5011
  5970  1ED2  2ED4               	goto	u5010
  5971  1ED3                     u5011:
  5972  1ED3  2EC1               	goto	l2973
  5973  1ED4                     u5010:
  5974  1ED4  2EF0               	goto	l803
  5975  1ED5                     l2977:
  5976  1ED5  3001               	movlw	1
  5977  1ED6  00F4               	movwf	??___xxtofl
  5978  1ED7  0874               	movf	??___xxtofl,w
  5979  1ED8  07F9               	addwf	___xxtofl@exp,f
  5980  1ED9                     l2979:
  5981  1ED9  3001               	movlw	1
  5982  1EDA  07FA               	addwf	___xxtofl@arg,f
  5983  1EDB  3000               	movlw	0
  5984  1EDC  1803               	skipnc
  5985  1EDD  3001               	movlw	1
  5986  1EDE  07FB               	addwf	___xxtofl@arg+1,f
  5987  1EDF  3000               	movlw	0
  5988  1EE0  1803               	skipnc
  5989  1EE1  3001               	movlw	1
  5990  1EE2  07FC               	addwf	___xxtofl@arg+2,f
  5991  1EE3  3000               	movlw	0
  5992  1EE4  1803               	skipnc
  5993  1EE5  3001               	movlw	1
  5994  1EE6  07FD               	addwf	___xxtofl@arg+3,f
  5995  1EE7                     l2981:
  5996  1EE7  3001               	movlw	1
  5997  1EE8                     u5025:
  5998  1EE8  1003               	clrc
  5999  1EE9  0CFD               	rrf	___xxtofl@arg+3,f
  6000  1EEA  0CFC               	rrf	___xxtofl@arg+2,f
  6001  1EEB  0CFB               	rrf	___xxtofl@arg+1,f
  6002  1EEC  0CFA               	rrf	___xxtofl@arg,f
  6003  1EED  3EFF               	addlw	-1
  6004  1EEE  1D03               	skipz
  6005  1EEF  2EE8               	goto	u5025
  6006  1EF0                     l803:
  6007  1EF0  30FF               	movlw	255
  6008  1EF1  057D               	andwf	___xxtofl@arg+3,w
  6009  1EF2  1D03               	btfss	3,2
  6010  1EF3  2EF5               	goto	u5031
  6011  1EF4  2EF6               	goto	u5030
  6012  1EF5                     u5031:
  6013  1EF5  2ED5               	goto	l2977
  6014  1EF6                     u5030:
  6015  1EF6  2F02               	goto	l2985
  6016  1EF7                     l2983:
  6017  1EF7  3001               	movlw	1
  6018  1EF8  02F9               	subwf	___xxtofl@exp,f
  6019  1EF9  3001               	movlw	1
  6020  1EFA  00F4               	movwf	??___xxtofl
  6021  1EFB                     u5045:
  6022  1EFB  1003               	clrc
  6023  1EFC  0DFA               	rlf	___xxtofl@arg,f
  6024  1EFD  0DFB               	rlf	___xxtofl@arg+1,f
  6025  1EFE  0DFC               	rlf	___xxtofl@arg+2,f
  6026  1EFF  0DFD               	rlf	___xxtofl@arg+3,f
  6027  1F00  0BF4               	decfsz	??___xxtofl,f
  6028  1F01  2EFB               	goto	u5045
  6029  1F02                     l2985:
  6030  1F02  1BFC               	btfsc	___xxtofl@arg+2,7
  6031  1F03  2F05               	goto	u5051
  6032  1F04  2F06               	goto	u5050
  6033  1F05                     u5051:
  6034  1F05  2F0C               	goto	l810
  6035  1F06                     u5050:
  6036  1F06                     l2987:
  6037  1F06  3002               	movlw	2
  6038  1F07  0279               	subwf	___xxtofl@exp,w
  6039  1F08  1803               	skipnc
  6040  1F09  2F0B               	goto	u5061
  6041  1F0A  2F0C               	goto	u5060
  6042  1F0B                     u5061:
  6043  1F0B  2EF7               	goto	l2983
  6044  1F0C                     u5060:
  6045  1F0C                     l810:
  6046  1F0C  1879               	btfsc	___xxtofl@exp,0
  6047  1F0D  2F0F               	goto	u5071
  6048  1F0E  2F10               	goto	u5070
  6049  1F0F                     u5071:
  6050  1F0F  2F18               	goto	l811
  6051  1F10                     u5070:
  6052  1F10                     l2989:
  6053  1F10  30FF               	movlw	255
  6054  1F11  05FA               	andwf	___xxtofl@arg,f
  6055  1F12  30FF               	movlw	255
  6056  1F13  05FB               	andwf	___xxtofl@arg+1,f
  6057  1F14  307F               	movlw	127
  6058  1F15  05FC               	andwf	___xxtofl@arg+2,f
  6059  1F16  30FF               	movlw	255
  6060  1F17  05FD               	andwf	___xxtofl@arg+3,f
  6061  1F18                     l811:
  6062  1F18  1003               	clrc
  6063  1F19  0CF9               	rrf	___xxtofl@exp,f
  6064  1F1A                     l2991:
  6065  1F1A  0879               	movf	___xxtofl@exp,w
  6066  1F1B  00F4               	movwf	??___xxtofl
  6067  1F1C  01F5               	clrf	??___xxtofl+1
  6068  1F1D  01F6               	clrf	??___xxtofl+2
  6069  1F1E  01F7               	clrf	??___xxtofl+3
  6070  1F1F  3018               	movlw	24
  6071  1F20                     u5085:
  6072  1F20  1003               	clrc
  6073  1F21  0DF4               	rlf	??___xxtofl,f
  6074  1F22  0DF5               	rlf	??___xxtofl+1,f
  6075  1F23  0DF6               	rlf	??___xxtofl+2,f
  6076  1F24  0DF7               	rlf	??___xxtofl+3,f
  6077  1F25                     u5080:
  6078  1F25  3EFF               	addlw	-1
  6079  1F26  1D03               	skipz
  6080  1F27  2F20               	goto	u5085
  6081  1F28  0874               	movf	??___xxtofl,w
  6082  1F29  04FA               	iorwf	___xxtofl@arg,f
  6083  1F2A  0875               	movf	??___xxtofl+1,w
  6084  1F2B  04FB               	iorwf	___xxtofl@arg+1,f
  6085  1F2C  0876               	movf	??___xxtofl+2,w
  6086  1F2D  04FC               	iorwf	___xxtofl@arg+2,f
  6087  1F2E  0877               	movf	??___xxtofl+3,w
  6088  1F2F  04FD               	iorwf	___xxtofl@arg+3,f
  6089  1F30                     l2993:
  6090  1F30  0878               	movf	___xxtofl@sign,w
  6091  1F31  1903               	btfsc	3,2
  6092  1F32  2F34               	goto	u5091
  6093  1F33  2F35               	goto	u5090
  6094  1F34                     u5091:
  6095  1F34  2F3A               	goto	l2999
  6096  1F35                     u5090:
  6097  1F35                     l2995:
  6098  1F35  1FF3               	btfss	___xxtofl@val+3,7
  6099  1F36  2F38               	goto	u5101
  6100  1F37  2F39               	goto	u5100
  6101  1F38                     u5101:
  6102  1F38  2F3A               	goto	l2999
  6103  1F39                     u5100:
  6104  1F39                     l2997:
  6105  1F39  17FD               	bsf	___xxtofl@arg+3,7
  6106  1F3A                     l2999:
  6107  1F3A  087D               	movf	___xxtofl@arg+3,w
  6108  1F3B  00F3               	movwf	?___xxtofl+3
  6109  1F3C  087C               	movf	___xxtofl@arg+2,w
  6110  1F3D  00F2               	movwf	?___xxtofl+2
  6111  1F3E  087B               	movf	___xxtofl@arg+1,w
  6112  1F3F  00F1               	movwf	?___xxtofl+1
  6113  1F40  087A               	movf	___xxtofl@arg,w
  6114  1F41  00F0               	movwf	?___xxtofl
  6115  1F42                     l799:
  6116  1F42  0008               	return
  6117  1F43                     __end_of___xxtofl:
  6118                           
  6119                           	psect	text14
  6120  1BB1                     __ptext14:	
  6121 ;; *************** function ___wmul *****************
  6122 ;; Defined at:
  6123 ;;		line 15 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;  multiplier      2    0[COMMON] unsigned int 
  6126 ;;  multiplicand    2    2[COMMON] unsigned int 
  6127 ;; Auto vars:     Size  Location     Type
  6128 ;;  product         2    4[COMMON] unsigned int 
  6129 ;; Return value:  Size  Location     Type
  6130 ;;                  2    0[COMMON] unsigned int 
  6131 ;; Registers used:
  6132 ;;		wreg, status,2, status,0
  6133 ;; Tracked objects:
  6134 ;;		On entry : 0/0
  6135 ;;		On exit  : 0/0
  6136 ;;		Unchanged: 0/0
  6137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6138 ;;      Params:         4       0       0       0       0
  6139 ;;      Locals:         2       0       0       0       0
  6140 ;;      Temps:          0       0       0       0       0
  6141 ;;      Totals:         6       0       0       0       0
  6142 ;;Total ram usage:        6 bytes
  6143 ;; Hardware stack levels used:    1
  6144 ;; This function calls:
  6145 ;;		Nothing
  6146 ;; This function is called by:
  6147 ;;		_sprintf
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           
  6152                           ;psect for function ___wmul
  6153  1BB1                     ___wmul:
  6154  1BB1                     l2819:	
  6155                           ;incstack = 0
  6156                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6157                           
  6158  1BB1  01F4               	clrf	___wmul@product
  6159  1BB2  01F5               	clrf	___wmul@product+1
  6160  1BB3                     l2821:
  6161  1BB3  1C70               	btfss	___wmul@multiplier,0
  6162  1BB4  2BB6               	goto	u4591
  6163  1BB5  2BB7               	goto	u4590
  6164  1BB6                     u4591:
  6165  1BB6  2BBD               	goto	l330
  6166  1BB7                     u4590:
  6167  1BB7                     l2823:
  6168  1BB7  0872               	movf	___wmul@multiplicand,w
  6169  1BB8  07F4               	addwf	___wmul@product,f
  6170  1BB9  1803               	skipnc
  6171  1BBA  0AF5               	incf	___wmul@product+1,f
  6172  1BBB  0873               	movf	___wmul@multiplicand+1,w
  6173  1BBC  07F5               	addwf	___wmul@product+1,f
  6174  1BBD                     l330:
  6175  1BBD  3001               	movlw	1
  6176  1BBE                     u4605:
  6177  1BBE  1003               	clrc
  6178  1BBF  0DF2               	rlf	___wmul@multiplicand,f
  6179  1BC0  0DF3               	rlf	___wmul@multiplicand+1,f
  6180  1BC1  3EFF               	addlw	-1
  6181  1BC2  1D03               	skipz
  6182  1BC3  2BBE               	goto	u4605
  6183  1BC4                     l2825:
  6184  1BC4  3001               	movlw	1
  6185  1BC5                     u4615:
  6186  1BC5  1003               	clrc
  6187  1BC6  0CF1               	rrf	___wmul@multiplier+1,f
  6188  1BC7  0CF0               	rrf	___wmul@multiplier,f
  6189  1BC8  3EFF               	addlw	-1
  6190  1BC9  1D03               	skipz
  6191  1BCA  2BC5               	goto	u4615
  6192  1BCB                     l2827:
  6193  1BCB  0870               	movf	___wmul@multiplier,w
  6194  1BCC  0471               	iorwf	___wmul@multiplier+1,w
  6195  1BCD  1D03               	btfss	3,2
  6196  1BCE  2BD0               	goto	u4621
  6197  1BCF  2BD1               	goto	u4620
  6198  1BD0                     u4621:
  6199  1BD0  2BB3               	goto	l2821
  6200  1BD1                     u4620:
  6201  1BD1                     l2829:
  6202  1BD1  0875               	movf	___wmul@product+1,w
  6203  1BD2  00F1               	movwf	?___wmul+1
  6204  1BD3  0874               	movf	___wmul@product,w
  6205  1BD4  00F0               	movwf	?___wmul
  6206  1BD5                     l332:
  6207  1BD5  0008               	return
  6208  1BD6                     __end_of___wmul:
  6209                           
  6210                           	psect	text15
  6211  1D0B                     __ptext15:	
  6212 ;; *************** function ___llmod *****************
  6213 ;; Defined at:
  6214 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;  divisor         4    0[BANK0 ] unsigned long 
  6217 ;;  dividend        4    4[BANK0 ] unsigned long 
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;  counter         1    9[BANK0 ] unsigned char 
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  4    0[BANK0 ] unsigned long 
  6222 ;; Registers used:
  6223 ;;		wreg, status,2, status,0
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6229 ;;      Params:         0       8       0       0       0
  6230 ;;      Locals:         0       1       0       0       0
  6231 ;;      Temps:          0       1       0       0       0
  6232 ;;      Totals:         0      10       0       0       0
  6233 ;;Total ram usage:       10 bytes
  6234 ;; Hardware stack levels used:    1
  6235 ;; This function calls:
  6236 ;;		Nothing
  6237 ;; This function is called by:
  6238 ;;		_sprintf
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           
  6243                           ;psect for function ___llmod
  6244  1D0B                     ___llmod:
  6245  1D0B                     l2933:	
  6246                           ;incstack = 0
  6247                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6248                           
  6249  1D0B  1283               	bcf	3,5	;RP0=0, select bank0
  6250  1D0C  1303               	bcf	3,6	;RP1=0, select bank0
  6251  1D0D  0823               	movf	___llmod@divisor+3,w
  6252  1D0E  0422               	iorwf	___llmod@divisor+2,w
  6253  1D0F  0421               	iorwf	___llmod@divisor+1,w
  6254  1D10  0420               	iorwf	___llmod@divisor,w
  6255  1D11  1903               	skipnz
  6256  1D12  2D14               	goto	u4911
  6257  1D13  2D15               	goto	u4910
  6258  1D14                     u4911:
  6259  1D14  2D58               	goto	l2949
  6260  1D15                     u4910:
  6261  1D15                     l2935:
  6262  1D15  01A9               	clrf	___llmod@counter
  6263  1D16  0AA9               	incf	___llmod@counter,f
  6264  1D17  2D25               	goto	l2939
  6265  1D18                     l2937:
  6266  1D18  3001               	movlw	1
  6267  1D19  00A8               	movwf	??___llmod
  6268  1D1A                     u4925:
  6269  1D1A  1003               	clrc
  6270  1D1B  0DA0               	rlf	___llmod@divisor,f
  6271  1D1C  0DA1               	rlf	___llmod@divisor+1,f
  6272  1D1D  0DA2               	rlf	___llmod@divisor+2,f
  6273  1D1E  0DA3               	rlf	___llmod@divisor+3,f
  6274  1D1F  0BA8               	decfsz	??___llmod,f
  6275  1D20  2D1A               	goto	u4925
  6276  1D21  3001               	movlw	1
  6277  1D22  00A8               	movwf	??___llmod
  6278  1D23  0828               	movf	??___llmod,w
  6279  1D24  07A9               	addwf	___llmod@counter,f
  6280  1D25                     l2939:
  6281  1D25  1FA3               	btfss	___llmod@divisor+3,7
  6282  1D26  2D28               	goto	u4931
  6283  1D27  2D29               	goto	u4930
  6284  1D28                     u4931:
  6285  1D28  2D18               	goto	l2937
  6286  1D29                     u4930:
  6287  1D29                     l2941:
  6288  1D29  0823               	movf	___llmod@divisor+3,w
  6289  1D2A  0227               	subwf	___llmod@dividend+3,w
  6290  1D2B  1D03               	skipz
  6291  1D2C  2D37               	goto	u4945
  6292  1D2D  0822               	movf	___llmod@divisor+2,w
  6293  1D2E  0226               	subwf	___llmod@dividend+2,w
  6294  1D2F  1D03               	skipz
  6295  1D30  2D37               	goto	u4945
  6296  1D31  0821               	movf	___llmod@divisor+1,w
  6297  1D32  0225               	subwf	___llmod@dividend+1,w
  6298  1D33  1D03               	skipz
  6299  1D34  2D37               	goto	u4945
  6300  1D35  0820               	movf	___llmod@divisor,w
  6301  1D36  0224               	subwf	___llmod@dividend,w
  6302  1D37                     u4945:
  6303  1D37  1C03               	skipc
  6304  1D38  2D3A               	goto	u4941
  6305  1D39  2D3B               	goto	u4940
  6306  1D3A                     u4941:
  6307  1D3A  2D49               	goto	l2945
  6308  1D3B                     u4940:
  6309  1D3B                     l2943:
  6310  1D3B  0820               	movf	___llmod@divisor,w
  6311  1D3C  02A4               	subwf	___llmod@dividend,f
  6312  1D3D  0821               	movf	___llmod@divisor+1,w
  6313  1D3E  1C03               	skipc
  6314  1D3F  0F21               	incfsz	___llmod@divisor+1,w
  6315  1D40  02A5               	subwf	___llmod@dividend+1,f
  6316  1D41  0822               	movf	___llmod@divisor+2,w
  6317  1D42  1C03               	skipc
  6318  1D43  0F22               	incfsz	___llmod@divisor+2,w
  6319  1D44  02A6               	subwf	___llmod@dividend+2,f
  6320  1D45  0823               	movf	___llmod@divisor+3,w
  6321  1D46  1C03               	skipc
  6322  1D47  0F23               	incfsz	___llmod@divisor+3,w
  6323  1D48  02A7               	subwf	___llmod@dividend+3,f
  6324  1D49                     l2945:
  6325  1D49  3001               	movlw	1
  6326  1D4A                     u4955:
  6327  1D4A  1003               	clrc
  6328  1D4B  0CA3               	rrf	___llmod@divisor+3,f
  6329  1D4C  0CA2               	rrf	___llmod@divisor+2,f
  6330  1D4D  0CA1               	rrf	___llmod@divisor+1,f
  6331  1D4E  0CA0               	rrf	___llmod@divisor,f
  6332  1D4F  3EFF               	addlw	-1
  6333  1D50  1D03               	skipz
  6334  1D51  2D4A               	goto	u4955
  6335  1D52                     l2947:
  6336  1D52  3001               	movlw	1
  6337  1D53  02A9               	subwf	___llmod@counter,f
  6338  1D54  1D03               	btfss	3,2
  6339  1D55  2D57               	goto	u4961
  6340  1D56  2D58               	goto	u4960
  6341  1D57                     u4961:
  6342  1D57  2D29               	goto	l2941
  6343  1D58                     u4960:
  6344  1D58                     l2949:
  6345  1D58  0827               	movf	___llmod@dividend+3,w
  6346  1D59  00A3               	movwf	?___llmod+3
  6347  1D5A  0826               	movf	___llmod@dividend+2,w
  6348  1D5B  00A2               	movwf	?___llmod+2
  6349  1D5C  0825               	movf	___llmod@dividend+1,w
  6350  1D5D  00A1               	movwf	?___llmod+1
  6351  1D5E  0824               	movf	___llmod@dividend,w
  6352  1D5F  00A0               	movwf	?___llmod
  6353  1D60                     l586:
  6354  1D60  0008               	return
  6355  1D61                     __end_of___llmod:
  6356                           
  6357                           	psect	text16
  6358  1DBA                     __ptext16:	
  6359 ;; *************** function ___lldiv *****************
  6360 ;; Defined at:
  6361 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;  divisor         4    0[COMMON] unsigned long 
  6364 ;;  dividend        4    4[COMMON] unsigned long 
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;  quotient        4    9[COMMON] unsigned long 
  6367 ;;  counter         1   13[COMMON] unsigned char 
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  4    0[COMMON] unsigned long 
  6370 ;; Registers used:
  6371 ;;		wreg, status,2, status,0
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6377 ;;      Params:         8       0       0       0       0
  6378 ;;      Locals:         5       0       0       0       0
  6379 ;;      Temps:          1       0       0       0       0
  6380 ;;      Totals:        14       0       0       0       0
  6381 ;;Total ram usage:       14 bytes
  6382 ;; Hardware stack levels used:    1
  6383 ;; This function calls:
  6384 ;;		Nothing
  6385 ;; This function is called by:
  6386 ;;		_sprintf
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           
  6391                           ;psect for function ___lldiv
  6392  1DBA                     ___lldiv:
  6393  1DBA                     l2833:	
  6394                           ;incstack = 0
  6395                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6396                           
  6397  1DBA  3000               	movlw	0
  6398  1DBB  00FC               	movwf	___lldiv@quotient+3
  6399  1DBC  3000               	movlw	0
  6400  1DBD  00FB               	movwf	___lldiv@quotient+2
  6401  1DBE  3000               	movlw	0
  6402  1DBF  00FA               	movwf	___lldiv@quotient+1
  6403  1DC0  3000               	movlw	0
  6404  1DC1  00F9               	movwf	___lldiv@quotient
  6405  1DC2  0873               	movf	___lldiv@divisor+3,w
  6406  1DC3  0472               	iorwf	___lldiv@divisor+2,w
  6407  1DC4  0471               	iorwf	___lldiv@divisor+1,w
  6408  1DC5  0470               	iorwf	___lldiv@divisor,w
  6409  1DC6  1903               	skipnz
  6410  1DC7  2DC9               	goto	u4631
  6411  1DC8  2DCA               	goto	u4630
  6412  1DC9                     u4631:
  6413  1DC9  2E17               	goto	l2853
  6414  1DCA                     u4630:
  6415  1DCA                     l2835:
  6416  1DCA  01FD               	clrf	___lldiv@counter
  6417  1DCB  0AFD               	incf	___lldiv@counter,f
  6418  1DCC  2DDA               	goto	l2839
  6419  1DCD                     l2837:
  6420  1DCD  3001               	movlw	1
  6421  1DCE  00F8               	movwf	??___lldiv
  6422  1DCF                     u4645:
  6423  1DCF  1003               	clrc
  6424  1DD0  0DF0               	rlf	___lldiv@divisor,f
  6425  1DD1  0DF1               	rlf	___lldiv@divisor+1,f
  6426  1DD2  0DF2               	rlf	___lldiv@divisor+2,f
  6427  1DD3  0DF3               	rlf	___lldiv@divisor+3,f
  6428  1DD4  0BF8               	decfsz	??___lldiv,f
  6429  1DD5  2DCF               	goto	u4645
  6430  1DD6  3001               	movlw	1
  6431  1DD7  00F8               	movwf	??___lldiv
  6432  1DD8  0878               	movf	??___lldiv,w
  6433  1DD9  07FD               	addwf	___lldiv@counter,f
  6434  1DDA                     l2839:
  6435  1DDA  1FF3               	btfss	___lldiv@divisor+3,7
  6436  1DDB  2DDD               	goto	u4651
  6437  1DDC  2DDE               	goto	u4650
  6438  1DDD                     u4651:
  6439  1DDD  2DCD               	goto	l2837
  6440  1DDE                     u4650:
  6441  1DDE                     l2841:
  6442  1DDE  3001               	movlw	1
  6443  1DDF  00F8               	movwf	??___lldiv
  6444  1DE0                     u4665:
  6445  1DE0  1003               	clrc
  6446  1DE1  0DF9               	rlf	___lldiv@quotient,f
  6447  1DE2  0DFA               	rlf	___lldiv@quotient+1,f
  6448  1DE3  0DFB               	rlf	___lldiv@quotient+2,f
  6449  1DE4  0DFC               	rlf	___lldiv@quotient+3,f
  6450  1DE5  0BF8               	decfsz	??___lldiv,f
  6451  1DE6  2DE0               	goto	u4665
  6452  1DE7                     l2843:
  6453  1DE7  0873               	movf	___lldiv@divisor+3,w
  6454  1DE8  0277               	subwf	___lldiv@dividend+3,w
  6455  1DE9  1D03               	skipz
  6456  1DEA  2DF5               	goto	u4675
  6457  1DEB  0872               	movf	___lldiv@divisor+2,w
  6458  1DEC  0276               	subwf	___lldiv@dividend+2,w
  6459  1DED  1D03               	skipz
  6460  1DEE  2DF5               	goto	u4675
  6461  1DEF  0871               	movf	___lldiv@divisor+1,w
  6462  1DF0  0275               	subwf	___lldiv@dividend+1,w
  6463  1DF1  1D03               	skipz
  6464  1DF2  2DF5               	goto	u4675
  6465  1DF3  0870               	movf	___lldiv@divisor,w
  6466  1DF4  0274               	subwf	___lldiv@dividend,w
  6467  1DF5                     u4675:
  6468  1DF5  1C03               	skipc
  6469  1DF6  2DF8               	goto	u4671
  6470  1DF7  2DF9               	goto	u4670
  6471  1DF8                     u4671:
  6472  1DF8  2E08               	goto	l2849
  6473  1DF9                     u4670:
  6474  1DF9                     l2845:
  6475  1DF9  0870               	movf	___lldiv@divisor,w
  6476  1DFA  02F4               	subwf	___lldiv@dividend,f
  6477  1DFB  0871               	movf	___lldiv@divisor+1,w
  6478  1DFC  1C03               	skipc
  6479  1DFD  0F71               	incfsz	___lldiv@divisor+1,w
  6480  1DFE  02F5               	subwf	___lldiv@dividend+1,f
  6481  1DFF  0872               	movf	___lldiv@divisor+2,w
  6482  1E00  1C03               	skipc
  6483  1E01  0F72               	incfsz	___lldiv@divisor+2,w
  6484  1E02  02F6               	subwf	___lldiv@dividend+2,f
  6485  1E03  0873               	movf	___lldiv@divisor+3,w
  6486  1E04  1C03               	skipc
  6487  1E05  0F73               	incfsz	___lldiv@divisor+3,w
  6488  1E06  02F7               	subwf	___lldiv@dividend+3,f
  6489  1E07                     l2847:
  6490  1E07  1479               	bsf	___lldiv@quotient,0
  6491  1E08                     l2849:
  6492  1E08  3001               	movlw	1
  6493  1E09                     u4685:
  6494  1E09  1003               	clrc
  6495  1E0A  0CF3               	rrf	___lldiv@divisor+3,f
  6496  1E0B  0CF2               	rrf	___lldiv@divisor+2,f
  6497  1E0C  0CF1               	rrf	___lldiv@divisor+1,f
  6498  1E0D  0CF0               	rrf	___lldiv@divisor,f
  6499  1E0E  3EFF               	addlw	-1
  6500  1E0F  1D03               	skipz
  6501  1E10  2E09               	goto	u4685
  6502  1E11                     l2851:
  6503  1E11  3001               	movlw	1
  6504  1E12  02FD               	subwf	___lldiv@counter,f
  6505  1E13  1D03               	btfss	3,2
  6506  1E14  2E16               	goto	u4691
  6507  1E15  2E17               	goto	u4690
  6508  1E16                     u4691:
  6509  1E16  2DDE               	goto	l2841
  6510  1E17                     u4690:
  6511  1E17                     l2853:
  6512  1E17  087C               	movf	___lldiv@quotient+3,w
  6513  1E18  00F3               	movwf	?___lldiv+3
  6514  1E19  087B               	movf	___lldiv@quotient+2,w
  6515  1E1A  00F2               	movwf	?___lldiv+2
  6516  1E1B  087A               	movf	___lldiv@quotient+1,w
  6517  1E1C  00F1               	movwf	?___lldiv+1
  6518  1E1D  0879               	movf	___lldiv@quotient,w
  6519  1E1E  00F0               	movwf	?___lldiv
  6520  1E1F                     l366:
  6521  1E1F  0008               	return
  6522  1E20                     __end_of___lldiv:
  6523                           
  6524                           	psect	text17
  6525  0806                     __ptext17:	
  6526 ;; *************** function ___fltol *****************
  6527 ;; Defined at:
  6528 ;;		line 43 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6529 ;; Parameters:    Size  Location     Type
  6530 ;;  f1              4   49[BANK0 ] unsigned long 
  6531 ;; Auto vars:     Size  Location     Type
  6532 ;;  exp1            1   59[BANK0 ] unsigned char 
  6533 ;;  sign1           1   58[BANK0 ] unsigned char 
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  4   49[BANK0 ] long 
  6536 ;; Registers used:
  6537 ;;		wreg, status,2, status,0
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6543 ;;      Params:         0       4       0       0       0
  6544 ;;      Locals:         0       2       0       0       0
  6545 ;;      Temps:          0       5       0       0       0
  6546 ;;      Totals:         0      11       0       0       0
  6547 ;;Total ram usage:       11 bytes
  6548 ;; Hardware stack levels used:    1
  6549 ;; This function calls:
  6550 ;;		Nothing
  6551 ;; This function is called by:
  6552 ;;		_sprintf
  6553 ;; This function uses a non-reentrant model
  6554 ;;
  6555                           
  6556                           
  6557                           ;psect for function ___fltol
  6558  0806                     ___fltol:
  6559  0806                     l2897:	
  6560                           ;incstack = 0
  6561                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6562                           
  6563  0806  1003               	clrc
  6564  0807  1283               	bcf	3,5	;RP0=0, select bank0
  6565  0808  1303               	bcf	3,6	;RP1=0, select bank0
  6566  0809  0D53               	rlf	___fltol@f1+2,w
  6567  080A  0D54               	rlf	___fltol@f1+3,w
  6568  080B  00D5               	movwf	??___fltol
  6569  080C  0855               	movf	??___fltol,w
  6570  080D  00DB               	movwf	___fltol@exp1
  6571  080E  085B               	movf	___fltol@exp1,w
  6572  080F  1D03               	btfss	3,2
  6573  0810  2812               	goto	u4811
  6574  0811  2813               	goto	u4810
  6575  0812                     u4811:
  6576  0812  281C               	goto	l2903
  6577  0813                     u4810:
  6578  0813                     l2899:
  6579  0813  3000               	movlw	0
  6580  0814  00D4               	movwf	?___fltol+3
  6581  0815  3000               	movlw	0
  6582  0816  00D3               	movwf	?___fltol+2
  6583  0817  3000               	movlw	0
  6584  0818  00D2               	movwf	?___fltol+1
  6585  0819  3000               	movlw	0
  6586  081A  00D1               	movwf	?___fltol
  6587  081B  2881               	goto	l533
  6588  081C                     l2903:
  6589  081C  0851               	movf	___fltol@f1,w
  6590  081D  00D5               	movwf	??___fltol
  6591  081E  0852               	movf	___fltol@f1+1,w
  6592  081F  00D6               	movwf	??___fltol+1
  6593  0820  0853               	movf	___fltol@f1+2,w
  6594  0821  00D7               	movwf	??___fltol+2
  6595  0822  0854               	movf	___fltol@f1+3,w
  6596  0823  00D8               	movwf	??___fltol+3
  6597  0824  301F               	movlw	31
  6598  0825                     u4825:
  6599  0825  1003               	clrc
  6600  0826  0CD8               	rrf	??___fltol+3,f
  6601  0827  0CD7               	rrf	??___fltol+2,f
  6602  0828  0CD6               	rrf	??___fltol+1,f
  6603  0829  0CD5               	rrf	??___fltol,f
  6604  082A                     u4820:
  6605  082A  3EFF               	addlw	-1
  6606  082B  1D03               	skipz
  6607  082C  2825               	goto	u4825
  6608  082D  0855               	movf	??___fltol,w
  6609  082E  00D9               	movwf	??___fltol+4
  6610  082F  0859               	movf	??___fltol+4,w
  6611  0830  00DA               	movwf	___fltol@sign1
  6612  0831                     l2905:
  6613  0831  17D3               	bsf	___fltol@f1+2,7
  6614  0832                     l2907:
  6615  0832  30FF               	movlw	255
  6616  0833  05D1               	andwf	___fltol@f1,f
  6617  0834  30FF               	movlw	255
  6618  0835  05D2               	andwf	___fltol@f1+1,f
  6619  0836  30FF               	movlw	255
  6620  0837  05D3               	andwf	___fltol@f1+2,f
  6621  0838  3000               	movlw	0
  6622  0839  05D4               	andwf	___fltol@f1+3,f
  6623  083A                     l2909:
  6624  083A  3096               	movlw	150
  6625  083B  02DB               	subwf	___fltol@exp1,f
  6626  083C                     l2911:
  6627  083C  1FDB               	btfss	___fltol@exp1,7
  6628  083D  283F               	goto	u4831
  6629  083E  2840               	goto	u4830
  6630  083F                     u4831:
  6631  083F  285A               	goto	l2921
  6632  0840                     u4830:
  6633  0840                     l2913:
  6634  0840  085B               	movf	___fltol@exp1,w
  6635  0841  3A80               	xorlw	128
  6636  0842  3E97               	addlw	151
  6637  0843  1803               	skipnc
  6638  0844  2846               	goto	u4841
  6639  0845  2847               	goto	u4840
  6640  0846                     u4841:
  6641  0846  2848               	goto	l2919
  6642  0847                     u4840:
  6643  0847  2813               	goto	l2899
  6644  0848                     l2919:
  6645  0848  3001               	movlw	1
  6646  0849                     u4855:
  6647  0849  1003               	clrc
  6648  084A  0CD4               	rrf	___fltol@f1+3,f
  6649  084B  0CD3               	rrf	___fltol@f1+2,f
  6650  084C  0CD2               	rrf	___fltol@f1+1,f
  6651  084D  0CD1               	rrf	___fltol@f1,f
  6652  084E  3EFF               	addlw	-1
  6653  084F  1D03               	skipz
  6654  0850  2849               	goto	u4855
  6655  0851  3001               	movlw	1
  6656  0852  00D5               	movwf	??___fltol
  6657  0853  0855               	movf	??___fltol,w
  6658  0854  07DB               	addwf	___fltol@exp1,f
  6659  0855  1D03               	btfss	3,2
  6660  0856  2858               	goto	u4861
  6661  0857  2859               	goto	u4860
  6662  0858                     u4861:
  6663  0858  2848               	goto	l2919
  6664  0859                     u4860:
  6665  0859  2871               	goto	l2929
  6666  085A                     l2921:
  6667  085A  3020               	movlw	32
  6668  085B  025B               	subwf	___fltol@exp1,w
  6669  085C  1C03               	skipc
  6670  085D  285F               	goto	u4871
  6671  085E  2860               	goto	u4870
  6672  085F                     u4871:
  6673  085F  286C               	goto	l540
  6674  0860                     u4870:
  6675  0860  2813               	goto	l2899
  6676  0861                     l2927:
  6677  0861  3001               	movlw	1
  6678  0862  00D5               	movwf	??___fltol
  6679  0863                     u4885:
  6680  0863  1003               	clrc
  6681  0864  0DD1               	rlf	___fltol@f1,f
  6682  0865  0DD2               	rlf	___fltol@f1+1,f
  6683  0866  0DD3               	rlf	___fltol@f1+2,f
  6684  0867  0DD4               	rlf	___fltol@f1+3,f
  6685  0868  0BD5               	decfsz	??___fltol,f
  6686  0869  2863               	goto	u4885
  6687  086A  3001               	movlw	1
  6688  086B  02DB               	subwf	___fltol@exp1,f
  6689  086C                     l540:
  6690  086C  085B               	movf	___fltol@exp1,w
  6691  086D  1D03               	btfss	3,2
  6692  086E  2870               	goto	u4891
  6693  086F  2871               	goto	u4890
  6694  0870                     u4891:
  6695  0870  2861               	goto	l2927
  6696  0871                     u4890:
  6697  0871                     l2929:
  6698  0871  085A               	movf	___fltol@sign1,w
  6699  0872  1903               	btfsc	3,2
  6700  0873  2875               	goto	u4901
  6701  0874  2876               	goto	u4900
  6702  0875                     u4901:
  6703  0875  2881               	goto	l543
  6704  0876                     u4900:
  6705  0876                     l2931:
  6706  0876  09D1               	comf	___fltol@f1,f
  6707  0877  09D2               	comf	___fltol@f1+1,f
  6708  0878  09D3               	comf	___fltol@f1+2,f
  6709  0879  09D4               	comf	___fltol@f1+3,f
  6710  087A  0AD1               	incf	___fltol@f1,f
  6711  087B  1903               	skipnz
  6712  087C  0AD2               	incf	___fltol@f1+1,f
  6713  087D  1903               	skipnz
  6714  087E  0AD3               	incf	___fltol@f1+2,f
  6715  087F  1903               	skipnz
  6716  0880  0AD4               	incf	___fltol@f1+3,f
  6717  0881                     l543:
  6718  0881                     l533:
  6719  0881  0008               	return
  6720  0882                     __end_of___fltol:
  6721                           
  6722                           	psect	text18
  6723  1B8D                     __ptext18:	
  6724 ;; *************** function ___flsub *****************
  6725 ;; Defined at:
  6726 ;;		line 242 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;  a               4   70[BANK0 ] long 
  6729 ;;  b               4   74[BANK0 ] long 
  6730 ;; Auto vars:     Size  Location     Type
  6731 ;;		None
  6732 ;; Return value:  Size  Location     Type
  6733 ;;                  4   70[BANK0 ] long 
  6734 ;; Registers used:
  6735 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6736 ;; Tracked objects:
  6737 ;;		On entry : 0/0
  6738 ;;		On exit  : 0/0
  6739 ;;		Unchanged: 0/0
  6740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6741 ;;      Params:         0       8       0       0       0
  6742 ;;      Locals:         0       0       0       0       0
  6743 ;;      Temps:          0       0       0       0       0
  6744 ;;      Totals:         0       8       0       0       0
  6745 ;;Total ram usage:        8 bytes
  6746 ;; Hardware stack levels used:    1
  6747 ;; Hardware stack levels required when called:    1
  6748 ;; This function calls:
  6749 ;;		___fladd
  6750 ;; This function is called by:
  6751 ;;		_sprintf
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755                           
  6756                           ;psect for function ___flsub
  6757  1B8D                     ___flsub:
  6758  1B8D                     l2953:	
  6759                           ;incstack = 0
  6760                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6761                           
  6762  1B8D  3080               	movlw	128
  6763  1B8E  1283               	bcf	3,5	;RP0=0, select bank0
  6764  1B8F  1303               	bcf	3,6	;RP1=0, select bank0
  6765  1B90  06E9               	xorwf	___flsub@a+3,f
  6766  1B91                     l2955:
  6767  1B91  086D               	movf	___flsub@b+3,w
  6768  1B92  00D5               	movwf	___fladd@b+3
  6769  1B93  086C               	movf	___flsub@b+2,w
  6770  1B94  00D4               	movwf	___fladd@b+2
  6771  1B95  086B               	movf	___flsub@b+1,w
  6772  1B96  00D3               	movwf	___fladd@b+1
  6773  1B97  086A               	movf	___flsub@b,w
  6774  1B98  00D2               	movwf	___fladd@b
  6775  1B99  0869               	movf	___flsub@a+3,w
  6776  1B9A  00D9               	movwf	___fladd@a+3
  6777  1B9B  0868               	movf	___flsub@a+2,w
  6778  1B9C  00D8               	movwf	___fladd@a+2
  6779  1B9D  0867               	movf	___flsub@a+1,w
  6780  1B9E  00D7               	movwf	___fladd@a+1
  6781  1B9F  0866               	movf	___flsub@a,w
  6782  1BA0  00D6               	movwf	___fladd@a
  6783  1BA1  160A  118A  22B3  160A  158A  	fcall	___fladd
  6784  1BA6  1283               	bcf	3,5	;RP0=0, select bank0
  6785  1BA7  1303               	bcf	3,6	;RP1=0, select bank0
  6786  1BA8  0855               	movf	?___fladd+3,w
  6787  1BA9  00E9               	movwf	?___flsub+3
  6788  1BAA  0854               	movf	?___fladd+2,w
  6789  1BAB  00E8               	movwf	?___flsub+2
  6790  1BAC  0853               	movf	?___fladd+1,w
  6791  1BAD  00E7               	movwf	?___flsub+1
  6792  1BAE  0852               	movf	?___fladd,w
  6793  1BAF  00E6               	movwf	?___flsub
  6794  1BB0                     l703:
  6795  1BB0  0008               	return
  6796  1BB1                     __end_of___flsub:
  6797                           
  6798                           	psect	text19
  6799  12B3                     __ptext19:	
  6800 ;; *************** function ___fladd *****************
  6801 ;; Defined at:
  6802 ;;		line 10 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;  b               4   50[BANK0 ] long 
  6805 ;;  a               4   54[BANK0 ] long 
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;  grs             1   69[BANK0 ] unsigned char 
  6808 ;;  bexp            1   68[BANK0 ] unsigned char 
  6809 ;;  aexp            1   67[BANK0 ] unsigned char 
  6810 ;;  signs           1   66[BANK0 ] unsigned char 
  6811 ;; Return value:  Size  Location     Type
  6812 ;;                  4   50[BANK0 ] unsigned char 
  6813 ;; Registers used:
  6814 ;;		wreg, status,2, status,0, btemp+1
  6815 ;; Tracked objects:
  6816 ;;		On entry : 0/0
  6817 ;;		On exit  : 0/0
  6818 ;;		Unchanged: 0/0
  6819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6820 ;;      Params:         0       8       0       0       0
  6821 ;;      Locals:         0       4       0       0       0
  6822 ;;      Temps:          0       8       0       0       0
  6823 ;;      Totals:         0      20       0       0       0
  6824 ;;Total ram usage:       20 bytes
  6825 ;; Hardware stack levels used:    1
  6826 ;; This function calls:
  6827 ;;		Nothing
  6828 ;; This function is called by:
  6829 ;;		_sprintf
  6830 ;;		___flsub
  6831 ;; This function uses a non-reentrant model
  6832 ;;
  6833                           
  6834                           
  6835                           ;psect for function ___fladd
  6836  12B3                     ___fladd:
  6837  12B3                     l2307:	
  6838                           ;incstack = 0
  6839                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6840                           
  6841  12B3  1283               	bcf	3,5	;RP0=0, select bank0
  6842  12B4  1303               	bcf	3,6	;RP1=0, select bank0
  6843  12B5  0855               	movf	___fladd@b+3,w
  6844  12B6  3980               	andlw	128
  6845  12B7  00DA               	movwf	??___fladd
  6846  12B8  085A               	movf	??___fladd,w
  6847  12B9  00E2               	movwf	___fladd@signs
  6848  12BA                     l2309:
  6849  12BA  0855               	movf	___fladd@b+3,w
  6850  12BB  00DA               	movwf	??___fladd
  6851  12BC  075A               	addwf	??___fladd,w
  6852  12BD  00DB               	movwf	??___fladd+1
  6853  12BE  085B               	movf	??___fladd+1,w
  6854  12BF  00E4               	movwf	___fladd@bexp
  6855  12C0                     l2311:
  6856  12C0  1FD4               	btfss	___fladd@b+2,7
  6857  12C1  2AC3               	goto	u3221
  6858  12C2  2AC4               	goto	u3220
  6859  12C3                     u3221:
  6860  12C3  2AC5               	goto	l2315
  6861  12C4                     u3220:
  6862  12C4                     l2313:
  6863  12C4  1464               	bsf	___fladd@bexp,0
  6864  12C5                     l2315:
  6865  12C5  0864               	movf	___fladd@bexp,w
  6866  12C6  1903               	btfsc	3,2
  6867  12C7  2AC9               	goto	u3231
  6868  12C8  2ACA               	goto	u3230
  6869  12C9                     u3231:
  6870  12C9  2ADA               	goto	l2325
  6871  12CA                     u3230:
  6872  12CA                     l2317:
  6873  12CA  0A64               	incf	___fladd@bexp,w
  6874  12CB  1D03               	btfss	3,2
  6875  12CC  2ACE               	goto	u3241
  6876  12CD  2ACF               	goto	u3240
  6877  12CE                     u3241:
  6878  12CE  2AD7               	goto	l2321
  6879  12CF                     u3240:
  6880  12CF                     l2319:
  6881  12CF  3000               	movlw	0
  6882  12D0  00D5               	movwf	___fladd@b+3
  6883  12D1  3000               	movlw	0
  6884  12D2  00D4               	movwf	___fladd@b+2
  6885  12D3  3000               	movlw	0
  6886  12D4  00D3               	movwf	___fladd@b+1
  6887  12D5  3000               	movlw	0
  6888  12D6  00D2               	movwf	___fladd@b
  6889  12D7                     l2321:
  6890  12D7  17D4               	bsf	___fladd@b+2,7
  6891  12D8                     l2323:
  6892  12D8  01D5               	clrf	___fladd@b+3
  6893  12D9  2AE2               	goto	l2327
  6894  12DA                     l2325:
  6895  12DA  3000               	movlw	0
  6896  12DB  00D5               	movwf	___fladd@b+3
  6897  12DC  3000               	movlw	0
  6898  12DD  00D4               	movwf	___fladd@b+2
  6899  12DE  3000               	movlw	0
  6900  12DF  00D3               	movwf	___fladd@b+1
  6901  12E0  3000               	movlw	0
  6902  12E1  00D2               	movwf	___fladd@b
  6903  12E2                     l2327:
  6904  12E2  0859               	movf	___fladd@a+3,w
  6905  12E3  3980               	andlw	128
  6906  12E4  00DA               	movwf	??___fladd
  6907  12E5  085A               	movf	??___fladd,w
  6908  12E6  00E3               	movwf	___fladd@aexp
  6909  12E7                     l2329:
  6910  12E7  0863               	movf	___fladd@aexp,w
  6911  12E8  0662               	xorwf	___fladd@signs,w
  6912  12E9  1903               	skipnz
  6913  12EA  2AEC               	goto	u3251
  6914  12EB  2AED               	goto	u3250
  6915  12EC                     u3251:
  6916  12EC  2AEE               	goto	l2333
  6917  12ED                     u3250:
  6918  12ED                     l2331:
  6919  12ED  1762               	bsf	___fladd@signs,6
  6920  12EE                     l2333:
  6921  12EE  0859               	movf	___fladd@a+3,w
  6922  12EF  00DA               	movwf	??___fladd
  6923  12F0  075A               	addwf	??___fladd,w
  6924  12F1  00DB               	movwf	??___fladd+1
  6925  12F2  085B               	movf	??___fladd+1,w
  6926  12F3  00E3               	movwf	___fladd@aexp
  6927  12F4                     l2335:
  6928  12F4  1FD8               	btfss	___fladd@a+2,7
  6929  12F5  2AF7               	goto	u3261
  6930  12F6  2AF8               	goto	u3260
  6931  12F7                     u3261:
  6932  12F7  2AF9               	goto	l2339
  6933  12F8                     u3260:
  6934  12F8                     l2337:
  6935  12F8  1463               	bsf	___fladd@aexp,0
  6936  12F9                     l2339:
  6937  12F9  0863               	movf	___fladd@aexp,w
  6938  12FA  1903               	btfsc	3,2
  6939  12FB  2AFD               	goto	u3271
  6940  12FC  2AFE               	goto	u3270
  6941  12FD                     u3271:
  6942  12FD  2B0E               	goto	l2349
  6943  12FE                     u3270:
  6944  12FE                     l2341:
  6945  12FE  0A63               	incf	___fladd@aexp,w
  6946  12FF  1D03               	btfss	3,2
  6947  1300  2B02               	goto	u3281
  6948  1301  2B03               	goto	u3280
  6949  1302                     u3281:
  6950  1302  2B0B               	goto	l2345
  6951  1303                     u3280:
  6952  1303                     l2343:
  6953  1303  3000               	movlw	0
  6954  1304  00D9               	movwf	___fladd@a+3
  6955  1305  3000               	movlw	0
  6956  1306  00D8               	movwf	___fladd@a+2
  6957  1307  3000               	movlw	0
  6958  1308  00D7               	movwf	___fladd@a+1
  6959  1309  3000               	movlw	0
  6960  130A  00D6               	movwf	___fladd@a
  6961  130B                     l2345:
  6962  130B  17D8               	bsf	___fladd@a+2,7
  6963  130C                     l2347:
  6964  130C  01D9               	clrf	___fladd@a+3
  6965  130D  2B16               	goto	l657
  6966  130E                     l2349:
  6967  130E  3000               	movlw	0
  6968  130F  00D9               	movwf	___fladd@a+3
  6969  1310  3000               	movlw	0
  6970  1311  00D8               	movwf	___fladd@a+2
  6971  1312  3000               	movlw	0
  6972  1313  00D7               	movwf	___fladd@a+1
  6973  1314  3000               	movlw	0
  6974  1315  00D6               	movwf	___fladd@a
  6975  1316                     l657:
  6976  1316  0864               	movf	___fladd@bexp,w
  6977  1317  0263               	subwf	___fladd@aexp,w
  6978  1318  1803               	skipnc
  6979  1319  2B1B               	goto	u3291
  6980  131A  2B1C               	goto	u3290
  6981  131B                     u3291:
  6982  131B  2B60               	goto	l2385
  6983  131C                     u3290:
  6984  131C                     l2351:
  6985  131C  1F62               	btfss	___fladd@signs,6
  6986  131D  2B1F               	goto	u3301
  6987  131E  2B20               	goto	u3300
  6988  131F                     u3301:
  6989  131F  2B24               	goto	l2355
  6990  1320                     u3300:
  6991  1320                     l2353:
  6992  1320  3080               	movlw	128
  6993  1321  00DA               	movwf	??___fladd
  6994  1322  085A               	movf	??___fladd,w
  6995  1323  06E2               	xorwf	___fladd@signs,f
  6996  1324                     l2355:
  6997  1324  0864               	movf	___fladd@bexp,w
  6998  1325  00DA               	movwf	??___fladd
  6999  1326  085A               	movf	??___fladd,w
  7000  1327  00E5               	movwf	___fladd@grs
  7001  1328                     l2357:
  7002  1328  0863               	movf	___fladd@aexp,w
  7003  1329  00DA               	movwf	??___fladd
  7004  132A  085A               	movf	??___fladd,w
  7005  132B  00E4               	movwf	___fladd@bexp
  7006  132C                     l2359:
  7007  132C  0865               	movf	___fladd@grs,w
  7008  132D  00DA               	movwf	??___fladd
  7009  132E  085A               	movf	??___fladd,w
  7010  132F  00E3               	movwf	___fladd@aexp
  7011  1330                     l2361:
  7012  1330  0852               	movf	___fladd@b,w
  7013  1331  00DA               	movwf	??___fladd
  7014  1332  085A               	movf	??___fladd,w
  7015  1333  00E5               	movwf	___fladd@grs
  7016  1334                     l2363:
  7017  1334  0856               	movf	___fladd@a,w
  7018  1335  00DA               	movwf	??___fladd
  7019  1336  085A               	movf	??___fladd,w
  7020  1337  00D2               	movwf	___fladd@b
  7021  1338                     l2365:
  7022  1338  0865               	movf	___fladd@grs,w
  7023  1339  00DA               	movwf	??___fladd
  7024  133A  085A               	movf	??___fladd,w
  7025  133B  00D6               	movwf	___fladd@a
  7026  133C                     l2367:
  7027  133C  0853               	movf	___fladd@b+1,w
  7028  133D  00DA               	movwf	??___fladd
  7029  133E  085A               	movf	??___fladd,w
  7030  133F  00E5               	movwf	___fladd@grs
  7031  1340                     l2369:
  7032  1340  0857               	movf	___fladd@a+1,w
  7033  1341  00DA               	movwf	??___fladd
  7034  1342  085A               	movf	??___fladd,w
  7035  1343  00D3               	movwf	___fladd@b+1
  7036  1344                     l2371:
  7037  1344  0865               	movf	___fladd@grs,w
  7038  1345  00DA               	movwf	??___fladd
  7039  1346  085A               	movf	??___fladd,w
  7040  1347  00D7               	movwf	___fladd@a+1
  7041  1348                     l2373:
  7042  1348  0854               	movf	___fladd@b+2,w
  7043  1349  00DA               	movwf	??___fladd
  7044  134A  085A               	movf	??___fladd,w
  7045  134B  00E5               	movwf	___fladd@grs
  7046  134C                     l2375:
  7047  134C  0858               	movf	___fladd@a+2,w
  7048  134D  00DA               	movwf	??___fladd
  7049  134E  085A               	movf	??___fladd,w
  7050  134F  00D4               	movwf	___fladd@b+2
  7051  1350                     l2377:
  7052  1350  0865               	movf	___fladd@grs,w
  7053  1351  00DA               	movwf	??___fladd
  7054  1352  085A               	movf	??___fladd,w
  7055  1353  00D8               	movwf	___fladd@a+2
  7056  1354                     l2379:
  7057  1354  0855               	movf	___fladd@b+3,w
  7058  1355  00DA               	movwf	??___fladd
  7059  1356  085A               	movf	??___fladd,w
  7060  1357  00E5               	movwf	___fladd@grs
  7061  1358                     l2381:
  7062  1358  0859               	movf	___fladd@a+3,w
  7063  1359  00DA               	movwf	??___fladd
  7064  135A  085A               	movf	??___fladd,w
  7065  135B  00D5               	movwf	___fladd@b+3
  7066  135C                     l2383:
  7067  135C  0865               	movf	___fladd@grs,w
  7068  135D  00DA               	movwf	??___fladd
  7069  135E  085A               	movf	??___fladd,w
  7070  135F  00D9               	movwf	___fladd@a+3
  7071  1360                     l2385:
  7072  1360  01E5               	clrf	___fladd@grs
  7073  1361                     l2387:
  7074  1361  0863               	movf	___fladd@aexp,w
  7075  1362  00DA               	movwf	??___fladd
  7076  1363  01DB               	clrf	??___fladd+1
  7077  1364  085B               	movf	??___fladd+1,w
  7078  1365  00DD               	movwf	??___fladd+3
  7079  1366  0864               	movf	___fladd@bexp,w
  7080  1367  025A               	subwf	??___fladd,w
  7081  1368  00DC               	movwf	??___fladd+2
  7082  1369  1C03               	skipc
  7083  136A  03DD               	decf	??___fladd+3,f
  7084  136B  085D               	movf	??___fladd+3,w
  7085  136C  3A80               	xorlw	128
  7086  136D  00FF               	movwf	btemp+1
  7087  136E  3080               	movlw	128
  7088  136F  027F               	subwf	btemp+1,w
  7089  1370  1D03               	skipz
  7090  1371  2B74               	goto	u3315
  7091  1372  301A               	movlw	26
  7092  1373  025C               	subwf	??___fladd+2,w
  7093  1374                     u3315:
  7094  1374  1C03               	skipc
  7095  1375  2B77               	goto	u3311
  7096  1376  2B78               	goto	u3310
  7097  1377                     u3311:
  7098  1377  2BB5               	goto	l2403
  7099  1378                     u3310:
  7100  1378                     l2389:
  7101  1378  1283               	bcf	3,5	;RP0=0, select bank0
  7102  1379  1303               	bcf	3,6	;RP1=0, select bank0
  7103  137A  0855               	movf	___fladd@b+3,w
  7104  137B  0454               	iorwf	___fladd@b+2,w
  7105  137C  0453               	iorwf	___fladd@b+1,w
  7106  137D  0452               	iorwf	___fladd@b,w
  7107  137E  1D03               	skipz
  7108  137F  2B81               	goto	u3321
  7109  1380  2B83               	goto	u3320
  7110  1381                     u3321:
  7111  1381  3001               	movlw	1
  7112  1382  2B84               	goto	u3330
  7113  1383                     u3320:
  7114  1383  3000               	movlw	0
  7115  1384                     u3330:
  7116  1384  00DA               	movwf	??___fladd
  7117  1385  085A               	movf	??___fladd,w
  7118  1386  00E5               	movwf	___fladd@grs
  7119  1387  3000               	movlw	0
  7120  1388  00D5               	movwf	___fladd@b+3
  7121  1389  3000               	movlw	0
  7122  138A  00D4               	movwf	___fladd@b+2
  7123  138B  3000               	movlw	0
  7124  138C  00D3               	movwf	___fladd@b+1
  7125  138D  3000               	movlw	0
  7126  138E  00D2               	movwf	___fladd@b
  7127  138F  0863               	movf	___fladd@aexp,w
  7128  1390  00DA               	movwf	??___fladd
  7129  1391  085A               	movf	??___fladd,w
  7130  1392  00E4               	movwf	___fladd@bexp
  7131  1393  2BBD               	goto	l661
  7132  1394                     l663:
  7133  1394  1C65               	btfss	___fladd@grs,0
  7134  1395  2B97               	goto	u3341
  7135  1396  2B98               	goto	u3340
  7136  1397                     u3341:
  7137  1397  2BA1               	goto	l2393
  7138  1398                     u3340:
  7139  1398                     l2391:
  7140  1398  0865               	movf	___fladd@grs,w
  7141  1399  00DA               	movwf	??___fladd
  7142  139A  1003               	clrc
  7143  139B  0C5A               	rrf	??___fladd,w
  7144  139C  3801               	iorlw	1
  7145  139D  00DB               	movwf	??___fladd+1
  7146  139E  085B               	movf	??___fladd+1,w
  7147  139F  00E5               	movwf	___fladd@grs
  7148  13A0  2BA3               	goto	l2395
  7149  13A1                     l2393:
  7150  13A1  1003               	clrc
  7151  13A2  0CE5               	rrf	___fladd@grs,f
  7152  13A3                     l2395:
  7153  13A3  1C52               	btfss	___fladd@b,0
  7154  13A4  2BA6               	goto	u3351
  7155  13A5  2BA7               	goto	u3350
  7156  13A6                     u3351:
  7157  13A6  2BA8               	goto	l2399
  7158  13A7                     u3350:
  7159  13A7                     l2397:
  7160  13A7  17E5               	bsf	___fladd@grs,7
  7161  13A8                     l2399:
  7162  13A8  3001               	movlw	1
  7163  13A9  00DA               	movwf	??___fladd
  7164  13AA                     u3365:
  7165  13AA  0D55               	rlf	___fladd@b+3,w
  7166  13AB  0CD5               	rrf	___fladd@b+3,f
  7167  13AC  0CD4               	rrf	___fladd@b+2,f
  7168  13AD  0CD3               	rrf	___fladd@b+1,f
  7169  13AE  0CD2               	rrf	___fladd@b,f
  7170  13AF  0BDA               	decfsz	??___fladd& (0+127),f
  7171  13B0  2BAA               	goto	u3365
  7172  13B1                     l2401:
  7173  13B1  3001               	movlw	1
  7174  13B2  00DA               	movwf	??___fladd
  7175  13B3  085A               	movf	??___fladd,w
  7176  13B4  07E4               	addwf	___fladd@bexp,f
  7177  13B5                     l2403:
  7178  13B5  1283               	bcf	3,5	;RP0=0, select bank0
  7179  13B6  1303               	bcf	3,6	;RP1=0, select bank0
  7180  13B7  0863               	movf	___fladd@aexp,w
  7181  13B8  0264               	subwf	___fladd@bexp,w
  7182  13B9  1C03               	skipc
  7183  13BA  2BBC               	goto	u3371
  7184  13BB  2BBD               	goto	u3370
  7185  13BC                     u3371:
  7186  13BC  2B94               	goto	l663
  7187  13BD                     u3370:
  7188  13BD                     l661:
  7189  13BD  1B62               	btfsc	___fladd@signs,6
  7190  13BE  2BC0               	goto	u3381
  7191  13BF  2BC1               	goto	u3380
  7192  13C0                     u3381:
  7193  13C0  2C0C               	goto	l2429
  7194  13C1                     u3380:
  7195  13C1                     l2405:
  7196  13C1  0864               	movf	___fladd@bexp,w
  7197  13C2  1D03               	btfss	3,2
  7198  13C3  2BC5               	goto	u3391
  7199  13C4  2BC6               	goto	u3390
  7200  13C5                     u3391:
  7201  13C5  2BCF               	goto	l2411
  7202  13C6                     u3390:
  7203  13C6                     l2407:
  7204  13C6  3000               	movlw	0
  7205  13C7  00D5               	movwf	?___fladd+3
  7206  13C8  3000               	movlw	0
  7207  13C9  00D4               	movwf	?___fladd+2
  7208  13CA  3000               	movlw	0
  7209  13CB  00D3               	movwf	?___fladd+1
  7210  13CC  3000               	movlw	0
  7211  13CD  00D2               	movwf	?___fladd
  7212  13CE  2D3A               	goto	l670
  7213  13CF                     l2411:
  7214  13CF  0856               	movf	___fladd@a,w
  7215  13D0  07D2               	addwf	___fladd@b,f
  7216  13D1  0857               	movf	___fladd@a+1,w
  7217  13D2  1103               	clrz
  7218  13D3  1803               	skipnc
  7219  13D4  3E01               	addlw	1
  7220  13D5  1903               	skipnz
  7221  13D6  2BD8               	goto	u3401
  7222  13D7  07D3               	addwf	___fladd@b+1,f
  7223  13D8                     u3401:
  7224  13D8  0858               	movf	___fladd@a+2,w
  7225  13D9  1103               	clrz
  7226  13DA  1803               	skipnc
  7227  13DB  3E01               	addlw	1
  7228  13DC  1903               	skipnz
  7229  13DD  2BDF               	goto	u3402
  7230  13DE  07D4               	addwf	___fladd@b+2,f
  7231  13DF                     u3402:
  7232  13DF  0859               	movf	___fladd@a+3,w
  7233  13E0  1103               	clrz
  7234  13E1  1803               	skipnc
  7235  13E2  3E01               	addlw	1
  7236  13E3  1903               	skipnz
  7237  13E4  2BE6               	goto	u3403
  7238  13E5  07D5               	addwf	___fladd@b+3,f
  7239  13E6                     u3403:
  7240  13E6                     l2413:
  7241  13E6  1C55               	btfss	___fladd@b+3,0
  7242  13E7  2BE9               	goto	u3411
  7243  13E8  2BEA               	goto	u3410
  7244  13E9                     u3411:
  7245  13E9  2CC0               	goto	l2463
  7246  13EA                     u3410:
  7247  13EA                     l2415:
  7248  13EA  1C65               	btfss	___fladd@grs,0
  7249  13EB  2BED               	goto	u3421
  7250  13EC  2BEE               	goto	u3420
  7251  13ED                     u3421:
  7252  13ED  2BF7               	goto	l2419
  7253  13EE                     u3420:
  7254  13EE                     l2417:
  7255  13EE  0865               	movf	___fladd@grs,w
  7256  13EF  00DA               	movwf	??___fladd
  7257  13F0  1003               	clrc
  7258  13F1  0C5A               	rrf	??___fladd,w
  7259  13F2  3801               	iorlw	1
  7260  13F3  00DB               	movwf	??___fladd+1
  7261  13F4  085B               	movf	??___fladd+1,w
  7262  13F5  00E5               	movwf	___fladd@grs
  7263  13F6  2BF9               	goto	l2421
  7264  13F7                     l2419:
  7265  13F7  1003               	clrc
  7266  13F8  0CE5               	rrf	___fladd@grs,f
  7267  13F9                     l2421:
  7268  13F9  1C52               	btfss	___fladd@b,0
  7269  13FA  2BFC               	goto	u3431
  7270  13FB  2BFD               	goto	u3430
  7271  13FC                     u3431:
  7272  13FC  2BFE               	goto	l2425
  7273  13FD                     u3430:
  7274  13FD                     l2423:
  7275  13FD  17E5               	bsf	___fladd@grs,7
  7276  13FE                     l2425:
  7277  13FE  3001               	movlw	1
  7278  13FF  00DA               	movwf	??___fladd
  7279  1400                     u3445:
  7280  1400  0D55               	rlf	___fladd@b+3,w
  7281  1401  0CD5               	rrf	___fladd@b+3,f
  7282  1402  0CD4               	rrf	___fladd@b+2,f
  7283  1403  0CD3               	rrf	___fladd@b+1,f
  7284  1404  0CD2               	rrf	___fladd@b,f
  7285  1405  0BDA               	decfsz	??___fladd& (0+127),f
  7286  1406  2C00               	goto	u3445
  7287  1407                     l2427:
  7288  1407  3001               	movlw	1
  7289  1408  00DA               	movwf	??___fladd
  7290  1409  085A               	movf	??___fladd,w
  7291  140A  07E4               	addwf	___fladd@bexp,f
  7292  140B  2CC0               	goto	l2463
  7293  140C                     l2429:
  7294  140C  0855               	movf	___fladd@b+3,w
  7295  140D  3A80               	xorlw	128
  7296  140E  00FF               	movwf	btemp+1
  7297  140F  0859               	movf	___fladd@a+3,w
  7298  1410  3A80               	xorlw	128
  7299  1411  027F               	subwf	btemp+1,w
  7300  1412  1D03               	skipz
  7301  1413  2C1E               	goto	u3453
  7302  1414  0858               	movf	___fladd@a+2,w
  7303  1415  0254               	subwf	___fladd@b+2,w
  7304  1416  1D03               	skipz
  7305  1417  2C1E               	goto	u3453
  7306  1418  0857               	movf	___fladd@a+1,w
  7307  1419  0253               	subwf	___fladd@b+1,w
  7308  141A  1D03               	skipz
  7309  141B  2C1E               	goto	u3453
  7310  141C  0856               	movf	___fladd@a,w
  7311  141D  0252               	subwf	___fladd@b,w
  7312  141E                     u3453:
  7313  141E  1803               	skipnc
  7314  141F  2C21               	goto	u3451
  7315  1420  2C22               	goto	u3450
  7316  1421                     u3451:
  7317  1421  2C7A               	goto	l2439
  7318  1422                     u3450:
  7319  1422                     l2431:
  7320  1422  30FF               	movlw	255
  7321  1423  00DA               	movwf	??___fladd
  7322  1424  30FF               	movlw	255
  7323  1425  00DB               	movwf	??___fladd+1
  7324  1426  30FF               	movlw	255
  7325  1427  00DC               	movwf	??___fladd+2
  7326  1428  30FF               	movlw	255
  7327  1429  00DD               	movwf	??___fladd+3
  7328  142A  0856               	movf	___fladd@a,w
  7329  142B  00DE               	movwf	??___fladd+4
  7330  142C  0857               	movf	___fladd@a+1,w
  7331  142D  00DF               	movwf	??___fladd+5
  7332  142E  0858               	movf	___fladd@a+2,w
  7333  142F  00E0               	movwf	??___fladd+6
  7334  1430  0859               	movf	___fladd@a+3,w
  7335  1431  00E1               	movwf	??___fladd+7
  7336  1432  0852               	movf	___fladd@b,w
  7337  1433  02DE               	subwf	??___fladd+4,f
  7338  1434  0853               	movf	___fladd@b+1,w
  7339  1435  1C03               	skipc
  7340  1436  0F53               	incfsz	___fladd@b+1,w
  7341  1437  2C39               	goto	u3461
  7342  1438  2C3A               	goto	u3462
  7343  1439                     u3461:
  7344  1439  02DF               	subwf	??___fladd+5,f
  7345  143A                     u3462:
  7346  143A  0854               	movf	___fladd@b+2,w
  7347  143B  1C03               	skipc
  7348  143C  0F54               	incfsz	___fladd@b+2,w
  7349  143D  2C3F               	goto	u3463
  7350  143E  2C40               	goto	u3464
  7351  143F                     u3463:
  7352  143F  02E0               	subwf	??___fladd+6,f
  7353  1440                     u3464:
  7354  1440  0855               	movf	___fladd@b+3,w
  7355  1441  1C03               	skipc
  7356  1442  0F55               	incfsz	___fladd@b+3,w
  7357  1443  2C45               	goto	u3465
  7358  1444  2C46               	goto	u3466
  7359  1445                     u3465:
  7360  1445  02E1               	subwf	??___fladd+7,f
  7361  1446                     u3466:
  7362  1446  085E               	movf	??___fladd+4,w
  7363  1447  07DA               	addwf	??___fladd,f
  7364  1448  085F               	movf	??___fladd+5,w
  7365  1449  1803               	skipnc
  7366  144A  0F5F               	incfsz	??___fladd+5,w
  7367  144B  2C4D               	goto	u3470
  7368  144C  2C4E               	goto	u3471
  7369  144D                     u3470:
  7370  144D  07DB               	addwf	??___fladd+1,f
  7371  144E                     u3471:
  7372  144E  0860               	movf	??___fladd+6,w
  7373  144F  1803               	skipnc
  7374  1450  0F60               	incfsz	??___fladd+6,w
  7375  1451  2C53               	goto	u3472
  7376  1452  2C54               	goto	u3473
  7377  1453                     u3472:
  7378  1453  07DC               	addwf	??___fladd+2,f
  7379  1454                     u3473:
  7380  1454  0861               	movf	??___fladd+7,w
  7381  1455  1803               	skipnc
  7382  1456  0A61               	incf	??___fladd+7,w
  7383  1457  07DD               	addwf	??___fladd+3,f
  7384  1458  085D               	movf	??___fladd+3,w
  7385  1459  00D5               	movwf	___fladd@b+3
  7386  145A  085C               	movf	??___fladd+2,w
  7387  145B  00D4               	movwf	___fladd@b+2
  7388  145C  085B               	movf	??___fladd+1,w
  7389  145D  00D3               	movwf	___fladd@b+1
  7390  145E  085A               	movf	??___fladd,w
  7391  145F  00D2               	movwf	___fladd@b
  7392  1460                     l2433:
  7393  1460  3080               	movlw	128
  7394  1461  00DA               	movwf	??___fladd
  7395  1462  085A               	movf	??___fladd,w
  7396  1463  06E2               	xorwf	___fladd@signs,f
  7397  1464  09E5               	comf	___fladd@grs,f
  7398  1465  0AE5               	incf	___fladd@grs,f
  7399  1466                     l2435:
  7400  1466  0865               	movf	___fladd@grs,w
  7401  1467  1D03               	btfss	3,2
  7402  1468  2C6A               	goto	u3481
  7403  1469  2C6B               	goto	u3480
  7404  146A                     u3481:
  7405  146A  2C88               	goto	l678
  7406  146B                     u3480:
  7407  146B                     l2437:
  7408  146B  3001               	movlw	1
  7409  146C  07D2               	addwf	___fladd@b,f
  7410  146D  3000               	movlw	0
  7411  146E  1803               	skipnc
  7412  146F  3001               	movlw	1
  7413  1470  07D3               	addwf	___fladd@b+1,f
  7414  1471  3000               	movlw	0
  7415  1472  1803               	skipnc
  7416  1473  3001               	movlw	1
  7417  1474  07D4               	addwf	___fladd@b+2,f
  7418  1475  3000               	movlw	0
  7419  1476  1803               	skipnc
  7420  1477  3001               	movlw	1
  7421  1478  07D5               	addwf	___fladd@b+3,f
  7422  1479  2C88               	goto	l678
  7423  147A                     l2439:
  7424  147A  0856               	movf	___fladd@a,w
  7425  147B  02D2               	subwf	___fladd@b,f
  7426  147C  0857               	movf	___fladd@a+1,w
  7427  147D  1C03               	skipc
  7428  147E  0F57               	incfsz	___fladd@a+1,w
  7429  147F  02D3               	subwf	___fladd@b+1,f
  7430  1480  0858               	movf	___fladd@a+2,w
  7431  1481  1C03               	skipc
  7432  1482  0F58               	incfsz	___fladd@a+2,w
  7433  1483  02D4               	subwf	___fladd@b+2,f
  7434  1484  0859               	movf	___fladd@a+3,w
  7435  1485  1C03               	skipc
  7436  1486  0F59               	incfsz	___fladd@a+3,w
  7437  1487  02D5               	subwf	___fladd@b+3,f
  7438  1488                     l678:
  7439  1488  0855               	movf	___fladd@b+3,w
  7440  1489  0454               	iorwf	___fladd@b+2,w
  7441  148A  0453               	iorwf	___fladd@b+1,w
  7442  148B  0452               	iorwf	___fladd@b,w
  7443  148C  1D03               	skipz
  7444  148D  2C8F               	goto	u3491
  7445  148E  2C90               	goto	u3490
  7446  148F                     u3491:
  7447  148F  2CBC               	goto	l2461
  7448  1490                     u3490:
  7449  1490                     l2441:
  7450  1490  0865               	movf	___fladd@grs,w
  7451  1491  1D03               	btfss	3,2
  7452  1492  2C94               	goto	u3501
  7453  1493  2C95               	goto	u3500
  7454  1494                     u3501:
  7455  1494  2CBC               	goto	l2461
  7456  1495                     u3500:
  7457  1495                     l2443:
  7458  1495  3000               	movlw	0
  7459  1496  00D5               	movwf	?___fladd+3
  7460  1497  3000               	movlw	0
  7461  1498  00D4               	movwf	?___fladd+2
  7462  1499  3000               	movlw	0
  7463  149A  00D3               	movwf	?___fladd+1
  7464  149B  3000               	movlw	0
  7465  149C  00D2               	movwf	?___fladd
  7466  149D  2D3A               	goto	l670
  7467  149E                     l2447:
  7468  149E  3001               	movlw	1
  7469  149F  00DA               	movwf	??___fladd
  7470  14A0                     u3515:
  7471  14A0  1003               	clrc
  7472  14A1  0DD2               	rlf	___fladd@b,f
  7473  14A2  0DD3               	rlf	___fladd@b+1,f
  7474  14A3  0DD4               	rlf	___fladd@b+2,f
  7475  14A4  0DD5               	rlf	___fladd@b+3,f
  7476  14A5  0BDA               	decfsz	??___fladd,f
  7477  14A6  2CA0               	goto	u3515
  7478  14A7                     l2449:
  7479  14A7  1FE5               	btfss	___fladd@grs,7
  7480  14A8  2CAA               	goto	u3521
  7481  14A9  2CAB               	goto	u3520
  7482  14AA                     u3521:
  7483  14AA  2CAC               	goto	l682
  7484  14AB                     u3520:
  7485  14AB                     l2451:
  7486  14AB  1452               	bsf	___fladd@b,0
  7487  14AC                     l682:
  7488  14AC  1C65               	btfss	___fladd@grs,0
  7489  14AD  2CAF               	goto	u3531
  7490  14AE  2CB0               	goto	u3530
  7491  14AF                     u3531:
  7492  14AF  2CB3               	goto	l2455
  7493  14B0                     u3530:
  7494  14B0                     l2453:
  7495  14B0  1403               	setc
  7496  14B1  0DE5               	rlf	___fladd@grs,f
  7497  14B2  2CB5               	goto	l2457
  7498  14B3                     l2455:
  7499  14B3  1003               	clrc
  7500  14B4  0DE5               	rlf	___fladd@grs,f
  7501  14B5                     l2457:
  7502  14B5  0864               	movf	___fladd@bexp,w
  7503  14B6  1903               	btfsc	3,2
  7504  14B7  2CB9               	goto	u3541
  7505  14B8  2CBA               	goto	u3540
  7506  14B9                     u3541:
  7507  14B9  2CBC               	goto	l2461
  7508  14BA                     u3540:
  7509  14BA                     l2459:
  7510  14BA  3001               	movlw	1
  7511  14BB  02E4               	subwf	___fladd@bexp,f
  7512  14BC                     l2461:
  7513  14BC  1FD4               	btfss	___fladd@b+2,7
  7514  14BD  2CBF               	goto	u3551
  7515  14BE  2CC0               	goto	u3550
  7516  14BF                     u3551:
  7517  14BF  2C9E               	goto	l2447
  7518  14C0                     u3550:
  7519  14C0                     l2463:
  7520  14C0  01E3               	clrf	___fladd@aexp
  7521  14C1                     l2465:
  7522  14C1  1FE5               	btfss	___fladd@grs,7
  7523  14C2  2CC4               	goto	u3561
  7524  14C3  2CC5               	goto	u3560
  7525  14C4                     u3561:
  7526  14C4  2CD3               	goto	l2473
  7527  14C5                     u3560:
  7528  14C5                     l2467:
  7529  14C5  0865               	movf	___fladd@grs,w
  7530  14C6  397F               	andlw	127
  7531  14C7  1903               	btfsc	3,2
  7532  14C8  2CCA               	goto	u3571
  7533  14C9  2CCB               	goto	u3570
  7534  14CA                     u3571:
  7535  14CA  2CCE               	goto	l688
  7536  14CB                     u3570:
  7537  14CB                     l2469:
  7538  14CB  01E3               	clrf	___fladd@aexp
  7539  14CC  0AE3               	incf	___fladd@aexp,f
  7540  14CD  2CD3               	goto	l2473
  7541  14CE                     l688:
  7542  14CE  1C52               	btfss	___fladd@b,0
  7543  14CF  2CD1               	goto	u3581
  7544  14D0  2CD2               	goto	u3580
  7545  14D1                     u3581:
  7546  14D1  2CD3               	goto	l2473
  7547  14D2                     u3580:
  7548  14D2  2CCB               	goto	l2469
  7549  14D3                     l2473:
  7550  14D3  0863               	movf	___fladd@aexp,w
  7551  14D4  1903               	btfsc	3,2
  7552  14D5  2CD7               	goto	u3591
  7553  14D6  2CD8               	goto	u3590
  7554  14D7                     u3591:
  7555  14D7  2D0C               	goto	l691
  7556  14D8                     u3590:
  7557  14D8                     l2475:
  7558  14D8  3001               	movlw	1
  7559  14D9  07D2               	addwf	___fladd@b,f
  7560  14DA  3000               	movlw	0
  7561  14DB  1803               	skipnc
  7562  14DC  3001               	movlw	1
  7563  14DD  07D3               	addwf	___fladd@b+1,f
  7564  14DE  3000               	movlw	0
  7565  14DF  1803               	skipnc
  7566  14E0  3001               	movlw	1
  7567  14E1  07D4               	addwf	___fladd@b+2,f
  7568  14E2  3000               	movlw	0
  7569  14E3  1803               	skipnc
  7570  14E4  3001               	movlw	1
  7571  14E5  07D5               	addwf	___fladd@b+3,f
  7572  14E6                     l2477:
  7573  14E6  1C55               	btfss	___fladd@b+3,0
  7574  14E7  2CE9               	goto	u3601
  7575  14E8  2CEA               	goto	u3600
  7576  14E9                     u3601:
  7577  14E9  2D0C               	goto	l691
  7578  14EA                     u3600:
  7579  14EA                     l2479:
  7580  14EA  0852               	movf	___fladd@b,w
  7581  14EB  00DA               	movwf	??___fladd
  7582  14EC  0853               	movf	___fladd@b+1,w
  7583  14ED  00DB               	movwf	??___fladd+1
  7584  14EE  0854               	movf	___fladd@b+2,w
  7585  14EF  00DC               	movwf	??___fladd+2
  7586  14F0  0855               	movf	___fladd@b+3,w
  7587  14F1  00DD               	movwf	??___fladd+3
  7588  14F2  3001               	movlw	1
  7589  14F3  00DE               	movwf	??___fladd+4
  7590  14F4                     u3615:
  7591  14F4  0D5D               	rlf	??___fladd+3,w
  7592  14F5  0CDD               	rrf	??___fladd+3,f
  7593  14F6  0CDC               	rrf	??___fladd+2,f
  7594  14F7  0CDB               	rrf	??___fladd+1,f
  7595  14F8  0CDA               	rrf	??___fladd,f
  7596  14F9                     u3610:
  7597  14F9  0BDE               	decfsz	??___fladd+4,f
  7598  14FA  2CF4               	goto	u3615
  7599  14FB  085D               	movf	??___fladd+3,w
  7600  14FC  00D5               	movwf	___fladd@b+3
  7601  14FD  085C               	movf	??___fladd+2,w
  7602  14FE  00D4               	movwf	___fladd@b+2
  7603  14FF  085B               	movf	??___fladd+1,w
  7604  1500  00D3               	movwf	___fladd@b+1
  7605  1501  085A               	movf	??___fladd,w
  7606  1502  00D2               	movwf	___fladd@b
  7607  1503  0A64               	incf	___fladd@bexp,w
  7608  1504  1903               	btfsc	3,2
  7609  1505  2D07               	goto	u3621
  7610  1506  2D08               	goto	u3620
  7611  1507                     u3621:
  7612  1507  2D0C               	goto	l691
  7613  1508                     u3620:
  7614  1508                     l2481:
  7615  1508  3001               	movlw	1
  7616  1509  00DA               	movwf	??___fladd
  7617  150A  085A               	movf	??___fladd,w
  7618  150B  07E4               	addwf	___fladd@bexp,f
  7619  150C                     l691:
  7620  150C  0A64               	incf	___fladd@bexp,w
  7621  150D  1903               	btfsc	3,2
  7622  150E  2D10               	goto	u3631
  7623  150F  2D11               	goto	u3630
  7624  1510                     u3631:
  7625  1510  2D16               	goto	l2485
  7626  1511                     u3630:
  7627  1511                     l2483:
  7628  1511  0864               	movf	___fladd@bexp,w
  7629  1512  1D03               	btfss	3,2
  7630  1513  2D15               	goto	u3641
  7631  1514  2D16               	goto	u3640
  7632  1515                     u3641:
  7633  1515  2D24               	goto	l2491
  7634  1516                     u3640:
  7635  1516                     l2485:
  7636  1516  3000               	movlw	0
  7637  1517  00D5               	movwf	___fladd@b+3
  7638  1518  3000               	movlw	0
  7639  1519  00D4               	movwf	___fladd@b+2
  7640  151A  3000               	movlw	0
  7641  151B  00D3               	movwf	___fladd@b+1
  7642  151C  3000               	movlw	0
  7643  151D  00D2               	movwf	___fladd@b
  7644  151E                     l2487:
  7645  151E  0864               	movf	___fladd@bexp,w
  7646  151F  1D03               	btfss	3,2
  7647  1520  2D22               	goto	u3651
  7648  1521  2D23               	goto	u3650
  7649  1522                     u3651:
  7650  1522  2D24               	goto	l2491
  7651  1523                     u3650:
  7652  1523                     l2489:
  7653  1523  01E2               	clrf	___fladd@signs
  7654  1524                     l2491:
  7655  1524  1C64               	btfss	___fladd@bexp,0
  7656  1525  2D27               	goto	u3661
  7657  1526  2D28               	goto	u3660
  7658  1527                     u3661:
  7659  1527  2D2A               	goto	l2495
  7660  1528                     u3660:
  7661  1528                     l2493:
  7662  1528  17D4               	bsf	___fladd@b+2,7
  7663  1529  2D2E               	goto	l699
  7664  152A                     l2495:
  7665  152A  307F               	movlw	127
  7666  152B  00DA               	movwf	??___fladd
  7667  152C  085A               	movf	??___fladd,w
  7668  152D  05D4               	andwf	___fladd@b+2,f
  7669  152E                     l699:
  7670  152E  0864               	movf	___fladd@bexp,w
  7671  152F  00DA               	movwf	??___fladd
  7672  1530  1003               	clrc
  7673  1531  0C5A               	rrf	??___fladd,w
  7674  1532  00DB               	movwf	??___fladd+1
  7675  1533  085B               	movf	??___fladd+1,w
  7676  1534  00D5               	movwf	___fladd@b+3
  7677  1535                     l2497:
  7678  1535  1FE2               	btfss	___fladd@signs,7
  7679  1536  2D38               	goto	u3671
  7680  1537  2D39               	goto	u3670
  7681  1538                     u3671:
  7682  1538  2D3A               	goto	l700
  7683  1539                     u3670:
  7684  1539                     l2499:
  7685  1539  17D5               	bsf	___fladd@b+3,7
  7686  153A                     l700:
  7687  153A                     l670:
  7688  153A  0008               	return
  7689  153B                     __end_of___fladd:
  7690                           
  7691                           	psect	text20
  7692  00C9                     __ptext20:	
  7693 ;; *************** function ___flneg *****************
  7694 ;; Defined at:
  7695 ;;		line 15 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;  f1              4    0[COMMON] unsigned char 
  7698 ;; Auto vars:     Size  Location     Type
  7699 ;;		None
  7700 ;; Return value:  Size  Location     Type
  7701 ;;                  4    0[COMMON] unsigned char 
  7702 ;; Registers used:
  7703 ;;		wreg
  7704 ;; Tracked objects:
  7705 ;;		On entry : 0/0
  7706 ;;		On exit  : 0/0
  7707 ;;		Unchanged: 0/0
  7708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7709 ;;      Params:         4       0       0       0       0
  7710 ;;      Locals:         0       0       0       0       0
  7711 ;;      Temps:          0       0       0       0       0
  7712 ;;      Totals:         4       0       0       0       0
  7713 ;;Total ram usage:        4 bytes
  7714 ;; Hardware stack levels used:    1
  7715 ;; This function calls:
  7716 ;;		Nothing
  7717 ;; This function is called by:
  7718 ;;		_sprintf
  7719 ;; This function uses a non-reentrant model
  7720 ;;
  7721                           
  7722                           
  7723                           ;psect for function ___flneg
  7724  00C9                     ___flneg:
  7725  00C9                     l2889:	
  7726                           ;incstack = 0
  7727                           ; Regs used in ___flneg: [wreg]
  7728                           
  7729  00C9  0873               	movf	___flneg@f1+3,w
  7730  00CA  0472               	iorwf	___flneg@f1+2,w
  7731  00CB  0471               	iorwf	___flneg@f1+1,w
  7732  00CC  0470               	iorwf	___flneg@f1,w
  7733  00CD  1903               	skipnz
  7734  00CE  28D0               	goto	u4801
  7735  00CF  28D1               	goto	u4800
  7736  00D0                     u4801:
  7737  00D0  28D3               	goto	l2893
  7738  00D1                     u4800:
  7739  00D1                     l2891:
  7740  00D1  3080               	movlw	128
  7741  00D2  06F3               	xorwf	___flneg@f1+3,f
  7742  00D3                     l2893:
  7743  00D3                     l529:
  7744  00D3  0008               	return
  7745  00D4                     __end_of___flneg:
  7746                           
  7747                           	psect	text21
  7748  1006                     __ptext21:	
  7749 ;; *************** function ___flge *****************
  7750 ;; Defined at:
  7751 ;;		line 4 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;  ff1             4    0[COMMON] unsigned char 
  7754 ;;  ff2             4    4[COMMON] unsigned char 
  7755 ;; Auto vars:     Size  Location     Type
  7756 ;;		None
  7757 ;; Return value:  Size  Location     Type
  7758 ;;		None               void
  7759 ;; Registers used:
  7760 ;;		wreg, status,2, status,0
  7761 ;; Tracked objects:
  7762 ;;		On entry : 0/0
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7766 ;;      Params:         8       0       0       0       0
  7767 ;;      Locals:         0       0       0       0       0
  7768 ;;      Temps:          4       0       0       0       0
  7769 ;;      Totals:        12       0       0       0       0
  7770 ;;Total ram usage:       12 bytes
  7771 ;; Hardware stack levels used:    1
  7772 ;; This function calls:
  7773 ;;		Nothing
  7774 ;; This function is called by:
  7775 ;;		_sprintf
  7776 ;; This function uses a non-reentrant model
  7777 ;;
  7778                           
  7779                           
  7780                           ;psect for function ___flge
  7781  1006                     ___flge:
  7782  1006                     l2869:	
  7783                           ;incstack = 0
  7784                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7785                           
  7786  1006  3000               	movlw	0
  7787  1007  0570               	andwf	___flge@ff1,w
  7788  1008  00F8               	movwf	??___flge
  7789  1009  3000               	movlw	0
  7790  100A  0571               	andwf	___flge@ff1+1,w
  7791  100B  00F9               	movwf	??___flge+1
  7792  100C  3080               	movlw	128
  7793  100D  0572               	andwf	___flge@ff1+2,w
  7794  100E  00FA               	movwf	??___flge+2
  7795  100F  307F               	movlw	127
  7796  1010  0573               	andwf	___flge@ff1+3,w
  7797  1011  00FB               	movwf	??___flge+3
  7798  1012  087B               	movf	??___flge+3,w
  7799  1013  047A               	iorwf	??___flge+2,w
  7800  1014  0479               	iorwf	??___flge+1,w
  7801  1015  0478               	iorwf	??___flge,w
  7802  1016  1D03               	skipz
  7803  1017  2819               	goto	u4731
  7804  1018  281A               	goto	u4730
  7805  1019                     u4731:
  7806  1019  2822               	goto	l521
  7807  101A                     u4730:
  7808  101A                     l2871:
  7809  101A  3000               	movlw	0
  7810  101B  00F3               	movwf	___flge@ff1+3
  7811  101C  3000               	movlw	0
  7812  101D  00F2               	movwf	___flge@ff1+2
  7813  101E  3000               	movlw	0
  7814  101F  00F1               	movwf	___flge@ff1+1
  7815  1020  3000               	movlw	0
  7816  1021  00F0               	movwf	___flge@ff1
  7817  1022                     l521:
  7818  1022  3000               	movlw	0
  7819  1023  0574               	andwf	___flge@ff2,w
  7820  1024  00F8               	movwf	??___flge
  7821  1025  3000               	movlw	0
  7822  1026  0575               	andwf	___flge@ff2+1,w
  7823  1027  00F9               	movwf	??___flge+1
  7824  1028  3080               	movlw	128
  7825  1029  0576               	andwf	___flge@ff2+2,w
  7826  102A  00FA               	movwf	??___flge+2
  7827  102B  307F               	movlw	127
  7828  102C  0577               	andwf	___flge@ff2+3,w
  7829  102D  00FB               	movwf	??___flge+3
  7830  102E  087B               	movf	??___flge+3,w
  7831  102F  047A               	iorwf	??___flge+2,w
  7832  1030  0479               	iorwf	??___flge+1,w
  7833  1031  0478               	iorwf	??___flge,w
  7834  1032  1D03               	skipz
  7835  1033  2835               	goto	u4741
  7836  1034  2836               	goto	u4740
  7837  1035                     u4741:
  7838  1035  283E               	goto	l2875
  7839  1036                     u4740:
  7840  1036                     l2873:
  7841  1036  3000               	movlw	0
  7842  1037  00F7               	movwf	___flge@ff2+3
  7843  1038  3000               	movlw	0
  7844  1039  00F6               	movwf	___flge@ff2+2
  7845  103A  3000               	movlw	0
  7846  103B  00F5               	movwf	___flge@ff2+1
  7847  103C  3000               	movlw	0
  7848  103D  00F4               	movwf	___flge@ff2
  7849  103E                     l2875:
  7850  103E  1FF3               	btfss	___flge@ff1+3,7
  7851  103F  2841               	goto	u4751
  7852  1040  2842               	goto	u4750
  7853  1041                     u4751:
  7854  1041  2866               	goto	l2879
  7855  1042                     u4750:
  7856  1042                     l2877:
  7857  1042  3000               	movlw	0
  7858  1043  00F8               	movwf	??___flge
  7859  1044  3000               	movlw	0
  7860  1045  00F9               	movwf	??___flge+1
  7861  1046  3000               	movlw	0
  7862  1047  00FA               	movwf	??___flge+2
  7863  1048  3080               	movlw	128
  7864  1049  00FB               	movwf	??___flge+3
  7865  104A  0870               	movf	___flge@ff1,w
  7866  104B  02F8               	subwf	??___flge,f
  7867  104C  0871               	movf	___flge@ff1+1,w
  7868  104D  1C03               	skipc
  7869  104E  0F71               	incfsz	___flge@ff1+1,w
  7870  104F  2851               	goto	u4761
  7871  1050  2852               	goto	u4762
  7872  1051                     u4761:
  7873  1051  02F9               	subwf	??___flge+1,f
  7874  1052                     u4762:
  7875  1052  0872               	movf	___flge@ff1+2,w
  7876  1053  1C03               	skipc
  7877  1054  0F72               	incfsz	___flge@ff1+2,w
  7878  1055  2857               	goto	u4763
  7879  1056  2858               	goto	u4764
  7880  1057                     u4763:
  7881  1057  02FA               	subwf	??___flge+2,f
  7882  1058                     u4764:
  7883  1058  0873               	movf	___flge@ff1+3,w
  7884  1059  1C03               	skipc
  7885  105A  0F73               	incfsz	___flge@ff1+3,w
  7886  105B  285D               	goto	u4765
  7887  105C  285E               	goto	u4766
  7888  105D                     u4765:
  7889  105D  02FB               	subwf	??___flge+3,f
  7890  105E                     u4766:
  7891  105E  087B               	movf	??___flge+3,w
  7892  105F  00F3               	movwf	___flge@ff1+3
  7893  1060  087A               	movf	??___flge+2,w
  7894  1061  00F2               	movwf	___flge@ff1+2
  7895  1062  0879               	movf	??___flge+1,w
  7896  1063  00F1               	movwf	___flge@ff1+1
  7897  1064  0878               	movf	??___flge,w
  7898  1065  00F0               	movwf	___flge@ff1
  7899  1066                     l2879:
  7900  1066  1FF7               	btfss	___flge@ff2+3,7
  7901  1067  2869               	goto	u4771
  7902  1068  286A               	goto	u4770
  7903  1069                     u4771:
  7904  1069  288E               	goto	l524
  7905  106A                     u4770:
  7906  106A                     l2881:
  7907  106A  3000               	movlw	0
  7908  106B  00F8               	movwf	??___flge
  7909  106C  3000               	movlw	0
  7910  106D  00F9               	movwf	??___flge+1
  7911  106E  3000               	movlw	0
  7912  106F  00FA               	movwf	??___flge+2
  7913  1070  3080               	movlw	128
  7914  1071  00FB               	movwf	??___flge+3
  7915  1072  0874               	movf	___flge@ff2,w
  7916  1073  02F8               	subwf	??___flge,f
  7917  1074  0875               	movf	___flge@ff2+1,w
  7918  1075  1C03               	skipc
  7919  1076  0F75               	incfsz	___flge@ff2+1,w
  7920  1077  2879               	goto	u4781
  7921  1078  287A               	goto	u4782
  7922  1079                     u4781:
  7923  1079  02F9               	subwf	??___flge+1,f
  7924  107A                     u4782:
  7925  107A  0876               	movf	___flge@ff2+2,w
  7926  107B  1C03               	skipc
  7927  107C  0F76               	incfsz	___flge@ff2+2,w
  7928  107D  287F               	goto	u4783
  7929  107E  2880               	goto	u4784
  7930  107F                     u4783:
  7931  107F  02FA               	subwf	??___flge+2,f
  7932  1080                     u4784:
  7933  1080  0877               	movf	___flge@ff2+3,w
  7934  1081  1C03               	skipc
  7935  1082  0F77               	incfsz	___flge@ff2+3,w
  7936  1083  2885               	goto	u4785
  7937  1084  2886               	goto	u4786
  7938  1085                     u4785:
  7939  1085  02FB               	subwf	??___flge+3,f
  7940  1086                     u4786:
  7941  1086  087B               	movf	??___flge+3,w
  7942  1087  00F7               	movwf	___flge@ff2+3
  7943  1088  087A               	movf	??___flge+2,w
  7944  1089  00F6               	movwf	___flge@ff2+2
  7945  108A  0879               	movf	??___flge+1,w
  7946  108B  00F5               	movwf	___flge@ff2+1
  7947  108C  0878               	movf	??___flge,w
  7948  108D  00F4               	movwf	___flge@ff2
  7949  108E                     l524:
  7950  108E  3080               	movlw	128
  7951  108F  06F3               	xorwf	___flge@ff1+3,f
  7952  1090  3080               	movlw	128
  7953  1091  06F7               	xorwf	___flge@ff2+3,f
  7954  1092  0877               	movf	___flge@ff2+3,w
  7955  1093  0273               	subwf	___flge@ff1+3,w
  7956  1094  1D03               	skipz
  7957  1095  28A0               	goto	u4795
  7958  1096  0876               	movf	___flge@ff2+2,w
  7959  1097  0272               	subwf	___flge@ff1+2,w
  7960  1098  1D03               	skipz
  7961  1099  28A0               	goto	u4795
  7962  109A  0875               	movf	___flge@ff2+1,w
  7963  109B  0271               	subwf	___flge@ff1+1,w
  7964  109C  1D03               	skipz
  7965  109D  28A0               	goto	u4795
  7966  109E  0874               	movf	___flge@ff2,w
  7967  109F  0270               	subwf	___flge@ff1,w
  7968  10A0                     u4795:
  7969  10A0  1803               	skipnc
  7970  10A1  28A3               	goto	u4791
  7971  10A2  28A4               	goto	u4790
  7972  10A3                     u4791:
  7973  10A3  28A6               	goto	l2885
  7974  10A4                     u4790:
  7975  10A4                     l2883:
  7976  10A4  1003               	clrc
  7977  10A5  28A7               	goto	l525
  7978  10A6                     l2885:
  7979  10A6  1403               	setc
  7980  10A7                     l525:
  7981  10A7  0008               	return
  7982  10A8                     __end_of___flge:
  7983                           
  7984                           	psect	text22
  7985  1CBD                     __ptext22:	
  7986 ;; *************** function ___fleq *****************
  7987 ;; Defined at:
  7988 ;;		line 4 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7989 ;; Parameters:    Size  Location     Type
  7990 ;;  ff1             4    0[COMMON] unsigned char 
  7991 ;;  ff2             4    4[COMMON] unsigned char 
  7992 ;; Auto vars:     Size  Location     Type
  7993 ;;		None
  7994 ;; Return value:  Size  Location     Type
  7995 ;;		None               void
  7996 ;; Registers used:
  7997 ;;		wreg, status,2, status,0
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8003 ;;      Params:         8       0       0       0       0
  8004 ;;      Locals:         0       0       0       0       0
  8005 ;;      Temps:          4       0       0       0       0
  8006 ;;      Totals:        12       0       0       0       0
  8007 ;;Total ram usage:       12 bytes
  8008 ;; Hardware stack levels used:    1
  8009 ;; This function calls:
  8010 ;;		Nothing
  8011 ;; This function is called by:
  8012 ;;		_sprintf
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           
  8017                           ;psect for function ___fleq
  8018  1CBD                     ___fleq:
  8019  1CBD                     l2857:	
  8020                           ;incstack = 0
  8021                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8022                           
  8023  1CBD  3000               	movlw	0
  8024  1CBE  0570               	andwf	___fleq@ff1,w
  8025  1CBF  00F8               	movwf	??___fleq
  8026  1CC0  3000               	movlw	0
  8027  1CC1  0571               	andwf	___fleq@ff1+1,w
  8028  1CC2  00F9               	movwf	??___fleq+1
  8029  1CC3  3080               	movlw	128
  8030  1CC4  0572               	andwf	___fleq@ff1+2,w
  8031  1CC5  00FA               	movwf	??___fleq+2
  8032  1CC6  307F               	movlw	127
  8033  1CC7  0573               	andwf	___fleq@ff1+3,w
  8034  1CC8  00FB               	movwf	??___fleq+3
  8035  1CC9  087B               	movf	??___fleq+3,w
  8036  1CCA  047A               	iorwf	??___fleq+2,w
  8037  1CCB  0479               	iorwf	??___fleq+1,w
  8038  1CCC  0478               	iorwf	??___fleq,w
  8039  1CCD  1D03               	skipz
  8040  1CCE  2CD0               	goto	u4701
  8041  1CCF  2CD1               	goto	u4700
  8042  1CD0                     u4701:
  8043  1CD0  2CD9               	goto	l516
  8044  1CD1                     u4700:
  8045  1CD1                     l2859:
  8046  1CD1  3000               	movlw	0
  8047  1CD2  00F3               	movwf	___fleq@ff1+3
  8048  1CD3  3000               	movlw	0
  8049  1CD4  00F2               	movwf	___fleq@ff1+2
  8050  1CD5  3000               	movlw	0
  8051  1CD6  00F1               	movwf	___fleq@ff1+1
  8052  1CD7  3000               	movlw	0
  8053  1CD8  00F0               	movwf	___fleq@ff1
  8054  1CD9                     l516:
  8055  1CD9  3000               	movlw	0
  8056  1CDA  0574               	andwf	___fleq@ff2,w
  8057  1CDB  00F8               	movwf	??___fleq
  8058  1CDC  3000               	movlw	0
  8059  1CDD  0575               	andwf	___fleq@ff2+1,w
  8060  1CDE  00F9               	movwf	??___fleq+1
  8061  1CDF  3080               	movlw	128
  8062  1CE0  0576               	andwf	___fleq@ff2+2,w
  8063  1CE1  00FA               	movwf	??___fleq+2
  8064  1CE2  307F               	movlw	127
  8065  1CE3  0577               	andwf	___fleq@ff2+3,w
  8066  1CE4  00FB               	movwf	??___fleq+3
  8067  1CE5  087B               	movf	??___fleq+3,w
  8068  1CE6  047A               	iorwf	??___fleq+2,w
  8069  1CE7  0479               	iorwf	??___fleq+1,w
  8070  1CE8  0478               	iorwf	??___fleq,w
  8071  1CE9  1D03               	skipz
  8072  1CEA  2CEC               	goto	u4711
  8073  1CEB  2CED               	goto	u4710
  8074  1CEC                     u4711:
  8075  1CEC  2CF5               	goto	l517
  8076  1CED                     u4710:
  8077  1CED                     l2861:
  8078  1CED  3000               	movlw	0
  8079  1CEE  00F7               	movwf	___fleq@ff2+3
  8080  1CEF  3000               	movlw	0
  8081  1CF0  00F6               	movwf	___fleq@ff2+2
  8082  1CF1  3000               	movlw	0
  8083  1CF2  00F5               	movwf	___fleq@ff2+1
  8084  1CF3  3000               	movlw	0
  8085  1CF4  00F4               	movwf	___fleq@ff2
  8086  1CF5                     l517:
  8087  1CF5  0877               	movf	___fleq@ff2+3,w
  8088  1CF6  0673               	xorwf	___fleq@ff1+3,w
  8089  1CF7  1D03               	skipz
  8090  1CF8  2D03               	goto	u4725
  8091  1CF9  0876               	movf	___fleq@ff2+2,w
  8092  1CFA  0672               	xorwf	___fleq@ff1+2,w
  8093  1CFB  1D03               	skipz
  8094  1CFC  2D03               	goto	u4725
  8095  1CFD  0875               	movf	___fleq@ff2+1,w
  8096  1CFE  0671               	xorwf	___fleq@ff1+1,w
  8097  1CFF  1D03               	skipz
  8098  1D00  2D03               	goto	u4725
  8099  1D01  0874               	movf	___fleq@ff2,w
  8100  1D02  0670               	xorwf	___fleq@ff1,w
  8101  1D03                     u4725:
  8102  1D03  1903               	skipnz
  8103  1D04  2D06               	goto	u4721
  8104  1D05  2D07               	goto	u4720
  8105  1D06                     u4721:
  8106  1D06  2D09               	goto	l2865
  8107  1D07                     u4720:
  8108  1D07                     l2863:
  8109  1D07  1003               	clrc
  8110  1D08  2D0A               	goto	l518
  8111  1D09                     l2865:
  8112  1D09  1403               	setc
  8113  1D0A                     l518:
  8114  1D0A  0008               	return
  8115  1D0B                     __end_of___fleq:
  8116                           
  8117                           	psect	text23
  8118  1B79                     __ptext23:	
  8119 ;; *************** function _setup *****************
  8120 ;; Defined at:
  8121 ;;		line 121 in file "main_prueba_uart.c"
  8122 ;; Parameters:    Size  Location     Type
  8123 ;;		None
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;		None
  8126 ;; Return value:  Size  Location     Type
  8127 ;;                  1    wreg      void 
  8128 ;; Registers used:
  8129 ;;		wreg, status,2
  8130 ;; Tracked objects:
  8131 ;;		On entry : 0/0
  8132 ;;		On exit  : 0/0
  8133 ;;		Unchanged: 0/0
  8134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8135 ;;      Params:         0       0       0       0       0
  8136 ;;      Locals:         0       0       0       0       0
  8137 ;;      Temps:          0       0       0       0       0
  8138 ;;      Totals:         0       0       0       0       0
  8139 ;;Total ram usage:        0 bytes
  8140 ;; Hardware stack levels used:    1
  8141 ;; This function calls:
  8142 ;;		Nothing
  8143 ;; This function is called by:
  8144 ;;		_main
  8145 ;; This function uses a non-reentrant model
  8146 ;;
  8147                           
  8148                           
  8149                           ;psect for function _setup
  8150  1B79                     _setup:
  8151  1B79                     l3003:	
  8152                           ;incstack = 0
  8153                           ; Regs used in _setup: [wreg+status,2]
  8154                           
  8155                           
  8156                           ;main_prueba_uart.c: 122:     ANSEL = 0b00000000;
  8157  1B79  1683               	bsf	3,5	;RP0=1, select bank3
  8158  1B7A  1703               	bsf	3,6	;RP1=1, select bank3
  8159  1B7B  0188               	clrf	8	;volatile
  8160                           
  8161                           ;main_prueba_uart.c: 123:     ANSELH = 0;
  8162  1B7C  0189               	clrf	9	;volatile
  8163                           
  8164                           ;main_prueba_uart.c: 125:     PORTA = 0;
  8165  1B7D  1283               	bcf	3,5	;RP0=0, select bank0
  8166  1B7E  1303               	bcf	3,6	;RP1=0, select bank0
  8167  1B7F  0185               	clrf	5	;volatile
  8168                           
  8169                           ;main_prueba_uart.c: 126:     PORTB = 0;
  8170  1B80  0186               	clrf	6	;volatile
  8171                           
  8172                           ;main_prueba_uart.c: 127:     PORTC = 0;
  8173  1B81  0187               	clrf	7	;volatile
  8174                           
  8175                           ;main_prueba_uart.c: 128:     PORTD = 0;
  8176  1B82  0188               	clrf	8	;volatile
  8177                           
  8178                           ;main_prueba_uart.c: 129:     PORTE = 0;
  8179  1B83  0189               	clrf	9	;volatile
  8180                           
  8181                           ;main_prueba_uart.c: 131:     TRISA = 0b00000000;
  8182  1B84  1683               	bsf	3,5	;RP0=1, select bank1
  8183  1B85  1303               	bcf	3,6	;RP1=0, select bank1
  8184  1B86  0185               	clrf	5	;volatile
  8185                           
  8186                           ;main_prueba_uart.c: 132:     TRISB = 0;
  8187  1B87  0186               	clrf	6	;volatile
  8188  1B88                     l3005:
  8189                           
  8190                           ;main_prueba_uart.c: 133:     TRISC = 0b10000000;
  8191  1B88  3080               	movlw	128
  8192  1B89  0087               	movwf	7	;volatile
  8193  1B8A                     l3007:
  8194                           
  8195                           ;main_prueba_uart.c: 134:     TRISD = 0;
  8196  1B8A  0188               	clrf	8	;volatile
  8197  1B8B                     l3009:
  8198                           
  8199                           ;main_prueba_uart.c: 135:     TRISE = 0;
  8200  1B8B  0189               	clrf	9	;volatile
  8201  1B8C                     l77:
  8202  1B8C  0008               	return
  8203  1B8D                     __end_of_setup:
  8204                           
  8205                           	psect	text24
  8206  0801                     __ptext24:	
  8207 ;; *************** function _setOsc *****************
  8208 ;; Defined at:
  8209 ;;		line 138 in file "main_prueba_uart.c"
  8210 ;; Parameters:    Size  Location     Type
  8211 ;;		None
  8212 ;; Auto vars:     Size  Location     Type
  8213 ;;		None
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  1    wreg      void 
  8216 ;; Registers used:
  8217 ;;		wreg, status,2, status,0
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8223 ;;      Params:         0       0       0       0       0
  8224 ;;      Locals:         0       0       0       0       0
  8225 ;;      Temps:          0       0       0       0       0
  8226 ;;      Totals:         0       0       0       0       0
  8227 ;;Total ram usage:        0 bytes
  8228 ;; Hardware stack levels used:    1
  8229 ;; This function calls:
  8230 ;;		Nothing
  8231 ;; This function is called by:
  8232 ;;		_main
  8233 ;; This function uses a non-reentrant model
  8234 ;;
  8235                           
  8236                           
  8237                           ;psect for function _setOsc
  8238  0801                     _setOsc:
  8239  0801                     l3027:	
  8240                           ;incstack = 0
  8241                           ; Regs used in _setOsc: [wreg+status,2+status,0]
  8242                           
  8243                           
  8244                           ;main_prueba_uart.c: 139:     OSCCONbits.IRCF = 0b111;
  8245  0801  3070               	movlw	112
  8246  0802  1683               	bsf	3,5	;RP0=1, select bank1
  8247  0803  1303               	bcf	3,6	;RP1=0, select bank1
  8248  0804  048F               	iorwf	15,f	;volatile
  8249  0805                     l80:
  8250  0805  0008               	return
  8251  0806                     __end_of_setOsc:
  8252                           
  8253                           	psect	text25
  8254  1B39                     __ptext25:	
  8255 ;; *************** function _USART_Read *****************
  8256 ;; Defined at:
  8257 ;;		line 46 in file "USART.c"
  8258 ;; Parameters:    Size  Location     Type
  8259 ;;		None
  8260 ;; Auto vars:     Size  Location     Type
  8261 ;;		None
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  1    wreg      unsigned char 
  8264 ;; Registers used:
  8265 ;;		wreg
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/0
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8271 ;;      Params:         0       0       0       0       0
  8272 ;;      Locals:         0       0       0       0       0
  8273 ;;      Temps:          0       0       0       0       0
  8274 ;;      Totals:         0       0       0       0       0
  8275 ;;Total ram usage:        0 bytes
  8276 ;; Hardware stack levels used:    1
  8277 ;; This function calls:
  8278 ;;		Nothing
  8279 ;; This function is called by:
  8280 ;;		_main
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           
  8285                           ;psect for function _USART_Read
  8286  1B39                     _USART_Read:
  8287  1B39                     l3333:	
  8288                           ;incstack = 0
  8289                           ; Regs used in _USART_Read: [wreg]
  8290                           
  8291  1B39                     l122:	
  8292                           ;USART.c: 47:   while(!RCIF);
  8293                           
  8294  1B39  1283               	bcf	3,5	;RP0=0, select bank0
  8295  1B3A  1303               	bcf	3,6	;RP1=0, select bank0
  8296  1B3B  1E8C               	btfss	12,5	;volatile
  8297  1B3C  2B3E               	goto	u5671
  8298  1B3D  2B3F               	goto	u5670
  8299  1B3E                     u5671:
  8300  1B3E  2B39               	goto	l122
  8301  1B3F                     u5670:
  8302  1B3F                     l3335:
  8303                           
  8304                           ;USART.c: 48:   return RCREG;
  8305  1B3F  081A               	movf	26,w	;volatile
  8306  1B40                     l125:
  8307  1B40  0008               	return
  8308  1B41                     __end_of_USART_Read:
  8309                           
  8310                           	psect	text26
  8311  1C37                     __ptext26:	
  8312 ;; *************** function _UART_Write_String *****************
  8313 ;; Defined at:
  8314 ;;		line 39 in file "USART.c"
  8315 ;; Parameters:    Size  Location     Type
  8316 ;;  buf             2    1[COMMON] PTR unsigned char 
  8317 ;;		 -> STR_4(2), buffer(40), pantalla(20), STR_1(17), 
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;  i               2    6[COMMON] int 
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  1    wreg      void 
  8322 ;; Registers used:
  8323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8329 ;;      Params:         2       0       0       0       0
  8330 ;;      Locals:         2       0       0       0       0
  8331 ;;      Temps:          3       0       0       0       0
  8332 ;;      Totals:         7       0       0       0       0
  8333 ;;Total ram usage:        7 bytes
  8334 ;; Hardware stack levels used:    1
  8335 ;; Hardware stack levels required when called:    1
  8336 ;; This function calls:
  8337 ;;		_UART_Write
  8338 ;; This function is called by:
  8339 ;;		_main
  8340 ;; This function uses a non-reentrant model
  8341 ;;
  8342                           
  8343                           
  8344                           ;psect for function _UART_Write_String
  8345  1C37                     _UART_Write_String:
  8346  1C37                     l3029:	
  8347                           ;incstack = 0
  8348                           ; Regs used in _UART_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8349                           
  8350                           
  8351                           ;USART.c: 39: void UART_Write_String(char* buf);USART.c: 40: {;USART.c: 41:     int i=0;
  8352  1C37  01F6               	clrf	UART_Write_String@i
  8353  1C38  01F7               	clrf	UART_Write_String@i+1
  8354                           
  8355                           ;USART.c: 42:     while(buf[i] != '\0')
  8356  1C39  2C5C               	goto	l3035
  8357  1C3A                     l3031:
  8358                           
  8359                           ;USART.c: 43:         UART_Write(buf[i++]);
  8360  1C3A  0876               	movf	UART_Write_String@i,w
  8361  1C3B  0771               	addwf	UART_Write_String@buf,w
  8362  1C3C  00F4               	movwf	??_UART_Write_String+1
  8363  1C3D  0872               	movf	UART_Write_String@buf+1,w
  8364  1C3E  00F3               	movwf	??_UART_Write_String
  8365  1C3F  1803               	skipnc
  8366  1C40  0AF3               	incf	??_UART_Write_String,f
  8367  1C41  1FF6               	btfss	UART_Write_String@i,7
  8368  1C42  2C44               	goto	u5110
  8369  1C43  03F3               	decf	??_UART_Write_String,f
  8370  1C44                     u5110:
  8371  1C44  0873               	movf	??_UART_Write_String,w
  8372  1C45  00F5               	movwf	??_UART_Write_String+2
  8373  1C46  0875               	movf	??_UART_Write_String+2,w
  8374  1C47  1283               	bcf	3,5	;RP0=0, select bank0
  8375  1C48  1303               	bcf	3,6	;RP1=0, select bank0
  8376  1C49  00FF               	movwf	btemp+1
  8377  1C4A  0874               	movf	??_UART_Write_String+1,w
  8378  1C4B  0084               	movwf	4
  8379  1C4C  120A  118A  2003  160A  158A  	fcall	stringtab
  8380  1C51  160A  158A  2349  160A  158A  	fcall	_UART_Write
  8381  1C56                     l3033:
  8382  1C56  3001               	movlw	1
  8383  1C57  07F6               	addwf	UART_Write_String@i,f
  8384  1C58  1803               	skipnc
  8385  1C59  0AF7               	incf	UART_Write_String@i+1,f
  8386  1C5A  3000               	movlw	0
  8387  1C5B  07F7               	addwf	UART_Write_String@i+1,f
  8388  1C5C                     l3035:
  8389                           
  8390                           ;USART.c: 42:     while(buf[i] != '\0')
  8391  1C5C  0876               	movf	UART_Write_String@i,w
  8392  1C5D  0771               	addwf	UART_Write_String@buf,w
  8393  1C5E  00F4               	movwf	??_UART_Write_String+1
  8394  1C5F  0872               	movf	UART_Write_String@buf+1,w
  8395  1C60  00F3               	movwf	??_UART_Write_String
  8396  1C61  1803               	skipnc
  8397  1C62  0AF3               	incf	??_UART_Write_String,f
  8398  1C63  1FF6               	btfss	UART_Write_String@i,7
  8399  1C64  2C66               	goto	u5120
  8400  1C65  03F3               	decf	??_UART_Write_String,f
  8401  1C66                     u5120:
  8402  1C66  0873               	movf	??_UART_Write_String,w
  8403  1C67  00F5               	movwf	??_UART_Write_String+2
  8404  1C68  0875               	movf	??_UART_Write_String+2,w
  8405  1C69  1283               	bcf	3,5	;RP0=0, select bank0
  8406  1C6A  1303               	bcf	3,6	;RP1=0, select bank0
  8407  1C6B  00FF               	movwf	btemp+1
  8408  1C6C  0874               	movf	??_UART_Write_String+1,w
  8409  1C6D  0084               	movwf	4
  8410  1C6E  120A  118A  2003  160A  158A  	fcall	stringtab
  8411  1C73  3A00               	xorlw	0
  8412  1C74  1D03               	skipz
  8413  1C75  2C77               	goto	u5131
  8414  1C76  2C78               	goto	u5130
  8415  1C77                     u5131:
  8416  1C77  2C3A               	goto	l3031
  8417  1C78                     u5130:
  8418  1C78                     l119:
  8419  1C78  0008               	return
  8420  1C79                     __end_of_UART_Write_String:
  8421                           
  8422                           	psect	text27
  8423  1B49                     __ptext27:	
  8424 ;; *************** function _UART_Write *****************
  8425 ;; Defined at:
  8426 ;;		line 33 in file "USART.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;  data            1    wreg     unsigned char 
  8429 ;; Auto vars:     Size  Location     Type
  8430 ;;  data            1    0[COMMON] unsigned char 
  8431 ;; Return value:  Size  Location     Type
  8432 ;;                  1    wreg      void 
  8433 ;; Registers used:
  8434 ;;		wreg
  8435 ;; Tracked objects:
  8436 ;;		On entry : 0/0
  8437 ;;		On exit  : 0/0
  8438 ;;		Unchanged: 0/0
  8439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8440 ;;      Params:         0       0       0       0       0
  8441 ;;      Locals:         1       0       0       0       0
  8442 ;;      Temps:          0       0       0       0       0
  8443 ;;      Totals:         1       0       0       0       0
  8444 ;;Total ram usage:        1 bytes
  8445 ;; Hardware stack levels used:    1
  8446 ;; This function calls:
  8447 ;;		Nothing
  8448 ;; This function is called by:
  8449 ;;		_main
  8450 ;;		_UART_Write_String
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           
  8455                           ;psect for function _UART_Write
  8456  1B49                     _UART_Write:
  8457                           
  8458                           ;incstack = 0
  8459                           ; Regs used in _UART_Write: [wreg]
  8460                           ;UART_Write@data stored from wreg
  8461  1B49  00F0               	movwf	UART_Write@data
  8462  1B4A                     l2641:
  8463  1B4A                     l110:	
  8464                           ;USART.c: 33: void UART_Write(unsigned char data);USART.c: 34: {;USART.c: 35:   while(!T
      +                          RMT);
  8465                           
  8466  1B4A  1683               	bsf	3,5	;RP0=1, select bank1
  8467  1B4B  1303               	bcf	3,6	;RP1=0, select bank1
  8468  1B4C  1C98               	btfss	24,1	;volatile
  8469  1B4D  2B4F               	goto	u4051
  8470  1B4E  2B50               	goto	u4050
  8471  1B4F                     u4051:
  8472  1B4F  2B4A               	goto	l110
  8473  1B50                     u4050:
  8474  1B50                     l2643:
  8475                           
  8476                           ;USART.c: 36:   TXREG = data;
  8477  1B50  0870               	movf	UART_Write@data,w
  8478  1B51  1283               	bcf	3,5	;RP0=0, select bank0
  8479  1B52  1303               	bcf	3,6	;RP1=0, select bank0
  8480  1B53  0099               	movwf	25	;volatile
  8481  1B54                     l113:
  8482  1B54  0008               	return
  8483  1B55                     __end_of_UART_Write:
  8484                           
  8485                           	psect	text28
  8486  1B55                     __ptext28:	
  8487 ;; *************** function _UART_TX_Init *****************
  8488 ;; Defined at:
  8489 ;;		line 18 in file "USART.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;		None
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;		None
  8494 ;; Return value:  Size  Location     Type
  8495 ;;                  1    wreg      void 
  8496 ;; Registers used:
  8497 ;;		wreg
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/0
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8503 ;;      Params:         0       0       0       0       0
  8504 ;;      Locals:         0       0       0       0       0
  8505 ;;      Temps:          0       0       0       0       0
  8506 ;;      Totals:         0       0       0       0       0
  8507 ;;Total ram usage:        0 bytes
  8508 ;; Hardware stack levels used:    1
  8509 ;; This function calls:
  8510 ;;		Nothing
  8511 ;; This function is called by:
  8512 ;;		_main
  8513 ;; This function uses a non-reentrant model
  8514 ;;
  8515                           
  8516                           
  8517                           ;psect for function _UART_TX_Init
  8518  1B55                     _UART_TX_Init:
  8519  1B55                     l3011:	
  8520                           ;incstack = 0
  8521                           ; Regs used in _UART_TX_Init: [wreg]
  8522                           
  8523                           
  8524                           ;USART.c: 20:   BRGH = 0;
  8525  1B55  1683               	bsf	3,5	;RP0=1, select bank1
  8526  1B56  1303               	bcf	3,6	;RP1=0, select bank1
  8527  1B57  1118               	bcf	24,2	;volatile
  8528  1B58                     l3013:
  8529                           
  8530                           ;USART.c: 21:   SPBRG = 12;
  8531  1B58  300C               	movlw	12
  8532  1B59  0099               	movwf	25	;volatile
  8533  1B5A                     l3015:
  8534                           
  8535                           ;USART.c: 23:   SYNC = 0;
  8536  1B5A  1218               	bcf	24,4	;volatile
  8537  1B5B                     l3017:
  8538                           
  8539                           ;USART.c: 24:   SPEN = 1;
  8540  1B5B  1283               	bcf	3,5	;RP0=0, select bank0
  8541  1B5C  1303               	bcf	3,6	;RP1=0, select bank0
  8542  1B5D  1798               	bsf	24,7	;volatile
  8543  1B5E                     l3019:
  8544                           
  8545                           ;USART.c: 26:   TRISC6 = 0;
  8546  1B5E  1683               	bsf	3,5	;RP0=1, select bank1
  8547  1B5F  1303               	bcf	3,6	;RP1=0, select bank1
  8548  1B60  1307               	bcf	7,6	;volatile
  8549  1B61                     l3021:
  8550                           
  8551                           ;USART.c: 27:   TRISC7 = 1;
  8552  1B61  1787               	bsf	7,7	;volatile
  8553  1B62                     l3023:
  8554                           
  8555                           ;USART.c: 28:   TXEN = 1;
  8556  1B62  1698               	bsf	24,5	;volatile
  8557  1B63                     l3025:
  8558                           
  8559                           ;USART.c: 30:   RCSTAbits.CREN = 1;
  8560  1B63  1283               	bcf	3,5	;RP0=0, select bank0
  8561  1B64  1303               	bcf	3,6	;RP1=0, select bank0
  8562  1B65  1618               	bsf	24,4	;volatile
  8563  1B66                     l107:
  8564  1B66  0008               	return
  8565  1B67                     __end_of_UART_TX_Init:
  8566  007E                     btemp	set	126	;btemp
  8567  007E                     wtemp0	set	126
  8568                           
  8569                           	psect	config
  8570                           
  8571                           ;Config register CONFIG1 @ 0x2007
  8572                           ;	Oscillator Selection bits
  8573                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8574                           ;	Watchdog Timer Enable bit
  8575                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8576                           ;	Power-up Timer Enable bit
  8577                           ;	PWRTE = OFF, PWRT disabled
  8578                           ;	RE3/MCLR pin function select bit
  8579                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8580                           ;	Code Protection bit
  8581                           ;	CP = OFF, Program memory code protection is disabled
  8582                           ;	Data Code Protection bit
  8583                           ;	CPD = OFF, Data memory code protection is disabled
  8584                           ;	Brown Out Reset Selection bits
  8585                           ;	BOREN = OFF, BOR disabled
  8586                           ;	Internal External Switchover bit
  8587                           ;	IESO = ON, Internal/External Switchover mode is enabled
  8588                           ;	Fail-Safe Clock Monitor Enabled bit
  8589                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8590                           ;	Low Voltage Programming Enable bit
  8591                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8592                           ;	In-Circuit Debugger Mode bit
  8593                           ;	DEBUG = 0x1, unprogrammed default
  8594  2007                     	org	8199
  8595  2007  2CD4               	dw	11476
  8596                           
  8597                           ;Config register CONFIG2 @ 0x2008
  8598                           ;	Brown-out Reset Selection bit
  8599                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  8600                           ;	Flash Program Memory Self Write Enable bits
  8601                           ;	WRT = OFF, Write protection off
  8602  2008                     	org	8200
  8603  2008  3EFF               	dw	16127
  8604                           
  8605                           	psect	text1_split_1
  8606  01B9                     u5270:
  8607  01B9                     l3133:
  8608  01B9  1683               	bsf	3,5	;RP0=1, select bank1
  8609  01BA  1303               	bcf	3,6	;RP1=0, select bank1
  8610  01BB  0846               	movf	(sprintf@fval+3)^(0+128),w
  8611  01BC  00F3               	movwf	___fleq@ff1+3
  8612  01BD  0845               	movf	(sprintf@fval+2)^(0+128),w
  8613  01BE  00F2               	movwf	___fleq@ff1+2
  8614  01BF  0844               	movf	(sprintf@fval+1)^(0+128),w
  8615  01C0  00F1               	movwf	___fleq@ff1+1
  8616  01C1  0843               	movf	sprintf@fval^(0+128),w
  8617  01C2  00F0               	movwf	___fleq@ff1
  8618  01C3  3000               	movlw	0
  8619  01C4  00F7               	movwf	___fleq@ff2+3
  8620  01C5  3000               	movlw	0
  8621  01C6  00F6               	movwf	___fleq@ff2+2
  8622  01C7  3000               	movlw	0
  8623  01C8  00F5               	movwf	___fleq@ff2+1
  8624  01C9  3000               	movlw	0
  8625  01CA  00F4               	movwf	___fleq@ff2
  8626  01CB  160A  158A  24BD  120A  118A  	fcall	___fleq
  8627  01D0  1803               	btfsc	3,0
  8628  01D1  29D3               	goto	u5281
  8629  01D2  29D4               	goto	u5280
  8630  01D3                     u5281:
  8631  01D3  2A7C               	goto	l3153
  8632  01D4                     u5280:
  8633  01D4                     l3135:
  8634  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  8635  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  8636  01D6  0846               	movf	(sprintf@fval+3)^(0+128),w
  8637  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  8638  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  8639  01D9  00D4               	movwf	___fltol@f1+3
  8640  01DA  1683               	bsf	3,5	;RP0=1, select bank1
  8641  01DB  1303               	bcf	3,6	;RP1=0, select bank1
  8642  01DC  0845               	movf	(sprintf@fval+2)^(0+128),w
  8643  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  8644  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  8645  01DF  00D3               	movwf	___fltol@f1+2
  8646  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  8647  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  8648  01E2  0844               	movf	(sprintf@fval+1)^(0+128),w
  8649  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  8650  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  8651  01E5  00D2               	movwf	___fltol@f1+1
  8652  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  8653  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  8654  01E8  0843               	movf	sprintf@fval^(0+128),w
  8655  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  8656  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  8657  01EB  00D1               	movwf	___fltol@f1
  8658  01EC  120A  158A  2006  120A  118A  	fcall	___fltol
  8659  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  8660  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  8661  01F3  0854               	movf	?___fltol+3,w
  8662  01F4  0453               	iorwf	?___fltol+2,w
  8663  01F5  0452               	iorwf	?___fltol+1,w
  8664  01F6  0451               	iorwf	?___fltol,w
  8665  01F7  1D03               	skipz
  8666  01F8  29FA               	goto	u5291
  8667  01F9  29FB               	goto	u5290
  8668  01FA                     u5291:
  8669  01FA  2A7C               	goto	l3153
  8670  01FB                     u5290:
  8671  01FB                     l3137:
  8672  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  8673  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  8674  01FD  0842               	movf	(sprintf@eexp+1)^(0+128),w
  8675  01FE  3A80               	xorlw	128
  8676  01FF  00FF               	movwf	btemp+1
  8677  0200  3080               	movlw	128
  8678  0201  027F               	subwf	btemp+1,w
  8679  0202  1D03               	skipz
  8680  0203  2A06               	goto	u5305
  8681  0204  3002               	movlw	2
  8682  0205  0241               	subwf	sprintf@eexp^(0+128),w
  8683  0206                     u5305:
  8684  0206  1C03               	skipc
  8685  0207  2A09               	goto	u5301
  8686  0208  2A0A               	goto	u5300
  8687  0209                     u5301:
  8688  0209  2A7C               	goto	l3153
  8689  020A                     u5300:
  8690  020A                     l3139:
  8691                           
  8692                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmpval.integ < 4.
      +                          294967296){
  8693  020A  1683               	bsf	3,5	;RP0=1, select bank1
  8694  020B  1303               	bcf	3,6	;RP1=0, select bank1
  8695  020C  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  8696  020D  00F3               	movwf	___flge@ff1+3
  8697  020E  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  8698  020F  00F2               	movwf	___flge@ff1+2
  8699  0210  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  8700  0211  00F1               	movwf	___flge@ff1+1
  8701  0212  0839               	movf	sprintf@tmpval^(0+128),w
  8702  0213  00F0               	movwf	___flge@ff1
  8703  0214  3040               	movlw	64
  8704  0215  00F7               	movwf	___flge@ff2+3
  8705  0216  3089               	movlw	137
  8706  0217  00F6               	movwf	___flge@ff2+2
  8707  0218  3070               	movlw	112
  8708  0219  00F5               	movwf	___flge@ff2+1
  8709  021A  305F               	movlw	95
  8710  021B  00F4               	movwf	___flge@ff2
  8711  021C  160A  118A  2006  120A  118A  	fcall	___flge
  8712  0221  1803               	btfsc	3,0
  8713  0222  2A24               	goto	u5311
  8714  0223  2A25               	goto	u5310
  8715  0224                     u5311:
  8716  0224  2A2E               	goto	l3143
  8717  0225                     u5310:
  8718  0225                     l3141:
  8719                           
  8720                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp -= (sizeof dpo
      +                          wers/sizeof dpowers[0])-1;
  8721  0225  30F7               	movlw	247
  8722  0226  1683               	bsf	3,5	;RP0=1, select bank1
  8723  0227  1303               	bcf	3,6	;RP1=0, select bank1
  8724  0228  07C1               	addwf	sprintf@eexp^(0+128),f
  8725  0229  1803               	skipnc
  8726  022A  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  8727  022B  30FF               	movlw	255
  8728  022C  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  8729                           
  8730                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  8731  022D  2A36               	goto	l3145
  8732  022E                     l3143:
  8733                           
  8734                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp -= (sizeof dpo
      +                          wers/sizeof dpowers[0])-2;
  8735  022E  30F8               	movlw	248
  8736  022F  1683               	bsf	3,5	;RP0=1, select bank1
  8737  0230  1303               	bcf	3,6	;RP1=0, select bank1
  8738  0231  07C1               	addwf	sprintf@eexp^(0+128),f
  8739  0232  1803               	skipnc
  8740  0233  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  8741  0234  30FF               	movlw	255
  8742  0235  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  8743  0236                     l3145:
  8744                           
  8745                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = ((sizeof(doubl
      +                          e)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  8746  0236  0841               	movf	sprintf@eexp^(0+128),w
  8747  0237  120A  158A  2140  120A  118A  	fcall	_scale
  8748  023C  1283               	bcf	3,5	;RP0=0, select bank0
  8749  023D  1303               	bcf	3,6	;RP1=0, select bank0
  8750  023E  0841               	movf	?_scale+3,w
  8751  023F  1683               	bsf	3,5	;RP0=1, select bank1
  8752  0240  1303               	bcf	3,6	;RP1=0, select bank1
  8753  0241  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  8754  0242  1283               	bcf	3,5	;RP0=0, select bank0
  8755  0243  1303               	bcf	3,6	;RP1=0, select bank0
  8756  0244  0840               	movf	?_scale+2,w
  8757  0245  1683               	bsf	3,5	;RP0=1, select bank1
  8758  0246  1303               	bcf	3,6	;RP1=0, select bank1
  8759  0247  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  8760  0248  1283               	bcf	3,5	;RP0=0, select bank0
  8761  0249  1303               	bcf	3,6	;RP1=0, select bank0
  8762  024A  083F               	movf	?_scale+1,w
  8763  024B  1683               	bsf	3,5	;RP0=1, select bank1
  8764  024C  1303               	bcf	3,6	;RP1=0, select bank1
  8765  024D  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  8766  024E  1283               	bcf	3,5	;RP0=0, select bank0
  8767  024F  1303               	bcf	3,6	;RP1=0, select bank0
  8768  0250  083E               	movf	?_scale,w
  8769  0251  1683               	bsf	3,5	;RP0=1, select bank1
  8770  0252  1303               	bcf	3,6	;RP1=0, select bank1
  8771  0253  00B9               	movwf	sprintf@tmpval^(0+128)
  8772  0254                     l3147:
  8773  0254  0846               	movf	(sprintf@fval+3)^(0+128),w
  8774  0255  00F3               	movwf	__div_to_l_@f1+3
  8775  0256  0845               	movf	(sprintf@fval+2)^(0+128),w
  8776  0257  00F2               	movwf	__div_to_l_@f1+2
  8777  0258  0844               	movf	(sprintf@fval+1)^(0+128),w
  8778  0259  00F1               	movwf	__div_to_l_@f1+1
  8779  025A  0843               	movf	sprintf@fval^(0+128),w
  8780  025B  00F0               	movwf	__div_to_l_@f1
  8781  025C  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  8782  025D  00F7               	movwf	__div_to_l_@f2+3
  8783  025E  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  8784  025F  00F6               	movwf	__div_to_l_@f2+2
  8785  0260  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  8786  0261  00F5               	movwf	__div_to_l_@f2+1
  8787  0262  0839               	movf	sprintf@tmpval^(0+128),w
  8788  0263  00F4               	movwf	__div_to_l_@f2
  8789  0264  120A  158A  2082  120A  118A  	fcall	__div_to_l_
  8790  0269  0873               	movf	?__div_to_l_+3,w
  8791  026A  1683               	bsf	3,5	;RP0=1, select bank1
  8792  026B  1303               	bcf	3,6	;RP1=0, select bank1
  8793  026C  00C0               	movwf	(sprintf@val+3)^(0+128)
  8794  026D  0872               	movf	?__div_to_l_+2,w
  8795  026E  00BF               	movwf	(sprintf@val+2)^(0+128)
  8796  026F  0871               	movf	?__div_to_l_+1,w
  8797  0270  00BE               	movwf	(sprintf@val+1)^(0+128)
  8798  0271  0870               	movf	?__div_to_l_,w
  8799  0272  00BD               	movwf	sprintf@val^(0+128)
  8800  0273                     l3151:
  8801                           
  8802                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval = 0.0;
  8803  0273  3000               	movlw	0
  8804  0274  00C6               	movwf	(sprintf@fval+3)^(0+128)
  8805  0275  3000               	movlw	0
  8806  0276  00C5               	movwf	(sprintf@fval+2)^(0+128)
  8807  0277  3000               	movlw	0
  8808  0278  00C4               	movwf	(sprintf@fval+1)^(0+128)
  8809  0279  3000               	movlw	0
  8810  027A  00C3               	movwf	sprintf@fval^(0+128)
  8811                           
  8812                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else {
  8813  027B  2B00               	goto	l3159
  8814  027C                     l3153:
  8815                           
  8816                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = (unsigned long
      +                          )fval;
  8817  027C  1683               	bsf	3,5	;RP0=1, select bank1
  8818  027D  1303               	bcf	3,6	;RP1=0, select bank1
  8819  027E  0846               	movf	(sprintf@fval+3)^(0+128),w
  8820  027F  1283               	bcf	3,5	;RP0=0, select bank0
  8821  0280  1303               	bcf	3,6	;RP1=0, select bank0
  8822  0281  00D4               	movwf	___fltol@f1+3
  8823  0282  1683               	bsf	3,5	;RP0=1, select bank1
  8824  0283  1303               	bcf	3,6	;RP1=0, select bank1
  8825  0284  0845               	movf	(sprintf@fval+2)^(0+128),w
  8826  0285  1283               	bcf	3,5	;RP0=0, select bank0
  8827  0286  1303               	bcf	3,6	;RP1=0, select bank0
  8828  0287  00D3               	movwf	___fltol@f1+2
  8829  0288  1683               	bsf	3,5	;RP0=1, select bank1
  8830  0289  1303               	bcf	3,6	;RP1=0, select bank1
  8831  028A  0844               	movf	(sprintf@fval+1)^(0+128),w
  8832  028B  1283               	bcf	3,5	;RP0=0, select bank0
  8833  028C  1303               	bcf	3,6	;RP1=0, select bank0
  8834  028D  00D2               	movwf	___fltol@f1+1
  8835  028E  1683               	bsf	3,5	;RP0=1, select bank1
  8836  028F  1303               	bcf	3,6	;RP1=0, select bank1
  8837  0290  0843               	movf	sprintf@fval^(0+128),w
  8838  0291  1283               	bcf	3,5	;RP0=0, select bank0
  8839  0292  1303               	bcf	3,6	;RP1=0, select bank0
  8840  0293  00D1               	movwf	___fltol@f1
  8841  0294  120A  158A  2006  120A  118A  	fcall	___fltol
  8842  0299  1283               	bcf	3,5	;RP0=0, select bank0
  8843  029A  1303               	bcf	3,6	;RP1=0, select bank0
  8844  029B  0854               	movf	?___fltol+3,w
  8845  029C  1683               	bsf	3,5	;RP0=1, select bank1
  8846  029D  1303               	bcf	3,6	;RP1=0, select bank1
  8847  029E  00C0               	movwf	(sprintf@val+3)^(0+128)
  8848  029F  1283               	bcf	3,5	;RP0=0, select bank0
  8849  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  8850  02A1  0853               	movf	?___fltol+2,w
  8851  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  8852  02A3  1303               	bcf	3,6	;RP1=0, select bank1
  8853  02A4  00BF               	movwf	(sprintf@val+2)^(0+128)
  8854  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  8855  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  8856  02A7  0852               	movf	?___fltol+1,w
  8857  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  8858  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  8859  02AA  00BE               	movwf	(sprintf@val+1)^(0+128)
  8860  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  8861  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  8862  02AD  0851               	movf	?___fltol,w
  8863  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  8864  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  8865  02B0  00BD               	movwf	sprintf@val^(0+128)
  8866  02B1                     l3155:
  8867                           
  8868                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -= (double)val;
  8869  02B1  0840               	movf	(sprintf@val+3)^(0+128),w
  8870  02B2  00F3               	movwf	___xxtofl@val+3
  8871  02B3  083F               	movf	(sprintf@val+2)^(0+128),w
  8872  02B4  00F2               	movwf	___xxtofl@val+2
  8873  02B5  083E               	movf	(sprintf@val+1)^(0+128),w
  8874  02B6  00F1               	movwf	___xxtofl@val+1
  8875  02B7  083D               	movf	sprintf@val^(0+128),w
  8876  02B8  00F0               	movwf	___xxtofl@val
  8877  02B9  3000               	movlw	0
  8878  02BA  160A  158A  2689  120A  118A  	fcall	___xxtofl
  8879  02BF  0873               	movf	?___xxtofl+3,w
  8880  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  8881  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  8882  02C2  00E9               	movwf	___flsub@a+3
  8883  02C3  0872               	movf	?___xxtofl+2,w
  8884  02C4  00E8               	movwf	___flsub@a+2
  8885  02C5  0871               	movf	?___xxtofl+1,w
  8886  02C6  00E7               	movwf	___flsub@a+1
  8887  02C7  0870               	movf	?___xxtofl,w
  8888  02C8  00E6               	movwf	___flsub@a
  8889  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  8890  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  8891  02CB  0846               	movf	(sprintf@fval+3)^(0+128),w
  8892  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  8893  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  8894  02CE  00ED               	movwf	___flsub@b+3
  8895  02CF  1683               	bsf	3,5	;RP0=1, select bank1
  8896  02D0  1303               	bcf	3,6	;RP1=0, select bank1
  8897  02D1  0845               	movf	(sprintf@fval+2)^(0+128),w
  8898  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  8899  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  8900  02D4  00EC               	movwf	___flsub@b+2
  8901  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  8902  02D6  1303               	bcf	3,6	;RP1=0, select bank1
  8903  02D7  0844               	movf	(sprintf@fval+1)^(0+128),w
  8904  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  8905  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  8906  02DA  00EB               	movwf	___flsub@b+1
  8907  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  8908  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  8909  02DD  0843               	movf	sprintf@fval^(0+128),w
  8910  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  8911  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  8912  02E0  00EA               	movwf	___flsub@b
  8913  02E1  160A  158A  238D  120A  118A  	fcall	___flsub
  8914  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  8915  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  8916  02E8  0869               	movf	?___flsub+3,w
  8917  02E9  1683               	bsf	3,5	;RP0=1, select bank1
  8918  02EA  1303               	bcf	3,6	;RP1=0, select bank1
  8919  02EB  00C6               	movwf	(sprintf@fval+3)^(0+128)
  8920  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  8921  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  8922  02EE  0868               	movf	?___flsub+2,w
  8923  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  8924  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  8925  02F1  00C5               	movwf	(sprintf@fval+2)^(0+128)
  8926  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  8927  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  8928  02F4  0867               	movf	?___flsub+1,w
  8929  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  8930  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  8931  02F7  00C4               	movwf	(sprintf@fval+1)^(0+128)
  8932  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  8933  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  8934  02FA  0866               	movf	?___flsub,w
  8935  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  8936  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  8937  02FD  00C3               	movwf	sprintf@fval^(0+128)
  8938  02FE                     l3157:
  8939                           
  8940                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp = 0;
  8941  02FE  01C1               	clrf	sprintf@eexp^(0+128)
  8942  02FF  01C2               	clrf	(sprintf@eexp+1)^(0+128)
  8943  0300                     l3159:
  8944                           
  8945                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c = 1 ; c != (siz
      +                          eof dpowers/sizeof dpowers[0]) ; c++)
  8946  0300  01C9               	clrf	sprintf@c^(0+128)
  8947  0301  0AC9               	incf	sprintf@c^(0+128),f
  8948  0302                     l3165:
  8949                           
  8950                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val < dpowers[c])
  8951  0302  0849               	movf	sprintf@c^(0+128),w
  8952  0303  00AB               	movwf	??_sprintf^(0+128)
  8953  0304  3001               	movlw	1
  8954  0305                     u5325:
  8955  0305  1003               	clrc
  8956  0306  0DAB               	rlf	??_sprintf^(0+128),f
  8957  0307  3EFF               	addlw	-1
  8958  0308  1D03               	skipz
  8959  0309  2B05               	goto	u5325
  8960  030A  1003               	clrc
  8961  030B  0D2B               	rlf	??_sprintf^(0+128),w
  8962  030C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8963  030D  0084               	movwf	4
  8964  030E  120A  118A  200D  120A  118A  	fcall	stringdir
  8965  0313  00AC               	movwf	(??_sprintf+1)^(0+128)
  8966  0314  120A  118A  200D  120A  118A  	fcall	stringdir
  8967  0319  00AD               	movwf	((??_sprintf+1)^(0+128)+1)
  8968  031A  120A  118A  200D  120A  118A  	fcall	stringdir
  8969  031F  00AE               	movwf	((??_sprintf+1)^(0+128)+2)
  8970  0320  120A  118A  200D  120A  118A  	fcall	stringdir
  8971  0325  00AF               	movwf	((??_sprintf+1)^(0+128)+3)
  8972  0326  082F               	movf	(??_sprintf+4)^(0+128),w
  8973  0327  0240               	subwf	(sprintf@val+3)^(0+128),w
  8974  0328  1D03               	skipz
  8975  0329  2B34               	goto	u5335
  8976  032A  082E               	movf	(??_sprintf+3)^(0+128),w
  8977  032B  023F               	subwf	(sprintf@val+2)^(0+128),w
  8978  032C  1D03               	skipz
  8979  032D  2B34               	goto	u5335
  8980  032E  082D               	movf	(??_sprintf+2)^(0+128),w
  8981  032F  023E               	subwf	(sprintf@val+1)^(0+128),w
  8982  0330  1D03               	skipz
  8983  0331  2B34               	goto	u5335
  8984  0332  082C               	movf	(??_sprintf+1)^(0+128),w
  8985  0333  023D               	subwf	sprintf@val^(0+128),w
  8986  0334                     u5335:
  8987  0334  1803               	skipnc
  8988  0335  2B37               	goto	u5331
  8989  0336  2B38               	goto	u5330
  8990  0337                     u5331:
  8991  0337  2B39               	goto	l3169
  8992  0338                     u5330:
  8993  0338  2B43               	goto	l3171
  8994  0339                     l3169:
  8995  0339  3001               	movlw	1
  8996  033A  00AB               	movwf	??_sprintf^(0+128)
  8997  033B  082B               	movf	??_sprintf^(0+128),w
  8998  033C  07C9               	addwf	sprintf@c^(0+128),f
  8999  033D  300A               	movlw	10
  9000  033E  0649               	xorwf	sprintf@c^(0+128),w
  9001  033F  1D03               	btfss	3,2
  9002  0340  2B42               	goto	u5341
  9003  0341  2B43               	goto	u5340
  9004  0342                     u5341:
  9005  0342  2B02               	goto	l3165
  9006  0343                     u5340:
  9007  0343                     l3171:
  9008                           
  9009                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -= prec + c + e
      +                          exp;
  9010  0343  0849               	movf	sprintf@c^(0+128),w
  9011  0344  0747               	addwf	sprintf@prec^(0+128),w
  9012  0345  00AB               	movwf	??_sprintf^(0+128)
  9013  0346  0848               	movf	(sprintf@prec+1)^(0+128),w
  9014  0347  1803               	skipnc
  9015  0348  0A48               	incf	(sprintf@prec+1)^(0+128),w
  9016  0349  00AC               	movwf	(??_sprintf^(0+128)+1)
  9017  034A  0841               	movf	sprintf@eexp^(0+128),w
  9018  034B  072B               	addwf	??_sprintf^(0+128),w
  9019  034C  00AD               	movwf	(??_sprintf+2)^(0+128)
  9020  034D  0842               	movf	(sprintf@eexp+1)^(0+128),w
  9021  034E  1803               	skipnc
  9022  034F  0A42               	incf	(sprintf@eexp+1)^(0+128),w
  9023  0350  072C               	addwf	(??_sprintf+1)^(0+128),w
  9024  0351  00AE               	movwf	(??_sprintf+3)^(0+128)
  9025  0352  082D               	movf	(??_sprintf+2)^(0+128),w
  9026  0353  02B7               	subwf	sprintf@width^(0+128),f
  9027  0354  082E               	movf	(??_sprintf+3)^(0+128),w
  9028  0355  1C03               	skipc
  9029  0356  03B8               	decf	(sprintf@width+1)^(0+128),f
  9030  0357  02B8               	subwf	(sprintf@width+1)^(0+128),f
  9031                           
  9032                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9033  0358  0847               	movf	sprintf@prec^(0+128),w
  9034  0359  0448               	iorwf	(sprintf@prec+1)^(0+128),w
  9035  035A  1903               	btfsc	3,2
  9036  035B  2B5D               	goto	u5351
  9037  035C  2B5E               	goto	u5350
  9038  035D                     u5351:
  9039  035D  2B64               	goto	l3175
  9040  035E                     u5350:
  9041  035E                     l3173:
  9042                           
  9043                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width--;
  9044  035E  30FF               	movlw	255
  9045  035F  07B7               	addwf	sprintf@width^(0+128),f
  9046  0360  1803               	skipnc
  9047  0361  0AB8               	incf	(sprintf@width+1)^(0+128),f
  9048  0362  30FF               	movlw	255
  9049  0363  07B8               	addwf	(sprintf@width+1)^(0+128),f
  9050  0364                     l3175:
  9051                           
  9052                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag & 0x03)
  9053  0364  3003               	movlw	3
  9054  0365  0535               	andwf	sprintf@flag^(0+128),w
  9055  0366  00AB               	movwf	??_sprintf^(0+128)
  9056  0367  3000               	movlw	0
  9057  0368  0536               	andwf	(sprintf@flag+1)^(0+128),w
  9058  0369  00AC               	movwf	(??_sprintf+1)^(0+128)
  9059  036A  082B               	movf	??_sprintf^(0+128),w
  9060  036B  042C               	iorwf	(??_sprintf^(0+128)+1),w
  9061  036C  1903               	btfsc	3,2
  9062  036D  2B6F               	goto	u5361
  9063  036E  2B70               	goto	u5360
  9064  036F                     u5361:
  9065  036F  2B89               	goto	l3185
  9066  0370                     u5360:
  9067  0370                     l3177:
  9068                           
  9069                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width--;
  9070  0370  30FF               	movlw	255
  9071  0371  07B7               	addwf	sprintf@width^(0+128),f
  9072  0372  1803               	skipnc
  9073  0373  0AB8               	incf	(sprintf@width+1)^(0+128),f
  9074  0374  30FF               	movlw	255
  9075  0375  07B8               	addwf	(sprintf@width+1)^(0+128),f
  9076  0376  2B89               	goto	l3185
  9077  0377                     l3179:
  9078                           
  9079                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp++ = (' ')));
  9080  0377  3020               	movlw	32
  9081  0378  1683               	bsf	3,5	;RP0=1, select bank1
  9082  0379  1303               	bcf	3,6	;RP1=0, select bank1
  9083  037A  00AB               	movwf	??_sprintf^(0+128)
  9084  037B  0820               	movf	sprintf@sp^(0+128),w
  9085  037C  0084               	movwf	4
  9086  037D  1783               	bsf	3,7
  9087  037E  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  9088  037F  1383               	bcf	3,7
  9089  0380  082B               	movf	??_sprintf^(0+128),w
  9090  0381  0080               	movwf	0
  9091  0382                     l3181:
  9092  0382  3001               	movlw	1
  9093  0383  07A0               	addwf	sprintf@sp^(0+128),f
  9094  0384  1803               	skipnc
  9095  0385  0AA1               	incf	(sprintf@sp+1)^(0+128),f
  9096  0386  3000               	movlw	0
  9097  0387  07A1               	addwf	(sprintf@sp+1)^(0+128),f
  9098  0388  2B70               	goto	l3177
  9099  0389                     l3185:
  9100                           
  9101                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(width > 0) {
  9102  0389  0838               	movf	(sprintf@width+1)^(0+128),w
  9103  038A  3A80               	xorlw	128
  9104  038B  00FF               	movwf	btemp+1
  9105  038C  3080               	movlw	128
  9106  038D  027F               	subwf	btemp+1,w
  9107  038E  1D03               	skipz
  9108  038F  2B92               	goto	u5375
  9109  0390  3001               	movlw	1
  9110  0391  0237               	subwf	sprintf@width^(0+128),w
  9111  0392                     u5375:
  9112  0392  1803               	skipnc
  9113  0393  2B95               	goto	u5371
  9114  0394  2B96               	goto	u5370
  9115  0395                     u5371:
  9116  0395  2B77               	goto	l3179
  9117  0396                     u5370:
  9118  0396                     l3187:
  9119                           
  9120                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x03)
  9121  0396  3003               	movlw	3
  9122  0397  1683               	bsf	3,5	;RP0=1, select bank1
  9123  0398  1303               	bcf	3,6	;RP1=0, select bank1
  9124  0399  0535               	andwf	sprintf@flag^(0+128),w
  9125  039A  00AB               	movwf	??_sprintf^(0+128)
  9126  039B  3000               	movlw	0
  9127  039C  0536               	andwf	(sprintf@flag+1)^(0+128),w
  9128  039D  00AC               	movwf	(??_sprintf+1)^(0+128)
  9129  039E  082B               	movf	??_sprintf^(0+128),w
  9130  039F  042C               	iorwf	(??_sprintf^(0+128)+1),w
  9131  03A0  1903               	btfsc	3,2
  9132  03A1  2BA3               	goto	u5381
  9133  03A2  2BA4               	goto	u5380
  9134  03A3                     u5381:
  9135  03A3  2C39               	goto	l3201
  9136  03A4                     u5380:
  9137  03A4                     l3189:
  9138                           
  9139                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp++ = ('-')));
  9140  03A4  302D               	movlw	45
  9141  03A5  00AB               	movwf	??_sprintf^(0+128)
  9142  03A6  0820               	movf	sprintf@sp^(0+128),w
  9143  03A7  0084               	movwf	4
  9144  03A8  1783               	bsf	3,7
  9145  03A9  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  9146  03AA  1383               	bcf	3,7
  9147  03AB  082B               	movf	??_sprintf^(0+128),w
  9148  03AC  0080               	movwf	0
  9149  03AD                     l3191:
  9150  03AD  3001               	movlw	1
  9151  03AE  07A0               	addwf	sprintf@sp^(0+128),f
  9152  03AF  1803               	skipnc
  9153  03B0  0AA1               	incf	(sprintf@sp+1)^(0+128),f
  9154  03B1  3000               	movlw	0
  9155  03B2  07A1               	addwf	(sprintf@sp+1)^(0+128),f
  9156  03B3  2C39               	goto	l3201
  9157  03B4                     l3193:
  9158                           
  9159                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;D:\Microchip\xc8\v2
      +                          .31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = val/dpowers[c];
  9160  03B4  0849               	movf	sprintf@c^(0+128),w
  9161  03B5  00AB               	movwf	??_sprintf^(0+128)
  9162  03B6  3001               	movlw	1
  9163  03B7                     u5395:
  9164  03B7  1003               	clrc
  9165  03B8  0DAB               	rlf	??_sprintf^(0+128),f
  9166  03B9  3EFF               	addlw	-1
  9167  03BA  1D03               	skipz
  9168  03BB  2BB7               	goto	u5395
  9169  03BC  1003               	clrc
  9170  03BD  0D2B               	rlf	??_sprintf^(0+128),w
  9171  03BE  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9172  03BF  0084               	movwf	4
  9173  03C0  120A  118A  200D  120A  118A  	fcall	stringdir
  9174  03C5  00F0               	movwf	___lldiv@divisor
  9175  03C6  120A  118A  200D  120A  118A  	fcall	stringdir
  9176  03CB  00F1               	movwf	___lldiv@divisor+1
  9177  03CC  120A  118A  200D  120A  118A  	fcall	stringdir
  9178  03D1  00F2               	movwf	___lldiv@divisor+2
  9179  03D2  120A  118A  200D  120A  118A  	fcall	stringdir
  9180  03D7  00F3               	movwf	___lldiv@divisor+3
  9181  03D8  0840               	movf	(sprintf@val+3)^(0+128),w
  9182  03D9  00F7               	movwf	___lldiv@dividend+3
  9183  03DA  083F               	movf	(sprintf@val+2)^(0+128),w
  9184  03DB  00F6               	movwf	___lldiv@dividend+2
  9185  03DC  083E               	movf	(sprintf@val+1)^(0+128),w
  9186  03DD  00F5               	movwf	___lldiv@dividend+1
  9187  03DE  083D               	movf	sprintf@val^(0+128),w
  9188  03DF  00F4               	movwf	___lldiv@dividend
  9189  03E0  160A  158A  25BA  120A  118A  	fcall	___lldiv
  9190  03E5  0873               	movf	?___lldiv+3,w
  9191  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  9192  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  9193  03E8  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  9194  03E9  0872               	movf	?___lldiv+2,w
  9195  03EA  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  9196  03EB  0871               	movf	?___lldiv+1,w
  9197  03EC  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  9198  03ED  0870               	movf	?___lldiv,w
  9199  03EE  00B9               	movwf	sprintf@tmpval^(0+128)
  9200  03EF                     l3195:
  9201                           
  9202                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval.vd %= 10;
  9203  03EF  3000               	movlw	0
  9204  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  9205  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  9206  03F2  00A3               	movwf	___llmod@divisor+3
  9207  03F3  3000               	movlw	0
  9208  03F4  00A2               	movwf	___llmod@divisor+2
  9209  03F5  3000               	movlw	0
  9210  03F6  00A1               	movwf	___llmod@divisor+1
  9211  03F7  300A               	movlw	10
  9212  03F8  00A0               	movwf	___llmod@divisor
  9213  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  9214  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  9215  03FB  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  9216  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  9217  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  9218  03FE  00A7               	movwf	___llmod@dividend+3
  9219  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  9220  0400  1303               	bcf	3,6	;RP1=0, select bank1
  9221  0401  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  9222  0402  1283               	bcf	3,5	;RP0=0, select bank0
  9223  0403  1303               	bcf	3,6	;RP1=0, select bank0
  9224  0404  00A6               	movwf	___llmod@dividend+2
  9225  0405  1683               	bsf	3,5	;RP0=1, select bank1
  9226  0406  1303               	bcf	3,6	;RP1=0, select bank1
  9227  0407  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  9228  0408  1283               	bcf	3,5	;RP0=0, select bank0
  9229  0409  1303               	bcf	3,6	;RP1=0, select bank0
  9230  040A  00A5               	movwf	___llmod@dividend+1
  9231  040B  1683               	bsf	3,5	;RP0=1, select bank1
  9232  040C  1303               	bcf	3,6	;RP1=0, select bank1
  9233  040D  0839               	movf	sprintf@tmpval^(0+128),w
  9234  040E  1283               	bcf	3,5	;RP0=0, select bank0
  9235  040F  1303               	bcf	3,6	;RP1=0, select bank0
  9236  0410  00A4               	movwf	___llmod@dividend
  9237  0411  160A  158A  250B  120A  118A  	fcall	___llmod
  9238  0416  1283               	bcf	3,5	;RP0=0, select bank0
  9239  0417  1303               	bcf	3,6	;RP1=0, select bank0
  9240  0418  0823               	movf	?___llmod+3,w
  9241  0419  1683               	bsf	3,5	;RP0=1, select bank1
  9242  041A  1303               	bcf	3,6	;RP1=0, select bank1
  9243  041B  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  9244  041C  1283               	bcf	3,5	;RP0=0, select bank0
  9245  041D  1303               	bcf	3,6	;RP1=0, select bank0
  9246  041E  0822               	movf	?___llmod+2,w
  9247  041F  1683               	bsf	3,5	;RP0=1, select bank1
  9248  0420  1303               	bcf	3,6	;RP1=0, select bank1
  9249  0421  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  9250  0422  1283               	bcf	3,5	;RP0=0, select bank0
  9251  0423  1303               	bcf	3,6	;RP1=0, select bank0
  9252  0424  0821               	movf	?___llmod+1,w
  9253  0425  1683               	bsf	3,5	;RP0=1, select bank1
  9254  0426  1303               	bcf	3,6	;RP1=0, select bank1
  9255  0427  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  9256  0428  1283               	bcf	3,5	;RP0=0, select bank0
  9257  0429  1303               	bcf	3,6	;RP1=0, select bank0
  9258  042A  0820               	movf	?___llmod,w
  9259  042B  1683               	bsf	3,5	;RP0=1, select bank1
  9260  042C  1303               	bcf	3,6	;RP1=0, select bank1
  9261  042D  00B9               	movwf	sprintf@tmpval^(0+128)
  9262  042E                     l3197:
  9263                           
  9264                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp++ = ('0' + tmp
      +                          val.vd)));
  9265  042E  0839               	movf	sprintf@tmpval^(0+128),w
  9266  042F  3E30               	addlw	48
  9267  0430  00AB               	movwf	??_sprintf^(0+128)
  9268  0431  0820               	movf	sprintf@sp^(0+128),w
  9269  0432  0084               	movwf	4
  9270  0433  1783               	bsf	3,7
  9271  0434  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  9272  0435  1383               	bcf	3,7
  9273  0436  082B               	movf	??_sprintf^(0+128),w
  9274  0437  0080               	movwf	0
  9275  0438  2BAD               	goto	l3191
  9276  0439                     l3201:
  9277                           
  9278                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c--) {
  9279  0439  3001               	movlw	1
  9280  043A  02C9               	subwf	sprintf@c^(0+128),f
  9281  043B  0A49               	incf	sprintf@c^(0+128),w
  9282  043C  1D03               	btfss	3,2
  9283  043D  2C3F               	goto	u5401
  9284  043E  2C40               	goto	u5400
  9285  043F                     u5401:
  9286  043F  2BB4               	goto	l3193
  9287  0440                     u5400:
  9288  0440  2C58               	goto	l3209
  9289  0441                     l3203:
  9290                           
  9291                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++ = ('0')));
  9292  0441  3030               	movlw	48
  9293  0442  1683               	bsf	3,5	;RP0=1, select bank1
  9294  0443  1303               	bcf	3,6	;RP1=0, select bank1
  9295  0444  00AB               	movwf	??_sprintf^(0+128)
  9296  0445  0820               	movf	sprintf@sp^(0+128),w
  9297  0446  0084               	movwf	4
  9298  0447  1783               	bsf	3,7
  9299  0448  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  9300  0449  1383               	bcf	3,7
  9301  044A  082B               	movf	??_sprintf^(0+128),w
  9302  044B  0080               	movwf	0
  9303  044C                     l3205:
  9304  044C  3001               	movlw	1
  9305  044D  07A0               	addwf	sprintf@sp^(0+128),f
  9306  044E  1803               	skipnc
  9307  044F  0AA1               	incf	(sprintf@sp+1)^(0+128),f
  9308  0450  3000               	movlw	0
  9309  0451  07A1               	addwf	(sprintf@sp+1)^(0+128),f
  9310  0452                     l3207:
  9311                           
  9312                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9313  0452  30FF               	movlw	255
  9314  0453  07C1               	addwf	sprintf@eexp^(0+128),f
  9315  0454  1803               	skipnc
  9316  0455  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  9317  0456  30FF               	movlw	255
  9318  0457  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  9319  0458                     l3209:
  9320                           
  9321                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(eexp > 0) {
  9322  0458  0842               	movf	(sprintf@eexp+1)^(0+128),w
  9323  0459  3A80               	xorlw	128
  9324  045A  00FF               	movwf	btemp+1
  9325  045B  3080               	movlw	128
  9326  045C  027F               	subwf	btemp+1,w
  9327  045D  1D03               	skipz
  9328  045E  2C61               	goto	u5415
  9329  045F  3001               	movlw	1
  9330  0460  0241               	subwf	sprintf@eexp^(0+128),w
  9331  0461                     u5415:
  9332  0461  1803               	skipnc
  9333  0462  2C64               	goto	u5411
  9334  0463  2C65               	goto	u5410
  9335  0464                     u5411:
  9336  0464  2C41               	goto	l3203
  9337  0465                     u5410:
  9338  0465                     l3211:
  9339                           
  9340                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec > (int)((sizeo
      +                          f dpowers/sizeof dpowers[0])-2))
  9341  0465  1683               	bsf	3,5	;RP0=1, select bank1
  9342  0466  1303               	bcf	3,6	;RP1=0, select bank1
  9343  0467  0848               	movf	(sprintf@prec+1)^(0+128),w
  9344  0468  3A80               	xorlw	128
  9345  0469  00FF               	movwf	btemp+1
  9346  046A  3080               	movlw	128
  9347  046B  027F               	subwf	btemp+1,w
  9348  046C  1D03               	skipz
  9349  046D  2C70               	goto	u5425
  9350  046E  3009               	movlw	9
  9351  046F  0247               	subwf	sprintf@prec^(0+128),w
  9352  0470                     u5425:
  9353  0470  1C03               	skipc
  9354  0471  2C73               	goto	u5421
  9355  0472  2C74               	goto	u5420
  9356  0473                     u5421:
  9357  0473  2C7B               	goto	l3215
  9358  0474                     u5420:
  9359  0474                     l3213:
  9360                           
  9361                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (sizeof dpowers/s
      +                          izeof dpowers[0])-2;
  9362  0474  3008               	movlw	8
  9363  0475  1683               	bsf	3,5	;RP0=1, select bank1
  9364  0476  1303               	bcf	3,6	;RP1=0, select bank1
  9365  0477  00AB               	movwf	??_sprintf^(0+128)
  9366  0478  082B               	movf	??_sprintf^(0+128),w
  9367  0479  00C9               	movwf	sprintf@c^(0+128)
  9368  047A  2C81               	goto	l296
  9369  047B                     l3215:
  9370                           
  9371                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (char)prec;
  9372  047B  1683               	bsf	3,5	;RP0=1, select bank1
  9373  047C  1303               	bcf	3,6	;RP1=0, select bank1
  9374  047D  0847               	movf	sprintf@prec^(0+128),w
  9375  047E  00AB               	movwf	??_sprintf^(0+128)
  9376  047F  082B               	movf	??_sprintf^(0+128),w
  9377  0480  00C9               	movwf	sprintf@c^(0+128)
  9378  0481                     l296:
  9379                           
  9380                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= (int)c;
  9381  0481  0849               	movf	sprintf@c^(0+128),w
  9382  0482  00AB               	movwf	??_sprintf^(0+128)
  9383  0483  01AC               	clrf	(??_sprintf^(0+128)+1)
  9384  0484  082B               	movf	??_sprintf^(0+128),w
  9385  0485  02C7               	subwf	sprintf@prec^(0+128),f
  9386  0486  082C               	movf	(??_sprintf+1)^(0+128),w
  9387  0487  1C03               	skipc
  9388  0488  03C8               	decf	(sprintf@prec+1)^(0+128),f
  9389  0489  02C8               	subwf	(sprintf@prec+1)^(0+128),f
  9390  048A                     l3217:
  9391                           
  9392                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9393  048A  0849               	movf	sprintf@c^(0+128),w
  9394  048B  1903               	btfsc	3,2
  9395  048C  2C8E               	goto	u5431
  9396  048D  2C8F               	goto	u5430
  9397  048E                     u5431:
  9398  048E  2C9E               	goto	l3223
  9399  048F                     u5430:
  9400  048F                     l3219:
  9401                           
  9402                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++ = ('.')));
  9403  048F  302E               	movlw	46
  9404  0490  00AB               	movwf	??_sprintf^(0+128)
  9405  0491  0820               	movf	sprintf@sp^(0+128),w
  9406  0492  0084               	movwf	4
  9407  0493  1783               	bsf	3,7
  9408  0494  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  9409  0495  1383               	bcf	3,7
  9410  0496  082B               	movf	??_sprintf^(0+128),w
  9411  0497  0080               	movwf	0
  9412  0498                     l3221:
  9413  0498  3001               	movlw	1
  9414  0499  07A0               	addwf	sprintf@sp^(0+128),f
  9415  049A  1803               	skipnc
  9416  049B  0AA1               	incf	(sprintf@sp+1)^(0+128),f
  9417  049C  3000               	movlw	0
  9418  049D  07A1               	addwf	(sprintf@sp+1)^(0+128),f
  9419  049E                     l3223:
  9420                           
  9421                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(
      +                          fval * scale((signed char)c));
  9422  049E  0849               	movf	sprintf@c^(0+128),w
  9423  049F  120A  158A  2140  120A  118A  	fcall	_scale
  9424  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  9425  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  9426  04A6  0841               	movf	?_scale+3,w
  9427  04A7  1683               	bsf	3,5	;RP0=1, select bank1
  9428  04A8  1303               	bcf	3,6	;RP1=0, select bank1
  9429  04A9  00B3               	movwf	(_sprintf$928+3)^(0+128)
  9430  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  9431  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  9432  04AC  0840               	movf	?_scale+2,w
  9433  04AD  1683               	bsf	3,5	;RP0=1, select bank1
  9434  04AE  1303               	bcf	3,6	;RP1=0, select bank1
  9435  04AF  00B2               	movwf	(_sprintf$928+2)^(0+128)
  9436  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  9437  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  9438  04B2  083F               	movf	?_scale+1,w
  9439  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  9440  04B4  1303               	bcf	3,6	;RP1=0, select bank1
  9441  04B5  00B1               	movwf	(_sprintf$928+1)^(0+128)
  9442  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  9443  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  9444  04B8  083E               	movf	?_scale,w
  9445  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  9446  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  9447  04BB  00B0               	movwf	_sprintf$928^(0+128)
  9448                           
  9449                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(
      +                          fval * scale((signed char)c));
  9450  04BC  0833               	movf	(_sprintf$928+3)^(0+128),w
  9451  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  9452  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  9453  04BF  00AB               	movwf	___flmul@a+3
  9454  04C0  1683               	bsf	3,5	;RP0=1, select bank1
  9455  04C1  1303               	bcf	3,6	;RP1=0, select bank1
  9456  04C2  0832               	movf	(_sprintf$928+2)^(0+128),w
  9457  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  9458  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  9459  04C5  00AA               	movwf	___flmul@a+2
  9460  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  9461  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  9462  04C8  0831               	movf	(_sprintf$928+1)^(0+128),w
  9463  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  9464  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  9465  04CB  00A9               	movwf	___flmul@a+1
  9466  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  9467  04CD  1303               	bcf	3,6	;RP1=0, select bank1
  9468  04CE  0830               	movf	_sprintf$928^(0+128),w
  9469  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  9470  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  9471  04D1  00A8               	movwf	___flmul@a
  9472  04D2  1683               	bsf	3,5	;RP0=1, select bank1
  9473  04D3  1303               	bcf	3,6	;RP1=0, select bank1
  9474  04D4  0846               	movf	(sprintf@fval+3)^(0+128),w
  9475  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  9476  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  9477  04D7  00A7               	movwf	___flmul@b+3
  9478  04D8  1683               	bsf	3,5	;RP0=1, select bank1
  9479  04D9  1303               	bcf	3,6	;RP1=0, select bank1
  9480  04DA  0845               	movf	(sprintf@fval+2)^(0+128),w
  9481  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  9482  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  9483  04DD  00A6               	movwf	___flmul@b+2
  9484  04DE  1683               	bsf	3,5	;RP0=1, select bank1
  9485  04DF  1303               	bcf	3,6	;RP1=0, select bank1
  9486  04E0  0844               	movf	(sprintf@fval+1)^(0+128),w
  9487  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  9488  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  9489  04E3  00A5               	movwf	___flmul@b+1
  9490  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  9491  04E5  1303               	bcf	3,6	;RP1=0, select bank1
  9492  04E6  0843               	movf	sprintf@fval^(0+128),w
  9493  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  9494  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  9495  04E9  00A4               	movwf	___flmul@b
  9496  04EA  120A  158A  249F  120A  118A  	fcall	___flmul
  9497  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  9498  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  9499  04F1  0827               	movf	?___flmul+3,w
  9500  04F2  00D4               	movwf	___fltol@f1+3
  9501  04F3  0826               	movf	?___flmul+2,w
  9502  04F4  00D3               	movwf	___fltol@f1+2
  9503  04F5  0825               	movf	?___flmul+1,w
  9504  04F6  00D2               	movwf	___fltol@f1+1
  9505  04F7  0824               	movf	?___flmul,w
  9506  04F8  00D1               	movwf	___fltol@f1
  9507  04F9  120A  158A  2006  120A  118A  	fcall	___fltol
  9508  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  9509  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  9510  0500  0854               	movf	?___fltol+3,w
  9511  0501  1683               	bsf	3,5	;RP0=1, select bank1
  9512  0502  1303               	bcf	3,6	;RP1=0, select bank1
  9513  0503  00C0               	movwf	(sprintf@val+3)^(0+128)
  9514  0504  1283               	bcf	3,5	;RP0=0, select bank0
  9515  0505  1303               	bcf	3,6	;RP1=0, select bank0
  9516  0506  0853               	movf	?___fltol+2,w
  9517  0507  1683               	bsf	3,5	;RP0=1, select bank1
  9518  0508  1303               	bcf	3,6	;RP1=0, select bank1
  9519  0509  00BF               	movwf	(sprintf@val+2)^(0+128)
  9520  050A  1283               	bcf	3,5	;RP0=0, select bank0
  9521  050B  1303               	bcf	3,6	;RP1=0, select bank0
  9522  050C  0852               	movf	?___fltol+1,w
  9523  050D  1683               	bsf	3,5	;RP0=1, select bank1
  9524  050E  1303               	bcf	3,6	;RP1=0, select bank1
  9525  050F  00BE               	movwf	(sprintf@val+1)^(0+128)
  9526  0510  1283               	bcf	3,5	;RP0=0, select bank0
  9527  0511  1303               	bcf	3,6	;RP1=0, select bank0
  9528  0512  0851               	movf	?___fltol,w
  9529  0513  1683               	bsf	3,5	;RP0=1, select bank1
  9530  0514  1303               	bcf	3,6	;RP1=0, select bank1
  9531  0515  00BD               	movwf	sprintf@val^(0+128)
  9532                           
  9533                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
  9534  0516  2DFC               	goto	l3235
  9535  0517                     l3225:
  9536                           
  9537                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.vd = val/dpowe
      +                          rs[c];
  9538  0517  0849               	movf	sprintf@c^(0+128),w
  9539  0518  00AB               	movwf	??_sprintf^(0+128)
  9540  0519  3001               	movlw	1
  9541  051A                     u5445:
  9542  051A  1003               	clrc
  9543  051B  0DAB               	rlf	??_sprintf^(0+128),f
  9544  051C  3EFF               	addlw	-1
  9545  051D  1D03               	skipz
  9546  051E  2D1A               	goto	u5445
  9547  051F  1003               	clrc
  9548  0520  0D2B               	rlf	??_sprintf^(0+128),w
  9549  0521  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9550  0522  0084               	movwf	4
  9551  0523  120A  118A  200D  120A  118A  	fcall	stringdir
  9552  0528  00F0               	movwf	___lldiv@divisor
  9553  0529  120A  118A  200D  120A  118A  	fcall	stringdir
  9554  052E  00F1               	movwf	___lldiv@divisor+1
  9555  052F  120A  118A  200D  120A  118A  	fcall	stringdir
  9556  0534  00F2               	movwf	___lldiv@divisor+2
  9557  0535  120A  118A  200D  120A  118A  	fcall	stringdir
  9558  053A  00F3               	movwf	___lldiv@divisor+3
  9559  053B  0840               	movf	(sprintf@val+3)^(0+128),w
  9560  053C  00F7               	movwf	___lldiv@dividend+3
  9561  053D  083F               	movf	(sprintf@val+2)^(0+128),w
  9562  053E  00F6               	movwf	___lldiv@dividend+2
  9563  053F  083E               	movf	(sprintf@val+1)^(0+128),w
  9564  0540  00F5               	movwf	___lldiv@dividend+1
  9565  0541  083D               	movf	sprintf@val^(0+128),w
  9566  0542  00F4               	movwf	___lldiv@dividend
  9567  0543  160A  158A  25BA  120A  118A  	fcall	___lldiv
  9568  0548  0873               	movf	?___lldiv+3,w
  9569  0549  1683               	bsf	3,5	;RP0=1, select bank1
  9570  054A  1303               	bcf	3,6	;RP1=0, select bank1
  9571  054B  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  9572  054C  0872               	movf	?___lldiv+2,w
  9573  054D  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  9574  054E  0871               	movf	?___lldiv+1,w
  9575  054F  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  9576  0550  0870               	movf	?___lldiv,w
  9577  0551  00B9               	movwf	sprintf@tmpval^(0+128)
  9578  0552                     l3227:
  9579                           
  9580                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.vd %= 10;
  9581  0552  3000               	movlw	0
  9582  0553  1283               	bcf	3,5	;RP0=0, select bank0
  9583  0554  1303               	bcf	3,6	;RP1=0, select bank0
  9584  0555  00A3               	movwf	___llmod@divisor+3
  9585  0556  3000               	movlw	0
  9586  0557  00A2               	movwf	___llmod@divisor+2
  9587  0558  3000               	movlw	0
  9588  0559  00A1               	movwf	___llmod@divisor+1
  9589  055A  300A               	movlw	10
  9590  055B  00A0               	movwf	___llmod@divisor
  9591  055C  1683               	bsf	3,5	;RP0=1, select bank1
  9592  055D  1303               	bcf	3,6	;RP1=0, select bank1
  9593  055E  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  9594  055F  1283               	bcf	3,5	;RP0=0, select bank0
  9595  0560  1303               	bcf	3,6	;RP1=0, select bank0
  9596  0561  00A7               	movwf	___llmod@dividend+3
  9597  0562  1683               	bsf	3,5	;RP0=1, select bank1
  9598  0563  1303               	bcf	3,6	;RP1=0, select bank1
  9599  0564  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  9600  0565  1283               	bcf	3,5	;RP0=0, select bank0
  9601  0566  1303               	bcf	3,6	;RP1=0, select bank0
  9602  0567  00A6               	movwf	___llmod@dividend+2
  9603  0568  1683               	bsf	3,5	;RP0=1, select bank1
  9604  0569  1303               	bcf	3,6	;RP1=0, select bank1
  9605  056A  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  9606  056B  1283               	bcf	3,5	;RP0=0, select bank0
  9607  056C  1303               	bcf	3,6	;RP1=0, select bank0
  9608  056D  00A5               	movwf	___llmod@dividend+1
  9609  056E  1683               	bsf	3,5	;RP0=1, select bank1
  9610  056F  1303               	bcf	3,6	;RP1=0, select bank1
  9611  0570  0839               	movf	sprintf@tmpval^(0+128),w
  9612  0571  1283               	bcf	3,5	;RP0=0, select bank0
  9613  0572  1303               	bcf	3,6	;RP1=0, select bank0
  9614  0573  00A4               	movwf	___llmod@dividend
  9615  0574  160A  158A  250B  120A  118A  	fcall	___llmod
  9616  0579  1283               	bcf	3,5	;RP0=0, select bank0
  9617  057A  1303               	bcf	3,6	;RP1=0, select bank0
  9618  057B  0823               	movf	?___llmod+3,w
  9619  057C  1683               	bsf	3,5	;RP0=1, select bank1
  9620  057D  1303               	bcf	3,6	;RP1=0, select bank1
  9621  057E  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  9622  057F  1283               	bcf	3,5	;RP0=0, select bank0
  9623  0580  1303               	bcf	3,6	;RP1=0, select bank0
  9624  0581  0822               	movf	?___llmod+2,w
  9625  0582  1683               	bsf	3,5	;RP0=1, select bank1
  9626  0583  1303               	bcf	3,6	;RP1=0, select bank1
  9627  0584  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  9628  0585  1283               	bcf	3,5	;RP0=0, select bank0
  9629  0586  1303               	bcf	3,6	;RP1=0, select bank0
  9630  0587  0821               	movf	?___llmod+1,w
  9631  0588  1683               	bsf	3,5	;RP0=1, select bank1
  9632  0589  1303               	bcf	3,6	;RP1=0, select bank1
  9633  058A  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  9634  058B  1283               	bcf	3,5	;RP0=0, select bank0
  9635  058C  1303               	bcf	3,6	;RP1=0, select bank0
  9636  058D  0820               	movf	?___llmod,w
  9637  058E  1683               	bsf	3,5	;RP0=1, select bank1
  9638  058F  1303               	bcf	3,6	;RP1=0, select bank1
  9639  0590  00B9               	movwf	sprintf@tmpval^(0+128)
  9640  0591                     l3229:
  9641                           
  9642                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++ = ('0' + tmpv
      +                          al.vd)));
  9643  0591  0839               	movf	sprintf@tmpval^(0+128),w
  9644  0592  3E30               	addlw	48
  9645  0593  00AB               	movwf	??_sprintf^(0+128)
  9646  0594  0820               	movf	sprintf@sp^(0+128),w
  9647  0595  0084               	movwf	4
  9648  0596  1783               	bsf	3,7
  9649  0597  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  9650  0598  1383               	bcf	3,7
  9651  0599  082B               	movf	??_sprintf^(0+128),w
  9652  059A  0080               	movwf	0
  9653  059B                     l3231:
  9654  059B  3001               	movlw	1
  9655  059C  07A0               	addwf	sprintf@sp^(0+128),f
  9656  059D  1803               	skipnc
  9657  059E  0AA1               	incf	(sprintf@sp+1)^(0+128),f
  9658  059F  3000               	movlw	0
  9659  05A0  07A1               	addwf	(sprintf@sp+1)^(0+128),f
  9660  05A1                     l3233:
  9661                           
  9662                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= dpowers[c];
  9663  05A1  0849               	movf	sprintf@c^(0+128),w
  9664  05A2  00AB               	movwf	??_sprintf^(0+128)
  9665  05A3  3001               	movlw	1
  9666  05A4                     u5455:
  9667  05A4  1003               	clrc
  9668  05A5  0DAB               	rlf	??_sprintf^(0+128),f
  9669  05A6  3EFF               	addlw	-1
  9670  05A7  1D03               	skipz
  9671  05A8  2DA4               	goto	u5455
  9672  05A9  1003               	clrc
  9673  05AA  0D2B               	rlf	??_sprintf^(0+128),w
  9674  05AB  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9675  05AC  0084               	movwf	4
  9676  05AD  120A  118A  200D  120A  118A  	fcall	stringdir
  9677  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  9678  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  9679  05B4  00A0               	movwf	___llmod@divisor
  9680  05B5  120A  118A  200D  120A  118A  	fcall	stringdir
  9681  05BA  00A1               	movwf	___llmod@divisor+1
  9682  05BB  120A  118A  200D  120A  118A  	fcall	stringdir
  9683  05C0  00A2               	movwf	___llmod@divisor+2
  9684  05C1  120A  118A  200D  120A  118A  	fcall	stringdir
  9685  05C6  00A3               	movwf	___llmod@divisor+3
  9686  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  9687  05C8  1303               	bcf	3,6	;RP1=0, select bank1
  9688  05C9  0840               	movf	(sprintf@val+3)^(0+128),w
  9689  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  9690  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  9691  05CC  00A7               	movwf	___llmod@dividend+3
  9692  05CD  1683               	bsf	3,5	;RP0=1, select bank1
  9693  05CE  1303               	bcf	3,6	;RP1=0, select bank1
  9694  05CF  083F               	movf	(sprintf@val+2)^(0+128),w
  9695  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  9696  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  9697  05D2  00A6               	movwf	___llmod@dividend+2
  9698  05D3  1683               	bsf	3,5	;RP0=1, select bank1
  9699  05D4  1303               	bcf	3,6	;RP1=0, select bank1
  9700  05D5  083E               	movf	(sprintf@val+1)^(0+128),w
  9701  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  9702  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  9703  05D8  00A5               	movwf	___llmod@dividend+1
  9704  05D9  1683               	bsf	3,5	;RP0=1, select bank1
  9705  05DA  1303               	bcf	3,6	;RP1=0, select bank1
  9706  05DB  083D               	movf	sprintf@val^(0+128),w
  9707  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  9708  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  9709  05DE  00A4               	movwf	___llmod@dividend
  9710  05DF  160A  158A  250B  120A  118A  	fcall	___llmod
  9711  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  9712  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  9713  05E6  0823               	movf	?___llmod+3,w
  9714  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  9715  05E8  1303               	bcf	3,6	;RP1=0, select bank1
  9716  05E9  00C0               	movwf	(sprintf@val+3)^(0+128)
  9717  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  9718  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  9719  05EC  0822               	movf	?___llmod+2,w
  9720  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  9721  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  9722  05EF  00BF               	movwf	(sprintf@val+2)^(0+128)
  9723  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  9724  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  9725  05F2  0821               	movf	?___llmod+1,w
  9726  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  9727  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  9728  05F5  00BE               	movwf	(sprintf@val+1)^(0+128)
  9729  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  9730  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  9731  05F8  0820               	movf	?___llmod,w
  9732  05F9  1683               	bsf	3,5	;RP0=1, select bank1
  9733  05FA  1303               	bcf	3,6	;RP1=0, select bank1
  9734  05FB  00BD               	movwf	sprintf@val^(0+128)
  9735  05FC                     l3235:
  9736                           
  9737                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
  9738  05FC  3001               	movlw	1
  9739  05FD  02C9               	subwf	sprintf@c^(0+128),f
  9740  05FE  0A49               	incf	sprintf@c^(0+128),w
  9741  05FF  1D03               	btfss	3,2
  9742  0600  2E02               	goto	u5461
  9743  0601  2E03               	goto	u5460
  9744  0602                     u5461:
  9745  0602  2D17               	goto	l3225
  9746  0603                     u5460:
  9747  0603  2E19               	goto	l3243
  9748  0604                     l3237:
  9749                           
  9750                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++ = ('0')));
  9751  0604  3030               	movlw	48
  9752  0605  00AB               	movwf	??_sprintf^(0+128)
  9753  0606  0820               	movf	sprintf@sp^(0+128),w
  9754  0607  0084               	movwf	4
  9755  0608  1783               	bsf	3,7
  9756  0609  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  9757  060A  1383               	bcf	3,7
  9758  060B  082B               	movf	??_sprintf^(0+128),w
  9759  060C  0080               	movwf	0
  9760  060D                     l3239:
  9761  060D  3001               	movlw	1
  9762  060E  07A0               	addwf	sprintf@sp^(0+128),f
  9763  060F  1803               	skipnc
  9764  0610  0AA1               	incf	(sprintf@sp+1)^(0+128),f
  9765  0611  3000               	movlw	0
  9766  0612  07A1               	addwf	(sprintf@sp+1)^(0+128),f
  9767  0613                     l3241:
  9768                           
  9769                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  9770  0613  30FF               	movlw	255
  9771  0614  07C7               	addwf	sprintf@prec^(0+128),f
  9772  0615  1803               	skipnc
  9773  0616  0AC8               	incf	(sprintf@prec+1)^(0+128),f
  9774  0617  30FF               	movlw	255
  9775  0618  07C8               	addwf	(sprintf@prec+1)^(0+128),f
  9776  0619                     l3243:
  9777                           
  9778                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(prec) {
  9779  0619  0847               	movf	sprintf@prec^(0+128),w
  9780  061A  0448               	iorwf	(sprintf@prec+1)^(0+128),w
  9781  061B  1D03               	btfss	3,2
  9782  061C  2E1E               	goto	u5471
  9783  061D  2E1F               	goto	u5470
  9784  061E                     u5471:
  9785  061E  2E04               	goto	l3237
  9786  061F                     u5470:
  9787  061F  2FC7               	goto	l3323
  9788  0620                     l3245:
  9789                           
  9790                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned long)(*(int *)__va_arg((*(i
      +                          nt **)ap), (int)0));
  9791  0620  0834               	movf	sprintf@ap^(0+128),w
  9792  0621  0084               	movwf	4
  9793  0622  1383               	bcf	3,7	;select IRP bank0
  9794  0623  0800               	movf	0,w
  9795  0624  00AB               	movwf	??_sprintf^(0+128)
  9796  0625  0A84               	incf	4,f
  9797  0626  0800               	movf	0,w
  9798  0627  00AC               	movwf	(??_sprintf^(0+128)+1)
  9799  0628  082B               	movf	??_sprintf^(0+128),w
  9800  0629  00BD               	movwf	sprintf@val^(0+128)
  9801  062A  082C               	movf	(??_sprintf+1)^(0+128),w
  9802  062B  00BE               	movwf	(sprintf@val+1)^(0+128)
  9803  062C  3000               	movlw	0
  9804  062D  1BBE               	btfsc	(sprintf@val+1)^(0+128),7
  9805  062E  30FF               	movlw	255
  9806  062F  00BF               	movwf	(sprintf@val+2)^(0+128)
  9807  0630  00C0               	movwf	(sprintf@val+3)^(0+128)
  9808  0631                     l3247:
  9809  0631  3002               	movlw	2
  9810  0632  00AB               	movwf	??_sprintf^(0+128)
  9811  0633  082B               	movf	??_sprintf^(0+128),w
  9812  0634  07B4               	addwf	sprintf@ap^(0+128),f
  9813  0635                     l3249:
  9814                           
  9815                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long)val < 0) {
  9816  0635  1FC0               	btfss	(sprintf@val+3)^(0+128),7
  9817  0636  2E38               	goto	u5481
  9818  0637  2E39               	goto	u5480
  9819  0638                     u5481:
  9820  0638  2E48               	goto	l3255
  9821  0639                     u5480:
  9822  0639                     l3251:
  9823                           
  9824                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
  9825  0639  3003               	movlw	3
  9826  063A  04B5               	iorwf	sprintf@flag^(0+128),f
  9827  063B  3000               	movlw	0
  9828  063C  04B6               	iorwf	(sprintf@flag+1)^(0+128),f
  9829  063D                     l3253:
  9830                           
  9831                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
  9832  063D  09BD               	comf	sprintf@val^(0+128),f
  9833  063E  09BE               	comf	(sprintf@val+1)^(0+128),f
  9834  063F  09BF               	comf	(sprintf@val+2)^(0+128),f
  9835  0640  09C0               	comf	(sprintf@val+3)^(0+128),f
  9836  0641  0ABD               	incf	sprintf@val^(0+128),f
  9837  0642  1903               	skipnz
  9838  0643  0ABE               	incf	(sprintf@val+1)^(0+128),f
  9839  0644  1903               	skipnz
  9840  0645  0ABF               	incf	(sprintf@val+2)^(0+128),f
  9841  0646  1903               	skipnz
  9842  0647  0AC0               	incf	(sprintf@val+3)^(0+128),f
  9843  0648                     l3255:
  9844                           
  9845                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && val == 0)
  9846  0648  0847               	movf	sprintf@prec^(0+128),w
  9847  0649  0448               	iorwf	(sprintf@prec+1)^(0+128),w
  9848  064A  1D03               	btfss	3,2
  9849  064B  2E4D               	goto	u5491
  9850  064C  2E4E               	goto	u5490
  9851  064D                     u5491:
  9852  064D  2E5C               	goto	l3261
  9853  064E                     u5490:
  9854  064E                     l3257:
  9855  064E  0840               	movf	(sprintf@val+3)^(0+128),w
  9856  064F  043F               	iorwf	(sprintf@val+2)^(0+128),w
  9857  0650  043E               	iorwf	(sprintf@val+1)^(0+128),w
  9858  0651  043D               	iorwf	sprintf@val^(0+128),w
  9859  0652  1D03               	skipz
  9860  0653  2E55               	goto	u5501
  9861  0654  2E56               	goto	u5500
  9862  0655                     u5501:
  9863  0655  2E5C               	goto	l3261
  9864  0656                     u5500:
  9865  0656                     l3259:
  9866                           
  9867                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  9868  0656  3001               	movlw	1
  9869  0657  07C7               	addwf	sprintf@prec^(0+128),f
  9870  0658  1803               	skipnc
  9871  0659  0AC8               	incf	(sprintf@prec+1)^(0+128),f
  9872  065A  3000               	movlw	0
  9873  065B  07C8               	addwf	(sprintf@prec+1)^(0+128),f
  9874  065C                     l3261:
  9875                           
  9876                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeo
      +                          f dpowers/sizeof dpowers[0] ; c++)
  9877  065C  01C9               	clrf	sprintf@c^(0+128)
  9878  065D  0AC9               	incf	sprintf@c^(0+128),f
  9879  065E                     l3267:
  9880                           
  9881                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowers[c])
  9882  065E  0849               	movf	sprintf@c^(0+128),w
  9883  065F  00AB               	movwf	??_sprintf^(0+128)
  9884  0660  3001               	movlw	1
  9885  0661                     u5515:
  9886  0661  1003               	clrc
  9887  0662  0DAB               	rlf	??_sprintf^(0+128),f
  9888  0663  3EFF               	addlw	-1
  9889  0664  1D03               	skipz
  9890  0665  2E61               	goto	u5515
  9891  0666  1003               	clrc
  9892  0667  0D2B               	rlf	??_sprintf^(0+128),w
  9893  0668  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9894  0669  0084               	movwf	4
  9895  066A  120A  118A  200D  120A  118A  	fcall	stringdir
  9896  066F  00AC               	movwf	(??_sprintf+1)^(0+128)
  9897  0670  120A  118A  200D  120A  118A  	fcall	stringdir
  9898  0675  00AD               	movwf	((??_sprintf+1)^(0+128)+1)
  9899  0676  120A  118A  200D  120A  118A  	fcall	stringdir
  9900  067B  00AE               	movwf	((??_sprintf+1)^(0+128)+2)
  9901  067C  120A  118A  200D  120A  118A  	fcall	stringdir
  9902  0681  00AF               	movwf	((??_sprintf+1)^(0+128)+3)
  9903  0682  082F               	movf	(??_sprintf+4)^(0+128),w
  9904  0683  0240               	subwf	(sprintf@val+3)^(0+128),w
  9905  0684  1D03               	skipz
  9906  0685  2E90               	goto	u5525
  9907  0686  082E               	movf	(??_sprintf+3)^(0+128),w
  9908  0687  023F               	subwf	(sprintf@val+2)^(0+128),w
  9909  0688  1D03               	skipz
  9910  0689  2E90               	goto	u5525
  9911  068A  082D               	movf	(??_sprintf+2)^(0+128),w
  9912  068B  023E               	subwf	(sprintf@val+1)^(0+128),w
  9913  068C  1D03               	skipz
  9914  068D  2E90               	goto	u5525
  9915  068E  082C               	movf	(??_sprintf+1)^(0+128),w
  9916  068F  023D               	subwf	sprintf@val^(0+128),w
  9917  0690                     u5525:
  9918  0690  1803               	skipnc
  9919  0691  2E93               	goto	u5521
  9920  0692  2E94               	goto	u5520
  9921  0693                     u5521:
  9922  0693  2E95               	goto	l3271
  9923  0694                     u5520:
  9924  0694  2E9F               	goto	l3273
  9925  0695                     l3271:
  9926  0695  3001               	movlw	1
  9927  0696  00AB               	movwf	??_sprintf^(0+128)
  9928  0697  082B               	movf	??_sprintf^(0+128),w
  9929  0698  07C9               	addwf	sprintf@c^(0+128),f
  9930  0699  300A               	movlw	10
  9931  069A  0649               	xorwf	sprintf@c^(0+128),w
  9932  069B  1D03               	btfss	3,2
  9933  069C  2E9E               	goto	u5531
  9934  069D  2E9F               	goto	u5530
  9935  069E                     u5531:
  9936  069E  2E5E               	goto	l3267
  9937  069F                     u5530:
  9938  069F                     l3273:
  9939                           
  9940                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < prec)
  9941  069F  0848               	movf	(sprintf@prec+1)^(0+128),w
  9942  06A0  3A80               	xorlw	128
  9943  06A1  3C80               	sublw	128
  9944  06A2  1D03               	skipz
  9945  06A3  2EA6               	goto	u5545
  9946  06A4  0847               	movf	sprintf@prec^(0+128),w
  9947  06A5  0249               	subwf	sprintf@c^(0+128),w
  9948  06A6                     u5545:
  9949  06A6  1803               	skipnc
  9950  06A7  2EA9               	goto	u5541
  9951  06A8  2EAA               	goto	u5540
  9952  06A9                     u5541:
  9953  06A9  2EB1               	goto	l3277
  9954  06AA                     u5540:
  9955  06AA                     l3275:
  9956                           
  9957                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (char)prec;
  9958  06AA  1683               	bsf	3,5	;RP0=1, select bank1
  9959  06AB  1303               	bcf	3,6	;RP1=0, select bank1
  9960  06AC  0847               	movf	sprintf@prec^(0+128),w
  9961  06AD  00AB               	movwf	??_sprintf^(0+128)
  9962  06AE  082B               	movf	??_sprintf^(0+128),w
  9963  06AF  00C9               	movwf	sprintf@c^(0+128)
  9964  06B0  2EC9               	goto	l3281
  9965  06B1                     l3277:
  9966  06B1  1683               	bsf	3,5	;RP0=1, select bank1
  9967  06B2  1303               	bcf	3,6	;RP1=0, select bank1
  9968  06B3  0848               	movf	(sprintf@prec+1)^(0+128),w
  9969  06B4  3A80               	xorlw	128
  9970  06B5  00AB               	movwf	??_sprintf^(0+128)
  9971  06B6  3080               	movlw	128
  9972  06B7  022B               	subwf	??_sprintf^(0+128),w
  9973  06B8  1D03               	skipz
  9974  06B9  2EBC               	goto	u5555
  9975  06BA  0849               	movf	sprintf@c^(0+128),w
  9976  06BB  0247               	subwf	sprintf@prec^(0+128),w
  9977  06BC                     u5555:
  9978  06BC  1803               	skipnc
  9979  06BD  2EBF               	goto	u5551
  9980  06BE  2EC0               	goto	u5550
  9981  06BF                     u5551:
  9982  06BF  2EC9               	goto	l3281
  9983  06C0                     u5550:
  9984  06C0                     l3279:
  9985                           
  9986                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c;
  9987  06C0  1683               	bsf	3,5	;RP0=1, select bank1
  9988  06C1  1303               	bcf	3,6	;RP1=0, select bank1
  9989  06C2  0849               	movf	sprintf@c^(0+128),w
  9990  06C3  00AB               	movwf	??_sprintf^(0+128)
  9991  06C4  01AC               	clrf	(??_sprintf^(0+128)+1)
  9992  06C5  082B               	movf	??_sprintf^(0+128),w
  9993  06C6  00C7               	movwf	sprintf@prec^(0+128)
  9994  06C7  082C               	movf	(??_sprintf+1)^(0+128),w
  9995  06C8  00C8               	movwf	(sprintf@prec+1)^(0+128)
  9996  06C9                     l3281:
  9997                           
  9998                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width && flag & 0x03
      +                          )
  9999  06C9  1683               	bsf	3,5	;RP0=1, select bank1
 10000  06CA  1303               	bcf	3,6	;RP1=0, select bank1
 10001  06CB  0837               	movf	sprintf@width^(0+128),w
 10002  06CC  0438               	iorwf	(sprintf@width+1)^(0+128),w
 10003  06CD  1903               	btfsc	3,2
 10004  06CE  2ED0               	goto	u5561
 10005  06CF  2ED1               	goto	u5560
 10006  06D0                     u5561:
 10007  06D0  2EE3               	goto	l3287
 10008  06D1                     u5560:
 10009  06D1                     l3283:
 10010  06D1  3003               	movlw	3
 10011  06D2  0535               	andwf	sprintf@flag^(0+128),w
 10012  06D3  00AB               	movwf	??_sprintf^(0+128)
 10013  06D4  3000               	movlw	0
 10014  06D5  0536               	andwf	(sprintf@flag+1)^(0+128),w
 10015  06D6  00AC               	movwf	(??_sprintf+1)^(0+128)
 10016  06D7  082B               	movf	??_sprintf^(0+128),w
 10017  06D8  042C               	iorwf	(??_sprintf^(0+128)+1),w
 10018  06D9  1903               	btfsc	3,2
 10019  06DA  2EDC               	goto	u5571
 10020  06DB  2EDD               	goto	u5570
 10021  06DC                     u5571:
 10022  06DC  2EE3               	goto	l3287
 10023  06DD                     u5570:
 10024  06DD                     l3285:
 10025                           
 10026                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10027  06DD  30FF               	movlw	255
 10028  06DE  07B7               	addwf	sprintf@width^(0+128),f
 10029  06DF  1803               	skipnc
 10030  06E0  0AB8               	incf	(sprintf@width+1)^(0+128),f
 10031  06E1  30FF               	movlw	255
 10032  06E2  07B8               	addwf	(sprintf@width+1)^(0+128),f
 10033  06E3                     l3287:
 10034                           
 10035                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag & 0x4000) {
 10036  06E3  1F36               	btfss	(sprintf@flag+1)^(0+128),6
 10037  06E4  2EE6               	goto	u5581
 10038  06E5  2EE7               	goto	u5580
 10039  06E6                     u5581:
 10040  06E6  2F02               	goto	l3295
 10041  06E7                     u5580:
 10042  06E7                     l3289:
 10043                           
 10044                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width > prec)
 10045  06E7  0848               	movf	(sprintf@prec+1)^(0+128),w
 10046  06E8  3A80               	xorlw	128
 10047  06E9  00AB               	movwf	??_sprintf^(0+128)
 10048  06EA  0838               	movf	(sprintf@width+1)^(0+128),w
 10049  06EB  3A80               	xorlw	128
 10050  06EC  022B               	subwf	??_sprintf^(0+128),w
 10051  06ED  1D03               	skipz
 10052  06EE  2EF1               	goto	u5595
 10053  06EF  0837               	movf	sprintf@width^(0+128),w
 10054  06F0  0247               	subwf	sprintf@prec^(0+128),w
 10055  06F1                     u5595:
 10056  06F1  1803               	skipnc
 10057  06F2  2EF4               	goto	u5591
 10058  06F3  2EF5               	goto	u5590
 10059  06F4                     u5591:
 10060  06F4  2EFE               	goto	l3293
 10061  06F5                     u5590:
 10062  06F5                     l3291:
 10063                           
 10064                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -= prec;
 10065  06F5  1683               	bsf	3,5	;RP0=1, select bank1
 10066  06F6  1303               	bcf	3,6	;RP1=0, select bank1
 10067  06F7  0847               	movf	sprintf@prec^(0+128),w
 10068  06F8  02B7               	subwf	sprintf@width^(0+128),f
 10069  06F9  0848               	movf	(sprintf@prec+1)^(0+128),w
 10070  06FA  1C03               	skipc
 10071  06FB  03B8               	decf	(sprintf@width+1)^(0+128),f
 10072  06FC  02B8               	subwf	(sprintf@width+1)^(0+128),f
 10073  06FD  2F02               	goto	l3295
 10074  06FE                     l3293:
 10075                           
 10076                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width = 0;
 10077  06FE  1683               	bsf	3,5	;RP0=1, select bank1
 10078  06FF  1303               	bcf	3,6	;RP1=0, select bank1
 10079  0700  01B7               	clrf	sprintf@width^(0+128)
 10080  0701  01B8               	clrf	(sprintf@width+1)^(0+128)
 10081  0702                     l3295:
 10082                           
 10083                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width > c)
 10084  0702  0838               	movf	(sprintf@width+1)^(0+128),w
 10085  0703  3A80               	xorlw	128
 10086  0704  3C80               	sublw	128
 10087  0705  1D03               	skipz
 10088  0706  2F09               	goto	u5605
 10089  0707  0837               	movf	sprintf@width^(0+128),w
 10090  0708  0249               	subwf	sprintf@c^(0+128),w
 10091  0709                     u5605:
 10092  0709  1803               	skipnc
 10093  070A  2F0C               	goto	u5601
 10094  070B  2F0D               	goto	u5600
 10095  070C                     u5601:
 10096  070C  2F19               	goto	l3299
 10097  070D                     u5600:
 10098  070D                     l3297:
 10099                           
 10100                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -= c;
 10101  070D  1683               	bsf	3,5	;RP0=1, select bank1
 10102  070E  1303               	bcf	3,6	;RP1=0, select bank1
 10103  070F  0849               	movf	sprintf@c^(0+128),w
 10104  0710  00AB               	movwf	??_sprintf^(0+128)
 10105  0711  01AC               	clrf	(??_sprintf^(0+128)+1)
 10106  0712  082B               	movf	??_sprintf^(0+128),w
 10107  0713  02B7               	subwf	sprintf@width^(0+128),f
 10108  0714  082C               	movf	(??_sprintf+1)^(0+128),w
 10109  0715  1C03               	skipc
 10110  0716  03B8               	decf	(sprintf@width+1)^(0+128),f
 10111  0717  02B8               	subwf	(sprintf@width+1)^(0+128),f
 10112  0718  2F1D               	goto	l3301
 10113  0719                     l3299:
 10114                           
 10115                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 0;
 10116  0719  1683               	bsf	3,5	;RP0=1, select bank1
 10117  071A  1303               	bcf	3,6	;RP1=0, select bank1
 10118  071B  01B7               	clrf	sprintf@width^(0+128)
 10119  071C  01B8               	clrf	(sprintf@width+1)^(0+128)
 10120  071D                     l3301:
 10121                           
 10122                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10123  071D  0837               	movf	sprintf@width^(0+128),w
 10124  071E  0438               	iorwf	(sprintf@width+1)^(0+128),w
 10125  071F  1903               	btfsc	3,2
 10126  0720  2F22               	goto	u5611
 10127  0721  2F23               	goto	u5610
 10128  0722                     u5611:
 10129  0722  2F3E               	goto	l3309
 10130  0723                     u5610:
 10131  0723                     l3303:
 10132                           
 10133                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp++ = (' ')));
 10134  0723  3020               	movlw	32
 10135  0724  00AB               	movwf	??_sprintf^(0+128)
 10136  0725  0820               	movf	sprintf@sp^(0+128),w
 10137  0726  0084               	movwf	4
 10138  0727  1783               	bsf	3,7
 10139  0728  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10140  0729  1383               	bcf	3,7
 10141  072A  082B               	movf	??_sprintf^(0+128),w
 10142  072B  0080               	movwf	0
 10143  072C                     l3305:
 10144  072C  3001               	movlw	1
 10145  072D  07A0               	addwf	sprintf@sp^(0+128),f
 10146  072E  1803               	skipnc
 10147  072F  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 10148  0730  3000               	movlw	0
 10149  0731  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 10150  0732                     l3307:
 10151  0732  30FF               	movlw	255
 10152  0733  07B7               	addwf	sprintf@width^(0+128),f
 10153  0734  1803               	skipnc
 10154  0735  0AB8               	incf	(sprintf@width+1)^(0+128),f
 10155  0736  30FF               	movlw	255
 10156  0737  07B8               	addwf	(sprintf@width+1)^(0+128),f
 10157  0738  0837               	movf	sprintf@width^(0+128),w
 10158  0739  0438               	iorwf	(sprintf@width+1)^(0+128),w
 10159  073A  1D03               	btfss	3,2
 10160  073B  2F3D               	goto	u5621
 10161  073C  2F3E               	goto	u5620
 10162  073D                     u5621:
 10163  073D  2F23               	goto	l3303
 10164  073E                     u5620:
 10165  073E                     l3309:
 10166                           
 10167                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
 10168  073E  3003               	movlw	3
 10169  073F  0535               	andwf	sprintf@flag^(0+128),w
 10170  0740  00AB               	movwf	??_sprintf^(0+128)
 10171  0741  3000               	movlw	0
 10172  0742  0536               	andwf	(sprintf@flag+1)^(0+128),w
 10173  0743  00AC               	movwf	(??_sprintf+1)^(0+128)
 10174  0744  082B               	movf	??_sprintf^(0+128),w
 10175  0745  042C               	iorwf	(??_sprintf^(0+128)+1),w
 10176  0746  1903               	btfsc	3,2
 10177  0747  2F49               	goto	u5631
 10178  0748  2F4A               	goto	u5630
 10179  0749                     u5631:
 10180  0749  2FB9               	goto	l3321
 10181  074A                     u5630:
 10182  074A                     l3311:
 10183                           
 10184                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
 10185  074A  302D               	movlw	45
 10186  074B  00AB               	movwf	??_sprintf^(0+128)
 10187  074C  0820               	movf	sprintf@sp^(0+128),w
 10188  074D  0084               	movwf	4
 10189  074E  1783               	bsf	3,7
 10190  074F  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10191  0750  1383               	bcf	3,7
 10192  0751  082B               	movf	??_sprintf^(0+128),w
 10193  0752  0080               	movwf	0
 10194  0753                     l3313:
 10195  0753  3001               	movlw	1
 10196  0754  07A0               	addwf	sprintf@sp^(0+128),f
 10197  0755  1803               	skipnc
 10198  0756  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 10199  0757  3000               	movlw	0
 10200  0758  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 10201  0759  2FB9               	goto	l3321
 10202  075A                     l3315:
 10203                           
 10204                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpowers[(unsigned int)prec]) % 
      +                          10 + '0';
 10205  075A  3000               	movlw	0
 10206  075B  1283               	bcf	3,5	;RP0=0, select bank0
 10207  075C  1303               	bcf	3,6	;RP1=0, select bank0
 10208  075D  00A3               	movwf	___llmod@divisor+3
 10209  075E  3000               	movlw	0
 10210  075F  00A2               	movwf	___llmod@divisor+2
 10211  0760  3000               	movlw	0
 10212  0761  00A1               	movwf	___llmod@divisor+1
 10213  0762  300A               	movlw	10
 10214  0763  00A0               	movwf	___llmod@divisor
 10215  0764  1683               	bsf	3,5	;RP0=1, select bank1
 10216  0765  1303               	bcf	3,6	;RP1=0, select bank1
 10217  0766  0847               	movf	sprintf@prec^(0+128),w
 10218  0767  00AB               	movwf	??_sprintf^(0+128)
 10219  0768  3001               	movlw	1
 10220  0769                     u5645:
 10221  0769  1003               	clrc
 10222  076A  0DAB               	rlf	??_sprintf^(0+128),f
 10223  076B  3EFF               	addlw	-1
 10224  076C  1D03               	skipz
 10225  076D  2F69               	goto	u5645
 10226  076E  1003               	clrc
 10227  076F  0D2B               	rlf	??_sprintf^(0+128),w
 10228  0770  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10229  0771  0084               	movwf	4
 10230  0772  120A  118A  200D  120A  118A  	fcall	stringdir
 10231  0777  00F0               	movwf	___lldiv@divisor
 10232  0778  120A  118A  200D  120A  118A  	fcall	stringdir
 10233  077D  00F1               	movwf	___lldiv@divisor+1
 10234  077E  120A  118A  200D  120A  118A  	fcall	stringdir
 10235  0783  00F2               	movwf	___lldiv@divisor+2
 10236  0784  120A  118A  200D  120A  118A  	fcall	stringdir
 10237  0789  00F3               	movwf	___lldiv@divisor+3
 10238  078A  0840               	movf	(sprintf@val+3)^(0+128),w
 10239  078B  00F7               	movwf	___lldiv@dividend+3
 10240  078C  083F               	movf	(sprintf@val+2)^(0+128),w
 10241  078D  00F6               	movwf	___lldiv@dividend+2
 10242  078E  083E               	movf	(sprintf@val+1)^(0+128),w
 10243  078F  00F5               	movwf	___lldiv@dividend+1
 10244  0790  083D               	movf	sprintf@val^(0+128),w
 10245  0791  00F4               	movwf	___lldiv@dividend
 10246  0792  160A  158A  25BA  120A  118A  	fcall	___lldiv
 10247  0797  0873               	movf	?___lldiv+3,w
 10248  0798  1283               	bcf	3,5	;RP0=0, select bank0
 10249  0799  1303               	bcf	3,6	;RP1=0, select bank0
 10250  079A  00A7               	movwf	___llmod@dividend+3
 10251  079B  0872               	movf	?___lldiv+2,w
 10252  079C  00A6               	movwf	___llmod@dividend+2
 10253  079D  0871               	movf	?___lldiv+1,w
 10254  079E  00A5               	movwf	___llmod@dividend+1
 10255  079F  0870               	movf	?___lldiv,w
 10256  07A0  00A4               	movwf	___llmod@dividend
 10257  07A1  160A  158A  250B  120A  118A  	fcall	___llmod
 10258  07A6  1283               	bcf	3,5	;RP0=0, select bank0
 10259  07A7  1303               	bcf	3,6	;RP1=0, select bank0
 10260  07A8  0820               	movf	?___llmod,w
 10261  07A9  3E30               	addlw	48
 10262  07AA  1683               	bsf	3,5	;RP0=1, select bank1
 10263  07AB  1303               	bcf	3,6	;RP1=0, select bank1
 10264  07AC  00AC               	movwf	(??_sprintf+1)^(0+128)
 10265  07AD  082C               	movf	(??_sprintf+1)^(0+128),w
 10266  07AE  00C9               	movwf	sprintf@c^(0+128)
 10267  07AF                     l3317:
 10268                           
 10269                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
 10270  07AF  0849               	movf	sprintf@c^(0+128),w
 10271  07B0  00AB               	movwf	??_sprintf^(0+128)
 10272  07B1  0820               	movf	sprintf@sp^(0+128),w
 10273  07B2  0084               	movwf	4
 10274  07B3  1783               	bsf	3,7
 10275  07B4  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10276  07B5  1383               	bcf	3,7
 10277  07B6  082B               	movf	??_sprintf^(0+128),w
 10278  07B7  0080               	movwf	0
 10279  07B8  2F53               	goto	l3313
 10280  07B9                     l3321:
 10281                           
 10282                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
 10283  07B9  30FF               	movlw	255
 10284  07BA  07C7               	addwf	sprintf@prec^(0+128),f
 10285  07BB  1803               	skipnc
 10286  07BC  0AC8               	incf	(sprintf@prec+1)^(0+128),f
 10287  07BD  30FF               	movlw	255
 10288  07BE  07C8               	addwf	(sprintf@prec+1)^(0+128),f
 10289  07BF  0A47               	incf	sprintf@prec^(0+128),w
 10290  07C0  1D03               	skipz
 10291  07C1  2FC6               	goto	u5651
 10292  07C2  0A48               	incf	(sprintf@prec+1)^(0+128),w
 10293  07C3  1D03               	btfss	3,2
 10294  07C4  2FC6               	goto	u5651
 10295  07C5  2FC7               	goto	u5650
 10296  07C6                     u5651:
 10297  07C6  2F5A               	goto	l3315
 10298  07C7                     u5650:
 10299  07C7                     l3323:
 10300                           
 10301                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
 10302  07C7  3001               	movlw	1
 10303  07C8  07A2               	addwf	sprintf@f^(0+128),f
 10304  07C9  30FF               	movlw	-1
 10305  07CA  0722               	addwf	sprintf@f^(0+128),w
 10306  07CB  0084               	movwf	4
 10307  07CC  120A  118A  200D  120A  118A  	fcall	stringdir
 10308  07D1  00AB               	movwf	??_sprintf^(0+128)
 10309  07D2  082B               	movf	??_sprintf^(0+128),w
 10310  07D3  00C9               	movwf	sprintf@c^(0+128)
 10311  07D4  0849               	movf	sprintf@c^(0+128),w
 10312  07D5  1D03               	btfss	3,2
 10313  07D6  2FD8               	goto	u5661
 10314  07D7  2FDB               	goto	u5660
 10315  07D8                     u5661:
 10316  07D8  160A  118A  2D44   	goto	l3039
 10317  07DB                     u5660:
 10318  07DB                     l3325:
 10319                           
 10320                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10321  07DB  0820               	movf	sprintf@sp^(0+128),w
 10322  07DC  0084               	movwf	4
 10323  07DD  1783               	bsf	3,7
 10324  07DE  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10325  07DF  1383               	bcf	3,7
 10326  07E0  0180               	clrf	0
 10327  07E1                     l326:
 10328  07E1  0008               	return
 10329  07E2                     __end_of_sprintf:

Data Sizes:
    Strings     38
    Constant    144
    Data        1
    BSS         62
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     47      70
    BANK3            96      0      40
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_3(CODE[3]), STR_2(CODE[16]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 40
		 -> buffer(BANK3[40]), pantalla(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    UART_Write_String@buf	PTR unsigned char  size(2) Largest target is 40
		 -> STR_4(CODE[2]), buffer(BANK3[40]), pantalla(BANK1[20]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _UART_Write_String->_UART_Write

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   32221
                                             42 BANK1      5     5      0
                       _UART_TX_Init
                         _UART_Write
                  _UART_Write_String
                         _USART_Read
                             _setOsc
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             47    36     11   31783
                                              0 BANK1     42    31     11
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setOsc                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Write_String                                    7     5      2     416
                                              1 COMMON     7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_TX_Init
   _UART_Write
   _UART_Write_String
     _UART_Write
   _USART_Read
   _setOsc
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      28       9       41.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     2F      46       7       87.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CA      12        0.0%
ABS                  0      0      CA       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 18:05:05 2021

                         pc 0002                          l70 0199                          l80 0805  
                        l66 01A1                          l68 018A                          l77 1B8C  
              ___awdiv@sign 0021                          fsr 0004         ___wmul@multiplicand 0072  
__size_of_UART_Write_String 0042         __Umul8_16@word_mpld 0076                         l110 1B4A  
                       l113 1B54                         l122 1B39                         l107 1B66  
                       l125 1B40                         l119 1C78                         l330 1BBD  
                       l234 0C9E                         l227 12B2                         l332 1BD5  
                       l500 093F                         l501 08A4                         l326 07E1  
                       l511 0932                         l504 0902                         l256 1605  
                       l521 1022                         l516 1CD9                         l524 108E  
                       l700 153A                         l540 086C                         l517 1CF5  
                       l525 10A7                         l533 0881                         l518 1D0A  
                       l366 1E1F                         l703 1BB0                         l543 0881  
                       l551 1FC2                         l296 0481                         l529 00D3  
                       l810 1F0C                         l811 1F18                         l803 1EF0  
                       l547 1FFF                         l483 1E88                         l548 1F71  
                       l636 1CBC                         l661 13BD                         l670 153A  
                       l558 1FF2                         l646 1C36                         l663 1394  
                       l496 1DB9                         l657 1316                         l753 0FFF  
                       l817 1B78                         l682 14AC                         l586 1D60  
                       l691 150C                         l772 1BEA                         l765 0FF3  
                       l678 1488                         l774 1BFC                         l759 0F6B  
                       l688 14CE                         l699 152E                         l797 1EAB  
                       l799 1F42                         _RD2 0042                         fsr0 0004  
                       indf 0000                ___awmod@sign 0076                ___flmul@aexp 0036  
              ___flmul@bexp 0037                 _sprintf$928 00B0                ___flmul@sign 0031  
              ___flmul@temp 003C                ___flmul@prod 0038                ___fltol@exp1 005B  
                      l2201 1E51                        l3011 1B55                        l3003 1B79  
                      l2211 1E74                        l2203 1E55                        l3021 1B61  
                      l3013 1B58                        l3005 1B88                        l2301 1C2C  
                      l2205 1E66                        l2213 1E7A                        l2221 1D61  
                      l3101 168B                        l3023 1B62                        l3015 1B5A  
                      l3031 1C3A                        l3007 1B8A                        l2311 12C0  
                      l2303 1C32                        l2215 1E7F                        l2207 1E6C  
                      l2231 1D71                        l2223 1D62                        l3111 16DB  
                      l3103 16A4                        l3025 1B63                        l3017 1B5B  
                      l3033 1C56                        l3009 1B8B                        l2401 13B1  
                      l2321 12D7                        l2313 12C4                        l2217 1E84  
                      l2209 1E6D                        l2241 1D8A                        l2233 1D76  
                      l2225 1D66                        l3201 0439                        l3121 1768  
                      l3113 16DF                        l3105 16AF                        l3041 154A  
                      l3019 1B5E                        l3035 1C5C                        l3027 0801  
                      l2411 13CF                        l2403 13B5                        l2331 12ED  
                      l2323 12D8                        l2315 12C5                        l2307 12B3  
                      l2171 1BF3                        l2163 1BD7                        l2243 1D8E  
                      l2235 1D7C                        l2251 1DAB                        l2227 1D6B  
                      l3211 0465                        l3203 0441                        l3131 17EA  
                      l3123 1771                        l3115 16E5                        l3107 16B5  
                      l3051 1572                        l3043 1553                        l3029 1C37  
                      l2421 13F9                        l2413 13E6                        l2405 13C1  
                      l2341 12FE                        l2333 12EE                        l2317 12CA  
                      l2325 12DA                        l2309 12BA                        l2173 1BF8  
                      l2165 1BD9                        l2501 0C9F                        l2261 1C7B  
                      l2181 1E27                        l2253 1DB0                        l2245 1D98  
                      l2237 1D7F                        l2229 1D6D                        l3301 071D  
                      l3221 0498                        l3213 0474                        l3205 044C  
                      l3141 0225                        l3133 01B9                        l3125 178C  
                      l3117 1704                        l3109 16C8                        l3061 15BC  
                      l3053 1587                        l3045 155A                        l3037 153B  
                      l2431 1422                        l2423 13FD                        l2415 13EA  
                      l2407 13C6                        l2351 131C                        l2343 1303  
                      l2335 12F4                        l2327 12E2                        l2319 12CF  
                      l2167 1BE0                        l2511 0CB6                        l2503 0CA6  
                      l2271 1C93                        l2263 1C81                        l2191 1E3B  
                      l2183 1E2C                        l2255 1DB5                        l2247 1D9E  
                      l2239 1D86                        l3311 074A                        l3303 0723  
                      l3231 059B                        l3223 049E                        l3215 047B  
                      l3207 0452                        l3151 0273                        l3143 022E  
                      l3135 01D4                        l3119 174F                        l3127 1794  
                      l3071 15EC                        l3063 15BD                        l3055 159A  
                      l3047 155E                        l3039 1544                        l2441 1490  
                      l2433 1460                        l2425 13FE                        l2417 13EE  
                      l2361 1330                        l2353 1320                        l2345 130B  
                      l2337 12F8                        l2329 12E7                        l2169 1BE4  
                      l2601 0F50                        l2521 0CD2                        l2513 0CBB  
                      l2505 0CAC                        l2273 1CA4                        l2265 1C84  
                      l2281 1CB8                        l2193 1E3D                        l2185 1E2E  
                      l2177 1E20                        l2249 1DA5                        l3313 0753  
                      l3321 07B9                        l3305 072C                        l3241 0613  
                      l3233 05A1                        l3225 0517                        l3217 048A  
                      l3209 0458                        l3145 0236                        l3137 01FB  
                      l3153 027C                        l3129 17A3                        l3081 1607  
                      l3073 15F0                        l3065 15C1                        l3057 159E  
                      l3049 156E                        l2451 14AB                        l2443 1495  
                      l2435 1466                        l2427 1407                        l2419 13F7  
                      l2371 1344                        l2363 1334                        l2355 1324  
                      l2347 130C                        l2339 12F9                        l2611 0F75  
                      l2603 0F54                        l2531 0CE7                        l2523 0CD8  
                      l2515 0CC3                        l2507 0CB0                        l2275 1CAA  
                      l2267 1C8B                        l2259 1C79                        l2291 1C0D  
                      l2195 1E43                        l2187 1E32                        l2179 1E23  
                      l3315 075A                        l3307 0732                        l3251 0639  
                      l3243 0619                        l3227 0552                        l3235 05FC  
                      l3219 048F                        l3171 0343                        l3155 02B1  
                      l3147 0254                        l3139 020A                        l3091 164D  
                      l3083 1629                        l3067 15C4                        l3075 1601  
                      l3059 15AE                        l3323 07C7                        l3333 1B39  
                      l2453 14B0                        l2461 14BC                        l2437 146B  
                      l2429 140C                        l2381 1358                        l2373 1348  
                      l2365 1338                        l2357 1328                        l2349 130E  
                      l2621 0FB3                        l2613 0F83                        l2605 0F68  
                      l2541 0D03                        l2533 0CEF                        l2525 0CDC  
                      l2517 0CC5                        l2509 0CB1                        l2277 1CAB  
                      l2269 1C8F                        l2293 1C11                        l2285 1BFD  
                      l2197 1E46                        l2189 1E37                        l3317 07AF  
                      l3309 073E                        l3261 065C                        l3253 063D  
                      l3237 0604                        l3229 0591                        l3181 0382  
                      l3173 035E                        l3165 0302                        l3157 02FE  
                      l3093 1651                        l3085 1637                        l3245 0620  
                      l3325 07DB                        l3077 1603                        l3069 15D9  
                      l3341 00E3                        l3335 1B3F                        l2455 14B3  
                      l2447 149E                        l2439 147A                        l2463 14C0  
                      l2391 1398                        l2383 135C                        l2375 134C  
                      l2367 133C                        l2359 132C                        l2631 0FE7  
                      l2623 0FBE                        l2615 0F87                        l2551 0D46  
                      l2535 0CF1                        l2527 0CDD                        l2519 0CCD  
                      l2279 1CB2                        l2295 1C15                        l2287 1C03  
                      l2711 1B77                        l2703 1B68                        l2199 1E4D  
                      l3271 0695                        l3255 0648                        l3247 0631  
                      l3239 060D                        l3191 03AD                        l3175 0364  
                      l3159 0300                        l3095 166A                        l3087 163B  
                      l3407 161B                        l3351 0121                        l3343 00E7  
                      l2641 1B4A                        l2481 1508                        l2473 14D3  
                      l2465 14C1                        l2457 14B5                        l2449 14A7  
                      l2393 13A1                        l2377 1350                        l2369 1340  
                      l2385 1360                        l2721 1F5F                        l2633 0FEB  
                      l2625 0FCD                        l2617 0FA0                        l2609 0F70  
                      l2561 0DCF                        l2553 0D62                        l2545 0D0C  
                      l2537 0CF9                        l2529 0CE2                        l2297 1C1F  
                      l2289 1C06                        l2705 1B69                        l3281 06C9  
                      l3273 069F                        l3257 064E                        l3249 0635  
                      l3193 03B4                        l3177 0370                        l3185 0389  
                      l3169 0339                        l3097 1683                        l3089 163F  
                      l3361 0152                        l3353 012A                        l3345 00F0  
                      l2643 1B50                        l2491 1524                        l2483 1511  
                      l2475 14D8                        l2467 14C5                        l2459 14BA  
                      l2395 13A3                        l2387 1361                        l2379 1354  
                      l2731 1F87                        l2715 1F43                        l2635 0FEC  
                      l2627 0FD7                        l2619 0FA6                        l2571 0E42  
                      l2563 0DDF                        l2555 0D8E                        l2547 0D1C  
                      l2539 0CFE                        l2299 1C25                        l2707 1B6F  
                      l3291 06F5                        l3283 06D1                        l3275 06AA  
                      l3267 065E                        l3259 0656                        l3195 03EF  
                      l3187 0396                        l3179 0377                        l3099 1687  
                      l3371 0177                        l3363 015B                        l3355 0130  
                      l3347 00F6                        l3339 00D4                        l2493 1528  
                      l2485 1516                        l2477 14E6                        l2469 14CB  
                      l2397 13A7                        l2389 1378                        l2821 1BB3  
                      l2813 0927                        l2805 090E                        l2741 1FB3  
                      l2733 1F89                        l2717 1F56                        l2637 0FF7  
                      l2629 0FD9                        l2581 0EEF                        l2573 0E5F  
                      l2565 0DFC                        l2557 0DAA                        l2549 0D29  
                      l2653 11BE                        l2645 10AB                        l2709 1B75  
                      l3293 06FE                        l3285 06DD                        l3277 06B1  
                      l3197 042E                        l3189 03A4                        l3381 0195  
                      l3373 017C                        l3365 0161                        l3357 0136  
                      l3349 00FC                        l2495 152A                        l2487 151E  
                      l2479 14EA                        l2399 13A8                        l2911 083C  
                      l2903 081C                        l2823 1BB7                        l2815 0937  
                      l2807 0920                        l2743 1FB4                        l2735 1F92  
                      l2727 1F72                        l2591 0F3B                        l2583 0F17  
                      l2575 0E8C                        l2567 0E0C                        l2559 0DC6  
                      l2655 11C4                        l2647 10B1                        l2663 0943  
                      l3295 0702                        l3287 06E3                        l3279 06C0  
                      l3383 019F                        l3375 017F                        l3367 0167  
                      l3359 0149                        l2497 1535                        l2489 1523  
                      l2913 0840                        l2921 085A                        l2905 0831  
                      l2841 1DDE                        l2833 1DBA                        l2825 1BC4  
                      l2761 1FE7                        l2753 1FCE                        l2745 1FBC  
                      l2737 1F9B                        l2729 1F78                        l2593 0F3C  
                      l2585 0F20                        l2577 0E9C                        l2569 0E29  
                      l2681 0AC7                        l2665 0947                        l3297 070D  
                      l3289 06E7                        l3385 01A7                        l3377 0186  
                      l3369 016D                        l2499 1539                        l2931 0876  
                      l2907 0832                        l2851 1E11                        l2843 1DE7  
                      l2835 1DCA                        l2827 1BCB                        l2819 1BB1  
                      l2763 1FF7                        l2747 1FC6                        l2755 1FE0  
                      l2739 1FA9                        l2595 0F45                        l2587 0F2E  
                      l2579 0EC9                        l2659 126F                        l2675 0A38  
                      l2667 0949                        l3299 0719                        l3379 018D  
                      l2861 1CED                        l2909 083A                        l2845 1DF9  
                      l2837 1DCD                        l2853 1E17                        l2941 1D29  
                      l2933 1D0B                        l2829 1BD1                        l2781 08AD  
                      l2773 0898                        l2589 0F37                        l2597 0F4B  
                      l2693 0BE3                        l2677 0A3F                        l2669 0950  
                      l2685 0AF4                        l2863 1D07                        l2871 101A  
                      l2927 0861                        l2919 0848                        l2847 1E07  
                      l2839 1DDA                        l2943 1D3B                        l2935 1D15  
                      l2791 08E4                        l2783 08BE                        l2767 0882  
                      l2599 0F4F                        l2695 0BEA                        l2687 0AFB  
                      l2865 1D09                        l2857 1CBD                        l2881 106A  
                      l2873 1036                        l2953 1B8D                        l2929 0871  
                      l2849 1E08                        l2945 1D49                        l2937 1D18  
                      l2961 1E8F                        l2793 08F2                        l2785 08C0  
                      l2769 088F                        l2859 1CD1                        l2883 10A4  
                      l2875 103E                        l2891 00D1                        l2955 1B91  
                      l2947 1D52                        l2939 1D25                        l2971 1EBC  
                      l2963 1E93                        l2795 08F3                        l2787 08C9  
                      l2779 08A5                        l2699 0C72                        l2885 10A6  
                      l2877 1042                        l2869 1006                        l2893 00D3  
                      l2949 1D58                        l2981 1EE7                        l2973 1EC1  
                      l2965 1EA3                        l2797 08FC                        l2789 08D2  
                      l2879 1066                        l2991 1F1A                        l2983 1EF7  
                      l2975 1ECE                        l2967 1EB3                        l2959 1E8A  
                      l2799 0906                        l2889 00C9                        l2897 0806  
                      l2993 1F30                        l2985 1F02                        l2977 1ED5  
                      l2899 0813                        l2995 1F35                        l2987 1F06  
                      l2979 1ED9                        l2997 1F39                        l2989 1F10  
                      l2999 1F3A                        STR_1 00A3                        STR_2 00B4  
                      STR_3 00C4                        STR_4 00C7                        _BRGH 04C2  
                      u3000 1D66                        u3001 1D65                        u3010 1D71  
                      u3011 1D70                        u3020 1D7C                        u3021 1D7B  
                      u3110 1C93                        u3111 1C92                        u4000 0F87  
                      u3040 1D8E                        u4001 0F86                        u3105 1C85  
                      u3041 1D8D                        u4010 0F96                        u3130 1CA4  
                      u3210 1C32                        u3050 1D98                        u3131 1CA3  
                      u3211 1C31                        u3051 1D97                        u3035 1D80  
                      u3300 1320                        u3220 12C4                        u4020 0FB3  
                      u4100 11C4                        u3301 131F                        u3221 12C3  
                      u4021 0FB2                        u3125 1C94                        u3205 1C26  
                      u4101 11C3                        u3310 1378                        u3230 12CA  
                      u4030 0FCD                        u3150 1CB8                        u3070 1DAB  
                      u3311 1377                        u3231 12C9                        u4031 0FCC  
                      u4015 0F91                        u3151 1CB7                        u3135 1CA0  
                      u3071 1DAA                        u3055 1D94                        u3320 1383  
                      u3240 12CF                        u4040 0FEB                        u3160 1C03  
                      u3080 1DB0                        u3401 13D8                        u3321 1381  
                      u3241 12CE                        u4041 0FEA                        u4025 0FAF  
                      u3145 1CAC                        u3161 1C02                        u3081 1DAF  
                      u3065 1D9F                        u4050 1B50                        u3410 13EA  
                      u3402 13DF                        u3330 1384                        u3250 12ED  
                      u5010 1ED4                        u3090 1C81                        u4051 1B4F  
                      u3411 13E9                        u3403 13E6                        u3315 1374  
                      u3251 12EC                        u5011 1ED3                        u4035 0FC9  
                      u3091 1C80                        u4115 11E1                        u3500 1495  
                      u3420 13EE                        u3340 1398                        u3260 12F8  
                      u5100 1F39                        u3180 1C15                        u4060 10B1  
                      u4140 0947                        u3501 1494                        u3421 13ED  
                      u3341 1397                        u3261 12F7                        u5101 1F38  
                      u5005 1EC6                        u3181 1C14                        u4125 122E  
                      u4061 10B0                        u4205 0A52                        u4141 0946  
                      u5110 1C44                        u3430 13FD                        u3350 13A7  
                      u3270 12FE                        u5030 1EF6                        u3190 1C1F  
                      u4310 1B6F                        u4230 0AFB                        u4150 0950  
                      u3431 13FC                        u3351 13A6                        u3271 12FD  
                      u5031 1EF5                        u3191 1C1E                        u3175 1C07  
                      u4135 127A                        u4311 1B6E                        u4231 0AFA  
                      u4215 0A8E                        u4151 094F                        u5120 1C66  
                      u3600 14EA                        u3520 14AB                        u3280 1303  
                      u4400 1FCD                        u4320 1B75                        u5200 163B  
                      u3601 14E9                        u3521 14AA                        u3281 1302  
                      u5025 1EE8                        u4401 1FCC                        u4321 1B74  
                      u4305 0C75                        u4225 0ACA                        u5201 163A  
                      u5130 1C78                        u3610 14F9                        u3530 14B0  
                      u3450 1422                        u3370 13BD                        u3290 131C  
                      u5050 1F06                        u4330 1F56                        u5210 166A  
                      u5131 1C77                        u3531 14AF                        u3515 14A0  
                      u3451 1421                        u3371 13BC                        u3291 131B  
                      u5051 1F05                        u4331 1F55                        u3195 1C1B  
                      u4075 10CE                        u5211 1669                        u3620 1508  
                      u3540 14BA                        u3380 13C1                        u5060 1F0C  
                      u4420 1FDF                        u4340 1F70                        u3700 0CBB  
                      u2900 1E27                        u5300 020A                        u5220 16A4  
                      u5140 154A                        u3621 1507                        u3541 14B9  
                      u3461 1439                        u3453 141E                        u3445 1400  
                      u3381 13C0                        u3365 13AA                        u5061 1F0B  
                      u5045 1EFB                        u4421 1FDE                        u4341 1F6F  
                      u3701 0CBA                        u4085 1128                        u2901 1E26  
                      u4245 0B1B                        u4165 0970                        u5301 0209  
                      u5221 16A3                        u5141 1549                        u3630 1511  
                      u3550 14C0                        u3470 144D                        u3462 143A  
                      u3390 13C6                        u5070 1F10                        u4510 0902  
                      u4430 1FE6                        u3710 0CDC                        u2910 1E32  
                      u4270 0BEA                        u4190 0A3F                        u5310 0225  
                      u5230 16DF                        u5150 156E                        u3631 1510  
                      u3615 14F4                        u3551 14BF                        u3471 144E  
                      u3463 143F                        u3391 13C5                        u5071 1F0F  
                      u4511 0901                        u4431 1FE5                        u4415 1FCF  
                      u3711 0CDB                        u4095 117D                        u2911 1E31  
                      u4271 0BE9                        u4255 0B57                        u4191 0A3E  
                      u4175 09AC                        u5311 0224                        u5231 16DE  
                      u5151 156D                        u3640 1516                        u3560 14C5  
                      u3480 146B                        u3472 1453                        u3464 1440  
                      u5080 1F25                        u4520 0906                        u4360 1FA9  
                      u3720 0CE2                        u2920 1E43                        u5400 0440  
                      u5240 1768                        u5160 15AE                        u3641 1515  
                      u3561 14C4                        u3481 146A                        u3473 1454  
                      u3465 1445                        u4521 0905                        u4505 08F5  
                      u4361 1FA8                        u3721 0CE1                        u2921 1E42  
                      u4265 0BA2                        u4185 09F7                        u5401 043F  
                      u5305 0206                        u5241 1767                        u5161 15AD  
                      u3650 1523                        u3570 14CB                        u3490 1490  
                      u3466 1446                        u5090 1F35                        u4530 090D  
                      u4450 1FF7                        u3730 0CE7                        u5410 0465  
                      u5330 0338                        u5250 178C                        u5170 15BC  
                      u3651 1522                        u3571 14CA                        u3491 148F  
                      u5091 1F34                        u4531 090C                        u4451 1FF6  
                      u4355 1F94                        u3811 0DEE                        u3731 0CE6  
                      u5411 0464                        u5331 0337                        u5251 178B  
                      u5171 15BB                        u4700 1CD1                        u3660 1528  
                      u3580 14D2                        u4620 1BD1                        u4460 088F  
                      u4380 1FC2                        u3812 0DF5                        u3740 0CFE  
                      u2940 1E55                        u5500 0656                        u5420 0474  
                      u5340 0343                        u5260 17A3                        u5180 1600  
                      u4701 1CD0                        u3661 1527                        u3581 14D1  
                      u4621 1BD0                        u4605 1BBE                        u5085 1F20  
                      u4461 088E                        u4445 1FE9                        u4381 1FC1  
                      u4365 1FA5                        u3901 0F09                        u3821 0E1B  
                      u3813 0DFC                        u3805 0DC8                        u3741 0CFD  
                      u2941 1E54                        u4285 0BFD                        u5501 0655  
                      u5421 0473                        u5341 0342                        u5325 0305  
                      u5261 17A2                        u5181 15FF                        u4710 1CED  
                      u3670 1539                        u3590 14D8                        u4630 1DCA  
                      u4550 091F                        u4470 08A3                        u4390 1FC6  
                      u2870 1BE4                        u3902 0F10                        u3822 0E22  
                      u3750 0D03                        u5430 048F                        u5350 035E  
                      u5270 01B9                        u5190 1637                        u4711 1CEC  
                      u3671 1538                        u3591 14D7                        u4631 1DC9  
                      u4615 1BC5                        u4551 091E                        u4471 08A2  
                      u4391 1FC5                        u4375 1FB5                        u2871 1BE3  
                      u3903 0F17                        u3823 0E29                        u3751 0D02  
                      u2935 1E47                        u4295 0C39                        u5431 048E  
                      u5415 0461                        u5351 035D                        u5335 0334  
                      u5271 17FA                        u5191 1634                        u4720 1D07  
                      u4800 00D1                        u4560 0926                        u3680 0CB0  
                      u2960 1E66                        u5600 070D                        u5520 0694  
                      u5360 0370                        u5280 01D4                        u4721 1D06  
                      u4801 00D0                        u4561 0925                        u4545 090F  
                      u3841 0E51                        u3761 0D54                        u3681 0CAF  
                      u2961 1E65                        u5601 070C                        u5521 0693  
                      u5425 0470                        u5361 036F                        u5281 01D3  
                      u5265 179F                        u4730 101A                        u4810 0813  
                      u4650 1DDE                        u4490 08E4                        u2890 1BF8  
                      u3930 0F3B                        u3842 0E58                        u3762 0D5B  
                      u3690 0CB6                        u5610 0723                        u5530 069F  
                      u5370 0396                        u5290 01FB                        u4731 1019  
                      u4811 0812                        u4651 1DDD                        u4491 08E3  
                      u2891 1BF7                        u3931 0F3A                        u3915 0F19  
                      u3851 0E7E                        u3843 0E5F                        u3835 0E2B  
                      u3771 0D70                        u3763 0D62                        u3691 0CB5  
                      u2955 1E56                        u5611 0722                        u5531 069E  
                      u5515 0661                        u5371 0395                        u5291 01FA  
                      u5275 17F5                        u4740 1036                        u4900 0876  
                      u4820 082A                        u4580 0937                        u3852 0E85  
                      u3772 0D77                        u2980 1E7A                        u5620 073E  
                      u5540 06AA                        u5460 0603                        u5380 03A4  
                      u5700 0186                        _RCIF 0065                        u4725 1D03  
                      u4741 1035                        u4901 0875                        u4645 1DCF  
                      u4581 0936                        u4485 08CB                        u2885 1BEB  
                      u3925 0F30                        u3861 0EAB                        u3853 0E8C  
                      u3781 0D9C                        u3773 0D7E                        u2981 1E79  
                      u2965 1E62                        u5621 073D                        u5605 0709  
                      u5541 06A9                        u5525 0690                        u5461 0602  
                      u5445 051A                        u5381 03A3                        u5701 0185  
                      u4750 1042                        u4830 0840                        u4670 1DF9  
                      u4910 1D15                        u4590 1BB7                        u3950 0F4F  
                      u3870 0ED5                        u3862 0EB2                        u3782 0DA3  
                      u2990 1E7F                        u5630 074A                        u5550 06C0  
                      u5470 061F                        u5710 0195                        u4751 1041  
                      u4831 083F                        u4671 1DF8                        u4911 1D14  
                      u4591 1BB6                        u4575 0929                        u4495 08E0  
                      u3951 0F4E                        u3863 0EB9                        u3791 0DB8  
                      u3783 0DAA                        u2991 1E7E                        u2975 1E6E  
                      u5631 0749                        u5551 06BF                        u5471 061E  
                      u5455 05A4                        u5375 0392                        u5711 0194  
                      u4840 0847                        u3960 0F54                        u3792 0DBF  
                      u5560 06D1                        u5480 0639                        u5720 019F  
                      u4761 1051                        u4841 0846                        u4825 0825  
                      u4665 1DE0                        u3961 0F53                        u3945 0F3E  
                      u3881 0EE1                        u3793 0DC6                        u5561 06D0  
                      u5545 06A6                        u5481 0638                        u5721 019E  
                      u4770 106A                        u4762 1052                        u4690 1E17  
                      u4930 1D29                        u3970 0F68                        u3890 0EFD  
                      u3882 0EE8                        u5650 07C7                        u5570 06DD  
                      u5490 064E                        u4771 1069                        u4763 1057  
                      u4691 1E16                        u4675 1DF5                        u4931 1D28  
                      u3971 0F67                        u3883 0EEF                        u3875 0ED0  
                      u5651 07C6                        u5571 06DC                        u5555 06BC  
                      u5491 064D                        u5395 03B7                        u4764 1058  
                      u4860 0859                        u4940 1D3B                        u3980 0F6F  
                      u5660 07DB                        u5580 06E7                        u4781 1079  
                      u4765 105D                        u4861 0858                        u4685 1E09  
                      u4941 1D3A                        u4925 1D1A                        u3981 0F6E  
                      u5661 07D8                        u5645 0769                        u5581 06E6  
                      u5670 1B3F                        u4790 10A4                        u4782 107A  
                      u4766 105E                        u4870 0860                        u3990 0F75  
                      u5590 06F5                        u5671 1B3E                        u4791 10A3  
                      u4783 107F                        u4871 085F                        u4855 0849  
                      u3991 0F74                        u3895 0EF8                        u5591 06F4  
                      u4784 1080                        u4960 1D58                        u5680 016D  
                      u4785 1085                        u4961 1D57                        u4945 1D37  
                      u5737 01AF                        u5681 016C                        u4786 1086  
                      u4890 0871                        u4970 1E8F                        u5690 017C  
                      u4795 10A0                        u4891 0870                        u4955 1D4A  
                      u4971 1E8E                        u5595 06F1                        u5691 017B  
                      u4980 1E93                        u4885 0863                        u4981 1E92  
                      u4990 1EB3                        u4991 1EB2                        _SPEN 00C7  
                      _TRMT 04C1                        _TXEN 04C5                        _SYNC 04C4  
                      _main 00D4                        btemp 007E                        start 0000  
             ___fltol@sign1 005A             __end_of___fladd 153B                       ?_main 0070  
           __end_of___awdiv 1E89             __end_of___flneg 00D4             __end_of___awmod 1DBA  
           __end_of___flmul 1000             __end_of___flsub 1BB1             __end_of___fltol 0882  
                     _ANSEL 0188             __end_of___lldiv 1E20             ___awdiv@divisor 0077  
           __end_of___llmod 1D61             __end_of___lwdiv 1CBD             __end_of___lwmod 1C37  
           ___awdiv@counter 0020                       _RCREG 001A                       _SPBRG 0099  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       _TXREG 0019                 ?_UART_Write 0070  
           __end_of_dpowers 00A3                       _scale 0940             __end_of_isdigit 1B79  
                     _setup 1B79                       pclath 000A                       status 0003  
                     wtemp0 007E             __end_of_sprintf 07E2                 ?_USART_Read 0070  
           __initialization 07E2                __end_of_main 01B9                      ??_main 00CA  
      __size_of__tdiv_to_l_ 00BD            ___llmod@dividend 0024                      ?_scale 003E  
          ___awdiv@dividend 0079                      ?_setup 0070                      _ANSELH 0189  
                    _TRISC6 043E                      _TRISC7 043F            __end_of___xxtofl 1F43  
          __end_of__powers_ 0047                      ___flge 1006                      ___fleq 1CBD  
       __size_of_UART_Write 000C                   ??___fladd 005A                      ___wmul 1BB1  
                 ??___awdiv 007B                   ??___flneg 0074                   ??___awmod 0074  
                 ??___flmul 002C                   ??___flsub 007E                   ??___fltol 0055  
                 ??___lldiv 0078                   ??___llmod 0028                   ??___lwdiv 007A  
                 ??___lwmod 0074                      _buffer 0190                      _fround 10A8  
          ___awdiv@quotient 0022                      _setOsc 0801             ___awmod@divisor 0070  
           ___awmod@counter 0075                   ??_isdigit 0070          __size_of__Umul8_16 0027  
       __size_of_USART_Read 0008                   ??_sprintf 00AB                  ___flge@ff1 0070  
                ___flge@ff2 0074                ___xxtofl@arg 007A                ___xxtofl@exp 0079  
              ___xxtofl@val 0070                  ___fleq@ff1 0070                  ___fleq@ff2 0074  
   __end_of__initialization 07FC                  ___flneg@f1 0070                  ___fltol@f1 0051  
            __pcstackCOMMON 0070                __pidataBANK1 0800               __end_of_scale 0C9F  
             __end_of_setup 1B8D                  __div_to_l_ 0882             __div_to_l_@exp1 0025  
           __div_to_l_@cntr 0024                     ??_scale 0042             __div_to_l_@quot 0020  
              sprintf@width 00B7                     ??_setup 0070                  __pbssBANK1 00CF  
                __pbssBANK3 0190               __div_to_l_@f1 0070               __div_to_l_@f2 0074  
         __end_of__Umul8_16 1BFD                  __pmaintext 00D4                     ?___flge 0070  
                   ?___fleq 0070                     ?___wmul 0070                     ?_fround 003E  
                   ?_setOsc 0070                   ?___xxtofl 0070                ??_UART_Write 0070  
             ?_UART_TX_Init 0070                  __stringtab 0003                ??_USART_Read 0070  
         __end_of__npowers_ 007B             __size_of___flge 00A2             __size_of___fleq 004E  
                   ___fladd 12B3                     ___awdiv 1E20                     ___flneg 00C9  
                   ___awmod 1D61                     ___flmul 0C9F                     ___flsub 1B8D  
                   ___fltol 0806                     ___lldiv 1DBA             __size_of___wmul 0025  
        __end_of_UART_Write 1B55                     ___llmod 1D0B                     ___lwdiv 1C79  
                _fround$925 004D                  _fround$926 0049                     ___lwmod 1BFD  
           __size_of_fround 020B             __size_of_setOsc 0005                     __ptext1 153B  
                   __ptext2 0940                     __ptext3 1D61                     __ptext4 1E20  
                   __ptext5 1B67                     __ptext6 10A8                     __ptext7 1BFD  
                   __ptext8 1C79                     __ptext9 0C9F                 ?__div_to_l_ 0070  
                   _dpowers 007B                     _isdigit 1B67                  ??___xxtofl 0074  
          ___awmod@dividend 0072          __end_of_USART_Read 1B41              ??_UART_TX_Init 0070  
                   _sprintf 153B                     clrloop0 1B42        end_of_initialization 07FC  
           ___lldiv@divisor 0070             ___lldiv@counter 007D                   _RCSTAbits 0018  
                   psplit$0 D002A              __tdiv_to_l_@f1 0070              __tdiv_to_l_@f2 0074  
             ??__tdiv_to_l_ 0078                   _PORTCbits 0007                   _PORTDbits 0008  
            UART_Write@data 0070                 ___fladd@grs 0065               ___xxtofl@sign 0078  
               ___flmul@grs 0032         __size_of__div_to_l_ 00BE              __end_of___flge 10A8  
            __end_of___fleq 1D0B              __end_of___wmul 1BD6           pnum$text1_split_1 002A  
            __end_of_fround 12B3              __end_of_setOsc 0806         start_initialization 07E2  
       __end_of__tdiv_to_l_ 2000             ___llmod@divisor 0020             ___llmod@counter 0029  
                  ??___flge 0078                    ??___fleq 0078                    ??___wmul 0074  
                 __Umul8_16 1BD6        __end_of_UART_TX_Init 1B67                 __pdataBANK1 00E5  
                  ??_fround 0042                    ??_setOsc 0070               sprintf@tmpval 00B9  
                 ___fladd@a 0056                   ___fladd@b 0052                  fround@prec 0051  
                 ___flmul@a 0028                   ___flmul@b 0024                   ___flsub@a 0066  
                 ___flsub@b 006A                   ___latbits 0002               __pcstackBANK0 0020  
             __pcstackBANK1 00A0           __size_of___xxtofl 00BA                 sprintf@flag 00B5  
               sprintf@eexp 00C1                 sprintf@fval 00C3                 sprintf@prec 00C7  
          ___lwdiv@dividend 0078                    ?___fladd 0052                    ?___awdiv 0077  
                  ?___flneg 0070                    ?___awmod 0070                    ?___flmul 0024  
                  ?___flsub 0066                    ?___fltol 0051                    ?___lldiv 0070  
                  ?___llmod 0020                   __npowers_ 0047                  ?__Umul8_16 0070  
                  ?___lwdiv 0076                    ?___lwmod 0070                   __pstrings 0003  
               __tdiv_to_l_ 1F43                   _contador2 00E5                ??__div_to_l_ 0078  
                  ?_isdigit 0070                   _scale$927 004C            ___lwdiv@quotient 007B  
                  ?_sprintf 00A0              __size_of_scale 035F              __size_of_setup 0014  
            ___wmul@product 0074                   clear_ram0 1B41          __end_of__div_to_l_ 0940  
      UART_Write_String@buf 0071                 __stringbase 0012           ___wmul@multiplier 0070  
     __size_of_UART_TX_Init 0012                 ??__Umul8_16 0072            __size_of___fladd 0288  
          __size_of___awdiv 0069            __size_of___flneg 000B            __size_of___awmod 0059  
          __size_of___flmul 0361            __size_of___flsub 0024            __size_of___fltol 007C  
          __size_of___lldiv 0066            __size_of___llmod 0056            __size_of___lwdiv 0044  
          __size_of___lwmod 003A          __end_of__stringtab 0013                 _isdigit$759 0070  
         _UART_Write_String 1C37                  sprintf@val 00BD                    ___xxtofl 1E89  
          __size_of_isdigit 0012          ?_UART_Write_String 0071             ___lwdiv@divisor 0076  
           ___lwdiv@counter 007D                    __ptext10 1BD6                    __ptext11 1F43  
                  __ptext20 00C9                    __ptext12 0882                    __ptext21 1006  
                  __ptext13 1E89                    __ptext22 1CBD                    __ptext14 1BB1  
                  __ptext23 1B79                    __ptext15 1D0B                    __ptext24 0801  
                  __ptext16 1DBA                    __ptext25 1B39                    __ptext17 0806  
                  __ptext26 1C37                    __ptext18 1B8D                    __ptext27 1B49  
                  __ptext19 12B3                    __ptext28 1B55                    __powers_ 0013  
                  _contador 00CF            __size_of_sprintf F2A7                _UART_TX_Init 1B55  
       ??_UART_Write_String 0073               __size_of_main 00E5                   pnum$text1 000D  
                  _recibido 00D0                    _pantalla 00D1   __end_of_UART_Write_String 1C79  
                  isdigit@c 0071                    scale@scl 0050                   sprintf@ap 00B4  
          __tdiv_to_l_@exp1 0025            __tdiv_to_l_@cntr 0024                   sprintf@sp 00A0  
          __tdiv_to_l_@quot 0020            ___lwmod@dividend 0072            ___lldiv@dividend 0074  
                 stringcode 000D                  _OSCCONbits 008F          UART_Write_String@i 0076  
              ?__tdiv_to_l_ 0070      __Umul8_16@multiplicand 0070                    sprintf@c 00C9  
                  sprintf@f 00A2            ___lldiv@quotient 0079             ___lwmod@divisor 0070  
           ___lwmod@counter 0075                    stringdir 000D                    stringtab 0003  
                _UART_Write 1B49               ___fladd@signs 0062                ___fladd@aexp 0063  
              ___fladd@bexp 0064        __Umul8_16@multiplier 0078                  _USART_Read 1B39  
         __Umul8_16@product 0074  
