

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Mar 09 22:32:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	psect	text11,local,class=CODE,merge=1,delta=2
    19                           	psect	text12,local,class=CODE,merge=1,delta=2
    20                           	psect	text13,local,class=CODE,merge=1,delta=2
    21                           	psect	text14,local,class=CODE,merge=1,delta=2
    22                           	psect	text15,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  008F                     	;# 
   339  0090                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0094                     	;# 
   346  0095                     	;# 
   347  0096                     	;# 
   348  0097                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009A                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  0105                     	;# 
   358  0107                     	;# 
   359  0108                     	;# 
   360  0109                     	;# 
   361  010C                     	;# 
   362  010C                     	;# 
   363  010D                     	;# 
   364  010E                     	;# 
   365  010F                     	;# 
   366  0185                     	;# 
   367  0187                     	;# 
   368  0188                     	;# 
   369  0189                     	;# 
   370  018C                     	;# 
   371  018D                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000D                     	;# 
   386  000E                     	;# 
   387  000E                     	;# 
   388  000F                     	;# 
   389  0010                     	;# 
   390  0011                     	;# 
   391  0012                     	;# 
   392  0013                     	;# 
   393  0014                     	;# 
   394  0015                     	;# 
   395  0015                     	;# 
   396  0016                     	;# 
   397  0017                     	;# 
   398  0018                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001B                     	;# 
   403  001C                     	;# 
   404  001D                     	;# 
   405  001E                     	;# 
   406  001F                     	;# 
   407  0081                     	;# 
   408  0085                     	;# 
   409  0086                     	;# 
   410  0087                     	;# 
   411  0088                     	;# 
   412  0089                     	;# 
   413  008C                     	;# 
   414  008D                     	;# 
   415  008E                     	;# 
   416  008F                     	;# 
   417  0090                     	;# 
   418  0091                     	;# 
   419  0092                     	;# 
   420  0093                     	;# 
   421  0093                     	;# 
   422  0093                     	;# 
   423  0094                     	;# 
   424  0095                     	;# 
   425  0096                     	;# 
   426  0097                     	;# 
   427  0098                     	;# 
   428  0099                     	;# 
   429  009A                     	;# 
   430  009B                     	;# 
   431  009C                     	;# 
   432  009D                     	;# 
   433  009E                     	;# 
   434  009F                     	;# 
   435  0105                     	;# 
   436  0107                     	;# 
   437  0108                     	;# 
   438  0109                     	;# 
   439  010C                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  010E                     	;# 
   443  010F                     	;# 
   444  0185                     	;# 
   445  0187                     	;# 
   446  0188                     	;# 
   447  0189                     	;# 
   448  018C                     	;# 
   449  018D                     	;# 
   450  0013                     _SSPBUF	set	19
   451  0014                     _SSPCON	set	20
   452  0019                     _TXREG	set	25
   453  0009                     _PORTE	set	9
   454  0008                     _PORTD	set	8
   455  0007                     _PORTC	set	7
   456  0006                     _PORTB	set	6
   457  0005                     _PORTA	set	5
   458  0063                     _SSPIF	set	99
   459  00C7                     _SPEN	set	199
   460  0042                     _RD2	set	66
   461  0093                     _SSPADD	set	147
   462  0094                     _SSPSTAT	set	148
   463  0091                     _SSPCON2	set	145
   464  0099                     _SPBRG	set	153
   465  008F                     _OSCCONbits	set	143
   466  0089                     _TRISE	set	137
   467  0088                     _TRISD	set	136
   468  0087                     _TRISC	set	135
   469  0086                     _TRISB	set	134
   470  0085                     _TRISA	set	133
   471  04A0                     _BF	set	1184
   472  048B                     _RCEN	set	1163
   473  048E                     _ACKSTAT	set	1166
   474  048C                     _ACKEN	set	1164
   475  048D                     _ACKDT	set	1165
   476  048A                     _PEN	set	1162
   477  0489                     _RSEN	set	1161
   478  0488                     _SEN	set	1160
   479  043C                     _TRISC4	set	1084
   480  043B                     _TRISC3	set	1083
   481  04C1                     _TRMT	set	1217
   482  04C5                     _TXEN	set	1221
   483  043F                     _TRISC7	set	1087
   484  043E                     _TRISC6	set	1086
   485  04C4                     _SYNC	set	1220
   486  04C2                     _BRGH	set	1218
   487  0189                     _ANSELH	set	393
   488  0188                     _ANSEL	set	392
   489                           
   490                           	psect	cinit
   491  07FC                     start_initialization:	
   492                           ; #config settings
   493                           
   494  07FC                     __initialization:
   495  07FC                     end_of_initialization:	
   496                           ;End of C runtime variable initialization code
   497                           
   498  07FC                     __end_of__initialization:
   499  07FC  0183               	clrf	3
   500  07FD  120A  118A  2E30   	ljmp	_main	;jump to C main() function
   501                           
   502                           	psect	cstackCOMMON
   503  0070                     __pcstackCOMMON:
   504  0070                     ?_setup:
   505  0070                     ??_setup:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_UART_TX_Init:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ??_UART_TX_Init:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_MPU6050_Init:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_setOsc:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ??_setOsc:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_MPU6050_Read:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_I2C_Master_Init:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ??_I2C_Master_Init:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_I2C_Start:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_I2C_Master_Write:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ??_I2C_Master_Write:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_I2C_Master_Stop:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ??_I2C_Master_Stop:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_I2C_Read:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ??_I2C_Read:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_main:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_UART_Write:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ??_UART_Write:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_I2C_Master_Wait:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ??_I2C_Master_Wait:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_I2C_ACK:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ??_I2C_ACK:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_I2C_NACK:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ??_I2C_NACK:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?___awdiv:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     UART_Write@data:	
   584                           ; 2 bytes @ 0x0
   585                           
   586  0070                     I2C_Master_Write@data:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ___awdiv@divisor:	
   590                           ; 1 bytes @ 0x0
   591                           
   592                           
   593                           ; 2 bytes @ 0x0
   594  0070                     	ds	1
   595  0071                     ??_I2C_Start:
   596  0071                     I2C_Start@add:	
   597                           ; 1 bytes @ 0x1
   598                           
   599  0071                     I2C_Read@ACK_NACK:	
   600                           ; 1 bytes @ 0x1
   601                           
   602                           
   603                           ; 1 bytes @ 0x1
   604  0071                     	ds	1
   605  0072                     ??_MPU6050_Init:
   606  0072                     I2C_Read@Data:	
   607                           ; 1 bytes @ 0x2
   608                           
   609  0072                     ___awdiv@dividend:	
   610                           ; 1 bytes @ 0x2
   611                           
   612                           
   613                           ; 2 bytes @ 0x2
   614  0072                     	ds	2
   615  0074                     ??___awdiv:
   616                           
   617                           ; 1 bytes @ 0x4
   618  0074                     	ds	1
   619  0075                     ___awdiv@counter:
   620                           
   621                           ; 1 bytes @ 0x5
   622  0075                     	ds	1
   623  0076                     ___awdiv@sign:
   624                           
   625                           ; 1 bytes @ 0x6
   626  0076                     	ds	1
   627  0077                     ___awdiv@quotient:
   628                           
   629                           ; 2 bytes @ 0x7
   630  0077                     	ds	2
   631  0079                     ??_MPU6050_Read:
   632                           
   633                           ; 1 bytes @ 0x9
   634  0079                     	ds	4
   635                           
   636                           	psect	cstackBANK0
   637  0020                     __pcstackBANK0:
   638  0020                     	ds	12
   639  002C                     MPU6050_Read@Ay:
   640                           
   641                           ; 2 bytes @ 0xC
   642  002C                     	ds	2
   643  002E                     ??_main:
   644                           
   645                           ; 1 bytes @ 0xE
   646  002E                     	ds	2
   647                           
   648                           	psect	maintext
   649  0630                     __pmaintext:	
   650 ;;
   651 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   652 ;;
   653 ;; *************** function _main *****************
   654 ;; Defined at:
   655 ;;		line 54 in file "main.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;		None
   658 ;; Auto vars:     Size  Location     Type
   659 ;;		None
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   664 ;; Tracked objects:
   665 ;;		On entry : B00/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   669 ;;      Params:         0       0       0       0       0
   670 ;;      Locals:         0       0       0       0       0
   671 ;;      Temps:          0       2       0       0       0
   672 ;;      Totals:         0       2       0       0       0
   673 ;;Total ram usage:        2 bytes
   674 ;; Hardware stack levels required when called:    4
   675 ;; This function calls:
   676 ;;		_MPU6050_Init
   677 ;;		_MPU6050_Read
   678 ;;		_UART_TX_Init
   679 ;;		_setOsc
   680 ;;		_setup
   681 ;; This function is called by:
   682 ;;		Startup code after reset
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           
   687                           ;psect for function _main
   688  0630                     _main:
   689  0630                     l1169:	
   690                           ;incstack = 0
   691                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   692                           
   693                           
   694                           ;main.c: 55:     setup();
   695  0630  120A  118A  25F6  120A  118A  	fcall	_setup
   696  0635                     l1171:
   697                           
   698                           ;main.c: 56:     UART_TX_Init();
   699  0635  120A  118A  25C7  120A  118A  	fcall	_UART_TX_Init
   700  063A                     l1173:
   701                           
   702                           ;main.c: 57:     MPU6050_Init();
   703  063A  120A  118A  26C2  120A  118A  	fcall	_MPU6050_Init
   704  063F                     l1175:
   705                           
   706                           ;main.c: 58:     setOsc();
   707  063F  120A  118A  2581  120A  118A  	fcall	_setOsc
   708  0644                     l45:	
   709                           ;main.c: 62:     while(1)
   710                           
   711                           
   712                           ;main.c: 63:  {;main.c: 64:         RD2 = !RD2;
   713  0644  3004               	movlw	4
   714  0645  1283               	bcf	3,5	;RP0=0, select bank0
   715  0646  1303               	bcf	3,6	;RP1=0, select bank0
   716  0647  0688               	xorwf	8,f
   717  0648                     l1177:
   718                           
   719                           ;main.c: 65:         MPU6050_Read();
   720  0648  120A  118A  275F  120A  118A  	fcall	_MPU6050_Read
   721  064D                     l1179:
   722                           
   723                           ;main.c: 66:         _delay((unsigned long)((50)*(8000000/4000.0)));
   724  064D  3082               	movlw	130
   725  064E  1283               	bcf	3,5	;RP0=0, select bank0
   726  064F  1303               	bcf	3,6	;RP1=0, select bank0
   727  0650  00AF               	movwf	??_main+1
   728  0651  30DD               	movlw	221
   729  0652  00AE               	movwf	??_main
   730  0653                     u437:
   731  0653  0BAE               	decfsz	??_main,f
   732  0654  2E53               	goto	u437
   733  0655  0BAF               	decfsz	??_main+1,f
   734  0656  2E53               	goto	u437
   735  0657  2E44               	goto	l45
   736  0658  120A  118A  2800   	ljmp	start
   737  065B                     __end_of_main:
   738                           
   739                           	psect	text1
   740  05F6                     __ptext1:	
   741 ;; *************** function _setup *****************
   742 ;; Defined at:
   743 ;;		line 74 in file "main.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		status,2
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   757 ;;      Params:         0       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0
   760 ;;      Totals:         0       0       0       0       0
   761 ;;Total ram usage:        0 bytes
   762 ;; Hardware stack levels used:    1
   763 ;; This function calls:
   764 ;;		Nothing
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           
   771                           ;psect for function _setup
   772  05F6                     _setup:
   773  05F6                     l883:	
   774                           ;incstack = 0
   775                           ; Regs used in _setup: [status,2]
   776                           
   777                           
   778                           ;main.c: 75:     ANSEL = 0b00000000;
   779  05F6  1683               	bsf	3,5	;RP0=1, select bank3
   780  05F7  1703               	bsf	3,6	;RP1=1, select bank3
   781  05F8  0188               	clrf	8	;volatile
   782                           
   783                           ;main.c: 76:     ANSELH = 0;
   784  05F9  0189               	clrf	9	;volatile
   785                           
   786                           ;main.c: 78:     PORTA = 0;
   787  05FA  1283               	bcf	3,5	;RP0=0, select bank0
   788  05FB  1303               	bcf	3,6	;RP1=0, select bank0
   789  05FC  0185               	clrf	5	;volatile
   790                           
   791                           ;main.c: 79:     PORTB = 0;
   792  05FD  0186               	clrf	6	;volatile
   793                           
   794                           ;main.c: 80:     PORTC = 0;
   795  05FE  0187               	clrf	7	;volatile
   796                           
   797                           ;main.c: 81:     PORTD = 0;
   798  05FF  0188               	clrf	8	;volatile
   799                           
   800                           ;main.c: 82:     PORTE = 0;
   801  0600  0189               	clrf	9	;volatile
   802                           
   803                           ;main.c: 84:     TRISA = 0b00000000;
   804  0601  1683               	bsf	3,5	;RP0=1, select bank1
   805  0602  1303               	bcf	3,6	;RP1=0, select bank1
   806  0603  0185               	clrf	5	;volatile
   807                           
   808                           ;main.c: 85:     TRISB = 0;
   809  0604  0186               	clrf	6	;volatile
   810                           
   811                           ;main.c: 86:     TRISC = 0b00000000;
   812  0605  0187               	clrf	7	;volatile
   813                           
   814                           ;main.c: 87:     TRISD = 0;
   815  0606  0188               	clrf	8	;volatile
   816                           
   817                           ;main.c: 88:     TRISE = 0;
   818  0607  0189               	clrf	9	;volatile
   819  0608                     l51:
   820  0608  0008               	return
   821  0609                     __end_of_setup:
   822                           
   823                           	psect	text2
   824  0581                     __ptext2:	
   825 ;; *************** function _setOsc *****************
   826 ;; Defined at:
   827 ;;		line 91 in file "main.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         0       0       0       0       0
   842 ;;      Locals:         0       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0
   844 ;;      Totals:         0       0       0       0       0
   845 ;;Total ram usage:        0 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; This function calls:
   848 ;;		Nothing
   849 ;; This function is called by:
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _setOsc
   856  0581                     _setOsc:
   857  0581                     l951:	
   858                           ;incstack = 0
   859                           ; Regs used in _setOsc: [wreg+status,2+status,0]
   860                           
   861                           
   862                           ;main.c: 92:     OSCCONbits.IRCF = 0b111;
   863  0581  3070               	movlw	112
   864  0582  1683               	bsf	3,5	;RP0=1, select bank1
   865  0583  1303               	bcf	3,6	;RP1=0, select bank1
   866  0584  048F               	iorwf	15,f	;volatile
   867  0585                     l54:
   868  0585  0008               	return
   869  0586                     __end_of_setOsc:
   870                           
   871                           	psect	text3
   872  05C7                     __ptext3:	
   873 ;; *************** function _UART_TX_Init *****************
   874 ;; Defined at:
   875 ;;		line 17 in file "USART.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;		None
   878 ;; Auto vars:     Size  Location     Type
   879 ;;		None
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   889 ;;      Params:         0       0       0       0       0
   890 ;;      Locals:         0       0       0       0       0
   891 ;;      Temps:          0       0       0       0       0
   892 ;;      Totals:         0       0       0       0       0
   893 ;;Total ram usage:        0 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_main
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           
   903                           ;psect for function _UART_TX_Init
   904  05C7                     _UART_TX_Init:
   905  05C7                     l885:	
   906                           ;incstack = 0
   907                           ; Regs used in _UART_TX_Init: [wreg]
   908                           
   909                           
   910                           ;USART.c: 19:   BRGH = 0;
   911  05C7  1683               	bsf	3,5	;RP0=1, select bank1
   912  05C8  1303               	bcf	3,6	;RP1=0, select bank1
   913  05C9  1118               	bcf	24,2	;volatile
   914  05CA                     l887:
   915                           
   916                           ;USART.c: 20:   SPBRG = 12;
   917  05CA  300C               	movlw	12
   918  05CB  0099               	movwf	25	;volatile
   919  05CC                     l889:
   920                           
   921                           ;USART.c: 22:   SYNC = 0;
   922  05CC  1218               	bcf	24,4	;volatile
   923  05CD                     l891:
   924                           
   925                           ;USART.c: 23:   SPEN = 1;
   926  05CD  1283               	bcf	3,5	;RP0=0, select bank0
   927  05CE  1303               	bcf	3,6	;RP1=0, select bank0
   928  05CF  1798               	bsf	24,7	;volatile
   929  05D0                     l893:
   930                           
   931                           ;USART.c: 25:   TRISC6 = 0;
   932  05D0  1683               	bsf	3,5	;RP0=1, select bank1
   933  05D1  1303               	bcf	3,6	;RP1=0, select bank1
   934  05D2  1307               	bcf	7,6	;volatile
   935  05D3                     l895:
   936                           
   937                           ;USART.c: 26:   TRISC7 = 1;
   938  05D3  1787               	bsf	7,7	;volatile
   939  05D4                     l897:
   940                           
   941                           ;USART.c: 27:   TXEN = 1;
   942  05D4  1698               	bsf	24,5	;volatile
   943  05D5                     l75:
   944  05D5  0008               	return
   945  05D6                     __end_of_UART_TX_Init:
   946                           
   947                           	psect	text4
   948  075F                     __ptext4:	
   949 ;; *************** function _MPU6050_Read *****************
   950 ;; Defined at:
   951 ;;		line 62 in file "MPU.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;		None
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  buffer         40    0        unsigned char [40]
   956 ;;  Ay              2   12[BANK0 ] int 
   957 ;;  Gz              2    0        int 
   958 ;;  Gy              2    0        int 
   959 ;;  Gx              2    0        int 
   960 ;;  T               2    0        int 
   961 ;;  Az              2    0        int 
   962 ;;  Ax              2    0        int 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   972 ;;      Params:         0       0       0       0       0
   973 ;;      Locals:         0      14       0       0       0
   974 ;;      Temps:          4       0       0       0       0
   975 ;;      Totals:         4      14       0       0       0
   976 ;;Total ram usage:       18 bytes
   977 ;; Hardware stack levels used:    1
   978 ;; Hardware stack levels required when called:    3
   979 ;; This function calls:
   980 ;;		_I2C_Master_Stop
   981 ;;		_I2C_Master_Write
   982 ;;		_I2C_Read
   983 ;;		_I2C_Start
   984 ;;		_UART_Write
   985 ;;		___awdiv
   986 ;; This function is called by:
   987 ;;		_main
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           
   992                           ;psect for function _MPU6050_Read
   993  075F                     _MPU6050_Read:
   994  075F                     l1147:	
   995                           ;incstack = 0
   996                           ; Regs used in _MPU6050_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   997                           
   998                           
   999                           ;MPU.c: 64:   char buffer[40];;MPU.c: 65:   int Ax,Ay,Az,T,Gx,Gy,Gz;;MPU.c: 67:   I2C_St
      +                          art(0xD0);
  1000  075F  30D0               	movlw	208
  1001  0760  120A  118A  25E6  120A  118A  	fcall	_I2C_Start
  1002                           
  1003                           ;MPU.c: 68:   I2C_Master_Write(0x3B);
  1004  0765  303B               	movlw	59
  1005  0766  120A  118A  25D6  120A  118A  	fcall	_I2C_Master_Write
  1006                           
  1007                           ;MPU.c: 69:   I2C_Master_Stop();
  1008  076B  120A  118A  2586  120A  118A  	fcall	_I2C_Master_Stop
  1009                           
  1010                           ;MPU.c: 70:   I2C_Start(0xD1);
  1011  0770  30D1               	movlw	209
  1012  0771  120A  118A  25E6  120A  118A  	fcall	_I2C_Start
  1013  0776                     l1149:
  1014  0776  3000               	movlw	0
  1015  0777  120A  118A  2609  120A  118A  	fcall	_I2C_Read
  1016  077C  3000               	movlw	0
  1017  077D  120A  118A  2609  120A  118A  	fcall	_I2C_Read
  1018  0782                     l1151:
  1019                           
  1020                           ;MPU.c: 72:   Ay = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1021  0782  3000               	movlw	0
  1022  0783  120A  118A  2609  120A  118A  	fcall	_I2C_Read
  1023  0788  00F9               	movwf	??_MPU6050_Read
  1024  0789  01FA               	clrf	??_MPU6050_Read+1
  1025  078A  3000               	movlw	0
  1026  078B  120A  118A  2609  120A  118A  	fcall	_I2C_Read
  1027  0790  00FB               	movwf	??_MPU6050_Read+2
  1028  0791  01FC               	clrf	??_MPU6050_Read+3
  1029  0792  087B               	movf	??_MPU6050_Read+2,w
  1030  0793  00FC               	movwf	??_MPU6050_Read+3
  1031  0794  01FB               	clrf	??_MPU6050_Read+2
  1032  0795  0879               	movf	??_MPU6050_Read,w
  1033  0796  047B               	iorwf	??_MPU6050_Read+2,w
  1034  0797  1283               	bcf	3,5	;RP0=0, select bank0
  1035  0798  1303               	bcf	3,6	;RP1=0, select bank0
  1036  0799  00AC               	movwf	MPU6050_Read@Ay
  1037  079A  087A               	movf	??_MPU6050_Read+1,w
  1038  079B  047C               	iorwf	??_MPU6050_Read+3,w
  1039  079C  00AD               	movwf	MPU6050_Read@Ay+1
  1040  079D                     l1153:
  1041  079D  3000               	movlw	0
  1042  079E  120A  118A  2609  120A  118A  	fcall	_I2C_Read
  1043  07A3  3000               	movlw	0
  1044  07A4  120A  118A  2609  120A  118A  	fcall	_I2C_Read
  1045  07A9                     l1155:
  1046  07A9  3000               	movlw	0
  1047  07AA  120A  118A  2609  120A  118A  	fcall	_I2C_Read
  1048  07AF  3000               	movlw	0
  1049  07B0  120A  118A  2609  120A  118A  	fcall	_I2C_Read
  1050  07B5                     l1157:
  1051  07B5  3000               	movlw	0
  1052  07B6  120A  118A  2609  120A  118A  	fcall	_I2C_Read
  1053  07BB  3000               	movlw	0
  1054  07BC  120A  118A  2609  120A  118A  	fcall	_I2C_Read
  1055  07C1                     l1159:
  1056  07C1  3000               	movlw	0
  1057  07C2  120A  118A  2609  120A  118A  	fcall	_I2C_Read
  1058  07C7  3000               	movlw	0
  1059  07C8  120A  118A  2609  120A  118A  	fcall	_I2C_Read
  1060  07CD                     l1161:
  1061  07CD  3000               	movlw	0
  1062  07CE  120A  118A  2609  120A  118A  	fcall	_I2C_Read
  1063  07D3  3001               	movlw	1
  1064  07D4  120A  118A  2609  120A  118A  	fcall	_I2C_Read
  1065  07D9                     l1163:
  1066                           
  1067                           ;MPU.c: 78:   I2C_Master_Stop();
  1068  07D9  120A  118A  2586  120A  118A  	fcall	_I2C_Master_Stop
  1069  07DE                     l1165:
  1070                           
  1071                           ;MPU.c: 80:   PORTB = (Ay+16384)/128;
  1072  07DE  3080               	movlw	128
  1073  07DF  00F0               	movwf	___awdiv@divisor
  1074  07E0  3000               	movlw	0
  1075  07E1  00F1               	movwf	___awdiv@divisor+1
  1076  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1077  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1078  07E4  082C               	movf	MPU6050_Read@Ay,w
  1079  07E5  3E00               	addlw	0
  1080  07E6  00F2               	movwf	___awdiv@dividend
  1081  07E7  082D               	movf	MPU6050_Read@Ay+1,w
  1082  07E8  1803               	skipnc
  1083  07E9  3E01               	addlw	1
  1084  07EA  3E40               	addlw	64
  1085  07EB  00F3               	movwf	___awdiv@dividend+1
  1086  07EC  120A  118A  265B  120A  118A  	fcall	___awdiv
  1087  07F1  0870               	movf	?___awdiv,w
  1088  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  1089  07F3  1303               	bcf	3,6	;RP1=0, select bank0
  1090  07F4  0086               	movwf	6	;volatile
  1091  07F5                     l1167:
  1092                           
  1093                           ;MPU.c: 82:   UART_Write(1);
  1094  07F5  3001               	movlw	1
  1095  07F6  120A  118A  25A1  120A  118A  	fcall	_UART_Write
  1096  07FB                     l109:
  1097  07FB  0008               	return
  1098  07FC                     __end_of_MPU6050_Read:
  1099                           
  1100                           	psect	text5
  1101  065B                     __ptext5:	
  1102 ;; *************** function ___awdiv *****************
  1103 ;; Defined at:
  1104 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  divisor         2    0[COMMON] int 
  1107 ;;  dividend        2    2[COMMON] int 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  quotient        2    7[COMMON] int 
  1110 ;;  sign            1    6[COMMON] unsigned char 
  1111 ;;  counter         1    5[COMMON] unsigned char 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  2    0[COMMON] int 
  1114 ;; Registers used:
  1115 ;;		wreg, status,2, status,0
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1121 ;;      Params:         4       0       0       0       0
  1122 ;;      Locals:         4       0       0       0       0
  1123 ;;      Temps:          1       0       0       0       0
  1124 ;;      Totals:         9       0       0       0       0
  1125 ;;Total ram usage:        9 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; This function calls:
  1128 ;;		Nothing
  1129 ;; This function is called by:
  1130 ;;		_MPU6050_Read
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           
  1135                           ;psect for function ___awdiv
  1136  065B                     ___awdiv:
  1137  065B                     l1051:	
  1138                           ;incstack = 0
  1139                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1140                           
  1141  065B  01F6               	clrf	___awdiv@sign
  1142  065C                     l1053:
  1143  065C  1FF1               	btfss	___awdiv@divisor+1,7
  1144  065D  2E5F               	goto	u311
  1145  065E  2E60               	goto	u310
  1146  065F                     u311:
  1147  065F  2E67               	goto	l1059
  1148  0660                     u310:
  1149  0660                     l1055:
  1150  0660  09F0               	comf	___awdiv@divisor,f
  1151  0661  09F1               	comf	___awdiv@divisor+1,f
  1152  0662  0AF0               	incf	___awdiv@divisor,f
  1153  0663  1903               	skipnz
  1154  0664  0AF1               	incf	___awdiv@divisor+1,f
  1155  0665                     l1057:
  1156  0665  01F6               	clrf	___awdiv@sign
  1157  0666  0AF6               	incf	___awdiv@sign,f
  1158  0667                     l1059:
  1159  0667  1FF3               	btfss	___awdiv@dividend+1,7
  1160  0668  2E6A               	goto	u321
  1161  0669  2E6B               	goto	u320
  1162  066A                     u321:
  1163  066A  2E74               	goto	l1065
  1164  066B                     u320:
  1165  066B                     l1061:
  1166  066B  09F2               	comf	___awdiv@dividend,f
  1167  066C  09F3               	comf	___awdiv@dividend+1,f
  1168  066D  0AF2               	incf	___awdiv@dividend,f
  1169  066E  1903               	skipnz
  1170  066F  0AF3               	incf	___awdiv@dividend+1,f
  1171  0670                     l1063:
  1172  0670  3001               	movlw	1
  1173  0671  00F4               	movwf	??___awdiv
  1174  0672  0874               	movf	??___awdiv,w
  1175  0673  06F6               	xorwf	___awdiv@sign,f
  1176  0674                     l1065:
  1177  0674  01F7               	clrf	___awdiv@quotient
  1178  0675  01F8               	clrf	___awdiv@quotient+1
  1179  0676                     l1067:
  1180  0676  0870               	movf	___awdiv@divisor,w
  1181  0677  0471               	iorwf	___awdiv@divisor+1,w
  1182  0678  1903               	btfsc	3,2
  1183  0679  2E7B               	goto	u331
  1184  067A  2E7C               	goto	u330
  1185  067B                     u331:
  1186  067B  2EB3               	goto	l1087
  1187  067C                     u330:
  1188  067C                     l1069:
  1189  067C  01F5               	clrf	___awdiv@counter
  1190  067D  0AF5               	incf	___awdiv@counter,f
  1191  067E  2E8A               	goto	l1075
  1192  067F                     l1071:
  1193  067F  3001               	movlw	1
  1194  0680                     u345:
  1195  0680  1003               	clrc
  1196  0681  0DF0               	rlf	___awdiv@divisor,f
  1197  0682  0DF1               	rlf	___awdiv@divisor+1,f
  1198  0683  3EFF               	addlw	-1
  1199  0684  1D03               	skipz
  1200  0685  2E80               	goto	u345
  1201  0686                     l1073:
  1202  0686  3001               	movlw	1
  1203  0687  00F4               	movwf	??___awdiv
  1204  0688  0874               	movf	??___awdiv,w
  1205  0689  07F5               	addwf	___awdiv@counter,f
  1206  068A                     l1075:
  1207  068A  1FF1               	btfss	___awdiv@divisor+1,7
  1208  068B  2E8D               	goto	u351
  1209  068C  2E8E               	goto	u350
  1210  068D                     u351:
  1211  068D  2E7F               	goto	l1071
  1212  068E                     u350:
  1213  068E                     l1077:
  1214  068E  3001               	movlw	1
  1215  068F                     u365:
  1216  068F  1003               	clrc
  1217  0690  0DF7               	rlf	___awdiv@quotient,f
  1218  0691  0DF8               	rlf	___awdiv@quotient+1,f
  1219  0692  3EFF               	addlw	-1
  1220  0693  1D03               	skipz
  1221  0694  2E8F               	goto	u365
  1222  0695  0871               	movf	___awdiv@divisor+1,w
  1223  0696  0273               	subwf	___awdiv@dividend+1,w
  1224  0697  1D03               	skipz
  1225  0698  2E9B               	goto	u375
  1226  0699  0870               	movf	___awdiv@divisor,w
  1227  069A  0272               	subwf	___awdiv@dividend,w
  1228  069B                     u375:
  1229  069B  1C03               	skipc
  1230  069C  2E9E               	goto	u371
  1231  069D  2E9F               	goto	u370
  1232  069E                     u371:
  1233  069E  2EA6               	goto	l1083
  1234  069F                     u370:
  1235  069F                     l1079:
  1236  069F  0870               	movf	___awdiv@divisor,w
  1237  06A0  02F2               	subwf	___awdiv@dividend,f
  1238  06A1  0871               	movf	___awdiv@divisor+1,w
  1239  06A2  1C03               	skipc
  1240  06A3  03F3               	decf	___awdiv@dividend+1,f
  1241  06A4  02F3               	subwf	___awdiv@dividend+1,f
  1242  06A5                     l1081:
  1243  06A5  1477               	bsf	___awdiv@quotient,0
  1244  06A6                     l1083:
  1245  06A6  3001               	movlw	1
  1246  06A7                     u385:
  1247  06A7  1003               	clrc
  1248  06A8  0CF1               	rrf	___awdiv@divisor+1,f
  1249  06A9  0CF0               	rrf	___awdiv@divisor,f
  1250  06AA  3EFF               	addlw	-1
  1251  06AB  1D03               	skipz
  1252  06AC  2EA7               	goto	u385
  1253  06AD                     l1085:
  1254  06AD  3001               	movlw	1
  1255  06AE  02F5               	subwf	___awdiv@counter,f
  1256  06AF  1D03               	btfss	3,2
  1257  06B0  2EB2               	goto	u391
  1258  06B1  2EB3               	goto	u390
  1259  06B2                     u391:
  1260  06B2  2E8E               	goto	l1077
  1261  06B3                     u390:
  1262  06B3                     l1087:
  1263  06B3  0876               	movf	___awdiv@sign,w
  1264  06B4  1903               	btfsc	3,2
  1265  06B5  2EB7               	goto	u401
  1266  06B6  2EB8               	goto	u400
  1267  06B7                     u401:
  1268  06B7  2EBD               	goto	l1091
  1269  06B8                     u400:
  1270  06B8                     l1089:
  1271  06B8  09F7               	comf	___awdiv@quotient,f
  1272  06B9  09F8               	comf	___awdiv@quotient+1,f
  1273  06BA  0AF7               	incf	___awdiv@quotient,f
  1274  06BB  1903               	skipnz
  1275  06BC  0AF8               	incf	___awdiv@quotient+1,f
  1276  06BD                     l1091:
  1277  06BD  0878               	movf	___awdiv@quotient+1,w
  1278  06BE  00F1               	movwf	?___awdiv+1
  1279  06BF  0877               	movf	___awdiv@quotient,w
  1280  06C0  00F0               	movwf	?___awdiv
  1281  06C1                     l438:
  1282  06C1  0008               	return
  1283  06C2                     __end_of___awdiv:
  1284                           
  1285                           	psect	text6
  1286  05A1                     __ptext6:	
  1287 ;; *************** function _UART_Write *****************
  1288 ;; Defined at:
  1289 ;;		line 30 in file "USART.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  data            1    wreg     unsigned char 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  data            1    0[COMMON] unsigned char 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1303 ;;      Params:         0       0       0       0       0
  1304 ;;      Locals:         1       0       0       0       0
  1305 ;;      Temps:          0       0       0       0       0
  1306 ;;      Totals:         1       0       0       0       0
  1307 ;;Total ram usage:        1 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_MPU6050_Read
  1313 ;;		_UART_Write_String
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           
  1318                           ;psect for function _UART_Write
  1319  05A1                     _UART_Write:
  1320                           
  1321                           ;incstack = 0
  1322                           ; Regs used in _UART_Write: [wreg]
  1323                           ;UART_Write@data stored from wreg
  1324  05A1  00F0               	movwf	UART_Write@data
  1325  05A2                     l1025:
  1326  05A2                     l78:	
  1327                           ;USART.c: 30: void UART_Write(unsigned char data);USART.c: 31: {;USART.c: 32:   while(!T
      +                          RMT);
  1328                           
  1329  05A2  1683               	bsf	3,5	;RP0=1, select bank1
  1330  05A3  1303               	bcf	3,6	;RP1=0, select bank1
  1331  05A4  1C98               	btfss	24,1	;volatile
  1332  05A5  2DA7               	goto	u271
  1333  05A6  2DA8               	goto	u270
  1334  05A7                     u271:
  1335  05A7  2DA2               	goto	l78
  1336  05A8                     u270:
  1337  05A8                     l1027:
  1338                           
  1339                           ;USART.c: 33:   TXREG = data;
  1340  05A8  0870               	movf	UART_Write@data,w
  1341  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  1342  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  1343  05AB  0099               	movwf	25	;volatile
  1344  05AC                     l81:
  1345  05AC  0008               	return
  1346  05AD                     __end_of_UART_Write:
  1347                           
  1348                           	psect	text7
  1349  0609                     __ptext7:	
  1350 ;; *************** function _I2C_Read *****************
  1351 ;; Defined at:
  1352 ;;		line 89 in file "I2c.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  ACK_NACK        1    wreg     unsigned char 
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  ACK_NACK        1    1[COMMON] unsigned char 
  1357 ;;  Data            1    2[COMMON] unsigned char 
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      unsigned char 
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0, pclath, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1367 ;;      Params:         0       0       0       0       0
  1368 ;;      Locals:         2       0       0       0       0
  1369 ;;      Temps:          1       0       0       0       0
  1370 ;;      Totals:         3       0       0       0       0
  1371 ;;Total ram usage:        3 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:    1
  1374 ;; This function calls:
  1375 ;;		_I2C_ACK
  1376 ;;		_I2C_NACK
  1377 ;; This function is called by:
  1378 ;;		_MPU6050_Read
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           
  1383                           ;psect for function _I2C_Read
  1384  0609                     _I2C_Read:
  1385                           
  1386                           ;incstack = 0
  1387                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  1388                           ;I2C_Read@ACK_NACK stored from wreg
  1389  0609  00F1               	movwf	I2C_Read@ACK_NACK
  1390  060A                     l1037:
  1391                           
  1392                           ;I2c.c: 89: unsigned char I2C_Read(unsigned char ACK_NACK);I2c.c: 90: {;I2c.c: 92:     u
      +                          nsigned char Data;;I2c.c: 93:     RCEN = 1;
  1393  060A  1683               	bsf	3,5	;RP0=1, select bank1
  1394  060B  1303               	bcf	3,6	;RP1=0, select bank1
  1395  060C  1591               	bsf	17,3	;volatile
  1396  060D                     l191:	
  1397                           ;I2c.c: 94:     while(!BF);
  1398                           
  1399  060D  1C14               	btfss	20,0	;volatile
  1400  060E  2E10               	goto	u281
  1401  060F  2E11               	goto	u280
  1402  0610                     u281:
  1403  0610  2E0D               	goto	l191
  1404  0611                     u280:
  1405  0611                     l1039:
  1406                           
  1407                           ;I2c.c: 95:     Data = SSPBUF;
  1408  0611  1283               	bcf	3,5	;RP0=0, select bank0
  1409  0612  1303               	bcf	3,6	;RP1=0, select bank0
  1410  0613  0813               	movf	19,w	;volatile
  1411  0614  00F0               	movwf	??_I2C_Read
  1412  0615  0870               	movf	??_I2C_Read,w
  1413  0616  00F2               	movwf	I2C_Read@Data
  1414  0617                     l1041:
  1415                           
  1416                           ;I2c.c: 96:     if(ACK_NACK==0)
  1417  0617  0871               	movf	I2C_Read@ACK_NACK,w
  1418  0618  1D03               	btfss	3,2
  1419  0619  2E1B               	goto	u291
  1420  061A  2E1C               	goto	u290
  1421  061B                     u291:
  1422  061B  2E22               	goto	l1045
  1423  061C                     u290:
  1424  061C                     l1043:
  1425                           
  1426                           ;I2c.c: 97:         I2C_ACK();
  1427  061C  120A  118A  258F  120A  118A  	fcall	_I2C_ACK
  1428  0621  2E27               	goto	l196
  1429  0622                     l1045:
  1430                           
  1431                           ;I2c.c: 99:         I2C_NACK();
  1432  0622  120A  118A  2598  120A  118A  	fcall	_I2C_NACK
  1433  0627                     l196:
  1434  0627  1283               	bcf	3,5	;RP0=0, select bank0
  1435  0628  1303               	bcf	3,6	;RP1=0, select bank0
  1436  0629  1D8C               	btfss	12,3	;volatile
  1437  062A  2E2C               	goto	u301
  1438  062B  2E2D               	goto	u300
  1439  062C                     u301:
  1440  062C  2E27               	goto	l196
  1441  062D                     u300:
  1442  062D                     l198:
  1443                           
  1444                           ;I2c.c: 101:     SSPIF=0;
  1445  062D  118C               	bcf	12,3	;volatile
  1446  062E                     l1047:
  1447                           
  1448                           ;I2c.c: 102:     return Data;
  1449  062E  0872               	movf	I2C_Read@Data,w
  1450  062F                     l199:
  1451  062F  0008               	return
  1452  0630                     __end_of_I2C_Read:
  1453                           
  1454                           	psect	text8
  1455  0598                     __ptext8:	
  1456 ;; *************** function _I2C_NACK *****************
  1457 ;; Defined at:
  1458 ;;		line 62 in file "I2c.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		None
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1472 ;;      Params:         0       0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0
  1474 ;;      Temps:          0       0       0       0       0
  1475 ;;      Totals:         0       0       0       0       0
  1476 ;;Total ram usage:        0 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; This function calls:
  1479 ;;		Nothing
  1480 ;; This function is called by:
  1481 ;;		_I2C_Read
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           
  1486                           ;psect for function _I2C_NACK
  1487  0598                     _I2C_NACK:
  1488  0598                     l1023:	
  1489                           ;incstack = 0
  1490                           ; Regs used in _I2C_NACK: []
  1491                           
  1492                           
  1493                           ;I2c.c: 64:  ACKDT = 1;
  1494  0598  1683               	bsf	3,5	;RP0=1, select bank1
  1495  0599  1303               	bcf	3,6	;RP1=0, select bank1
  1496  059A  1691               	bsf	17,5	;volatile
  1497                           
  1498                           ;I2c.c: 65:  ACKEN = 1;
  1499  059B  1611               	bsf	17,4	;volatile
  1500  059C                     l173:	
  1501                           ;I2c.c: 66:     while(ACKEN);
  1502                           
  1503  059C  1A11               	btfsc	17,4	;volatile
  1504  059D  2D9F               	goto	u261
  1505  059E  2DA0               	goto	u260
  1506  059F                     u261:
  1507  059F  2D9C               	goto	l173
  1508  05A0                     u260:
  1509  05A0                     l176:
  1510  05A0  0008               	return
  1511  05A1                     __end_of_I2C_NACK:
  1512                           
  1513                           	psect	text9
  1514  058F                     __ptext9:	
  1515 ;; *************** function _I2C_ACK *****************
  1516 ;; Defined at:
  1517 ;;		line 55 in file "I2c.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;		None
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;		None
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		None
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1531 ;;      Params:         0       0       0       0       0
  1532 ;;      Locals:         0       0       0       0       0
  1533 ;;      Temps:          0       0       0       0       0
  1534 ;;      Totals:         0       0       0       0       0
  1535 ;;Total ram usage:        0 bytes
  1536 ;; Hardware stack levels used:    1
  1537 ;; This function calls:
  1538 ;;		Nothing
  1539 ;; This function is called by:
  1540 ;;		_I2C_Read
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           
  1545                           ;psect for function _I2C_ACK
  1546  058F                     _I2C_ACK:
  1547  058F                     l1021:	
  1548                           ;incstack = 0
  1549                           ; Regs used in _I2C_ACK: []
  1550                           
  1551                           
  1552                           ;I2c.c: 57:  ACKDT = 0;
  1553  058F  1683               	bsf	3,5	;RP0=1, select bank1
  1554  0590  1303               	bcf	3,6	;RP1=0, select bank1
  1555  0591  1291               	bcf	17,5	;volatile
  1556                           
  1557                           ;I2c.c: 58:     ACKEN = 1;
  1558  0592  1611               	bsf	17,4	;volatile
  1559  0593                     l167:	
  1560                           ;I2c.c: 59:     while(ACKEN);
  1561                           
  1562  0593  1A11               	btfsc	17,4	;volatile
  1563  0594  2D96               	goto	u251
  1564  0595  2D97               	goto	u250
  1565  0596                     u251:
  1566  0596  2D93               	goto	l167
  1567  0597                     u250:
  1568  0597                     l170:
  1569  0597  0008               	return
  1570  0598                     __end_of_I2C_ACK:
  1571                           
  1572                           	psect	text10
  1573  06C2                     __ptext10:	
  1574 ;; *************** function _MPU6050_Init *****************
  1575 ;; Defined at:
  1576 ;;		line 19 in file "MPU.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;		None
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;		None
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, status,2, status,0, pclath, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1590 ;;      Params:         0       0       0       0       0
  1591 ;;      Locals:         0       0       0       0       0
  1592 ;;      Temps:          3       0       0       0       0
  1593 ;;      Totals:         3       0       0       0       0
  1594 ;;Total ram usage:        3 bytes
  1595 ;; Hardware stack levels used:    1
  1596 ;; Hardware stack levels required when called:    3
  1597 ;; This function calls:
  1598 ;;		_I2C_Master_Init
  1599 ;;		_I2C_Master_Stop
  1600 ;;		_I2C_Master_Write
  1601 ;;		_I2C_Start
  1602 ;; This function is called by:
  1603 ;;		_main
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           
  1608                           ;psect for function _MPU6050_Init
  1609  06C2                     _MPU6050_Init:
  1610  06C2                     l1095:	
  1611                           ;incstack = 0
  1612                           ; Regs used in _MPU6050_Init: [wreg+status,2+status,0+pclath+cstack]
  1613                           
  1614                           
  1615                           ;MPU.c: 22:   _delay((unsigned long)((100)*(8000000/4000.0)));
  1616  06C2  3002               	movlw	2
  1617  06C3  00F4               	movwf	??_MPU6050_Init+2
  1618  06C4  3004               	movlw	4
  1619  06C5  00F3               	movwf	??_MPU6050_Init+1
  1620  06C6  30BA               	movlw	186
  1621  06C7  00F2               	movwf	??_MPU6050_Init
  1622  06C8                     u447:
  1623  06C8  0BF2               	decfsz	??_MPU6050_Init,f
  1624  06C9  2EC8               	goto	u447
  1625  06CA  0BF3               	decfsz	??_MPU6050_Init+1,f
  1626  06CB  2EC8               	goto	u447
  1627  06CC  0BF4               	decfsz	??_MPU6050_Init+2,f
  1628  06CD  2EC8               	goto	u447
  1629  06CE  0000               	nop
  1630  06CF                     l1097:
  1631                           
  1632                           ;MPU.c: 23:   I2C_Master_Init();
  1633  06CF  120A  118A  25AD  120A  118A  	fcall	_I2C_Master_Init
  1634  06D4                     l1099:
  1635                           
  1636                           ;MPU.c: 26:   I2C_Start(0xD0);
  1637  06D4  30D0               	movlw	208
  1638  06D5  120A  118A  25E6  120A  118A  	fcall	_I2C_Start
  1639  06DA                     l1101:
  1640                           
  1641                           ;MPU.c: 27:   I2C_Master_Write(0x19);
  1642  06DA  3019               	movlw	25
  1643  06DB  120A  118A  25D6  120A  118A  	fcall	_I2C_Master_Write
  1644  06E0                     l1103:
  1645                           
  1646                           ;MPU.c: 28:   I2C_Master_Write(0x07);
  1647  06E0  3007               	movlw	7
  1648  06E1  120A  118A  25D6  120A  118A  	fcall	_I2C_Master_Write
  1649  06E6                     l1105:
  1650                           
  1651                           ;MPU.c: 29:   I2C_Master_Stop();
  1652  06E6  120A  118A  2586  120A  118A  	fcall	_I2C_Master_Stop
  1653  06EB                     l1107:
  1654                           
  1655                           ;MPU.c: 32:   I2C_Start(0xD0);
  1656  06EB  30D0               	movlw	208
  1657  06EC  120A  118A  25E6  120A  118A  	fcall	_I2C_Start
  1658  06F1                     l1109:
  1659                           
  1660                           ;MPU.c: 33:   I2C_Master_Write(0x6B);
  1661  06F1  306B               	movlw	107
  1662  06F2  120A  118A  25D6  120A  118A  	fcall	_I2C_Master_Write
  1663  06F7                     l1111:
  1664                           
  1665                           ;MPU.c: 34:   I2C_Master_Write(0x01);
  1666  06F7  3001               	movlw	1
  1667  06F8  120A  118A  25D6  120A  118A  	fcall	_I2C_Master_Write
  1668  06FD                     l1113:
  1669                           
  1670                           ;MPU.c: 35:   I2C_Master_Stop();
  1671  06FD  120A  118A  2586  120A  118A  	fcall	_I2C_Master_Stop
  1672  0702                     l1115:
  1673                           
  1674                           ;MPU.c: 38:   I2C_Start(0xD0);
  1675  0702  30D0               	movlw	208
  1676  0703  120A  118A  25E6  120A  118A  	fcall	_I2C_Start
  1677  0708                     l1117:
  1678                           
  1679                           ;MPU.c: 39:   I2C_Master_Write(0x1A);
  1680  0708  301A               	movlw	26
  1681  0709  120A  118A  25D6  120A  118A  	fcall	_I2C_Master_Write
  1682  070E                     l1119:
  1683                           
  1684                           ;MPU.c: 40:   I2C_Master_Write(0x00);
  1685  070E  3000               	movlw	0
  1686  070F  120A  118A  25D6  120A  118A  	fcall	_I2C_Master_Write
  1687  0714                     l1121:
  1688                           
  1689                           ;MPU.c: 41:   I2C_Master_Stop();
  1690  0714  120A  118A  2586  120A  118A  	fcall	_I2C_Master_Stop
  1691  0719                     l1123:
  1692                           
  1693                           ;MPU.c: 44:   I2C_Start(0xD0);
  1694  0719  30D0               	movlw	208
  1695  071A  120A  118A  25E6  120A  118A  	fcall	_I2C_Start
  1696  071F                     l1125:
  1697                           
  1698                           ;MPU.c: 45:   I2C_Master_Write(0x1C);
  1699  071F  301C               	movlw	28
  1700  0720  120A  118A  25D6  120A  118A  	fcall	_I2C_Master_Write
  1701  0725                     l1127:
  1702                           
  1703                           ;MPU.c: 46:   I2C_Master_Write(0x00);
  1704  0725  3000               	movlw	0
  1705  0726  120A  118A  25D6  120A  118A  	fcall	_I2C_Master_Write
  1706  072B                     l1129:
  1707                           
  1708                           ;MPU.c: 47:   I2C_Master_Stop();
  1709  072B  120A  118A  2586  120A  118A  	fcall	_I2C_Master_Stop
  1710  0730                     l1131:
  1711                           
  1712                           ;MPU.c: 50:   I2C_Start(0xD0);
  1713  0730  30D0               	movlw	208
  1714  0731  120A  118A  25E6  120A  118A  	fcall	_I2C_Start
  1715  0736                     l1133:
  1716                           
  1717                           ;MPU.c: 51:   I2C_Master_Write(0x1B);
  1718  0736  301B               	movlw	27
  1719  0737  120A  118A  25D6  120A  118A  	fcall	_I2C_Master_Write
  1720  073C                     l1135:
  1721                           
  1722                           ;MPU.c: 52:   I2C_Master_Write(0x18);
  1723  073C  3018               	movlw	24
  1724  073D  120A  118A  25D6  120A  118A  	fcall	_I2C_Master_Write
  1725  0742                     l1137:
  1726                           
  1727                           ;MPU.c: 53:   I2C_Master_Stop();
  1728  0742  120A  118A  2586  120A  118A  	fcall	_I2C_Master_Stop
  1729  0747                     l1139:
  1730                           
  1731                           ;MPU.c: 56:   I2C_Start(0xD0);
  1732  0747  30D0               	movlw	208
  1733  0748  120A  118A  25E6  120A  118A  	fcall	_I2C_Start
  1734  074D                     l1141:
  1735                           
  1736                           ;MPU.c: 57:   I2C_Master_Write(0x38);
  1737  074D  3038               	movlw	56
  1738  074E  120A  118A  25D6  120A  118A  	fcall	_I2C_Master_Write
  1739  0753                     l1143:
  1740                           
  1741                           ;MPU.c: 58:   I2C_Master_Write(0x01);
  1742  0753  3001               	movlw	1
  1743  0754  120A  118A  25D6  120A  118A  	fcall	_I2C_Master_Write
  1744  0759                     l1145:
  1745                           
  1746                           ;MPU.c: 59:   I2C_Master_Stop();
  1747  0759  120A  118A  2586  120A  118A  	fcall	_I2C_Master_Stop
  1748  075E                     l106:
  1749  075E  0008               	return
  1750  075F                     __end_of_MPU6050_Init:
  1751                           
  1752                           	psect	text11
  1753  05E6                     __ptext11:	
  1754 ;; *************** function _I2C_Start *****************
  1755 ;; Defined at:
  1756 ;;		line 36 in file "I2c.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  add             1    wreg     unsigned char 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  add             1    1[COMMON] unsigned char 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0, pclath, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1770 ;;      Params:         0       0       0       0       0
  1771 ;;      Locals:         1       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0
  1773 ;;      Totals:         1       0       0       0       0
  1774 ;;Total ram usage:        1 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:    2
  1777 ;; This function calls:
  1778 ;;		_I2C_Master_Wait
  1779 ;;		_I2C_Master_Write
  1780 ;; This function is called by:
  1781 ;;		_MPU6050_Init
  1782 ;;		_MPU6050_Read
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           
  1787                           ;psect for function _I2C_Start
  1788  05E6                     _I2C_Start:
  1789                           
  1790                           ;incstack = 0
  1791                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  1792                           ;I2C_Start@add stored from wreg
  1793  05E6  00F1               	movwf	I2C_Start@add
  1794  05E7                     l1029:
  1795                           
  1796                           ;I2c.c: 36: void I2C_Start(char add);I2c.c: 37: {;I2c.c: 38:     I2C_Master_Wait();
  1797  05E7  120A  118A  25BA  120A  118A  	fcall	_I2C_Master_Wait
  1798  05EC                     l1031:
  1799                           
  1800                           ;I2c.c: 39:     SEN = 1;
  1801  05EC  1683               	bsf	3,5	;RP0=1, select bank1
  1802  05ED  1303               	bcf	3,6	;RP1=0, select bank1
  1803  05EE  1411               	bsf	17,0	;volatile
  1804                           
  1805                           ;I2c.c: 40:     I2C_Master_Write(add);
  1806  05EF  0871               	movf	I2C_Start@add,w
  1807  05F0  120A  118A  25D6  120A  118A  	fcall	_I2C_Master_Write
  1808  05F5                     l158:
  1809  05F5  0008               	return
  1810  05F6                     __end_of_I2C_Start:
  1811                           
  1812                           	psect	text12
  1813  05D6                     __ptext12:	
  1814 ;; *************** function _I2C_Master_Write *****************
  1815 ;; Defined at:
  1816 ;;		line 69 in file "I2c.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;  data            1    wreg     unsigned char 
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;  data            1    0[COMMON] unsigned char 
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      unsigned char 
  1823 ;; Registers used:
  1824 ;;		wreg, status,2, status,0, pclath, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1830 ;;      Params:         0       0       0       0       0
  1831 ;;      Locals:         1       0       0       0       0
  1832 ;;      Temps:          0       0       0       0       0
  1833 ;;      Totals:         1       0       0       0       0
  1834 ;;Total ram usage:        1 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; Hardware stack levels required when called:    1
  1837 ;; This function calls:
  1838 ;;		_I2C_Master_Wait
  1839 ;; This function is called by:
  1840 ;;		_MPU6050_Init
  1841 ;;		_MPU6050_Read
  1842 ;;		_I2C_Start
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           
  1847                           ;psect for function _I2C_Master_Write
  1848  05D6                     _I2C_Master_Write:
  1849                           
  1850                           ;incstack = 0
  1851                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1852                           ;I2C_Master_Write@data stored from wreg
  1853  05D6  00F0               	movwf	I2C_Master_Write@data
  1854  05D7                     l1017:
  1855                           
  1856                           ;I2c.c: 69: unsigned char I2C_Master_Write(unsigned char data);I2c.c: 70: {;I2c.c: 71:  
      +                             I2C_Master_Wait();
  1857  05D7  120A  118A  25BA  120A  118A  	fcall	_I2C_Master_Wait
  1858  05DC                     l1019:
  1859                           
  1860                           ;I2c.c: 72:     SSPBUF = data;
  1861  05DC  0870               	movf	I2C_Master_Write@data,w
  1862  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  1863  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  1864  05DF  0093               	movwf	19	;volatile
  1865  05E0                     l179:	
  1866                           ;I2c.c: 73:     while(!SSPIF);
  1867                           
  1868  05E0  1D8C               	btfss	12,3	;volatile
  1869  05E1  2DE3               	goto	u241
  1870  05E2  2DE4               	goto	u240
  1871  05E3                     u241:
  1872  05E3  2DE0               	goto	l179
  1873  05E4                     u240:
  1874  05E4                     l181:
  1875                           
  1876                           ;I2c.c: 74:  SSPIF = 0;
  1877  05E4  118C               	bcf	12,3	;volatile
  1878  05E5                     l182:	
  1879                           ;I2c.c: 75:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  1880                           
  1881  05E5  0008               	return
  1882  05E6                     __end_of_I2C_Master_Write:
  1883                           
  1884                           	psect	text13
  1885  0586                     __ptext13:	
  1886 ;; *************** function _I2C_Master_Stop *****************
  1887 ;; Defined at:
  1888 ;;		line 49 in file "I2c.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		wreg, status,2, status,0, pclath, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1902 ;;      Params:         0       0       0       0       0
  1903 ;;      Locals:         0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0
  1905 ;;      Totals:         0       0       0       0       0
  1906 ;;Total ram usage:        0 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    1
  1909 ;; This function calls:
  1910 ;;		_I2C_Master_Wait
  1911 ;; This function is called by:
  1912 ;;		_MPU6050_Init
  1913 ;;		_MPU6050_Read
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           
  1918                           ;psect for function _I2C_Master_Stop
  1919  0586                     _I2C_Master_Stop:
  1920  0586                     l1033:	
  1921                           ;incstack = 0
  1922                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1923                           
  1924                           
  1925                           ;I2c.c: 51:     I2C_Master_Wait();
  1926  0586  120A  118A  25BA  120A  118A  	fcall	_I2C_Master_Wait
  1927  058B                     l1035:
  1928                           
  1929                           ;I2c.c: 52:     PEN = 1;
  1930  058B  1683               	bsf	3,5	;RP0=1, select bank1
  1931  058C  1303               	bcf	3,6	;RP1=0, select bank1
  1932  058D  1511               	bsf	17,2	;volatile
  1933  058E                     l164:
  1934  058E  0008               	return
  1935  058F                     __end_of_I2C_Master_Stop:
  1936                           
  1937                           	psect	text14
  1938  05BA                     __ptext14:	
  1939 ;; *************** function _I2C_Master_Wait *****************
  1940 ;; Defined at:
  1941 ;;		line 25 in file "I2c.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;		None
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, status,2
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1955 ;;      Params:         0       0       0       0       0
  1956 ;;      Locals:         0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0
  1958 ;;      Totals:         0       0       0       0       0
  1959 ;;Total ram usage:        0 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_I2C_Start
  1965 ;;		_I2C_Master_Stop
  1966 ;;		_I2C_Master_Write
  1967 ;;		_I2C_Master_Start
  1968 ;;		_I2C_Master_RepeatedStart
  1969 ;;		_I2C_Read_Byte
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           
  1974                           ;psect for function _I2C_Master_Wait
  1975  05BA                     _I2C_Master_Wait:
  1976  05BA                     l1013:	
  1977                           ;incstack = 0
  1978                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1979                           
  1980  05BA                     l149:	
  1981                           ;I2c.c: 27:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1982                           
  1983  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  1984  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  1985  05BC  1914               	btfsc	20,2	;volatile
  1986  05BD  2DBF               	goto	u221
  1987  05BE  2DC0               	goto	u220
  1988  05BF                     u221:
  1989  05BF  2DBA               	goto	l149
  1990  05C0                     u220:
  1991  05C0                     l1015:
  1992  05C0  0811               	movf	17,w	;volatile
  1993  05C1  391F               	andlw	31
  1994  05C2  1D03               	btfss	3,2
  1995  05C3  2DC5               	goto	u231
  1996  05C4  2DC6               	goto	u230
  1997  05C5                     u231:
  1998  05C5  2DBA               	goto	l149
  1999  05C6                     u230:
  2000  05C6                     l152:
  2001  05C6  0008               	return
  2002  05C7                     __end_of_I2C_Master_Wait:
  2003                           
  2004                           	psect	text15
  2005  05AD                     __ptext15:	
  2006 ;; *************** function _I2C_Master_Init *****************
  2007 ;; Defined at:
  2008 ;;		line 15 in file "I2c.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;		None
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, status,2
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         0       0       0       0       0
  2023 ;;      Locals:         0       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0
  2025 ;;      Totals:         0       0       0       0       0
  2026 ;;Total ram usage:        0 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_MPU6050_Init
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           
  2036                           ;psect for function _I2C_Master_Init
  2037  05AD                     _I2C_Master_Init:
  2038  05AD                     l807:	
  2039                           ;incstack = 0
  2040                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  2041                           
  2042                           
  2043                           ;I2c.c: 17:   SSPCON = 0x28;
  2044  05AD  3028               	movlw	40
  2045  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  2046  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  2047  05B0  0094               	movwf	20	;volatile
  2048  05B1                     l809:
  2049                           
  2050                           ;I2c.c: 18:   SSPCON2 = 0x00;
  2051  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  2052  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  2053  05B3  0191               	clrf	17	;volatile
  2054  05B4                     l811:
  2055                           
  2056                           ;I2c.c: 19:   SSPSTAT = 0x00;
  2057  05B4  0194               	clrf	20	;volatile
  2058                           
  2059                           ;I2c.c: 20:   SSPADD = ((8000000/4)/9600) - 1;
  2060  05B5  30CF               	movlw	207
  2061  05B6  0093               	movwf	19	;volatile
  2062  05B7                     l813:
  2063                           
  2064                           ;I2c.c: 21:   TRISC3 = 1;
  2065  05B7  1587               	bsf	7,3	;volatile
  2066  05B8                     l815:
  2067                           
  2068                           ;I2c.c: 22:   TRISC4 = 1;
  2069  05B8  1607               	bsf	7,4	;volatile
  2070  05B9                     l146:
  2071  05B9  0008               	return
  2072  05BA                     __end_of_I2C_Master_Init:
  2073  007E                     btemp	set	126	;btemp
  2074  007E                     wtemp0	set	126
  2075                           
  2076                           	psect	config
  2077                           
  2078                           ;Config register CONFIG1 @ 0x2007
  2079                           ;	Oscillator Selection bits
  2080                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2081                           ;	Watchdog Timer Enable bit
  2082                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2083                           ;	Power-up Timer Enable bit
  2084                           ;	PWRTE = OFF, PWRT disabled
  2085                           ;	RE3/MCLR pin function select bit
  2086                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2087                           ;	Code Protection bit
  2088                           ;	CP = OFF, Program memory code protection is disabled
  2089                           ;	Data Code Protection bit
  2090                           ;	CPD = OFF, Data memory code protection is disabled
  2091                           ;	Brown Out Reset Selection bits
  2092                           ;	BOREN = OFF, BOR disabled
  2093                           ;	Internal External Switchover bit
  2094                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2095                           ;	Fail-Safe Clock Monitor Enabled bit
  2096                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2097                           ;	Low Voltage Programming Enable bit
  2098                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2099                           ;	In-Circuit Debugger Mode bit
  2100                           ;	DEBUG = 0x1, unprogrammed default
  2101  2007                     	org	8199
  2102  2007  2CD4               	dw	11476
  2103                           
  2104                           ;Config register CONFIG2 @ 0x2008
  2105                           ;	Brown-out Reset Selection bit
  2106                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  2107                           ;	Flash Program Memory Self Write Enable bits
  2108                           ;	WRT = OFF, Write protection off
  2109  2008                     	org	8200
  2110  2008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     16      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_MPU6050_Read
    _MPU6050_Read->___awdiv
    _MPU6050_Init->_I2C_Start
    _I2C_Start->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_MPU6050_Read

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     680
                                             14 BANK0      2     2      0
                       _MPU6050_Init
                       _MPU6050_Read
                       _UART_TX_Init
                             _setOsc
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setOsc                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read                                        58    58      0     614
                                              9 COMMON     4     4      0
                                              0 BANK0     14    14      0
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                         _UART_Write
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         3     3      0      66
                                              2 COMMON     3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _I2C_Start
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              1 COMMON     1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MPU6050_Init
     _I2C_Master_Init
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _MPU6050_Read
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read
       _I2C_ACK
       _I2C_NACK
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _UART_Write
     ___awdiv
   _UART_TX_Init
   _setOsc
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      10       5       20.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Mar 09 22:32:28 2021

       __size_of_I2C_Start 0010                         _BF 04A0                         l51 0608  
                       l45 0644                         l54 0585                         l81 05AC  
                       l75 05D5                         l78 05A2               ___awdiv@sign 0076  
                      l106 075E                        l109 07FB                        l152 05C6  
                      l146 05B9                        l170 0597                        l164 058E  
                      l149 05BA                        l181 05E4                        l173 059C  
                      l182 05E5                        l158 05F5                        l167 0593  
                      l191 060D                        l176 05A0                        l179 05E0  
                      l196 0627                        l198 062D                        l438 06C1  
                      l199 062F                        l811 05B4                        l813 05B7  
                      l815 05B8                        l807 05AD                        l809 05B1  
                      l951 0581                        l891 05CD                        l883 05F6  
                      l893 05D0                        l885 05C7                        l895 05D3  
                      l887 05CA                        l897 05D4                        l889 05CC  
                      _RD2 0042                        u220 05C0                        u300 062D  
                      u221 05BF                        u301 062C                        u230 05C6  
                      u310 0660                        u231 05C5                        u311 065F  
                      u240 05E4                        u400 06B8                        u320 066B  
                      u241 05E3                        u401 06B7                        u321 066A  
                      u250 0597                        u330 067C                        u251 0596  
                      u331 067B                        u260 05A0                        u261 059F  
                      u270 05A8                        u350 068E                        u271 05A7  
                      u351 068D                        u280 0611                        _PEN 048A  
                      u281 0610                        u345 0680                        u290 061C  
                      u370 069F                        u291 061B                        u371 069E  
                      u365 068F                        u437 0653                        u390 06B3  
                      u447 06C8                        u391 06B2                        u375 069B  
                      u385 06A7                        _SEN 0488            __end_of_I2C_ACK 0598  
                     l1013 05BA                       l1101 06DA                       l1021 058F  
                     l1015 05C0                       l1031 05EC                       l1111 06F7  
                     l1103 06E0                       l1023 0598                       l1033 0586  
                     l1017 05D7                       l1121 0714                       l1113 06FD  
                     l1105 06E6                       l1041 0617                       l1025 05A2  
                     l1035 058B                       l1019 05DC                       l1131 0730  
                     l1123 0719                       l1115 0702                       l1107 06EB  
                     l1043 061C                       l1027 05A8                       l1051 065B  
                     l1029 05E7                       l1141 074D                       l1133 0736  
                     l1125 071F                       l1117 0708                       l1109 06F1  
                     l1045 0622                       l1037 060A                       l1061 066B  
                     l1053 065C                       l1143 0753                       l1135 073C  
                     l1127 0725                       l1119 070E                       l1047 062E  
                     l1039 0611                       l1071 067F                       l1063 0670  
                     l1055 0660                       l1151 0782                       l1145 0759  
                     l1137 0742                       l1129 072B                       l1081 06A5  
                     l1073 0686                       l1065 0674                       l1057 0665  
                     l1161 07CD                       l1153 079D                       l1139 0747  
                     l1091 06BD                       l1083 06A6                       l1075 068A  
                     l1067 0676                       l1059 0667                       l1163 07D9  
                     l1155 07A9                       l1147 075F                       l1171 0635  
                     l1085 06AD                       l1077 068E                       l1069 067C  
                     l1165 07DE                       l1157 07B5                       l1149 0776  
                     l1173 063A                       l1095 06C2                       l1079 069F  
                     l1087 06B3                       l1167 07F5                       l1159 07C1  
                     l1175 063F                       l1097 06CF                       l1089 06B8  
                     l1177 0648                       l1169 0630                       l1099 06D4  
                     l1179 064D                       _BRGH 04C2                       _RCEN 048B  
                     _SPEN 00C7                       _RSEN 0489                       _TRMT 04C1  
                     _TXEN 04C5                       _SYNC 04C4           __end_of_I2C_NACK 05A1  
                     _main 0630           __end_of_I2C_Read 0630                       btemp 007E  
                     start 0000           ?_I2C_Master_Init 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070                      _ACKEN 048C  
                    _ACKDT 048D            __end_of___awdiv 06C2                      _ANSEL 0188  
          ___awdiv@divisor 0070            ___awdiv@counter 0075                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _SSPIF 0063                      _TXREG 0019  
              ?_UART_Write 0070              ?_MPU6050_Init 0070              ?_MPU6050_Read 0070  
                    _setup 05F6          __end_of_I2C_Start 05F6                      status 0003  
                    wtemp0 007E             MPU6050_Read@Ay 002C            __initialization 07FC  
             __end_of_main 065B                  ??_I2C_ACK 0070                     ??_main 002E  
        ?_I2C_Master_Write 0070             ??_MPU6050_Init 0072             ??_MPU6050_Read 0079  
       ??_I2C_Master_Write 0070           ___awdiv@dividend 0072                     ?_setup 0070  
                   _ANSELH 0189                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _TRISC6 043E                     _TRISC7 043F  
                   _SSPCON 0014                     _SSPBUF 0013           I2C_Read@ACK_NACK 0071  
      __size_of_UART_Write 000C                  ??___awdiv 0074           ___awdiv@quotient 0077  
                   _setOsc 0581                  ?_I2C_NACK 0070                  ?_I2C_Read 0070  
  __end_of__initialization 07FC             __pcstackCOMMON 0070              __end_of_setup 0609  
               ??_I2C_NACK 0070                 ??_I2C_Read 0070                    ??_setup 0070  
             I2C_Read@Data 0072                 __pmaintext 0630       __end_of_MPU6050_Init 075F  
     __end_of_MPU6050_Read 07FC                    _I2C_ACK 058F                    _ACKSTAT 048E  
                  ?_setOsc 0070               ??_UART_Write 0070                    _SSPCON2 0091  
                  _SSPSTAT 0094              ?_UART_TX_Init 0070               I2C_Start@add 0071  
                _I2C_Start 05E6                    ___awdiv 065B         __end_of_UART_Write 05AD  
          __size_of_setOsc 0005                    __ptext1 05F6                    __ptext2 0581  
                  __ptext3 05C7                    __ptext4 075F                    __ptext5 065B  
                  __ptext6 05A1                    __ptext7 0609                    __ptext8 0598  
                  __ptext9 058F   __size_of_I2C_Master_Init 000D   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009             ??_UART_TX_Init 0070       end_of_initialization 07FC  
               ?_I2C_Start 0070  __size_of_I2C_Master_Write 0010             UART_Write@data 0070  
        __size_of_I2C_NACK 0009          __size_of_I2C_Read 0027      __size_of_MPU6050_Init 009D  
    __size_of_MPU6050_Read 009D             __end_of_setOsc 0586        start_initialization 07FC  
             _MPU6050_Init 06C2               _MPU6050_Read 075F          ??_I2C_Master_Init 0070  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070                ??_I2C_Start 0071  
     __end_of_UART_TX_Init 05D6                   ?_I2C_ACK 0070                   ??_setOsc 0070  
                ___latbits 0002              __pcstackBANK0 0020           _I2C_Master_Write 05D6  
                 ?___awdiv 0070       I2C_Master_Write@data 0070                   _I2C_NACK 0598  
                 _I2C_Read 0609             __size_of_setup 0013           __size_of_I2C_ACK 0009  
    __size_of_UART_TX_Init 000F           __size_of___awdiv 0067            _I2C_Master_Init 05AD  
          _I2C_Master_Wait 05BA            _I2C_Master_Stop 0586                   __ptext10 06C2  
                 __ptext11 05E6                   __ptext12 05D6                   __ptext13 0586  
                 __ptext14 05BA                   __ptext15 05AD               _UART_TX_Init 05C7  
            __size_of_main 002B   __end_of_I2C_Master_Write 05E6                 _OSCCONbits 008F  
  __end_of_I2C_Master_Init 05BA    __end_of_I2C_Master_Wait 05C7    __end_of_I2C_Master_Stop 058F  
               _UART_Write 05A1  
