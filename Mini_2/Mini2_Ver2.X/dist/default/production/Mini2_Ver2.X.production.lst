

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 21:17:38 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457                           
   458                           	psect	strings
   459  0003                     __pstrings:
   460  0003                     stringtab:
   461  0003                     __stringtab:
   462  0003                     stringcode:	
   463                           ;	String table - string pointers are 1 byte each
   464                           
   465  0003                     stringdir:
   466  0003  3000               	movlw	high stringdir
   467  0004  008A               	movwf	10
   468  0005  0804               	movf	4,w
   469  0006  0A84               	incf	4,f
   470  0007  0782               	addwf	2,f
   471  0008                     __stringbase:
   472  0008  3400               	retlw	0
   473  0009                     __end_of__stringtab:
   474  0009                     _dpowers:
   475  0009  3401               	retlw	1
   476  000A  3400               	retlw	0
   477  000B  340A               	retlw	10
   478  000C  3400               	retlw	0
   479  000D  3464               	retlw	100
   480  000E  3400               	retlw	0
   481  000F  34E8               	retlw	232
   482  0010  3403               	retlw	3
   483  0011  3410               	retlw	16
   484  0012  3427               	retlw	39
   485  0013                     __end_of_dpowers:
   486  0013                     _SSPBUF	set	19
   487  0014                     _SSPCON	set	20
   488  001A                     _RCREG	set	26
   489  0019                     _TXREG	set	25
   490  0018                     _RCSTAbits	set	24
   491  0009                     _PORTE	set	9
   492  0008                     _PORTD	set	8
   493  0007                     _PORTC	set	7
   494  0006                     _PORTB	set	6
   495  0005                     _PORTA	set	5
   496  0007                     _PORTCbits	set	7
   497  0008                     _PORTDbits	set	8
   498  0063                     _SSPIF	set	99
   499  00C7                     _SPEN	set	199
   500  0065                     _RCIF	set	101
   501  0042                     _RD2	set	66
   502  0093                     _SSPADD	set	147
   503  0094                     _SSPSTAT	set	148
   504  0091                     _SSPCON2	set	145
   505  0099                     _SPBRG	set	153
   506  008F                     _OSCCONbits	set	143
   507  0089                     _TRISE	set	137
   508  0088                     _TRISD	set	136
   509  0087                     _TRISC	set	135
   510  0086                     _TRISB	set	134
   511  0085                     _TRISA	set	133
   512  04A0                     _BF	set	1184
   513  048B                     _RCEN	set	1163
   514  048E                     _ACKSTAT	set	1166
   515  048C                     _ACKEN	set	1164
   516  048D                     _ACKDT	set	1165
   517  048A                     _PEN	set	1162
   518  0489                     _RSEN	set	1161
   519  0488                     _SEN	set	1160
   520  043C                     _TRISC4	set	1084
   521  043B                     _TRISC3	set	1083
   522  04C1                     _TRMT	set	1217
   523  04C5                     _TXEN	set	1221
   524  043F                     _TRISC7	set	1087
   525  043E                     _TRISC6	set	1086
   526  04C4                     _SYNC	set	1220
   527  04C2                     _BRGH	set	1218
   528  0189                     _ANSELH	set	393
   529  0188                     _ANSEL	set	392
   530  0013                     STR_1:
   531  0013  3425               	retlw	37	;'%'
   532  0014  3464               	retlw	100	;'d'
   533  0015  3400               	retlw	0
   534                           
   535                           	psect	cinit
   536  07F9                     start_initialization:	
   537                           ; #config settings
   538                           
   539  07F9                     __initialization:
   540                           
   541                           ; Clear objects allocated to BANK0
   542  07F9  1283               	bcf	3,5	;RP0=0, select bank0
   543  07FA  1303               	bcf	3,6	;RP1=0, select bank0
   544  07FB  01EB               	clrf	__pbssBANK0& (0+127)
   545  07FC                     end_of_initialization:	
   546                           ;End of C runtime variable initialization code
   547                           
   548  07FC                     __end_of__initialization:
   549  07FC  0183               	clrf	3
   550  07FD  120A  118A  2CED   	ljmp	_main	;jump to C main() function
   551                           
   552                           	psect	bssBANK0
   553  006B                     __pbssBANK0:
   554  006B                     _recibido:
   555  006B                     	ds	1
   556                           
   557                           	psect	cstackCOMMON
   558  0070                     __pcstackCOMMON:
   559  0070                     ?_setup:
   560  0070                     ??_setup:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_UART_TX_Init:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ??_UART_TX_Init:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_MPU6050_Init:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_setOsc:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ??_setOsc:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_MPU6050_Read:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_USART_Read:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ??_USART_Read:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_I2C_Master_Init:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ??_I2C_Master_Init:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_I2C_Start:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_I2C_Master_Write:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ??_I2C_Master_Write:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_I2C_Master_Stop:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ??_I2C_Master_Stop:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_I2C_Read:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ??_I2C_Read:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_main:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_UART_Write:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ??_UART_Write:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_UART_Write_String:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_I2C_Master_Wait:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ??_I2C_Master_Wait:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_I2C_ACK:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ??_I2C_ACK:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_I2C_NACK:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ??_I2C_NACK:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?___awdiv:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?___lwdiv:	
   648                           ; 2 bytes @ 0x0
   649                           
   650  0070                     UART_Write@data:	
   651                           ; 2 bytes @ 0x0
   652                           
   653  0070                     I2C_Master_Write@data:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ___awdiv@divisor:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ___lwdiv@divisor:	
   660                           ; 2 bytes @ 0x0
   661                           
   662                           
   663                           ; 2 bytes @ 0x0
   664  0070                     	ds	1
   665  0071                     ??_I2C_Start:
   666  0071                     ??_UART_Write_String:	
   667                           ; 1 bytes @ 0x1
   668                           
   669  0071                     I2C_Start@add:	
   670                           ; 1 bytes @ 0x1
   671                           
   672  0071                     I2C_Read@ACK_NACK:	
   673                           ; 1 bytes @ 0x1
   674                           
   675                           
   676                           ; 1 bytes @ 0x1
   677  0071                     	ds	1
   678  0072                     ??_MPU6050_Init:
   679  0072                     I2C_Read@Data:	
   680                           ; 1 bytes @ 0x2
   681                           
   682  0072                     UART_Write_String@i:	
   683                           ; 1 bytes @ 0x2
   684                           
   685  0072                     ___awdiv@dividend:	
   686                           ; 2 bytes @ 0x2
   687                           
   688  0072                     ___lwdiv@dividend:	
   689                           ; 2 bytes @ 0x2
   690                           
   691                           
   692                           ; 2 bytes @ 0x2
   693  0072                     	ds	2
   694  0074                     ??___awdiv:
   695  0074                     ??___lwdiv:	
   696                           ; 1 bytes @ 0x4
   697                           
   698  0074                     UART_Write_String@buf:	
   699                           ; 1 bytes @ 0x4
   700                           
   701                           
   702                           ; 1 bytes @ 0x4
   703  0074                     	ds	1
   704  0075                     ___awdiv@counter:
   705  0075                     ___lwdiv@quotient:	
   706                           ; 1 bytes @ 0x5
   707                           
   708                           
   709                           ; 2 bytes @ 0x5
   710  0075                     	ds	1
   711  0076                     ___awdiv@sign:
   712                           
   713                           ; 1 bytes @ 0x6
   714  0076                     	ds	1
   715  0077                     ___lwdiv@counter:
   716  0077                     ___awdiv@quotient:	
   717                           ; 1 bytes @ 0x7
   718                           
   719                           
   720                           ; 2 bytes @ 0x7
   721  0077                     	ds	1
   722  0078                     ?___lwmod:
   723  0078                     ___lwmod@divisor:	
   724                           ; 2 bytes @ 0x8
   725                           
   726                           
   727                           ; 2 bytes @ 0x8
   728  0078                     	ds	2
   729  007A                     ___lwmod@dividend:
   730                           
   731                           ; 2 bytes @ 0xA
   732  007A                     	ds	2
   733  007C                     ??___lwmod:
   734                           
   735                           ; 1 bytes @ 0xC
   736  007C                     	ds	1
   737  007D                     ___lwmod@counter:
   738                           
   739                           ; 1 bytes @ 0xD
   740  007D                     	ds	1
   741                           
   742                           	psect	cstackBANK0
   743  0020                     __pcstackBANK0:
   744  0020                     ?_sprintf:
   745  0020                     sprintf@f:	
   746                           ; 2 bytes @ 0x0
   747                           
   748                           
   749                           ; 1 bytes @ 0x0
   750  0020                     	ds	3
   751  0023                     ??_sprintf:
   752                           
   753                           ; 1 bytes @ 0x3
   754  0023                     	ds	3
   755  0026                     sprintf@ap:
   756                           
   757                           ; 1 bytes @ 0x6
   758  0026                     	ds	1
   759  0027                     sprintf@flag:
   760                           
   761                           ; 1 bytes @ 0x7
   762  0027                     	ds	1
   763  0028                     sprintf@prec:
   764                           
   765                           ; 1 bytes @ 0x8
   766  0028                     	ds	1
   767  0029                     sprintf@val:
   768                           
   769                           ; 2 bytes @ 0x9
   770  0029                     	ds	2
   771  002B                     sprintf@sp:
   772                           
   773                           ; 1 bytes @ 0xB
   774  002B                     	ds	1
   775  002C                     sprintf@c:
   776                           
   777                           ; 1 bytes @ 0xC
   778  002C                     	ds	1
   779  002D                     ??_MPU6050_Read:
   780                           
   781                           ; 1 bytes @ 0xD
   782  002D                     	ds	4
   783  0031                     MPU6050_Read@buffer:
   784                           
   785                           ; 40 bytes @ 0x11
   786  0031                     	ds	52
   787  0065                     MPU6050_Read@AY:
   788                           
   789                           ; 2 bytes @ 0x45
   790  0065                     	ds	2
   791  0067                     MPU6050_Read@Ay:
   792                           
   793                           ; 2 bytes @ 0x47
   794  0067                     	ds	2
   795  0069                     ??_main:
   796                           
   797                           ; 1 bytes @ 0x49
   798  0069                     	ds	2
   799                           
   800                           	psect	maintext
   801  04ED                     __pmaintext:	
   802 ;;
   803 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   804 ;;
   805 ;; *************** function _main *****************
   806 ;; Defined at:
   807 ;;		line 56 in file "main.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : B00/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   821 ;;      Params:         0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0
   823 ;;      Temps:          0       2       0       0       0
   824 ;;      Totals:         0       2       0       0       0
   825 ;;Total ram usage:        2 bytes
   826 ;; Hardware stack levels required when called:    4
   827 ;; This function calls:
   828 ;;		_MPU6050_Init
   829 ;;		_MPU6050_Read
   830 ;;		_UART_TX_Init
   831 ;;		_USART_Read
   832 ;;		_setOsc
   833 ;;		_setup
   834 ;; This function is called by:
   835 ;;		Startup code after reset
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           
   840                           ;psect for function _main
   841  04ED                     _main:
   842  04ED                     l1583:	
   843                           ;incstack = 0
   844                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   845                           
   846                           
   847                           ;main.c: 58:     setup();
   848  04ED  120A  118A  2413  120A  118A  	fcall	_setup
   849                           
   850                           ;main.c: 60:     UART_TX_Init();
   851  04F2  120A  118A  2401  120A  118A  	fcall	_UART_TX_Init
   852                           
   853                           ;main.c: 62:     MPU6050_Init();
   854  04F7  120A  118A  25B0  120A  118A  	fcall	_MPU6050_Init
   855                           
   856                           ;main.c: 64:     setOsc();
   857  04FC  120A  118A  2393  120A  118A  	fcall	_setOsc
   858  0501                     l1585:
   859                           
   860                           ;main.c: 69:  {;main.c: 70:         RD2 = !RD2;
   861  0501  3004               	movlw	4
   862  0502  1283               	bcf	3,5	;RP0=0, select bank0
   863  0503  1303               	bcf	3,6	;RP1=0, select bank0
   864  0504  0688               	xorwf	8,f
   865  0505                     l1587:
   866                           
   867                           ;main.c: 71:         MPU6050_Read();
   868  0505  120A  118A  264D  120A  118A  	fcall	_MPU6050_Read
   869  050A                     l1589:
   870                           
   871                           ;main.c: 72:         if (RCIF==1){
   872  050A  1283               	bcf	3,5	;RP0=0, select bank0
   873  050B  1303               	bcf	3,6	;RP1=0, select bank0
   874  050C  1E8C               	btfss	12,5	;volatile
   875  050D  2D0F               	goto	u851
   876  050E  2D10               	goto	u850
   877  050F                     u851:
   878  050F  2D3B               	goto	l1595
   879  0510                     u850:
   880  0510                     l1591:
   881                           
   882                           ;main.c: 73:             recibido = USART_Read();
   883  0510  120A  118A  2398  120A  118A  	fcall	_USART_Read
   884  0515  1283               	bcf	3,5	;RP0=0, select bank0
   885  0516  1303               	bcf	3,6	;RP1=0, select bank0
   886  0517  00E9               	movwf	??_main
   887  0518  0869               	movf	??_main,w
   888  0519  00EB               	movwf	_recibido
   889                           
   890                           ;main.c: 74:             switch(recibido) {
   891  051A  2D25               	goto	l1593
   892  051B                     l58:	
   893                           ;main.c: 75:                 case 0x01: PORTDbits.RD1 = 1;PORTCbits.RC2 = 0;
   894                           
   895  051B  1488               	bsf	8,1	;volatile
   896  051C  1107               	bcf	7,2	;volatile
   897  051D                     l59:	
   898                           ;main.c: 76:                 case 0x02: PORTDbits.RD1 = 0;PORTCbits.RC2 = 0;
   899                           
   900  051D  1088               	bcf	8,1	;volatile
   901  051E  1107               	bcf	7,2	;volatile
   902  051F                     l60:	
   903                           ;main.c: 77:                 case 0x04: PORTDbits.RD0 = 1;PORTCbits.RC2 = 0;
   904                           
   905  051F  1408               	bsf	8,0	;volatile
   906  0520  1107               	bcf	7,2	;volatile
   907  0521                     l61:	
   908                           ;main.c: 78:                 case 0x08: PORTDbits.RD0 = 0;PORTCbits.RC2 = 0;
   909                           
   910  0521  1008               	bcf	8,0	;volatile
   911  0522  1107               	bcf	7,2	;volatile
   912  0523                     l62:	
   913                           ;main.c: 79:                 default: PORTCbits.RC2 = 1;
   914                           
   915  0523  1507               	bsf	7,2	;volatile
   916                           
   917                           ;main.c: 80:             }
   918  0524  2D3B               	goto	l1595
   919  0525                     l1593:
   920  0525  086B               	movf	_recibido,w
   921  0526  00E9               	movwf	??_main
   922  0527  01EA               	clrf	??_main+1
   923                           
   924                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   925                           ; Switch size 1, requested type "simple"
   926                           ; Number of cases is 1, Range of values is 0 to 0
   927                           ; switch strategies available:
   928                           ; Name         Instructions Cycles
   929                           ; simple_byte            4     3 (average)
   930                           ; direct_byte           11     8 (fixed)
   931                           ; jumptable            260     6 (fixed)
   932                           ;	Chosen strategy is simple_byte
   933  0528  086A               	movf	??_main+1,w
   934  0529  3A00               	xorlw	0	; case 0
   935  052A  1903               	skipnz
   936  052B  2D2D               	goto	l1659
   937  052C  2D23               	goto	l62
   938  052D                     l1659:
   939                           
   940                           ; Switch size 1, requested type "simple"
   941                           ; Number of cases is 4, Range of values is 1 to 8
   942                           ; switch strategies available:
   943                           ; Name         Instructions Cycles
   944                           ; simple_byte           13     7 (average)
   945                           ; direct_byte           35    11 (fixed)
   946                           ; jumptable            263     9 (fixed)
   947                           ;	Chosen strategy is simple_byte
   948  052D  0869               	movf	??_main,w
   949  052E  3A01               	xorlw	1	; case 1
   950  052F  1903               	skipnz
   951  0530  2D1B               	goto	l58
   952  0531  3A03               	xorlw	3	; case 2
   953  0532  1903               	skipnz
   954  0533  2D1D               	goto	l59
   955  0534  3A06               	xorlw	6	; case 4
   956  0535  1903               	skipnz
   957  0536  2D1F               	goto	l60
   958  0537  3A0C               	xorlw	12	; case 8
   959  0538  1903               	skipnz
   960  0539  2D21               	goto	l61
   961  053A  2D23               	goto	l62
   962  053B                     l1595:
   963                           
   964                           ;main.c: 83:         _delay((unsigned long)((50)*(8000000/4000.0)));
   965  053B  3082               	movlw	130
   966  053C  1283               	bcf	3,5	;RP0=0, select bank0
   967  053D  1303               	bcf	3,6	;RP1=0, select bank0
   968  053E  00EA               	movwf	??_main+1
   969  053F  30DD               	movlw	221
   970  0540  00E9               	movwf	??_main
   971  0541                     u877:
   972  0541  0BE9               	decfsz	??_main,f
   973  0542  2D41               	goto	u877
   974  0543  0BEA               	decfsz	??_main+1,f
   975  0544  2D41               	goto	u877
   976  0545  2D01               	goto	l1585
   977  0546  120A  118A  2800   	ljmp	start
   978  0549                     __end_of_main:
   979                           
   980                           	psect	text1
   981  0413                     __ptext1:	
   982 ;; *************** function _setup *****************
   983 ;; Defined at:
   984 ;;		line 91 in file "main.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;		None
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg, status,2
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   998 ;;      Params:         0       0       0       0       0
   999 ;;      Locals:         0       0       0       0       0
  1000 ;;      Temps:          0       0       0       0       0
  1001 ;;      Totals:         0       0       0       0       0
  1002 ;;Total ram usage:        0 bytes
  1003 ;; Hardware stack levels used:    1
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _setup
  1013  0413                     _setup:
  1014  0413                     l1465:	
  1015                           ;incstack = 0
  1016                           ; Regs used in _setup: [wreg+status,2]
  1017                           
  1018                           
  1019                           ;main.c: 94:     ANSEL = 0b00000000;
  1020  0413  1683               	bsf	3,5	;RP0=1, select bank3
  1021  0414  1703               	bsf	3,6	;RP1=1, select bank3
  1022  0415  0188               	clrf	8	;volatile
  1023                           
  1024                           ;main.c: 95:     ANSELH = 0;
  1025  0416  0189               	clrf	9	;volatile
  1026                           
  1027                           ;main.c: 97:     PORTA = 0;
  1028  0417  1283               	bcf	3,5	;RP0=0, select bank0
  1029  0418  1303               	bcf	3,6	;RP1=0, select bank0
  1030  0419  0185               	clrf	5	;volatile
  1031                           
  1032                           ;main.c: 98:     PORTB = 0;
  1033  041A  0186               	clrf	6	;volatile
  1034                           
  1035                           ;main.c: 99:     PORTC = 0;
  1036  041B  0187               	clrf	7	;volatile
  1037                           
  1038                           ;main.c: 100:     PORTD = 0;
  1039  041C  0188               	clrf	8	;volatile
  1040                           
  1041                           ;main.c: 101:     PORTE = 0;
  1042  041D  0189               	clrf	9	;volatile
  1043                           
  1044                           ;main.c: 103:     TRISA = 0b00000000;
  1045  041E  1683               	bsf	3,5	;RP0=1, select bank1
  1046  041F  1303               	bcf	3,6	;RP1=0, select bank1
  1047  0420  0185               	clrf	5	;volatile
  1048                           
  1049                           ;main.c: 104:     TRISB = 0;
  1050  0421  0186               	clrf	6	;volatile
  1051  0422                     l1467:
  1052                           
  1053                           ;main.c: 105:     TRISC = 0b10000000;
  1054  0422  3080               	movlw	128
  1055  0423  0087               	movwf	7	;volatile
  1056  0424                     l1469:
  1057                           
  1058                           ;main.c: 106:     TRISD = 0;
  1059  0424  0188               	clrf	8	;volatile
  1060  0425                     l1471:
  1061                           
  1062                           ;main.c: 107:     TRISE = 0;
  1063  0425  0189               	clrf	9	;volatile
  1064  0426                     l69:
  1065  0426  0008               	return
  1066  0427                     __end_of_setup:
  1067                           
  1068                           	psect	text2
  1069  0393                     __ptext2:	
  1070 ;; *************** function _setOsc *****************
  1071 ;; Defined at:
  1072 ;;		line 110 in file "main.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, status,2, status,0
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1086 ;;      Params:         0       0       0       0       0
  1087 ;;      Locals:         0       0       0       0       0
  1088 ;;      Temps:          0       0       0       0       0
  1089 ;;      Totals:         0       0       0       0       0
  1090 ;;Total ram usage:        0 bytes
  1091 ;; Hardware stack levels used:    1
  1092 ;; This function calls:
  1093 ;;		Nothing
  1094 ;; This function is called by:
  1095 ;;		_main
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           
  1100                           ;psect for function _setOsc
  1101  0393                     _setOsc:
  1102  0393                     l1541:	
  1103                           ;incstack = 0
  1104                           ; Regs used in _setOsc: [wreg+status,2+status,0]
  1105                           
  1106                           
  1107                           ;main.c: 112:     OSCCONbits.IRCF = 0b111;
  1108  0393  3070               	movlw	112
  1109  0394  1683               	bsf	3,5	;RP0=1, select bank1
  1110  0395  1303               	bcf	3,6	;RP1=0, select bank1
  1111  0396  048F               	iorwf	15,f	;volatile
  1112  0397                     l72:
  1113  0397  0008               	return
  1114  0398                     __end_of_setOsc:
  1115                           
  1116                           	psect	text3
  1117  0398                     __ptext3:	
  1118 ;; *************** function _USART_Read *****************
  1119 ;; Defined at:
  1120 ;;		line 46 in file "USART.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      unsigned char 
  1127 ;; Registers used:
  1128 ;;		wreg
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1134 ;;      Params:         0       0       0       0       0
  1135 ;;      Locals:         0       0       0       0       0
  1136 ;;      Temps:          0       0       0       0       0
  1137 ;;      Totals:         0       0       0       0       0
  1138 ;;Total ram usage:        0 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_main
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           
  1148                           ;psect for function _USART_Read
  1149  0398                     _USART_Read:
  1150  0398                     l1577:	
  1151                           ;incstack = 0
  1152                           ; Regs used in _USART_Read: [wreg]
  1153                           
  1154  0398                     l114:	
  1155                           ;USART.c: 47:   while(!RCIF);
  1156                           
  1157  0398  1283               	bcf	3,5	;RP0=0, select bank0
  1158  0399  1303               	bcf	3,6	;RP1=0, select bank0
  1159  039A  1E8C               	btfss	12,5	;volatile
  1160  039B  2B9D               	goto	u841
  1161  039C  2B9E               	goto	u840
  1162  039D                     u841:
  1163  039D  2B98               	goto	l114
  1164  039E                     u840:
  1165  039E                     l1579:
  1166                           
  1167                           ;USART.c: 48:   return RCREG;
  1168  039E  081A               	movf	26,w	;volatile
  1169  039F                     l117:
  1170  039F  0008               	return
  1171  03A0                     __end_of_USART_Read:
  1172                           
  1173                           	psect	text4
  1174  0401                     __ptext4:	
  1175 ;; *************** function _UART_TX_Init *****************
  1176 ;; Defined at:
  1177 ;;		line 17 in file "USART.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1191 ;;      Params:         0       0       0       0       0
  1192 ;;      Locals:         0       0       0       0       0
  1193 ;;      Temps:          0       0       0       0       0
  1194 ;;      Totals:         0       0       0       0       0
  1195 ;;Total ram usage:        0 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           
  1205                           ;psect for function _UART_TX_Init
  1206  0401                     _UART_TX_Init:
  1207  0401                     l1473:	
  1208                           ;incstack = 0
  1209                           ; Regs used in _UART_TX_Init: [wreg]
  1210                           
  1211                           
  1212                           ;USART.c: 19:   BRGH = 0;
  1213  0401  1683               	bsf	3,5	;RP0=1, select bank1
  1214  0402  1303               	bcf	3,6	;RP1=0, select bank1
  1215  0403  1118               	bcf	24,2	;volatile
  1216  0404                     l1475:
  1217                           
  1218                           ;USART.c: 20:   SPBRG = 12;
  1219  0404  300C               	movlw	12
  1220  0405  0099               	movwf	25	;volatile
  1221  0406                     l1477:
  1222                           
  1223                           ;USART.c: 22:   SYNC = 0;
  1224  0406  1218               	bcf	24,4	;volatile
  1225  0407                     l1479:
  1226                           
  1227                           ;USART.c: 23:   SPEN = 1;
  1228  0407  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0408  1303               	bcf	3,6	;RP1=0, select bank0
  1230  0409  1798               	bsf	24,7	;volatile
  1231  040A                     l1481:
  1232                           
  1233                           ;USART.c: 25:   TRISC6 = 0;
  1234  040A  1683               	bsf	3,5	;RP0=1, select bank1
  1235  040B  1303               	bcf	3,6	;RP1=0, select bank1
  1236  040C  1307               	bcf	7,6	;volatile
  1237  040D                     l1483:
  1238                           
  1239                           ;USART.c: 26:   TRISC7 = 1;
  1240  040D  1787               	bsf	7,7	;volatile
  1241  040E                     l1485:
  1242                           
  1243                           ;USART.c: 27:   TXEN = 1;
  1244  040E  1698               	bsf	24,5	;volatile
  1245  040F                     l1487:
  1246                           
  1247                           ;USART.c: 29:   RCSTAbits.CREN = 1;
  1248  040F  1283               	bcf	3,5	;RP0=0, select bank0
  1249  0410  1303               	bcf	3,6	;RP1=0, select bank0
  1250  0411  1618               	bsf	24,4	;volatile
  1251  0412                     l99:
  1252  0412  0008               	return
  1253  0413                     __end_of_UART_TX_Init:
  1254                           
  1255                           	psect	text5
  1256  064D                     __ptext5:	
  1257 ;; *************** function _MPU6050_Read *****************
  1258 ;; Defined at:
  1259 ;;		line 68 in file "MPU.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;  buffer         40   17[BANK0 ] unsigned char [40]
  1264 ;;  Ay              2   71[BANK0 ] int 
  1265 ;;  AY              2   69[BANK0 ] int 
  1266 ;;  Gz              2    0        int 
  1267 ;;  Gy              2    0        int 
  1268 ;;  Gx              2    0        int 
  1269 ;;  T               2    0        int 
  1270 ;;  Az              2    0        int 
  1271 ;;  Ax              2    0        int 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1281 ;;      Params:         0       0       0       0       0
  1282 ;;      Locals:         0      56       0       0       0
  1283 ;;      Temps:          0       4       0       0       0
  1284 ;;      Totals:         0      60       0       0       0
  1285 ;;Total ram usage:       60 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    3
  1288 ;; This function calls:
  1289 ;;		_I2C_Master_Stop
  1290 ;;		_I2C_Master_Write
  1291 ;;		_I2C_Read
  1292 ;;		_I2C_Start
  1293 ;;		_UART_Write_String
  1294 ;;		___awdiv
  1295 ;;		_sprintf
  1296 ;; This function is called by:
  1297 ;;		_main
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           
  1302                           ;psect for function _MPU6050_Read
  1303  064D                     _MPU6050_Read:
  1304  064D                     l1543:	
  1305                           ;incstack = 0
  1306                           ; Regs used in _MPU6050_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1307                           
  1308  064D                     l1545:
  1309                           
  1310                           ;MPU.c: 74:   I2C_Start(0xD0);
  1311  064D  30D0               	movlw	208
  1312  064E  120A  118A  23F1  120A  118A  	fcall	_I2C_Start
  1313  0653                     l1547:
  1314                           
  1315                           ;MPU.c: 75:   I2C_Master_Write(0x3B);
  1316  0653  303B               	movlw	59
  1317  0654  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Write
  1318  0659                     l1549:
  1319                           
  1320                           ;MPU.c: 76:   I2C_Master_Stop();
  1321  0659  120A  118A  23A0  120A  118A  	fcall	_I2C_Master_Stop
  1322  065E                     l1551:
  1323                           
  1324                           ;MPU.c: 77:   I2C_Start(0xD1);
  1325  065E  30D1               	movlw	209
  1326  065F  120A  118A  23F1  120A  118A  	fcall	_I2C_Start
  1327  0664                     l1553:
  1328  0664  3000               	movlw	0
  1329  0665  120A  118A  2448  120A  118A  	fcall	_I2C_Read
  1330  066A  3000               	movlw	0
  1331  066B  120A  118A  2448  120A  118A  	fcall	_I2C_Read
  1332  0670                     l1555:
  1333                           
  1334                           ;MPU.c: 79:   Ay = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1335  0670  3000               	movlw	0
  1336  0671  120A  118A  2448  120A  118A  	fcall	_I2C_Read
  1337  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1338  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1339  0678  00AD               	movwf	??_MPU6050_Read
  1340  0679  01AE               	clrf	??_MPU6050_Read+1
  1341  067A  3000               	movlw	0
  1342  067B  120A  118A  2448  120A  118A  	fcall	_I2C_Read
  1343  0680  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0681  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0682  00AF               	movwf	??_MPU6050_Read+2
  1346  0683  01B0               	clrf	??_MPU6050_Read+3
  1347  0684  082F               	movf	??_MPU6050_Read+2,w
  1348  0685  00B0               	movwf	??_MPU6050_Read+3
  1349  0686  01AF               	clrf	??_MPU6050_Read+2
  1350  0687  082D               	movf	??_MPU6050_Read,w
  1351  0688  042F               	iorwf	??_MPU6050_Read+2,w
  1352  0689  00E7               	movwf	MPU6050_Read@Ay
  1353  068A  082E               	movf	??_MPU6050_Read+1,w
  1354  068B  0430               	iorwf	??_MPU6050_Read+3,w
  1355  068C  00E8               	movwf	MPU6050_Read@Ay+1
  1356  068D                     l1557:
  1357  068D  3000               	movlw	0
  1358  068E  120A  118A  2448  120A  118A  	fcall	_I2C_Read
  1359  0693  3000               	movlw	0
  1360  0694  120A  118A  2448  120A  118A  	fcall	_I2C_Read
  1361  0699                     l1559:
  1362  0699  3000               	movlw	0
  1363  069A  120A  118A  2448  120A  118A  	fcall	_I2C_Read
  1364  069F  3000               	movlw	0
  1365  06A0  120A  118A  2448  120A  118A  	fcall	_I2C_Read
  1366  06A5                     l1561:
  1367  06A5  3000               	movlw	0
  1368  06A6  120A  118A  2448  120A  118A  	fcall	_I2C_Read
  1369  06AB  3000               	movlw	0
  1370  06AC  120A  118A  2448  120A  118A  	fcall	_I2C_Read
  1371  06B1                     l1563:
  1372  06B1  3000               	movlw	0
  1373  06B2  120A  118A  2448  120A  118A  	fcall	_I2C_Read
  1374  06B7  3000               	movlw	0
  1375  06B8  120A  118A  2448  120A  118A  	fcall	_I2C_Read
  1376  06BD                     l1565:
  1377  06BD  3000               	movlw	0
  1378  06BE  120A  118A  2448  120A  118A  	fcall	_I2C_Read
  1379  06C3  3001               	movlw	1
  1380  06C4  120A  118A  2448  120A  118A  	fcall	_I2C_Read
  1381  06C9                     l1567:
  1382                           
  1383                           ;MPU.c: 85:   I2C_Master_Stop();
  1384  06C9  120A  118A  23A0  120A  118A  	fcall	_I2C_Master_Stop
  1385  06CE                     l1569:
  1386                           
  1387                           ;MPU.c: 87:   PORTB = (Ay+16384)/128;
  1388  06CE  3080               	movlw	128
  1389  06CF  00F0               	movwf	___awdiv@divisor
  1390  06D0  3000               	movlw	0
  1391  06D1  00F1               	movwf	___awdiv@divisor+1
  1392  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1393  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1394  06D4  0867               	movf	MPU6050_Read@Ay,w
  1395  06D5  3E00               	addlw	0
  1396  06D6  00F2               	movwf	___awdiv@dividend
  1397  06D7  0868               	movf	MPU6050_Read@Ay+1,w
  1398  06D8  1803               	skipnc
  1399  06D9  3E01               	addlw	1
  1400  06DA  3E40               	addlw	64
  1401  06DB  00F3               	movwf	___awdiv@dividend+1
  1402  06DC  120A  118A  2549  120A  118A  	fcall	___awdiv
  1403  06E1  0870               	movf	?___awdiv,w
  1404  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1405  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1406  06E4  0086               	movwf	6	;volatile
  1407  06E5                     l1571:
  1408                           
  1409                           ;MPU.c: 89:   AY = (Ay+16384)/128;
  1410  06E5  3080               	movlw	128
  1411  06E6  00F0               	movwf	___awdiv@divisor
  1412  06E7  3000               	movlw	0
  1413  06E8  00F1               	movwf	___awdiv@divisor+1
  1414  06E9  0867               	movf	MPU6050_Read@Ay,w
  1415  06EA  3E00               	addlw	0
  1416  06EB  00F2               	movwf	___awdiv@dividend
  1417  06EC  0868               	movf	MPU6050_Read@Ay+1,w
  1418  06ED  1803               	skipnc
  1419  06EE  3E01               	addlw	1
  1420  06EF  3E40               	addlw	64
  1421  06F0  00F3               	movwf	___awdiv@dividend+1
  1422  06F1  120A  118A  2549  120A  118A  	fcall	___awdiv
  1423  06F6  0871               	movf	?___awdiv+1,w
  1424  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  1425  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  1426  06F9  00E6               	movwf	MPU6050_Read@AY+1
  1427  06FA  0870               	movf	?___awdiv,w
  1428  06FB  00E5               	movwf	MPU6050_Read@AY
  1429  06FC                     l1573:
  1430                           
  1431                           ;MPU.c: 95:   sprintf(buffer,"%d",AY);
  1432  06FC  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1433  06FD  00AD               	movwf	??_MPU6050_Read
  1434  06FE  082D               	movf	??_MPU6050_Read,w
  1435  06FF  00A0               	movwf	sprintf@f
  1436  0700  0866               	movf	MPU6050_Read@AY+1,w
  1437  0701  00A2               	movwf	?_sprintf+2
  1438  0702  0865               	movf	MPU6050_Read@AY,w
  1439  0703  00A1               	movwf	?_sprintf+1
  1440  0704  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1441  0705  120A  118A  2711  120A  118A  	fcall	_sprintf
  1442  070A                     l1575:
  1443                           
  1444                           ;MPU.c: 96:   UART_Write_String(buffer);
  1445  070A  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1446  070B  120A  118A  2427  120A  118A  	fcall	_UART_Write_String
  1447  0710                     l141:
  1448  0710  0008               	return
  1449  0711                     __end_of_MPU6050_Read:
  1450                           
  1451                           	psect	text6
  1452  0711                     __ptext6:	
  1453 ;; *************** function _sprintf *****************
  1454 ;; Defined at:
  1455 ;;		line 505 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  sp              1    wreg     PTR unsigned char 
  1458 ;;		 -> MPU6050_Read@buffer(40), 
  1459 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1460 ;;		 -> STR_1(3), 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1463 ;;		 -> MPU6050_Read@buffer(40), 
  1464 ;;  tmpval          4    0        struct .
  1465 ;;  val             2    9[BANK0 ] unsigned int 
  1466 ;;  cp              2    0        PTR const unsigned char 
  1467 ;;  len             2    0        unsigned int 
  1468 ;;  c               1   12[BANK0 ] unsigned char 
  1469 ;;  prec            1    8[BANK0 ] char 
  1470 ;;  flag            1    7[BANK0 ] unsigned char 
  1471 ;;  ap              1    6[BANK0 ] PTR void [1]
  1472 ;;		 -> ?_sprintf(2), 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  2    0[BANK0 ] int 
  1475 ;; Registers used:
  1476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1482 ;;      Params:         0       3       0       0       0
  1483 ;;      Locals:         0       7       0       0       0
  1484 ;;      Temps:          0       3       0       0       0
  1485 ;;      Totals:         0      13       0       0       0
  1486 ;;Total ram usage:       13 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; Hardware stack levels required when called:    1
  1489 ;; This function calls:
  1490 ;;		___lwdiv
  1491 ;;		___lwmod
  1492 ;; This function is called by:
  1493 ;;		_MPU6050_Read
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           
  1498                           ;psect for function _sprintf
  1499  0711                     _sprintf:
  1500                           
  1501                           ;incstack = 0
  1502                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1503                           ;sprintf@sp stored from wreg
  1504  0711  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0712  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0713  00AB               	movwf	sprintf@sp
  1507  0714                     l1359:
  1508                           
  1509                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const c
      +                          har * f, ...);D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 506: {;D:\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\Microchip\xc8\v2.31\pi
      +                          c\sources\c90\common\doprnt.c: 512:  char c;;D:\Microchip\xc8\v2.31\pic\sources\c90\comm
      +                          on\doprnt.c: 521:  signed char prec;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprn
      +                          t.c: 525:  unsigned char flag;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          43:  } tmpval;
  1510  0714  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1511  0715  00A3               	movwf	??_sprintf
  1512  0716  0823               	movf	??_sprintf,w
  1513  0717  00A6               	movwf	sprintf@ap
  1514                           
  1515                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1516  0718  2FE2               	goto	l1411
  1517  0719                     l1361:
  1518                           
  1519                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  1520  0719  3025               	movlw	37
  1521  071A  062C               	xorwf	sprintf@c,w
  1522  071B  1903               	btfsc	3,2
  1523  071C  2F1E               	goto	u671
  1524  071D  2F1F               	goto	u670
  1525  071E                     u671:
  1526  071E  2F2B               	goto	l1367
  1527  071F                     u670:
  1528  071F                     l1363:
  1529                           
  1530                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;D:\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1531  071F  082C               	movf	sprintf@c,w
  1532  0720  00A3               	movwf	??_sprintf
  1533  0721  082B               	movf	sprintf@sp,w
  1534  0722  0084               	movwf	4
  1535  0723  0823               	movf	??_sprintf,w
  1536  0724  1383               	bcf	3,7	;select IRP bank0
  1537  0725  0080               	movwf	0
  1538  0726                     l1365:
  1539  0726  3001               	movlw	1
  1540  0727  00A3               	movwf	??_sprintf
  1541  0728  0823               	movf	??_sprintf,w
  1542  0729  07AB               	addwf	sprintf@sp,f
  1543                           
  1544                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1545  072A  2FE2               	goto	l1411
  1546  072B                     l1367:
  1547                           
  1548                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1549  072B  01A7               	clrf	sprintf@flag
  1550  072C                     l1371:	
  1551                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c = *f++) {
  1552                           
  1553  072C  3001               	movlw	1
  1554  072D  07A0               	addwf	sprintf@f,f
  1555  072E  30FF               	movlw	-1
  1556  072F  0720               	addwf	sprintf@f,w
  1557  0730  0084               	movwf	4
  1558  0731  120A  118A  2003  120A  118A  	fcall	stringdir
  1559  0736  00AC               	movwf	sprintf@c
  1560  0737  00A3               	movwf	??_sprintf
  1561  0738  01A4               	clrf	??_sprintf+1
  1562                           
  1563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1564                           ; Switch size 1, requested type "simple"
  1565                           ; Number of cases is 1, Range of values is 0 to 0
  1566                           ; switch strategies available:
  1567                           ; Name         Instructions Cycles
  1568                           ; simple_byte            4     3 (average)
  1569                           ; direct_byte           11     8 (fixed)
  1570                           ; jumptable            260     6 (fixed)
  1571                           ;	Chosen strategy is simple_byte
  1572  0739  0824               	movf	??_sprintf+1,w
  1573  073A  3A00               	xorlw	0	; case 0
  1574  073B  1903               	skipnz
  1575  073C  2F3E               	goto	l1661
  1576  073D  2FE2               	goto	l1411
  1577  073E                     l1661:
  1578                           
  1579                           ; Switch size 1, requested type "simple"
  1580                           ; Number of cases is 3, Range of values is 0 to 105
  1581                           ; switch strategies available:
  1582                           ; Name         Instructions Cycles
  1583                           ; simple_byte           10     6 (average)
  1584                           ; jumptable            260     6 (fixed)
  1585                           ;	Chosen strategy is simple_byte
  1586  073E  0823               	movf	??_sprintf,w
  1587  073F  3A00               	xorlw	0	; case 0
  1588  0740  1903               	skipnz
  1589  0741  2FF4               	goto	l1413
  1590  0742  3A64               	xorlw	100	; case 100
  1591  0743  1903               	skipnz
  1592  0744  2F49               	goto	l1373
  1593  0745  3A0D               	xorlw	13	; case 105
  1594  0746  1903               	skipnz
  1595  0747  2F49               	goto	l1373
  1596  0748  2FE2               	goto	l1411
  1597  0749                     l1373:
  1598                           
  1599                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned int)(*(int *)__va_arg((*(in
      +                          t **)ap), (int)0));
  1600  0749  0826               	movf	sprintf@ap,w
  1601  074A  0084               	movwf	4
  1602  074B  1383               	bcf	3,7	;select IRP bank0
  1603  074C  0800               	movf	0,w
  1604  074D  00A9               	movwf	sprintf@val
  1605  074E  0A84               	incf	4,f
  1606  074F  0800               	movf	0,w
  1607  0750  00AA               	movwf	sprintf@val+1
  1608  0751                     l1375:
  1609  0751  3002               	movlw	2
  1610  0752  00A3               	movwf	??_sprintf
  1611  0753  0823               	movf	??_sprintf,w
  1612  0754  07A6               	addwf	sprintf@ap,f
  1613  0755                     l1377:
  1614                           
  1615                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)val < 0) {
  1616  0755  1FAA               	btfss	sprintf@val+1,7
  1617  0756  2F58               	goto	u681
  1618  0757  2F59               	goto	u680
  1619  0758                     u681:
  1620  0758  2F62               	goto	l1383
  1621  0759                     u680:
  1622  0759                     l1379:
  1623                           
  1624                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
  1625  0759  3003               	movlw	3
  1626  075A  00A3               	movwf	??_sprintf
  1627  075B  0823               	movf	??_sprintf,w
  1628  075C  04A7               	iorwf	sprintf@flag,f
  1629  075D                     l1381:
  1630                           
  1631                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
  1632  075D  09A9               	comf	sprintf@val,f
  1633  075E  09AA               	comf	sprintf@val+1,f
  1634  075F  0AA9               	incf	sprintf@val,f
  1635  0760  1903               	skipnz
  1636  0761  0AAA               	incf	sprintf@val+1,f
  1637  0762                     l1383:
  1638                           
  1639                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
  1640  0762  01AC               	clrf	sprintf@c
  1641  0763  0AAC               	incf	sprintf@c,f
  1642  0764                     l1389:
  1643                           
  1644                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowers[c])
  1645  0764  082C               	movf	sprintf@c,w
  1646  0765  00A3               	movwf	??_sprintf
  1647  0766  0723               	addwf	??_sprintf,w
  1648  0767  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1649  0768  0084               	movwf	4
  1650  0769  120A  118A  2003  120A  118A  	fcall	stringdir
  1651  076E  00A4               	movwf	??_sprintf+1
  1652  076F  120A  118A  2003  120A  118A  	fcall	stringdir
  1653  0774  00A5               	movwf	??_sprintf+2
  1654  0775  0825               	movf	??_sprintf+2,w
  1655  0776  022A               	subwf	sprintf@val+1,w
  1656  0777  1D03               	skipz
  1657  0778  2F7B               	goto	u695
  1658  0779  0824               	movf	??_sprintf+1,w
  1659  077A  0229               	subwf	sprintf@val,w
  1660  077B                     u695:
  1661  077B  1803               	skipnc
  1662  077C  2F7E               	goto	u691
  1663  077D  2F7F               	goto	u690
  1664  077E                     u691:
  1665  077E  2F80               	goto	l1393
  1666  077F                     u690:
  1667  077F  2F8A               	goto	l1395
  1668  0780                     l1393:
  1669  0780  3001               	movlw	1
  1670  0781  00A3               	movwf	??_sprintf
  1671  0782  0823               	movf	??_sprintf,w
  1672  0783  07AC               	addwf	sprintf@c,f
  1673  0784  3005               	movlw	5
  1674  0785  062C               	xorwf	sprintf@c,w
  1675  0786  1D03               	btfss	3,2
  1676  0787  2F89               	goto	u701
  1677  0788  2F8A               	goto	u700
  1678  0789                     u701:
  1679  0789  2F64               	goto	l1389
  1680  078A                     u700:
  1681  078A                     l1395:
  1682                           
  1683                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1684  078A  0827               	movf	sprintf@flag,w
  1685  078B  3903               	andlw	3
  1686  078C  1903               	btfsc	3,2
  1687  078D  2F8F               	goto	u711
  1688  078E  2F90               	goto	u710
  1689  078F                     u711:
  1690  078F  2F9B               	goto	l1401
  1691  0790                     u710:
  1692  0790                     l1397:
  1693                           
  1694                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
  1695  0790  302D               	movlw	45
  1696  0791  00A3               	movwf	??_sprintf
  1697  0792  082B               	movf	sprintf@sp,w
  1698  0793  0084               	movwf	4
  1699  0794  0823               	movf	??_sprintf,w
  1700  0795  1383               	bcf	3,7	;select IRP bank0
  1701  0796  0080               	movwf	0
  1702  0797                     l1399:
  1703  0797  3001               	movlw	1
  1704  0798  00A3               	movwf	??_sprintf
  1705  0799  0823               	movf	??_sprintf,w
  1706  079A  07AB               	addwf	sprintf@sp,f
  1707  079B                     l1401:
  1708                           
  1709                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1710  079B  082C               	movf	sprintf@c,w
  1711  079C  00A3               	movwf	??_sprintf
  1712  079D  0823               	movf	??_sprintf,w
  1713  079E  00A8               	movwf	sprintf@prec
  1714                           
  1715                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  1716  079F  2FD9               	goto	l1409
  1717  07A0                     l1403:
  1718                           
  1719                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpowers[(unsigned char)prec]) %
      +                           10 + '0';
  1720  07A0  300A               	movlw	10
  1721  07A1  00F8               	movwf	___lwmod@divisor
  1722  07A2  3000               	movlw	0
  1723  07A3  00F9               	movwf	___lwmod@divisor+1
  1724  07A4  0828               	movf	sprintf@prec,w
  1725  07A5  00A3               	movwf	??_sprintf
  1726  07A6  0723               	addwf	??_sprintf,w
  1727  07A7  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1728  07A8  0084               	movwf	4
  1729  07A9  120A  118A  2003  120A  118A  	fcall	stringdir
  1730  07AE  00F0               	movwf	___lwdiv@divisor
  1731  07AF  120A  118A  2003  120A  118A  	fcall	stringdir
  1732  07B4  00F1               	movwf	___lwdiv@divisor+1
  1733  07B5  082A               	movf	sprintf@val+1,w
  1734  07B6  00F3               	movwf	___lwdiv@dividend+1
  1735  07B7  0829               	movf	sprintf@val,w
  1736  07B8  00F2               	movwf	___lwdiv@dividend
  1737  07B9  120A  118A  24A9  120A  118A  	fcall	___lwdiv
  1738  07BE  0871               	movf	?___lwdiv+1,w
  1739  07BF  00FB               	movwf	___lwmod@dividend+1
  1740  07C0  0870               	movf	?___lwdiv,w
  1741  07C1  00FA               	movwf	___lwmod@dividend
  1742  07C2  120A  118A  246F  120A  118A  	fcall	___lwmod
  1743  07C7  0878               	movf	?___lwmod,w
  1744  07C8  3E30               	addlw	48
  1745  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1746  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1747  07CB  00A4               	movwf	??_sprintf+1
  1748  07CC  0824               	movf	??_sprintf+1,w
  1749  07CD  00AC               	movwf	sprintf@c
  1750  07CE                     l1405:
  1751                           
  1752                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
  1753  07CE  082C               	movf	sprintf@c,w
  1754  07CF  00A3               	movwf	??_sprintf
  1755  07D0  082B               	movf	sprintf@sp,w
  1756  07D1  0084               	movwf	4
  1757  07D2  0823               	movf	??_sprintf,w
  1758  07D3  1383               	bcf	3,7	;select IRP bank0
  1759  07D4  0080               	movwf	0
  1760  07D5                     l1407:
  1761  07D5  3001               	movlw	1
  1762  07D6  00A3               	movwf	??_sprintf
  1763  07D7  0823               	movf	??_sprintf,w
  1764  07D8  07AB               	addwf	sprintf@sp,f
  1765  07D9                     l1409:
  1766                           
  1767                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  1768  07D9  30FF               	movlw	255
  1769  07DA  00A3               	movwf	??_sprintf
  1770  07DB  0823               	movf	??_sprintf,w
  1771  07DC  07A8               	addwf	sprintf@prec,f
  1772  07DD  0A28               	incf	sprintf@prec,w
  1773  07DE  1D03               	btfss	3,2
  1774  07DF  2FE1               	goto	u721
  1775  07E0  2FE2               	goto	u720
  1776  07E1                     u721:
  1777  07E1  2FA0               	goto	l1403
  1778  07E2                     u720:
  1779  07E2                     l1411:
  1780                           
  1781                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1782  07E2  3001               	movlw	1
  1783  07E3  07A0               	addwf	sprintf@f,f
  1784  07E4  30FF               	movlw	-1
  1785  07E5  0720               	addwf	sprintf@f,w
  1786  07E6  0084               	movwf	4
  1787  07E7  120A  118A  2003  120A  118A  	fcall	stringdir
  1788  07EC  00A3               	movwf	??_sprintf
  1789  07ED  0823               	movf	??_sprintf,w
  1790  07EE  00AC               	movwf	sprintf@c
  1791  07EF  082C               	movf	sprintf@c,w
  1792  07F0  1D03               	btfss	3,2
  1793  07F1  2FF3               	goto	u731
  1794  07F2  2FF4               	goto	u730
  1795  07F3                     u731:
  1796  07F3  2F19               	goto	l1361
  1797  07F4                     u730:
  1798  07F4                     l1413:
  1799                           
  1800                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1801  07F4  082B               	movf	sprintf@sp,w
  1802  07F5  0084               	movwf	4
  1803  07F6  1383               	bcf	3,7	;select IRP bank0
  1804  07F7  0180               	clrf	0
  1805  07F8                     l341:
  1806  07F8  0008               	return
  1807  07F9                     __end_of_sprintf:
  1808                           
  1809                           	psect	text7
  1810  046F                     __ptext7:	
  1811 ;; *************** function ___lwmod *****************
  1812 ;; Defined at:
  1813 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  divisor         2    8[COMMON] unsigned int 
  1816 ;;  dividend        2   10[COMMON] unsigned int 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  counter         1   13[COMMON] unsigned char 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  2    8[COMMON] unsigned int 
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1828 ;;      Params:         4       0       0       0       0
  1829 ;;      Locals:         1       0       0       0       0
  1830 ;;      Temps:          1       0       0       0       0
  1831 ;;      Totals:         6       0       0       0       0
  1832 ;;Total ram usage:        6 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_sprintf
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           
  1842                           ;psect for function ___lwmod
  1843  046F                     ___lwmod:
  1844  046F                     l1297:	
  1845                           ;incstack = 0
  1846                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1847                           
  1848  046F  0878               	movf	___lwmod@divisor,w
  1849  0470  0479               	iorwf	___lwmod@divisor+1,w
  1850  0471  1903               	btfsc	3,2
  1851  0472  2C74               	goto	u571
  1852  0473  2C75               	goto	u570
  1853  0474                     u571:
  1854  0474  2CA4               	goto	l1315
  1855  0475                     u570:
  1856  0475                     l1299:
  1857  0475  01FD               	clrf	___lwmod@counter
  1858  0476  0AFD               	incf	___lwmod@counter,f
  1859  0477  2C83               	goto	l1305
  1860  0478                     l1301:
  1861  0478  3001               	movlw	1
  1862  0479                     u585:
  1863  0479  1003               	clrc
  1864  047A  0DF8               	rlf	___lwmod@divisor,f
  1865  047B  0DF9               	rlf	___lwmod@divisor+1,f
  1866  047C  3EFF               	addlw	-1
  1867  047D  1D03               	skipz
  1868  047E  2C79               	goto	u585
  1869  047F                     l1303:
  1870  047F  3001               	movlw	1
  1871  0480  00FC               	movwf	??___lwmod
  1872  0481  087C               	movf	??___lwmod,w
  1873  0482  07FD               	addwf	___lwmod@counter,f
  1874  0483                     l1305:
  1875  0483  1FF9               	btfss	___lwmod@divisor+1,7
  1876  0484  2C86               	goto	u591
  1877  0485  2C87               	goto	u590
  1878  0486                     u591:
  1879  0486  2C78               	goto	l1301
  1880  0487                     u590:
  1881  0487                     l1307:
  1882  0487  0879               	movf	___lwmod@divisor+1,w
  1883  0488  027B               	subwf	___lwmod@dividend+1,w
  1884  0489  1D03               	skipz
  1885  048A  2C8D               	goto	u605
  1886  048B  0878               	movf	___lwmod@divisor,w
  1887  048C  027A               	subwf	___lwmod@dividend,w
  1888  048D                     u605:
  1889  048D  1C03               	skipc
  1890  048E  2C90               	goto	u601
  1891  048F  2C91               	goto	u600
  1892  0490                     u601:
  1893  0490  2C97               	goto	l1311
  1894  0491                     u600:
  1895  0491                     l1309:
  1896  0491  0878               	movf	___lwmod@divisor,w
  1897  0492  02FA               	subwf	___lwmod@dividend,f
  1898  0493  0879               	movf	___lwmod@divisor+1,w
  1899  0494  1C03               	skipc
  1900  0495  03FB               	decf	___lwmod@dividend+1,f
  1901  0496  02FB               	subwf	___lwmod@dividend+1,f
  1902  0497                     l1311:
  1903  0497  3001               	movlw	1
  1904  0498                     u615:
  1905  0498  1003               	clrc
  1906  0499  0CF9               	rrf	___lwmod@divisor+1,f
  1907  049A  0CF8               	rrf	___lwmod@divisor,f
  1908  049B  3EFF               	addlw	-1
  1909  049C  1D03               	skipz
  1910  049D  2C98               	goto	u615
  1911  049E                     l1313:
  1912  049E  3001               	movlw	1
  1913  049F  02FD               	subwf	___lwmod@counter,f
  1914  04A0  1D03               	btfss	3,2
  1915  04A1  2CA3               	goto	u621
  1916  04A2  2CA4               	goto	u620
  1917  04A3                     u621:
  1918  04A3  2C87               	goto	l1307
  1919  04A4                     u620:
  1920  04A4                     l1315:
  1921  04A4  087B               	movf	___lwmod@dividend+1,w
  1922  04A5  00F9               	movwf	?___lwmod+1
  1923  04A6  087A               	movf	___lwmod@dividend,w
  1924  04A7  00F8               	movwf	?___lwmod
  1925  04A8                     l627:
  1926  04A8  0008               	return
  1927  04A9                     __end_of___lwmod:
  1928                           
  1929                           	psect	text8
  1930  04A9                     __ptext8:	
  1931 ;; *************** function ___lwdiv *****************
  1932 ;; Defined at:
  1933 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  divisor         2    0[COMMON] unsigned int 
  1936 ;;  dividend        2    2[COMMON] unsigned int 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  quotient        2    5[COMMON] unsigned int 
  1939 ;;  counter         1    7[COMMON] unsigned char 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  2    0[COMMON] unsigned int 
  1942 ;; Registers used:
  1943 ;;		wreg, status,2, status,0
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1949 ;;      Params:         4       0       0       0       0
  1950 ;;      Locals:         3       0       0       0       0
  1951 ;;      Temps:          1       0       0       0       0
  1952 ;;      Totals:         8       0       0       0       0
  1953 ;;Total ram usage:        8 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; This function calls:
  1956 ;;		Nothing
  1957 ;; This function is called by:
  1958 ;;		_sprintf
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           
  1963                           ;psect for function ___lwdiv
  1964  04A9                     ___lwdiv:
  1965  04A9                     l1271:	
  1966                           ;incstack = 0
  1967                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1968                           
  1969  04A9  01F5               	clrf	___lwdiv@quotient
  1970  04AA  01F6               	clrf	___lwdiv@quotient+1
  1971  04AB                     l1273:
  1972  04AB  0870               	movf	___lwdiv@divisor,w
  1973  04AC  0471               	iorwf	___lwdiv@divisor+1,w
  1974  04AD  1903               	btfsc	3,2
  1975  04AE  2CB0               	goto	u501
  1976  04AF  2CB1               	goto	u500
  1977  04B0                     u501:
  1978  04B0  2CE8               	goto	l1293
  1979  04B1                     u500:
  1980  04B1                     l1275:
  1981  04B1  01F7               	clrf	___lwdiv@counter
  1982  04B2  0AF7               	incf	___lwdiv@counter,f
  1983  04B3  2CBF               	goto	l1281
  1984  04B4                     l1277:
  1985  04B4  3001               	movlw	1
  1986  04B5                     u515:
  1987  04B5  1003               	clrc
  1988  04B6  0DF0               	rlf	___lwdiv@divisor,f
  1989  04B7  0DF1               	rlf	___lwdiv@divisor+1,f
  1990  04B8  3EFF               	addlw	-1
  1991  04B9  1D03               	skipz
  1992  04BA  2CB5               	goto	u515
  1993  04BB                     l1279:
  1994  04BB  3001               	movlw	1
  1995  04BC  00F4               	movwf	??___lwdiv
  1996  04BD  0874               	movf	??___lwdiv,w
  1997  04BE  07F7               	addwf	___lwdiv@counter,f
  1998  04BF                     l1281:
  1999  04BF  1FF1               	btfss	___lwdiv@divisor+1,7
  2000  04C0  2CC2               	goto	u521
  2001  04C1  2CC3               	goto	u520
  2002  04C2                     u521:
  2003  04C2  2CB4               	goto	l1277
  2004  04C3                     u520:
  2005  04C3                     l1283:
  2006  04C3  3001               	movlw	1
  2007  04C4                     u535:
  2008  04C4  1003               	clrc
  2009  04C5  0DF5               	rlf	___lwdiv@quotient,f
  2010  04C6  0DF6               	rlf	___lwdiv@quotient+1,f
  2011  04C7  3EFF               	addlw	-1
  2012  04C8  1D03               	skipz
  2013  04C9  2CC4               	goto	u535
  2014  04CA  0871               	movf	___lwdiv@divisor+1,w
  2015  04CB  0273               	subwf	___lwdiv@dividend+1,w
  2016  04CC  1D03               	skipz
  2017  04CD  2CD0               	goto	u545
  2018  04CE  0870               	movf	___lwdiv@divisor,w
  2019  04CF  0272               	subwf	___lwdiv@dividend,w
  2020  04D0                     u545:
  2021  04D0  1C03               	skipc
  2022  04D1  2CD3               	goto	u541
  2023  04D2  2CD4               	goto	u540
  2024  04D3                     u541:
  2025  04D3  2CDB               	goto	l1289
  2026  04D4                     u540:
  2027  04D4                     l1285:
  2028  04D4  0870               	movf	___lwdiv@divisor,w
  2029  04D5  02F2               	subwf	___lwdiv@dividend,f
  2030  04D6  0871               	movf	___lwdiv@divisor+1,w
  2031  04D7  1C03               	skipc
  2032  04D8  03F3               	decf	___lwdiv@dividend+1,f
  2033  04D9  02F3               	subwf	___lwdiv@dividend+1,f
  2034  04DA                     l1287:
  2035  04DA  1475               	bsf	___lwdiv@quotient,0
  2036  04DB                     l1289:
  2037  04DB  3001               	movlw	1
  2038  04DC                     u555:
  2039  04DC  1003               	clrc
  2040  04DD  0CF1               	rrf	___lwdiv@divisor+1,f
  2041  04DE  0CF0               	rrf	___lwdiv@divisor,f
  2042  04DF  3EFF               	addlw	-1
  2043  04E0  1D03               	skipz
  2044  04E1  2CDC               	goto	u555
  2045  04E2                     l1291:
  2046  04E2  3001               	movlw	1
  2047  04E3  02F7               	subwf	___lwdiv@counter,f
  2048  04E4  1D03               	btfss	3,2
  2049  04E5  2CE7               	goto	u561
  2050  04E6  2CE8               	goto	u560
  2051  04E7                     u561:
  2052  04E7  2CC3               	goto	l1283
  2053  04E8                     u560:
  2054  04E8                     l1293:
  2055  04E8  0876               	movf	___lwdiv@quotient+1,w
  2056  04E9  00F1               	movwf	?___lwdiv+1
  2057  04EA  0875               	movf	___lwdiv@quotient,w
  2058  04EB  00F0               	movwf	?___lwdiv
  2059  04EC                     l617:
  2060  04EC  0008               	return
  2061  04ED                     __end_of___lwdiv:
  2062                           
  2063                           	psect	text9
  2064  0549                     __ptext9:	
  2065 ;; *************** function ___awdiv *****************
  2066 ;; Defined at:
  2067 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;  divisor         2    0[COMMON] int 
  2070 ;;  dividend        2    2[COMMON] int 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;  quotient        2    7[COMMON] int 
  2073 ;;  sign            1    6[COMMON] unsigned char 
  2074 ;;  counter         1    5[COMMON] unsigned char 
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  2    0[COMMON] int 
  2077 ;; Registers used:
  2078 ;;		wreg, status,2, status,0
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2084 ;;      Params:         4       0       0       0       0
  2085 ;;      Locals:         4       0       0       0       0
  2086 ;;      Temps:          1       0       0       0       0
  2087 ;;      Totals:         9       0       0       0       0
  2088 ;;Total ram usage:        9 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; This function calls:
  2091 ;;		Nothing
  2092 ;; This function is called by:
  2093 ;;		_MPU6050_Read
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           
  2098                           ;psect for function ___awdiv
  2099  0549                     ___awdiv:
  2100  0549                     l1421:	
  2101                           ;incstack = 0
  2102                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2103                           
  2104  0549  01F6               	clrf	___awdiv@sign
  2105  054A                     l1423:
  2106  054A  1FF1               	btfss	___awdiv@divisor+1,7
  2107  054B  2D4D               	goto	u741
  2108  054C  2D4E               	goto	u740
  2109  054D                     u741:
  2110  054D  2D55               	goto	l1429
  2111  054E                     u740:
  2112  054E                     l1425:
  2113  054E  09F0               	comf	___awdiv@divisor,f
  2114  054F  09F1               	comf	___awdiv@divisor+1,f
  2115  0550  0AF0               	incf	___awdiv@divisor,f
  2116  0551  1903               	skipnz
  2117  0552  0AF1               	incf	___awdiv@divisor+1,f
  2118  0553                     l1427:
  2119  0553  01F6               	clrf	___awdiv@sign
  2120  0554  0AF6               	incf	___awdiv@sign,f
  2121  0555                     l1429:
  2122  0555  1FF3               	btfss	___awdiv@dividend+1,7
  2123  0556  2D58               	goto	u751
  2124  0557  2D59               	goto	u750
  2125  0558                     u751:
  2126  0558  2D62               	goto	l1435
  2127  0559                     u750:
  2128  0559                     l1431:
  2129  0559  09F2               	comf	___awdiv@dividend,f
  2130  055A  09F3               	comf	___awdiv@dividend+1,f
  2131  055B  0AF2               	incf	___awdiv@dividend,f
  2132  055C  1903               	skipnz
  2133  055D  0AF3               	incf	___awdiv@dividend+1,f
  2134  055E                     l1433:
  2135  055E  3001               	movlw	1
  2136  055F  00F4               	movwf	??___awdiv
  2137  0560  0874               	movf	??___awdiv,w
  2138  0561  06F6               	xorwf	___awdiv@sign,f
  2139  0562                     l1435:
  2140  0562  01F7               	clrf	___awdiv@quotient
  2141  0563  01F8               	clrf	___awdiv@quotient+1
  2142  0564                     l1437:
  2143  0564  0870               	movf	___awdiv@divisor,w
  2144  0565  0471               	iorwf	___awdiv@divisor+1,w
  2145  0566  1903               	btfsc	3,2
  2146  0567  2D69               	goto	u761
  2147  0568  2D6A               	goto	u760
  2148  0569                     u761:
  2149  0569  2DA1               	goto	l1457
  2150  056A                     u760:
  2151  056A                     l1439:
  2152  056A  01F5               	clrf	___awdiv@counter
  2153  056B  0AF5               	incf	___awdiv@counter,f
  2154  056C  2D78               	goto	l1445
  2155  056D                     l1441:
  2156  056D  3001               	movlw	1
  2157  056E                     u775:
  2158  056E  1003               	clrc
  2159  056F  0DF0               	rlf	___awdiv@divisor,f
  2160  0570  0DF1               	rlf	___awdiv@divisor+1,f
  2161  0571  3EFF               	addlw	-1
  2162  0572  1D03               	skipz
  2163  0573  2D6E               	goto	u775
  2164  0574                     l1443:
  2165  0574  3001               	movlw	1
  2166  0575  00F4               	movwf	??___awdiv
  2167  0576  0874               	movf	??___awdiv,w
  2168  0577  07F5               	addwf	___awdiv@counter,f
  2169  0578                     l1445:
  2170  0578  1FF1               	btfss	___awdiv@divisor+1,7
  2171  0579  2D7B               	goto	u781
  2172  057A  2D7C               	goto	u780
  2173  057B                     u781:
  2174  057B  2D6D               	goto	l1441
  2175  057C                     u780:
  2176  057C                     l1447:
  2177  057C  3001               	movlw	1
  2178  057D                     u795:
  2179  057D  1003               	clrc
  2180  057E  0DF7               	rlf	___awdiv@quotient,f
  2181  057F  0DF8               	rlf	___awdiv@quotient+1,f
  2182  0580  3EFF               	addlw	-1
  2183  0581  1D03               	skipz
  2184  0582  2D7D               	goto	u795
  2185  0583  0871               	movf	___awdiv@divisor+1,w
  2186  0584  0273               	subwf	___awdiv@dividend+1,w
  2187  0585  1D03               	skipz
  2188  0586  2D89               	goto	u805
  2189  0587  0870               	movf	___awdiv@divisor,w
  2190  0588  0272               	subwf	___awdiv@dividend,w
  2191  0589                     u805:
  2192  0589  1C03               	skipc
  2193  058A  2D8C               	goto	u801
  2194  058B  2D8D               	goto	u800
  2195  058C                     u801:
  2196  058C  2D94               	goto	l1453
  2197  058D                     u800:
  2198  058D                     l1449:
  2199  058D  0870               	movf	___awdiv@divisor,w
  2200  058E  02F2               	subwf	___awdiv@dividend,f
  2201  058F  0871               	movf	___awdiv@divisor+1,w
  2202  0590  1C03               	skipc
  2203  0591  03F3               	decf	___awdiv@dividend+1,f
  2204  0592  02F3               	subwf	___awdiv@dividend+1,f
  2205  0593                     l1451:
  2206  0593  1477               	bsf	___awdiv@quotient,0
  2207  0594                     l1453:
  2208  0594  3001               	movlw	1
  2209  0595                     u815:
  2210  0595  1003               	clrc
  2211  0596  0CF1               	rrf	___awdiv@divisor+1,f
  2212  0597  0CF0               	rrf	___awdiv@divisor,f
  2213  0598  3EFF               	addlw	-1
  2214  0599  1D03               	skipz
  2215  059A  2D95               	goto	u815
  2216  059B                     l1455:
  2217  059B  3001               	movlw	1
  2218  059C  02F5               	subwf	___awdiv@counter,f
  2219  059D  1D03               	btfss	3,2
  2220  059E  2DA0               	goto	u821
  2221  059F  2DA1               	goto	u820
  2222  05A0                     u821:
  2223  05A0  2D7C               	goto	l1447
  2224  05A1                     u820:
  2225  05A1                     l1457:
  2226  05A1  0876               	movf	___awdiv@sign,w
  2227  05A2  1903               	btfsc	3,2
  2228  05A3  2DA5               	goto	u831
  2229  05A4  2DA6               	goto	u830
  2230  05A5                     u831:
  2231  05A5  2DAB               	goto	l1461
  2232  05A6                     u830:
  2233  05A6                     l1459:
  2234  05A6  09F7               	comf	___awdiv@quotient,f
  2235  05A7  09F8               	comf	___awdiv@quotient+1,f
  2236  05A8  0AF7               	incf	___awdiv@quotient,f
  2237  05A9  1903               	skipnz
  2238  05AA  0AF8               	incf	___awdiv@quotient+1,f
  2239  05AB                     l1461:
  2240  05AB  0878               	movf	___awdiv@quotient+1,w
  2241  05AC  00F1               	movwf	?___awdiv+1
  2242  05AD  0877               	movf	___awdiv@quotient,w
  2243  05AE  00F0               	movwf	?___awdiv
  2244  05AF                     l498:
  2245  05AF  0008               	return
  2246  05B0                     __end_of___awdiv:
  2247                           
  2248                           	psect	text10
  2249  0427                     __ptext10:	
  2250 ;; *************** function _UART_Write_String *****************
  2251 ;; Defined at:
  2252 ;;		line 39 in file "USART.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  buf             1    wreg     PTR unsigned char 
  2255 ;;		 -> MPU6050_Read@buffer(40), 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  buf             1    4[COMMON] PTR unsigned char 
  2258 ;;		 -> MPU6050_Read@buffer(40), 
  2259 ;;  i               2    2[COMMON] int 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2269 ;;      Params:         0       0       0       0       0
  2270 ;;      Locals:         3       0       0       0       0
  2271 ;;      Temps:          1       0       0       0       0
  2272 ;;      Totals:         4       0       0       0       0
  2273 ;;Total ram usage:        4 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    1
  2276 ;; This function calls:
  2277 ;;		_UART_Write
  2278 ;; This function is called by:
  2279 ;;		_MPU6050_Read
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           
  2284                           ;psect for function _UART_Write_String
  2285  0427                     _UART_Write_String:
  2286                           
  2287                           ;incstack = 0
  2288                           ; Regs used in _UART_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2289                           ;UART_Write_String@buf stored from wreg
  2290  0427  00F4               	movwf	UART_Write_String@buf
  2291  0428                     l1319:
  2292                           
  2293                           ;USART.c: 39: void UART_Write_String(char* buf);USART.c: 40: {;USART.c: 41:     int i=0;
  2294  0428  01F2               	clrf	UART_Write_String@i
  2295  0429  01F3               	clrf	UART_Write_String@i+1
  2296                           
  2297                           ;USART.c: 42:     while(buf[i] != '\0')
  2298  042A  2C3C               	goto	l1325
  2299  042B                     l1321:
  2300                           
  2301                           ;USART.c: 43:         UART_Write(buf[i++]);
  2302  042B  0872               	movf	UART_Write_String@i,w
  2303  042C  0774               	addwf	UART_Write_String@buf,w
  2304  042D  00F1               	movwf	??_UART_Write_String
  2305  042E  0871               	movf	??_UART_Write_String,w
  2306  042F  0084               	movwf	4
  2307  0430  0800               	movf	0,w
  2308  0431  120A  118A  23BB  120A  118A  	fcall	_UART_Write
  2309  0436                     l1323:
  2310  0436  3001               	movlw	1
  2311  0437  07F2               	addwf	UART_Write_String@i,f
  2312  0438  1803               	skipnc
  2313  0439  0AF3               	incf	UART_Write_String@i+1,f
  2314  043A  3000               	movlw	0
  2315  043B  07F3               	addwf	UART_Write_String@i+1,f
  2316  043C                     l1325:
  2317                           
  2318                           ;USART.c: 42:     while(buf[i] != '\0')
  2319  043C  0872               	movf	UART_Write_String@i,w
  2320  043D  0774               	addwf	UART_Write_String@buf,w
  2321  043E  00F1               	movwf	??_UART_Write_String
  2322  043F  0871               	movf	??_UART_Write_String,w
  2323  0440  0084               	movwf	4
  2324  0441  1383               	bcf	3,7	;select IRP bank0
  2325  0442  0800               	movf	0,w
  2326  0443  1D03               	btfss	3,2
  2327  0444  2C46               	goto	u631
  2328  0445  2C47               	goto	u630
  2329  0446                     u631:
  2330  0446  2C2B               	goto	l1321
  2331  0447                     u630:
  2332  0447                     l111:
  2333  0447  0008               	return
  2334  0448                     __end_of_UART_Write_String:
  2335                           
  2336                           	psect	text11
  2337  03BB                     __ptext11:	
  2338 ;; *************** function _UART_Write *****************
  2339 ;; Defined at:
  2340 ;;		line 33 in file "USART.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  data            1    wreg     unsigned char 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  data            1    0[COMMON] unsigned char 
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		wreg
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2354 ;;      Params:         0       0       0       0       0
  2355 ;;      Locals:         1       0       0       0       0
  2356 ;;      Temps:          0       0       0       0       0
  2357 ;;      Totals:         1       0       0       0       0
  2358 ;;Total ram usage:        1 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_UART_Write_String
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           
  2368                           ;psect for function _UART_Write
  2369  03BB                     _UART_Write:
  2370                           
  2371                           ;incstack = 0
  2372                           ; Regs used in _UART_Write: [wreg]
  2373                           ;UART_Write@data stored from wreg
  2374  03BB  00F0               	movwf	UART_Write@data
  2375  03BC                     l1259:
  2376  03BC                     l102:	
  2377                           ;USART.c: 33: void UART_Write(unsigned char data);USART.c: 34: {;USART.c: 35:   while(!T
      +                          RMT);
  2378                           
  2379  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  2380  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  2381  03BE  1C98               	btfss	24,1	;volatile
  2382  03BF  2BC1               	goto	u461
  2383  03C0  2BC2               	goto	u460
  2384  03C1                     u461:
  2385  03C1  2BBC               	goto	l102
  2386  03C2                     u460:
  2387  03C2                     l1261:
  2388                           
  2389                           ;USART.c: 36:   TXREG = data;
  2390  03C2  0870               	movf	UART_Write@data,w
  2391  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2392  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2393  03C5  0099               	movwf	25	;volatile
  2394  03C6                     l105:
  2395  03C6  0008               	return
  2396  03C7                     __end_of_UART_Write:
  2397                           
  2398                           	psect	text12
  2399  0448                     __ptext12:	
  2400 ;; *************** function _I2C_Read *****************
  2401 ;; Defined at:
  2402 ;;		line 89 in file "I2c.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  ACK_NACK        1    wreg     unsigned char 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  ACK_NACK        1    1[COMMON] unsigned char 
  2407 ;;  Data            1    2[COMMON] unsigned char 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  1    wreg      unsigned char 
  2410 ;; Registers used:
  2411 ;;		wreg, status,2, status,0, pclath, cstack
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2417 ;;      Params:         0       0       0       0       0
  2418 ;;      Locals:         2       0       0       0       0
  2419 ;;      Temps:          1       0       0       0       0
  2420 ;;      Totals:         3       0       0       0       0
  2421 ;;Total ram usage:        3 bytes
  2422 ;; Hardware stack levels used:    1
  2423 ;; Hardware stack levels required when called:    1
  2424 ;; This function calls:
  2425 ;;		_I2C_ACK
  2426 ;;		_I2C_NACK
  2427 ;; This function is called by:
  2428 ;;		_MPU6050_Read
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           
  2433                           ;psect for function _I2C_Read
  2434  0448                     _I2C_Read:
  2435                           
  2436                           ;incstack = 0
  2437                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  2438                           ;I2C_Read@ACK_NACK stored from wreg
  2439  0448  00F1               	movwf	I2C_Read@ACK_NACK
  2440  0449                     l1345:
  2441                           
  2442                           ;I2c.c: 89: unsigned char I2C_Read(unsigned char ACK_NACK);I2c.c: 90: {;I2c.c: 92:     u
      +                          nsigned char Data;;I2c.c: 93:     RCEN = 1;
  2443  0449  1683               	bsf	3,5	;RP0=1, select bank1
  2444  044A  1303               	bcf	3,6	;RP1=0, select bank1
  2445  044B  1591               	bsf	17,3	;volatile
  2446  044C                     l223:	
  2447                           ;I2c.c: 94:     while(!BF);
  2448                           
  2449  044C  1C14               	btfss	20,0	;volatile
  2450  044D  2C4F               	goto	u641
  2451  044E  2C50               	goto	u640
  2452  044F                     u641:
  2453  044F  2C4C               	goto	l223
  2454  0450                     u640:
  2455  0450                     l1347:
  2456                           
  2457                           ;I2c.c: 95:     Data = SSPBUF;
  2458  0450  1283               	bcf	3,5	;RP0=0, select bank0
  2459  0451  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0452  0813               	movf	19,w	;volatile
  2461  0453  00F0               	movwf	??_I2C_Read
  2462  0454  0870               	movf	??_I2C_Read,w
  2463  0455  00F2               	movwf	I2C_Read@Data
  2464  0456                     l1349:
  2465                           
  2466                           ;I2c.c: 96:     if(ACK_NACK==0)
  2467  0456  0871               	movf	I2C_Read@ACK_NACK,w
  2468  0457  1D03               	btfss	3,2
  2469  0458  2C5A               	goto	u651
  2470  0459  2C5B               	goto	u650
  2471  045A                     u651:
  2472  045A  2C61               	goto	l1353
  2473  045B                     u650:
  2474  045B                     l1351:
  2475                           
  2476                           ;I2c.c: 97:         I2C_ACK();
  2477  045B  120A  118A  23A9  120A  118A  	fcall	_I2C_ACK
  2478  0460  2C66               	goto	l228
  2479  0461                     l1353:
  2480                           
  2481                           ;I2c.c: 99:         I2C_NACK();
  2482  0461  120A  118A  23B2  120A  118A  	fcall	_I2C_NACK
  2483  0466                     l228:
  2484  0466  1283               	bcf	3,5	;RP0=0, select bank0
  2485  0467  1303               	bcf	3,6	;RP1=0, select bank0
  2486  0468  1D8C               	btfss	12,3	;volatile
  2487  0469  2C6B               	goto	u661
  2488  046A  2C6C               	goto	u660
  2489  046B                     u661:
  2490  046B  2C66               	goto	l228
  2491  046C                     u660:
  2492  046C                     l230:
  2493                           
  2494                           ;I2c.c: 101:     SSPIF=0;
  2495  046C  118C               	bcf	12,3	;volatile
  2496  046D                     l1355:
  2497                           
  2498                           ;I2c.c: 102:     return Data;
  2499  046D  0872               	movf	I2C_Read@Data,w
  2500  046E                     l231:
  2501  046E  0008               	return
  2502  046F                     __end_of_I2C_Read:
  2503                           
  2504                           	psect	text13
  2505  03B2                     __ptext13:	
  2506 ;; *************** function _I2C_NACK *****************
  2507 ;; Defined at:
  2508 ;;		line 62 in file "I2c.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;		None
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		None
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2522 ;;      Params:         0       0       0       0       0
  2523 ;;      Locals:         0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0
  2525 ;;      Totals:         0       0       0       0       0
  2526 ;;Total ram usage:        0 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_I2C_Read
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           
  2536                           ;psect for function _I2C_NACK
  2537  03B2                     _I2C_NACK:
  2538  03B2                     l1269:	
  2539                           ;incstack = 0
  2540                           ; Regs used in _I2C_NACK: []
  2541                           
  2542                           
  2543                           ;I2c.c: 64:  ACKDT = 1;
  2544  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  2545  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  2546  03B4  1691               	bsf	17,5	;volatile
  2547                           
  2548                           ;I2c.c: 65:  ACKEN = 1;
  2549  03B5  1611               	bsf	17,4	;volatile
  2550  03B6                     l205:	
  2551                           ;I2c.c: 66:     while(ACKEN);
  2552                           
  2553  03B6  1A11               	btfsc	17,4	;volatile
  2554  03B7  2BB9               	goto	u491
  2555  03B8  2BBA               	goto	u490
  2556  03B9                     u491:
  2557  03B9  2BB6               	goto	l205
  2558  03BA                     u490:
  2559  03BA                     l208:
  2560  03BA  0008               	return
  2561  03BB                     __end_of_I2C_NACK:
  2562                           
  2563                           	psect	text14
  2564  03A9                     __ptext14:	
  2565 ;; *************** function _I2C_ACK *****************
  2566 ;; Defined at:
  2567 ;;		line 55 in file "I2c.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;		None
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;		None
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  1    wreg      void 
  2574 ;; Registers used:
  2575 ;;		None
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2581 ;;      Params:         0       0       0       0       0
  2582 ;;      Locals:         0       0       0       0       0
  2583 ;;      Temps:          0       0       0       0       0
  2584 ;;      Totals:         0       0       0       0       0
  2585 ;;Total ram usage:        0 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; This function calls:
  2588 ;;		Nothing
  2589 ;; This function is called by:
  2590 ;;		_I2C_Read
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           
  2595                           ;psect for function _I2C_ACK
  2596  03A9                     _I2C_ACK:
  2597  03A9                     l1267:	
  2598                           ;incstack = 0
  2599                           ; Regs used in _I2C_ACK: []
  2600                           
  2601                           
  2602                           ;I2c.c: 57:  ACKDT = 0;
  2603  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  2604  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  2605  03AB  1291               	bcf	17,5	;volatile
  2606                           
  2607                           ;I2c.c: 58:     ACKEN = 1;
  2608  03AC  1611               	bsf	17,4	;volatile
  2609  03AD                     l199:	
  2610                           ;I2c.c: 59:     while(ACKEN);
  2611                           
  2612  03AD  1A11               	btfsc	17,4	;volatile
  2613  03AE  2BB0               	goto	u481
  2614  03AF  2BB1               	goto	u480
  2615  03B0                     u481:
  2616  03B0  2BAD               	goto	l199
  2617  03B1                     u480:
  2618  03B1                     l202:
  2619  03B1  0008               	return
  2620  03B2                     __end_of_I2C_ACK:
  2621                           
  2622                           	psect	text15
  2623  05B0                     __ptext15:	
  2624 ;; *************** function _MPU6050_Init *****************
  2625 ;; Defined at:
  2626 ;;		line 19 in file "MPU.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, status,2, status,0, pclath, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2640 ;;      Params:         0       0       0       0       0
  2641 ;;      Locals:         0       0       0       0       0
  2642 ;;      Temps:          3       0       0       0       0
  2643 ;;      Totals:         3       0       0       0       0
  2644 ;;Total ram usage:        3 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    3
  2647 ;; This function calls:
  2648 ;;		_I2C_Master_Init
  2649 ;;		_I2C_Master_Stop
  2650 ;;		_I2C_Master_Write
  2651 ;;		_I2C_Start
  2652 ;; This function is called by:
  2653 ;;		_main
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           
  2658                           ;psect for function _MPU6050_Init
  2659  05B0                     _MPU6050_Init:
  2660  05B0                     l1489:	
  2661                           ;incstack = 0
  2662                           ; Regs used in _MPU6050_Init: [wreg+status,2+status,0+pclath+cstack]
  2663                           
  2664                           
  2665                           ;MPU.c: 22:   _delay((unsigned long)((100)*(8000000/4000.0)));
  2666  05B0  3002               	movlw	2
  2667  05B1  00F4               	movwf	??_MPU6050_Init+2
  2668  05B2  3004               	movlw	4
  2669  05B3  00F3               	movwf	??_MPU6050_Init+1
  2670  05B4  30BA               	movlw	186
  2671  05B5  00F2               	movwf	??_MPU6050_Init
  2672  05B6                     u887:
  2673  05B6  0BF2               	decfsz	??_MPU6050_Init,f
  2674  05B7  2DB6               	goto	u887
  2675  05B8  0BF3               	decfsz	??_MPU6050_Init+1,f
  2676  05B9  2DB6               	goto	u887
  2677  05BA  0BF4               	decfsz	??_MPU6050_Init+2,f
  2678  05BB  2DB6               	goto	u887
  2679  05BC  0000               	nop
  2680  05BD                     l1491:
  2681                           
  2682                           ;MPU.c: 23:   I2C_Master_Init();
  2683  05BD  120A  118A  23C7  120A  118A  	fcall	_I2C_Master_Init
  2684  05C2                     l1493:
  2685                           
  2686                           ;MPU.c: 27:   I2C_Start(0xD0);
  2687  05C2  30D0               	movlw	208
  2688  05C3  120A  118A  23F1  120A  118A  	fcall	_I2C_Start
  2689  05C8                     l1495:
  2690                           
  2691                           ;MPU.c: 28:   I2C_Master_Write(0x19);
  2692  05C8  3019               	movlw	25
  2693  05C9  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Write
  2694  05CE                     l1497:
  2695                           
  2696                           ;MPU.c: 29:   I2C_Master_Write(0x07);
  2697  05CE  3007               	movlw	7
  2698  05CF  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Write
  2699  05D4                     l1499:
  2700                           
  2701                           ;MPU.c: 30:   I2C_Master_Stop();
  2702  05D4  120A  118A  23A0  120A  118A  	fcall	_I2C_Master_Stop
  2703  05D9                     l1501:
  2704                           
  2705                           ;MPU.c: 34:   I2C_Start(0xD0);
  2706  05D9  30D0               	movlw	208
  2707  05DA  120A  118A  23F1  120A  118A  	fcall	_I2C_Start
  2708  05DF                     l1503:
  2709                           
  2710                           ;MPU.c: 35:   I2C_Master_Write(0x6B);
  2711  05DF  306B               	movlw	107
  2712  05E0  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Write
  2713  05E5                     l1505:
  2714                           
  2715                           ;MPU.c: 36:   I2C_Master_Write(0x01);
  2716  05E5  3001               	movlw	1
  2717  05E6  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Write
  2718  05EB                     l1507:
  2719                           
  2720                           ;MPU.c: 37:   I2C_Master_Stop();
  2721  05EB  120A  118A  23A0  120A  118A  	fcall	_I2C_Master_Stop
  2722  05F0                     l1509:
  2723                           
  2724                           ;MPU.c: 41:   I2C_Start(0xD0);
  2725  05F0  30D0               	movlw	208
  2726  05F1  120A  118A  23F1  120A  118A  	fcall	_I2C_Start
  2727  05F6                     l1511:
  2728                           
  2729                           ;MPU.c: 42:   I2C_Master_Write(0x1A);
  2730  05F6  301A               	movlw	26
  2731  05F7  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Write
  2732  05FC                     l1513:
  2733                           
  2734                           ;MPU.c: 43:   I2C_Master_Write(0x04);
  2735  05FC  3004               	movlw	4
  2736  05FD  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Write
  2737  0602                     l1515:
  2738                           
  2739                           ;MPU.c: 44:   I2C_Master_Stop();
  2740  0602  120A  118A  23A0  120A  118A  	fcall	_I2C_Master_Stop
  2741  0607                     l1517:
  2742                           
  2743                           ;MPU.c: 48:   I2C_Start(0xD0);
  2744  0607  30D0               	movlw	208
  2745  0608  120A  118A  23F1  120A  118A  	fcall	_I2C_Start
  2746  060D                     l1519:
  2747                           
  2748                           ;MPU.c: 49:   I2C_Master_Write(0x1C);
  2749  060D  301C               	movlw	28
  2750  060E  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Write
  2751  0613                     l1521:
  2752                           
  2753                           ;MPU.c: 50:   I2C_Master_Write(0x00);
  2754  0613  3000               	movlw	0
  2755  0614  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Write
  2756  0619                     l1523:
  2757                           
  2758                           ;MPU.c: 51:   I2C_Master_Stop();
  2759  0619  120A  118A  23A0  120A  118A  	fcall	_I2C_Master_Stop
  2760  061E                     l1525:
  2761                           
  2762                           ;MPU.c: 55:   I2C_Start(0xD0);
  2763  061E  30D0               	movlw	208
  2764  061F  120A  118A  23F1  120A  118A  	fcall	_I2C_Start
  2765  0624                     l1527:
  2766                           
  2767                           ;MPU.c: 56:   I2C_Master_Write(0x1B);
  2768  0624  301B               	movlw	27
  2769  0625  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Write
  2770  062A                     l1529:
  2771                           
  2772                           ;MPU.c: 57:   I2C_Master_Write(0x18);
  2773  062A  3018               	movlw	24
  2774  062B  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Write
  2775  0630                     l1531:
  2776                           
  2777                           ;MPU.c: 58:   I2C_Master_Stop();
  2778  0630  120A  118A  23A0  120A  118A  	fcall	_I2C_Master_Stop
  2779  0635                     l1533:
  2780                           
  2781                           ;MPU.c: 62:   I2C_Start(0xD0);
  2782  0635  30D0               	movlw	208
  2783  0636  120A  118A  23F1  120A  118A  	fcall	_I2C_Start
  2784  063B                     l1535:
  2785                           
  2786                           ;MPU.c: 63:   I2C_Master_Write(0x38);
  2787  063B  3038               	movlw	56
  2788  063C  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Write
  2789  0641                     l1537:
  2790                           
  2791                           ;MPU.c: 64:   I2C_Master_Write(0x01);
  2792  0641  3001               	movlw	1
  2793  0642  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Write
  2794  0647                     l1539:
  2795                           
  2796                           ;MPU.c: 65:   I2C_Master_Stop();
  2797  0647  120A  118A  23A0  120A  118A  	fcall	_I2C_Master_Stop
  2798  064C                     l138:
  2799  064C  0008               	return
  2800  064D                     __end_of_MPU6050_Init:
  2801                           
  2802                           	psect	text16
  2803  03F1                     __ptext16:	
  2804 ;; *************** function _I2C_Start *****************
  2805 ;; Defined at:
  2806 ;;		line 36 in file "I2c.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  add             1    wreg     unsigned char 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;  add             1    1[COMMON] unsigned char 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0, pclath, cstack
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2820 ;;      Params:         0       0       0       0       0
  2821 ;;      Locals:         1       0       0       0       0
  2822 ;;      Temps:          0       0       0       0       0
  2823 ;;      Totals:         1       0       0       0       0
  2824 ;;Total ram usage:        1 bytes
  2825 ;; Hardware stack levels used:    1
  2826 ;; Hardware stack levels required when called:    2
  2827 ;; This function calls:
  2828 ;;		_I2C_Master_Wait
  2829 ;;		_I2C_Master_Write
  2830 ;; This function is called by:
  2831 ;;		_MPU6050_Init
  2832 ;;		_MPU6050_Read
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           
  2837                           ;psect for function _I2C_Start
  2838  03F1                     _I2C_Start:
  2839                           
  2840                           ;incstack = 0
  2841                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2842                           ;I2C_Start@add stored from wreg
  2843  03F1  00F1               	movwf	I2C_Start@add
  2844  03F2                     l1337:
  2845                           
  2846                           ;I2c.c: 36: void I2C_Start(char add);I2c.c: 37: {;I2c.c: 38:     I2C_Master_Wait();
  2847  03F2  120A  118A  23D4  120A  118A  	fcall	_I2C_Master_Wait
  2848  03F7                     l1339:
  2849                           
  2850                           ;I2c.c: 39:     SEN = 1;
  2851  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  2852  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  2853  03F9  1411               	bsf	17,0	;volatile
  2854                           
  2855                           ;I2c.c: 40:     I2C_Master_Write(add);
  2856  03FA  0871               	movf	I2C_Start@add,w
  2857  03FB  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Write
  2858  0400                     l190:
  2859  0400  0008               	return
  2860  0401                     __end_of_I2C_Start:
  2861                           
  2862                           	psect	text17
  2863  03E1                     __ptext17:	
  2864 ;; *************** function _I2C_Master_Write *****************
  2865 ;; Defined at:
  2866 ;;		line 69 in file "I2c.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  data            1    wreg     unsigned char 
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;  data            1    0[COMMON] unsigned char 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      unsigned char 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2, status,0, pclath, cstack
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2880 ;;      Params:         0       0       0       0       0
  2881 ;;      Locals:         1       0       0       0       0
  2882 ;;      Temps:          0       0       0       0       0
  2883 ;;      Totals:         1       0       0       0       0
  2884 ;;Total ram usage:        1 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:    1
  2887 ;; This function calls:
  2888 ;;		_I2C_Master_Wait
  2889 ;; This function is called by:
  2890 ;;		_MPU6050_Init
  2891 ;;		_MPU6050_Read
  2892 ;;		_I2C_Start
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           
  2897                           ;psect for function _I2C_Master_Write
  2898  03E1                     _I2C_Master_Write:
  2899                           
  2900                           ;incstack = 0
  2901                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2902                           ;I2C_Master_Write@data stored from wreg
  2903  03E1  00F0               	movwf	I2C_Master_Write@data
  2904  03E2                     l1263:
  2905                           
  2906                           ;I2c.c: 69: unsigned char I2C_Master_Write(unsigned char data);I2c.c: 70: {;I2c.c: 71:  
      +                             I2C_Master_Wait();
  2907  03E2  120A  118A  23D4  120A  118A  	fcall	_I2C_Master_Wait
  2908  03E7                     l1265:
  2909                           
  2910                           ;I2c.c: 72:     SSPBUF = data;
  2911  03E7  0870               	movf	I2C_Master_Write@data,w
  2912  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  2913  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  2914  03EA  0093               	movwf	19	;volatile
  2915  03EB                     l211:	
  2916                           ;I2c.c: 73:     while(!SSPIF);
  2917                           
  2918  03EB  1D8C               	btfss	12,3	;volatile
  2919  03EC  2BEE               	goto	u471
  2920  03ED  2BEF               	goto	u470
  2921  03EE                     u471:
  2922  03EE  2BEB               	goto	l211
  2923  03EF                     u470:
  2924  03EF                     l213:
  2925                           
  2926                           ;I2c.c: 74:  SSPIF = 0;
  2927  03EF  118C               	bcf	12,3	;volatile
  2928  03F0                     l214:	
  2929                           ;I2c.c: 75:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  2930                           
  2931  03F0  0008               	return
  2932  03F1                     __end_of_I2C_Master_Write:
  2933                           
  2934                           	psect	text18
  2935  03A0                     __ptext18:	
  2936 ;; *************** function _I2C_Master_Stop *****************
  2937 ;; Defined at:
  2938 ;;		line 49 in file "I2c.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;		None
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;		None
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      void 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0, pclath, cstack
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2952 ;;      Params:         0       0       0       0       0
  2953 ;;      Locals:         0       0       0       0       0
  2954 ;;      Temps:          0       0       0       0       0
  2955 ;;      Totals:         0       0       0       0       0
  2956 ;;Total ram usage:        0 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    1
  2959 ;; This function calls:
  2960 ;;		_I2C_Master_Wait
  2961 ;; This function is called by:
  2962 ;;		_MPU6050_Init
  2963 ;;		_MPU6050_Read
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           
  2968                           ;psect for function _I2C_Master_Stop
  2969  03A0                     _I2C_Master_Stop:
  2970  03A0                     l1341:	
  2971                           ;incstack = 0
  2972                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2973                           
  2974                           
  2975                           ;I2c.c: 51:     I2C_Master_Wait();
  2976  03A0  120A  118A  23D4  120A  118A  	fcall	_I2C_Master_Wait
  2977  03A5                     l1343:
  2978                           
  2979                           ;I2c.c: 52:     PEN = 1;
  2980  03A5  1683               	bsf	3,5	;RP0=1, select bank1
  2981  03A6  1303               	bcf	3,6	;RP1=0, select bank1
  2982  03A7  1511               	bsf	17,2	;volatile
  2983  03A8                     l196:
  2984  03A8  0008               	return
  2985  03A9                     __end_of_I2C_Master_Stop:
  2986                           
  2987                           	psect	text19
  2988  03D4                     __ptext19:	
  2989 ;; *************** function _I2C_Master_Wait *****************
  2990 ;; Defined at:
  2991 ;;		line 25 in file "I2c.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3005 ;;      Params:         0       0       0       0       0
  3006 ;;      Locals:         0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0
  3008 ;;      Totals:         0       0       0       0       0
  3009 ;;Total ram usage:        0 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_I2C_Start
  3015 ;;		_I2C_Master_Stop
  3016 ;;		_I2C_Master_Write
  3017 ;;		_I2C_Master_Start
  3018 ;;		_I2C_Master_RepeatedStart
  3019 ;;		_I2C_Read_Byte
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           
  3024                           ;psect for function _I2C_Master_Wait
  3025  03D4                     _I2C_Master_Wait:
  3026  03D4                     l1255:	
  3027                           ;incstack = 0
  3028                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3029                           
  3030  03D4                     l181:	
  3031                           ;I2c.c: 27:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3032                           
  3033  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  3034  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  3035  03D6  1914               	btfsc	20,2	;volatile
  3036  03D7  2BD9               	goto	u441
  3037  03D8  2BDA               	goto	u440
  3038  03D9                     u441:
  3039  03D9  2BD4               	goto	l181
  3040  03DA                     u440:
  3041  03DA                     l1257:
  3042  03DA  0811               	movf	17,w	;volatile
  3043  03DB  391F               	andlw	31
  3044  03DC  1D03               	btfss	3,2
  3045  03DD  2BDF               	goto	u451
  3046  03DE  2BE0               	goto	u450
  3047  03DF                     u451:
  3048  03DF  2BD4               	goto	l181
  3049  03E0                     u450:
  3050  03E0                     l184:
  3051  03E0  0008               	return
  3052  03E1                     __end_of_I2C_Master_Wait:
  3053                           
  3054                           	psect	text20
  3055  03C7                     __ptext20:	
  3056 ;; *************** function _I2C_Master_Init *****************
  3057 ;; Defined at:
  3058 ;;		line 15 in file "I2c.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;		None
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;		None
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  1    wreg      void 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3072 ;;      Params:         0       0       0       0       0
  3073 ;;      Locals:         0       0       0       0       0
  3074 ;;      Temps:          0       0       0       0       0
  3075 ;;      Totals:         0       0       0       0       0
  3076 ;;Total ram usage:        0 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; This function calls:
  3079 ;;		Nothing
  3080 ;; This function is called by:
  3081 ;;		_MPU6050_Init
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           
  3086                           ;psect for function _I2C_Master_Init
  3087  03C7                     _I2C_Master_Init:
  3088  03C7                     l1327:	
  3089                           ;incstack = 0
  3090                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  3091                           
  3092                           
  3093                           ;I2c.c: 17:   SSPCON = 0x28;
  3094  03C7  3028               	movlw	40
  3095  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  3096  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  3097  03CA  0094               	movwf	20	;volatile
  3098  03CB                     l1329:
  3099                           
  3100                           ;I2c.c: 18:   SSPCON2 = 0x00;
  3101  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  3102  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  3103  03CD  0191               	clrf	17	;volatile
  3104  03CE                     l1331:
  3105                           
  3106                           ;I2c.c: 19:   SSPSTAT = 0x00;
  3107  03CE  0194               	clrf	20	;volatile
  3108                           
  3109                           ;I2c.c: 20:   SSPADD = ((8000000/4)/9600) - 1;
  3110  03CF  30CF               	movlw	207
  3111  03D0  0093               	movwf	19	;volatile
  3112  03D1                     l1333:
  3113                           
  3114                           ;I2c.c: 21:   TRISC3 = 1;
  3115  03D1  1587               	bsf	7,3	;volatile
  3116  03D2                     l1335:
  3117                           
  3118                           ;I2c.c: 22:   TRISC4 = 1;
  3119  03D2  1607               	bsf	7,4	;volatile
  3120  03D3                     l178:
  3121  03D3  0008               	return
  3122  03D4                     __end_of_I2C_Master_Init:
  3123  007E                     btemp	set	126	;btemp
  3124  007E                     wtemp0	set	126
  3125                           
  3126                           	psect	config
  3127                           
  3128                           ;Config register CONFIG1 @ 0x2007
  3129                           ;	Oscillator Selection bits
  3130                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3131                           ;	Watchdog Timer Enable bit
  3132                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3133                           ;	Power-up Timer Enable bit
  3134                           ;	PWRTE = OFF, PWRT disabled
  3135                           ;	RE3/MCLR pin function select bit
  3136                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3137                           ;	Code Protection bit
  3138                           ;	CP = OFF, Program memory code protection is disabled
  3139                           ;	Data Code Protection bit
  3140                           ;	CPD = OFF, Data memory code protection is disabled
  3141                           ;	Brown Out Reset Selection bits
  3142                           ;	BOREN = OFF, BOR disabled
  3143                           ;	Internal External Switchover bit
  3144                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3145                           ;	Fail-Safe Clock Monitor Enabled bit
  3146                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3147                           ;	Low Voltage Programming Enable bit
  3148                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3149                           ;	In-Circuit Debugger Mode bit
  3150                           ;	DEBUG = 0x1, unprogrammed default
  3151  2007                     	org	8199
  3152  2007  2CD4               	dw	11476
  3153                           
  3154                           ;Config register CONFIG2 @ 0x2008
  3155                           ;	Brown-out Reset Selection bit
  3156                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  3157                           ;	Flash Program Memory Self Write Enable bits
  3158                           ;	WRT = OFF, Write protection off
  3159  2008                     	org	8200
  3160  2008  3EFF               	dw	16127

Data Sizes:
    Strings     3
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     75      76
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK0[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Write_String@buf	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK0[40]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART_Write_String->_UART_Write
    _MPU6050_Init->_I2C_Start
    _I2C_Start->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_MPU6050_Read
    _MPU6050_Read->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2266
                                             73 BANK0      2     2      0
                       _MPU6050_Init
                       _MPU6050_Read
                       _UART_TX_Init
                         _USART_Read
                             _setOsc
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setOsc                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read                                        60    60      0    2200
                                             13 BANK0     60    60      0
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                  _UART_Write_String
                            ___awdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _UART_Write_String                                    4     4      0     145
                                              1 COMMON     4     4      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         3     3      0      66
                                              2 COMMON     3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _I2C_Start
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              1 COMMON     1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MPU6050_Init
     _I2C_Master_Init
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _MPU6050_Read
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read
       _I2C_ACK
       _I2C_NACK
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _UART_Write_String
       _UART_Write
     ___awdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _UART_TX_Init
   _USART_Read
   _setOsc
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4B      4C       5       95.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 21:17:38 2021

                         pc 0002          __size_of_I2C_Start 0010                          _BF 04A0  
                        l60 051F                          l61 0521                          l62 0523  
                        l72 0397                          l58 051B                          l59 051D  
                        l69 0426                          l99 0412                ___awdiv@sign 0076  
                        fsr 0004  __size_of_UART_Write_String 0021                         l102 03BC  
                       l111 0447                         l105 03C6                         l202 03B1  
                       l114 0398                         l211 03EB                         l213 03EF  
                       l205 03B6                         l141 0710                         l117 039F  
                       l214 03F0                         l230 046C                         l231 046E  
                       l223 044C                         l208 03BA                         l138 064C  
                       l228 0466                         l181 03D4                         l341 07F8  
                       l190 0400                         l184 03E0                         l178 03D3  
                       l196 03A8                         l199 03AD                         l617 04EC  
                       l627 04A8                         l498 05AF                         _RD2 0042  
                       u500 04B1                         u501 04B0                         u440 03DA  
                       u520 04C3                         u600 0491                         _PEN 048A  
                       u441 03D9                         u521 04C2                         u601 0490  
                       u450 03E0                         u451 03DF                         u515 04B5  
                       u460 03C2                         u540 04D4                         u620 04A4  
                       u700 078A                         u461 03C1                         u541 04D3  
                       u621 04A3                         u605 048D                         u701 0789  
                       u470 03EF                         u630 0447                         u710 0790  
                       u471 03EE                         u631 0446                         u535 04C4  
                       u615 0498                         u711 078F                         u480 03B1  
                       u640 0450                         u800 058D                         u560 04E8  
                       u720 07E2                         u481 03B0                         u641 044F  
                       u801 058C                         u561 04E7                         u545 04D0  
                       u721 07E1                         u490 03BA                         u650 045B  
                       u570 0475                         u730 07F4                         u491 03B9  
                       u651 045A                         u555 04DC                         u571 0474  
                       u731 07F3                         u660 046C                         u820 05A1  
                       u740 054E                         _SEN 0488                         u661 046B  
                       u821 05A0                         u805 0589                         u741 054D  
                       u830 05A6                         u750 0559                         u590 0487  
                       u670 071F                         u831 05A5                         u815 0595  
                       u751 0558                         u591 0486                         u671 071E  
                       u760 056A                         u680 0759                         u840 039E  
                       u761 0569                         u585 0479                         u681 0758  
                       u841 039D                         u690 077F                         u850 0510  
                       u691 077E                         u851 050F                         u780 057C  
                       u781 057B                         u775 056E                         u695 077B  
                       u795 057D                         u877 0541                         u887 05B6  
           __end_of_I2C_ACK 03B2                         fsr0 0004                         indf 0000  
        MPU6050_Read@buffer 0031                        l1301 0478                        l1311 0497  
                      l1303 047F                        l1321 042B                        l1313 049E  
                      l1305 0483                        l1401 079B                        l1331 03CE  
                      l1323 0436                        l1307 0487                        l1315 04A4  
                      l1403 07A0                        l1411 07E2                        l1333 03D1  
                      l1341 03A0                        l1501 05D9                        l1261 03C2  
                      l1325 043C                        l1421 0549                        l1309 0491  
                      l1405 07CE                        l1413 07F4                        l1335 03D2  
                      l1327 03C7                        l1255 03D4                        l1343 03A5  
                      l1263 03E2                        l1511 05F6                        l1503 05DF  
                      l1351 045B                        l1319 0428                        l1431 0559  
                      l1423 054A                        l1271 04A9                        l1407 07D5  
                      l1329 03CB                        l1257 03DA                        l1265 03E7  
                      l1337 03F2                        l1521 0613                        l1513 05FC  
                      l1505 05E5                        l1353 0461                        l1345 0449  
                      l1441 056D                        l1433 055E                        l1425 054E  
                      l1281 04BF                        l1273 04AB                        l1409 07D9  
                      l1361 0719                        l1339 03F7                        l1531 0630  
                      l1523 0619                        l1515 0602                        l1507 05EB  
                      l1267 03A9                        l1355 046D                        l1347 0450  
                      l1259 03BC                        l1451 0593                        l1443 0574  
                      l1435 0562                        l1427 0553                        l1291 04E2  
                      l1283 04C3                        l1275 04B1                        l1371 072C  
                      l1363 071F                        l1533 0635                        l1525 061E  
                      l1517 0607                        l1509 05F0                        l1269 03B2  
                      l1349 0456                        l1461 05AB                        l1453 0594  
                      l1445 0578                        l1437 0564                        l1429 0555  
                      l1285 04D4                        l1277 04B4                        l1293 04E8  
                      l1381 075D                        l1373 0749                        l1365 0726  
                      l1541 0393                        l1535 063B                        l1527 0624  
                      l1519 060D                        l1455 059B                        l1447 057C  
                      l1439 056A                        l1287 04DA                        l1279 04BB  
                      l1383 0762                        l1375 0751                        l1367 072B  
                      l1359 0714                        l1551 065E                        l1543 064D  
                      l1471 0425                        l1537 0641                        l1529 062A  
                      l1449 058D                        l1457 05A1                        l1289 04DB  
                      l1297 046F                        l1393 0780                        l1377 0755  
                      l1561 06A5                        l1553 0664                        l1545 064D  
                      l1481 040A                        l1473 0401                        l1465 0413  
                      l1539 0647                        l1491 05BD                        l1459 05A6  
                      l1299 0475                        l1395 078A                        l1379 0759  
                      l1571 06E5                        l1563 06B1                        l1555 0670  
                      l1547 0653                        l1483 040D                        l1475 0404  
                      l1467 0422                        l1493 05C2                        l1397 0790  
                      l1389 0764                        l1661 073E                        l1573 06FC  
                      l1565 06BD                        l1557 068D                        l1549 0659  
                      l1485 040E                        l1477 0406                        l1469 0424  
                      l1495 05C8                        l1399 0797                        l1575 070A  
                      l1567 06C9                        l1559 0699                        l1487 040F  
                      l1479 0407                        l1591 0510                        l1583 04ED  
                      l1497 05CE                        l1489 05B0                        l1569 06CE  
                      l1577 0398                        l1593 0525                        l1585 0501  
                      l1499 05D4                        l1579 039E                        l1659 052D  
                      l1595 053B                        l1587 0505                        l1589 050A  
                      STR_1 0013                        _BRGH 04C2                        _RCEN 048B  
                      _RCIF 0065                        _SPEN 00C7                        _RSEN 0489  
                      _TRMT 04C1                        _TXEN 04C5                        _SYNC 04C4  
          __end_of_I2C_NACK 03BB                        _main 04ED            __end_of_I2C_Read 046F  
                      btemp 007E                        start 0000            ?_I2C_Master_Init 0070  
          ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070                       ?_main 0070  
                     _ACKEN 048C                       _ACKDT 048D             __end_of___awdiv 05B0  
                     _ANSEL 0188             ___awdiv@divisor 0070             __end_of___lwdiv 04ED  
           __end_of___lwmod 04A9             ___awdiv@counter 0075                       _RCREG 001A  
                     _SPBRG 0099                       _PORTA 0005                       _PORTB 0006  
                     _PORTC 0007                       _PORTD 0008                       _PORTE 0009  
                     _TRISA 0085                       _TRISB 0086                       _TRISC 0087  
                     _TRISD 0088                       _TRISE 0089                       _SSPIF 0063  
                     _TXREG 0019                 ?_UART_Write 0070               ?_MPU6050_Init 0070  
             ?_MPU6050_Read 0070             __end_of_dpowers 0013                       _setup 0413  
         __end_of_I2C_Start 0401                       pclath 000A                       status 0003  
                     wtemp0 007E             __end_of_sprintf 07F9              MPU6050_Read@AY 0065  
            MPU6050_Read@Ay 0067                 ?_USART_Read 0070             __initialization 07F9  
              __end_of_main 0549                   ??_I2C_ACK 0070                      ??_main 0069  
         ?_I2C_Master_Write 0070              ??_MPU6050_Init 0072              ??_MPU6050_Read 002D  
        ??_I2C_Master_Write 0070            ___awdiv@dividend 0072                      ?_setup 0070  
                    _ANSELH 0189                      _SSPADD 0093                      _TRISC3 043B  
                    _TRISC4 043C                      _TRISC6 043E                      _TRISC7 043F  
                    _SSPCON 0014                      _SSPBUF 0013            I2C_Read@ACK_NACK 0071  
       __size_of_UART_Write 000C                   ??___awdiv 0074                   ??___lwdiv 0074  
                 ??___lwmod 007C            ___awdiv@quotient 0077                      _setOsc 0393  
                 ?_I2C_NACK 0070                   ?_I2C_Read 0070         __size_of_USART_Read 0008  
                 ??_sprintf 0023     __end_of__initialization 07FC              __pcstackCOMMON 0070  
             __end_of_setup 0427                  ??_I2C_NACK 0070                  ??_I2C_Read 0070  
                   ??_setup 0070                  __pbssBANK0 006B                I2C_Read@Data 0072  
                __pmaintext 04ED        __end_of_MPU6050_Init 064D        __end_of_MPU6050_Read 0711  
                   _I2C_ACK 03A9                     _ACKSTAT 048E                     ?_setOsc 0070  
              ??_UART_Write 0070                     _SSPCON2 0091                     _SSPSTAT 0094  
             ?_UART_TX_Init 0070                  __stringtab 0003                I2C_Start@add 0071  
                 _I2C_Start 03F1                ??_USART_Read 0070                     ___awdiv 0549  
        __end_of_UART_Write 03C7                     ___lwdiv 04A9                     ___lwmod 046F  
           __size_of_setOsc 0005                     __ptext1 0413                     __ptext2 0393  
                   __ptext3 0398                     __ptext4 0401                     __ptext5 064D  
                   __ptext6 0711                     __ptext7 046F                     __ptext8 04A9  
                   __ptext9 0549                     _dpowers 0009    __size_of_I2C_Master_Init 000D  
  __size_of_I2C_Master_Wait 000D    __size_of_I2C_Master_Stop 0009          __end_of_USART_Read 03A0  
            ??_UART_TX_Init 0070                     _sprintf 0711        end_of_initialization 07FC  
                ?_I2C_Start 0070   __size_of_I2C_Master_Write 0010                   _RCSTAbits 0018  
                 _PORTCbits 0007                   _PORTDbits 0008              UART_Write@data 0070  
         __size_of_I2C_NACK 0009           __size_of_I2C_Read 0027       __size_of_MPU6050_Init 009D  
     __size_of_MPU6050_Read 00C4              __end_of_setOsc 0398         start_initialization 07F9  
              _MPU6050_Init 05B0                _MPU6050_Read 064D           ??_I2C_Master_Init 0070  
         ??_I2C_Master_Wait 0070           ??_I2C_Master_Stop 0070                 ??_I2C_Start 0071  
      __end_of_UART_TX_Init 0413                    ?_I2C_ACK 0070                    ??_setOsc 0070  
                 ___latbits 0002               __pcstackBANK0 0020                 sprintf@flag 0027  
               sprintf@prec 0028            _I2C_Master_Write 03E1            ___lwdiv@dividend 0072  
                  ?___awdiv 0070                    ?___lwdiv 0070                    ?___lwmod 0078  
      I2C_Master_Write@data 0070                   __pstrings 0003                    _I2C_NACK 03B2  
                  _I2C_Read 0448            ___lwdiv@quotient 0075                    ?_sprintf 0020  
            __size_of_setup 0014            __size_of_I2C_ACK 0009        UART_Write_String@buf 0074  
               __stringbase 0008       __size_of_UART_TX_Init 0012            __size_of___awdiv 0067  
          __size_of___lwdiv 0044            __size_of___lwmod 003A          __end_of__stringtab 0009  
         _UART_Write_String 0427                  sprintf@val 0029             _I2C_Master_Init 03C7  
           _I2C_Master_Wait 03D4             _I2C_Master_Stop 03A0          ?_UART_Write_String 0070  
           ___lwdiv@divisor 0070             ___lwdiv@counter 0077                    __ptext10 0427  
                  __ptext11 03BB                    __ptext20 03C7                    __ptext12 0448  
                  __ptext13 03B2                    __ptext14 03A9                    __ptext15 05B0  
                  __ptext16 03F1                    __ptext17 03E1                    __ptext18 03A0  
                  __ptext19 03D4            __size_of_sprintf 00E8                _UART_TX_Init 0401  
       ??_UART_Write_String 0071               __size_of_main 005C                    _recibido 006B  
 __end_of_UART_Write_String 0448    __end_of_I2C_Master_Write 03F1                   sprintf@ap 0026  
                 sprintf@sp 002B            ___lwmod@dividend 007A                   stringcode 0003  
                _OSCCONbits 008F          UART_Write_String@i 0072     __end_of_I2C_Master_Init 03D4  
   __end_of_I2C_Master_Wait 03E1     __end_of_I2C_Master_Stop 03A9                    sprintf@c 002C  
                  sprintf@f 0020             ___lwmod@divisor 0078             ___lwmod@counter 007D  
                  stringdir 0003                    stringtab 0003                  _UART_Write 03BB  
                _USART_Read 0398  
