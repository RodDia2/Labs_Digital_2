

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 09:50:22 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F887 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  0105                     	;# 
   132  0107                     	;# 
   133  0108                     	;# 
   134  0109                     	;# 
   135  010C                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  0185                     	;# 
   141  0187                     	;# 
   142  0188                     	;# 
   143  0189                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  008F                     	;# 
   191  0090                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0095                     	;# 
   199  0096                     	;# 
   200  0097                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  0105                     	;# 
   210  0107                     	;# 
   211  0108                     	;# 
   212  0109                     	;# 
   213  010C                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010F                     	;# 
   218  0185                     	;# 
   219  0187                     	;# 
   220  0188                     	;# 
   221  0189                     	;# 
   222  018C                     	;# 
   223  018D                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001D                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  0081                     	;# 
   260  0085                     	;# 
   261  0086                     	;# 
   262  0087                     	;# 
   263  0088                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0107                     	;# 
   289  0108                     	;# 
   290  0109                     	;# 
   291  010C                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0185                     	;# 
   297  0187                     	;# 
   298  0188                     	;# 
   299  0189                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0008                     	;# 
   311  0009                     	;# 
   312  000A                     	;# 
   313  000B                     	;# 
   314  000C                     	;# 
   315  000D                     	;# 
   316  000E                     	;# 
   317  000E                     	;# 
   318  000F                     	;# 
   319  0010                     	;# 
   320  0011                     	;# 
   321  0012                     	;# 
   322  0013                     	;# 
   323  0014                     	;# 
   324  0015                     	;# 
   325  0015                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001B                     	;# 
   333  001C                     	;# 
   334  001D                     	;# 
   335  001E                     	;# 
   336  001F                     	;# 
   337  0081                     	;# 
   338  0085                     	;# 
   339  0086                     	;# 
   340  0087                     	;# 
   341  0088                     	;# 
   342  0089                     	;# 
   343  008C                     	;# 
   344  008D                     	;# 
   345  008E                     	;# 
   346  008F                     	;# 
   347  0090                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0094                     	;# 
   354  0095                     	;# 
   355  0096                     	;# 
   356  0097                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  0105                     	;# 
   366  0107                     	;# 
   367  0108                     	;# 
   368  0109                     	;# 
   369  010C                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  010F                     	;# 
   374  0185                     	;# 
   375  0187                     	;# 
   376  0188                     	;# 
   377  0189                     	;# 
   378  018C                     	;# 
   379  018D                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  000D                     	;# 
   394  000E                     	;# 
   395  000E                     	;# 
   396  000F                     	;# 
   397  0010                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0014                     	;# 
   402  0015                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  001D                     	;# 
   413  001E                     	;# 
   414  001F                     	;# 
   415  0081                     	;# 
   416  0085                     	;# 
   417  0086                     	;# 
   418  0087                     	;# 
   419  0088                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  008F                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0105                     	;# 
   444  0107                     	;# 
   445  0108                     	;# 
   446  0109                     	;# 
   447  010C                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  0185                     	;# 
   453  0187                     	;# 
   454  0188                     	;# 
   455  0189                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458                           
   459                           	psect	strings
   460  0003                     __pstrings:
   461  0003                     stringtab:
   462  0003                     __stringtab:
   463  0003                     stringcode:	
   464                           ;	String table - string pointers are 1 byte each
   465                           
   466  0003                     stringdir:
   467  0003  3000               	movlw	high stringdir
   468  0004  008A               	movwf	10
   469  0005  0804               	movf	4,w
   470  0006  0A84               	incf	4,f
   471  0007  0782               	addwf	2,f
   472  0008                     __stringbase:
   473  0008  3400               	retlw	0
   474  0009                     __end_of__stringtab:
   475  0009                     _dpowers:
   476  0009  3401               	retlw	1
   477  000A  3400               	retlw	0
   478  000B  340A               	retlw	10
   479  000C  3400               	retlw	0
   480  000D  3464               	retlw	100
   481  000E  3400               	retlw	0
   482  000F  34E8               	retlw	232
   483  0010  3403               	retlw	3
   484  0011  3410               	retlw	16
   485  0012  3427               	retlw	39
   486  0013                     __end_of_dpowers:
   487  0013                     _SSPBUF	set	19
   488  0014                     _SSPCON	set	20
   489  0019                     _TXREG	set	25
   490  0009                     _PORTE	set	9
   491  0008                     _PORTD	set	8
   492  0007                     _PORTC	set	7
   493  0006                     _PORTB	set	6
   494  0005                     _PORTA	set	5
   495  0063                     _SSPIF	set	99
   496  00C7                     _SPEN	set	199
   497  0042                     _RD2	set	66
   498  0093                     _SSPADD	set	147
   499  0094                     _SSPSTAT	set	148
   500  0091                     _SSPCON2	set	145
   501  0099                     _SPBRG	set	153
   502  008F                     _OSCCONbits	set	143
   503  0089                     _TRISE	set	137
   504  0088                     _TRISD	set	136
   505  0087                     _TRISC	set	135
   506  0086                     _TRISB	set	134
   507  0085                     _TRISA	set	133
   508  04A0                     _BF	set	1184
   509  048B                     _RCEN	set	1163
   510  048E                     _ACKSTAT	set	1166
   511  048C                     _ACKEN	set	1164
   512  048D                     _ACKDT	set	1165
   513  048A                     _PEN	set	1162
   514  0489                     _RSEN	set	1161
   515  0488                     _SEN	set	1160
   516  043C                     _TRISC4	set	1084
   517  043B                     _TRISC3	set	1083
   518  04C1                     _TRMT	set	1217
   519  04C5                     _TXEN	set	1221
   520  043F                     _TRISC7	set	1087
   521  043E                     _TRISC6	set	1086
   522  04C4                     _SYNC	set	1220
   523  04C2                     _BRGH	set	1218
   524  0189                     _ANSELH	set	393
   525  0188                     _ANSEL	set	392
   526  0013                     STR_1:
   527  0013  3420               	retlw	32	;' '
   528  0014  3441               	retlw	65	;'A'
   529  0015  3479               	retlw	121	;'y'
   530  0016  3420               	retlw	32	;' '
   531  0017  343D               	retlw	61	;'='
   532  0018  3420               	retlw	32	;' '
   533  0019  3425               	retlw	37	;'%'
   534  001A  3464               	retlw	100	;'d'
   535  001B  3420               	retlw	32	;' '
   536  001C  3420               	retlw	32	;' '
   537  001D  3420               	retlw	32	;' '
   538  001E  3420               	retlw	32	;' '
   539  001F  3400               	retlw	0
   540                           
   541                           	psect	cinit
   542  07FC                     start_initialization:	
   543                           ; #config settings
   544                           
   545  07FC                     __initialization:
   546  07FC                     end_of_initialization:	
   547                           ;End of C runtime variable initialization code
   548                           
   549  07FC                     __end_of__initialization:
   550  07FC  0183               	clrf	3
   551  07FD  120A  118A  29ED   	ljmp	_main	;jump to C main() function
   552                           
   553                           	psect	cstackBANK1
   554  00A0                     __pcstackBANK1:
   555  00A0                     MPU6050_Read@buffer:
   556                           
   557                           ; 40 bytes @ 0x0
   558  00A0                     	ds	56
   559  00D8                     MPU6050_Read@Ay:
   560                           
   561                           ; 2 bytes @ 0x38
   562  00D8                     	ds	2
   563                           
   564                           	psect	cstackCOMMON
   565  0070                     __pcstackCOMMON:
   566  0070                     ?_setup:
   567  0070                     ??_setup:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_UART_TX_Init:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ??_UART_TX_Init:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_MPU6050_Init:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_setOsc:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ??_setOsc:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_MPU6050_Read:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_I2C_Master_Init:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ??_I2C_Master_Init:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_I2C_Start:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_I2C_Master_Write:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ??_I2C_Master_Write:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_I2C_Master_Stop:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ??_I2C_Master_Stop:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_I2C_Read:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ??_I2C_Read:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_main:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_UART_Write:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ??_UART_Write:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_UART_Write_String:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_I2C_Master_Wait:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ??_I2C_Master_Wait:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_I2C_ACK:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ??_I2C_ACK:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_I2C_NACK:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ??_I2C_NACK:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?___awdiv:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?___lwdiv:	
   649                           ; 2 bytes @ 0x0
   650                           
   651  0070                     ?___xxtofl:	
   652                           ; 2 bytes @ 0x0
   653                           
   654  0070                     UART_Write@data:	
   655                           ; 4 bytes @ 0x0
   656                           
   657  0070                     I2C_Master_Write@data:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ___awdiv@divisor:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ___lwdiv@divisor:	
   664                           ; 2 bytes @ 0x0
   665                           
   666  0070                     ___xxtofl@val:	
   667                           ; 2 bytes @ 0x0
   668                           
   669                           
   670                           ; 4 bytes @ 0x0
   671  0070                     	ds	1
   672  0071                     ??_I2C_Start:
   673  0071                     ??_UART_Write_String:	
   674                           ; 1 bytes @ 0x1
   675                           
   676  0071                     I2C_Start@add:	
   677                           ; 1 bytes @ 0x1
   678                           
   679  0071                     I2C_Read@ACK_NACK:	
   680                           ; 1 bytes @ 0x1
   681                           
   682                           
   683                           ; 1 bytes @ 0x1
   684  0071                     	ds	1
   685  0072                     ??_MPU6050_Init:
   686  0072                     I2C_Read@Data:	
   687                           ; 1 bytes @ 0x2
   688                           
   689  0072                     UART_Write_String@i:	
   690                           ; 1 bytes @ 0x2
   691                           
   692  0072                     ___awdiv@dividend:	
   693                           ; 2 bytes @ 0x2
   694                           
   695  0072                     ___lwdiv@dividend:	
   696                           ; 2 bytes @ 0x2
   697                           
   698                           
   699                           ; 2 bytes @ 0x2
   700  0072                     	ds	2
   701  0074                     ??___awdiv:
   702  0074                     ??___lwdiv:	
   703                           ; 1 bytes @ 0x4
   704                           
   705  0074                     ??___xxtofl:	
   706                           ; 1 bytes @ 0x4
   707                           
   708  0074                     UART_Write_String@buf:	
   709                           ; 1 bytes @ 0x4
   710                           
   711                           
   712                           ; 1 bytes @ 0x4
   713  0074                     	ds	1
   714  0075                     ___awdiv@counter:
   715  0075                     ___lwdiv@quotient:	
   716                           ; 1 bytes @ 0x5
   717                           
   718                           
   719                           ; 2 bytes @ 0x5
   720  0075                     	ds	1
   721  0076                     ___awdiv@sign:
   722                           
   723                           ; 1 bytes @ 0x6
   724  0076                     	ds	1
   725  0077                     ___lwdiv@counter:
   726  0077                     ___awdiv@quotient:	
   727                           ; 1 bytes @ 0x7
   728                           
   729                           
   730                           ; 2 bytes @ 0x7
   731  0077                     	ds	1
   732  0078                     ?___lwmod:
   733  0078                     ___xxtofl@sign:	
   734                           ; 2 bytes @ 0x8
   735                           
   736  0078                     ___lwmod@divisor:	
   737                           ; 1 bytes @ 0x8
   738                           
   739                           
   740                           ; 2 bytes @ 0x8
   741  0078                     	ds	1
   742  0079                     ___xxtofl@exp:
   743                           
   744                           ; 1 bytes @ 0x9
   745  0079                     	ds	1
   746  007A                     ___lwmod@dividend:
   747  007A                     ___xxtofl@arg:	
   748                           ; 2 bytes @ 0xA
   749                           
   750                           
   751                           ; 4 bytes @ 0xA
   752  007A                     	ds	2
   753  007C                     ??___lwmod:
   754                           
   755                           ; 1 bytes @ 0xC
   756  007C                     	ds	1
   757  007D                     ___lwmod@counter:
   758                           
   759                           ; 1 bytes @ 0xD
   760  007D                     	ds	1
   761                           
   762                           	psect	cstackBANK0
   763  0020                     __pcstackBANK0:
   764  0020                     ?_sprintf:
   765  0020                     ?___fldiv:	
   766                           ; 2 bytes @ 0x0
   767                           
   768  0020                     sprintf@f:	
   769                           ; 4 bytes @ 0x0
   770                           
   771  0020                     ___fldiv@a:	
   772                           ; 1 bytes @ 0x0
   773                           
   774                           
   775                           ; 4 bytes @ 0x0
   776  0020                     	ds	3
   777  0023                     ??_sprintf:
   778                           
   779                           ; 1 bytes @ 0x3
   780  0023                     	ds	1
   781  0024                     ___fldiv@b:
   782                           
   783                           ; 4 bytes @ 0x4
   784  0024                     	ds	2
   785  0026                     sprintf@ap:
   786                           
   787                           ; 1 bytes @ 0x6
   788  0026                     	ds	1
   789  0027                     sprintf@flag:
   790                           
   791                           ; 1 bytes @ 0x7
   792  0027                     	ds	1
   793  0028                     ??___fldiv:
   794  0028                     sprintf@prec:	
   795                           ; 1 bytes @ 0x8
   796                           
   797                           
   798                           ; 1 bytes @ 0x8
   799  0028                     	ds	1
   800  0029                     sprintf@val:
   801                           
   802                           ; 2 bytes @ 0x9
   803  0029                     	ds	2
   804  002B                     sprintf@sp:
   805                           
   806                           ; 1 bytes @ 0xB
   807  002B                     	ds	1
   808  002C                     sprintf@c:
   809                           
   810                           ; 1 bytes @ 0xC
   811  002C                     	ds	1
   812  002D                     ___fldiv@rem:
   813                           
   814                           ; 4 bytes @ 0xD
   815  002D                     	ds	4
   816  0031                     ___fldiv@sign:
   817                           
   818                           ; 1 bytes @ 0x11
   819  0031                     	ds	1
   820  0032                     ___fldiv@new_exp:
   821                           
   822                           ; 2 bytes @ 0x12
   823  0032                     	ds	2
   824  0034                     ___fldiv@grs:
   825                           
   826                           ; 4 bytes @ 0x14
   827  0034                     	ds	4
   828  0038                     ___fldiv@bexp:
   829                           
   830                           ; 1 bytes @ 0x18
   831  0038                     	ds	1
   832  0039                     ___fldiv@aexp:
   833                           
   834                           ; 1 bytes @ 0x19
   835  0039                     	ds	1
   836  003A                     ??_MPU6050_Read:
   837                           
   838                           ; 1 bytes @ 0x1A
   839  003A                     	ds	4
   840  003E                     ??_main:
   841                           
   842                           ; 1 bytes @ 0x1E
   843  003E                     	ds	2
   844                           
   845                           	psect	maintext
   846  01ED                     __pmaintext:	
   847 ;;
   848 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   849 ;;
   850 ;; *************** function _main *****************
   851 ;; Defined at:
   852 ;;		line 54 in file "main.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;		None
   855 ;; Auto vars:     Size  Location     Type
   856 ;;		None
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : B00/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   866 ;;      Params:         0       0       0       0       0
   867 ;;      Locals:         0       0       0       0       0
   868 ;;      Temps:          0       2       0       0       0
   869 ;;      Totals:         0       2       0       0       0
   870 ;;Total ram usage:        2 bytes
   871 ;; Hardware stack levels required when called:    4
   872 ;; This function calls:
   873 ;;		_MPU6050_Init
   874 ;;		_MPU6050_Read
   875 ;;		_UART_TX_Init
   876 ;;		_setOsc
   877 ;;		_setup
   878 ;; This function is called by:
   879 ;;		Startup code after reset
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           
   884                           ;psect for function _main
   885  01ED                     _main:
   886  01ED                     l1845:	
   887                           ;incstack = 0
   888                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   889                           
   890                           
   891                           ;main.c: 55:     setup();
   892  01ED  120A  118A  2192  120A  118A  	fcall	_setup
   893  01F2                     l1847:
   894                           
   895                           ;main.c: 56:     UART_TX_Init();
   896  01F2  120A  118A  2163  120A  118A  	fcall	_UART_TX_Init
   897  01F7                     l1849:
   898                           
   899                           ;main.c: 57:     MPU6050_Init();
   900  01F7  120A  118A  2303  120A  118A  	fcall	_MPU6050_Init
   901  01FC                     l1851:
   902                           
   903                           ;main.c: 58:     setOsc();
   904  01FC  120A  118A  211D  120A  118A  	fcall	_setOsc
   905  0201                     l45:	
   906                           ;main.c: 62:     while(1)
   907                           
   908                           
   909                           ;main.c: 63:  {;main.c: 64:         RD2 = !RD2;
   910  0201  3004               	movlw	4
   911  0202  1283               	bcf	3,5	;RP0=0, select bank0
   912  0203  1303               	bcf	3,6	;RP1=0, select bank0
   913  0204  0688               	xorwf	8,f
   914  0205                     l1853:
   915                           
   916                           ;main.c: 65:         MPU6050_Read();
   917  0205  120A  118A  245A  120A  118A  	fcall	_MPU6050_Read
   918  020A                     l1855:
   919                           
   920                           ;main.c: 67:         PORTA++;
   921  020A  3001               	movlw	1
   922  020B  1283               	bcf	3,5	;RP0=0, select bank0
   923  020C  1303               	bcf	3,6	;RP1=0, select bank0
   924  020D  00BE               	movwf	??_main
   925  020E  083E               	movf	??_main,w
   926  020F  0785               	addwf	5,f	;volatile
   927  0210                     l1857:
   928                           
   929                           ;main.c: 69:         _delay((unsigned long)((50)*(8000000/4000.0)));
   930  0210  3082               	movlw	130
   931  0211  1283               	bcf	3,5	;RP0=0, select bank0
   932  0212  1303               	bcf	3,6	;RP1=0, select bank0
   933  0213  00BF               	movwf	??_main+1
   934  0214  30DD               	movlw	221
   935  0215  00BE               	movwf	??_main
   936  0216                     u1697:
   937  0216  0BBE               	decfsz	??_main,f
   938  0217  2A16               	goto	u1697
   939  0218  0BBF               	decfsz	??_main+1,f
   940  0219  2A16               	goto	u1697
   941  021A  2A01               	goto	l45
   942  021B  120A  118A  2800   	ljmp	start
   943  021E                     __end_of_main:
   944                           
   945                           	psect	text1
   946  0192                     __ptext1:	
   947 ;; *************** function _setup *****************
   948 ;; Defined at:
   949 ;;		line 77 in file "main.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		status,2
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   963 ;;      Params:         0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0
   966 ;;      Totals:         0       0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_main
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           
   977                           ;psect for function _setup
   978  0192                     _setup:
   979  0192                     l1217:	
   980                           ;incstack = 0
   981                           ; Regs used in _setup: [status,2]
   982                           
   983                           
   984                           ;main.c: 78:     ANSEL = 0b00000000;
   985  0192  1683               	bsf	3,5	;RP0=1, select bank3
   986  0193  1703               	bsf	3,6	;RP1=1, select bank3
   987  0194  0188               	clrf	8	;volatile
   988                           
   989                           ;main.c: 79:     ANSELH = 0;
   990  0195  0189               	clrf	9	;volatile
   991                           
   992                           ;main.c: 81:     PORTA = 0;
   993  0196  1283               	bcf	3,5	;RP0=0, select bank0
   994  0197  1303               	bcf	3,6	;RP1=0, select bank0
   995  0198  0185               	clrf	5	;volatile
   996                           
   997                           ;main.c: 82:     PORTB = 0;
   998  0199  0186               	clrf	6	;volatile
   999                           
  1000                           ;main.c: 83:     PORTC = 0;
  1001  019A  0187               	clrf	7	;volatile
  1002                           
  1003                           ;main.c: 84:     PORTD = 0;
  1004  019B  0188               	clrf	8	;volatile
  1005                           
  1006                           ;main.c: 85:     PORTE = 0;
  1007  019C  0189               	clrf	9	;volatile
  1008                           
  1009                           ;main.c: 87:     TRISA = 0b00000000;
  1010  019D  1683               	bsf	3,5	;RP0=1, select bank1
  1011  019E  1303               	bcf	3,6	;RP1=0, select bank1
  1012  019F  0185               	clrf	5	;volatile
  1013                           
  1014                           ;main.c: 88:     TRISB = 0;
  1015  01A0  0186               	clrf	6	;volatile
  1016                           
  1017                           ;main.c: 89:     TRISC = 0b00000000;
  1018  01A1  0187               	clrf	7	;volatile
  1019                           
  1020                           ;main.c: 90:     TRISD = 0;
  1021  01A2  0188               	clrf	8	;volatile
  1022                           
  1023                           ;main.c: 91:     TRISE = 0;
  1024  01A3  0189               	clrf	9	;volatile
  1025  01A4                     l51:
  1026  01A4  0008               	return
  1027  01A5                     __end_of_setup:
  1028                           
  1029                           	psect	text2
  1030  011D                     __ptext2:	
  1031 ;; *************** function _setOsc *****************
  1032 ;; Defined at:
  1033 ;;		line 94 in file "main.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;		None
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1047 ;;      Params:         0       0       0       0       0
  1048 ;;      Locals:         0       0       0       0       0
  1049 ;;      Temps:          0       0       0       0       0
  1050 ;;      Totals:         0       0       0       0       0
  1051 ;;Total ram usage:        0 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           
  1061                           ;psect for function _setOsc
  1062  011D                     _setOsc:
  1063  011D                     l1285:	
  1064                           ;incstack = 0
  1065                           ; Regs used in _setOsc: [wreg+status,2+status,0]
  1066                           
  1067                           
  1068                           ;main.c: 95:     OSCCONbits.IRCF = 0b111;
  1069  011D  3070               	movlw	112
  1070  011E  1683               	bsf	3,5	;RP0=1, select bank1
  1071  011F  1303               	bcf	3,6	;RP1=0, select bank1
  1072  0120  048F               	iorwf	15,f	;volatile
  1073  0121                     l54:
  1074  0121  0008               	return
  1075  0122                     __end_of_setOsc:
  1076                           
  1077                           	psect	text3
  1078  0163                     __ptext3:	
  1079 ;; *************** function _UART_TX_Init *****************
  1080 ;; Defined at:
  1081 ;;		line 17 in file "USART.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1095 ;;      Params:         0       0       0       0       0
  1096 ;;      Locals:         0       0       0       0       0
  1097 ;;      Temps:          0       0       0       0       0
  1098 ;;      Totals:         0       0       0       0       0
  1099 ;;Total ram usage:        0 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; This function calls:
  1102 ;;		Nothing
  1103 ;; This function is called by:
  1104 ;;		_main
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           
  1109                           ;psect for function _UART_TX_Init
  1110  0163                     _UART_TX_Init:
  1111  0163                     l1219:	
  1112                           ;incstack = 0
  1113                           ; Regs used in _UART_TX_Init: [wreg]
  1114                           
  1115                           
  1116                           ;USART.c: 19:   BRGH = 0;
  1117  0163  1683               	bsf	3,5	;RP0=1, select bank1
  1118  0164  1303               	bcf	3,6	;RP1=0, select bank1
  1119  0165  1118               	bcf	24,2	;volatile
  1120  0166                     l1221:
  1121                           
  1122                           ;USART.c: 20:   SPBRG = 12;
  1123  0166  300C               	movlw	12
  1124  0167  0099               	movwf	25	;volatile
  1125  0168                     l1223:
  1126                           
  1127                           ;USART.c: 22:   SYNC = 0;
  1128  0168  1218               	bcf	24,4	;volatile
  1129  0169                     l1225:
  1130                           
  1131                           ;USART.c: 23:   SPEN = 1;
  1132  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1133  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1134  016B  1798               	bsf	24,7	;volatile
  1135  016C                     l1227:
  1136                           
  1137                           ;USART.c: 25:   TRISC6 = 0;
  1138  016C  1683               	bsf	3,5	;RP0=1, select bank1
  1139  016D  1303               	bcf	3,6	;RP1=0, select bank1
  1140  016E  1307               	bcf	7,6	;volatile
  1141  016F                     l1229:
  1142                           
  1143                           ;USART.c: 26:   TRISC7 = 1;
  1144  016F  1787               	bsf	7,7	;volatile
  1145  0170                     l1231:
  1146                           
  1147                           ;USART.c: 27:   TXEN = 1;
  1148  0170  1698               	bsf	24,5	;volatile
  1149  0171                     l75:
  1150  0171  0008               	return
  1151  0172                     __end_of_UART_TX_Init:
  1152                           
  1153                           	psect	text4
  1154  045A                     __ptext4:	
  1155 ;; *************** function _MPU6050_Read *****************
  1156 ;; Defined at:
  1157 ;;		line 62 in file "MPU.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;		None
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;  buffer         40    0[BANK1 ] unsigned char [40]
  1162 ;;  AY              4    0        float 
  1163 ;;  Ay              2   56[BANK1 ] int 
  1164 ;;  Gz              2    0        int 
  1165 ;;  Gy              2    0        int 
  1166 ;;  Gx              2    0        int 
  1167 ;;  T               2    0        int 
  1168 ;;  Az              2    0        int 
  1169 ;;  Ax              2    0        int 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1179 ;;      Params:         0       0       0       0       0
  1180 ;;      Locals:         0       0      58       0       0
  1181 ;;      Temps:          0       4       0       0       0
  1182 ;;      Totals:         0       4      58       0       0
  1183 ;;Total ram usage:       62 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; Hardware stack levels required when called:    3
  1186 ;; This function calls:
  1187 ;;		_I2C_Master_Stop
  1188 ;;		_I2C_Master_Write
  1189 ;;		_I2C_Read
  1190 ;;		_I2C_Start
  1191 ;;		_UART_Write_String
  1192 ;;		___awdiv
  1193 ;;		___fldiv
  1194 ;;		___xxtofl
  1195 ;;		_sprintf
  1196 ;; This function is called by:
  1197 ;;		_main
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           
  1202                           ;psect for function _MPU6050_Read
  1203  045A                     _MPU6050_Read:
  1204  045A                     l1811:	
  1205                           ;incstack = 0
  1206                           ; Regs used in _MPU6050_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1207                           
  1208  045A                     l1813:
  1209                           
  1210                           ;MPU.c: 68:   I2C_Start(0xD0);
  1211  045A  30D0               	movlw	208
  1212  045B  120A  118A  2182  120A  118A  	fcall	_I2C_Start
  1213  0460                     l1815:
  1214                           
  1215                           ;MPU.c: 69:   I2C_Master_Write(0x3B);
  1216  0460  303B               	movlw	59
  1217  0461  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Write
  1218  0466                     l1817:
  1219                           
  1220                           ;MPU.c: 70:   I2C_Master_Stop();
  1221  0466  120A  118A  2122  120A  118A  	fcall	_I2C_Master_Stop
  1222  046B                     l1819:
  1223                           
  1224                           ;MPU.c: 71:   I2C_Start(0xD1);
  1225  046B  30D1               	movlw	209
  1226  046C  120A  118A  2182  120A  118A  	fcall	_I2C_Start
  1227  0471                     l1821:
  1228  0471  3000               	movlw	0
  1229  0472  120A  118A  21C6  120A  118A  	fcall	_I2C_Read
  1230  0477  3000               	movlw	0
  1231  0478  120A  118A  21C6  120A  118A  	fcall	_I2C_Read
  1232  047D                     l1823:
  1233                           
  1234                           ;MPU.c: 73:   Ay = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1235  047D  3000               	movlw	0
  1236  047E  120A  118A  21C6  120A  118A  	fcall	_I2C_Read
  1237  0483  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0484  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0485  00BA               	movwf	??_MPU6050_Read
  1240  0486  01BB               	clrf	??_MPU6050_Read+1
  1241  0487  3000               	movlw	0
  1242  0488  120A  118A  21C6  120A  118A  	fcall	_I2C_Read
  1243  048D  1283               	bcf	3,5	;RP0=0, select bank0
  1244  048E  1303               	bcf	3,6	;RP1=0, select bank0
  1245  048F  00BC               	movwf	??_MPU6050_Read+2
  1246  0490  01BD               	clrf	??_MPU6050_Read+3
  1247  0491  083C               	movf	??_MPU6050_Read+2,w
  1248  0492  00BD               	movwf	??_MPU6050_Read+3
  1249  0493  01BC               	clrf	??_MPU6050_Read+2
  1250  0494  083A               	movf	??_MPU6050_Read,w
  1251  0495  043C               	iorwf	??_MPU6050_Read+2,w
  1252  0496  1683               	bsf	3,5	;RP0=1, select bank1
  1253  0497  1303               	bcf	3,6	;RP1=0, select bank1
  1254  0498  00D8               	movwf	MPU6050_Read@Ay^(0+128)
  1255  0499  1283               	bcf	3,5	;RP0=0, select bank0
  1256  049A  1303               	bcf	3,6	;RP1=0, select bank0
  1257  049B  083B               	movf	??_MPU6050_Read+1,w
  1258  049C  043D               	iorwf	??_MPU6050_Read+3,w
  1259  049D  1683               	bsf	3,5	;RP0=1, select bank1
  1260  049E  1303               	bcf	3,6	;RP1=0, select bank1
  1261  049F  00D9               	movwf	(MPU6050_Read@Ay+1)^(0+128)
  1262  04A0                     l1825:
  1263  04A0  3000               	movlw	0
  1264  04A1  120A  118A  21C6  120A  118A  	fcall	_I2C_Read
  1265  04A6  3000               	movlw	0
  1266  04A7  120A  118A  21C6  120A  118A  	fcall	_I2C_Read
  1267  04AC                     l1827:
  1268  04AC  3000               	movlw	0
  1269  04AD  120A  118A  21C6  120A  118A  	fcall	_I2C_Read
  1270  04B2  3000               	movlw	0
  1271  04B3  120A  118A  21C6  120A  118A  	fcall	_I2C_Read
  1272  04B8                     l1829:
  1273  04B8  3000               	movlw	0
  1274  04B9  120A  118A  21C6  120A  118A  	fcall	_I2C_Read
  1275  04BE  3000               	movlw	0
  1276  04BF  120A  118A  21C6  120A  118A  	fcall	_I2C_Read
  1277  04C4                     l1831:
  1278  04C4  3000               	movlw	0
  1279  04C5  120A  118A  21C6  120A  118A  	fcall	_I2C_Read
  1280  04CA  3000               	movlw	0
  1281  04CB  120A  118A  21C6  120A  118A  	fcall	_I2C_Read
  1282  04D0                     l1833:
  1283  04D0  3000               	movlw	0
  1284  04D1  120A  118A  21C6  120A  118A  	fcall	_I2C_Read
  1285  04D6  3001               	movlw	1
  1286  04D7  120A  118A  21C6  120A  118A  	fcall	_I2C_Read
  1287  04DC                     l1835:
  1288                           
  1289                           ;MPU.c: 79:   I2C_Master_Stop();
  1290  04DC  120A  118A  2122  120A  118A  	fcall	_I2C_Master_Stop
  1291  04E1                     l1837:
  1292                           
  1293                           ;MPU.c: 81:   PORTB = (Ay+16384)/128;
  1294  04E1  3080               	movlw	128
  1295  04E2  00F0               	movwf	___awdiv@divisor
  1296  04E3  3000               	movlw	0
  1297  04E4  00F1               	movwf	___awdiv@divisor+1
  1298  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  1299  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  1300  04E7  0858               	movf	MPU6050_Read@Ay^(0+128),w
  1301  04E8  3E00               	addlw	0
  1302  04E9  00F2               	movwf	___awdiv@dividend
  1303  04EA  0859               	movf	(MPU6050_Read@Ay+1)^(0+128),w
  1304  04EB  1803               	skipnc
  1305  04EC  3E01               	addlw	1
  1306  04ED  3E40               	addlw	64
  1307  04EE  00F3               	movwf	___awdiv@dividend+1
  1308  04EF  120A  118A  229C  120A  118A  	fcall	___awdiv
  1309  04F4  0870               	movf	?___awdiv,w
  1310  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  1311  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  1312  04F7  0086               	movwf	6	;volatile
  1313  04F8                     l1839:
  1314  04F8  3046               	movlw	70
  1315  04F9  00A3               	movwf	___fldiv@a+3
  1316  04FA  3080               	movlw	128
  1317  04FB  00A2               	movwf	___fldiv@a+2
  1318  04FC  3000               	movlw	0
  1319  04FD  00A1               	movwf	___fldiv@a+1
  1320  04FE  3000               	movlw	0
  1321  04FF  00A0               	movwf	___fldiv@a
  1322  0500  1683               	bsf	3,5	;RP0=1, select bank1
  1323  0501  1303               	bcf	3,6	;RP1=0, select bank1
  1324  0502  0858               	movf	MPU6050_Read@Ay^(0+128),w
  1325  0503  00F0               	movwf	___xxtofl@val
  1326  0504  0859               	movf	(MPU6050_Read@Ay+1)^(0+128),w
  1327  0505  00F1               	movwf	___xxtofl@val+1
  1328  0506  3000               	movlw	0
  1329  0507  1BF1               	btfsc	___xxtofl@val+1,7
  1330  0508  30FF               	movlw	255
  1331  0509  00F2               	movwf	___xxtofl@val+2
  1332  050A  00F3               	movwf	___xxtofl@val+3
  1333  050B  3001               	movlw	1
  1334  050C  120A  118A  23A0  120A  118A  	fcall	___xxtofl
  1335  0511  0873               	movf	?___xxtofl+3,w
  1336  0512  1283               	bcf	3,5	;RP0=0, select bank0
  1337  0513  1303               	bcf	3,6	;RP1=0, select bank0
  1338  0514  00A7               	movwf	___fldiv@b+3
  1339  0515  0872               	movf	?___xxtofl+2,w
  1340  0516  00A6               	movwf	___fldiv@b+2
  1341  0517  0871               	movf	?___xxtofl+1,w
  1342  0518  00A5               	movwf	___fldiv@b+1
  1343  0519  0870               	movf	?___xxtofl,w
  1344  051A  00A4               	movwf	___fldiv@b
  1345  051B  120A  118A  261F  120A  118A  	fcall	___fldiv
  1346  0520                     l1841:
  1347                           
  1348                           ;MPU.c: 88:   sprintf(buffer," Ay = %d    ",5);
  1349  0520  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1350  0521  1283               	bcf	3,5	;RP0=0, select bank0
  1351  0522  1303               	bcf	3,6	;RP1=0, select bank0
  1352  0523  00BA               	movwf	??_MPU6050_Read
  1353  0524  083A               	movf	??_MPU6050_Read,w
  1354  0525  00A0               	movwf	sprintf@f
  1355  0526  3005               	movlw	5
  1356  0527  00A1               	movwf	?_sprintf+1
  1357  0528  3000               	movlw	0
  1358  0529  00A2               	movwf	?_sprintf+2
  1359  052A  30A0               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1360  052B  120A  118A  2537  120A  118A  	fcall	_sprintf
  1361  0530                     l1843:
  1362                           
  1363                           ;MPU.c: 89:   UART_Write_String(buffer);
  1364  0530  30A0               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1365  0531  120A  118A  21A5  120A  118A  	fcall	_UART_Write_String
  1366  0536                     l111:
  1367  0536  0008               	return
  1368  0537                     __end_of_MPU6050_Read:
  1369                           
  1370                           	psect	text5
  1371  0537                     __ptext5:	
  1372 ;; *************** function _sprintf *****************
  1373 ;; Defined at:
  1374 ;;		line 505 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;  sp              1    wreg     PTR unsigned char 
  1377 ;;		 -> MPU6050_Read@buffer(40), 
  1378 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1379 ;;		 -> STR_1(13), 
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1382 ;;		 -> MPU6050_Read@buffer(40), 
  1383 ;;  tmpval          4    0        struct .
  1384 ;;  val             2    9[BANK0 ] unsigned int 
  1385 ;;  cp              2    0        PTR const unsigned char 
  1386 ;;  len             2    0        unsigned int 
  1387 ;;  c               1   12[BANK0 ] unsigned char 
  1388 ;;  prec            1    8[BANK0 ] char 
  1389 ;;  flag            1    7[BANK0 ] unsigned char 
  1390 ;;  ap              1    6[BANK0 ] PTR void [1]
  1391 ;;		 -> ?_sprintf(2), 
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  2    0[BANK0 ] int 
  1394 ;; Registers used:
  1395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1401 ;;      Params:         0       3       0       0       0
  1402 ;;      Locals:         0       7       0       0       0
  1403 ;;      Temps:          0       3       0       0       0
  1404 ;;      Totals:         0      13       0       0       0
  1405 ;;Total ram usage:       13 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    1
  1408 ;; This function calls:
  1409 ;;		___lwdiv
  1410 ;;		___lwmod
  1411 ;; This function is called by:
  1412 ;;		_MPU6050_Read
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           
  1417                           ;psect for function _sprintf
  1418  0537                     _sprintf:
  1419                           
  1420                           ;incstack = 0
  1421                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1422                           ;sprintf@sp stored from wreg
  1423  0537  1283               	bcf	3,5	;RP0=0, select bank0
  1424  0538  1303               	bcf	3,6	;RP1=0, select bank0
  1425  0539  00AB               	movwf	sprintf@sp
  1426  053A                     l1467:
  1427                           
  1428                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const c
      +                          har * f, ...);D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 506: {;D:\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\Microchip\xc8\v2.31\pi
      +                          c\sources\c90\common\doprnt.c: 512:  char c;;D:\Microchip\xc8\v2.31\pic\sources\c90\comm
      +                          on\doprnt.c: 521:  signed char prec;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprn
      +                          t.c: 525:  unsigned char flag;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          43:  } tmpval;
  1429  053A  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1430  053B  00A3               	movwf	??_sprintf
  1431  053C  0823               	movf	??_sprintf,w
  1432  053D  00A6               	movwf	sprintf@ap
  1433                           
  1434                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1435  053E  2E08               	goto	l1519
  1436  053F                     l1469:
  1437                           
  1438                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  1439  053F  3025               	movlw	37
  1440  0540  062C               	xorwf	sprintf@c,w
  1441  0541  1903               	btfsc	3,2
  1442  0542  2D44               	goto	u1081
  1443  0543  2D45               	goto	u1080
  1444  0544                     u1081:
  1445  0544  2D51               	goto	l1475
  1446  0545                     u1080:
  1447  0545                     l1471:
  1448                           
  1449                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;D:\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1450  0545  082C               	movf	sprintf@c,w
  1451  0546  00A3               	movwf	??_sprintf
  1452  0547  082B               	movf	sprintf@sp,w
  1453  0548  0084               	movwf	4
  1454  0549  0823               	movf	??_sprintf,w
  1455  054A  1383               	bcf	3,7	;select IRP bank0
  1456  054B  0080               	movwf	0
  1457  054C                     l1473:
  1458  054C  3001               	movlw	1
  1459  054D  00A3               	movwf	??_sprintf
  1460  054E  0823               	movf	??_sprintf,w
  1461  054F  07AB               	addwf	sprintf@sp,f
  1462                           
  1463                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1464  0550  2E08               	goto	l1519
  1465  0551                     l1475:
  1466                           
  1467                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1468  0551  01A7               	clrf	sprintf@flag
  1469  0552                     l1479:	
  1470                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c = *f++) {
  1471                           
  1472  0552  3001               	movlw	1
  1473  0553  07A0               	addwf	sprintf@f,f
  1474  0554  30FF               	movlw	-1
  1475  0555  0720               	addwf	sprintf@f,w
  1476  0556  0084               	movwf	4
  1477  0557  120A  118A  2003  120A  118A  	fcall	stringdir
  1478  055C  00AC               	movwf	sprintf@c
  1479  055D  00A3               	movwf	??_sprintf
  1480  055E  01A4               	clrf	??_sprintf+1
  1481                           
  1482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1483                           ; Switch size 1, requested type "simple"
  1484                           ; Number of cases is 1, Range of values is 0 to 0
  1485                           ; switch strategies available:
  1486                           ; Name         Instructions Cycles
  1487                           ; simple_byte            4     3 (average)
  1488                           ; direct_byte           11     8 (fixed)
  1489                           ; jumptable            260     6 (fixed)
  1490                           ;	Chosen strategy is simple_byte
  1491  055F  0824               	movf	??_sprintf+1,w
  1492  0560  3A00               	xorlw	0	; case 0
  1493  0561  1903               	skipnz
  1494  0562  2D64               	goto	l1897
  1495  0563  2E08               	goto	l1519
  1496  0564                     l1897:
  1497                           
  1498                           ; Switch size 1, requested type "simple"
  1499                           ; Number of cases is 3, Range of values is 0 to 105
  1500                           ; switch strategies available:
  1501                           ; Name         Instructions Cycles
  1502                           ; simple_byte           10     6 (average)
  1503                           ; jumptable            260     6 (fixed)
  1504                           ;	Chosen strategy is simple_byte
  1505  0564  0823               	movf	??_sprintf,w
  1506  0565  3A00               	xorlw	0	; case 0
  1507  0566  1903               	skipnz
  1508  0567  2E1A               	goto	l1521
  1509  0568  3A64               	xorlw	100	; case 100
  1510  0569  1903               	skipnz
  1511  056A  2D6F               	goto	l1481
  1512  056B  3A0D               	xorlw	13	; case 105
  1513  056C  1903               	skipnz
  1514  056D  2D6F               	goto	l1481
  1515  056E  2E08               	goto	l1519
  1516  056F                     l1481:
  1517                           
  1518                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned int)(*(int *)__va_arg((*(in
      +                          t **)ap), (int)0));
  1519  056F  0826               	movf	sprintf@ap,w
  1520  0570  0084               	movwf	4
  1521  0571  1383               	bcf	3,7	;select IRP bank0
  1522  0572  0800               	movf	0,w
  1523  0573  00A9               	movwf	sprintf@val
  1524  0574  0A84               	incf	4,f
  1525  0575  0800               	movf	0,w
  1526  0576  00AA               	movwf	sprintf@val+1
  1527  0577                     l1483:
  1528  0577  3002               	movlw	2
  1529  0578  00A3               	movwf	??_sprintf
  1530  0579  0823               	movf	??_sprintf,w
  1531  057A  07A6               	addwf	sprintf@ap,f
  1532  057B                     l1485:
  1533                           
  1534                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)val < 0) {
  1535  057B  1FAA               	btfss	sprintf@val+1,7
  1536  057C  2D7E               	goto	u1091
  1537  057D  2D7F               	goto	u1090
  1538  057E                     u1091:
  1539  057E  2D88               	goto	l1491
  1540  057F                     u1090:
  1541  057F                     l1487:
  1542                           
  1543                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
  1544  057F  3003               	movlw	3
  1545  0580  00A3               	movwf	??_sprintf
  1546  0581  0823               	movf	??_sprintf,w
  1547  0582  04A7               	iorwf	sprintf@flag,f
  1548  0583                     l1489:
  1549                           
  1550                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
  1551  0583  09A9               	comf	sprintf@val,f
  1552  0584  09AA               	comf	sprintf@val+1,f
  1553  0585  0AA9               	incf	sprintf@val,f
  1554  0586  1903               	skipnz
  1555  0587  0AAA               	incf	sprintf@val+1,f
  1556  0588                     l1491:
  1557                           
  1558                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
  1559  0588  01AC               	clrf	sprintf@c
  1560  0589  0AAC               	incf	sprintf@c,f
  1561  058A                     l1497:
  1562                           
  1563                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowers[c])
  1564  058A  082C               	movf	sprintf@c,w
  1565  058B  00A3               	movwf	??_sprintf
  1566  058C  0723               	addwf	??_sprintf,w
  1567  058D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1568  058E  0084               	movwf	4
  1569  058F  120A  118A  2003  120A  118A  	fcall	stringdir
  1570  0594  00A4               	movwf	??_sprintf+1
  1571  0595  120A  118A  2003  120A  118A  	fcall	stringdir
  1572  059A  00A5               	movwf	??_sprintf+2
  1573  059B  0825               	movf	??_sprintf+2,w
  1574  059C  022A               	subwf	sprintf@val+1,w
  1575  059D  1D03               	skipz
  1576  059E  2DA1               	goto	u1105
  1577  059F  0824               	movf	??_sprintf+1,w
  1578  05A0  0229               	subwf	sprintf@val,w
  1579  05A1                     u1105:
  1580  05A1  1803               	skipnc
  1581  05A2  2DA4               	goto	u1101
  1582  05A3  2DA5               	goto	u1100
  1583  05A4                     u1101:
  1584  05A4  2DA6               	goto	l1501
  1585  05A5                     u1100:
  1586  05A5  2DB0               	goto	l1503
  1587  05A6                     l1501:
  1588  05A6  3001               	movlw	1
  1589  05A7  00A3               	movwf	??_sprintf
  1590  05A8  0823               	movf	??_sprintf,w
  1591  05A9  07AC               	addwf	sprintf@c,f
  1592  05AA  3005               	movlw	5
  1593  05AB  062C               	xorwf	sprintf@c,w
  1594  05AC  1D03               	btfss	3,2
  1595  05AD  2DAF               	goto	u1111
  1596  05AE  2DB0               	goto	u1110
  1597  05AF                     u1111:
  1598  05AF  2D8A               	goto	l1497
  1599  05B0                     u1110:
  1600  05B0                     l1503:
  1601                           
  1602                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1603  05B0  0827               	movf	sprintf@flag,w
  1604  05B1  3903               	andlw	3
  1605  05B2  1903               	btfsc	3,2
  1606  05B3  2DB5               	goto	u1121
  1607  05B4  2DB6               	goto	u1120
  1608  05B5                     u1121:
  1609  05B5  2DC1               	goto	l1509
  1610  05B6                     u1120:
  1611  05B6                     l1505:
  1612                           
  1613                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
  1614  05B6  302D               	movlw	45
  1615  05B7  00A3               	movwf	??_sprintf
  1616  05B8  082B               	movf	sprintf@sp,w
  1617  05B9  0084               	movwf	4
  1618  05BA  0823               	movf	??_sprintf,w
  1619  05BB  1383               	bcf	3,7	;select IRP bank0
  1620  05BC  0080               	movwf	0
  1621  05BD                     l1507:
  1622  05BD  3001               	movlw	1
  1623  05BE  00A3               	movwf	??_sprintf
  1624  05BF  0823               	movf	??_sprintf,w
  1625  05C0  07AB               	addwf	sprintf@sp,f
  1626  05C1                     l1509:
  1627                           
  1628                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1629  05C1  082C               	movf	sprintf@c,w
  1630  05C2  00A3               	movwf	??_sprintf
  1631  05C3  0823               	movf	??_sprintf,w
  1632  05C4  00A8               	movwf	sprintf@prec
  1633                           
  1634                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  1635  05C5  2DFF               	goto	l1517
  1636  05C6                     l1511:
  1637                           
  1638                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpowers[(unsigned char)prec]) %
      +                           10 + '0';
  1639  05C6  300A               	movlw	10
  1640  05C7  00F8               	movwf	___lwmod@divisor
  1641  05C8  3000               	movlw	0
  1642  05C9  00F9               	movwf	___lwmod@divisor+1
  1643  05CA  0828               	movf	sprintf@prec,w
  1644  05CB  00A3               	movwf	??_sprintf
  1645  05CC  0723               	addwf	??_sprintf,w
  1646  05CD  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1647  05CE  0084               	movwf	4
  1648  05CF  120A  118A  2003  120A  118A  	fcall	stringdir
  1649  05D4  00F0               	movwf	___lwdiv@divisor
  1650  05D5  120A  118A  2003  120A  118A  	fcall	stringdir
  1651  05DA  00F1               	movwf	___lwdiv@divisor+1
  1652  05DB  082A               	movf	sprintf@val+1,w
  1653  05DC  00F3               	movwf	___lwdiv@dividend+1
  1654  05DD  0829               	movf	sprintf@val,w
  1655  05DE  00F2               	movwf	___lwdiv@dividend
  1656  05DF  120A  118A  2258  120A  118A  	fcall	___lwdiv
  1657  05E4  0871               	movf	?___lwdiv+1,w
  1658  05E5  00FB               	movwf	___lwmod@dividend+1
  1659  05E6  0870               	movf	?___lwdiv,w
  1660  05E7  00FA               	movwf	___lwmod@dividend
  1661  05E8  120A  118A  221E  120A  118A  	fcall	___lwmod
  1662  05ED  0878               	movf	?___lwmod,w
  1663  05EE  3E30               	addlw	48
  1664  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  1665  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  1666  05F1  00A4               	movwf	??_sprintf+1
  1667  05F2  0824               	movf	??_sprintf+1,w
  1668  05F3  00AC               	movwf	sprintf@c
  1669  05F4                     l1513:
  1670                           
  1671                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
  1672  05F4  082C               	movf	sprintf@c,w
  1673  05F5  00A3               	movwf	??_sprintf
  1674  05F6  082B               	movf	sprintf@sp,w
  1675  05F7  0084               	movwf	4
  1676  05F8  0823               	movf	??_sprintf,w
  1677  05F9  1383               	bcf	3,7	;select IRP bank0
  1678  05FA  0080               	movwf	0
  1679  05FB                     l1515:
  1680  05FB  3001               	movlw	1
  1681  05FC  00A3               	movwf	??_sprintf
  1682  05FD  0823               	movf	??_sprintf,w
  1683  05FE  07AB               	addwf	sprintf@sp,f
  1684  05FF                     l1517:
  1685                           
  1686                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  1687  05FF  30FF               	movlw	255
  1688  0600  00A3               	movwf	??_sprintf
  1689  0601  0823               	movf	??_sprintf,w
  1690  0602  07A8               	addwf	sprintf@prec,f
  1691  0603  0A28               	incf	sprintf@prec,w
  1692  0604  1D03               	btfss	3,2
  1693  0605  2E07               	goto	u1131
  1694  0606  2E08               	goto	u1130
  1695  0607                     u1131:
  1696  0607  2DC6               	goto	l1511
  1697  0608                     u1130:
  1698  0608                     l1519:
  1699                           
  1700                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1701  0608  3001               	movlw	1
  1702  0609  07A0               	addwf	sprintf@f,f
  1703  060A  30FF               	movlw	-1
  1704  060B  0720               	addwf	sprintf@f,w
  1705  060C  0084               	movwf	4
  1706  060D  120A  118A  2003  120A  118A  	fcall	stringdir
  1707  0612  00A3               	movwf	??_sprintf
  1708  0613  0823               	movf	??_sprintf,w
  1709  0614  00AC               	movwf	sprintf@c
  1710  0615  082C               	movf	sprintf@c,w
  1711  0616  1D03               	btfss	3,2
  1712  0617  2E19               	goto	u1141
  1713  0618  2E1A               	goto	u1140
  1714  0619                     u1141:
  1715  0619  2D3F               	goto	l1469
  1716  061A                     u1140:
  1717  061A                     l1521:
  1718                           
  1719                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1720  061A  082B               	movf	sprintf@sp,w
  1721  061B  0084               	movwf	4
  1722  061C  1383               	bcf	3,7	;select IRP bank0
  1723  061D  0180               	clrf	0
  1724  061E                     l311:
  1725  061E  0008               	return
  1726  061F                     __end_of_sprintf:
  1727                           
  1728                           	psect	text6
  1729  021E                     __ptext6:	
  1730 ;; *************** function ___lwmod *****************
  1731 ;; Defined at:
  1732 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  divisor         2    8[COMMON] unsigned int 
  1735 ;;  dividend        2   10[COMMON] unsigned int 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  counter         1   13[COMMON] unsigned char 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  2    8[COMMON] unsigned int 
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         4       0       0       0       0
  1748 ;;      Locals:         1       0       0       0       0
  1749 ;;      Temps:          1       0       0       0       0
  1750 ;;      Totals:         6       0       0       0       0
  1751 ;;Total ram usage:        6 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_sprintf
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           
  1761                           ;psect for function ___lwmod
  1762  021E                     ___lwmod:
  1763  021E                     l1415:	
  1764                           ;incstack = 0
  1765                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1766                           
  1767  021E  0878               	movf	___lwmod@divisor,w
  1768  021F  0479               	iorwf	___lwmod@divisor+1,w
  1769  0220  1903               	btfsc	3,2
  1770  0221  2A23               	goto	u981
  1771  0222  2A24               	goto	u980
  1772  0223                     u981:
  1773  0223  2A53               	goto	l1433
  1774  0224                     u980:
  1775  0224                     l1417:
  1776  0224  01FD               	clrf	___lwmod@counter
  1777  0225  0AFD               	incf	___lwmod@counter,f
  1778  0226  2A32               	goto	l1423
  1779  0227                     l1419:
  1780  0227  3001               	movlw	1
  1781  0228                     u995:
  1782  0228  1003               	clrc
  1783  0229  0DF8               	rlf	___lwmod@divisor,f
  1784  022A  0DF9               	rlf	___lwmod@divisor+1,f
  1785  022B  3EFF               	addlw	-1
  1786  022C  1D03               	skipz
  1787  022D  2A28               	goto	u995
  1788  022E                     l1421:
  1789  022E  3001               	movlw	1
  1790  022F  00FC               	movwf	??___lwmod
  1791  0230  087C               	movf	??___lwmod,w
  1792  0231  07FD               	addwf	___lwmod@counter,f
  1793  0232                     l1423:
  1794  0232  1FF9               	btfss	___lwmod@divisor+1,7
  1795  0233  2A35               	goto	u1001
  1796  0234  2A36               	goto	u1000
  1797  0235                     u1001:
  1798  0235  2A27               	goto	l1419
  1799  0236                     u1000:
  1800  0236                     l1425:
  1801  0236  0879               	movf	___lwmod@divisor+1,w
  1802  0237  027B               	subwf	___lwmod@dividend+1,w
  1803  0238  1D03               	skipz
  1804  0239  2A3C               	goto	u1015
  1805  023A  0878               	movf	___lwmod@divisor,w
  1806  023B  027A               	subwf	___lwmod@dividend,w
  1807  023C                     u1015:
  1808  023C  1C03               	skipc
  1809  023D  2A3F               	goto	u1011
  1810  023E  2A40               	goto	u1010
  1811  023F                     u1011:
  1812  023F  2A46               	goto	l1429
  1813  0240                     u1010:
  1814  0240                     l1427:
  1815  0240  0878               	movf	___lwmod@divisor,w
  1816  0241  02FA               	subwf	___lwmod@dividend,f
  1817  0242  0879               	movf	___lwmod@divisor+1,w
  1818  0243  1C03               	skipc
  1819  0244  03FB               	decf	___lwmod@dividend+1,f
  1820  0245  02FB               	subwf	___lwmod@dividend+1,f
  1821  0246                     l1429:
  1822  0246  3001               	movlw	1
  1823  0247                     u1025:
  1824  0247  1003               	clrc
  1825  0248  0CF9               	rrf	___lwmod@divisor+1,f
  1826  0249  0CF8               	rrf	___lwmod@divisor,f
  1827  024A  3EFF               	addlw	-1
  1828  024B  1D03               	skipz
  1829  024C  2A47               	goto	u1025
  1830  024D                     l1431:
  1831  024D  3001               	movlw	1
  1832  024E  02FD               	subwf	___lwmod@counter,f
  1833  024F  1D03               	btfss	3,2
  1834  0250  2A52               	goto	u1031
  1835  0251  2A53               	goto	u1030
  1836  0252                     u1031:
  1837  0252  2A36               	goto	l1425
  1838  0253                     u1030:
  1839  0253                     l1433:
  1840  0253  087B               	movf	___lwmod@dividend+1,w
  1841  0254  00F9               	movwf	?___lwmod+1
  1842  0255  087A               	movf	___lwmod@dividend,w
  1843  0256  00F8               	movwf	?___lwmod
  1844  0257                     l597:
  1845  0257  0008               	return
  1846  0258                     __end_of___lwmod:
  1847                           
  1848                           	psect	text7
  1849  0258                     __ptext7:	
  1850 ;; *************** function ___lwdiv *****************
  1851 ;; Defined at:
  1852 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  divisor         2    0[COMMON] unsigned int 
  1855 ;;  dividend        2    2[COMMON] unsigned int 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  quotient        2    5[COMMON] unsigned int 
  1858 ;;  counter         1    7[COMMON] unsigned char 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  2    0[COMMON] unsigned int 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2, status,0
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1868 ;;      Params:         4       0       0       0       0
  1869 ;;      Locals:         3       0       0       0       0
  1870 ;;      Temps:          1       0       0       0       0
  1871 ;;      Totals:         8       0       0       0       0
  1872 ;;Total ram usage:        8 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; This function calls:
  1875 ;;		Nothing
  1876 ;; This function is called by:
  1877 ;;		_sprintf
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           
  1882                           ;psect for function ___lwdiv
  1883  0258                     ___lwdiv:
  1884  0258                     l1389:	
  1885                           ;incstack = 0
  1886                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1887                           
  1888  0258  01F5               	clrf	___lwdiv@quotient
  1889  0259  01F6               	clrf	___lwdiv@quotient+1
  1890  025A                     l1391:
  1891  025A  0870               	movf	___lwdiv@divisor,w
  1892  025B  0471               	iorwf	___lwdiv@divisor+1,w
  1893  025C  1903               	btfsc	3,2
  1894  025D  2A5F               	goto	u911
  1895  025E  2A60               	goto	u910
  1896  025F                     u911:
  1897  025F  2A97               	goto	l1411
  1898  0260                     u910:
  1899  0260                     l1393:
  1900  0260  01F7               	clrf	___lwdiv@counter
  1901  0261  0AF7               	incf	___lwdiv@counter,f
  1902  0262  2A6E               	goto	l1399
  1903  0263                     l1395:
  1904  0263  3001               	movlw	1
  1905  0264                     u925:
  1906  0264  1003               	clrc
  1907  0265  0DF0               	rlf	___lwdiv@divisor,f
  1908  0266  0DF1               	rlf	___lwdiv@divisor+1,f
  1909  0267  3EFF               	addlw	-1
  1910  0268  1D03               	skipz
  1911  0269  2A64               	goto	u925
  1912  026A                     l1397:
  1913  026A  3001               	movlw	1
  1914  026B  00F4               	movwf	??___lwdiv
  1915  026C  0874               	movf	??___lwdiv,w
  1916  026D  07F7               	addwf	___lwdiv@counter,f
  1917  026E                     l1399:
  1918  026E  1FF1               	btfss	___lwdiv@divisor+1,7
  1919  026F  2A71               	goto	u931
  1920  0270  2A72               	goto	u930
  1921  0271                     u931:
  1922  0271  2A63               	goto	l1395
  1923  0272                     u930:
  1924  0272                     l1401:
  1925  0272  3001               	movlw	1
  1926  0273                     u945:
  1927  0273  1003               	clrc
  1928  0274  0DF5               	rlf	___lwdiv@quotient,f
  1929  0275  0DF6               	rlf	___lwdiv@quotient+1,f
  1930  0276  3EFF               	addlw	-1
  1931  0277  1D03               	skipz
  1932  0278  2A73               	goto	u945
  1933  0279  0871               	movf	___lwdiv@divisor+1,w
  1934  027A  0273               	subwf	___lwdiv@dividend+1,w
  1935  027B  1D03               	skipz
  1936  027C  2A7F               	goto	u955
  1937  027D  0870               	movf	___lwdiv@divisor,w
  1938  027E  0272               	subwf	___lwdiv@dividend,w
  1939  027F                     u955:
  1940  027F  1C03               	skipc
  1941  0280  2A82               	goto	u951
  1942  0281  2A83               	goto	u950
  1943  0282                     u951:
  1944  0282  2A8A               	goto	l1407
  1945  0283                     u950:
  1946  0283                     l1403:
  1947  0283  0870               	movf	___lwdiv@divisor,w
  1948  0284  02F2               	subwf	___lwdiv@dividend,f
  1949  0285  0871               	movf	___lwdiv@divisor+1,w
  1950  0286  1C03               	skipc
  1951  0287  03F3               	decf	___lwdiv@dividend+1,f
  1952  0288  02F3               	subwf	___lwdiv@dividend+1,f
  1953  0289                     l1405:
  1954  0289  1475               	bsf	___lwdiv@quotient,0
  1955  028A                     l1407:
  1956  028A  3001               	movlw	1
  1957  028B                     u965:
  1958  028B  1003               	clrc
  1959  028C  0CF1               	rrf	___lwdiv@divisor+1,f
  1960  028D  0CF0               	rrf	___lwdiv@divisor,f
  1961  028E  3EFF               	addlw	-1
  1962  028F  1D03               	skipz
  1963  0290  2A8B               	goto	u965
  1964  0291                     l1409:
  1965  0291  3001               	movlw	1
  1966  0292  02F7               	subwf	___lwdiv@counter,f
  1967  0293  1D03               	btfss	3,2
  1968  0294  2A96               	goto	u971
  1969  0295  2A97               	goto	u970
  1970  0296                     u971:
  1971  0296  2A72               	goto	l1401
  1972  0297                     u970:
  1973  0297                     l1411:
  1974  0297  0876               	movf	___lwdiv@quotient+1,w
  1975  0298  00F1               	movwf	?___lwdiv+1
  1976  0299  0875               	movf	___lwdiv@quotient,w
  1977  029A  00F0               	movwf	?___lwdiv
  1978  029B                     l587:
  1979  029B  0008               	return
  1980  029C                     __end_of___lwdiv:
  1981                           
  1982                           	psect	text8
  1983  03A0                     __ptext8:	
  1984 ;; *************** function ___xxtofl *****************
  1985 ;; Defined at:
  1986 ;;		line 10 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  sign            1    wreg     unsigned char 
  1989 ;;  val             4    0[COMMON] long 
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;  sign            1    8[COMMON] unsigned char 
  1992 ;;  arg             4   10[COMMON] unsigned long 
  1993 ;;  exp             1    9[COMMON] unsigned char 
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  4    0[COMMON] unsigned char 
  1996 ;; Registers used:
  1997 ;;		wreg, status,2, status,0
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2003 ;;      Params:         4       0       0       0       0
  2004 ;;      Locals:         6       0       0       0       0
  2005 ;;      Temps:          4       0       0       0       0
  2006 ;;      Totals:        14       0       0       0       0
  2007 ;;Total ram usage:       14 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; This function calls:
  2010 ;;		Nothing
  2011 ;; This function is called by:
  2012 ;;		_MPU6050_Read
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           
  2017                           ;psect for function ___xxtofl
  2018  03A0                     ___xxtofl:
  2019                           
  2020                           ;incstack = 0
  2021                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2022                           ;___xxtofl@sign stored from wreg
  2023  03A0  00F8               	movwf	___xxtofl@sign
  2024  03A1                     l1715:
  2025  03A1  0878               	movf	___xxtofl@sign,w
  2026  03A2  1903               	btfsc	3,2
  2027  03A3  2BA5               	goto	u1541
  2028  03A4  2BA6               	goto	u1540
  2029  03A5                     u1541:
  2030  03A5  2BBA               	goto	l1721
  2031  03A6                     u1540:
  2032  03A6                     l1717:
  2033  03A6  1FF3               	btfss	___xxtofl@val+3,7
  2034  03A7  2BA9               	goto	u1551
  2035  03A8  2BAA               	goto	u1550
  2036  03A9                     u1551:
  2037  03A9  2BBA               	goto	l1721
  2038  03AA                     u1550:
  2039  03AA                     l1719:
  2040  03AA  0970               	comf	___xxtofl@val,w
  2041  03AB  00FA               	movwf	___xxtofl@arg
  2042  03AC  0971               	comf	___xxtofl@val+1,w
  2043  03AD  00FB               	movwf	___xxtofl@arg+1
  2044  03AE  0972               	comf	___xxtofl@val+2,w
  2045  03AF  00FC               	movwf	___xxtofl@arg+2
  2046  03B0  0973               	comf	___xxtofl@val+3,w
  2047  03B1  00FD               	movwf	___xxtofl@arg+3
  2048  03B2  0AFA               	incf	___xxtofl@arg,f
  2049  03B3  1903               	skipnz
  2050  03B4  0AFB               	incf	___xxtofl@arg+1,f
  2051  03B5  1903               	skipnz
  2052  03B6  0AFC               	incf	___xxtofl@arg+2,f
  2053  03B7  1903               	skipnz
  2054  03B8  0AFD               	incf	___xxtofl@arg+3,f
  2055  03B9  2BC2               	goto	l748
  2056  03BA                     l1721:
  2057  03BA  0873               	movf	___xxtofl@val+3,w
  2058  03BB  00FD               	movwf	___xxtofl@arg+3
  2059  03BC  0872               	movf	___xxtofl@val+2,w
  2060  03BD  00FC               	movwf	___xxtofl@arg+2
  2061  03BE  0871               	movf	___xxtofl@val+1,w
  2062  03BF  00FB               	movwf	___xxtofl@arg+1
  2063  03C0  0870               	movf	___xxtofl@val,w
  2064  03C1  00FA               	movwf	___xxtofl@arg
  2065  03C2                     l748:
  2066  03C2  0873               	movf	___xxtofl@val+3,w
  2067  03C3  0472               	iorwf	___xxtofl@val+2,w
  2068  03C4  0471               	iorwf	___xxtofl@val+1,w
  2069  03C5  0470               	iorwf	___xxtofl@val,w
  2070  03C6  1D03               	skipz
  2071  03C7  2BC9               	goto	u1561
  2072  03C8  2BCA               	goto	u1560
  2073  03C9                     u1561:
  2074  03C9  2BD3               	goto	l1727
  2075  03CA                     u1560:
  2076  03CA                     l1723:
  2077  03CA  3000               	movlw	0
  2078  03CB  00F3               	movwf	?___xxtofl+3
  2079  03CC  3000               	movlw	0
  2080  03CD  00F2               	movwf	?___xxtofl+2
  2081  03CE  3000               	movlw	0
  2082  03CF  00F1               	movwf	?___xxtofl+1
  2083  03D0  3000               	movlw	0
  2084  03D1  00F0               	movwf	?___xxtofl
  2085  03D2  2C59               	goto	l750
  2086  03D3                     l1727:
  2087  03D3  3096               	movlw	150
  2088  03D4  00F4               	movwf	??___xxtofl
  2089  03D5  0874               	movf	??___xxtofl,w
  2090  03D6  00F9               	movwf	___xxtofl@exp
  2091  03D7  2BE5               	goto	l1731
  2092  03D8                     l1729:
  2093  03D8  3001               	movlw	1
  2094  03D9  00F4               	movwf	??___xxtofl
  2095  03DA  0874               	movf	??___xxtofl,w
  2096  03DB  07F9               	addwf	___xxtofl@exp,f
  2097  03DC  3001               	movlw	1
  2098  03DD                     u1575:
  2099  03DD  1003               	clrc
  2100  03DE  0CFD               	rrf	___xxtofl@arg+3,f
  2101  03DF  0CFC               	rrf	___xxtofl@arg+2,f
  2102  03E0  0CFB               	rrf	___xxtofl@arg+1,f
  2103  03E1  0CFA               	rrf	___xxtofl@arg,f
  2104  03E2  3EFF               	addlw	-1
  2105  03E3  1D03               	skipz
  2106  03E4  2BDD               	goto	u1575
  2107  03E5                     l1731:
  2108  03E5  30FE               	movlw	254
  2109  03E6  057D               	andwf	___xxtofl@arg+3,w
  2110  03E7  1D03               	btfss	3,2
  2111  03E8  2BEA               	goto	u1581
  2112  03E9  2BEB               	goto	u1580
  2113  03EA                     u1581:
  2114  03EA  2BD8               	goto	l1729
  2115  03EB                     u1580:
  2116  03EB  2C07               	goto	l754
  2117  03EC                     l1733:
  2118  03EC  3001               	movlw	1
  2119  03ED  00F4               	movwf	??___xxtofl
  2120  03EE  0874               	movf	??___xxtofl,w
  2121  03EF  07F9               	addwf	___xxtofl@exp,f
  2122  03F0                     l1735:
  2123  03F0  3001               	movlw	1
  2124  03F1  07FA               	addwf	___xxtofl@arg,f
  2125  03F2  3000               	movlw	0
  2126  03F3  1803               	skipnc
  2127  03F4  3001               	movlw	1
  2128  03F5  07FB               	addwf	___xxtofl@arg+1,f
  2129  03F6  3000               	movlw	0
  2130  03F7  1803               	skipnc
  2131  03F8  3001               	movlw	1
  2132  03F9  07FC               	addwf	___xxtofl@arg+2,f
  2133  03FA  3000               	movlw	0
  2134  03FB  1803               	skipnc
  2135  03FC  3001               	movlw	1
  2136  03FD  07FD               	addwf	___xxtofl@arg+3,f
  2137  03FE                     l1737:
  2138  03FE  3001               	movlw	1
  2139  03FF                     u1595:
  2140  03FF  1003               	clrc
  2141  0400  0CFD               	rrf	___xxtofl@arg+3,f
  2142  0401  0CFC               	rrf	___xxtofl@arg+2,f
  2143  0402  0CFB               	rrf	___xxtofl@arg+1,f
  2144  0403  0CFA               	rrf	___xxtofl@arg,f
  2145  0404  3EFF               	addlw	-1
  2146  0405  1D03               	skipz
  2147  0406  2BFF               	goto	u1595
  2148  0407                     l754:
  2149  0407  30FF               	movlw	255
  2150  0408  057D               	andwf	___xxtofl@arg+3,w
  2151  0409  1D03               	btfss	3,2
  2152  040A  2C0C               	goto	u1601
  2153  040B  2C0D               	goto	u1600
  2154  040C                     u1601:
  2155  040C  2BEC               	goto	l1733
  2156  040D                     u1600:
  2157  040D  2C19               	goto	l1741
  2158  040E                     l1739:
  2159  040E  3001               	movlw	1
  2160  040F  02F9               	subwf	___xxtofl@exp,f
  2161  0410  3001               	movlw	1
  2162  0411  00F4               	movwf	??___xxtofl
  2163  0412                     u1615:
  2164  0412  1003               	clrc
  2165  0413  0DFA               	rlf	___xxtofl@arg,f
  2166  0414  0DFB               	rlf	___xxtofl@arg+1,f
  2167  0415  0DFC               	rlf	___xxtofl@arg+2,f
  2168  0416  0DFD               	rlf	___xxtofl@arg+3,f
  2169  0417  0BF4               	decfsz	??___xxtofl,f
  2170  0418  2C12               	goto	u1615
  2171  0419                     l1741:
  2172  0419  1BFC               	btfsc	___xxtofl@arg+2,7
  2173  041A  2C1C               	goto	u1621
  2174  041B  2C1D               	goto	u1620
  2175  041C                     u1621:
  2176  041C  2C23               	goto	l761
  2177  041D                     u1620:
  2178  041D                     l1743:
  2179  041D  3002               	movlw	2
  2180  041E  0279               	subwf	___xxtofl@exp,w
  2181  041F  1803               	skipnc
  2182  0420  2C22               	goto	u1631
  2183  0421  2C23               	goto	u1630
  2184  0422                     u1631:
  2185  0422  2C0E               	goto	l1739
  2186  0423                     u1630:
  2187  0423                     l761:
  2188  0423  1879               	btfsc	___xxtofl@exp,0
  2189  0424  2C26               	goto	u1641
  2190  0425  2C27               	goto	u1640
  2191  0426                     u1641:
  2192  0426  2C2F               	goto	l762
  2193  0427                     u1640:
  2194  0427                     l1745:
  2195  0427  30FF               	movlw	255
  2196  0428  05FA               	andwf	___xxtofl@arg,f
  2197  0429  30FF               	movlw	255
  2198  042A  05FB               	andwf	___xxtofl@arg+1,f
  2199  042B  307F               	movlw	127
  2200  042C  05FC               	andwf	___xxtofl@arg+2,f
  2201  042D  30FF               	movlw	255
  2202  042E  05FD               	andwf	___xxtofl@arg+3,f
  2203  042F                     l762:
  2204  042F  1003               	clrc
  2205  0430  0CF9               	rrf	___xxtofl@exp,f
  2206  0431                     l1747:
  2207  0431  0879               	movf	___xxtofl@exp,w
  2208  0432  00F4               	movwf	??___xxtofl
  2209  0433  01F5               	clrf	??___xxtofl+1
  2210  0434  01F6               	clrf	??___xxtofl+2
  2211  0435  01F7               	clrf	??___xxtofl+3
  2212  0436  3018               	movlw	24
  2213  0437                     u1655:
  2214  0437  1003               	clrc
  2215  0438  0DF4               	rlf	??___xxtofl,f
  2216  0439  0DF5               	rlf	??___xxtofl+1,f
  2217  043A  0DF6               	rlf	??___xxtofl+2,f
  2218  043B  0DF7               	rlf	??___xxtofl+3,f
  2219  043C                     u1650:
  2220  043C  3EFF               	addlw	-1
  2221  043D  1D03               	skipz
  2222  043E  2C37               	goto	u1655
  2223  043F  0874               	movf	??___xxtofl,w
  2224  0440  04FA               	iorwf	___xxtofl@arg,f
  2225  0441  0875               	movf	??___xxtofl+1,w
  2226  0442  04FB               	iorwf	___xxtofl@arg+1,f
  2227  0443  0876               	movf	??___xxtofl+2,w
  2228  0444  04FC               	iorwf	___xxtofl@arg+2,f
  2229  0445  0877               	movf	??___xxtofl+3,w
  2230  0446  04FD               	iorwf	___xxtofl@arg+3,f
  2231  0447                     l1749:
  2232  0447  0878               	movf	___xxtofl@sign,w
  2233  0448  1903               	btfsc	3,2
  2234  0449  2C4B               	goto	u1661
  2235  044A  2C4C               	goto	u1660
  2236  044B                     u1661:
  2237  044B  2C51               	goto	l1755
  2238  044C                     u1660:
  2239  044C                     l1751:
  2240  044C  1FF3               	btfss	___xxtofl@val+3,7
  2241  044D  2C4F               	goto	u1671
  2242  044E  2C50               	goto	u1670
  2243  044F                     u1671:
  2244  044F  2C51               	goto	l1755
  2245  0450                     u1670:
  2246  0450                     l1753:
  2247  0450  17FD               	bsf	___xxtofl@arg+3,7
  2248  0451                     l1755:
  2249  0451  087D               	movf	___xxtofl@arg+3,w
  2250  0452  00F3               	movwf	?___xxtofl+3
  2251  0453  087C               	movf	___xxtofl@arg+2,w
  2252  0454  00F2               	movwf	?___xxtofl+2
  2253  0455  087B               	movf	___xxtofl@arg+1,w
  2254  0456  00F1               	movwf	?___xxtofl+1
  2255  0457  087A               	movf	___xxtofl@arg,w
  2256  0458  00F0               	movwf	?___xxtofl
  2257  0459                     l750:
  2258  0459  0008               	return
  2259  045A                     __end_of___xxtofl:
  2260                           
  2261                           	psect	text9
  2262  061F                     __ptext9:	
  2263 ;; *************** function ___fldiv *****************
  2264 ;; Defined at:
  2265 ;;		line 8 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  a               4    0[BANK0 ] unsigned char 
  2268 ;;  b               4    4[BANK0 ] unsigned char 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  grs             4   20[BANK0 ] unsigned long 
  2271 ;;  rem             4   13[BANK0 ] unsigned long 
  2272 ;;  new_exp         2   18[BANK0 ] int 
  2273 ;;  aexp            1   25[BANK0 ] unsigned char 
  2274 ;;  bexp            1   24[BANK0 ] unsigned char 
  2275 ;;  sign            1   17[BANK0 ] unsigned char 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  4    0[BANK0 ] unsigned char 
  2278 ;; Registers used:
  2279 ;;		wreg, status,2, status,0, btemp+1
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2285 ;;      Params:         0       8       0       0       0
  2286 ;;      Locals:         0      13       0       0       0
  2287 ;;      Temps:          0       5       0       0       0
  2288 ;;      Totals:         0      26       0       0       0
  2289 ;;Total ram usage:       26 bytes
  2290 ;; Hardware stack levels used:    1
  2291 ;; This function calls:
  2292 ;;		Nothing
  2293 ;; This function is called by:
  2294 ;;		_MPU6050_Read
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           
  2299                           ;psect for function ___fldiv
  2300  061F                     ___fldiv:
  2301  061F                     l1573:	
  2302                           ;incstack = 0
  2303                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  2304                           
  2305  061F  1283               	bcf	3,5	;RP0=0, select bank0
  2306  0620  1303               	bcf	3,6	;RP1=0, select bank0
  2307  0621  0827               	movf	___fldiv@b+3,w
  2308  0622  3980               	andlw	128
  2309  0623  00A8               	movwf	??___fldiv
  2310  0624  0828               	movf	??___fldiv,w
  2311  0625  00B1               	movwf	___fldiv@sign
  2312  0626                     l1575:
  2313  0626  0827               	movf	___fldiv@b+3,w
  2314  0627  00A8               	movwf	??___fldiv
  2315  0628  0728               	addwf	??___fldiv,w
  2316  0629  00A9               	movwf	??___fldiv+1
  2317  062A  0829               	movf	??___fldiv+1,w
  2318  062B  00B8               	movwf	___fldiv@bexp
  2319  062C                     l1577:
  2320  062C  1FA6               	btfss	___fldiv@b+2,7
  2321  062D  2E2F               	goto	u1251
  2322  062E  2E30               	goto	u1250
  2323  062F                     u1251:
  2324  062F  2E31               	goto	l1581
  2325  0630                     u1250:
  2326  0630                     l1579:
  2327  0630  1438               	bsf	___fldiv@bexp,0
  2328  0631                     l1581:
  2329  0631  0838               	movf	___fldiv@bexp,w
  2330  0632  1903               	btfsc	3,2
  2331  0633  2E35               	goto	u1261
  2332  0634  2E36               	goto	u1260
  2333  0635                     u1261:
  2334  0635  2E46               	goto	l1591
  2335  0636                     u1260:
  2336  0636                     l1583:
  2337  0636  0A38               	incf	___fldiv@bexp,w
  2338  0637  1D03               	btfss	3,2
  2339  0638  2E3A               	goto	u1271
  2340  0639  2E3B               	goto	u1270
  2341  063A                     u1271:
  2342  063A  2E43               	goto	l1587
  2343  063B                     u1270:
  2344  063B                     l1585:
  2345  063B  3000               	movlw	0
  2346  063C  00A7               	movwf	___fldiv@b+3
  2347  063D  3000               	movlw	0
  2348  063E  00A6               	movwf	___fldiv@b+2
  2349  063F  3000               	movlw	0
  2350  0640  00A5               	movwf	___fldiv@b+1
  2351  0641  3000               	movlw	0
  2352  0642  00A4               	movwf	___fldiv@b
  2353  0643                     l1587:
  2354  0643  17A6               	bsf	___fldiv@b+2,7
  2355  0644                     l1589:
  2356  0644  01A7               	clrf	___fldiv@b+3
  2357  0645  2E4E               	goto	l1593
  2358  0646                     l1591:
  2359  0646  3000               	movlw	0
  2360  0647  00A7               	movwf	___fldiv@b+3
  2361  0648  3000               	movlw	0
  2362  0649  00A6               	movwf	___fldiv@b+2
  2363  064A  3000               	movlw	0
  2364  064B  00A5               	movwf	___fldiv@b+1
  2365  064C  3000               	movlw	0
  2366  064D  00A4               	movwf	___fldiv@b
  2367  064E                     l1593:
  2368  064E  0823               	movf	___fldiv@a+3,w
  2369  064F  3980               	andlw	128
  2370  0650  00A8               	movwf	??___fldiv
  2371  0651  0828               	movf	??___fldiv,w
  2372  0652  06B1               	xorwf	___fldiv@sign,f
  2373  0653                     l1595:
  2374  0653  0823               	movf	___fldiv@a+3,w
  2375  0654  00A8               	movwf	??___fldiv
  2376  0655  0728               	addwf	??___fldiv,w
  2377  0656  00A9               	movwf	??___fldiv+1
  2378  0657  0829               	movf	??___fldiv+1,w
  2379  0658  00B9               	movwf	___fldiv@aexp
  2380  0659                     l1597:
  2381  0659  1FA2               	btfss	___fldiv@a+2,7
  2382  065A  2E5C               	goto	u1281
  2383  065B  2E5D               	goto	u1280
  2384  065C                     u1281:
  2385  065C  2E5E               	goto	l1601
  2386  065D                     u1280:
  2387  065D                     l1599:
  2388  065D  1439               	bsf	___fldiv@aexp,0
  2389  065E                     l1601:
  2390  065E  0839               	movf	___fldiv@aexp,w
  2391  065F  1903               	btfsc	3,2
  2392  0660  2E62               	goto	u1291
  2393  0661  2E63               	goto	u1290
  2394  0662                     u1291:
  2395  0662  2E73               	goto	l1611
  2396  0663                     u1290:
  2397  0663                     l1603:
  2398  0663  0A39               	incf	___fldiv@aexp,w
  2399  0664  1D03               	btfss	3,2
  2400  0665  2E67               	goto	u1301
  2401  0666  2E68               	goto	u1300
  2402  0667                     u1301:
  2403  0667  2E70               	goto	l1607
  2404  0668                     u1300:
  2405  0668                     l1605:
  2406  0668  3000               	movlw	0
  2407  0669  00A3               	movwf	___fldiv@a+3
  2408  066A  3000               	movlw	0
  2409  066B  00A2               	movwf	___fldiv@a+2
  2410  066C  3000               	movlw	0
  2411  066D  00A1               	movwf	___fldiv@a+1
  2412  066E  3000               	movlw	0
  2413  066F  00A0               	movwf	___fldiv@a
  2414  0670                     l1607:
  2415  0670  17A2               	bsf	___fldiv@a+2,7
  2416  0671                     l1609:
  2417  0671  01A3               	clrf	___fldiv@a+3
  2418  0672  2E7B               	goto	l664
  2419  0673                     l1611:
  2420  0673  3000               	movlw	0
  2421  0674  00A3               	movwf	___fldiv@a+3
  2422  0675  3000               	movlw	0
  2423  0676  00A2               	movwf	___fldiv@a+2
  2424  0677  3000               	movlw	0
  2425  0678  00A1               	movwf	___fldiv@a+1
  2426  0679  3000               	movlw	0
  2427  067A  00A0               	movwf	___fldiv@a
  2428  067B                     l664:
  2429  067B  0823               	movf	___fldiv@a+3,w
  2430  067C  0422               	iorwf	___fldiv@a+2,w
  2431  067D  0421               	iorwf	___fldiv@a+1,w
  2432  067E  0420               	iorwf	___fldiv@a,w
  2433  067F  1D03               	skipz
  2434  0680  2E82               	goto	u1311
  2435  0681  2E83               	goto	u1310
  2436  0682                     u1311:
  2437  0682  2E9C               	goto	l1621
  2438  0683                     u1310:
  2439  0683                     l1613:
  2440  0683  3000               	movlw	0
  2441  0684  00A7               	movwf	___fldiv@b+3
  2442  0685  3000               	movlw	0
  2443  0686  00A6               	movwf	___fldiv@b+2
  2444  0687  3000               	movlw	0
  2445  0688  00A5               	movwf	___fldiv@b+1
  2446  0689  3000               	movlw	0
  2447  068A  00A4               	movwf	___fldiv@b
  2448  068B  3080               	movlw	128
  2449  068C  04A6               	iorwf	___fldiv@b+2,f
  2450  068D  307F               	movlw	127
  2451  068E  04A7               	iorwf	___fldiv@b+3,f
  2452  068F                     l1615:
  2453  068F  0831               	movf	___fldiv@sign,w
  2454  0690  00A8               	movwf	??___fldiv
  2455  0691  0828               	movf	??___fldiv,w
  2456  0692  04A7               	iorwf	___fldiv@b+3,f
  2457  0693                     l1617:
  2458  0693  0827               	movf	___fldiv@b+3,w
  2459  0694  00A3               	movwf	?___fldiv+3
  2460  0695  0826               	movf	___fldiv@b+2,w
  2461  0696  00A2               	movwf	?___fldiv+2
  2462  0697  0825               	movf	___fldiv@b+1,w
  2463  0698  00A1               	movwf	?___fldiv+1
  2464  0699  0824               	movf	___fldiv@b,w
  2465  069A  00A0               	movwf	?___fldiv
  2466  069B  2FFB               	goto	l666
  2467  069C                     l1621:
  2468  069C  0838               	movf	___fldiv@bexp,w
  2469  069D  1D03               	btfss	3,2
  2470  069E  2EA0               	goto	u1321
  2471  069F  2EA1               	goto	u1320
  2472  06A0                     u1321:
  2473  06A0  2EAA               	goto	l1627
  2474  06A1                     u1320:
  2475  06A1                     l1623:
  2476  06A1  3000               	movlw	0
  2477  06A2  00A3               	movwf	?___fldiv+3
  2478  06A3  3000               	movlw	0
  2479  06A4  00A2               	movwf	?___fldiv+2
  2480  06A5  3000               	movlw	0
  2481  06A6  00A1               	movwf	?___fldiv+1
  2482  06A7  3000               	movlw	0
  2483  06A8  00A0               	movwf	?___fldiv
  2484  06A9  2FFB               	goto	l666
  2485  06AA                     l1627:
  2486  06AA  0838               	movf	___fldiv@bexp,w
  2487  06AB  00A8               	movwf	??___fldiv
  2488  06AC  01A9               	clrf	??___fldiv+1
  2489  06AD  0829               	movf	??___fldiv+1,w
  2490  06AE  00AB               	movwf	??___fldiv+3
  2491  06AF  0839               	movf	___fldiv@aexp,w
  2492  06B0  0228               	subwf	??___fldiv,w
  2493  06B1  00AA               	movwf	??___fldiv+2
  2494  06B2  1C03               	skipc
  2495  06B3  03AB               	decf	??___fldiv+3,f
  2496  06B4  082A               	movf	??___fldiv+2,w
  2497  06B5  3E7F               	addlw	127
  2498  06B6  00B2               	movwf	___fldiv@new_exp
  2499  06B7  082B               	movf	??___fldiv+3,w
  2500  06B8  1803               	skipnc
  2501  06B9  3E01               	addlw	1
  2502  06BA  3E00               	addlw	0
  2503  06BB  00B3               	movwf	___fldiv@new_exp+1
  2504  06BC                     l1629:
  2505  06BC  0827               	movf	___fldiv@b+3,w
  2506  06BD  00B0               	movwf	___fldiv@rem+3
  2507  06BE  0826               	movf	___fldiv@b+2,w
  2508  06BF  00AF               	movwf	___fldiv@rem+2
  2509  06C0  0825               	movf	___fldiv@b+1,w
  2510  06C1  00AE               	movwf	___fldiv@rem+1
  2511  06C2  0824               	movf	___fldiv@b,w
  2512  06C3  00AD               	movwf	___fldiv@rem
  2513  06C4                     l1631:
  2514  06C4  3000               	movlw	0
  2515  06C5  00A7               	movwf	___fldiv@b+3
  2516  06C6  3000               	movlw	0
  2517  06C7  00A6               	movwf	___fldiv@b+2
  2518  06C8  3000               	movlw	0
  2519  06C9  00A5               	movwf	___fldiv@b+1
  2520  06CA  3000               	movlw	0
  2521  06CB  00A4               	movwf	___fldiv@b
  2522  06CC                     l1633:
  2523  06CC  3000               	movlw	0
  2524  06CD  00B7               	movwf	___fldiv@grs+3
  2525  06CE  3000               	movlw	0
  2526  06CF  00B6               	movwf	___fldiv@grs+2
  2527  06D0  3000               	movlw	0
  2528  06D1  00B5               	movwf	___fldiv@grs+1
  2529  06D2  3000               	movlw	0
  2530  06D3  00B4               	movwf	___fldiv@grs
  2531  06D4                     l1635:
  2532  06D4  01B9               	clrf	___fldiv@aexp
  2533  06D5  2F20               	goto	l1655
  2534  06D6                     l1637:
  2535  06D6  0839               	movf	___fldiv@aexp,w
  2536  06D7  1903               	btfsc	3,2
  2537  06D8  2EDA               	goto	u1331
  2538  06D9  2EDB               	goto	u1330
  2539  06DA                     u1331:
  2540  06DA  2EFB               	goto	l1647
  2541  06DB                     u1330:
  2542  06DB                     l1639:
  2543  06DB  3001               	movlw	1
  2544  06DC  00A8               	movwf	??___fldiv
  2545  06DD                     u1345:
  2546  06DD  1003               	clrc
  2547  06DE  0DAD               	rlf	___fldiv@rem,f
  2548  06DF  0DAE               	rlf	___fldiv@rem+1,f
  2549  06E0  0DAF               	rlf	___fldiv@rem+2,f
  2550  06E1  0DB0               	rlf	___fldiv@rem+3,f
  2551  06E2  0BA8               	decfsz	??___fldiv,f
  2552  06E3  2EDD               	goto	u1345
  2553  06E4  3001               	movlw	1
  2554  06E5  00A8               	movwf	??___fldiv
  2555  06E6                     u1355:
  2556  06E6  1003               	clrc
  2557  06E7  0DA4               	rlf	___fldiv@b,f
  2558  06E8  0DA5               	rlf	___fldiv@b+1,f
  2559  06E9  0DA6               	rlf	___fldiv@b+2,f
  2560  06EA  0DA7               	rlf	___fldiv@b+3,f
  2561  06EB  0BA8               	decfsz	??___fldiv,f
  2562  06EC  2EE6               	goto	u1355
  2563  06ED                     l1641:
  2564  06ED  1FB7               	btfss	___fldiv@grs+3,7
  2565  06EE  2EF0               	goto	u1361
  2566  06EF  2EF1               	goto	u1360
  2567  06F0                     u1361:
  2568  06F0  2EF2               	goto	l1645
  2569  06F1                     u1360:
  2570  06F1                     l1643:
  2571  06F1  1424               	bsf	___fldiv@b,0
  2572  06F2                     l1645:
  2573  06F2  3001               	movlw	1
  2574  06F3  00A8               	movwf	??___fldiv
  2575  06F4                     u1375:
  2576  06F4  1003               	clrc
  2577  06F5  0DB4               	rlf	___fldiv@grs,f
  2578  06F6  0DB5               	rlf	___fldiv@grs+1,f
  2579  06F7  0DB6               	rlf	___fldiv@grs+2,f
  2580  06F8  0DB7               	rlf	___fldiv@grs+3,f
  2581  06F9  0BA8               	decfsz	??___fldiv,f
  2582  06FA  2EF4               	goto	u1375
  2583  06FB                     l1647:
  2584  06FB  0823               	movf	___fldiv@a+3,w
  2585  06FC  0230               	subwf	___fldiv@rem+3,w
  2586  06FD  1D03               	skipz
  2587  06FE  2F09               	goto	u1385
  2588  06FF  0822               	movf	___fldiv@a+2,w
  2589  0700  022F               	subwf	___fldiv@rem+2,w
  2590  0701  1D03               	skipz
  2591  0702  2F09               	goto	u1385
  2592  0703  0821               	movf	___fldiv@a+1,w
  2593  0704  022E               	subwf	___fldiv@rem+1,w
  2594  0705  1D03               	skipz
  2595  0706  2F09               	goto	u1385
  2596  0707  0820               	movf	___fldiv@a,w
  2597  0708  022D               	subwf	___fldiv@rem,w
  2598  0709                     u1385:
  2599  0709  1C03               	skipc
  2600  070A  2F0C               	goto	u1381
  2601  070B  2F0D               	goto	u1380
  2602  070C                     u1381:
  2603  070C  2F1C               	goto	l1653
  2604  070D                     u1380:
  2605  070D                     l1649:
  2606  070D  1737               	bsf	___fldiv@grs+3,6
  2607  070E                     l1651:
  2608  070E  0820               	movf	___fldiv@a,w
  2609  070F  02AD               	subwf	___fldiv@rem,f
  2610  0710  0821               	movf	___fldiv@a+1,w
  2611  0711  1C03               	skipc
  2612  0712  0F21               	incfsz	___fldiv@a+1,w
  2613  0713  02AE               	subwf	___fldiv@rem+1,f
  2614  0714  0822               	movf	___fldiv@a+2,w
  2615  0715  1C03               	skipc
  2616  0716  0F22               	incfsz	___fldiv@a+2,w
  2617  0717  02AF               	subwf	___fldiv@rem+2,f
  2618  0718  0823               	movf	___fldiv@a+3,w
  2619  0719  1C03               	skipc
  2620  071A  0F23               	incfsz	___fldiv@a+3,w
  2621  071B  02B0               	subwf	___fldiv@rem+3,f
  2622  071C                     l1653:
  2623  071C  3001               	movlw	1
  2624  071D  00A8               	movwf	??___fldiv
  2625  071E  0828               	movf	??___fldiv,w
  2626  071F  07B9               	addwf	___fldiv@aexp,f
  2627  0720                     l1655:
  2628  0720  301A               	movlw	26
  2629  0721  0239               	subwf	___fldiv@aexp,w
  2630  0722  1C03               	skipc
  2631  0723  2F25               	goto	u1391
  2632  0724  2F26               	goto	u1390
  2633  0725                     u1391:
  2634  0725  2ED6               	goto	l1637
  2635  0726                     u1390:
  2636  0726                     l1657:
  2637  0726  0830               	movf	___fldiv@rem+3,w
  2638  0727  042F               	iorwf	___fldiv@rem+2,w
  2639  0728  042E               	iorwf	___fldiv@rem+1,w
  2640  0729  042D               	iorwf	___fldiv@rem,w
  2641  072A  1903               	skipnz
  2642  072B  2F2D               	goto	u1401
  2643  072C  2F2E               	goto	u1400
  2644  072D                     u1401:
  2645  072D  2F4D               	goto	l1671
  2646  072E                     u1400:
  2647  072E                     l1659:
  2648  072E  1434               	bsf	___fldiv@grs,0
  2649  072F  2F4D               	goto	l1671
  2650  0730                     l1661:
  2651  0730  3001               	movlw	1
  2652  0731  00A8               	movwf	??___fldiv
  2653  0732                     u1415:
  2654  0732  1003               	clrc
  2655  0733  0DA4               	rlf	___fldiv@b,f
  2656  0734  0DA5               	rlf	___fldiv@b+1,f
  2657  0735  0DA6               	rlf	___fldiv@b+2,f
  2658  0736  0DA7               	rlf	___fldiv@b+3,f
  2659  0737  0BA8               	decfsz	??___fldiv,f
  2660  0738  2F32               	goto	u1415
  2661  0739                     l1663:
  2662  0739  1FB7               	btfss	___fldiv@grs+3,7
  2663  073A  2F3C               	goto	u1421
  2664  073B  2F3D               	goto	u1420
  2665  073C                     u1421:
  2666  073C  2F3E               	goto	l1667
  2667  073D                     u1420:
  2668  073D                     l1665:
  2669  073D  1424               	bsf	___fldiv@b,0
  2670  073E                     l1667:
  2671  073E  3001               	movlw	1
  2672  073F  00A8               	movwf	??___fldiv
  2673  0740                     u1435:
  2674  0740  1003               	clrc
  2675  0741  0DB4               	rlf	___fldiv@grs,f
  2676  0742  0DB5               	rlf	___fldiv@grs+1,f
  2677  0743  0DB6               	rlf	___fldiv@grs+2,f
  2678  0744  0DB7               	rlf	___fldiv@grs+3,f
  2679  0745  0BA8               	decfsz	??___fldiv,f
  2680  0746  2F40               	goto	u1435
  2681  0747                     l1669:
  2682  0747  30FF               	movlw	255
  2683  0748  07B2               	addwf	___fldiv@new_exp,f
  2684  0749  1803               	skipnc
  2685  074A  0AB3               	incf	___fldiv@new_exp+1,f
  2686  074B  30FF               	movlw	255
  2687  074C  07B3               	addwf	___fldiv@new_exp+1,f
  2688  074D                     l1671:
  2689  074D  1FA6               	btfss	___fldiv@b+2,7
  2690  074E  2F50               	goto	u1441
  2691  074F  2F51               	goto	u1440
  2692  0750                     u1441:
  2693  0750  2F30               	goto	l1661
  2694  0751                     u1440:
  2695  0751                     l1673:
  2696  0751  01B9               	clrf	___fldiv@aexp
  2697  0752                     l1675:
  2698  0752  1FB7               	btfss	___fldiv@grs+3,7
  2699  0753  2F55               	goto	u1451
  2700  0754  2F56               	goto	u1450
  2701  0755                     u1451:
  2702  0755  2F72               	goto	l1683
  2703  0756                     u1450:
  2704  0756                     l1677:
  2705  0756  30FF               	movlw	255
  2706  0757  0534               	andwf	___fldiv@grs,w
  2707  0758  00A8               	movwf	??___fldiv
  2708  0759  30FF               	movlw	255
  2709  075A  0535               	andwf	___fldiv@grs+1,w
  2710  075B  00A9               	movwf	??___fldiv+1
  2711  075C  30FF               	movlw	255
  2712  075D  0536               	andwf	___fldiv@grs+2,w
  2713  075E  00AA               	movwf	??___fldiv+2
  2714  075F  307F               	movlw	127
  2715  0760  0537               	andwf	___fldiv@grs+3,w
  2716  0761  00AB               	movwf	??___fldiv+3
  2717  0762  082B               	movf	??___fldiv+3,w
  2718  0763  042A               	iorwf	??___fldiv+2,w
  2719  0764  0429               	iorwf	??___fldiv+1,w
  2720  0765  0428               	iorwf	??___fldiv,w
  2721  0766  1903               	skipnz
  2722  0767  2F69               	goto	u1461
  2723  0768  2F6A               	goto	u1460
  2724  0769                     u1461:
  2725  0769  2F6D               	goto	l680
  2726  076A                     u1460:
  2727  076A                     l1679:
  2728  076A  01B9               	clrf	___fldiv@aexp
  2729  076B  0AB9               	incf	___fldiv@aexp,f
  2730  076C  2F72               	goto	l1683
  2731  076D                     l680:
  2732  076D  1C24               	btfss	___fldiv@b,0
  2733  076E  2F70               	goto	u1471
  2734  076F  2F71               	goto	u1470
  2735  0770                     u1471:
  2736  0770  2F72               	goto	l1683
  2737  0771                     u1470:
  2738  0771  2F6A               	goto	l1679
  2739  0772                     l1683:
  2740  0772  0839               	movf	___fldiv@aexp,w
  2741  0773  1903               	btfsc	3,2
  2742  0774  2F76               	goto	u1481
  2743  0775  2F77               	goto	u1480
  2744  0776                     u1481:
  2745  0776  2FA8               	goto	l1693
  2746  0777                     u1480:
  2747  0777                     l1685:
  2748  0777  3001               	movlw	1
  2749  0778  07A4               	addwf	___fldiv@b,f
  2750  0779  3000               	movlw	0
  2751  077A  1803               	skipnc
  2752  077B  3001               	movlw	1
  2753  077C  07A5               	addwf	___fldiv@b+1,f
  2754  077D  3000               	movlw	0
  2755  077E  1803               	skipnc
  2756  077F  3001               	movlw	1
  2757  0780  07A6               	addwf	___fldiv@b+2,f
  2758  0781  3000               	movlw	0
  2759  0782  1803               	skipnc
  2760  0783  3001               	movlw	1
  2761  0784  07A7               	addwf	___fldiv@b+3,f
  2762  0785                     l1687:
  2763  0785  1C27               	btfss	___fldiv@b+3,0
  2764  0786  2F88               	goto	u1491
  2765  0787  2F89               	goto	u1490
  2766  0788                     u1491:
  2767  0788  2FA8               	goto	l1693
  2768  0789                     u1490:
  2769  0789                     l1689:
  2770  0789  0824               	movf	___fldiv@b,w
  2771  078A  00A8               	movwf	??___fldiv
  2772  078B  0825               	movf	___fldiv@b+1,w
  2773  078C  00A9               	movwf	??___fldiv+1
  2774  078D  0826               	movf	___fldiv@b+2,w
  2775  078E  00AA               	movwf	??___fldiv+2
  2776  078F  0827               	movf	___fldiv@b+3,w
  2777  0790  00AB               	movwf	??___fldiv+3
  2778  0791  3001               	movlw	1
  2779  0792  00AC               	movwf	??___fldiv+4
  2780  0793                     u1505:
  2781  0793  0D2B               	rlf	??___fldiv+3,w
  2782  0794  0CAB               	rrf	??___fldiv+3,f
  2783  0795  0CAA               	rrf	??___fldiv+2,f
  2784  0796  0CA9               	rrf	??___fldiv+1,f
  2785  0797  0CA8               	rrf	??___fldiv,f
  2786  0798                     u1500:
  2787  0798  0BAC               	decfsz	??___fldiv+4,f
  2788  0799  2F93               	goto	u1505
  2789  079A  082B               	movf	??___fldiv+3,w
  2790  079B  00A7               	movwf	___fldiv@b+3
  2791  079C  082A               	movf	??___fldiv+2,w
  2792  079D  00A6               	movwf	___fldiv@b+2
  2793  079E  0829               	movf	??___fldiv+1,w
  2794  079F  00A5               	movwf	___fldiv@b+1
  2795  07A0  0828               	movf	??___fldiv,w
  2796  07A1  00A4               	movwf	___fldiv@b
  2797  07A2                     l1691:
  2798  07A2  3001               	movlw	1
  2799  07A3  07B2               	addwf	___fldiv@new_exp,f
  2800  07A4  1803               	skipnc
  2801  07A5  0AB3               	incf	___fldiv@new_exp+1,f
  2802  07A6  3000               	movlw	0
  2803  07A7  07B3               	addwf	___fldiv@new_exp+1,f
  2804  07A8                     l1693:
  2805  07A8  0833               	movf	___fldiv@new_exp+1,w
  2806  07A9  3A80               	xorlw	128
  2807  07AA  00FF               	movwf	btemp+1
  2808  07AB  3080               	movlw	128
  2809  07AC  027F               	subwf	btemp+1,w
  2810  07AD  1D03               	skipz
  2811  07AE  2FB1               	goto	u1515
  2812  07AF  30FF               	movlw	255
  2813  07B0  0232               	subwf	___fldiv@new_exp,w
  2814  07B1                     u1515:
  2815  07B1  1C03               	skipc
  2816  07B2  2FB4               	goto	u1511
  2817  07B3  2FB5               	goto	u1510
  2818  07B4                     u1511:
  2819  07B4  2FC3               	goto	l1697
  2820  07B5                     u1510:
  2821  07B5                     l1695:
  2822  07B5  30FF               	movlw	255
  2823  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  2824  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  2825  07B8  00B2               	movwf	___fldiv@new_exp
  2826  07B9  3000               	movlw	0
  2827  07BA  00B3               	movwf	___fldiv@new_exp+1
  2828  07BB  3000               	movlw	0
  2829  07BC  00A7               	movwf	___fldiv@b+3
  2830  07BD  3000               	movlw	0
  2831  07BE  00A6               	movwf	___fldiv@b+2
  2832  07BF  3000               	movlw	0
  2833  07C0  00A5               	movwf	___fldiv@b+1
  2834  07C1  3000               	movlw	0
  2835  07C2  00A4               	movwf	___fldiv@b
  2836  07C3                     l1697:
  2837  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  2838  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  2839  07C5  0833               	movf	___fldiv@new_exp+1,w
  2840  07C6  3A80               	xorlw	128
  2841  07C7  00FF               	movwf	btemp+1
  2842  07C8  3080               	movlw	128
  2843  07C9  027F               	subwf	btemp+1,w
  2844  07CA  1D03               	skipz
  2845  07CB  2FCE               	goto	u1525
  2846  07CC  3001               	movlw	1
  2847  07CD  0232               	subwf	___fldiv@new_exp,w
  2848  07CE                     u1525:
  2849  07CE  1803               	skipnc
  2850  07CF  2FD1               	goto	u1521
  2851  07D0  2FD2               	goto	u1520
  2852  07D1                     u1521:
  2853  07D1  2FDF               	goto	l686
  2854  07D2                     u1520:
  2855  07D2                     l1699:
  2856  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  2857  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  2858  07D4  01B2               	clrf	___fldiv@new_exp
  2859  07D5  01B3               	clrf	___fldiv@new_exp+1
  2860  07D6                     l1701:
  2861  07D6  3000               	movlw	0
  2862  07D7  00A7               	movwf	___fldiv@b+3
  2863  07D8  3000               	movlw	0
  2864  07D9  00A6               	movwf	___fldiv@b+2
  2865  07DA  3000               	movlw	0
  2866  07DB  00A5               	movwf	___fldiv@b+1
  2867  07DC  3000               	movlw	0
  2868  07DD  00A4               	movwf	___fldiv@b
  2869  07DE                     l1703:
  2870  07DE  01B1               	clrf	___fldiv@sign
  2871  07DF                     l686:
  2872  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  2873  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  2874  07E1  0832               	movf	___fldiv@new_exp,w
  2875  07E2  00A8               	movwf	??___fldiv
  2876  07E3  0828               	movf	??___fldiv,w
  2877  07E4  00B8               	movwf	___fldiv@bexp
  2878  07E5                     l1705:
  2879  07E5  1C38               	btfss	___fldiv@bexp,0
  2880  07E6  2FE8               	goto	u1531
  2881  07E7  2FE9               	goto	u1530
  2882  07E8                     u1531:
  2883  07E8  2FEB               	goto	l1709
  2884  07E9                     u1530:
  2885  07E9                     l1707:
  2886  07E9  17A6               	bsf	___fldiv@b+2,7
  2887  07EA  2FEF               	goto	l688
  2888  07EB                     l1709:
  2889  07EB  307F               	movlw	127
  2890  07EC  00A8               	movwf	??___fldiv
  2891  07ED  0828               	movf	??___fldiv,w
  2892  07EE  05A6               	andwf	___fldiv@b+2,f
  2893  07EF                     l688:
  2894  07EF  0838               	movf	___fldiv@bexp,w
  2895  07F0  00A8               	movwf	??___fldiv
  2896  07F1  1003               	clrc
  2897  07F2  0C28               	rrf	??___fldiv,w
  2898  07F3  00A9               	movwf	??___fldiv+1
  2899  07F4  0829               	movf	??___fldiv+1,w
  2900  07F5  00A7               	movwf	___fldiv@b+3
  2901  07F6  0831               	movf	___fldiv@sign,w
  2902  07F7  00A8               	movwf	??___fldiv
  2903  07F8  0828               	movf	??___fldiv,w
  2904  07F9  04A7               	iorwf	___fldiv@b+3,f
  2905  07FA  2E93               	goto	l1617
  2906  07FB                     l666:
  2907  07FB  0008               	return
  2908  07FC                     __end_of___fldiv:
  2909                           
  2910                           	psect	text10
  2911  029C                     __ptext10:	
  2912 ;; *************** function ___awdiv *****************
  2913 ;; Defined at:
  2914 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  divisor         2    0[COMMON] int 
  2917 ;;  dividend        2    2[COMMON] int 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  quotient        2    7[COMMON] int 
  2920 ;;  sign            1    6[COMMON] unsigned char 
  2921 ;;  counter         1    5[COMMON] unsigned char 
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  2    0[COMMON] int 
  2924 ;; Registers used:
  2925 ;;		wreg, status,2, status,0
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2931 ;;      Params:         4       0       0       0       0
  2932 ;;      Locals:         4       0       0       0       0
  2933 ;;      Temps:          1       0       0       0       0
  2934 ;;      Totals:         9       0       0       0       0
  2935 ;;Total ram usage:        9 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_MPU6050_Read
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           
  2945                           ;psect for function ___awdiv
  2946  029C                     ___awdiv:
  2947  029C                     l1529:	
  2948                           ;incstack = 0
  2949                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2950                           
  2951  029C  01F6               	clrf	___awdiv@sign
  2952  029D                     l1531:
  2953  029D  1FF1               	btfss	___awdiv@divisor+1,7
  2954  029E  2AA0               	goto	u1151
  2955  029F  2AA1               	goto	u1150
  2956  02A0                     u1151:
  2957  02A0  2AA8               	goto	l1537
  2958  02A1                     u1150:
  2959  02A1                     l1533:
  2960  02A1  09F0               	comf	___awdiv@divisor,f
  2961  02A2  09F1               	comf	___awdiv@divisor+1,f
  2962  02A3  0AF0               	incf	___awdiv@divisor,f
  2963  02A4  1903               	skipnz
  2964  02A5  0AF1               	incf	___awdiv@divisor+1,f
  2965  02A6                     l1535:
  2966  02A6  01F6               	clrf	___awdiv@sign
  2967  02A7  0AF6               	incf	___awdiv@sign,f
  2968  02A8                     l1537:
  2969  02A8  1FF3               	btfss	___awdiv@dividend+1,7
  2970  02A9  2AAB               	goto	u1161
  2971  02AA  2AAC               	goto	u1160
  2972  02AB                     u1161:
  2973  02AB  2AB5               	goto	l1543
  2974  02AC                     u1160:
  2975  02AC                     l1539:
  2976  02AC  09F2               	comf	___awdiv@dividend,f
  2977  02AD  09F3               	comf	___awdiv@dividend+1,f
  2978  02AE  0AF2               	incf	___awdiv@dividend,f
  2979  02AF  1903               	skipnz
  2980  02B0  0AF3               	incf	___awdiv@dividend+1,f
  2981  02B1                     l1541:
  2982  02B1  3001               	movlw	1
  2983  02B2  00F4               	movwf	??___awdiv
  2984  02B3  0874               	movf	??___awdiv,w
  2985  02B4  06F6               	xorwf	___awdiv@sign,f
  2986  02B5                     l1543:
  2987  02B5  01F7               	clrf	___awdiv@quotient
  2988  02B6  01F8               	clrf	___awdiv@quotient+1
  2989  02B7                     l1545:
  2990  02B7  0870               	movf	___awdiv@divisor,w
  2991  02B8  0471               	iorwf	___awdiv@divisor+1,w
  2992  02B9  1903               	btfsc	3,2
  2993  02BA  2ABC               	goto	u1171
  2994  02BB  2ABD               	goto	u1170
  2995  02BC                     u1171:
  2996  02BC  2AF4               	goto	l1565
  2997  02BD                     u1170:
  2998  02BD                     l1547:
  2999  02BD  01F5               	clrf	___awdiv@counter
  3000  02BE  0AF5               	incf	___awdiv@counter,f
  3001  02BF  2ACB               	goto	l1553
  3002  02C0                     l1549:
  3003  02C0  3001               	movlw	1
  3004  02C1                     u1185:
  3005  02C1  1003               	clrc
  3006  02C2  0DF0               	rlf	___awdiv@divisor,f
  3007  02C3  0DF1               	rlf	___awdiv@divisor+1,f
  3008  02C4  3EFF               	addlw	-1
  3009  02C5  1D03               	skipz
  3010  02C6  2AC1               	goto	u1185
  3011  02C7                     l1551:
  3012  02C7  3001               	movlw	1
  3013  02C8  00F4               	movwf	??___awdiv
  3014  02C9  0874               	movf	??___awdiv,w
  3015  02CA  07F5               	addwf	___awdiv@counter,f
  3016  02CB                     l1553:
  3017  02CB  1FF1               	btfss	___awdiv@divisor+1,7
  3018  02CC  2ACE               	goto	u1191
  3019  02CD  2ACF               	goto	u1190
  3020  02CE                     u1191:
  3021  02CE  2AC0               	goto	l1549
  3022  02CF                     u1190:
  3023  02CF                     l1555:
  3024  02CF  3001               	movlw	1
  3025  02D0                     u1205:
  3026  02D0  1003               	clrc
  3027  02D1  0DF7               	rlf	___awdiv@quotient,f
  3028  02D2  0DF8               	rlf	___awdiv@quotient+1,f
  3029  02D3  3EFF               	addlw	-1
  3030  02D4  1D03               	skipz
  3031  02D5  2AD0               	goto	u1205
  3032  02D6  0871               	movf	___awdiv@divisor+1,w
  3033  02D7  0273               	subwf	___awdiv@dividend+1,w
  3034  02D8  1D03               	skipz
  3035  02D9  2ADC               	goto	u1215
  3036  02DA  0870               	movf	___awdiv@divisor,w
  3037  02DB  0272               	subwf	___awdiv@dividend,w
  3038  02DC                     u1215:
  3039  02DC  1C03               	skipc
  3040  02DD  2ADF               	goto	u1211
  3041  02DE  2AE0               	goto	u1210
  3042  02DF                     u1211:
  3043  02DF  2AE7               	goto	l1561
  3044  02E0                     u1210:
  3045  02E0                     l1557:
  3046  02E0  0870               	movf	___awdiv@divisor,w
  3047  02E1  02F2               	subwf	___awdiv@dividend,f
  3048  02E2  0871               	movf	___awdiv@divisor+1,w
  3049  02E3  1C03               	skipc
  3050  02E4  03F3               	decf	___awdiv@dividend+1,f
  3051  02E5  02F3               	subwf	___awdiv@dividend+1,f
  3052  02E6                     l1559:
  3053  02E6  1477               	bsf	___awdiv@quotient,0
  3054  02E7                     l1561:
  3055  02E7  3001               	movlw	1
  3056  02E8                     u1225:
  3057  02E8  1003               	clrc
  3058  02E9  0CF1               	rrf	___awdiv@divisor+1,f
  3059  02EA  0CF0               	rrf	___awdiv@divisor,f
  3060  02EB  3EFF               	addlw	-1
  3061  02EC  1D03               	skipz
  3062  02ED  2AE8               	goto	u1225
  3063  02EE                     l1563:
  3064  02EE  3001               	movlw	1
  3065  02EF  02F5               	subwf	___awdiv@counter,f
  3066  02F0  1D03               	btfss	3,2
  3067  02F1  2AF3               	goto	u1231
  3068  02F2  2AF4               	goto	u1230
  3069  02F3                     u1231:
  3070  02F3  2ACF               	goto	l1555
  3071  02F4                     u1230:
  3072  02F4                     l1565:
  3073  02F4  0876               	movf	___awdiv@sign,w
  3074  02F5  1903               	btfsc	3,2
  3075  02F6  2AF8               	goto	u1241
  3076  02F7  2AF9               	goto	u1240
  3077  02F8                     u1241:
  3078  02F8  2AFE               	goto	l1569
  3079  02F9                     u1240:
  3080  02F9                     l1567:
  3081  02F9  09F7               	comf	___awdiv@quotient,f
  3082  02FA  09F8               	comf	___awdiv@quotient+1,f
  3083  02FB  0AF7               	incf	___awdiv@quotient,f
  3084  02FC  1903               	skipnz
  3085  02FD  0AF8               	incf	___awdiv@quotient+1,f
  3086  02FE                     l1569:
  3087  02FE  0878               	movf	___awdiv@quotient+1,w
  3088  02FF  00F1               	movwf	?___awdiv+1
  3089  0300  0877               	movf	___awdiv@quotient,w
  3090  0301  00F0               	movwf	?___awdiv
  3091  0302                     l468:
  3092  0302  0008               	return
  3093  0303                     __end_of___awdiv:
  3094                           
  3095                           	psect	text11
  3096  01A5                     __ptext11:	
  3097 ;; *************** function _UART_Write_String *****************
  3098 ;; Defined at:
  3099 ;;		line 36 in file "USART.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  buf             1    wreg     PTR unsigned char 
  3102 ;;		 -> MPU6050_Read@buffer(40), 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  buf             1    4[COMMON] PTR unsigned char 
  3105 ;;		 -> MPU6050_Read@buffer(40), 
  3106 ;;  i               2    2[COMMON] int 
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  1    wreg      void 
  3109 ;; Registers used:
  3110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3116 ;;      Params:         0       0       0       0       0
  3117 ;;      Locals:         3       0       0       0       0
  3118 ;;      Temps:          1       0       0       0       0
  3119 ;;      Totals:         4       0       0       0       0
  3120 ;;Total ram usage:        4 bytes
  3121 ;; Hardware stack levels used:    1
  3122 ;; Hardware stack levels required when called:    1
  3123 ;; This function calls:
  3124 ;;		_UART_Write
  3125 ;; This function is called by:
  3126 ;;		_MPU6050_Read
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           
  3131                           ;psect for function _UART_Write_String
  3132  01A5                     _UART_Write_String:
  3133                           
  3134                           ;incstack = 0
  3135                           ; Regs used in _UART_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3136                           ;UART_Write_String@buf stored from wreg
  3137  01A5  00F4               	movwf	UART_Write_String@buf
  3138  01A6                     l1437:
  3139                           
  3140                           ;USART.c: 36: void UART_Write_String(char* buf);USART.c: 37: {;USART.c: 38:     int i=0;
  3141  01A6  01F2               	clrf	UART_Write_String@i
  3142  01A7  01F3               	clrf	UART_Write_String@i+1
  3143                           
  3144                           ;USART.c: 39:     while(buf[i] != '\0')
  3145  01A8  29BA               	goto	l1443
  3146  01A9                     l1439:
  3147                           
  3148                           ;USART.c: 40:         UART_Write(buf[i++]);
  3149  01A9  0872               	movf	UART_Write_String@i,w
  3150  01AA  0774               	addwf	UART_Write_String@buf,w
  3151  01AB  00F1               	movwf	??_UART_Write_String
  3152  01AC  0871               	movf	??_UART_Write_String,w
  3153  01AD  0084               	movwf	4
  3154  01AE  0800               	movf	0,w
  3155  01AF  120A  118A  213D  120A  118A  	fcall	_UART_Write
  3156  01B4                     l1441:
  3157  01B4  3001               	movlw	1
  3158  01B5  07F2               	addwf	UART_Write_String@i,f
  3159  01B6  1803               	skipnc
  3160  01B7  0AF3               	incf	UART_Write_String@i+1,f
  3161  01B8  3000               	movlw	0
  3162  01B9  07F3               	addwf	UART_Write_String@i+1,f
  3163  01BA                     l1443:
  3164                           
  3165                           ;USART.c: 39:     while(buf[i] != '\0')
  3166  01BA  0872               	movf	UART_Write_String@i,w
  3167  01BB  0774               	addwf	UART_Write_String@buf,w
  3168  01BC  00F1               	movwf	??_UART_Write_String
  3169  01BD  0871               	movf	??_UART_Write_String,w
  3170  01BE  0084               	movwf	4
  3171  01BF  1383               	bcf	3,7	;select IRP bank0
  3172  01C0  0800               	movf	0,w
  3173  01C1  1D03               	btfss	3,2
  3174  01C2  29C4               	goto	u1041
  3175  01C3  29C5               	goto	u1040
  3176  01C4                     u1041:
  3177  01C4  29A9               	goto	l1439
  3178  01C5                     u1040:
  3179  01C5                     l87:
  3180  01C5  0008               	return
  3181  01C6                     __end_of_UART_Write_String:
  3182                           
  3183                           	psect	text12
  3184  013D                     __ptext12:	
  3185 ;; *************** function _UART_Write *****************
  3186 ;; Defined at:
  3187 ;;		line 30 in file "USART.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;  data            1    wreg     unsigned char 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  data            1    0[COMMON] unsigned char 
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3201 ;;      Params:         0       0       0       0       0
  3202 ;;      Locals:         1       0       0       0       0
  3203 ;;      Temps:          0       0       0       0       0
  3204 ;;      Totals:         1       0       0       0       0
  3205 ;;Total ram usage:        1 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; This function calls:
  3208 ;;		Nothing
  3209 ;; This function is called by:
  3210 ;;		_UART_Write_String
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           
  3215                           ;psect for function _UART_Write
  3216  013D                     _UART_Write:
  3217                           
  3218                           ;incstack = 0
  3219                           ; Regs used in _UART_Write: [wreg]
  3220                           ;UART_Write@data stored from wreg
  3221  013D  00F0               	movwf	UART_Write@data
  3222  013E                     l1377:
  3223  013E                     l78:	
  3224                           ;USART.c: 30: void UART_Write(unsigned char data);USART.c: 31: {;USART.c: 32:   while(!T
      +                          RMT);
  3225                           
  3226  013E  1683               	bsf	3,5	;RP0=1, select bank1
  3227  013F  1303               	bcf	3,6	;RP1=0, select bank1
  3228  0140  1C98               	btfss	24,1	;volatile
  3229  0141  2943               	goto	u871
  3230  0142  2944               	goto	u870
  3231  0143                     u871:
  3232  0143  293E               	goto	l78
  3233  0144                     u870:
  3234  0144                     l1379:
  3235                           
  3236                           ;USART.c: 33:   TXREG = data;
  3237  0144  0870               	movf	UART_Write@data,w
  3238  0145  1283               	bcf	3,5	;RP0=0, select bank0
  3239  0146  1303               	bcf	3,6	;RP1=0, select bank0
  3240  0147  0099               	movwf	25	;volatile
  3241  0148                     l81:
  3242  0148  0008               	return
  3243  0149                     __end_of_UART_Write:
  3244                           
  3245                           	psect	text13
  3246  01C6                     __ptext13:	
  3247 ;; *************** function _I2C_Read *****************
  3248 ;; Defined at:
  3249 ;;		line 89 in file "I2c.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  ACK_NACK        1    wreg     unsigned char 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  ACK_NACK        1    1[COMMON] unsigned char 
  3254 ;;  Data            1    2[COMMON] unsigned char 
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      unsigned char 
  3257 ;; Registers used:
  3258 ;;		wreg, status,2, status,0, pclath, cstack
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3264 ;;      Params:         0       0       0       0       0
  3265 ;;      Locals:         2       0       0       0       0
  3266 ;;      Temps:          1       0       0       0       0
  3267 ;;      Totals:         3       0       0       0       0
  3268 ;;Total ram usage:        3 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; Hardware stack levels required when called:    1
  3271 ;; This function calls:
  3272 ;;		_I2C_ACK
  3273 ;;		_I2C_NACK
  3274 ;; This function is called by:
  3275 ;;		_MPU6050_Read
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           
  3280                           ;psect for function _I2C_Read
  3281  01C6                     _I2C_Read:
  3282                           
  3283                           ;incstack = 0
  3284                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  3285                           ;I2C_Read@ACK_NACK stored from wreg
  3286  01C6  00F1               	movwf	I2C_Read@ACK_NACK
  3287  01C7                     l1453:
  3288                           
  3289                           ;I2c.c: 89: unsigned char I2C_Read(unsigned char ACK_NACK);I2c.c: 90: {;I2c.c: 92:     u
      +                          nsigned char Data;;I2c.c: 93:     RCEN = 1;
  3290  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  3291  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  3292  01C9  1591               	bsf	17,3	;volatile
  3293  01CA                     l193:	
  3294                           ;I2c.c: 94:     while(!BF);
  3295                           
  3296  01CA  1C14               	btfss	20,0	;volatile
  3297  01CB  29CD               	goto	u1051
  3298  01CC  29CE               	goto	u1050
  3299  01CD                     u1051:
  3300  01CD  29CA               	goto	l193
  3301  01CE                     u1050:
  3302  01CE                     l1455:
  3303                           
  3304                           ;I2c.c: 95:     Data = SSPBUF;
  3305  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  3306  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  3307  01D0  0813               	movf	19,w	;volatile
  3308  01D1  00F0               	movwf	??_I2C_Read
  3309  01D2  0870               	movf	??_I2C_Read,w
  3310  01D3  00F2               	movwf	I2C_Read@Data
  3311  01D4                     l1457:
  3312                           
  3313                           ;I2c.c: 96:     if(ACK_NACK==0)
  3314  01D4  0871               	movf	I2C_Read@ACK_NACK,w
  3315  01D5  1D03               	btfss	3,2
  3316  01D6  29D8               	goto	u1061
  3317  01D7  29D9               	goto	u1060
  3318  01D8                     u1061:
  3319  01D8  29DF               	goto	l1461
  3320  01D9                     u1060:
  3321  01D9                     l1459:
  3322                           
  3323                           ;I2c.c: 97:         I2C_ACK();
  3324  01D9  120A  118A  212B  120A  118A  	fcall	_I2C_ACK
  3325  01DE  29E4               	goto	l198
  3326  01DF                     l1461:
  3327                           
  3328                           ;I2c.c: 99:         I2C_NACK();
  3329  01DF  120A  118A  2134  120A  118A  	fcall	_I2C_NACK
  3330  01E4                     l198:
  3331  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  3332  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  3333  01E6  1D8C               	btfss	12,3	;volatile
  3334  01E7  29E9               	goto	u1071
  3335  01E8  29EA               	goto	u1070
  3336  01E9                     u1071:
  3337  01E9  29E4               	goto	l198
  3338  01EA                     u1070:
  3339  01EA                     l200:
  3340                           
  3341                           ;I2c.c: 101:     SSPIF=0;
  3342  01EA  118C               	bcf	12,3	;volatile
  3343  01EB                     l1463:
  3344                           
  3345                           ;I2c.c: 102:     return Data;
  3346  01EB  0872               	movf	I2C_Read@Data,w
  3347  01EC                     l201:
  3348  01EC  0008               	return
  3349  01ED                     __end_of_I2C_Read:
  3350                           
  3351                           	psect	text14
  3352  0134                     __ptext14:	
  3353 ;; *************** function _I2C_NACK *****************
  3354 ;; Defined at:
  3355 ;;		line 62 in file "I2c.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;		None
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;		None
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      void 
  3362 ;; Registers used:
  3363 ;;		None
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3369 ;;      Params:         0       0       0       0       0
  3370 ;;      Locals:         0       0       0       0       0
  3371 ;;      Temps:          0       0       0       0       0
  3372 ;;      Totals:         0       0       0       0       0
  3373 ;;Total ram usage:        0 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_I2C_Read
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           
  3383                           ;psect for function _I2C_NACK
  3384  0134                     _I2C_NACK:
  3385  0134                     l1387:	
  3386                           ;incstack = 0
  3387                           ; Regs used in _I2C_NACK: []
  3388                           
  3389                           
  3390                           ;I2c.c: 64:  ACKDT = 1;
  3391  0134  1683               	bsf	3,5	;RP0=1, select bank1
  3392  0135  1303               	bcf	3,6	;RP1=0, select bank1
  3393  0136  1691               	bsf	17,5	;volatile
  3394                           
  3395                           ;I2c.c: 65:  ACKEN = 1;
  3396  0137  1611               	bsf	17,4	;volatile
  3397  0138                     l175:	
  3398                           ;I2c.c: 66:     while(ACKEN);
  3399                           
  3400  0138  1A11               	btfsc	17,4	;volatile
  3401  0139  293B               	goto	u901
  3402  013A  293C               	goto	u900
  3403  013B                     u901:
  3404  013B  2938               	goto	l175
  3405  013C                     u900:
  3406  013C                     l178:
  3407  013C  0008               	return
  3408  013D                     __end_of_I2C_NACK:
  3409                           
  3410                           	psect	text15
  3411  012B                     __ptext15:	
  3412 ;; *************** function _I2C_ACK *****************
  3413 ;; Defined at:
  3414 ;;		line 55 in file "I2c.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;		None
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      void 
  3421 ;; Registers used:
  3422 ;;		None
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3428 ;;      Params:         0       0       0       0       0
  3429 ;;      Locals:         0       0       0       0       0
  3430 ;;      Temps:          0       0       0       0       0
  3431 ;;      Totals:         0       0       0       0       0
  3432 ;;Total ram usage:        0 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; This function calls:
  3435 ;;		Nothing
  3436 ;; This function is called by:
  3437 ;;		_I2C_Read
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           
  3442                           ;psect for function _I2C_ACK
  3443  012B                     _I2C_ACK:
  3444  012B                     l1385:	
  3445                           ;incstack = 0
  3446                           ; Regs used in _I2C_ACK: []
  3447                           
  3448                           
  3449                           ;I2c.c: 57:  ACKDT = 0;
  3450  012B  1683               	bsf	3,5	;RP0=1, select bank1
  3451  012C  1303               	bcf	3,6	;RP1=0, select bank1
  3452  012D  1291               	bcf	17,5	;volatile
  3453                           
  3454                           ;I2c.c: 58:     ACKEN = 1;
  3455  012E  1611               	bsf	17,4	;volatile
  3456  012F                     l169:	
  3457                           ;I2c.c: 59:     while(ACKEN);
  3458                           
  3459  012F  1A11               	btfsc	17,4	;volatile
  3460  0130  2932               	goto	u891
  3461  0131  2933               	goto	u890
  3462  0132                     u891:
  3463  0132  292F               	goto	l169
  3464  0133                     u890:
  3465  0133                     l172:
  3466  0133  0008               	return
  3467  0134                     __end_of_I2C_ACK:
  3468                           
  3469                           	psect	text16
  3470  0303                     __ptext16:	
  3471 ;; *************** function _MPU6050_Init *****************
  3472 ;; Defined at:
  3473 ;;		line 19 in file "MPU.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, status,2, status,0, pclath, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3487 ;;      Params:         0       0       0       0       0
  3488 ;;      Locals:         0       0       0       0       0
  3489 ;;      Temps:          3       0       0       0       0
  3490 ;;      Totals:         3       0       0       0       0
  3491 ;;Total ram usage:        3 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    3
  3494 ;; This function calls:
  3495 ;;		_I2C_Master_Init
  3496 ;;		_I2C_Master_Stop
  3497 ;;		_I2C_Master_Write
  3498 ;;		_I2C_Start
  3499 ;; This function is called by:
  3500 ;;		_main
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           
  3505                           ;psect for function _MPU6050_Init
  3506  0303                     _MPU6050_Init:
  3507  0303                     l1759:	
  3508                           ;incstack = 0
  3509                           ; Regs used in _MPU6050_Init: [wreg+status,2+status,0+pclath+cstack]
  3510                           
  3511                           
  3512                           ;MPU.c: 22:   _delay((unsigned long)((100)*(8000000/4000.0)));
  3513  0303  3002               	movlw	2
  3514  0304  00F4               	movwf	??_MPU6050_Init+2
  3515  0305  3004               	movlw	4
  3516  0306  00F3               	movwf	??_MPU6050_Init+1
  3517  0307  30BA               	movlw	186
  3518  0308  00F2               	movwf	??_MPU6050_Init
  3519  0309                     u1707:
  3520  0309  0BF2               	decfsz	??_MPU6050_Init,f
  3521  030A  2B09               	goto	u1707
  3522  030B  0BF3               	decfsz	??_MPU6050_Init+1,f
  3523  030C  2B09               	goto	u1707
  3524  030D  0BF4               	decfsz	??_MPU6050_Init+2,f
  3525  030E  2B09               	goto	u1707
  3526  030F  0000               	nop
  3527  0310                     l1761:
  3528                           
  3529                           ;MPU.c: 23:   I2C_Master_Init();
  3530  0310  120A  118A  2149  120A  118A  	fcall	_I2C_Master_Init
  3531  0315                     l1763:
  3532                           
  3533                           ;MPU.c: 26:   I2C_Start(0xD0);
  3534  0315  30D0               	movlw	208
  3535  0316  120A  118A  2182  120A  118A  	fcall	_I2C_Start
  3536  031B                     l1765:
  3537                           
  3538                           ;MPU.c: 27:   I2C_Master_Write(0x19);
  3539  031B  3019               	movlw	25
  3540  031C  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Write
  3541  0321                     l1767:
  3542                           
  3543                           ;MPU.c: 28:   I2C_Master_Write(0x07);
  3544  0321  3007               	movlw	7
  3545  0322  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Write
  3546  0327                     l1769:
  3547                           
  3548                           ;MPU.c: 29:   I2C_Master_Stop();
  3549  0327  120A  118A  2122  120A  118A  	fcall	_I2C_Master_Stop
  3550  032C                     l1771:
  3551                           
  3552                           ;MPU.c: 32:   I2C_Start(0xD0);
  3553  032C  30D0               	movlw	208
  3554  032D  120A  118A  2182  120A  118A  	fcall	_I2C_Start
  3555  0332                     l1773:
  3556                           
  3557                           ;MPU.c: 33:   I2C_Master_Write(0x6B);
  3558  0332  306B               	movlw	107
  3559  0333  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Write
  3560  0338                     l1775:
  3561                           
  3562                           ;MPU.c: 34:   I2C_Master_Write(0x01);
  3563  0338  3001               	movlw	1
  3564  0339  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Write
  3565  033E                     l1777:
  3566                           
  3567                           ;MPU.c: 35:   I2C_Master_Stop();
  3568  033E  120A  118A  2122  120A  118A  	fcall	_I2C_Master_Stop
  3569  0343                     l1779:
  3570                           
  3571                           ;MPU.c: 38:   I2C_Start(0xD0);
  3572  0343  30D0               	movlw	208
  3573  0344  120A  118A  2182  120A  118A  	fcall	_I2C_Start
  3574  0349                     l1781:
  3575                           
  3576                           ;MPU.c: 39:   I2C_Master_Write(0x1A);
  3577  0349  301A               	movlw	26
  3578  034A  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Write
  3579  034F                     l1783:
  3580                           
  3581                           ;MPU.c: 40:   I2C_Master_Write(0x00);
  3582  034F  3000               	movlw	0
  3583  0350  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Write
  3584  0355                     l1785:
  3585                           
  3586                           ;MPU.c: 41:   I2C_Master_Stop();
  3587  0355  120A  118A  2122  120A  118A  	fcall	_I2C_Master_Stop
  3588  035A                     l1787:
  3589                           
  3590                           ;MPU.c: 44:   I2C_Start(0xD0);
  3591  035A  30D0               	movlw	208
  3592  035B  120A  118A  2182  120A  118A  	fcall	_I2C_Start
  3593  0360                     l1789:
  3594                           
  3595                           ;MPU.c: 45:   I2C_Master_Write(0x1C);
  3596  0360  301C               	movlw	28
  3597  0361  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Write
  3598  0366                     l1791:
  3599                           
  3600                           ;MPU.c: 46:   I2C_Master_Write(0x00);
  3601  0366  3000               	movlw	0
  3602  0367  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Write
  3603  036C                     l1793:
  3604                           
  3605                           ;MPU.c: 47:   I2C_Master_Stop();
  3606  036C  120A  118A  2122  120A  118A  	fcall	_I2C_Master_Stop
  3607  0371                     l1795:
  3608                           
  3609                           ;MPU.c: 50:   I2C_Start(0xD0);
  3610  0371  30D0               	movlw	208
  3611  0372  120A  118A  2182  120A  118A  	fcall	_I2C_Start
  3612  0377                     l1797:
  3613                           
  3614                           ;MPU.c: 51:   I2C_Master_Write(0x1B);
  3615  0377  301B               	movlw	27
  3616  0378  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Write
  3617  037D                     l1799:
  3618                           
  3619                           ;MPU.c: 52:   I2C_Master_Write(0x18);
  3620  037D  3018               	movlw	24
  3621  037E  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Write
  3622  0383                     l1801:
  3623                           
  3624                           ;MPU.c: 53:   I2C_Master_Stop();
  3625  0383  120A  118A  2122  120A  118A  	fcall	_I2C_Master_Stop
  3626  0388                     l1803:
  3627                           
  3628                           ;MPU.c: 56:   I2C_Start(0xD0);
  3629  0388  30D0               	movlw	208
  3630  0389  120A  118A  2182  120A  118A  	fcall	_I2C_Start
  3631  038E                     l1805:
  3632                           
  3633                           ;MPU.c: 57:   I2C_Master_Write(0x38);
  3634  038E  3038               	movlw	56
  3635  038F  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Write
  3636  0394                     l1807:
  3637                           
  3638                           ;MPU.c: 58:   I2C_Master_Write(0x01);
  3639  0394  3001               	movlw	1
  3640  0395  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Write
  3641  039A                     l1809:
  3642                           
  3643                           ;MPU.c: 59:   I2C_Master_Stop();
  3644  039A  120A  118A  2122  120A  118A  	fcall	_I2C_Master_Stop
  3645  039F                     l108:
  3646  039F  0008               	return
  3647  03A0                     __end_of_MPU6050_Init:
  3648                           
  3649                           	psect	text17
  3650  0182                     __ptext17:	
  3651 ;; *************** function _I2C_Start *****************
  3652 ;; Defined at:
  3653 ;;		line 36 in file "I2c.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  add             1    wreg     unsigned char 
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;  add             1    1[COMMON] unsigned char 
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      void 
  3660 ;; Registers used:
  3661 ;;		wreg, status,2, status,0, pclath, cstack
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3667 ;;      Params:         0       0       0       0       0
  3668 ;;      Locals:         1       0       0       0       0
  3669 ;;      Temps:          0       0       0       0       0
  3670 ;;      Totals:         1       0       0       0       0
  3671 ;;Total ram usage:        1 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:    2
  3674 ;; This function calls:
  3675 ;;		_I2C_Master_Wait
  3676 ;;		_I2C_Master_Write
  3677 ;; This function is called by:
  3678 ;;		_MPU6050_Init
  3679 ;;		_MPU6050_Read
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           
  3684                           ;psect for function _I2C_Start
  3685  0182                     _I2C_Start:
  3686                           
  3687                           ;incstack = 0
  3688                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3689                           ;I2C_Start@add stored from wreg
  3690  0182  00F1               	movwf	I2C_Start@add
  3691  0183                     l1445:
  3692                           
  3693                           ;I2c.c: 36: void I2C_Start(char add);I2c.c: 37: {;I2c.c: 38:     I2C_Master_Wait();
  3694  0183  120A  118A  2156  120A  118A  	fcall	_I2C_Master_Wait
  3695  0188                     l1447:
  3696                           
  3697                           ;I2c.c: 39:     SEN = 1;
  3698  0188  1683               	bsf	3,5	;RP0=1, select bank1
  3699  0189  1303               	bcf	3,6	;RP1=0, select bank1
  3700  018A  1411               	bsf	17,0	;volatile
  3701                           
  3702                           ;I2c.c: 40:     I2C_Master_Write(add);
  3703  018B  0871               	movf	I2C_Start@add,w
  3704  018C  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Write
  3705  0191                     l160:
  3706  0191  0008               	return
  3707  0192                     __end_of_I2C_Start:
  3708                           
  3709                           	psect	text18
  3710  0172                     __ptext18:	
  3711 ;; *************** function _I2C_Master_Write *****************
  3712 ;; Defined at:
  3713 ;;		line 69 in file "I2c.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  data            1    wreg     unsigned char 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;  data            1    0[COMMON] unsigned char 
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      unsigned char 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2, status,0, pclath, cstack
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3727 ;;      Params:         0       0       0       0       0
  3728 ;;      Locals:         1       0       0       0       0
  3729 ;;      Temps:          0       0       0       0       0
  3730 ;;      Totals:         1       0       0       0       0
  3731 ;;Total ram usage:        1 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:    1
  3734 ;; This function calls:
  3735 ;;		_I2C_Master_Wait
  3736 ;; This function is called by:
  3737 ;;		_MPU6050_Init
  3738 ;;		_MPU6050_Read
  3739 ;;		_I2C_Start
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           
  3744                           ;psect for function _I2C_Master_Write
  3745  0172                     _I2C_Master_Write:
  3746                           
  3747                           ;incstack = 0
  3748                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3749                           ;I2C_Master_Write@data stored from wreg
  3750  0172  00F0               	movwf	I2C_Master_Write@data
  3751  0173                     l1381:
  3752                           
  3753                           ;I2c.c: 69: unsigned char I2C_Master_Write(unsigned char data);I2c.c: 70: {;I2c.c: 71:  
      +                             I2C_Master_Wait();
  3754  0173  120A  118A  2156  120A  118A  	fcall	_I2C_Master_Wait
  3755  0178                     l1383:
  3756                           
  3757                           ;I2c.c: 72:     SSPBUF = data;
  3758  0178  0870               	movf	I2C_Master_Write@data,w
  3759  0179  1283               	bcf	3,5	;RP0=0, select bank0
  3760  017A  1303               	bcf	3,6	;RP1=0, select bank0
  3761  017B  0093               	movwf	19	;volatile
  3762  017C                     l181:	
  3763                           ;I2c.c: 73:     while(!SSPIF);
  3764                           
  3765  017C  1D8C               	btfss	12,3	;volatile
  3766  017D  297F               	goto	u881
  3767  017E  2980               	goto	u880
  3768  017F                     u881:
  3769  017F  297C               	goto	l181
  3770  0180                     u880:
  3771  0180                     l183:
  3772                           
  3773                           ;I2c.c: 74:  SSPIF = 0;
  3774  0180  118C               	bcf	12,3	;volatile
  3775  0181                     l184:	
  3776                           ;I2c.c: 75:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  3777                           
  3778  0181  0008               	return
  3779  0182                     __end_of_I2C_Master_Write:
  3780                           
  3781                           	psect	text19
  3782  0122                     __ptext19:	
  3783 ;; *************** function _I2C_Master_Stop *****************
  3784 ;; Defined at:
  3785 ;;		line 49 in file "I2c.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;		None
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;		None
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1    wreg      void 
  3792 ;; Registers used:
  3793 ;;		wreg, status,2, status,0, pclath, cstack
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3799 ;;      Params:         0       0       0       0       0
  3800 ;;      Locals:         0       0       0       0       0
  3801 ;;      Temps:          0       0       0       0       0
  3802 ;;      Totals:         0       0       0       0       0
  3803 ;;Total ram usage:        0 bytes
  3804 ;; Hardware stack levels used:    1
  3805 ;; Hardware stack levels required when called:    1
  3806 ;; This function calls:
  3807 ;;		_I2C_Master_Wait
  3808 ;; This function is called by:
  3809 ;;		_MPU6050_Init
  3810 ;;		_MPU6050_Read
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           
  3815                           ;psect for function _I2C_Master_Stop
  3816  0122                     _I2C_Master_Stop:
  3817  0122                     l1449:	
  3818                           ;incstack = 0
  3819                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3820                           
  3821                           
  3822                           ;I2c.c: 51:     I2C_Master_Wait();
  3823  0122  120A  118A  2156  120A  118A  	fcall	_I2C_Master_Wait
  3824  0127                     l1451:
  3825                           
  3826                           ;I2c.c: 52:     PEN = 1;
  3827  0127  1683               	bsf	3,5	;RP0=1, select bank1
  3828  0128  1303               	bcf	3,6	;RP1=0, select bank1
  3829  0129  1511               	bsf	17,2	;volatile
  3830  012A                     l166:
  3831  012A  0008               	return
  3832  012B                     __end_of_I2C_Master_Stop:
  3833                           
  3834                           	psect	text20
  3835  0156                     __ptext20:	
  3836 ;; *************** function _I2C_Master_Wait *****************
  3837 ;; Defined at:
  3838 ;;		line 25 in file "I2c.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;		None
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;		None
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      void 
  3845 ;; Registers used:
  3846 ;;		wreg, status,2
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3852 ;;      Params:         0       0       0       0       0
  3853 ;;      Locals:         0       0       0       0       0
  3854 ;;      Temps:          0       0       0       0       0
  3855 ;;      Totals:         0       0       0       0       0
  3856 ;;Total ram usage:        0 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; This function calls:
  3859 ;;		Nothing
  3860 ;; This function is called by:
  3861 ;;		_I2C_Start
  3862 ;;		_I2C_Master_Stop
  3863 ;;		_I2C_Master_Write
  3864 ;;		_I2C_Master_Start
  3865 ;;		_I2C_Master_RepeatedStart
  3866 ;;		_I2C_Read_Byte
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           
  3871                           ;psect for function _I2C_Master_Wait
  3872  0156                     _I2C_Master_Wait:
  3873  0156                     l1373:	
  3874                           ;incstack = 0
  3875                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3876                           
  3877  0156                     l151:	
  3878                           ;I2c.c: 27:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3879                           
  3880  0156  1683               	bsf	3,5	;RP0=1, select bank1
  3881  0157  1303               	bcf	3,6	;RP1=0, select bank1
  3882  0158  1914               	btfsc	20,2	;volatile
  3883  0159  295B               	goto	u851
  3884  015A  295C               	goto	u850
  3885  015B                     u851:
  3886  015B  2956               	goto	l151
  3887  015C                     u850:
  3888  015C                     l1375:
  3889  015C  0811               	movf	17,w	;volatile
  3890  015D  391F               	andlw	31
  3891  015E  1D03               	btfss	3,2
  3892  015F  2961               	goto	u861
  3893  0160  2962               	goto	u860
  3894  0161                     u861:
  3895  0161  2956               	goto	l151
  3896  0162                     u860:
  3897  0162                     l154:
  3898  0162  0008               	return
  3899  0163                     __end_of_I2C_Master_Wait:
  3900                           
  3901                           	psect	text21
  3902  0149                     __ptext21:	
  3903 ;; *************** function _I2C_Master_Init *****************
  3904 ;; Defined at:
  3905 ;;		line 15 in file "I2c.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;		None
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;		None
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  1    wreg      void 
  3912 ;; Registers used:
  3913 ;;		wreg, status,2
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3919 ;;      Params:         0       0       0       0       0
  3920 ;;      Locals:         0       0       0       0       0
  3921 ;;      Temps:          0       0       0       0       0
  3922 ;;      Totals:         0       0       0       0       0
  3923 ;;Total ram usage:        0 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; This function calls:
  3926 ;;		Nothing
  3927 ;; This function is called by:
  3928 ;;		_MPU6050_Init
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           
  3933                           ;psect for function _I2C_Master_Init
  3934  0149                     _I2C_Master_Init:
  3935  0149                     l893:	
  3936                           ;incstack = 0
  3937                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  3938                           
  3939                           
  3940                           ;I2c.c: 17:   SSPCON = 0x28;
  3941  0149  3028               	movlw	40
  3942  014A  1283               	bcf	3,5	;RP0=0, select bank0
  3943  014B  1303               	bcf	3,6	;RP1=0, select bank0
  3944  014C  0094               	movwf	20	;volatile
  3945  014D                     l895:
  3946                           
  3947                           ;I2c.c: 18:   SSPCON2 = 0x00;
  3948  014D  1683               	bsf	3,5	;RP0=1, select bank1
  3949  014E  1303               	bcf	3,6	;RP1=0, select bank1
  3950  014F  0191               	clrf	17	;volatile
  3951  0150                     l897:
  3952                           
  3953                           ;I2c.c: 19:   SSPSTAT = 0x00;
  3954  0150  0194               	clrf	20	;volatile
  3955                           
  3956                           ;I2c.c: 20:   SSPADD = ((8000000/4)/9600) - 1;
  3957  0151  30CF               	movlw	207
  3958  0152  0093               	movwf	19	;volatile
  3959  0153                     l899:
  3960                           
  3961                           ;I2c.c: 21:   TRISC3 = 1;
  3962  0153  1587               	bsf	7,3	;volatile
  3963  0154                     l901:
  3964                           
  3965                           ;I2c.c: 22:   TRISC4 = 1;
  3966  0154  1607               	bsf	7,4	;volatile
  3967  0155                     l148:
  3968  0155  0008               	return
  3969  0156                     __end_of_I2C_Master_Init:
  3970  007E                     btemp	set	126	;btemp
  3971  007E                     wtemp0	set	126
  3972                           
  3973                           	psect	config
  3974                           
  3975                           ;Config register CONFIG1 @ 0x2007
  3976                           ;	Oscillator Selection bits
  3977                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3978                           ;	Watchdog Timer Enable bit
  3979                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3980                           ;	Power-up Timer Enable bit
  3981                           ;	PWRTE = OFF, PWRT disabled
  3982                           ;	RE3/MCLR pin function select bit
  3983                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3984                           ;	Code Protection bit
  3985                           ;	CP = OFF, Program memory code protection is disabled
  3986                           ;	Data Code Protection bit
  3987                           ;	CPD = OFF, Data memory code protection is disabled
  3988                           ;	Brown Out Reset Selection bits
  3989                           ;	BOREN = OFF, BOR disabled
  3990                           ;	Internal External Switchover bit
  3991                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3992                           ;	Fail-Safe Clock Monitor Enabled bit
  3993                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3994                           ;	Low Voltage Programming Enable bit
  3995                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3996                           ;	In-Circuit Debugger Mode bit
  3997                           ;	DEBUG = 0x1, unprogrammed default
  3998  2007                     	org	8199
  3999  2007  2CD4               	dw	11476
  4000                           
  4001                           ;Config register CONFIG2 @ 0x2008
  4002                           ;	Brown-out Reset Selection bit
  4003                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  4004                           ;	Flash Program Memory Self Write Enable bits
  4005                           ;	WRT = OFF, Write protection off
  4006  2008                     	org	8200
  4007  2008  3EFF               	dw	16127

Data Sizes:
    Strings     13
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     32      32
    BANK1            80     58      58
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK1[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Write_String@buf	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK1[40]), 


Critical Paths under _main in COMMON

    _MPU6050_Read->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___fldiv->___xxtofl
    _UART_Write_String->_UART_Write
    _MPU6050_Init->_I2C_Start
    _I2C_Start->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_MPU6050_Read
    _MPU6050_Read->___fldiv

Critical Paths under _main in BANK1

    _main->_MPU6050_Read

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3763
                                             30 BANK0      2     2      0
                       _MPU6050_Init
                       _MPU6050_Read
                       _UART_TX_Init
                             _setOsc
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setOsc                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read                                        62    62      0    3697
                                             26 BANK0      4     4      0
                                              0 BANK1     58    58      0
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                  _UART_Write_String
                            ___awdiv
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _UART_Write_String                                    4     4      0     145
                                              1 COMMON     4     4      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         3     3      0      66
                                              2 COMMON     3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _I2C_Start
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              1 COMMON     1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MPU6050_Init
     _I2C_Master_Init
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _MPU6050_Read
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read
       _I2C_ACK
       _I2C_NACK
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _UART_Write_String
       _UART_Write
     ___awdiv
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _UART_TX_Init
   _setOsc
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      20       5       40.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     3A      3A       7       72.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 09:50:22 2021

              ___fldiv@aexp 0039                ___fldiv@bexp 0038                           pc 0002  
              ___fldiv@sign 0031          __size_of_I2C_Start 0010                          _BF 04A0  
                        l51 01A4                          l45 0201                          l54 0121  
                        l81 0148                          l75 0171                          l78 013E  
                        l87 01C5                ___awdiv@sign 0076                          fsr 0004  
__size_of_UART_Write_String 0021                         l111 0536                         l200 01EA  
                       l201 01EC                         l108 039F                         l151 0156  
                       l311 061E                         l160 0191                         l154 0162  
                       l148 0155                         l172 0133                         l181 017C  
                       l166 012A                         l183 0180                         l175 0138  
                       l184 0181                         l169 012F                         l193 01CA  
                       l178 013C                         l198 01E4                         l468 0302  
                       l901 0154                         l750 0459                         l680 076D  
                       l664 067B                         l761 0423                         l666 07FB  
                       l762 042F                         l754 0407                         l587 029B  
                       l748 03C2                         l597 0257                         l686 07DF  
                       l688 07EF                         l893 0149                         l895 014D  
                       l897 0150                         l899 0153                         _RD2 0042  
                       _PEN 048A                         u900 013C                         _SEN 0488  
                       u901 013B                         u910 0260                         u911 025F  
                       u850 015C                         u930 0272                         u851 015B  
                       u931 0271                         u860 0162                         u861 0161  
                       u925 0264                         u870 0144                         u950 0283  
                       u871 0143                         u951 0282                         u880 0180  
                       u881 017F                         u945 0273                         u890 0133  
                       u970 0297                         u891 0132                         u971 0296  
                       u955 027F                         u980 0224                         u965 028B  
                       u981 0223                         u995 0228             __end_of_I2C_ACK 0134  
                       fsr0 0004                         indf 0000          MPU6050_Read@buffer 00A0  
                      l1221 0166                        l1231 0170                        l1223 0168  
                      l1401 0272                        l1225 0169                        l1217 0192  
                      l1403 0283                        l1411 0297                        l1227 016C  
                      l1219 0163                        l1405 0289                        l1421 022E  
                      l1501 05A6                        l1229 016F                        l1407 028A  
                      l1431 024D                        l1423 0232                        l1415 021E  
                      l1511 05C6                        l1503 05B0                        l1441 01B4  
                      l1601 065E                        l1409 0291                        l1425 0236  
                      l1417 0224                        l1433 0253                        l1513 05F4  
                      l1505 05B6                        l1521 061A                        l1451 0127  
                      l1443 01BA                        l1531 029D                        l1603 0663  
                      l1611 0673                        l1427 0240                        l1419 0227  
                      l1515 05FB                        l1507 05BD                        l1373 0156  
                      l1381 0173                        l1445 0183                        l1461 01DF  
                      l1453 01C7                        l1437 01A6                        l1541 02B1  
                      l1533 02A1                        l1701 07D6                        l1613 0683  
                      l1621 069C                        l1605 0668                        l1429 0246  
                      l1517 05FF                        l1509 05C1                        l1285 011D  
                      l1375 015C                        l1383 0178                        l1447 0188  
                      l1463 01EB                        l1455 01CE                        l1439 01A9  
                      l1551 02C7                        l1543 02B5                        l1535 02A6  
                      l1703 07DE                        l1631 06C4                        l1623 06A1  
                      l1615 068F                        l1607 0670                        l1391 025A  
                      l1471 0545                        l1519 0608                        l1449 0122  
                      l1801 0383                        l1385 012B                        l1457 01D4  
                      l1377 013E                        l1561 02E7                        l1553 02CB  
                      l1545 02B7                        l1537 02A8                        l1529 029C  
                      l1705 07E5                        l1641 06ED                        l1633 06CC  
                      l1617 0693                        l1609 0671                        l1721 03BA  
                      l1393 0260                        l1481 056F                        l1473 054C  
                      l1803 0388                        l1387 0134                        l1459 01D9  
                      l1379 0144                        l1563 02EE                        l1555 02CF  
                      l1547 02BD                        l1539 02AC                        l1707 07E9  
                      l1651 070E                        l1643 06F1                        l1635 06D4  
                      l1627 06AA                        l1731 03E5                        l1723 03CA  
                      l1715 03A1                        l1395 0263                        l1491 0588  
                      l1483 0577                        l1475 0551                        l1467 053A  
                      l1811 045A                        l1805 038E                        l1557 02E0  
                      l1549 02C0                        l1565 02F4                        l1709 07EB  
                      l1661 0730                        l1653 071C                        l1645 06F2  
                      l1637 06D6                        l1629 06BC                        l1581 0631  
                      l1573 061F                        l1741 0419                        l1733 03EC  
                      l1717 03A6                        l1397 026A                        l1389 0258  
                      l1485 057B                        l1469 053F                        l1821 0471  
                      l1813 045A                        l1807 0394                        l1567 02F9  
                      l1559 02E6                        l1663 0739                        l1671 074D  
                      l1639 06DB                        l1647 06FB                        l1655 0720  
                      l1583 0636                        l1591 0646                        l1575 0626  
                      l1751 044C                        l1743 041D                        l1735 03F0  
                      l1727 03D3                        l1719 03AA                        l1399 026E  
                      l1487 057F                        l1479 0552                        l1831 04C4  
                      l1823 047D                        l1815 0460                        l1809 039A  
                      l1761 0310                        l1569 02FE                        l1673 0751  
                      l1665 073D                        l1657 0726                        l1649 070D  
                      l1593 064E                        l1585 063B                        l1577 062C  
                      l1753 0450                        l1745 0427                        l1737 03FE  
                      l1729 03D8                        l1497 058A                        l1489 0583  
                      l1841 0520                        l1833 04D0                        l1825 04A0  
                      l1817 0466                        l1771 032C                        l1763 0315  
                      l1691 07A2                        l1683 0772                        l1675 0752  
                      l1667 073E                        l1659 072E                        l1595 0653  
                      l1587 0643                        l1579 0630                        l1755 0451  
                      l1747 0431                        l1739 040E                        l1843 0530  
                      l1835 04DC                        l1827 04AC                        l1819 046B  
                      l1851 01FC                        l1781 0349                        l1773 0332  
                      l1765 031B                        l1685 0777                        l1693 07A8  
                      l1677 0756                        l1669 0747                        l1597 0659  
                      l1589 0644                        l1749 0447                        l1837 04E1  
                      l1829 04B8                        l1853 0205                        l1845 01ED  
                      l1791 0366                        l1783 034F                        l1775 0338  
                      l1767 0321                        l1759 0303                        l1695 07B5  
                      l1687 0785                        l1679 076A                        l1599 065D  
                      l1839 04F8                        l1855 020A                        l1847 01F2  
                      l1793 036C                        l1785 0355                        l1777 033E  
                      l1769 0327                        l1697 07C3                        l1689 0789  
                      l1857 0210                        l1849 01F7                        l1795 0371  
                      l1787 035A                        l1779 0343                        l1699 07D2  
                      l1797 0377                        l1789 0360                        l1799 037D  
                      l1897 0564                        STR_1 0013                        _BRGH 04C2  
                      u1000 0236                        u1001 0235                        u1010 0240  
                      u1011 023F                        u1100 05A5                        u1101 05A4  
                      u1030 0253                        u1110 05B0                        u1031 0252  
                      u1015 023C                        u1111 05AF                        u1040 01C5  
                      u1120 05B6                        u1041 01C4                        u1025 0247  
                      u1121 05B5                        u1105 05A1                        u1050 01CE  
                      u1210 02E0                        u1130 0608                        u1051 01CD  
                      u1211 02DF                        u1131 0607                        u1060 01D9  
                      u1300 0668                        u1140 061A                        u1061 01D8  
                      u1205 02D0                        u1301 0667                        u1141 0619  
                      u1070 01EA                        u1230 02F4                        u1150 02A1  
                      u1310 0683                        u1071 01E9                        u1231 02F3  
                      u1215 02DC                        u1151 02A0                        u1311 0682  
                      u1240 02F9                        u1160 02AC                        u1400 072E  
                      u1320 06A1                        u1080 0545                        u1241 02F8  
                      u1225 02E8                        u1161 02AB                        u1401 072D  
                      u1321 06A0                        u1081 0544                        u1170 02BD  
                      u1330 06DB                        u1250 0630                        u1090 057F  
                      u1171 02BC                        u1331 06DA                        u1251 062F  
                      u1091 057E                        u1500 0798                        u1420 073D  
                      u1260 0636                        u1421 073C                        u1261 0635  
                      u1190 02CF                        u1510 07B5                        u1270 063B  
                      u1191 02CE                        u1511 07B4                        u1415 0732  
                      u1271 063A                        u1520 07D2                        u1440 0751  
                      u1360 06F1                        u1280 065D                        u1600 040D  
                      u1185 02C1                        u1521 07D1                        u1505 0793  
                      u1441 0750                        u1361 06F0                        u1345 06DD  
                      u1281 065C                        u1601 040C                        u1530 07E9  
                      u1450 0756                        u1290 0663                        u1531 07E8  
                      u1515 07B1                        u1451 0755                        u1435 0740  
                      u1355 06E6                        u1291 0662                        u1460 076A  
                      u1380 070D                        u1620 041D                        u1540 03A6  
                      u1525 07CE                        u1461 0769                        u1381 070C  
                      u1621 041C                        u1541 03A5                        u1470 0771  
                      u1390 0726                        u1630 0423                        u1550 03AA  
                      u1471 0770                        u1391 0725                        u1375 06F4  
                      u1631 0422                        u1615 0412                        u1551 03A9  
                      u1480 0777                        u1640 0427                        u1560 03CA  
                      u1481 0776                        u1385 0709                        u1641 0426  
                      u1561 03C9                        u1490 0789                        u1650 043C  
                      u1707 0309                        u1491 0788                        u1660 044C  
                      u1580 03EB                        u1661 044B                        u1581 03EA  
                      u1670 0450                        u1671 044F                        u1655 0437  
                      u1575 03DD                        u1595 03FF                        u1697 0216  
                      _RCEN 048B                        _SPEN 00C7                        _RSEN 0489  
                      _TRMT 04C1                        _TXEN 04C5                        _SYNC 04C4  
          __end_of_I2C_NACK 013D                        _main 01ED            __end_of_I2C_Read 01ED  
                      btemp 007E                        start 0000             ___fldiv@new_exp 0032  
          ?_I2C_Master_Init 0070            ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070  
                     ?_main 0070                       _ACKEN 048C                       _ACKDT 048D  
           __end_of___fldiv 07FC             __end_of___awdiv 0303                       _ANSEL 0188  
           ___awdiv@divisor 0070             __end_of___lwdiv 029C             __end_of___lwmod 0258  
           ___awdiv@counter 0075                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _SSPIF 0063                       _TXREG 0019                 ?_UART_Write 0070  
             ?_MPU6050_Init 0070               ?_MPU6050_Read 0070             __end_of_dpowers 0013  
                     _setup 0192           __end_of_I2C_Start 0192                       pclath 000A  
                     status 0003                       wtemp0 007E             __end_of_sprintf 061F  
            MPU6050_Read@Ay 00D8             __initialization 07FC                __end_of_main 021E  
                 ??_I2C_ACK 0070                      ??_main 003E           ?_I2C_Master_Write 0070  
            ??_MPU6050_Init 0072              ??_MPU6050_Read 003A          ??_I2C_Master_Write 0070  
          ___awdiv@dividend 0072                      ?_setup 0070                      _ANSELH 0189  
                    _SSPADD 0093                      _TRISC3 043B                      _TRISC4 043C  
                    _TRISC6 043E                      _TRISC7 043F                      _SSPCON 0014  
                    _SSPBUF 0013            __end_of___xxtofl 045A            I2C_Read@ACK_NACK 0071  
       __size_of_UART_Write 000C                   ??___fldiv 0028                   ??___awdiv 0074  
                 ??___lwdiv 0074                   ??___lwmod 007C            ___awdiv@quotient 0077  
                    _setOsc 011D                   ?_I2C_NACK 0070                   ?_I2C_Read 0070  
                 ??_sprintf 0023                ___xxtofl@arg 007A                ___xxtofl@exp 0079  
              ___xxtofl@val 0070     __end_of__initialization 07FC              __pcstackCOMMON 0070  
             __end_of_setup 01A5                  ??_I2C_NACK 0070                  ??_I2C_Read 0070  
                   ??_setup 0070                I2C_Read@Data 0072                  __pmaintext 01ED  
      __end_of_MPU6050_Init 03A0        __end_of_MPU6050_Read 0537                     _I2C_ACK 012B  
                   _ACKSTAT 048E                     ?_setOsc 0070                   ?___xxtofl 0070  
              ??_UART_Write 0070                     _SSPCON2 0091                     _SSPSTAT 0094  
             ?_UART_TX_Init 0070                  __stringtab 0003                I2C_Start@add 0071  
                 _I2C_Start 0182                     ___fldiv 061F                     ___awdiv 029C  
        __end_of_UART_Write 0149                     ___lwdiv 0258                     ___lwmod 021E  
           __size_of_setOsc 0005                     __ptext1 0192                     __ptext2 011D  
                   __ptext3 0163                     __ptext4 045A                     __ptext5 0537  
                   __ptext6 021E                     __ptext7 0258                     __ptext8 03A0  
                   __ptext9 061F                     _dpowers 0009                  ??___xxtofl 0074  
  __size_of_I2C_Master_Init 000D    __size_of_I2C_Master_Wait 000D    __size_of_I2C_Master_Stop 0009  
            ??_UART_TX_Init 0070                     _sprintf 0537        end_of_initialization 07FC  
                ?_I2C_Start 0070   __size_of_I2C_Master_Write 0010              UART_Write@data 0070  
             ___xxtofl@sign 0078           __size_of_I2C_NACK 0009           __size_of_I2C_Read 0027  
               ___fldiv@grs 0034                 ___fldiv@rem 002D       __size_of_MPU6050_Init 009D  
     __size_of_MPU6050_Read 00DD              __end_of_setOsc 0122         start_initialization 07FC  
              _MPU6050_Init 0303                _MPU6050_Read 045A           ??_I2C_Master_Init 0070  
         ??_I2C_Master_Wait 0070           ??_I2C_Master_Stop 0070                 ??_I2C_Start 0071  
      __end_of_UART_TX_Init 0172                    ?_I2C_ACK 0070                    ??_setOsc 0070  
                 ___fldiv@a 0020                   ___fldiv@b 0024                   ___latbits 0002  
             __pcstackBANK0 0020               __pcstackBANK1 00A0           __size_of___xxtofl 00BA  
               sprintf@flag 0027                 sprintf@prec 0028            _I2C_Master_Write 0172  
          ___lwdiv@dividend 0072                    ?___fldiv 0020                    ?___awdiv 0070  
                  ?___lwdiv 0070                    ?___lwmod 0078        I2C_Master_Write@data 0070  
                 __pstrings 0003                    _I2C_NACK 0134                    _I2C_Read 01C6  
          ___lwdiv@quotient 0075                    ?_sprintf 0020              __size_of_setup 0013  
          __size_of_I2C_ACK 0009        UART_Write_String@buf 0074                 __stringbase 0008  
     __size_of_UART_TX_Init 000F            __size_of___fldiv 01DD            __size_of___awdiv 0067  
          __size_of___lwdiv 0044            __size_of___lwmod 003A          __end_of__stringtab 0009  
         _UART_Write_String 01A5                  sprintf@val 0029             _I2C_Master_Init 0149  
                  ___xxtofl 03A0             _I2C_Master_Wait 0156             _I2C_Master_Stop 0122  
        ?_UART_Write_String 0070             ___lwdiv@divisor 0070             ___lwdiv@counter 0077  
                  __ptext10 029C                    __ptext11 01A5                    __ptext20 0156  
                  __ptext12 013D                    __ptext21 0149                    __ptext13 01C6  
                  __ptext14 0134                    __ptext15 012B                    __ptext16 0303  
                  __ptext17 0182                    __ptext18 0172                    __ptext19 0122  
          __size_of_sprintf 00E8                _UART_TX_Init 0163         ??_UART_Write_String 0071  
             __size_of_main 0031   __end_of_UART_Write_String 01C6    __end_of_I2C_Master_Write 0182  
                 sprintf@ap 0026                   sprintf@sp 002B            ___lwmod@dividend 007A  
                 stringcode 0003                  _OSCCONbits 008F          UART_Write_String@i 0072  
   __end_of_I2C_Master_Init 0156     __end_of_I2C_Master_Wait 0163     __end_of_I2C_Master_Stop 012B  
                  sprintf@c 002C                    sprintf@f 0020             ___lwmod@divisor 0078  
           ___lwmod@counter 007D                    stringdir 0003                    stringtab 0003  
                _UART_Write 013D  
