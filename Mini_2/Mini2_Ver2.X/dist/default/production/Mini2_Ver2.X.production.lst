

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Mar 09 10:41:54 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	text19,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455                           
   456                           	psect	strings
   457  0003                     __pstrings:
   458  0003                     stringtab:
   459  0003                     __stringtab:
   460  0003                     stringcode:	
   461                           ;	String table - string pointers are 1 byte each
   462                           
   463  0003                     stringdir:
   464  0003  3000               	movlw	high stringdir
   465  0004  008A               	movwf	10
   466  0005  0804               	movf	4,w
   467  0006  0A84               	incf	4,f
   468  0007  0782               	addwf	2,f
   469  0008                     __stringbase:
   470  0008  3400               	retlw	0
   471  0009                     __end_of__stringtab:
   472  0009                     _dpowers:
   473  0009  3401               	retlw	1
   474  000A  3400               	retlw	0
   475  000B  340A               	retlw	10
   476  000C  3400               	retlw	0
   477  000D  3464               	retlw	100
   478  000E  3400               	retlw	0
   479  000F  34E8               	retlw	232
   480  0010  3403               	retlw	3
   481  0011  3410               	retlw	16
   482  0012  3427               	retlw	39
   483  0013                     __end_of_dpowers:
   484  0013                     _SSPBUF	set	19
   485  0014                     _SSPCON	set	20
   486  0019                     _TXREG	set	25
   487  0009                     _PORTE	set	9
   488  0008                     _PORTD	set	8
   489  0007                     _PORTC	set	7
   490  0006                     _PORTB	set	6
   491  0005                     _PORTA	set	5
   492  0063                     _SSPIF	set	99
   493  00C7                     _SPEN	set	199
   494  0042                     _RD2	set	66
   495  0093                     _SSPADD	set	147
   496  0094                     _SSPSTAT	set	148
   497  0091                     _SSPCON2	set	145
   498  0099                     _SPBRG	set	153
   499  008F                     _OSCCONbits	set	143
   500  0089                     _TRISE	set	137
   501  0088                     _TRISD	set	136
   502  0087                     _TRISC	set	135
   503  0086                     _TRISB	set	134
   504  0085                     _TRISA	set	133
   505  04A0                     _BF	set	1184
   506  048B                     _RCEN	set	1163
   507  048E                     _ACKSTAT	set	1166
   508  048C                     _ACKEN	set	1164
   509  048D                     _ACKDT	set	1165
   510  048A                     _PEN	set	1162
   511  0489                     _RSEN	set	1161
   512  0488                     _SEN	set	1160
   513  043C                     _TRISC4	set	1084
   514  043B                     _TRISC3	set	1083
   515  04C1                     _TRMT	set	1217
   516  04C5                     _TXEN	set	1221
   517  043F                     _TRISC7	set	1087
   518  043E                     _TRISC6	set	1086
   519  04C4                     _SYNC	set	1220
   520  04C2                     _BRGH	set	1218
   521  0189                     _ANSELH	set	393
   522  0188                     _ANSEL	set	392
   523  0013                     STR_5:
   524  0013  3420               	retlw	32	;' '
   525  0014  3447               	retlw	71	;'G'
   526  0015  3478               	retlw	120	;'x'
   527  0016  3420               	retlw	32	;' '
   528  0017  343D               	retlw	61	;'='
   529  0018  3420               	retlw	32	;' '
   530  0019  3425               	retlw	37	;'%'
   531  001A  3464               	retlw	100	;'d'
   532  001B  3420               	retlw	32	;' '
   533  001C  3420               	retlw	32	;' '
   534  001D  3420               	retlw	32	;' '
   535  001E  3420               	retlw	32	;' '
   536  001F  3400               	retlw	0
   537  0020                     STR_2:
   538  0020  3420               	retlw	32	;' '
   539  0021  3441               	retlw	65	;'A'
   540  0022  3479               	retlw	121	;'y'
   541  0023  3420               	retlw	32	;' '
   542  0024  343D               	retlw	61	;'='
   543  0025  3420               	retlw	32	;' '
   544  0026  3425               	retlw	37	;'%'
   545  0027  3464               	retlw	100	;'d'
   546  0028  3420               	retlw	32	;' '
   547  0029  3420               	retlw	32	;' '
   548  002A  3420               	retlw	32	;' '
   549  002B  3420               	retlw	32	;' '
   550  002C  3400               	retlw	0
   551  002D                     STR_6:
   552  002D  3420               	retlw	32	;' '
   553  002E  3447               	retlw	71	;'G'
   554  002F  3479               	retlw	121	;'y'
   555  0030  3420               	retlw	32	;' '
   556  0031  343D               	retlw	61	;'='
   557  0032  3420               	retlw	32	;' '
   558  0033  3425               	retlw	37	;'%'
   559  0034  3464               	retlw	100	;'d'
   560  0035  3420               	retlw	32	;' '
   561  0036  3420               	retlw	32	;' '
   562  0037  3420               	retlw	32	;' '
   563  0038  3420               	retlw	32	;' '
   564  0039  3400               	retlw	0
   565  003A                     STR_3:
   566  003A  3420               	retlw	32	;' '
   567  003B  3441               	retlw	65	;'A'
   568  003C  347A               	retlw	122	;'z'
   569  003D  3420               	retlw	32	;' '
   570  003E  343D               	retlw	61	;'='
   571  003F  3420               	retlw	32	;' '
   572  0040  3425               	retlw	37	;'%'
   573  0041  3464               	retlw	100	;'d'
   574  0042  3420               	retlw	32	;' '
   575  0043  3420               	retlw	32	;' '
   576  0044  3420               	retlw	32	;' '
   577  0045  3420               	retlw	32	;' '
   578  0046  3400               	retlw	0
   579  0047                     STR_1:
   580  0047  3441               	retlw	65	;'A'
   581  0048  3478               	retlw	120	;'x'
   582  0049  3420               	retlw	32	;' '
   583  004A  343D               	retlw	61	;'='
   584  004B  3420               	retlw	32	;' '
   585  004C  3425               	retlw	37	;'%'
   586  004D  3464               	retlw	100	;'d'
   587  004E  3420               	retlw	32	;' '
   588  004F  3420               	retlw	32	;' '
   589  0050  3420               	retlw	32	;' '
   590  0051  3420               	retlw	32	;' '
   591  0052  3400               	retlw	0
   592  0053                     STR_7:
   593  0053  3420               	retlw	32	;' '
   594  0054  3447               	retlw	71	;'G'
   595  0055  347A               	retlw	122	;'z'
   596  0056  3420               	retlw	32	;' '
   597  0057  343D               	retlw	61	;'='
   598  0058  3420               	retlw	32	;' '
   599  0059  3425               	retlw	37	;'%'
   600  005A  3464               	retlw	100	;'d'
   601  005B  340D               	retlw	13
   602  005C  340A               	retlw	10
   603  005D  3400               	retlw	0
   604  005E                     STR_4:
   605  005E  3420               	retlw	32	;' '
   606  005F  3454               	retlw	84	;'T'
   607  0060  3420               	retlw	32	;' '
   608  0061  343D               	retlw	61	;'='
   609  0062  3420               	retlw	32	;' '
   610  0063  3425               	retlw	37	;'%'
   611  0064  3464               	retlw	100	;'d'
   612  0065  3420               	retlw	32	;' '
   613  0066  3420               	retlw	32	;' '
   614  0067  3400               	retlw	0
   615                           
   616                           	psect	cinit
   617  07FC                     start_initialization:	
   618                           ; #config settings
   619                           
   620  07FC                     __initialization:
   621  07FC                     end_of_initialization:	
   622                           ;End of C runtime variable initialization code
   623                           
   624  07FC                     __end_of__initialization:
   625  07FC  0183               	clrf	3
   626  07FD  120A  118A  2BD0   	ljmp	_main	;jump to C main() function
   627                           
   628                           	psect	cstackCOMMON
   629  0070                     __pcstackCOMMON:
   630  0070                     ?_setup:
   631  0070                     ??_setup:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_UART_TX_Init:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ??_UART_TX_Init:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_MPU6050_Init:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_setOsc:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ??_setOsc:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_MPU6050_Read:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_I2C_Master_Init:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ??_I2C_Master_Init:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_I2C_Start:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_I2C_Master_Write:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ??_I2C_Master_Write:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_I2C_Master_Stop:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ??_I2C_Master_Stop:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_I2C_Read:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ??_I2C_Read:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_main:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_UART_Write:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ??_UART_Write:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_UART_Write_String:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_I2C_Master_Wait:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ??_I2C_Master_Wait:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_I2C_ACK:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ??_I2C_ACK:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_I2C_NACK:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ??_I2C_NACK:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?___awdiv:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?___lwdiv:	
   713                           ; 2 bytes @ 0x0
   714                           
   715  0070                     UART_Write@data:	
   716                           ; 2 bytes @ 0x0
   717                           
   718  0070                     I2C_Master_Write@data:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ___awdiv@divisor:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ___lwdiv@divisor:	
   725                           ; 2 bytes @ 0x0
   726                           
   727                           
   728                           ; 2 bytes @ 0x0
   729  0070                     	ds	1
   730  0071                     ??_I2C_Start:
   731  0071                     ??_UART_Write_String:	
   732                           ; 1 bytes @ 0x1
   733                           
   734  0071                     I2C_Start@add:	
   735                           ; 1 bytes @ 0x1
   736                           
   737  0071                     I2C_Read@ACK_NACK:	
   738                           ; 1 bytes @ 0x1
   739                           
   740                           
   741                           ; 1 bytes @ 0x1
   742  0071                     	ds	1
   743  0072                     ??_MPU6050_Init:
   744  0072                     I2C_Read@Data:	
   745                           ; 1 bytes @ 0x2
   746                           
   747  0072                     UART_Write_String@i:	
   748                           ; 1 bytes @ 0x2
   749                           
   750  0072                     ___awdiv@dividend:	
   751                           ; 2 bytes @ 0x2
   752                           
   753  0072                     ___lwdiv@dividend:	
   754                           ; 2 bytes @ 0x2
   755                           
   756                           
   757                           ; 2 bytes @ 0x2
   758  0072                     	ds	2
   759  0074                     ??___awdiv:
   760  0074                     ??___lwdiv:	
   761                           ; 1 bytes @ 0x4
   762                           
   763  0074                     UART_Write_String@buf:	
   764                           ; 1 bytes @ 0x4
   765                           
   766                           
   767                           ; 1 bytes @ 0x4
   768  0074                     	ds	1
   769  0075                     ___awdiv@counter:
   770  0075                     ___lwdiv@quotient:	
   771                           ; 1 bytes @ 0x5
   772                           
   773                           
   774                           ; 2 bytes @ 0x5
   775  0075                     	ds	1
   776  0076                     ___awdiv@sign:
   777                           
   778                           ; 1 bytes @ 0x6
   779  0076                     	ds	1
   780  0077                     ___lwdiv@counter:
   781  0077                     ___awdiv@quotient:	
   782                           ; 1 bytes @ 0x7
   783                           
   784                           
   785                           ; 2 bytes @ 0x7
   786  0077                     	ds	1
   787  0078                     ?___lwmod:
   788  0078                     ___lwmod@divisor:	
   789                           ; 2 bytes @ 0x8
   790                           
   791                           
   792                           ; 2 bytes @ 0x8
   793  0078                     	ds	2
   794  007A                     ___lwmod@dividend:
   795                           
   796                           ; 2 bytes @ 0xA
   797  007A                     	ds	2
   798  007C                     ??___lwmod:
   799                           
   800                           ; 1 bytes @ 0xC
   801  007C                     	ds	1
   802  007D                     ___lwmod@counter:
   803                           
   804                           ; 1 bytes @ 0xD
   805  007D                     	ds	1
   806                           
   807                           	psect	cstackBANK0
   808  0020                     __pcstackBANK0:
   809  0020                     ?_sprintf:
   810  0020                     sprintf@f:	
   811                           ; 2 bytes @ 0x0
   812                           
   813                           
   814                           ; 1 bytes @ 0x0
   815  0020                     	ds	3
   816  0023                     ??_sprintf:
   817                           
   818                           ; 1 bytes @ 0x3
   819  0023                     	ds	3
   820  0026                     sprintf@ap:
   821                           
   822                           ; 1 bytes @ 0x6
   823  0026                     	ds	1
   824  0027                     sprintf@flag:
   825                           
   826                           ; 1 bytes @ 0x7
   827  0027                     	ds	1
   828  0028                     sprintf@prec:
   829                           
   830                           ; 1 bytes @ 0x8
   831  0028                     	ds	1
   832  0029                     sprintf@val:
   833                           
   834                           ; 2 bytes @ 0x9
   835  0029                     	ds	2
   836  002B                     sprintf@sp:
   837                           
   838                           ; 1 bytes @ 0xB
   839  002B                     	ds	1
   840  002C                     sprintf@c:
   841                           
   842                           ; 1 bytes @ 0xC
   843  002C                     	ds	1
   844  002D                     ??_MPU6050_Read:
   845                           
   846                           ; 1 bytes @ 0xD
   847  002D                     	ds	4
   848  0031                     MPU6050_Read@buffer:
   849                           
   850                           ; 40 bytes @ 0x11
   851  0031                     	ds	40
   852  0059                     MPU6050_Read@Ax:
   853                           
   854                           ; 2 bytes @ 0x39
   855  0059                     	ds	2
   856  005B                     MPU6050_Read@Az:
   857                           
   858                           ; 2 bytes @ 0x3B
   859  005B                     	ds	2
   860  005D                     MPU6050_Read@T:
   861                           
   862                           ; 2 bytes @ 0x3D
   863  005D                     	ds	2
   864  005F                     MPU6050_Read@Gx:
   865                           
   866                           ; 2 bytes @ 0x3F
   867  005F                     	ds	2
   868  0061                     MPU6050_Read@Gy:
   869                           
   870                           ; 2 bytes @ 0x41
   871  0061                     	ds	2
   872  0063                     MPU6050_Read@Gz:
   873                           
   874                           ; 2 bytes @ 0x43
   875  0063                     	ds	2
   876  0065                     MPU6050_Read@Ay:
   877                           
   878                           ; 2 bytes @ 0x45
   879  0065                     	ds	2
   880  0067                     ??_main:
   881                           
   882                           ; 1 bytes @ 0x47
   883  0067                     	ds	2
   884                           
   885                           	psect	maintext
   886  03D0                     __pmaintext:	
   887 ;;
   888 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   889 ;;
   890 ;; *************** function _main *****************
   891 ;; Defined at:
   892 ;;		line 54 in file "main.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : B00/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   906 ;;      Params:         0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0
   908 ;;      Temps:          0       2       0       0       0
   909 ;;      Totals:         0       2       0       0       0
   910 ;;Total ram usage:        2 bytes
   911 ;; Hardware stack levels required when called:    4
   912 ;; This function calls:
   913 ;;		_MPU6050_Init
   914 ;;		_MPU6050_Read
   915 ;;		_UART_TX_Init
   916 ;;		_setOsc
   917 ;;		_setup
   918 ;; This function is called by:
   919 ;;		Startup code after reset
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           
   924                           ;psect for function _main
   925  03D0                     _main:
   926  03D0                     l1479:	
   927                           ;incstack = 0
   928                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   929                           
   930                           
   931                           ;main.c: 55:     setup();
   932  03D0  120A  118A  2375  120A  118A  	fcall	_setup
   933  03D5                     l1481:
   934                           
   935                           ;main.c: 56:     UART_TX_Init();
   936  03D5  120A  118A  2346  120A  118A  	fcall	_UART_TX_Init
   937  03DA                     l1483:
   938                           
   939                           ;main.c: 57:     MPU6050_Init();
   940  03DA  120A  118A  24E0  120A  118A  	fcall	_MPU6050_Init
   941  03DF                     l1485:
   942                           
   943                           ;main.c: 58:     setOsc();
   944  03DF  120A  118A  2300  120A  118A  	fcall	_setOsc
   945  03E4                     l45:	
   946                           ;main.c: 62:     while(1)
   947                           
   948                           
   949                           ;main.c: 63:  {;main.c: 64:         RD2 = !RD2;
   950  03E4  3004               	movlw	4
   951  03E5  1283               	bcf	3,5	;RP0=0, select bank0
   952  03E6  1303               	bcf	3,6	;RP1=0, select bank0
   953  03E7  0688               	xorwf	8,f
   954  03E8                     l1487:
   955                           
   956                           ;main.c: 65:         MPU6050_Read();
   957  03E8  120A  118A  2665  120A  118A  	fcall	_MPU6050_Read
   958  03ED                     l1489:
   959                           
   960                           ;main.c: 66:         _delay((unsigned long)((50)*(8000000/4000.0)));
   961  03ED  3082               	movlw	130
   962  03EE  1283               	bcf	3,5	;RP0=0, select bank0
   963  03EF  1303               	bcf	3,6	;RP1=0, select bank0
   964  03F0  00E8               	movwf	??_main+1
   965  03F1  30DD               	movlw	221
   966  03F2  00E7               	movwf	??_main
   967  03F3                     u837:
   968  03F3  0BE7               	decfsz	??_main,f
   969  03F4  2BF3               	goto	u837
   970  03F5  0BE8               	decfsz	??_main+1,f
   971  03F6  2BF3               	goto	u837
   972  03F7  2BE4               	goto	l45
   973  03F8  120A  118A  2800   	ljmp	start
   974  03FB                     __end_of_main:
   975                           
   976                           	psect	text1
   977  0375                     __ptext1:	
   978 ;; *************** function _setup *****************
   979 ;; Defined at:
   980 ;;		line 74 in file "main.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		status,2
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   994 ;;      Params:         0       0       0       0       0
   995 ;;      Locals:         0       0       0       0       0
   996 ;;      Temps:          0       0       0       0       0
   997 ;;      Totals:         0       0       0       0       0
   998 ;;Total ram usage:        0 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; This function calls:
  1001 ;;		Nothing
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           
  1008                           ;psect for function _setup
  1009  0375                     _setup:
  1010  0375                     l1031:	
  1011                           ;incstack = 0
  1012                           ; Regs used in _setup: [status,2]
  1013                           
  1014                           
  1015                           ;main.c: 75:     ANSEL = 0b00000000;
  1016  0375  1683               	bsf	3,5	;RP0=1, select bank3
  1017  0376  1703               	bsf	3,6	;RP1=1, select bank3
  1018  0377  0188               	clrf	8	;volatile
  1019                           
  1020                           ;main.c: 76:     ANSELH = 0;
  1021  0378  0189               	clrf	9	;volatile
  1022                           
  1023                           ;main.c: 78:     PORTA = 0;
  1024  0379  1283               	bcf	3,5	;RP0=0, select bank0
  1025  037A  1303               	bcf	3,6	;RP1=0, select bank0
  1026  037B  0185               	clrf	5	;volatile
  1027                           
  1028                           ;main.c: 79:     PORTB = 0;
  1029  037C  0186               	clrf	6	;volatile
  1030                           
  1031                           ;main.c: 80:     PORTC = 0;
  1032  037D  0187               	clrf	7	;volatile
  1033                           
  1034                           ;main.c: 81:     PORTD = 0;
  1035  037E  0188               	clrf	8	;volatile
  1036                           
  1037                           ;main.c: 82:     PORTE = 0;
  1038  037F  0189               	clrf	9	;volatile
  1039                           
  1040                           ;main.c: 84:     TRISA = 0b00000000;
  1041  0380  1683               	bsf	3,5	;RP0=1, select bank1
  1042  0381  1303               	bcf	3,6	;RP1=0, select bank1
  1043  0382  0185               	clrf	5	;volatile
  1044                           
  1045                           ;main.c: 85:     TRISB = 0;
  1046  0383  0186               	clrf	6	;volatile
  1047                           
  1048                           ;main.c: 86:     TRISC = 0b00000000;
  1049  0384  0187               	clrf	7	;volatile
  1050                           
  1051                           ;main.c: 87:     TRISD = 0;
  1052  0385  0188               	clrf	8	;volatile
  1053                           
  1054                           ;main.c: 88:     TRISE = 0;
  1055  0386  0189               	clrf	9	;volatile
  1056  0387                     l51:
  1057  0387  0008               	return
  1058  0388                     __end_of_setup:
  1059                           
  1060                           	psect	text2
  1061  0300                     __ptext2:	
  1062 ;; *************** function _setOsc *****************
  1063 ;; Defined at:
  1064 ;;		line 91 in file "main.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1078 ;;      Params:         0       0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0
  1081 ;;      Totals:         0       0       0       0       0
  1082 ;;Total ram usage:        0 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_main
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           
  1092                           ;psect for function _setOsc
  1093  0300                     _setOsc:
  1094  0300                     l1099:	
  1095                           ;incstack = 0
  1096                           ; Regs used in _setOsc: [wreg+status,2+status,0]
  1097                           
  1098                           
  1099                           ;main.c: 92:     OSCCONbits.IRCF = 0b111;
  1100  0300  3070               	movlw	112
  1101  0301  1683               	bsf	3,5	;RP0=1, select bank1
  1102  0302  1303               	bcf	3,6	;RP1=0, select bank1
  1103  0303  048F               	iorwf	15,f	;volatile
  1104  0304                     l54:
  1105  0304  0008               	return
  1106  0305                     __end_of_setOsc:
  1107                           
  1108                           	psect	text3
  1109  0346                     __ptext3:	
  1110 ;; *************** function _UART_TX_Init *****************
  1111 ;; Defined at:
  1112 ;;		line 17 in file "USART.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1126 ;;      Params:         0       0       0       0       0
  1127 ;;      Locals:         0       0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0
  1129 ;;      Totals:         0       0       0       0       0
  1130 ;;Total ram usage:        0 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		_main
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           
  1140                           ;psect for function _UART_TX_Init
  1141  0346                     _UART_TX_Init:
  1142  0346                     l1033:	
  1143                           ;incstack = 0
  1144                           ; Regs used in _UART_TX_Init: [wreg]
  1145                           
  1146                           
  1147                           ;USART.c: 19:   BRGH = 1;
  1148  0346  1683               	bsf	3,5	;RP0=1, select bank1
  1149  0347  1303               	bcf	3,6	;RP1=0, select bank1
  1150  0348  1518               	bsf	24,2	;volatile
  1151  0349                     l1035:
  1152                           
  1153                           ;USART.c: 20:   SPBRG = 51;
  1154  0349  3033               	movlw	51
  1155  034A  0099               	movwf	25	;volatile
  1156  034B                     l1037:
  1157                           
  1158                           ;USART.c: 22:   SYNC = 0;
  1159  034B  1218               	bcf	24,4	;volatile
  1160  034C                     l1039:
  1161                           
  1162                           ;USART.c: 23:   SPEN = 1;
  1163  034C  1283               	bcf	3,5	;RP0=0, select bank0
  1164  034D  1303               	bcf	3,6	;RP1=0, select bank0
  1165  034E  1798               	bsf	24,7	;volatile
  1166  034F                     l1041:
  1167                           
  1168                           ;USART.c: 25:   TRISC6 = 1;
  1169  034F  1683               	bsf	3,5	;RP0=1, select bank1
  1170  0350  1303               	bcf	3,6	;RP1=0, select bank1
  1171  0351  1707               	bsf	7,6	;volatile
  1172  0352                     l1043:
  1173                           
  1174                           ;USART.c: 26:   TRISC7 = 1;
  1175  0352  1787               	bsf	7,7	;volatile
  1176  0353                     l1045:
  1177                           
  1178                           ;USART.c: 27:   TXEN = 1;
  1179  0353  1698               	bsf	24,5	;volatile
  1180  0354                     l75:
  1181  0354  0008               	return
  1182  0355                     __end_of_UART_TX_Init:
  1183                           
  1184                           	psect	text4
  1185  0665                     __ptext4:	
  1186 ;; *************** function _MPU6050_Read *****************
  1187 ;; Defined at:
  1188 ;;		line 62 in file "MPU.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  buffer         40   17[BANK0 ] unsigned char [40]
  1193 ;;  Ay              2   69[BANK0 ] int 
  1194 ;;  Gz              2   67[BANK0 ] int 
  1195 ;;  Gy              2   65[BANK0 ] int 
  1196 ;;  Gx              2   63[BANK0 ] int 
  1197 ;;  T               2   61[BANK0 ] int 
  1198 ;;  Az              2   59[BANK0 ] int 
  1199 ;;  Ax              2   57[BANK0 ] int 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1209 ;;      Params:         0       0       0       0       0
  1210 ;;      Locals:         0      54       0       0       0
  1211 ;;      Temps:          0       4       0       0       0
  1212 ;;      Totals:         0      58       0       0       0
  1213 ;;Total ram usage:       58 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    3
  1216 ;; This function calls:
  1217 ;;		_I2C_Master_Stop
  1218 ;;		_I2C_Master_Write
  1219 ;;		_I2C_Read
  1220 ;;		_I2C_Start
  1221 ;;		_UART_Write_String
  1222 ;;		___awdiv
  1223 ;;		_sprintf
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function _MPU6050_Read
  1231  0665                     _MPU6050_Read:
  1232  0665                     l1441:	
  1233                           ;incstack = 0
  1234                           ; Regs used in _MPU6050_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1235                           
  1236                           
  1237                           ;MPU.c: 64:   char buffer[40];;MPU.c: 65:   int Ax,Ay,Az,T,Gx,Gy,Gz;;MPU.c: 67:   I2C_St
      +                          art(0xD0);
  1238  0665  30D0               	movlw	208
  1239  0666  120A  118A  2365  120A  118A  	fcall	_I2C_Start
  1240                           
  1241                           ;MPU.c: 68:   I2C_Master_Write(0x3B);
  1242  066B  303B               	movlw	59
  1243  066C  120A  118A  2355  120A  118A  	fcall	_I2C_Master_Write
  1244                           
  1245                           ;MPU.c: 69:   I2C_Master_Stop();
  1246  0671  120A  118A  2305  120A  118A  	fcall	_I2C_Master_Stop
  1247                           
  1248                           ;MPU.c: 70:   I2C_Start(0xD1);
  1249  0676  30D1               	movlw	209
  1250  0677  120A  118A  2365  120A  118A  	fcall	_I2C_Start
  1251  067C                     l1443:
  1252                           
  1253                           ;MPU.c: 71:   Ax = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1254  067C  3000               	movlw	0
  1255  067D  120A  118A  23A9  120A  118A  	fcall	_I2C_Read
  1256  0682  1283               	bcf	3,5	;RP0=0, select bank0
  1257  0683  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0684  00AD               	movwf	??_MPU6050_Read
  1259  0685  01AE               	clrf	??_MPU6050_Read+1
  1260  0686  3000               	movlw	0
  1261  0687  120A  118A  23A9  120A  118A  	fcall	_I2C_Read
  1262  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1263  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1264  068E  00AF               	movwf	??_MPU6050_Read+2
  1265  068F  01B0               	clrf	??_MPU6050_Read+3
  1266  0690  082F               	movf	??_MPU6050_Read+2,w
  1267  0691  00B0               	movwf	??_MPU6050_Read+3
  1268  0692  01AF               	clrf	??_MPU6050_Read+2
  1269  0693  082D               	movf	??_MPU6050_Read,w
  1270  0694  042F               	iorwf	??_MPU6050_Read+2,w
  1271  0695  00D9               	movwf	MPU6050_Read@Ax
  1272  0696  082E               	movf	??_MPU6050_Read+1,w
  1273  0697  0430               	iorwf	??_MPU6050_Read+3,w
  1274  0698  00DA               	movwf	MPU6050_Read@Ax+1
  1275  0699                     l1445:
  1276                           
  1277                           ;MPU.c: 72:   Ay = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1278  0699  3000               	movlw	0
  1279  069A  120A  118A  23A9  120A  118A  	fcall	_I2C_Read
  1280  069F  1283               	bcf	3,5	;RP0=0, select bank0
  1281  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  1282  06A1  00AD               	movwf	??_MPU6050_Read
  1283  06A2  01AE               	clrf	??_MPU6050_Read+1
  1284  06A3  3000               	movlw	0
  1285  06A4  120A  118A  23A9  120A  118A  	fcall	_I2C_Read
  1286  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1287  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1288  06AB  00AF               	movwf	??_MPU6050_Read+2
  1289  06AC  01B0               	clrf	??_MPU6050_Read+3
  1290  06AD  082F               	movf	??_MPU6050_Read+2,w
  1291  06AE  00B0               	movwf	??_MPU6050_Read+3
  1292  06AF  01AF               	clrf	??_MPU6050_Read+2
  1293  06B0  082D               	movf	??_MPU6050_Read,w
  1294  06B1  042F               	iorwf	??_MPU6050_Read+2,w
  1295  06B2  00E5               	movwf	MPU6050_Read@Ay
  1296  06B3  082E               	movf	??_MPU6050_Read+1,w
  1297  06B4  0430               	iorwf	??_MPU6050_Read+3,w
  1298  06B5  00E6               	movwf	MPU6050_Read@Ay+1
  1299  06B6                     l1447:
  1300                           
  1301                           ;MPU.c: 73:   Az = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1302  06B6  3000               	movlw	0
  1303  06B7  120A  118A  23A9  120A  118A  	fcall	_I2C_Read
  1304  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1305  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1306  06BE  00AD               	movwf	??_MPU6050_Read
  1307  06BF  01AE               	clrf	??_MPU6050_Read+1
  1308  06C0  3000               	movlw	0
  1309  06C1  120A  118A  23A9  120A  118A  	fcall	_I2C_Read
  1310  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  1311  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  1312  06C8  00AF               	movwf	??_MPU6050_Read+2
  1313  06C9  01B0               	clrf	??_MPU6050_Read+3
  1314  06CA  082F               	movf	??_MPU6050_Read+2,w
  1315  06CB  00B0               	movwf	??_MPU6050_Read+3
  1316  06CC  01AF               	clrf	??_MPU6050_Read+2
  1317  06CD  082D               	movf	??_MPU6050_Read,w
  1318  06CE  042F               	iorwf	??_MPU6050_Read+2,w
  1319  06CF  00DB               	movwf	MPU6050_Read@Az
  1320  06D0  082E               	movf	??_MPU6050_Read+1,w
  1321  06D1  0430               	iorwf	??_MPU6050_Read+3,w
  1322  06D2  00DC               	movwf	MPU6050_Read@Az+1
  1323  06D3                     l1449:
  1324                           
  1325                           ;MPU.c: 74:   T = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1326  06D3  3000               	movlw	0
  1327  06D4  120A  118A  23A9  120A  118A  	fcall	_I2C_Read
  1328  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  1329  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  1330  06DB  00AD               	movwf	??_MPU6050_Read
  1331  06DC  01AE               	clrf	??_MPU6050_Read+1
  1332  06DD  3000               	movlw	0
  1333  06DE  120A  118A  23A9  120A  118A  	fcall	_I2C_Read
  1334  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1335  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1336  06E5  00AF               	movwf	??_MPU6050_Read+2
  1337  06E6  01B0               	clrf	??_MPU6050_Read+3
  1338  06E7  082F               	movf	??_MPU6050_Read+2,w
  1339  06E8  00B0               	movwf	??_MPU6050_Read+3
  1340  06E9  01AF               	clrf	??_MPU6050_Read+2
  1341  06EA  082D               	movf	??_MPU6050_Read,w
  1342  06EB  042F               	iorwf	??_MPU6050_Read+2,w
  1343  06EC  00DD               	movwf	MPU6050_Read@T
  1344  06ED  082E               	movf	??_MPU6050_Read+1,w
  1345  06EE  0430               	iorwf	??_MPU6050_Read+3,w
  1346  06EF  00DE               	movwf	MPU6050_Read@T+1
  1347  06F0                     l1451:
  1348                           
  1349                           ;MPU.c: 75:   Gx = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1350  06F0  3000               	movlw	0
  1351  06F1  120A  118A  23A9  120A  118A  	fcall	_I2C_Read
  1352  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1353  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1354  06F8  00AD               	movwf	??_MPU6050_Read
  1355  06F9  01AE               	clrf	??_MPU6050_Read+1
  1356  06FA  3000               	movlw	0
  1357  06FB  120A  118A  23A9  120A  118A  	fcall	_I2C_Read
  1358  0700  1283               	bcf	3,5	;RP0=0, select bank0
  1359  0701  1303               	bcf	3,6	;RP1=0, select bank0
  1360  0702  00AF               	movwf	??_MPU6050_Read+2
  1361  0703  01B0               	clrf	??_MPU6050_Read+3
  1362  0704  082F               	movf	??_MPU6050_Read+2,w
  1363  0705  00B0               	movwf	??_MPU6050_Read+3
  1364  0706  01AF               	clrf	??_MPU6050_Read+2
  1365  0707  082D               	movf	??_MPU6050_Read,w
  1366  0708  042F               	iorwf	??_MPU6050_Read+2,w
  1367  0709  00DF               	movwf	MPU6050_Read@Gx
  1368  070A  082E               	movf	??_MPU6050_Read+1,w
  1369  070B  0430               	iorwf	??_MPU6050_Read+3,w
  1370  070C  00E0               	movwf	MPU6050_Read@Gx+1
  1371  070D                     l1453:
  1372                           
  1373                           ;MPU.c: 76:   Gy = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1374  070D  3000               	movlw	0
  1375  070E  120A  118A  23A9  120A  118A  	fcall	_I2C_Read
  1376  0713  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0714  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0715  00AD               	movwf	??_MPU6050_Read
  1379  0716  01AE               	clrf	??_MPU6050_Read+1
  1380  0717  3000               	movlw	0
  1381  0718  120A  118A  23A9  120A  118A  	fcall	_I2C_Read
  1382  071D  1283               	bcf	3,5	;RP0=0, select bank0
  1383  071E  1303               	bcf	3,6	;RP1=0, select bank0
  1384  071F  00AF               	movwf	??_MPU6050_Read+2
  1385  0720  01B0               	clrf	??_MPU6050_Read+3
  1386  0721  082F               	movf	??_MPU6050_Read+2,w
  1387  0722  00B0               	movwf	??_MPU6050_Read+3
  1388  0723  01AF               	clrf	??_MPU6050_Read+2
  1389  0724  082D               	movf	??_MPU6050_Read,w
  1390  0725  042F               	iorwf	??_MPU6050_Read+2,w
  1391  0726  00E1               	movwf	MPU6050_Read@Gy
  1392  0727  082E               	movf	??_MPU6050_Read+1,w
  1393  0728  0430               	iorwf	??_MPU6050_Read+3,w
  1394  0729  00E2               	movwf	MPU6050_Read@Gy+1
  1395  072A                     l1455:
  1396                           
  1397                           ;MPU.c: 77:   Gz = ((int)I2C_Read(0)<<8) | (int)I2C_Read(1);
  1398  072A  3001               	movlw	1
  1399  072B  120A  118A  23A9  120A  118A  	fcall	_I2C_Read
  1400  0730  1283               	bcf	3,5	;RP0=0, select bank0
  1401  0731  1303               	bcf	3,6	;RP1=0, select bank0
  1402  0732  00AD               	movwf	??_MPU6050_Read
  1403  0733  01AE               	clrf	??_MPU6050_Read+1
  1404  0734  3000               	movlw	0
  1405  0735  120A  118A  23A9  120A  118A  	fcall	_I2C_Read
  1406  073A  1283               	bcf	3,5	;RP0=0, select bank0
  1407  073B  1303               	bcf	3,6	;RP1=0, select bank0
  1408  073C  00AF               	movwf	??_MPU6050_Read+2
  1409  073D  01B0               	clrf	??_MPU6050_Read+3
  1410  073E  082F               	movf	??_MPU6050_Read+2,w
  1411  073F  00B0               	movwf	??_MPU6050_Read+3
  1412  0740  01AF               	clrf	??_MPU6050_Read+2
  1413  0741  082D               	movf	??_MPU6050_Read,w
  1414  0742  042F               	iorwf	??_MPU6050_Read+2,w
  1415  0743  00E3               	movwf	MPU6050_Read@Gz
  1416  0744  082E               	movf	??_MPU6050_Read+1,w
  1417  0745  0430               	iorwf	??_MPU6050_Read+3,w
  1418  0746  00E4               	movwf	MPU6050_Read@Gz+1
  1419  0747                     l1457:
  1420                           
  1421                           ;MPU.c: 78:   I2C_Master_Stop();
  1422  0747  120A  118A  2305  120A  118A  	fcall	_I2C_Master_Stop
  1423  074C                     l1459:
  1424                           
  1425                           ;MPU.c: 80:   PORTB = (Ay+16384)/128;
  1426  074C  3080               	movlw	128
  1427  074D  00F0               	movwf	___awdiv@divisor
  1428  074E  3000               	movlw	0
  1429  074F  00F1               	movwf	___awdiv@divisor+1
  1430  0750  1283               	bcf	3,5	;RP0=0, select bank0
  1431  0751  1303               	bcf	3,6	;RP1=0, select bank0
  1432  0752  0865               	movf	MPU6050_Read@Ay,w
  1433  0753  3E00               	addlw	0
  1434  0754  00F2               	movwf	___awdiv@dividend
  1435  0755  0866               	movf	MPU6050_Read@Ay+1,w
  1436  0756  1803               	skipnc
  1437  0757  3E01               	addlw	1
  1438  0758  3E40               	addlw	64
  1439  0759  00F3               	movwf	___awdiv@dividend+1
  1440  075A  120A  118A  2479  120A  118A  	fcall	___awdiv
  1441  075F  0870               	movf	?___awdiv,w
  1442  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1443  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1444  0762  0086               	movwf	6	;volatile
  1445  0763                     l1461:
  1446                           
  1447                           ;MPU.c: 82:   sprintf(buffer,"Ax = %d    ",Ax);
  1448  0763  303F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1449  0764  00AD               	movwf	??_MPU6050_Read
  1450  0765  082D               	movf	??_MPU6050_Read,w
  1451  0766  00A0               	movwf	sprintf@f
  1452  0767  085A               	movf	MPU6050_Read@Ax+1,w
  1453  0768  00A2               	movwf	?_sprintf+2
  1454  0769  0859               	movf	MPU6050_Read@Ax,w
  1455  076A  00A1               	movwf	?_sprintf+1
  1456  076B  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1457  076C  120A  118A  257D  120A  118A  	fcall	_sprintf
  1458                           
  1459                           ;MPU.c: 83:   UART_Write_String(buffer);
  1460  0771  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1461  0772  120A  118A  2388  120A  118A  	fcall	_UART_Write_String
  1462  0777                     l1463:
  1463                           
  1464                           ;MPU.c: 85:   sprintf(buffer," Ay = %d    ",Ay);
  1465  0777  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1466  0778  1283               	bcf	3,5	;RP0=0, select bank0
  1467  0779  1303               	bcf	3,6	;RP1=0, select bank0
  1468  077A  00AD               	movwf	??_MPU6050_Read
  1469  077B  082D               	movf	??_MPU6050_Read,w
  1470  077C  00A0               	movwf	sprintf@f
  1471  077D  0866               	movf	MPU6050_Read@Ay+1,w
  1472  077E  00A2               	movwf	?_sprintf+2
  1473  077F  0865               	movf	MPU6050_Read@Ay,w
  1474  0780  00A1               	movwf	?_sprintf+1
  1475  0781  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1476  0782  120A  118A  257D  120A  118A  	fcall	_sprintf
  1477  0787                     l1465:
  1478                           
  1479                           ;MPU.c: 86:   UART_Write_String(buffer);
  1480  0787  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1481  0788  120A  118A  2388  120A  118A  	fcall	_UART_Write_String
  1482                           
  1483                           ;MPU.c: 88:   sprintf(buffer," Az = %d    ",Az);
  1484  078D  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1485  078E  1283               	bcf	3,5	;RP0=0, select bank0
  1486  078F  1303               	bcf	3,6	;RP1=0, select bank0
  1487  0790  00AD               	movwf	??_MPU6050_Read
  1488  0791  082D               	movf	??_MPU6050_Read,w
  1489  0792  00A0               	movwf	sprintf@f
  1490  0793  085C               	movf	MPU6050_Read@Az+1,w
  1491  0794  00A2               	movwf	?_sprintf+2
  1492  0795  085B               	movf	MPU6050_Read@Az,w
  1493  0796  00A1               	movwf	?_sprintf+1
  1494  0797  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1495  0798  120A  118A  257D  120A  118A  	fcall	_sprintf
  1496  079D                     l1467:
  1497                           
  1498                           ;MPU.c: 89:   UART_Write_String(buffer);
  1499  079D  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1500  079E  120A  118A  2388  120A  118A  	fcall	_UART_Write_String
  1501  07A3                     l1469:
  1502                           
  1503                           ;MPU.c: 91:   sprintf(buffer," T = %d  ",T);
  1504  07A3  3056               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1505  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  1506  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  1507  07A6  00AD               	movwf	??_MPU6050_Read
  1508  07A7  082D               	movf	??_MPU6050_Read,w
  1509  07A8  00A0               	movwf	sprintf@f
  1510  07A9  085E               	movf	MPU6050_Read@T+1,w
  1511  07AA  00A2               	movwf	?_sprintf+2
  1512  07AB  085D               	movf	MPU6050_Read@T,w
  1513  07AC  00A1               	movwf	?_sprintf+1
  1514  07AD  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1515  07AE  120A  118A  257D  120A  118A  	fcall	_sprintf
  1516                           
  1517                           ;MPU.c: 92:   UART_Write_String(buffer);
  1518  07B3  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1519  07B4  120A  118A  2388  120A  118A  	fcall	_UART_Write_String
  1520  07B9                     l1471:
  1521                           
  1522                           ;MPU.c: 94:   sprintf(buffer," Gx = %d    ",Gx);
  1523  07B9  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1524  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  1525  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  1526  07BC  00AD               	movwf	??_MPU6050_Read
  1527  07BD  082D               	movf	??_MPU6050_Read,w
  1528  07BE  00A0               	movwf	sprintf@f
  1529  07BF  0860               	movf	MPU6050_Read@Gx+1,w
  1530  07C0  00A2               	movwf	?_sprintf+2
  1531  07C1  085F               	movf	MPU6050_Read@Gx,w
  1532  07C2  00A1               	movwf	?_sprintf+1
  1533  07C3  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1534  07C4  120A  118A  257D  120A  118A  	fcall	_sprintf
  1535  07C9                     l1473:
  1536                           
  1537                           ;MPU.c: 95:   UART_Write_String(buffer);
  1538  07C9  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1539  07CA  120A  118A  2388  120A  118A  	fcall	_UART_Write_String
  1540                           
  1541                           ;MPU.c: 97:   sprintf(buffer," Gy = %d    ",Gy);
  1542  07CF  3025               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1543  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1544  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1545  07D2  00AD               	movwf	??_MPU6050_Read
  1546  07D3  082D               	movf	??_MPU6050_Read,w
  1547  07D4  00A0               	movwf	sprintf@f
  1548  07D5  0862               	movf	MPU6050_Read@Gy+1,w
  1549  07D6  00A2               	movwf	?_sprintf+2
  1550  07D7  0861               	movf	MPU6050_Read@Gy,w
  1551  07D8  00A1               	movwf	?_sprintf+1
  1552  07D9  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1553  07DA  120A  118A  257D  120A  118A  	fcall	_sprintf
  1554  07DF                     l1475:
  1555                           
  1556                           ;MPU.c: 98:   UART_Write_String(buffer);
  1557  07DF  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1558  07E0  120A  118A  2388  120A  118A  	fcall	_UART_Write_String
  1559  07E5                     l1477:
  1560                           
  1561                           ;MPU.c: 100:   sprintf(buffer," Gz = %d\r\n",Gz);
  1562  07E5  304B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1563  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  1564  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  1565  07E8  00AD               	movwf	??_MPU6050_Read
  1566  07E9  082D               	movf	??_MPU6050_Read,w
  1567  07EA  00A0               	movwf	sprintf@f
  1568  07EB  0864               	movf	MPU6050_Read@Gz+1,w
  1569  07EC  00A2               	movwf	?_sprintf+2
  1570  07ED  0863               	movf	MPU6050_Read@Gz,w
  1571  07EE  00A1               	movwf	?_sprintf+1
  1572  07EF  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1573  07F0  120A  118A  257D  120A  118A  	fcall	_sprintf
  1574                           
  1575                           ;MPU.c: 101:   UART_Write_String(buffer);
  1576  07F5  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1577  07F6  120A  118A  2388  120A  118A  	fcall	_UART_Write_String
  1578  07FB                     l111:
  1579  07FB  0008               	return
  1580  07FC                     __end_of_MPU6050_Read:
  1581                           
  1582                           	psect	text5
  1583  057D                     __ptext5:	
  1584 ;; *************** function _sprintf *****************
  1585 ;; Defined at:
  1586 ;;		line 505 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  sp              1    wreg     PTR unsigned char 
  1589 ;;		 -> MPU6050_Read@buffer(40), 
  1590 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1591 ;;		 -> STR_7(11), STR_6(13), STR_5(13), STR_4(10), 
  1592 ;;		 -> STR_3(13), STR_2(13), STR_1(12), 
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1595 ;;		 -> MPU6050_Read@buffer(40), 
  1596 ;;  tmpval          4    0        struct .
  1597 ;;  val             2    9[BANK0 ] unsigned int 
  1598 ;;  cp              2    0        PTR const unsigned char 
  1599 ;;  len             2    0        unsigned int 
  1600 ;;  c               1   12[BANK0 ] unsigned char 
  1601 ;;  prec            1    8[BANK0 ] char 
  1602 ;;  flag            1    7[BANK0 ] unsigned char 
  1603 ;;  ap              1    6[BANK0 ] PTR void [1]
  1604 ;;		 -> ?_sprintf(2), 
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  2    0[BANK0 ] int 
  1607 ;; Registers used:
  1608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1614 ;;      Params:         0       3       0       0       0
  1615 ;;      Locals:         0       7       0       0       0
  1616 ;;      Temps:          0       3       0       0       0
  1617 ;;      Totals:         0      13       0       0       0
  1618 ;;Total ram usage:       13 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    1
  1621 ;; This function calls:
  1622 ;;		___lwdiv
  1623 ;;		___lwmod
  1624 ;; This function is called by:
  1625 ;;		_MPU6050_Read
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           
  1630                           ;psect for function _sprintf
  1631  057D                     _sprintf:
  1632                           
  1633                           ;incstack = 0
  1634                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1635                           ;sprintf@sp stored from wreg
  1636  057D  1283               	bcf	3,5	;RP0=0, select bank0
  1637  057E  1303               	bcf	3,6	;RP1=0, select bank0
  1638  057F  00AB               	movwf	sprintf@sp
  1639  0580                     l1283:
  1640                           
  1641                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const c
      +                          har * f, ...);D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 506: {;D:\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\Microchip\xc8\v2.31\pi
      +                          c\sources\c90\common\doprnt.c: 512:  char c;;D:\Microchip\xc8\v2.31\pic\sources\c90\comm
      +                          on\doprnt.c: 521:  signed char prec;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprn
      +                          t.c: 525:  unsigned char flag;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          43:  } tmpval;
  1642  0580  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1643  0581  00A3               	movwf	??_sprintf
  1644  0582  0823               	movf	??_sprintf,w
  1645  0583  00A6               	movwf	sprintf@ap
  1646                           
  1647                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1648  0584  2E4E               	goto	l1335
  1649  0585                     l1285:
  1650                           
  1651                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  1652  0585  3025               	movlw	37
  1653  0586  062C               	xorwf	sprintf@c,w
  1654  0587  1903               	btfsc	3,2
  1655  0588  2D8A               	goto	u651
  1656  0589  2D8B               	goto	u650
  1657  058A                     u651:
  1658  058A  2D97               	goto	l1291
  1659  058B                     u650:
  1660  058B                     l1287:
  1661                           
  1662                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;D:\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1663  058B  082C               	movf	sprintf@c,w
  1664  058C  00A3               	movwf	??_sprintf
  1665  058D  082B               	movf	sprintf@sp,w
  1666  058E  0084               	movwf	4
  1667  058F  0823               	movf	??_sprintf,w
  1668  0590  1383               	bcf	3,7	;select IRP bank0
  1669  0591  0080               	movwf	0
  1670  0592                     l1289:
  1671  0592  3001               	movlw	1
  1672  0593  00A3               	movwf	??_sprintf
  1673  0594  0823               	movf	??_sprintf,w
  1674  0595  07AB               	addwf	sprintf@sp,f
  1675                           
  1676                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1677  0596  2E4E               	goto	l1335
  1678  0597                     l1291:
  1679                           
  1680                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1681  0597  01A7               	clrf	sprintf@flag
  1682  0598                     l1295:	
  1683                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c = *f++) {
  1684                           
  1685  0598  3001               	movlw	1
  1686  0599  07A0               	addwf	sprintf@f,f
  1687  059A  30FF               	movlw	-1
  1688  059B  0720               	addwf	sprintf@f,w
  1689  059C  0084               	movwf	4
  1690  059D  120A  118A  2003  120A  118A  	fcall	stringdir
  1691  05A2  00AC               	movwf	sprintf@c
  1692  05A3  00A3               	movwf	??_sprintf
  1693  05A4  01A4               	clrf	??_sprintf+1
  1694                           
  1695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1696                           ; Switch size 1, requested type "simple"
  1697                           ; Number of cases is 1, Range of values is 0 to 0
  1698                           ; switch strategies available:
  1699                           ; Name         Instructions Cycles
  1700                           ; simple_byte            4     3 (average)
  1701                           ; direct_byte           11     8 (fixed)
  1702                           ; jumptable            260     6 (fixed)
  1703                           ;	Chosen strategy is simple_byte
  1704  05A5  0824               	movf	??_sprintf+1,w
  1705  05A6  3A00               	xorlw	0	; case 0
  1706  05A7  1903               	skipnz
  1707  05A8  2DAA               	goto	l1529
  1708  05A9  2E4E               	goto	l1335
  1709  05AA                     l1529:
  1710                           
  1711                           ; Switch size 1, requested type "simple"
  1712                           ; Number of cases is 3, Range of values is 0 to 105
  1713                           ; switch strategies available:
  1714                           ; Name         Instructions Cycles
  1715                           ; simple_byte           10     6 (average)
  1716                           ; jumptable            260     6 (fixed)
  1717                           ;	Chosen strategy is simple_byte
  1718  05AA  0823               	movf	??_sprintf,w
  1719  05AB  3A00               	xorlw	0	; case 0
  1720  05AC  1903               	skipnz
  1721  05AD  2E60               	goto	l1337
  1722  05AE  3A64               	xorlw	100	; case 100
  1723  05AF  1903               	skipnz
  1724  05B0  2DB5               	goto	l1297
  1725  05B1  3A0D               	xorlw	13	; case 105
  1726  05B2  1903               	skipnz
  1727  05B3  2DB5               	goto	l1297
  1728  05B4  2E4E               	goto	l1335
  1729  05B5                     l1297:
  1730                           
  1731                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned int)(*(int *)__va_arg((*(in
      +                          t **)ap), (int)0));
  1732  05B5  0826               	movf	sprintf@ap,w
  1733  05B6  0084               	movwf	4
  1734  05B7  1383               	bcf	3,7	;select IRP bank0
  1735  05B8  0800               	movf	0,w
  1736  05B9  00A9               	movwf	sprintf@val
  1737  05BA  0A84               	incf	4,f
  1738  05BB  0800               	movf	0,w
  1739  05BC  00AA               	movwf	sprintf@val+1
  1740  05BD                     l1299:
  1741  05BD  3002               	movlw	2
  1742  05BE  00A3               	movwf	??_sprintf
  1743  05BF  0823               	movf	??_sprintf,w
  1744  05C0  07A6               	addwf	sprintf@ap,f
  1745  05C1                     l1301:
  1746                           
  1747                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)val < 0) {
  1748  05C1  1FAA               	btfss	sprintf@val+1,7
  1749  05C2  2DC4               	goto	u661
  1750  05C3  2DC5               	goto	u660
  1751  05C4                     u661:
  1752  05C4  2DCE               	goto	l1307
  1753  05C5                     u660:
  1754  05C5                     l1303:
  1755                           
  1756                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
  1757  05C5  3003               	movlw	3
  1758  05C6  00A3               	movwf	??_sprintf
  1759  05C7  0823               	movf	??_sprintf,w
  1760  05C8  04A7               	iorwf	sprintf@flag,f
  1761  05C9                     l1305:
  1762                           
  1763                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
  1764  05C9  09A9               	comf	sprintf@val,f
  1765  05CA  09AA               	comf	sprintf@val+1,f
  1766  05CB  0AA9               	incf	sprintf@val,f
  1767  05CC  1903               	skipnz
  1768  05CD  0AAA               	incf	sprintf@val+1,f
  1769  05CE                     l1307:
  1770                           
  1771                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
  1772  05CE  01AC               	clrf	sprintf@c
  1773  05CF  0AAC               	incf	sprintf@c,f
  1774  05D0                     l1313:
  1775                           
  1776                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowers[c])
  1777  05D0  082C               	movf	sprintf@c,w
  1778  05D1  00A3               	movwf	??_sprintf
  1779  05D2  0723               	addwf	??_sprintf,w
  1780  05D3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1781  05D4  0084               	movwf	4
  1782  05D5  120A  118A  2003  120A  118A  	fcall	stringdir
  1783  05DA  00A4               	movwf	??_sprintf+1
  1784  05DB  120A  118A  2003  120A  118A  	fcall	stringdir
  1785  05E0  00A5               	movwf	??_sprintf+2
  1786  05E1  0825               	movf	??_sprintf+2,w
  1787  05E2  022A               	subwf	sprintf@val+1,w
  1788  05E3  1D03               	skipz
  1789  05E4  2DE7               	goto	u675
  1790  05E5  0824               	movf	??_sprintf+1,w
  1791  05E6  0229               	subwf	sprintf@val,w
  1792  05E7                     u675:
  1793  05E7  1803               	skipnc
  1794  05E8  2DEA               	goto	u671
  1795  05E9  2DEB               	goto	u670
  1796  05EA                     u671:
  1797  05EA  2DEC               	goto	l1317
  1798  05EB                     u670:
  1799  05EB  2DF6               	goto	l1319
  1800  05EC                     l1317:
  1801  05EC  3001               	movlw	1
  1802  05ED  00A3               	movwf	??_sprintf
  1803  05EE  0823               	movf	??_sprintf,w
  1804  05EF  07AC               	addwf	sprintf@c,f
  1805  05F0  3005               	movlw	5
  1806  05F1  062C               	xorwf	sprintf@c,w
  1807  05F2  1D03               	btfss	3,2
  1808  05F3  2DF5               	goto	u681
  1809  05F4  2DF6               	goto	u680
  1810  05F5                     u681:
  1811  05F5  2DD0               	goto	l1313
  1812  05F6                     u680:
  1813  05F6                     l1319:
  1814                           
  1815                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1816  05F6  0827               	movf	sprintf@flag,w
  1817  05F7  3903               	andlw	3
  1818  05F8  1903               	btfsc	3,2
  1819  05F9  2DFB               	goto	u691
  1820  05FA  2DFC               	goto	u690
  1821  05FB                     u691:
  1822  05FB  2E07               	goto	l1325
  1823  05FC                     u690:
  1824  05FC                     l1321:
  1825                           
  1826                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
  1827  05FC  302D               	movlw	45
  1828  05FD  00A3               	movwf	??_sprintf
  1829  05FE  082B               	movf	sprintf@sp,w
  1830  05FF  0084               	movwf	4
  1831  0600  0823               	movf	??_sprintf,w
  1832  0601  1383               	bcf	3,7	;select IRP bank0
  1833  0602  0080               	movwf	0
  1834  0603                     l1323:
  1835  0603  3001               	movlw	1
  1836  0604  00A3               	movwf	??_sprintf
  1837  0605  0823               	movf	??_sprintf,w
  1838  0606  07AB               	addwf	sprintf@sp,f
  1839  0607                     l1325:
  1840                           
  1841                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1842  0607  082C               	movf	sprintf@c,w
  1843  0608  00A3               	movwf	??_sprintf
  1844  0609  0823               	movf	??_sprintf,w
  1845  060A  00A8               	movwf	sprintf@prec
  1846                           
  1847                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  1848  060B  2E45               	goto	l1333
  1849  060C                     l1327:
  1850                           
  1851                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpowers[(unsigned char)prec]) %
      +                           10 + '0';
  1852  060C  300A               	movlw	10
  1853  060D  00F8               	movwf	___lwmod@divisor
  1854  060E  3000               	movlw	0
  1855  060F  00F9               	movwf	___lwmod@divisor+1
  1856  0610  0828               	movf	sprintf@prec,w
  1857  0611  00A3               	movwf	??_sprintf
  1858  0612  0723               	addwf	??_sprintf,w
  1859  0613  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1860  0614  0084               	movwf	4
  1861  0615  120A  118A  2003  120A  118A  	fcall	stringdir
  1862  061A  00F0               	movwf	___lwdiv@divisor
  1863  061B  120A  118A  2003  120A  118A  	fcall	stringdir
  1864  0620  00F1               	movwf	___lwdiv@divisor+1
  1865  0621  082A               	movf	sprintf@val+1,w
  1866  0622  00F3               	movwf	___lwdiv@dividend+1
  1867  0623  0829               	movf	sprintf@val,w
  1868  0624  00F2               	movwf	___lwdiv@dividend
  1869  0625  120A  118A  2435  120A  118A  	fcall	___lwdiv
  1870  062A  0871               	movf	?___lwdiv+1,w
  1871  062B  00FB               	movwf	___lwmod@dividend+1
  1872  062C  0870               	movf	?___lwdiv,w
  1873  062D  00FA               	movwf	___lwmod@dividend
  1874  062E  120A  118A  23FB  120A  118A  	fcall	___lwmod
  1875  0633  0878               	movf	?___lwmod,w
  1876  0634  3E30               	addlw	48
  1877  0635  1283               	bcf	3,5	;RP0=0, select bank0
  1878  0636  1303               	bcf	3,6	;RP1=0, select bank0
  1879  0637  00A4               	movwf	??_sprintf+1
  1880  0638  0824               	movf	??_sprintf+1,w
  1881  0639  00AC               	movwf	sprintf@c
  1882  063A                     l1329:
  1883                           
  1884                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
  1885  063A  082C               	movf	sprintf@c,w
  1886  063B  00A3               	movwf	??_sprintf
  1887  063C  082B               	movf	sprintf@sp,w
  1888  063D  0084               	movwf	4
  1889  063E  0823               	movf	??_sprintf,w
  1890  063F  1383               	bcf	3,7	;select IRP bank0
  1891  0640  0080               	movwf	0
  1892  0641                     l1331:
  1893  0641  3001               	movlw	1
  1894  0642  00A3               	movwf	??_sprintf
  1895  0643  0823               	movf	??_sprintf,w
  1896  0644  07AB               	addwf	sprintf@sp,f
  1897  0645                     l1333:
  1898                           
  1899                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  1900  0645  30FF               	movlw	255
  1901  0646  00A3               	movwf	??_sprintf
  1902  0647  0823               	movf	??_sprintf,w
  1903  0648  07A8               	addwf	sprintf@prec,f
  1904  0649  0A28               	incf	sprintf@prec,w
  1905  064A  1D03               	btfss	3,2
  1906  064B  2E4D               	goto	u701
  1907  064C  2E4E               	goto	u700
  1908  064D                     u701:
  1909  064D  2E0C               	goto	l1327
  1910  064E                     u700:
  1911  064E                     l1335:
  1912                           
  1913                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1914  064E  3001               	movlw	1
  1915  064F  07A0               	addwf	sprintf@f,f
  1916  0650  30FF               	movlw	-1
  1917  0651  0720               	addwf	sprintf@f,w
  1918  0652  0084               	movwf	4
  1919  0653  120A  118A  2003  120A  118A  	fcall	stringdir
  1920  0658  00A3               	movwf	??_sprintf
  1921  0659  0823               	movf	??_sprintf,w
  1922  065A  00AC               	movwf	sprintf@c
  1923  065B  082C               	movf	sprintf@c,w
  1924  065C  1D03               	btfss	3,2
  1925  065D  2E5F               	goto	u711
  1926  065E  2E60               	goto	u710
  1927  065F                     u711:
  1928  065F  2D85               	goto	l1285
  1929  0660                     u710:
  1930  0660                     l1337:
  1931                           
  1932                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1933  0660  082B               	movf	sprintf@sp,w
  1934  0661  0084               	movwf	4
  1935  0662  1383               	bcf	3,7	;select IRP bank0
  1936  0663  0180               	clrf	0
  1937  0664                     l311:
  1938  0664  0008               	return
  1939  0665                     __end_of_sprintf:
  1940                           
  1941                           	psect	text6
  1942  03FB                     __ptext6:	
  1943 ;; *************** function ___lwmod *****************
  1944 ;; Defined at:
  1945 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  divisor         2    8[COMMON] unsigned int 
  1948 ;;  dividend        2   10[COMMON] unsigned int 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  counter         1   13[COMMON] unsigned char 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  2    8[COMMON] unsigned int 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, status,0
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1960 ;;      Params:         4       0       0       0       0
  1961 ;;      Locals:         1       0       0       0       0
  1962 ;;      Temps:          1       0       0       0       0
  1963 ;;      Totals:         6       0       0       0       0
  1964 ;;Total ram usage:        6 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; This function calls:
  1967 ;;		Nothing
  1968 ;; This function is called by:
  1969 ;;		_sprintf
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           
  1974                           ;psect for function ___lwmod
  1975  03FB                     ___lwmod:
  1976  03FB                     l1231:	
  1977                           ;incstack = 0
  1978                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1979                           
  1980  03FB  0878               	movf	___lwmod@divisor,w
  1981  03FC  0479               	iorwf	___lwmod@divisor+1,w
  1982  03FD  1903               	btfsc	3,2
  1983  03FE  2C00               	goto	u551
  1984  03FF  2C01               	goto	u550
  1985  0400                     u551:
  1986  0400  2C30               	goto	l1249
  1987  0401                     u550:
  1988  0401                     l1233:
  1989  0401  01FD               	clrf	___lwmod@counter
  1990  0402  0AFD               	incf	___lwmod@counter,f
  1991  0403  2C0F               	goto	l1239
  1992  0404                     l1235:
  1993  0404  3001               	movlw	1
  1994  0405                     u565:
  1995  0405  1003               	clrc
  1996  0406  0DF8               	rlf	___lwmod@divisor,f
  1997  0407  0DF9               	rlf	___lwmod@divisor+1,f
  1998  0408  3EFF               	addlw	-1
  1999  0409  1D03               	skipz
  2000  040A  2C05               	goto	u565
  2001  040B                     l1237:
  2002  040B  3001               	movlw	1
  2003  040C  00FC               	movwf	??___lwmod
  2004  040D  087C               	movf	??___lwmod,w
  2005  040E  07FD               	addwf	___lwmod@counter,f
  2006  040F                     l1239:
  2007  040F  1FF9               	btfss	___lwmod@divisor+1,7
  2008  0410  2C12               	goto	u571
  2009  0411  2C13               	goto	u570
  2010  0412                     u571:
  2011  0412  2C04               	goto	l1235
  2012  0413                     u570:
  2013  0413                     l1241:
  2014  0413  0879               	movf	___lwmod@divisor+1,w
  2015  0414  027B               	subwf	___lwmod@dividend+1,w
  2016  0415  1D03               	skipz
  2017  0416  2C19               	goto	u585
  2018  0417  0878               	movf	___lwmod@divisor,w
  2019  0418  027A               	subwf	___lwmod@dividend,w
  2020  0419                     u585:
  2021  0419  1C03               	skipc
  2022  041A  2C1C               	goto	u581
  2023  041B  2C1D               	goto	u580
  2024  041C                     u581:
  2025  041C  2C23               	goto	l1245
  2026  041D                     u580:
  2027  041D                     l1243:
  2028  041D  0878               	movf	___lwmod@divisor,w
  2029  041E  02FA               	subwf	___lwmod@dividend,f
  2030  041F  0879               	movf	___lwmod@divisor+1,w
  2031  0420  1C03               	skipc
  2032  0421  03FB               	decf	___lwmod@dividend+1,f
  2033  0422  02FB               	subwf	___lwmod@dividend+1,f
  2034  0423                     l1245:
  2035  0423  3001               	movlw	1
  2036  0424                     u595:
  2037  0424  1003               	clrc
  2038  0425  0CF9               	rrf	___lwmod@divisor+1,f
  2039  0426  0CF8               	rrf	___lwmod@divisor,f
  2040  0427  3EFF               	addlw	-1
  2041  0428  1D03               	skipz
  2042  0429  2C24               	goto	u595
  2043  042A                     l1247:
  2044  042A  3001               	movlw	1
  2045  042B  02FD               	subwf	___lwmod@counter,f
  2046  042C  1D03               	btfss	3,2
  2047  042D  2C2F               	goto	u601
  2048  042E  2C30               	goto	u600
  2049  042F                     u601:
  2050  042F  2C13               	goto	l1241
  2051  0430                     u600:
  2052  0430                     l1249:
  2053  0430  087B               	movf	___lwmod@dividend+1,w
  2054  0431  00F9               	movwf	?___lwmod+1
  2055  0432  087A               	movf	___lwmod@dividend,w
  2056  0433  00F8               	movwf	?___lwmod
  2057  0434                     l597:
  2058  0434  0008               	return
  2059  0435                     __end_of___lwmod:
  2060                           
  2061                           	psect	text7
  2062  0435                     __ptext7:	
  2063 ;; *************** function ___lwdiv *****************
  2064 ;; Defined at:
  2065 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  divisor         2    0[COMMON] unsigned int 
  2068 ;;  dividend        2    2[COMMON] unsigned int 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  quotient        2    5[COMMON] unsigned int 
  2071 ;;  counter         1    7[COMMON] unsigned char 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  2    0[COMMON] unsigned int 
  2074 ;; Registers used:
  2075 ;;		wreg, status,2, status,0
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2081 ;;      Params:         4       0       0       0       0
  2082 ;;      Locals:         3       0       0       0       0
  2083 ;;      Temps:          1       0       0       0       0
  2084 ;;      Totals:         8       0       0       0       0
  2085 ;;Total ram usage:        8 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_sprintf
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           
  2095                           ;psect for function ___lwdiv
  2096  0435                     ___lwdiv:
  2097  0435                     l1205:	
  2098                           ;incstack = 0
  2099                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2100                           
  2101  0435  01F5               	clrf	___lwdiv@quotient
  2102  0436  01F6               	clrf	___lwdiv@quotient+1
  2103  0437                     l1207:
  2104  0437  0870               	movf	___lwdiv@divisor,w
  2105  0438  0471               	iorwf	___lwdiv@divisor+1,w
  2106  0439  1903               	btfsc	3,2
  2107  043A  2C3C               	goto	u481
  2108  043B  2C3D               	goto	u480
  2109  043C                     u481:
  2110  043C  2C74               	goto	l1227
  2111  043D                     u480:
  2112  043D                     l1209:
  2113  043D  01F7               	clrf	___lwdiv@counter
  2114  043E  0AF7               	incf	___lwdiv@counter,f
  2115  043F  2C4B               	goto	l1215
  2116  0440                     l1211:
  2117  0440  3001               	movlw	1
  2118  0441                     u495:
  2119  0441  1003               	clrc
  2120  0442  0DF0               	rlf	___lwdiv@divisor,f
  2121  0443  0DF1               	rlf	___lwdiv@divisor+1,f
  2122  0444  3EFF               	addlw	-1
  2123  0445  1D03               	skipz
  2124  0446  2C41               	goto	u495
  2125  0447                     l1213:
  2126  0447  3001               	movlw	1
  2127  0448  00F4               	movwf	??___lwdiv
  2128  0449  0874               	movf	??___lwdiv,w
  2129  044A  07F7               	addwf	___lwdiv@counter,f
  2130  044B                     l1215:
  2131  044B  1FF1               	btfss	___lwdiv@divisor+1,7
  2132  044C  2C4E               	goto	u501
  2133  044D  2C4F               	goto	u500
  2134  044E                     u501:
  2135  044E  2C40               	goto	l1211
  2136  044F                     u500:
  2137  044F                     l1217:
  2138  044F  3001               	movlw	1
  2139  0450                     u515:
  2140  0450  1003               	clrc
  2141  0451  0DF5               	rlf	___lwdiv@quotient,f
  2142  0452  0DF6               	rlf	___lwdiv@quotient+1,f
  2143  0453  3EFF               	addlw	-1
  2144  0454  1D03               	skipz
  2145  0455  2C50               	goto	u515
  2146  0456  0871               	movf	___lwdiv@divisor+1,w
  2147  0457  0273               	subwf	___lwdiv@dividend+1,w
  2148  0458  1D03               	skipz
  2149  0459  2C5C               	goto	u525
  2150  045A  0870               	movf	___lwdiv@divisor,w
  2151  045B  0272               	subwf	___lwdiv@dividend,w
  2152  045C                     u525:
  2153  045C  1C03               	skipc
  2154  045D  2C5F               	goto	u521
  2155  045E  2C60               	goto	u520
  2156  045F                     u521:
  2157  045F  2C67               	goto	l1223
  2158  0460                     u520:
  2159  0460                     l1219:
  2160  0460  0870               	movf	___lwdiv@divisor,w
  2161  0461  02F2               	subwf	___lwdiv@dividend,f
  2162  0462  0871               	movf	___lwdiv@divisor+1,w
  2163  0463  1C03               	skipc
  2164  0464  03F3               	decf	___lwdiv@dividend+1,f
  2165  0465  02F3               	subwf	___lwdiv@dividend+1,f
  2166  0466                     l1221:
  2167  0466  1475               	bsf	___lwdiv@quotient,0
  2168  0467                     l1223:
  2169  0467  3001               	movlw	1
  2170  0468                     u535:
  2171  0468  1003               	clrc
  2172  0469  0CF1               	rrf	___lwdiv@divisor+1,f
  2173  046A  0CF0               	rrf	___lwdiv@divisor,f
  2174  046B  3EFF               	addlw	-1
  2175  046C  1D03               	skipz
  2176  046D  2C68               	goto	u535
  2177  046E                     l1225:
  2178  046E  3001               	movlw	1
  2179  046F  02F7               	subwf	___lwdiv@counter,f
  2180  0470  1D03               	btfss	3,2
  2181  0471  2C73               	goto	u541
  2182  0472  2C74               	goto	u540
  2183  0473                     u541:
  2184  0473  2C4F               	goto	l1217
  2185  0474                     u540:
  2186  0474                     l1227:
  2187  0474  0876               	movf	___lwdiv@quotient+1,w
  2188  0475  00F1               	movwf	?___lwdiv+1
  2189  0476  0875               	movf	___lwdiv@quotient,w
  2190  0477  00F0               	movwf	?___lwdiv
  2191  0478                     l587:
  2192  0478  0008               	return
  2193  0479                     __end_of___lwdiv:
  2194                           
  2195                           	psect	text8
  2196  0479                     __ptext8:	
  2197 ;; *************** function ___awdiv *****************
  2198 ;; Defined at:
  2199 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  divisor         2    0[COMMON] int 
  2202 ;;  dividend        2    2[COMMON] int 
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;  quotient        2    7[COMMON] int 
  2205 ;;  sign            1    6[COMMON] unsigned char 
  2206 ;;  counter         1    5[COMMON] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  2    0[COMMON] int 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2216 ;;      Params:         4       0       0       0       0
  2217 ;;      Locals:         4       0       0       0       0
  2218 ;;      Temps:          1       0       0       0       0
  2219 ;;      Totals:         9       0       0       0       0
  2220 ;;Total ram usage:        9 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; This function calls:
  2223 ;;		Nothing
  2224 ;; This function is called by:
  2225 ;;		_MPU6050_Read
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           
  2230                           ;psect for function ___awdiv
  2231  0479                     ___awdiv:
  2232  0479                     l1345:	
  2233                           ;incstack = 0
  2234                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2235                           
  2236  0479  01F6               	clrf	___awdiv@sign
  2237  047A                     l1347:
  2238  047A  1FF1               	btfss	___awdiv@divisor+1,7
  2239  047B  2C7D               	goto	u721
  2240  047C  2C7E               	goto	u720
  2241  047D                     u721:
  2242  047D  2C85               	goto	l1353
  2243  047E                     u720:
  2244  047E                     l1349:
  2245  047E  09F0               	comf	___awdiv@divisor,f
  2246  047F  09F1               	comf	___awdiv@divisor+1,f
  2247  0480  0AF0               	incf	___awdiv@divisor,f
  2248  0481  1903               	skipnz
  2249  0482  0AF1               	incf	___awdiv@divisor+1,f
  2250  0483                     l1351:
  2251  0483  01F6               	clrf	___awdiv@sign
  2252  0484  0AF6               	incf	___awdiv@sign,f
  2253  0485                     l1353:
  2254  0485  1FF3               	btfss	___awdiv@dividend+1,7
  2255  0486  2C88               	goto	u731
  2256  0487  2C89               	goto	u730
  2257  0488                     u731:
  2258  0488  2C92               	goto	l1359
  2259  0489                     u730:
  2260  0489                     l1355:
  2261  0489  09F2               	comf	___awdiv@dividend,f
  2262  048A  09F3               	comf	___awdiv@dividend+1,f
  2263  048B  0AF2               	incf	___awdiv@dividend,f
  2264  048C  1903               	skipnz
  2265  048D  0AF3               	incf	___awdiv@dividend+1,f
  2266  048E                     l1357:
  2267  048E  3001               	movlw	1
  2268  048F  00F4               	movwf	??___awdiv
  2269  0490  0874               	movf	??___awdiv,w
  2270  0491  06F6               	xorwf	___awdiv@sign,f
  2271  0492                     l1359:
  2272  0492  01F7               	clrf	___awdiv@quotient
  2273  0493  01F8               	clrf	___awdiv@quotient+1
  2274  0494                     l1361:
  2275  0494  0870               	movf	___awdiv@divisor,w
  2276  0495  0471               	iorwf	___awdiv@divisor+1,w
  2277  0496  1903               	btfsc	3,2
  2278  0497  2C99               	goto	u741
  2279  0498  2C9A               	goto	u740
  2280  0499                     u741:
  2281  0499  2CD1               	goto	l1381
  2282  049A                     u740:
  2283  049A                     l1363:
  2284  049A  01F5               	clrf	___awdiv@counter
  2285  049B  0AF5               	incf	___awdiv@counter,f
  2286  049C  2CA8               	goto	l1369
  2287  049D                     l1365:
  2288  049D  3001               	movlw	1
  2289  049E                     u755:
  2290  049E  1003               	clrc
  2291  049F  0DF0               	rlf	___awdiv@divisor,f
  2292  04A0  0DF1               	rlf	___awdiv@divisor+1,f
  2293  04A1  3EFF               	addlw	-1
  2294  04A2  1D03               	skipz
  2295  04A3  2C9E               	goto	u755
  2296  04A4                     l1367:
  2297  04A4  3001               	movlw	1
  2298  04A5  00F4               	movwf	??___awdiv
  2299  04A6  0874               	movf	??___awdiv,w
  2300  04A7  07F5               	addwf	___awdiv@counter,f
  2301  04A8                     l1369:
  2302  04A8  1FF1               	btfss	___awdiv@divisor+1,7
  2303  04A9  2CAB               	goto	u761
  2304  04AA  2CAC               	goto	u760
  2305  04AB                     u761:
  2306  04AB  2C9D               	goto	l1365
  2307  04AC                     u760:
  2308  04AC                     l1371:
  2309  04AC  3001               	movlw	1
  2310  04AD                     u775:
  2311  04AD  1003               	clrc
  2312  04AE  0DF7               	rlf	___awdiv@quotient,f
  2313  04AF  0DF8               	rlf	___awdiv@quotient+1,f
  2314  04B0  3EFF               	addlw	-1
  2315  04B1  1D03               	skipz
  2316  04B2  2CAD               	goto	u775
  2317  04B3  0871               	movf	___awdiv@divisor+1,w
  2318  04B4  0273               	subwf	___awdiv@dividend+1,w
  2319  04B5  1D03               	skipz
  2320  04B6  2CB9               	goto	u785
  2321  04B7  0870               	movf	___awdiv@divisor,w
  2322  04B8  0272               	subwf	___awdiv@dividend,w
  2323  04B9                     u785:
  2324  04B9  1C03               	skipc
  2325  04BA  2CBC               	goto	u781
  2326  04BB  2CBD               	goto	u780
  2327  04BC                     u781:
  2328  04BC  2CC4               	goto	l1377
  2329  04BD                     u780:
  2330  04BD                     l1373:
  2331  04BD  0870               	movf	___awdiv@divisor,w
  2332  04BE  02F2               	subwf	___awdiv@dividend,f
  2333  04BF  0871               	movf	___awdiv@divisor+1,w
  2334  04C0  1C03               	skipc
  2335  04C1  03F3               	decf	___awdiv@dividend+1,f
  2336  04C2  02F3               	subwf	___awdiv@dividend+1,f
  2337  04C3                     l1375:
  2338  04C3  1477               	bsf	___awdiv@quotient,0
  2339  04C4                     l1377:
  2340  04C4  3001               	movlw	1
  2341  04C5                     u795:
  2342  04C5  1003               	clrc
  2343  04C6  0CF1               	rrf	___awdiv@divisor+1,f
  2344  04C7  0CF0               	rrf	___awdiv@divisor,f
  2345  04C8  3EFF               	addlw	-1
  2346  04C9  1D03               	skipz
  2347  04CA  2CC5               	goto	u795
  2348  04CB                     l1379:
  2349  04CB  3001               	movlw	1
  2350  04CC  02F5               	subwf	___awdiv@counter,f
  2351  04CD  1D03               	btfss	3,2
  2352  04CE  2CD0               	goto	u801
  2353  04CF  2CD1               	goto	u800
  2354  04D0                     u801:
  2355  04D0  2CAC               	goto	l1371
  2356  04D1                     u800:
  2357  04D1                     l1381:
  2358  04D1  0876               	movf	___awdiv@sign,w
  2359  04D2  1903               	btfsc	3,2
  2360  04D3  2CD5               	goto	u811
  2361  04D4  2CD6               	goto	u810
  2362  04D5                     u811:
  2363  04D5  2CDB               	goto	l1385
  2364  04D6                     u810:
  2365  04D6                     l1383:
  2366  04D6  09F7               	comf	___awdiv@quotient,f
  2367  04D7  09F8               	comf	___awdiv@quotient+1,f
  2368  04D8  0AF7               	incf	___awdiv@quotient,f
  2369  04D9  1903               	skipnz
  2370  04DA  0AF8               	incf	___awdiv@quotient+1,f
  2371  04DB                     l1385:
  2372  04DB  0878               	movf	___awdiv@quotient+1,w
  2373  04DC  00F1               	movwf	?___awdiv+1
  2374  04DD  0877               	movf	___awdiv@quotient,w
  2375  04DE  00F0               	movwf	?___awdiv
  2376  04DF                     l468:
  2377  04DF  0008               	return
  2378  04E0                     __end_of___awdiv:
  2379                           
  2380                           	psect	text9
  2381  0388                     __ptext9:	
  2382 ;; *************** function _UART_Write_String *****************
  2383 ;; Defined at:
  2384 ;;		line 36 in file "USART.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  buf             1    wreg     PTR unsigned char 
  2387 ;;		 -> MPU6050_Read@buffer(40), 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  buf             1    4[COMMON] PTR unsigned char 
  2390 ;;		 -> MPU6050_Read@buffer(40), 
  2391 ;;  i               2    2[COMMON] int 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2401 ;;      Params:         0       0       0       0       0
  2402 ;;      Locals:         3       0       0       0       0
  2403 ;;      Temps:          1       0       0       0       0
  2404 ;;      Totals:         4       0       0       0       0
  2405 ;;Total ram usage:        4 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    1
  2408 ;; This function calls:
  2409 ;;		_UART_Write
  2410 ;; This function is called by:
  2411 ;;		_MPU6050_Read
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           
  2416                           ;psect for function _UART_Write_String
  2417  0388                     _UART_Write_String:
  2418                           
  2419                           ;incstack = 0
  2420                           ; Regs used in _UART_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2421                           ;UART_Write_String@buf stored from wreg
  2422  0388  00F4               	movwf	UART_Write_String@buf
  2423  0389                     l1253:
  2424                           
  2425                           ;USART.c: 36: void UART_Write_String(char* buf);USART.c: 37: {;USART.c: 38:     int i=0;
  2426  0389  01F2               	clrf	UART_Write_String@i
  2427  038A  01F3               	clrf	UART_Write_String@i+1
  2428                           
  2429                           ;USART.c: 39:     while(buf[i] != '\0')
  2430  038B  2B9D               	goto	l1259
  2431  038C                     l1255:
  2432                           
  2433                           ;USART.c: 40:         UART_Write(buf[i++]);
  2434  038C  0872               	movf	UART_Write_String@i,w
  2435  038D  0774               	addwf	UART_Write_String@buf,w
  2436  038E  00F1               	movwf	??_UART_Write_String
  2437  038F  0871               	movf	??_UART_Write_String,w
  2438  0390  0084               	movwf	4
  2439  0391  0800               	movf	0,w
  2440  0392  120A  118A  2320  120A  118A  	fcall	_UART_Write
  2441  0397                     l1257:
  2442  0397  3001               	movlw	1
  2443  0398  07F2               	addwf	UART_Write_String@i,f
  2444  0399  1803               	skipnc
  2445  039A  0AF3               	incf	UART_Write_String@i+1,f
  2446  039B  3000               	movlw	0
  2447  039C  07F3               	addwf	UART_Write_String@i+1,f
  2448  039D                     l1259:
  2449                           
  2450                           ;USART.c: 39:     while(buf[i] != '\0')
  2451  039D  0872               	movf	UART_Write_String@i,w
  2452  039E  0774               	addwf	UART_Write_String@buf,w
  2453  039F  00F1               	movwf	??_UART_Write_String
  2454  03A0  0871               	movf	??_UART_Write_String,w
  2455  03A1  0084               	movwf	4
  2456  03A2  1383               	bcf	3,7	;select IRP bank0
  2457  03A3  0800               	movf	0,w
  2458  03A4  1D03               	btfss	3,2
  2459  03A5  2BA7               	goto	u611
  2460  03A6  2BA8               	goto	u610
  2461  03A7                     u611:
  2462  03A7  2B8C               	goto	l1255
  2463  03A8                     u610:
  2464  03A8                     l87:
  2465  03A8  0008               	return
  2466  03A9                     __end_of_UART_Write_String:
  2467                           
  2468                           	psect	text10
  2469  0320                     __ptext10:	
  2470 ;; *************** function _UART_Write *****************
  2471 ;; Defined at:
  2472 ;;		line 30 in file "USART.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  data            1    wreg     unsigned char 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;  data            1    0[COMMON] unsigned char 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2486 ;;      Params:         0       0       0       0       0
  2487 ;;      Locals:         1       0       0       0       0
  2488 ;;      Temps:          0       0       0       0       0
  2489 ;;      Totals:         1       0       0       0       0
  2490 ;;Total ram usage:        1 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_UART_Write_String
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           
  2500                           ;psect for function _UART_Write
  2501  0320                     _UART_Write:
  2502                           
  2503                           ;incstack = 0
  2504                           ; Regs used in _UART_Write: [wreg]
  2505                           ;UART_Write@data stored from wreg
  2506  0320  00F0               	movwf	UART_Write@data
  2507  0321                     l1193:
  2508  0321                     l78:	
  2509                           ;USART.c: 30: void UART_Write(unsigned char data);USART.c: 31: {;USART.c: 32:   while(!T
      +                          RMT);
  2510                           
  2511  0321  1683               	bsf	3,5	;RP0=1, select bank1
  2512  0322  1303               	bcf	3,6	;RP1=0, select bank1
  2513  0323  1C98               	btfss	24,1	;volatile
  2514  0324  2B26               	goto	u441
  2515  0325  2B27               	goto	u440
  2516  0326                     u441:
  2517  0326  2B21               	goto	l78
  2518  0327                     u440:
  2519  0327                     l1195:
  2520                           
  2521                           ;USART.c: 33:   TXREG = data;
  2522  0327  0870               	movf	UART_Write@data,w
  2523  0328  1283               	bcf	3,5	;RP0=0, select bank0
  2524  0329  1303               	bcf	3,6	;RP1=0, select bank0
  2525  032A  0099               	movwf	25	;volatile
  2526  032B                     l81:
  2527  032B  0008               	return
  2528  032C                     __end_of_UART_Write:
  2529                           
  2530                           	psect	text11
  2531  03A9                     __ptext11:	
  2532 ;; *************** function _I2C_Read *****************
  2533 ;; Defined at:
  2534 ;;		line 89 in file "I2c.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;  ACK_NACK        1    wreg     unsigned char 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;  ACK_NACK        1    1[COMMON] unsigned char 
  2539 ;;  Data            1    2[COMMON] unsigned char 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      unsigned char 
  2542 ;; Registers used:
  2543 ;;		wreg, status,2, status,0, pclath, cstack
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2549 ;;      Params:         0       0       0       0       0
  2550 ;;      Locals:         2       0       0       0       0
  2551 ;;      Temps:          1       0       0       0       0
  2552 ;;      Totals:         3       0       0       0       0
  2553 ;;Total ram usage:        3 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; Hardware stack levels required when called:    1
  2556 ;; This function calls:
  2557 ;;		_I2C_ACK
  2558 ;;		_I2C_NACK
  2559 ;; This function is called by:
  2560 ;;		_MPU6050_Read
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           
  2565                           ;psect for function _I2C_Read
  2566  03A9                     _I2C_Read:
  2567                           
  2568                           ;incstack = 0
  2569                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  2570                           ;I2C_Read@ACK_NACK stored from wreg
  2571  03A9  00F1               	movwf	I2C_Read@ACK_NACK
  2572  03AA                     l1269:
  2573                           
  2574                           ;I2c.c: 89: unsigned char I2C_Read(unsigned char ACK_NACK);I2c.c: 90: {;I2c.c: 92:     u
      +                          nsigned char Data;;I2c.c: 93:     RCEN = 1;
  2575  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  2576  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  2577  03AC  1591               	bsf	17,3	;volatile
  2578  03AD                     l193:	
  2579                           ;I2c.c: 94:     while(!BF);
  2580                           
  2581  03AD  1C14               	btfss	20,0	;volatile
  2582  03AE  2BB0               	goto	u621
  2583  03AF  2BB1               	goto	u620
  2584  03B0                     u621:
  2585  03B0  2BAD               	goto	l193
  2586  03B1                     u620:
  2587  03B1                     l1271:
  2588                           
  2589                           ;I2c.c: 95:     Data = SSPBUF;
  2590  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2591  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2592  03B3  0813               	movf	19,w	;volatile
  2593  03B4  00F0               	movwf	??_I2C_Read
  2594  03B5  0870               	movf	??_I2C_Read,w
  2595  03B6  00F2               	movwf	I2C_Read@Data
  2596  03B7                     l1273:
  2597                           
  2598                           ;I2c.c: 96:     if(ACK_NACK==0)
  2599  03B7  0871               	movf	I2C_Read@ACK_NACK,w
  2600  03B8  1D03               	btfss	3,2
  2601  03B9  2BBB               	goto	u631
  2602  03BA  2BBC               	goto	u630
  2603  03BB                     u631:
  2604  03BB  2BC2               	goto	l1277
  2605  03BC                     u630:
  2606  03BC                     l1275:
  2607                           
  2608                           ;I2c.c: 97:         I2C_ACK();
  2609  03BC  120A  118A  230E  120A  118A  	fcall	_I2C_ACK
  2610  03C1  2BC7               	goto	l198
  2611  03C2                     l1277:
  2612                           
  2613                           ;I2c.c: 99:         I2C_NACK();
  2614  03C2  120A  118A  2317  120A  118A  	fcall	_I2C_NACK
  2615  03C7                     l198:
  2616  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2617  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2618  03C9  1D8C               	btfss	12,3	;volatile
  2619  03CA  2BCC               	goto	u641
  2620  03CB  2BCD               	goto	u640
  2621  03CC                     u641:
  2622  03CC  2BC7               	goto	l198
  2623  03CD                     u640:
  2624  03CD                     l200:
  2625                           
  2626                           ;I2c.c: 101:     SSPIF=0;
  2627  03CD  118C               	bcf	12,3	;volatile
  2628  03CE                     l1279:
  2629                           
  2630                           ;I2c.c: 102:     return Data;
  2631  03CE  0872               	movf	I2C_Read@Data,w
  2632  03CF                     l201:
  2633  03CF  0008               	return
  2634  03D0                     __end_of_I2C_Read:
  2635                           
  2636                           	psect	text12
  2637  0317                     __ptext12:	
  2638 ;; *************** function _I2C_NACK *****************
  2639 ;; Defined at:
  2640 ;;		line 62 in file "I2c.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		None
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2654 ;;      Params:         0       0       0       0       0
  2655 ;;      Locals:         0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0
  2657 ;;      Totals:         0       0       0       0       0
  2658 ;;Total ram usage:        0 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_I2C_Read
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           
  2668                           ;psect for function _I2C_NACK
  2669  0317                     _I2C_NACK:
  2670  0317                     l1203:	
  2671                           ;incstack = 0
  2672                           ; Regs used in _I2C_NACK: []
  2673                           
  2674                           
  2675                           ;I2c.c: 64:  ACKDT = 1;
  2676  0317  1683               	bsf	3,5	;RP0=1, select bank1
  2677  0318  1303               	bcf	3,6	;RP1=0, select bank1
  2678  0319  1691               	bsf	17,5	;volatile
  2679                           
  2680                           ;I2c.c: 65:  ACKEN = 1;
  2681  031A  1611               	bsf	17,4	;volatile
  2682  031B                     l175:	
  2683                           ;I2c.c: 66:     while(ACKEN);
  2684                           
  2685  031B  1A11               	btfsc	17,4	;volatile
  2686  031C  2B1E               	goto	u471
  2687  031D  2B1F               	goto	u470
  2688  031E                     u471:
  2689  031E  2B1B               	goto	l175
  2690  031F                     u470:
  2691  031F                     l178:
  2692  031F  0008               	return
  2693  0320                     __end_of_I2C_NACK:
  2694                           
  2695                           	psect	text13
  2696  030E                     __ptext13:	
  2697 ;; *************** function _I2C_ACK *****************
  2698 ;; Defined at:
  2699 ;;		line 55 in file "I2c.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;		None
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;		None
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      void 
  2706 ;; Registers used:
  2707 ;;		None
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2713 ;;      Params:         0       0       0       0       0
  2714 ;;      Locals:         0       0       0       0       0
  2715 ;;      Temps:          0       0       0       0       0
  2716 ;;      Totals:         0       0       0       0       0
  2717 ;;Total ram usage:        0 bytes
  2718 ;; Hardware stack levels used:    1
  2719 ;; This function calls:
  2720 ;;		Nothing
  2721 ;; This function is called by:
  2722 ;;		_I2C_Read
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           
  2727                           ;psect for function _I2C_ACK
  2728  030E                     _I2C_ACK:
  2729  030E                     l1201:	
  2730                           ;incstack = 0
  2731                           ; Regs used in _I2C_ACK: []
  2732                           
  2733                           
  2734                           ;I2c.c: 57:  ACKDT = 0;
  2735  030E  1683               	bsf	3,5	;RP0=1, select bank1
  2736  030F  1303               	bcf	3,6	;RP1=0, select bank1
  2737  0310  1291               	bcf	17,5	;volatile
  2738                           
  2739                           ;I2c.c: 58:     ACKEN = 1;
  2740  0311  1611               	bsf	17,4	;volatile
  2741  0312                     l169:	
  2742                           ;I2c.c: 59:     while(ACKEN);
  2743                           
  2744  0312  1A11               	btfsc	17,4	;volatile
  2745  0313  2B15               	goto	u461
  2746  0314  2B16               	goto	u460
  2747  0315                     u461:
  2748  0315  2B12               	goto	l169
  2749  0316                     u460:
  2750  0316                     l172:
  2751  0316  0008               	return
  2752  0317                     __end_of_I2C_ACK:
  2753                           
  2754                           	psect	text14
  2755  04E0                     __ptext14:	
  2756 ;; *************** function _MPU6050_Init *****************
  2757 ;; Defined at:
  2758 ;;		line 19 in file "MPU.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;		None
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;		None
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      void 
  2765 ;; Registers used:
  2766 ;;		wreg, status,2, status,0, pclath, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2772 ;;      Params:         0       0       0       0       0
  2773 ;;      Locals:         0       0       0       0       0
  2774 ;;      Temps:          3       0       0       0       0
  2775 ;;      Totals:         3       0       0       0       0
  2776 ;;Total ram usage:        3 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    3
  2779 ;; This function calls:
  2780 ;;		_I2C_Master_Init
  2781 ;;		_I2C_Master_Stop
  2782 ;;		_I2C_Master_Write
  2783 ;;		_I2C_Start
  2784 ;; This function is called by:
  2785 ;;		_main
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           
  2790                           ;psect for function _MPU6050_Init
  2791  04E0                     _MPU6050_Init:
  2792  04E0                     l1389:	
  2793                           ;incstack = 0
  2794                           ; Regs used in _MPU6050_Init: [wreg+status,2+status,0+pclath+cstack]
  2795                           
  2796                           
  2797                           ;MPU.c: 22:   _delay((unsigned long)((100)*(8000000/4000.0)));
  2798  04E0  3002               	movlw	2
  2799  04E1  00F4               	movwf	??_MPU6050_Init+2
  2800  04E2  3004               	movlw	4
  2801  04E3  00F3               	movwf	??_MPU6050_Init+1
  2802  04E4  30BA               	movlw	186
  2803  04E5  00F2               	movwf	??_MPU6050_Init
  2804  04E6                     u847:
  2805  04E6  0BF2               	decfsz	??_MPU6050_Init,f
  2806  04E7  2CE6               	goto	u847
  2807  04E8  0BF3               	decfsz	??_MPU6050_Init+1,f
  2808  04E9  2CE6               	goto	u847
  2809  04EA  0BF4               	decfsz	??_MPU6050_Init+2,f
  2810  04EB  2CE6               	goto	u847
  2811  04EC  0000               	nop
  2812  04ED                     l1391:
  2813                           
  2814                           ;MPU.c: 23:   I2C_Master_Init();
  2815  04ED  120A  118A  232C  120A  118A  	fcall	_I2C_Master_Init
  2816  04F2                     l1393:
  2817                           
  2818                           ;MPU.c: 26:   I2C_Start(0xD0);
  2819  04F2  30D0               	movlw	208
  2820  04F3  120A  118A  2365  120A  118A  	fcall	_I2C_Start
  2821  04F8                     l1395:
  2822                           
  2823                           ;MPU.c: 27:   I2C_Master_Write(0x19);
  2824  04F8  3019               	movlw	25
  2825  04F9  120A  118A  2355  120A  118A  	fcall	_I2C_Master_Write
  2826  04FE                     l1397:
  2827                           
  2828                           ;MPU.c: 28:   I2C_Master_Write(0x07);
  2829  04FE  3007               	movlw	7
  2830  04FF  120A  118A  2355  120A  118A  	fcall	_I2C_Master_Write
  2831  0504                     l1399:
  2832                           
  2833                           ;MPU.c: 29:   I2C_Master_Stop();
  2834  0504  120A  118A  2305  120A  118A  	fcall	_I2C_Master_Stop
  2835  0509                     l1401:
  2836                           
  2837                           ;MPU.c: 32:   I2C_Start(0xD0);
  2838  0509  30D0               	movlw	208
  2839  050A  120A  118A  2365  120A  118A  	fcall	_I2C_Start
  2840  050F                     l1403:
  2841                           
  2842                           ;MPU.c: 33:   I2C_Master_Write(0x6B);
  2843  050F  306B               	movlw	107
  2844  0510  120A  118A  2355  120A  118A  	fcall	_I2C_Master_Write
  2845  0515                     l1405:
  2846                           
  2847                           ;MPU.c: 34:   I2C_Master_Write(0x01);
  2848  0515  3001               	movlw	1
  2849  0516  120A  118A  2355  120A  118A  	fcall	_I2C_Master_Write
  2850  051B                     l1407:
  2851                           
  2852                           ;MPU.c: 35:   I2C_Master_Stop();
  2853  051B  120A  118A  2305  120A  118A  	fcall	_I2C_Master_Stop
  2854  0520                     l1409:
  2855                           
  2856                           ;MPU.c: 38:   I2C_Start(0xD0);
  2857  0520  30D0               	movlw	208
  2858  0521  120A  118A  2365  120A  118A  	fcall	_I2C_Start
  2859  0526                     l1411:
  2860                           
  2861                           ;MPU.c: 39:   I2C_Master_Write(0x1A);
  2862  0526  301A               	movlw	26
  2863  0527  120A  118A  2355  120A  118A  	fcall	_I2C_Master_Write
  2864  052C                     l1413:
  2865                           
  2866                           ;MPU.c: 40:   I2C_Master_Write(0x00);
  2867  052C  3000               	movlw	0
  2868  052D  120A  118A  2355  120A  118A  	fcall	_I2C_Master_Write
  2869  0532                     l1415:
  2870                           
  2871                           ;MPU.c: 41:   I2C_Master_Stop();
  2872  0532  120A  118A  2305  120A  118A  	fcall	_I2C_Master_Stop
  2873  0537                     l1417:
  2874                           
  2875                           ;MPU.c: 44:   I2C_Start(0xD0);
  2876  0537  30D0               	movlw	208
  2877  0538  120A  118A  2365  120A  118A  	fcall	_I2C_Start
  2878  053D                     l1419:
  2879                           
  2880                           ;MPU.c: 45:   I2C_Master_Write(0x1C);
  2881  053D  301C               	movlw	28
  2882  053E  120A  118A  2355  120A  118A  	fcall	_I2C_Master_Write
  2883  0543                     l1421:
  2884                           
  2885                           ;MPU.c: 46:   I2C_Master_Write(0x00);
  2886  0543  3000               	movlw	0
  2887  0544  120A  118A  2355  120A  118A  	fcall	_I2C_Master_Write
  2888  0549                     l1423:
  2889                           
  2890                           ;MPU.c: 47:   I2C_Master_Stop();
  2891  0549  120A  118A  2305  120A  118A  	fcall	_I2C_Master_Stop
  2892  054E                     l1425:
  2893                           
  2894                           ;MPU.c: 50:   I2C_Start(0xD0);
  2895  054E  30D0               	movlw	208
  2896  054F  120A  118A  2365  120A  118A  	fcall	_I2C_Start
  2897  0554                     l1427:
  2898                           
  2899                           ;MPU.c: 51:   I2C_Master_Write(0x1B);
  2900  0554  301B               	movlw	27
  2901  0555  120A  118A  2355  120A  118A  	fcall	_I2C_Master_Write
  2902  055A                     l1429:
  2903                           
  2904                           ;MPU.c: 52:   I2C_Master_Write(0x18);
  2905  055A  3018               	movlw	24
  2906  055B  120A  118A  2355  120A  118A  	fcall	_I2C_Master_Write
  2907  0560                     l1431:
  2908                           
  2909                           ;MPU.c: 53:   I2C_Master_Stop();
  2910  0560  120A  118A  2305  120A  118A  	fcall	_I2C_Master_Stop
  2911  0565                     l1433:
  2912                           
  2913                           ;MPU.c: 56:   I2C_Start(0xD0);
  2914  0565  30D0               	movlw	208
  2915  0566  120A  118A  2365  120A  118A  	fcall	_I2C_Start
  2916  056B                     l1435:
  2917                           
  2918                           ;MPU.c: 57:   I2C_Master_Write(0x38);
  2919  056B  3038               	movlw	56
  2920  056C  120A  118A  2355  120A  118A  	fcall	_I2C_Master_Write
  2921  0571                     l1437:
  2922                           
  2923                           ;MPU.c: 58:   I2C_Master_Write(0x01);
  2924  0571  3001               	movlw	1
  2925  0572  120A  118A  2355  120A  118A  	fcall	_I2C_Master_Write
  2926  0577                     l1439:
  2927                           
  2928                           ;MPU.c: 59:   I2C_Master_Stop();
  2929  0577  120A  118A  2305  120A  118A  	fcall	_I2C_Master_Stop
  2930  057C                     l108:
  2931  057C  0008               	return
  2932  057D                     __end_of_MPU6050_Init:
  2933                           
  2934                           	psect	text15
  2935  0365                     __ptext15:	
  2936 ;; *************** function _I2C_Start *****************
  2937 ;; Defined at:
  2938 ;;		line 36 in file "I2c.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;  add             1    wreg     unsigned char 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  add             1    1[COMMON] unsigned char 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      void 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0, pclath, cstack
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2952 ;;      Params:         0       0       0       0       0
  2953 ;;      Locals:         1       0       0       0       0
  2954 ;;      Temps:          0       0       0       0       0
  2955 ;;      Totals:         1       0       0       0       0
  2956 ;;Total ram usage:        1 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    2
  2959 ;; This function calls:
  2960 ;;		_I2C_Master_Wait
  2961 ;;		_I2C_Master_Write
  2962 ;; This function is called by:
  2963 ;;		_MPU6050_Init
  2964 ;;		_MPU6050_Read
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           
  2969                           ;psect for function _I2C_Start
  2970  0365                     _I2C_Start:
  2971                           
  2972                           ;incstack = 0
  2973                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2974                           ;I2C_Start@add stored from wreg
  2975  0365  00F1               	movwf	I2C_Start@add
  2976  0366                     l1261:
  2977                           
  2978                           ;I2c.c: 36: void I2C_Start(char add);I2c.c: 37: {;I2c.c: 38:     I2C_Master_Wait();
  2979  0366  120A  118A  2339  120A  118A  	fcall	_I2C_Master_Wait
  2980  036B                     l1263:
  2981                           
  2982                           ;I2c.c: 39:     SEN = 1;
  2983  036B  1683               	bsf	3,5	;RP0=1, select bank1
  2984  036C  1303               	bcf	3,6	;RP1=0, select bank1
  2985  036D  1411               	bsf	17,0	;volatile
  2986                           
  2987                           ;I2c.c: 40:     I2C_Master_Write(add);
  2988  036E  0871               	movf	I2C_Start@add,w
  2989  036F  120A  118A  2355  120A  118A  	fcall	_I2C_Master_Write
  2990  0374                     l160:
  2991  0374  0008               	return
  2992  0375                     __end_of_I2C_Start:
  2993                           
  2994                           	psect	text16
  2995  0355                     __ptext16:	
  2996 ;; *************** function _I2C_Master_Write *****************
  2997 ;; Defined at:
  2998 ;;		line 69 in file "I2c.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  data            1    wreg     unsigned char 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  data            1    0[COMMON] unsigned char 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  1    wreg      unsigned char 
  3005 ;; Registers used:
  3006 ;;		wreg, status,2, status,0, pclath, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3012 ;;      Params:         0       0       0       0       0
  3013 ;;      Locals:         1       0       0       0       0
  3014 ;;      Temps:          0       0       0       0       0
  3015 ;;      Totals:         1       0       0       0       0
  3016 ;;Total ram usage:        1 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    1
  3019 ;; This function calls:
  3020 ;;		_I2C_Master_Wait
  3021 ;; This function is called by:
  3022 ;;		_MPU6050_Init
  3023 ;;		_MPU6050_Read
  3024 ;;		_I2C_Start
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           
  3029                           ;psect for function _I2C_Master_Write
  3030  0355                     _I2C_Master_Write:
  3031                           
  3032                           ;incstack = 0
  3033                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3034                           ;I2C_Master_Write@data stored from wreg
  3035  0355  00F0               	movwf	I2C_Master_Write@data
  3036  0356                     l1197:
  3037                           
  3038                           ;I2c.c: 69: unsigned char I2C_Master_Write(unsigned char data);I2c.c: 70: {;I2c.c: 71:  
      +                             I2C_Master_Wait();
  3039  0356  120A  118A  2339  120A  118A  	fcall	_I2C_Master_Wait
  3040  035B                     l1199:
  3041                           
  3042                           ;I2c.c: 72:     SSPBUF = data;
  3043  035B  0870               	movf	I2C_Master_Write@data,w
  3044  035C  1283               	bcf	3,5	;RP0=0, select bank0
  3045  035D  1303               	bcf	3,6	;RP1=0, select bank0
  3046  035E  0093               	movwf	19	;volatile
  3047  035F                     l181:	
  3048                           ;I2c.c: 73:     while(!SSPIF);
  3049                           
  3050  035F  1D8C               	btfss	12,3	;volatile
  3051  0360  2B62               	goto	u451
  3052  0361  2B63               	goto	u450
  3053  0362                     u451:
  3054  0362  2B5F               	goto	l181
  3055  0363                     u450:
  3056  0363                     l183:
  3057                           
  3058                           ;I2c.c: 74:  SSPIF = 0;
  3059  0363  118C               	bcf	12,3	;volatile
  3060  0364                     l184:	
  3061                           ;I2c.c: 75:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  3062                           
  3063  0364  0008               	return
  3064  0365                     __end_of_I2C_Master_Write:
  3065                           
  3066                           	psect	text17
  3067  0305                     __ptext17:	
  3068 ;; *************** function _I2C_Master_Stop *****************
  3069 ;; Defined at:
  3070 ;;		line 49 in file "I2c.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;		None
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      void 
  3077 ;; Registers used:
  3078 ;;		wreg, status,2, status,0, pclath, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3084 ;;      Params:         0       0       0       0       0
  3085 ;;      Locals:         0       0       0       0       0
  3086 ;;      Temps:          0       0       0       0       0
  3087 ;;      Totals:         0       0       0       0       0
  3088 ;;Total ram usage:        0 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:    1
  3091 ;; This function calls:
  3092 ;;		_I2C_Master_Wait
  3093 ;; This function is called by:
  3094 ;;		_MPU6050_Init
  3095 ;;		_MPU6050_Read
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           
  3100                           ;psect for function _I2C_Master_Stop
  3101  0305                     _I2C_Master_Stop:
  3102  0305                     l1265:	
  3103                           ;incstack = 0
  3104                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3105                           
  3106                           
  3107                           ;I2c.c: 51:     I2C_Master_Wait();
  3108  0305  120A  118A  2339  120A  118A  	fcall	_I2C_Master_Wait
  3109  030A                     l1267:
  3110                           
  3111                           ;I2c.c: 52:     PEN = 1;
  3112  030A  1683               	bsf	3,5	;RP0=1, select bank1
  3113  030B  1303               	bcf	3,6	;RP1=0, select bank1
  3114  030C  1511               	bsf	17,2	;volatile
  3115  030D                     l166:
  3116  030D  0008               	return
  3117  030E                     __end_of_I2C_Master_Stop:
  3118                           
  3119                           	psect	text18
  3120  0339                     __ptext18:	
  3121 ;; *************** function _I2C_Master_Wait *****************
  3122 ;; Defined at:
  3123 ;;		line 25 in file "I2c.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;		None
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;		None
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      void 
  3130 ;; Registers used:
  3131 ;;		wreg, status,2
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3137 ;;      Params:         0       0       0       0       0
  3138 ;;      Locals:         0       0       0       0       0
  3139 ;;      Temps:          0       0       0       0       0
  3140 ;;      Totals:         0       0       0       0       0
  3141 ;;Total ram usage:        0 bytes
  3142 ;; Hardware stack levels used:    1
  3143 ;; This function calls:
  3144 ;;		Nothing
  3145 ;; This function is called by:
  3146 ;;		_I2C_Start
  3147 ;;		_I2C_Master_Stop
  3148 ;;		_I2C_Master_Write
  3149 ;;		_I2C_Master_Start
  3150 ;;		_I2C_Master_RepeatedStart
  3151 ;;		_I2C_Read_Byte
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function _I2C_Master_Wait
  3157  0339                     _I2C_Master_Wait:
  3158  0339                     l1189:	
  3159                           ;incstack = 0
  3160                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3161                           
  3162  0339                     l151:	
  3163                           ;I2c.c: 27:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3164                           
  3165  0339  1683               	bsf	3,5	;RP0=1, select bank1
  3166  033A  1303               	bcf	3,6	;RP1=0, select bank1
  3167  033B  1914               	btfsc	20,2	;volatile
  3168  033C  2B3E               	goto	u421
  3169  033D  2B3F               	goto	u420
  3170  033E                     u421:
  3171  033E  2B39               	goto	l151
  3172  033F                     u420:
  3173  033F                     l1191:
  3174  033F  0811               	movf	17,w	;volatile
  3175  0340  391F               	andlw	31
  3176  0341  1D03               	btfss	3,2
  3177  0342  2B44               	goto	u431
  3178  0343  2B45               	goto	u430
  3179  0344                     u431:
  3180  0344  2B39               	goto	l151
  3181  0345                     u430:
  3182  0345                     l154:
  3183  0345  0008               	return
  3184  0346                     __end_of_I2C_Master_Wait:
  3185                           
  3186                           	psect	text19
  3187  032C                     __ptext19:	
  3188 ;; *************** function _I2C_Master_Init *****************
  3189 ;; Defined at:
  3190 ;;		line 15 in file "I2c.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;		None
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;		None
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3204 ;;      Params:         0       0       0       0       0
  3205 ;;      Locals:         0       0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0
  3207 ;;      Totals:         0       0       0       0       0
  3208 ;;Total ram usage:        0 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; This function calls:
  3211 ;;		Nothing
  3212 ;; This function is called by:
  3213 ;;		_MPU6050_Init
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           
  3218                           ;psect for function _I2C_Master_Init
  3219  032C                     _I2C_Master_Init:
  3220  032C                     l893:	
  3221                           ;incstack = 0
  3222                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  3223                           
  3224                           
  3225                           ;I2c.c: 17:   SSPCON = 0x28;
  3226  032C  3028               	movlw	40
  3227  032D  1283               	bcf	3,5	;RP0=0, select bank0
  3228  032E  1303               	bcf	3,6	;RP1=0, select bank0
  3229  032F  0094               	movwf	20	;volatile
  3230  0330                     l895:
  3231                           
  3232                           ;I2c.c: 18:   SSPCON2 = 0x00;
  3233  0330  1683               	bsf	3,5	;RP0=1, select bank1
  3234  0331  1303               	bcf	3,6	;RP1=0, select bank1
  3235  0332  0191               	clrf	17	;volatile
  3236  0333                     l897:
  3237                           
  3238                           ;I2c.c: 19:   SSPSTAT = 0x00;
  3239  0333  0194               	clrf	20	;volatile
  3240                           
  3241                           ;I2c.c: 20:   SSPADD = ((8000000/4)/9600) - 1;
  3242  0334  30CF               	movlw	207
  3243  0335  0093               	movwf	19	;volatile
  3244  0336                     l899:
  3245                           
  3246                           ;I2c.c: 21:   TRISC3 = 1;
  3247  0336  1587               	bsf	7,3	;volatile
  3248  0337                     l901:
  3249                           
  3250                           ;I2c.c: 22:   TRISC4 = 1;
  3251  0337  1607               	bsf	7,4	;volatile
  3252  0338                     l148:
  3253  0338  0008               	return
  3254  0339                     __end_of_I2C_Master_Init:
  3255  007E                     btemp	set	126	;btemp
  3256  007E                     wtemp0	set	126
  3257                           
  3258                           	psect	config
  3259                           
  3260                           ;Config register CONFIG1 @ 0x2007
  3261                           ;	Oscillator Selection bits
  3262                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3263                           ;	Watchdog Timer Enable bit
  3264                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3265                           ;	Power-up Timer Enable bit
  3266                           ;	PWRTE = OFF, PWRT disabled
  3267                           ;	RE3/MCLR pin function select bit
  3268                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3269                           ;	Code Protection bit
  3270                           ;	CP = OFF, Program memory code protection is disabled
  3271                           ;	Data Code Protection bit
  3272                           ;	CPD = OFF, Data memory code protection is disabled
  3273                           ;	Brown Out Reset Selection bits
  3274                           ;	BOREN = OFF, BOR disabled
  3275                           ;	Internal External Switchover bit
  3276                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3277                           ;	Fail-Safe Clock Monitor Enabled bit
  3278                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3279                           ;	Low Voltage Programming Enable bit
  3280                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3281                           ;	In-Circuit Debugger Mode bit
  3282                           ;	DEBUG = 0x1, unprogrammed default
  3283  2007                     	org	8199
  3284  2007  2CD4               	dw	11476
  3285                           
  3286                           ;Config register CONFIG2 @ 0x2008
  3287                           ;	Brown-out Reset Selection bit
  3288                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  3289                           ;	Flash Program Memory Self Write Enable bits
  3290                           ;	WRT = OFF, Write protection off
  3291  2008                     	org	8200
  3292  2008  3EFF               	dw	16127

Data Sizes:
    Strings     85
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     73      73
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_7(CODE[11]), STR_6(CODE[13]), STR_5(CODE[13]), STR_4(CODE[10]), 
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK0[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Write_String@buf	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK0[40]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART_Write_String->_UART_Write
    _MPU6050_Init->_I2C_Start
    _I2C_Start->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_MPU6050_Read
    _MPU6050_Read->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3338
                                             71 BANK0      2     2      0
                       _MPU6050_Init
                       _MPU6050_Read
                       _UART_TX_Init
                             _setOsc
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setOsc                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read                                        58    58      0    3272
                                             13 BANK0     58    58      0
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                  _UART_Write_String
                            ___awdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1865
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _UART_Write_String                                    4     4      0     343
                                              1 COMMON     4     4      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         3     3      0      66
                                              2 COMMON     3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _I2C_Start
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              1 COMMON     1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MPU6050_Init
     _I2C_Master_Init
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _MPU6050_Read
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read
       _I2C_ACK
       _I2C_NACK
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _UART_Write_String
       _UART_Write
     ___awdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _UART_TX_Init
   _setOsc
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      49       5       91.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Mar 09 10:41:54 2021

                         pc 0002          __size_of_I2C_Start 0010                          _BF 04A0  
                        l51 0387                          l45 03E4                          l54 0304  
                        l81 032B                          l75 0354                          l78 0321  
                        l87 03A8                ___awdiv@sign 0076                          fsr 0004  
__size_of_UART_Write_String 0021                         l111 07FB                         l200 03CD  
                       l201 03CF                         l108 057C                         l151 0339  
                       l311 0664                         l160 0374                         l154 0345  
                       l148 0338                         l172 0316                         l181 035F  
                       l166 030D                         l183 0363                         l175 031B  
                       l184 0364                         l169 0312                         l193 03AD  
                       l178 031F                         l198 03C7                         l468 04DF  
                       l901 0337                         l587 0478                         l597 0434  
                       l893 032C                         l895 0330                         l897 0333  
                       l899 0336                         _RD2 0042                         u420 033F  
                       u500 044F                         u421 033E                         u501 044E  
                       u430 0345                         u431 0344                         u440 0327  
                       u520 0460                         u600 0430                         _PEN 048A  
                       u441 0326                         u521 045F                         u601 042F  
                       u450 0363                         u610 03A8                         u451 0362  
                       u611 03A7                         u515 0450                         u460 0316  
                       u620 03B1                         u540 0474                         u700 064E  
                       u461 0315                         u621 03B0                         u541 0473  
                       u525 045C                         u701 064D                         u470 031F  
                       u630 03BC                         u550 0401                         u710 0660  
                       u471 031E                         u631 03BB                         u535 0468  
                       u551 0400                         u711 065F                         u640 03CD  
                       u800 04D1                         u720 047E                         u480 043D  
                       u641 03CC                         u801 04D0                         u721 047D  
                       u481 043C                         u810 04D6                         u730 0489  
                       u570 0413                         u650 058B                         u811 04D5  
                       u731 0488                         u571 0412                         u651 058A  
                       u740 049A                         u580 041D                         u660 05C5  
                       _SEN 0488                         u741 0499                         u581 041C  
                       u565 0405                         u661 05C4                         u670 05EB  
                       u495 0441                         u671 05EA                         u760 04AC  
                       u680 05F6                         u761 04AB                         u585 0419  
                       u681 05F5                         u690 05FC                         u755 049E  
                       u595 0424                         u691 05FB                         u675 05E7  
                       u780 04BD                         u781 04BC                         u837 03F3  
                       u847 04E6                         u775 04AD                         u785 04B9  
                       u795 04C5             __end_of_I2C_ACK 0317                         fsr0 0004  
                       indf 0000          MPU6050_Read@buffer 0031                        l1031 0375  
                      l1201 030E                        l1041 034F                        l1033 0346  
                      l1203 0317                        l1211 0440                        l1043 0352  
                      l1035 0349                        l1221 0466                        l1213 0447  
                      l1205 0435                        l1301 05C1                        l1045 0353  
                      l1037 034B                        l1223 0467                        l1215 044B  
                      l1207 0437                        l1231 03FB                        l1303 05C5  
                      l1039 034C                        l1401 0509                        l1225 046E  
                      l1217 044F                        l1209 043D                        l1241 0413  
                      l1233 0401                        l1321 05FC                        l1313 05D0  
                      l1305 05C9                        l1411 0526                        l1403 050F  
                      l1219 0460                        l1227 0474                        l1243 041D  
                      l1235 0404                        l1331 0641                        l1323 0603  
                      l1307 05CE                        l1261 0366                        l1421 0543  
                      l1413 052C                        l1405 0515                        l1253 0389  
                      l1245 0423                        l1237 040B                        l1333 0645  
                      l1325 0607                        l1317 05EC                        l1191 033F  
                      l1263 036B                        l1431 0560                        l1423 0549  
                      l1415 0532                        l1407 051B                        l1271 03B1  
                      l1255 038C                        l1351 0483                        l1247 042A  
                      l1239 040F                        l1327 060C                        l1319 05F6  
                      l1335 064E                        l1265 0305                        l1433 0565  
                      l1425 054E                        l1417 0537                        l1409 0520  
                      l1273 03B7                        l1193 0321                        l1257 0397  
                      l1361 0494                        l1353 0485                        l1345 0479  
                      l1249 0430                        l1329 063A                        l1337 0660  
                      l1441 0665                        l1267 030A                        l1435 056B  
                      l1427 0554                        l1419 053D                        l1275 03BC  
                      l1195 0327                        l1259 039D                        l1371 04AC  
                      l1363 049A                        l1355 0489                        l1347 047A  
                      l1291 0597                        l1283 0580                        l1451 06F0  
                      l1443 067C                        l1099 0300                        l1189 0339  
                      l1197 0356                        l1437 0571                        l1429 055A  
                      l1277 03C2                        l1269 03AA                        l1373 04BD  
                      l1365 049D                        l1381 04D1                        l1357 048E  
                      l1349 047E                        l1285 0585                        l1461 0763  
                      l1453 070D                        l1445 0699                        l1199 035B  
                      l1439 0577                        l1391 04ED                        l1279 03CE  
                      l1383 04D6                        l1375 04C3                        l1367 04A4  
                      l1359 0492                        l1295 0598                        l1287 058B  
                      l1471 07B9                        l1463 0777                        l1455 072A  
                      l1447 06B6                        l1393 04F2                        l1385 04DB  
                      l1377 04C4                        l1369 04A8                        l1297 05B5  
                      l1529 05AA                        l1289 0592                        l1473 07C9  
                      l1465 0787                        l1457 0747                        l1449 06D3  
                      l1481 03D5                        l1395 04F8                        l1379 04CB  
                      l1299 05BD                        l1475 07DF                        l1467 079D  
                      l1459 074C                        l1483 03DA                        l1397 04FE  
                      l1389 04E0                        l1477 07E5                        l1469 07A3  
                      l1485 03DF                        l1399 0504                        l1487 03E8  
                      l1479 03D0                        l1489 03ED                        STR_1 0047  
                      STR_2 0020                        STR_3 003A                        STR_4 005E  
                      STR_5 0013                        STR_6 002D                        STR_7 0053  
                      _BRGH 04C2                        _RCEN 048B                        _SPEN 00C7  
                      _RSEN 0489                        _TRMT 04C1                        _TXEN 04C5  
                      _SYNC 04C4            __end_of_I2C_NACK 0320                        _main 03D0  
          __end_of_I2C_Read 03D0                        btemp 007E                        start 0000  
          ?_I2C_Master_Init 0070            ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070  
                     ?_main 0070                       _ACKEN 048C                       _ACKDT 048D  
           __end_of___awdiv 04E0                       _ANSEL 0188             ___awdiv@divisor 0070  
           __end_of___lwdiv 0479             __end_of___lwmod 0435             ___awdiv@counter 0075  
                     _SPBRG 0099                       _PORTA 0005                       _PORTB 0006  
                     _PORTC 0007                       _PORTD 0008                       _PORTE 0009  
                     _TRISA 0085                       _TRISB 0086                       _TRISC 0087  
                     _TRISD 0088                       _TRISE 0089                       _SSPIF 0063  
                     _TXREG 0019                 ?_UART_Write 0070               ?_MPU6050_Init 0070  
             ?_MPU6050_Read 0070             __end_of_dpowers 0013                       _setup 0375  
         __end_of_I2C_Start 0375                       pclath 000A                       status 0003  
                     wtemp0 007E             __end_of_sprintf 0665              MPU6050_Read@Ax 0059  
            MPU6050_Read@Ay 0065              MPU6050_Read@Az 005B              MPU6050_Read@Gx 005F  
            MPU6050_Read@Gy 0061              MPU6050_Read@Gz 0063             __initialization 07FC  
              __end_of_main 03FB                   ??_I2C_ACK 0070                      ??_main 0067  
         ?_I2C_Master_Write 0070              ??_MPU6050_Init 0072              ??_MPU6050_Read 002D  
        ??_I2C_Master_Write 0070            ___awdiv@dividend 0072                      ?_setup 0070  
                    _ANSELH 0189                      _SSPADD 0093                      _TRISC3 043B  
                    _TRISC4 043C                      _TRISC6 043E                      _TRISC7 043F  
                    _SSPCON 0014                      _SSPBUF 0013            I2C_Read@ACK_NACK 0071  
       __size_of_UART_Write 000C                   ??___awdiv 0074                   ??___lwdiv 0074  
                 ??___lwmod 007C            ___awdiv@quotient 0077                      _setOsc 0300  
                 ?_I2C_NACK 0070                   ?_I2C_Read 0070                   ??_sprintf 0023  
   __end_of__initialization 07FC              __pcstackCOMMON 0070               __end_of_setup 0388  
                ??_I2C_NACK 0070                  ??_I2C_Read 0070                     ??_setup 0070  
              I2C_Read@Data 0072                  __pmaintext 03D0        __end_of_MPU6050_Init 057D  
      __end_of_MPU6050_Read 07FC                     _I2C_ACK 030E                     _ACKSTAT 048E  
                   ?_setOsc 0070                ??_UART_Write 0070                     _SSPCON2 0091  
                   _SSPSTAT 0094               ?_UART_TX_Init 0070                  __stringtab 0003  
              I2C_Start@add 0071                   _I2C_Start 0365                     ___awdiv 0479  
        __end_of_UART_Write 032C                     ___lwdiv 0435                     ___lwmod 03FB  
           __size_of_setOsc 0005                     __ptext1 0375                     __ptext2 0300  
                   __ptext3 0346                     __ptext4 0665                     __ptext5 057D  
                   __ptext6 03FB                     __ptext7 0435                     __ptext8 0479  
                   __ptext9 0388                     _dpowers 0009    __size_of_I2C_Master_Init 000D  
  __size_of_I2C_Master_Wait 000D    __size_of_I2C_Master_Stop 0009              ??_UART_TX_Init 0070  
                   _sprintf 057D        end_of_initialization 07FC                  ?_I2C_Start 0070  
 __size_of_I2C_Master_Write 0010              UART_Write@data 0070           __size_of_I2C_NACK 0009  
         __size_of_I2C_Read 0027       __size_of_MPU6050_Init 009D       __size_of_MPU6050_Read 0197  
            __end_of_setOsc 0305         start_initialization 07FC               MPU6050_Read@T 005D  
              _MPU6050_Init 04E0                _MPU6050_Read 0665           ??_I2C_Master_Init 0070  
         ??_I2C_Master_Wait 0070           ??_I2C_Master_Stop 0070                 ??_I2C_Start 0071  
      __end_of_UART_TX_Init 0355                    ?_I2C_ACK 0070                    ??_setOsc 0070  
                 ___latbits 0002               __pcstackBANK0 0020                 sprintf@flag 0027  
               sprintf@prec 0028            _I2C_Master_Write 0355            ___lwdiv@dividend 0072  
                  ?___awdiv 0070                    ?___lwdiv 0070                    ?___lwmod 0078  
      I2C_Master_Write@data 0070                   __pstrings 0003                    _I2C_NACK 0317  
                  _I2C_Read 03A9            ___lwdiv@quotient 0075                    ?_sprintf 0020  
            __size_of_setup 0013            __size_of_I2C_ACK 0009        UART_Write_String@buf 0074  
               __stringbase 0008       __size_of_UART_TX_Init 000F            __size_of___awdiv 0067  
          __size_of___lwdiv 0044            __size_of___lwmod 003A          __end_of__stringtab 0009  
         _UART_Write_String 0388                  sprintf@val 0029             _I2C_Master_Init 032C  
           _I2C_Master_Wait 0339             _I2C_Master_Stop 0305          ?_UART_Write_String 0070  
           ___lwdiv@divisor 0070             ___lwdiv@counter 0077                    __ptext10 0320  
                  __ptext11 03A9                    __ptext12 0317                    __ptext13 030E  
                  __ptext14 04E0                    __ptext15 0365                    __ptext16 0355  
                  __ptext17 0305                    __ptext18 0339                    __ptext19 032C  
          __size_of_sprintf 00E8                _UART_TX_Init 0346         ??_UART_Write_String 0071  
             __size_of_main 002B   __end_of_UART_Write_String 03A9    __end_of_I2C_Master_Write 0365  
                 sprintf@ap 0026                   sprintf@sp 002B            ___lwmod@dividend 007A  
                 stringcode 0003                  _OSCCONbits 008F          UART_Write_String@i 0072  
   __end_of_I2C_Master_Init 0339     __end_of_I2C_Master_Wait 0346     __end_of_I2C_Master_Stop 030E  
                  sprintf@c 002C                    sprintf@f 0020             ___lwmod@divisor 0078  
           ___lwmod@counter 007D                    stringdir 0003                    stringtab 0003  
                _UART_Write 0320  
