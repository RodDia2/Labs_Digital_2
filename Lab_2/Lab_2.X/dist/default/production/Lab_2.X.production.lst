

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 14:40:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367                           
   368                           	psect	idataBANK0
   369  0114                     __pidataBANK0:
   370                           
   371                           ;initializer for _segmentos
   372  0114  343F               	retlw	63
   373  0115  3406               	retlw	6
   374  0116  345B               	retlw	91
   375  0117  344F               	retlw	79
   376  0118  3466               	retlw	102
   377  0119  346D               	retlw	109
   378  011A  347D               	retlw	125
   379  011B  3407               	retlw	7
   380  011C  347F               	retlw	127
   381  011D  346F               	retlw	111
   382  011E  3477               	retlw	119
   383  011F  347C               	retlw	124
   384  0120  3439               	retlw	57
   385  0121  345E               	retlw	94
   386  0122  3479               	retlw	121
   387  0123  3471               	retlw	113
   388  001F                     _ADCON0	set	31
   389  001F                     _ADCON0bits	set	31
   390  0005                     _PORTA	set	5
   391  0006                     _PORTB	set	6
   392  0009                     _PORTE	set	9
   393  0001                     _TMR0	set	1
   394  0008                     _PORTD	set	8
   395  0009                     _PORTEbits	set	9
   396  001E                     _ADRESH	set	30
   397  000C                     _PIR1bits	set	12
   398  0007                     _PORTC	set	7
   399  0006                     _PORTBbits	set	6
   400  000B                     _INTCONbits	set	11
   401  0081                     _OPTION_REG	set	129
   402  009F                     _ADCON1	set	159
   403  008C                     _PIE1bits	set	140
   404  0096                     _IOCB	set	150
   405  0085                     _TRISA	set	133
   406  0088                     _TRISD	set	136
   407  0087                     _TRISC	set	135
   408  0086                     _TRISB	set	134
   409  0089                     _TRISE	set	137
   410  0189                     _ANSELH	set	393
   411  0188                     _ANSEL	set	392
   412                           
   413                           	psect	cinit
   414  000F                     start_initialization:	
   415                           ; #config settings
   416                           
   417  000F                     __initialization:
   418                           
   419                           ; Initialize objects allocated to BANK0
   420  000F  1383               	bcf	3,7	;select IRP bank0
   421  0010  3030               	movlw	low (__pdataBANK0+16)
   422  0011  00FD               	movwf	btemp+-1
   423  0012  3001               	movlw	high __pidataBANK0
   424  0013  00FE               	movwf	btemp
   425  0014  3014               	movlw	low __pidataBANK0
   426  0015  00FF               	movwf	btemp+1
   427  0016  3020               	movlw	low __pdataBANK0
   428  0017  0084               	movwf	4
   429  0018  120A  118A  2105  120A  118A  	fcall	init_ram0
   430                           
   431                           ; Clear objects allocated to BANK0
   432  001D  01B0               	clrf	__pbssBANK0& (0+127)
   433                           
   434                           ; Clear objects allocated to COMMON
   435  001E  01F8               	clrf	__pbssCOMMON& (0+127)
   436  001F  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   437  0020  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   438  0021  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   439  0022  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   440  0023  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   441  0024                     end_of_initialization:	
   442                           ;End of C runtime variable initialization code
   443                           
   444  0024                     __end_of__initialization:
   445  0024  0183               	clrf	3
   446  0025  120A  118A  28A6   	ljmp	_main	;jump to C main() function
   447                           
   448                           	psect	bssCOMMON
   449  0078                     __pbssCOMMON:
   450  0078                     _display_2:
   451  0078                     	ds	1
   452  0079                     _display_1:
   453  0079                     	ds	1
   454  007A                     _adc_high:
   455  007A                     	ds	1
   456  007B                     _adc_low:
   457  007B                     	ds	1
   458  007C                     _valor_adc:
   459  007C                     	ds	1
   460  007D                     _swap:
   461  007D                     	ds	1
   462                           
   463                           	psect	bssBANK0
   464  0030                     __pbssBANK0:
   465  0030                     _cambio:
   466  0030                     	ds	1
   467                           
   468                           	psect	dataBANK0
   469  0020                     __pdataBANK0:
   470  0020                     _segmentos:
   471  0020                     	ds	16
   472                           
   473                           	psect	inittext
   474  0101                     init_fetch0:	
   475                           ;	Called with low address in FSR and high address in W
   476                           
   477  0101  087E               	movf	btemp,w
   478  0102  008A               	movwf	10
   479  0103  087F               	movf	btemp+1,w
   480  0104  0082               	movwf	2
   481  0105                     init_ram0:	
   482                           ;Called with:
   483                           ;	high address of idata address in btemp 
   484                           ;	low address of idata address in btemp+1 
   485                           ;	low address of data in FSR
   486                           ;	high address + 1 of data in btemp-1
   487                           
   488  0105  120A  118A  2101  120A  118A  	fcall	init_fetch0
   489  010A  0080               	movwf	0
   490  010B  0A84               	incf	4,f
   491  010C  0804               	movf	4,w
   492  010D  067D               	xorwf	btemp+-1,w
   493  010E  1903               	btfsc	3,2
   494  010F  3400               	retlw	0
   495  0110  0AFF               	incf	btemp+1,f
   496  0111  1903               	btfsc	3,2
   497  0112  0AFE               	incf	btemp,f
   498  0113  2905               	goto	init_ram0
   499                           
   500                           	psect	cstackCOMMON
   501  0070                     __pcstackCOMMON:
   502  0070                     ?_setup:
   503  0070                     ?_initADC:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_initTMR0:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_adc:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_ISR:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ??_ISR:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_main:	
   519                           ; 1 bytes @ 0x0
   520                           
   521                           
   522                           ; 1 bytes @ 0x0
   523  0070                     	ds	6
   524  0076                     ??_setup:
   525  0076                     ??_initADC:	
   526                           ; 1 bytes @ 0x6
   527                           
   528  0076                     ??_initTMR0:	
   529                           ; 1 bytes @ 0x6
   530                           
   531  0076                     ??_adc:	
   532                           ; 1 bytes @ 0x6
   533                           
   534                           
   535                           ; 1 bytes @ 0x6
   536  0076                     	ds	1
   537  0077                     ??_main:
   538                           
   539                           ; 1 bytes @ 0x7
   540  0077                     	ds	1
   541                           
   542                           	psect	maintext
   543  00A6                     __pmaintext:	
   544 ;;
   545 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   546 ;;
   547 ;; *************** function _main *****************
   548 ;; Defined at:
   549 ;;		line 123 in file "main.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : B00/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   563 ;;      Params:         0       0       0       0       0
   564 ;;      Locals:         0       0       0       0       0
   565 ;;      Temps:          1       0       0       0       0
   566 ;;      Totals:         1       0       0       0       0
   567 ;;Total ram usage:        1 bytes
   568 ;; Hardware stack levels required when called:    2
   569 ;; This function calls:
   570 ;;		_adc
   571 ;;		_initADC
   572 ;;		_initTMR0
   573 ;;		_setup
   574 ;; This function is called by:
   575 ;;		Startup code after reset
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           
   580                           ;psect for function _main
   581  00A6                     _main:
   582  00A6                     l794:	
   583                           ;incstack = 0
   584                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   585                           
   586                           
   587                           ;main.c: 126:     setup();
   588  00A6  120A  118A  20D8  120A  118A  	fcall	_setup
   589                           
   590                           ;main.c: 127:     initADC();
   591  00AB  120A  118A  2131  120A  118A  	fcall	_initADC
   592                           
   593                           ;main.c: 128:     initTMR0();
   594  00B0  120A  118A  2124  120A  118A  	fcall	_initTMR0
   595  00B5                     l85:	
   596                           ;main.c: 134:     while (1) {
   597                           
   598                           
   599                           ;main.c: 136:         adc();
   600  00B5  120A  118A  213E  120A  118A  	fcall	_adc
   601  00BA                     l796:
   602                           
   603                           ;main.c: 138:         display_1 = segmentos[adc_high];
   604  00BA  087A               	movf	_adc_high,w
   605  00BB  3E20               	addlw	(low (_segmentos| 0))& (0+255)
   606  00BC  0084               	movwf	4
   607  00BD  1383               	bcf	3,7	;select IRP bank0
   608  00BE  0800               	movf	0,w
   609  00BF  00F7               	movwf	??_main
   610  00C0  0877               	movf	??_main,w
   611  00C1  00F9               	movwf	_display_1
   612  00C2                     l798:
   613                           
   614                           ;main.c: 139:         display_2 = segmentos[adc_low];
   615  00C2  087B               	movf	_adc_low,w
   616  00C3  3E20               	addlw	(low (_segmentos| 0))& (0+255)
   617  00C4  0084               	movwf	4
   618  00C5  0800               	movf	0,w
   619  00C6  00F7               	movwf	??_main
   620  00C7  0877               	movf	??_main,w
   621  00C8  00F8               	movwf	_display_2
   622  00C9                     l800:
   623                           
   624                           ;main.c: 142:         if (valor_adc > PORTC) {
   625  00C9  087C               	movf	_valor_adc,w
   626  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   627  00CB  1303               	bcf	3,6	;RP1=0, select bank0
   628  00CC  0207               	subwf	7,w	;volatile
   629  00CD  1803               	skipnc
   630  00CE  28D0               	goto	u111
   631  00CF  28D1               	goto	u110
   632  00D0                     u111:
   633  00D0  28D3               	goto	l86
   634  00D1                     u110:
   635  00D1                     l802:
   636                           
   637                           ;main.c: 143:             PORTEbits.RE2 = 1;
   638  00D1  1509               	bsf	9,2	;volatile
   639                           
   640                           ;main.c: 144:         } else {
   641  00D2  28B5               	goto	l85
   642  00D3                     l86:
   643                           
   644                           ;main.c: 145:             PORTEbits.RE2 = 0;
   645  00D3  1109               	bcf	9,2	;volatile
   646  00D4  28B5               	goto	l85
   647  00D5  120A  118A  280C   	ljmp	start
   648  00D8                     __end_of_main:
   649                           
   650                           	psect	text1
   651  00D8                     __ptext1:	
   652 ;; *************** function _setup *****************
   653 ;; Defined at:
   654 ;;		line 157 in file "main.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, status,2
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   668 ;;      Params:         0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0
   671 ;;      Totals:         0       0       0       0       0
   672 ;;Total ram usage:        0 bytes
   673 ;; Hardware stack levels used:    1
   674 ;; Hardware stack levels required when called:    1
   675 ;; This function calls:
   676 ;;		Nothing
   677 ;; This function is called by:
   678 ;;		_main
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           
   683                           ;psect for function _setup
   684  00D8                     _setup:
   685  00D8                     l710:	
   686                           ;incstack = 0
   687                           ; Regs used in _setup: [wreg+status,2]
   688                           
   689                           
   690                           ;main.c: 161:     TRISE = 0;
   691  00D8  1683               	bsf	3,5	;RP0=1, select bank1
   692  00D9  1303               	bcf	3,6	;RP1=0, select bank1
   693  00DA  0189               	clrf	9	;volatile
   694                           
   695                           ;main.c: 162:     PORTE = 0;
   696  00DB  1283               	bcf	3,5	;RP0=0, select bank0
   697  00DC  1303               	bcf	3,6	;RP1=0, select bank0
   698  00DD  0189               	clrf	9	;volatile
   699  00DE                     l712:
   700                           
   701                           ;main.c: 163:     ANSEL = 0b00000001;
   702  00DE  3001               	movlw	1
   703  00DF  1683               	bsf	3,5	;RP0=1, select bank3
   704  00E0  1703               	bsf	3,6	;RP1=1, select bank3
   705  00E1  0088               	movwf	8	;volatile
   706  00E2                     l714:
   707                           
   708                           ;main.c: 164:     ANSELH = 0;
   709  00E2  0189               	clrf	9	;volatile
   710                           
   711                           ;main.c: 165:     TRISB = 0b00000011;
   712  00E3  3003               	movlw	3
   713  00E4  1683               	bsf	3,5	;RP0=1, select bank1
   714  00E5  1303               	bcf	3,6	;RP1=0, select bank1
   715  00E6  0086               	movwf	6	;volatile
   716  00E7                     l716:
   717                           
   718                           ;main.c: 166:     PORTB = 0;
   719  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   720  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   721  00E9  0186               	clrf	6	;volatile
   722  00EA                     l718:
   723                           
   724                           ;main.c: 167:     TRISC = 0;
   725  00EA  1683               	bsf	3,5	;RP0=1, select bank1
   726  00EB  1303               	bcf	3,6	;RP1=0, select bank1
   727  00EC  0187               	clrf	7	;volatile
   728  00ED                     l720:
   729                           
   730                           ;main.c: 168:     PORTC = 0;
   731  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   732  00EE  1303               	bcf	3,6	;RP1=0, select bank0
   733  00EF  0187               	clrf	7	;volatile
   734  00F0                     l722:
   735                           
   736                           ;main.c: 169:     TRISD = 0;
   737  00F0  1683               	bsf	3,5	;RP0=1, select bank1
   738  00F1  1303               	bcf	3,6	;RP1=0, select bank1
   739  00F2  0188               	clrf	8	;volatile
   740  00F3                     l724:
   741                           
   742                           ;main.c: 170:     PORTD = 0;
   743  00F3  1283               	bcf	3,5	;RP0=0, select bank0
   744  00F4  1303               	bcf	3,6	;RP1=0, select bank0
   745  00F5  0188               	clrf	8	;volatile
   746  00F6                     l726:
   747                           
   748                           ;main.c: 171:     PORTA = 0;
   749  00F6  0185               	clrf	5	;volatile
   750                           
   751                           ;main.c: 172:     TRISA = 0b00000001;
   752  00F7  3001               	movlw	1
   753  00F8  1683               	bsf	3,5	;RP0=1, select bank1
   754  00F9  1303               	bcf	3,6	;RP1=0, select bank1
   755  00FA  0085               	movwf	5	;volatile
   756  00FB                     l728:
   757                           
   758                           ;main.c: 174:     INTCONbits.GIE = 1;
   759  00FB  178B               	bsf	11,7	;volatile
   760  00FC                     l730:
   761                           
   762                           ;main.c: 175:     INTCONbits.RBIE = 1;
   763  00FC  158B               	bsf	11,3	;volatile
   764  00FD                     l732:
   765                           
   766                           ;main.c: 176:     INTCONbits.RBIF = 0;
   767  00FD  100B               	bcf	11,0	;volatile
   768                           
   769                           ;main.c: 177:     IOCB = 0b00000011;
   770  00FE  3003               	movlw	3
   771  00FF  0096               	movwf	22	;volatile
   772  0100                     l93:
   773  0100  0008               	return
   774  0101                     __end_of_setup:
   775                           
   776                           	psect	text2
   777  0124                     __ptext2:	
   778 ;; *************** function _initTMR0 *****************
   779 ;; Defined at:
   780 ;;		line 3 in file "TMR0.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;		None
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   794 ;;      Params:         0       0       0       0       0
   795 ;;      Locals:         0       0       0       0       0
   796 ;;      Temps:          0       0       0       0       0
   797 ;;      Totals:         0       0       0       0       0
   798 ;;Total ram usage:        0 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    1
   801 ;; This function calls:
   802 ;;		Nothing
   803 ;; This function is called by:
   804 ;;		_main
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           
   809                           ;psect for function _initTMR0
   810  0124                     _initTMR0:
   811  0124                     l740:	
   812                           ;incstack = 0
   813                           ; Regs used in _initTMR0: [wreg]
   814                           
   815                           
   816                           ;TMR0.c: 5:   INTCONbits.GIE = 1;
   817  0124  178B               	bsf	11,7	;volatile
   818                           
   819                           ;TMR0.c: 6:   INTCONbits.PEIE = 1;
   820  0125  170B               	bsf	11,6	;volatile
   821                           
   822                           ;TMR0.c: 7:   INTCONbits.T0IE = 1;
   823  0126  168B               	bsf	11,5	;volatile
   824                           
   825                           ;TMR0.c: 8:   INTCONbits.T0IF = 0;
   826  0127  110B               	bcf	11,2	;volatile
   827  0128                     l742:
   828                           
   829                           ;TMR0.c: 10:   OPTION_REG = 0b10000101;
   830  0128  3085               	movlw	133
   831  0129  1683               	bsf	3,5	;RP0=1, select bank1
   832  012A  1303               	bcf	3,6	;RP1=0, select bank1
   833  012B  0081               	movwf	1	;volatile
   834                           
   835                           ;TMR0.c: 12:   TMR0 = 176;
   836  012C  30B0               	movlw	176
   837  012D  1283               	bcf	3,5	;RP0=0, select bank0
   838  012E  1303               	bcf	3,6	;RP1=0, select bank0
   839  012F  0081               	movwf	1	;volatile
   840  0130                     l118:
   841  0130  0008               	return
   842  0131                     __end_of_initTMR0:
   843                           
   844                           	psect	text3
   845  0131                     __ptext3:	
   846 ;; *************** function _initADC *****************
   847 ;; Defined at:
   848 ;;		line 3 in file "ADC.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		wreg, status,2
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   862 ;;      Params:         0       0       0       0       0
   863 ;;      Locals:         0       0       0       0       0
   864 ;;      Temps:          0       0       0       0       0
   865 ;;      Totals:         0       0       0       0       0
   866 ;;Total ram usage:        0 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; Hardware stack levels required when called:    1
   869 ;; This function calls:
   870 ;;		Nothing
   871 ;; This function is called by:
   872 ;;		_main
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           
   877                           ;psect for function _initADC
   878  0131                     _initADC:
   879  0131                     l734:	
   880                           ;incstack = 0
   881                           ; Regs used in _initADC: [wreg+status,2]
   882                           
   883                           
   884                           ;ADC.c: 9:     INTCONbits.PEIE = 1;
   885  0131  170B               	bsf	11,6	;volatile
   886                           
   887                           ;ADC.c: 10:     PIE1bits.ADIE = 1;
   888  0132  1683               	bsf	3,5	;RP0=1, select bank1
   889  0133  1303               	bcf	3,6	;RP1=0, select bank1
   890  0134  170C               	bsf	12,6	;volatile
   891                           
   892                           ;ADC.c: 11:     PIR1bits.ADIF = 0;
   893  0135  1283               	bcf	3,5	;RP0=0, select bank0
   894  0136  1303               	bcf	3,6	;RP1=0, select bank0
   895  0137  130C               	bcf	12,6	;volatile
   896  0138                     l736:
   897                           
   898                           ;ADC.c: 12:     ADCON0 = 0b01000001;
   899  0138  3041               	movlw	65
   900  0139  009F               	movwf	31	;volatile
   901  013A                     l738:
   902                           
   903                           ;ADC.c: 13:     ADCON1 = 0b00000000;
   904  013A  1683               	bsf	3,5	;RP0=1, select bank1
   905  013B  1303               	bcf	3,6	;RP1=0, select bank1
   906  013C  019F               	clrf	31	;volatile
   907  013D                     l109:
   908  013D  0008               	return
   909  013E                     __end_of_initADC:
   910                           
   911                           	psect	text4
   912  013E                     __ptext4:	
   913 ;; *************** function _adc *****************
   914 ;; Defined at:
   915 ;;		line 191 in file "main.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		wreg
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   929 ;;      Params:         0       0       0       0       0
   930 ;;      Locals:         0       0       0       0       0
   931 ;;      Temps:          1       0       0       0       0
   932 ;;      Totals:         1       0       0       0       0
   933 ;;Total ram usage:        1 bytes
   934 ;; Hardware stack levels used:    1
   935 ;; Hardware stack levels required when called:    1
   936 ;; This function calls:
   937 ;;		Nothing
   938 ;; This function is called by:
   939 ;;		_main
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           
   944                           ;psect for function _adc
   945  013E                     _adc:
   946  013E                     l744:	
   947                           ;incstack = 0
   948                           ; Regs used in _adc: [wreg]
   949                           
   950                           
   951                           ;main.c: 192:     _delay((unsigned long)((8)*(8000000/4000000.0)));
   952  013E  3005               	movlw	5
   953  013F  00F6               	movwf	??_adc
   954  0140                     u127:
   955  0140  0BF6               	decfsz	??_adc,f
   956  0141  2940               	goto	u127
   957  0142                     l746:
   958                           
   959                           ;main.c: 193:     ADCON0bits.GO_DONE = 1;
   960  0142  1283               	bcf	3,5	;RP0=0, select bank0
   961  0143  1303               	bcf	3,6	;RP1=0, select bank0
   962  0144  149F               	bsf	31,1	;volatile
   963  0145                     l96:
   964  0145  0008               	return
   965  0146                     __end_of_adc:
   966                           
   967                           	psect	text5
   968  0028                     __ptext5:	
   969 ;; *************** function _ISR *****************
   970 ;; Defined at:
   971 ;;		line 59 in file "main.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   985 ;;      Params:         0       0       0       0       0
   986 ;;      Locals:         0       0       0       0       0
   987 ;;      Temps:          6       0       0       0       0
   988 ;;      Totals:         6       0       0       0       0
   989 ;;Total ram usage:        6 bytes
   990 ;; Hardware stack levels used:    1
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		Interrupt level 1
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           
   999                           ;psect for function _ISR
  1000  0028                     _ISR:
  1001  0028                     i1l748:
  1002                           
  1003                           ;main.c: 61:     if (INTCONbits.RBIF == 1) {
  1004  0028  1C0B               	btfss	11,0	;volatile
  1005  0029  282B               	goto	u1_21
  1006  002A  282C               	goto	u1_20
  1007  002B                     u1_21:
  1008  002B  285C               	goto	i1l770
  1009  002C                     u1_20:
  1010  002C                     i1l750:
  1011                           
  1012                           ;main.c: 63:         if (PORTBbits.RB0 == 0) {
  1013  002C  1283               	bcf	3,5	;RP0=0, select bank0
  1014  002D  1303               	bcf	3,6	;RP1=0, select bank0
  1015  002E  1806               	btfsc	6,0	;volatile
  1016  002F  2831               	goto	u2_21
  1017  0030  2832               	goto	u2_20
  1018  0031                     u2_21:
  1019  0031  2846               	goto	i1l760
  1020  0032                     u2_20:
  1021  0032                     i1l752:
  1022                           
  1023                           ;main.c: 64:             _delay((unsigned long)((50)*(8000000/4000.0)));
  1024  0032  3082               	movlw	130
  1025  0033  00F1               	movwf	??_ISR+1
  1026  0034  30DD               	movlw	221
  1027  0035  00F0               	movwf	??_ISR
  1028  0036                     u13_27:
  1029  0036  0BF0               	decfsz	??_ISR,f
  1030  0037  2836               	goto	u13_27
  1031  0038  0BF1               	decfsz	??_ISR+1,f
  1032  0039  2836               	goto	u13_27
  1033  003A  283B               	nop2
  1034  003B                     i1l754:
  1035                           
  1036                           ;main.c: 65:             if (PORTBbits.RB0 == 1) {
  1037  003B  1283               	bcf	3,5	;RP0=0, select bank0
  1038  003C  1303               	bcf	3,6	;RP1=0, select bank0
  1039  003D  1C06               	btfss	6,0	;volatile
  1040  003E  2840               	goto	u3_21
  1041  003F  2841               	goto	u3_20
  1042  0040                     u3_21:
  1043  0040  2846               	goto	i1l760
  1044  0041                     u3_20:
  1045  0041                     i1l756:
  1046                           
  1047                           ;main.c: 67:                 PORTC ++;
  1048  0041  3001               	movlw	1
  1049  0042  00F0               	movwf	??_ISR
  1050  0043  0870               	movf	??_ISR,w
  1051  0044  0787               	addwf	7,f	;volatile
  1052  0045                     i1l758:
  1053                           
  1054                           ;main.c: 68:                 INTCONbits.RBIF = 0;
  1055  0045  100B               	bcf	11,0	;volatile
  1056  0046                     i1l760:
  1057                           
  1058                           ;main.c: 72:         if (PORTBbits.RB1 == 0) {
  1059  0046  1886               	btfsc	6,1	;volatile
  1060  0047  2849               	goto	u4_21
  1061  0048  284A               	goto	u4_20
  1062  0049                     u4_21:
  1063  0049  285C               	goto	i1l770
  1064  004A                     u4_20:
  1065  004A                     i1l762:
  1066                           
  1067                           ;main.c: 73:             _delay((unsigned long)((50)*(8000000/4000.0)));
  1068  004A  3082               	movlw	130
  1069  004B  00F1               	movwf	??_ISR+1
  1070  004C  30DD               	movlw	221
  1071  004D  00F0               	movwf	??_ISR
  1072  004E                     u14_27:
  1073  004E  0BF0               	decfsz	??_ISR,f
  1074  004F  284E               	goto	u14_27
  1075  0050  0BF1               	decfsz	??_ISR+1,f
  1076  0051  284E               	goto	u14_27
  1077  0052  2853               	nop2
  1078  0053                     i1l764:
  1079                           
  1080                           ;main.c: 74:             if (PORTBbits.RB1 == 1) {
  1081  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1082  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1083  0055  1C86               	btfss	6,1	;volatile
  1084  0056  2858               	goto	u5_21
  1085  0057  2859               	goto	u5_20
  1086  0058                     u5_21:
  1087  0058  285C               	goto	i1l770
  1088  0059                     u5_20:
  1089  0059                     i1l766:
  1090                           
  1091                           ;main.c: 76:                 PORTC --;
  1092  0059  3001               	movlw	1
  1093  005A  0287               	subwf	7,f	;volatile
  1094  005B                     i1l768:
  1095                           
  1096                           ;main.c: 77:                 INTCONbits.RBIF = 0;
  1097  005B  100B               	bcf	11,0	;volatile
  1098  005C                     i1l770:
  1099                           
  1100                           ;main.c: 82:     if (PIR1bits.ADIF == 1) {
  1101  005C  1283               	bcf	3,5	;RP0=0, select bank0
  1102  005D  1303               	bcf	3,6	;RP1=0, select bank0
  1103  005E  1F0C               	btfss	12,6	;volatile
  1104  005F  2861               	goto	u6_21
  1105  0060  2862               	goto	u6_20
  1106  0061                     u6_21:
  1107  0061  288B               	goto	i1l782
  1108  0062                     u6_20:
  1109  0062                     i1l772:
  1110                           
  1111                           ;main.c: 84:         valor_adc = ADRESH;
  1112  0062  081E               	movf	30,w	;volatile
  1113  0063  00F0               	movwf	??_ISR
  1114  0064  0870               	movf	??_ISR,w
  1115  0065  00FC               	movwf	_valor_adc
  1116  0066                     i1l774:
  1117                           
  1118                           ;main.c: 87:         adc_low = valor_adc & 0b00001111;
  1119  0066  087C               	movf	_valor_adc,w
  1120  0067  390F               	andlw	15
  1121  0068  00F0               	movwf	??_ISR
  1122  0069  0870               	movf	??_ISR,w
  1123  006A  00FB               	movwf	_adc_low
  1124  006B                     i1l776:
  1125                           
  1126                           ;main.c: 88:         swap = ((valor_adc & 0b00001111)<<4 | (valor_adc & 0b11110000)>>4);
  1127  006B  087C               	movf	_valor_adc,w
  1128  006C  00F0               	movwf	??_ISR
  1129  006D  3004               	movlw	4
  1130  006E                     u7_25:
  1131  006E  1003               	clrc
  1132  006F  0CF0               	rrf	??_ISR,f
  1133  0070  3EFF               	addlw	-1
  1134  0071  1D03               	skipz
  1135  0072  286E               	goto	u7_25
  1136  0073  300F               	movlw	15
  1137  0074  0570               	andwf	??_ISR,w
  1138  0075  00F1               	movwf	??_ISR+1
  1139  0076  087C               	movf	_valor_adc,w
  1140  0077  390F               	andlw	15
  1141  0078  00F2               	movwf	??_ISR+2
  1142  0079  3003               	movlw	3
  1143  007A                     u8_25:
  1144  007A  1003               	clrc
  1145  007B  0DF2               	rlf	??_ISR+2,f
  1146  007C  3EFF               	addlw	-1
  1147  007D  1D03               	skipz
  1148  007E  287A               	goto	u8_25
  1149  007F  1003               	clrc
  1150  0080  0D72               	rlf	??_ISR+2,w
  1151  0081  0471               	iorwf	??_ISR+1,w
  1152  0082  00F3               	movwf	??_ISR+3
  1153  0083  0873               	movf	??_ISR+3,w
  1154  0084  00FD               	movwf	_swap
  1155  0085                     i1l778:
  1156                           
  1157                           ;main.c: 89:         adc_high = swap & 0b00001111;
  1158  0085  087D               	movf	_swap,w
  1159  0086  390F               	andlw	15
  1160  0087  00F0               	movwf	??_ISR
  1161  0088  0870               	movf	??_ISR,w
  1162  0089  00FA               	movwf	_adc_high
  1163  008A                     i1l780:
  1164                           
  1165                           ;main.c: 91:         PIR1bits.ADIF = 0;
  1166  008A  130C               	bcf	12,6	;volatile
  1167  008B                     i1l782:
  1168                           
  1169                           ;main.c: 94:     if (INTCONbits.T0IF == 1) {
  1170  008B  1D0B               	btfss	11,2	;volatile
  1171  008C  288E               	goto	u9_21
  1172  008D  288F               	goto	u9_20
  1173  008E                     u9_21:
  1174  008E  289F               	goto	i1l80
  1175  008F                     u9_20:
  1176  008F                     i1l784:
  1177                           
  1178                           ;main.c: 97:         if (PORTEbits.RE0 == 1){
  1179  008F  1C09               	btfss	9,0	;volatile
  1180  0090  2892               	goto	u10_21
  1181  0091  2893               	goto	u10_20
  1182  0092                     u10_21:
  1183  0092  2898               	goto	i1l78
  1184  0093                     u10_20:
  1185  0093                     i1l786:
  1186                           
  1187                           ;main.c: 98:             PORTEbits.RE0 = 0;
  1188  0093  1009               	bcf	9,0	;volatile
  1189                           
  1190                           ;main.c: 99:             PORTEbits.RE1 = 1;
  1191  0094  1489               	bsf	9,1	;volatile
  1192  0095                     i1l788:
  1193                           
  1194                           ;main.c: 100:             PORTD = display_2;
  1195  0095  0878               	movf	_display_2,w
  1196  0096  0088               	movwf	8	;volatile
  1197                           
  1198                           ;main.c: 101:         } else {
  1199  0097  289C               	goto	i1l79
  1200  0098                     i1l78:
  1201                           
  1202                           ;main.c: 102:             PORTEbits.RE0 = 1;
  1203  0098  1409               	bsf	9,0	;volatile
  1204                           
  1205                           ;main.c: 103:             PORTEbits.RE1 = 0;
  1206  0099  1089               	bcf	9,1	;volatile
  1207  009A                     i1l790:
  1208                           
  1209                           ;main.c: 104:             PORTD = display_1;
  1210  009A  0879               	movf	_display_1,w
  1211  009B  0088               	movwf	8	;volatile
  1212  009C                     i1l79:	
  1213                           ;main.c: 105:         }
  1214                           
  1215                           
  1216                           ;main.c: 107:         TMR0 = 176;
  1217  009C  30B0               	movlw	176
  1218  009D  0081               	movwf	1	;volatile
  1219  009E                     i1l792:
  1220                           
  1221                           ;main.c: 108:         INTCONbits.T0IF = 0;
  1222  009E  110B               	bcf	11,2	;volatile
  1223  009F                     i1l80:
  1224  009F  0875               	movf	??_ISR+5,w
  1225  00A0  008A               	movwf	10
  1226  00A1  0E74               	swapf	??_ISR+4,w
  1227  00A2  0083               	movwf	3
  1228  00A3  0EFE               	swapf	btemp,f
  1229  00A4  0E7E               	swapf	btemp,w
  1230  00A5  0009               	retfie
  1231  00A6                     __end_of_ISR:
  1232  007E                     btemp	set	126	;btemp
  1233  007E                     wtemp0	set	126
  1234                           
  1235                           	psect	intentry
  1236  0004                     __pintentry:	
  1237                           ;incstack = 0
  1238                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1239                           
  1240  0004                     interrupt_function:
  1241  007E                     saved_w	set	btemp
  1242  0004  00FE               	movwf	btemp
  1243  0005  0E03               	swapf	3,w
  1244  0006  00F4               	movwf	??_ISR+4
  1245  0007  080A               	movf	10,w
  1246  0008  00F5               	movwf	??_ISR+5
  1247  0009  120A  118A  2828   	ljmp	_ISR
  1248                           
  1249                           	psect	config
  1250                           
  1251                           ;Config register CONFIG1 @ 0x2007
  1252                           ;	Oscillator Selection bits
  1253                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1254                           ;	Watchdog Timer Enable bit
  1255                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1256                           ;	Power-up Timer Enable bit
  1257                           ;	PWRTE = OFF, PWRT disabled
  1258                           ;	RE3/MCLR pin function select bit
  1259                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1260                           ;	Code Protection bit
  1261                           ;	CP = OFF, Program memory code protection is disabled
  1262                           ;	Data Code Protection bit
  1263                           ;	CPD = OFF, Data memory code protection is disabled
  1264                           ;	Brown Out Reset Selection bits
  1265                           ;	BOREN = OFF, BOR disabled
  1266                           ;	Internal External Switchover bit
  1267                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1268                           ;	Fail-Safe Clock Monitor Enabled bit
  1269                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1270                           ;	Low Voltage Programming Enable bit
  1271                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1272                           ;	In-Circuit Debugger Mode bit
  1273                           ;	DEBUG = 0x1, unprogrammed default
  1274  2007                     	org	8199
  1275  2007  20D1               	dw	8401
  1276                           
  1277                           ;Config register CONFIG2 @ 0x2008
  1278                           ;	Brown-out Reset Selection bit
  1279                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1280                           ;	Flash Program Memory Self Write Enable bits
  1281                           ;	WRT = OFF, Write protection off
  1282  2008                     	org	8200
  1283  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      0      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_adc

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              7 COMMON     1     1      0
                                _adc
                            _initADC
                           _initTMR0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTMR0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc                                                  1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc
   _initADC
   _initTMR0
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      11       5       21.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1F      12        0.0%
ABS                  0      0      1F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 14:40:56 2021

                      pc 0002                       l93 0100                       l85 00B5  
                     l86 00D3                       l96 0145                       fsr 0004  
                    l109 013D                      l118 0130                      l710 00D8  
                    l720 00ED                      l712 00DE                      l800 00C9  
                    l730 00FC                      l722 00F0                      l714 00E2  
                    l802 00D1                      l740 0124                      l732 00FD  
                    l724 00F3                      l716 00E7                      l734 0131  
                    l742 0128                      l726 00F6                      l718 00EA  
                    l744 013E                      l736 0138                      l728 00FB  
                    l746 0142                      l738 013A                      l794 00A6  
                    l796 00BA                      l798 00C2                      u110 00D1  
                    u111 00D0                      u127 0140                      _ISR 0028  
                    _adc 013E                      fsr0 0004                      indf 0000  
                   ?_ISR 0070                     ?_adc 0070                     _IOCB 0096  
                   i1l80 009F                     i1l78 0098                     i1l79 009C  
                   _TMR0 0001                     u1_20 002C                     u1_21 002B  
                   u2_20 0032                     u2_21 0031                     u3_20 0041  
                   u3_21 0040                     u4_20 004A                     u4_21 0049  
                   u5_20 0059                     u5_21 0058                     u6_20 0062  
                   u6_21 0061                     u7_25 006E                     u8_25 007A  
                   u9_20 008F                     u9_21 008E                     _main 00A6  
                   _swap 007D                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ??_adc 0076                    ?_main 0070  
                  _ANSEL 0188                    i1l750 002C                    i1l752 0032  
                  i1l760 0046                    i1l762 004A                    i1l754 003B  
                  i1l770 005C                    i1l780 008A                    i1l772 0062  
                  i1l764 0053                    i1l756 0041                    i1l748 0028  
                  i1l790 009A                    i1l774 0066                    i1l782 008B  
                  i1l766 0059                    i1l758 0045                    i1l792 009E  
                  i1l784 008F                    i1l776 006B                    i1l768 005B  
                  i1l786 0093                    i1l778 0085                    i1l788 0095  
                  u10_20 0093                    u10_21 0092                    u13_27 0036  
                  u14_27 004E                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089          __end_of_initADC 013E  
                  _setup 00D8                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00D8  
                 ??_main 0077                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 _cambio 0030         __end_of_initTMR0 0131                ??_initADC 0076  
                 saved_w 007E  __end_of__initialization 0024           __pcstackCOMMON 0070  
           __pidataBANK0 0114            __end_of_setup 0101                  ??_setup 0076  
             __pbssBANK0 0030               __pmaintext 00A6               __pintentry 0004  
              ?_initTMR0 0070                  _adc_low 007B                  __ptext1 00D8  
                __ptext2 0124                  __ptext3 0131                  __ptext4 013E  
                __ptext5 0028                  _initADC 0131             __size_of_ISR 007E  
           __size_of_adc 0008     end_of_initialization 0024               ??_initTMR0 0076  
              _PORTBbits 0006                _PORTEbits 0009      start_initialization 000F  
            __end_of_ISR 00A6              __end_of_adc 0146               init_fetch0 0101  
            __pdataBANK0 0020              __pbssCOMMON 0078                ___latbits 0002  
      __size_of_initTMR0 000D                _display_1 0079                _display_2 0078  
               ?_initADC 0070           __size_of_setup 0029        interrupt_function 0004  
               _PIE1bits 008C                _segmentos 0020                 _PIR1bits 000C  
              _valor_adc 007C               _ADCON0bits 001F                 _adc_high 007A  
       __size_of_initADC 000D                 _initTMR0 0124            __size_of_main 0032  
             _INTCONbits 000B                 init_ram0 0105                 intlevel1 0000  
             _OPTION_REG 0081  
