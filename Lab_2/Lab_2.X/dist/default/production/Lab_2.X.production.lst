

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 01:17:17 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367                           
   368                           	psect	idataBANK0
   369  0109                     __pidataBANK0:
   370                           
   371                           ;initializer for _segmentos
   372  0109  343F               	retlw	63
   373  010A  3406               	retlw	6
   374  010B  345B               	retlw	91
   375  010C  344F               	retlw	79
   376  010D  3466               	retlw	102
   377  010E  346D               	retlw	109
   378  010F  347D               	retlw	125
   379  0110  3407               	retlw	7
   380  0111  347F               	retlw	127
   381  0112  346F               	retlw	111
   382  0113  3477               	retlw	119
   383  0114  347C               	retlw	124
   384  0115  3439               	retlw	57
   385  0116  345E               	retlw	94
   386  0117  3479               	retlw	121
   387  0118  3471               	retlw	113
   388  001F                     _ADCON0	set	31
   389  001F                     _ADCON0bits	set	31
   390  0005                     _PORTA	set	5
   391  0006                     _PORTB	set	6
   392  0009                     _PORTE	set	9
   393  0001                     _TMR0	set	1
   394  0008                     _PORTD	set	8
   395  0009                     _PORTEbits	set	9
   396  001E                     _ADRESH	set	30
   397  000C                     _PIR1bits	set	12
   398  0007                     _PORTC	set	7
   399  0006                     _PORTBbits	set	6
   400  000B                     _INTCONbits	set	11
   401  0081                     _OPTION_REG	set	129
   402  009F                     _ADCON1	set	159
   403  008C                     _PIE1bits	set	140
   404  0096                     _IOCB	set	150
   405  0085                     _TRISA	set	133
   406  0088                     _TRISD	set	136
   407  0087                     _TRISC	set	135
   408  0086                     _TRISB	set	134
   409  0089                     _TRISE	set	137
   410  0189                     _ANSELH	set	393
   411  0188                     _ANSEL	set	392
   412                           
   413                           	psect	cinit
   414  000F                     start_initialization:	
   415                           ; #config settings
   416                           
   417  000F                     __initialization:
   418                           
   419                           ; Initialize objects allocated to BANK0
   420  000F  1383               	bcf	3,7	;select IRP bank0
   421  0010  3030               	movlw	low (__pdataBANK0+16)
   422  0011  00FD               	movwf	btemp+-1
   423  0012  3001               	movlw	high __pidataBANK0
   424  0013  00FE               	movwf	btemp
   425  0014  3009               	movlw	low __pidataBANK0
   426  0015  00FF               	movwf	btemp+1
   427  0016  3020               	movlw	low __pdataBANK0
   428  0017  0084               	movwf	4
   429  0018  120A  118A  20FA  120A  118A  	fcall	init_ram0
   430                           
   431                           ; Clear objects allocated to BANK0
   432  001D  01B0               	clrf	__pbssBANK0& (0+127)
   433                           
   434                           ; Clear objects allocated to COMMON
   435  001E  01F8               	clrf	__pbssCOMMON& (0+127)
   436  001F  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   437  0020  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   438  0021  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   439  0022  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   440  0023  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   441  0024                     end_of_initialization:	
   442                           ;End of C runtime variable initialization code
   443                           
   444  0024                     __end_of__initialization:
   445  0024  0183               	clrf	3
   446  0025  120A  118A  28CF   	ljmp	_main	;jump to C main() function
   447                           
   448                           	psect	bssCOMMON
   449  0078                     __pbssCOMMON:
   450  0078                     _display_2:
   451  0078                     	ds	1
   452  0079                     _display_1:
   453  0079                     	ds	1
   454  007A                     _adc_high:
   455  007A                     	ds	1
   456  007B                     _adc_low:
   457  007B                     	ds	1
   458  007C                     _valor_adc:
   459  007C                     	ds	1
   460  007D                     _swap:
   461  007D                     	ds	1
   462                           
   463                           	psect	bssBANK0
   464  0030                     __pbssBANK0:
   465  0030                     _cambio:
   466  0030                     	ds	1
   467                           
   468                           	psect	dataBANK0
   469  0020                     __pdataBANK0:
   470  0020                     _segmentos:
   471  0020                     	ds	16
   472                           
   473                           	psect	inittext
   474  00F6                     init_fetch0:	
   475                           ;	Called with low address in FSR and high address in W
   476                           
   477  00F6  087E               	movf	btemp,w
   478  00F7  008A               	movwf	10
   479  00F8  087F               	movf	btemp+1,w
   480  00F9  0082               	movwf	2
   481  00FA                     init_ram0:	
   482                           ;Called with:
   483                           ;	high address of idata address in btemp 
   484                           ;	low address of idata address in btemp+1 
   485                           ;	low address of data in FSR
   486                           ;	high address + 1 of data in btemp-1
   487                           
   488  00FA  120A  118A  20F6  120A  118A  	fcall	init_fetch0
   489  00FF  0080               	movwf	0
   490  0100  0A84               	incf	4,f
   491  0101  0804               	movf	4,w
   492  0102  067D               	xorwf	btemp+-1,w
   493  0103  1903               	btfsc	3,2
   494  0104  3400               	retlw	0
   495  0105  0AFF               	incf	btemp+1,f
   496  0106  1903               	btfsc	3,2
   497  0107  0AFE               	incf	btemp,f
   498  0108  28FA               	goto	init_ram0
   499                           
   500                           	psect	cstackCOMMON
   501  0070                     __pcstackCOMMON:
   502  0070                     ?_setup:
   503  0070                     ?_initADC:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_initTMR0:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_adc:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_ISR:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ??_ISR:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_main:	
   519                           ; 1 bytes @ 0x0
   520                           
   521                           
   522                           ; 1 bytes @ 0x0
   523  0070                     	ds	6
   524  0076                     ??_setup:
   525  0076                     ??_initADC:	
   526                           ; 1 bytes @ 0x6
   527                           
   528  0076                     ??_initTMR0:	
   529                           ; 1 bytes @ 0x6
   530                           
   531  0076                     ??_adc:	
   532                           ; 1 bytes @ 0x6
   533                           
   534                           
   535                           ; 1 bytes @ 0x6
   536  0076                     	ds	1
   537  0077                     ??_main:
   538                           
   539                           ; 1 bytes @ 0x7
   540  0077                     	ds	1
   541                           
   542                           	psect	maintext
   543  00CF                     __pmaintext:	
   544 ;;
   545 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   546 ;;
   547 ;; *************** function _main *****************
   548 ;; Defined at:
   549 ;;		line 114 in file "main.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : B00/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   563 ;;      Params:         0       0       0       0       0
   564 ;;      Locals:         0       0       0       0       0
   565 ;;      Temps:          1       0       0       0       0
   566 ;;      Totals:         1       0       0       0       0
   567 ;;Total ram usage:        1 bytes
   568 ;; Hardware stack levels required when called:    2
   569 ;; This function calls:
   570 ;;		_adc
   571 ;;		_initADC
   572 ;;		_initTMR0
   573 ;;		_setup
   574 ;; This function is called by:
   575 ;;		Startup code after reset
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           
   580                           ;psect for function _main
   581  00CF                     _main:
   582  00CF                     l792:	
   583                           ;incstack = 0
   584                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   585                           
   586                           
   587                           ;main.c: 116:     setup();
   588  00CF  120A  118A  20A6  120A  118A  	fcall	_setup
   589                           
   590                           ;main.c: 117:     initADC();
   591  00D4  120A  118A  2126  120A  118A  	fcall	_initADC
   592                           
   593                           ;main.c: 118:     initTMR0();
   594  00D9  120A  118A  2119  120A  118A  	fcall	_initTMR0
   595  00DE                     l85:	
   596                           ;main.c: 124:     while (1) {
   597                           
   598                           
   599                           ;main.c: 125:         adc();
   600  00DE  120A  118A  2133  120A  118A  	fcall	_adc
   601  00E3                     l794:
   602                           
   603                           ;main.c: 126:         display_1 = segmentos[adc_high];
   604  00E3  087A               	movf	_adc_high,w
   605  00E4  3E20               	addlw	(low (_segmentos| 0))& (0+255)
   606  00E5  0084               	movwf	4
   607  00E6  1383               	bcf	3,7	;select IRP bank0
   608  00E7  0800               	movf	0,w
   609  00E8  00F7               	movwf	??_main
   610  00E9  0877               	movf	??_main,w
   611  00EA  00F9               	movwf	_display_1
   612  00EB                     l796:
   613                           
   614                           ;main.c: 127:         display_2 = segmentos[adc_low];
   615  00EB  087B               	movf	_adc_low,w
   616  00EC  3E20               	addlw	(low (_segmentos| 0))& (0+255)
   617  00ED  0084               	movwf	4
   618  00EE  0800               	movf	0,w
   619  00EF  00F7               	movwf	??_main
   620  00F0  0877               	movf	??_main,w
   621  00F1  00F8               	movwf	_display_2
   622  00F2  28DE               	goto	l85
   623  00F3  120A  118A  280C   	ljmp	start
   624  00F6                     __end_of_main:
   625                           
   626                           	psect	text1
   627  00A6                     __ptext1:	
   628 ;; *************** function _setup *****************
   629 ;; Defined at:
   630 ;;		line 138 in file "main.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, status,2
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0
   647 ;;      Totals:         0       0       0       0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; Hardware stack levels required when called:    1
   651 ;; This function calls:
   652 ;;		Nothing
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           
   659                           ;psect for function _setup
   660  00A6                     _setup:
   661  00A6                     l708:	
   662                           ;incstack = 0
   663                           ; Regs used in _setup: [wreg+status,2]
   664                           
   665                           
   666                           ;main.c: 142:     TRISE = 0;
   667  00A6  1683               	bsf	3,5	;RP0=1, select bank1
   668  00A7  1303               	bcf	3,6	;RP1=0, select bank1
   669  00A8  0189               	clrf	9	;volatile
   670                           
   671                           ;main.c: 143:     PORTE = 0;
   672  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   673  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   674  00AB  0189               	clrf	9	;volatile
   675  00AC                     l710:
   676                           
   677                           ;main.c: 144:     ANSEL = 0b00000001;
   678  00AC  3001               	movlw	1
   679  00AD  1683               	bsf	3,5	;RP0=1, select bank3
   680  00AE  1703               	bsf	3,6	;RP1=1, select bank3
   681  00AF  0088               	movwf	8	;volatile
   682  00B0                     l712:
   683                           
   684                           ;main.c: 145:     ANSELH = 0;
   685  00B0  0189               	clrf	9	;volatile
   686                           
   687                           ;main.c: 146:     TRISB = 0b00000011;
   688  00B1  3003               	movlw	3
   689  00B2  1683               	bsf	3,5	;RP0=1, select bank1
   690  00B3  1303               	bcf	3,6	;RP1=0, select bank1
   691  00B4  0086               	movwf	6	;volatile
   692  00B5                     l714:
   693                           
   694                           ;main.c: 147:     PORTB = 0;
   695  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   696  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   697  00B7  0186               	clrf	6	;volatile
   698  00B8                     l716:
   699                           
   700                           ;main.c: 148:     TRISC = 0;
   701  00B8  1683               	bsf	3,5	;RP0=1, select bank1
   702  00B9  1303               	bcf	3,6	;RP1=0, select bank1
   703  00BA  0187               	clrf	7	;volatile
   704  00BB                     l718:
   705                           
   706                           ;main.c: 149:     PORTC = 0;
   707  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   708  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   709  00BD  0187               	clrf	7	;volatile
   710  00BE                     l720:
   711                           
   712                           ;main.c: 150:     TRISD = 0;
   713  00BE  1683               	bsf	3,5	;RP0=1, select bank1
   714  00BF  1303               	bcf	3,6	;RP1=0, select bank1
   715  00C0  0188               	clrf	8	;volatile
   716  00C1                     l722:
   717                           
   718                           ;main.c: 151:     PORTD = 0;
   719  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   720  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   721  00C3  0188               	clrf	8	;volatile
   722  00C4                     l724:
   723                           
   724                           ;main.c: 152:     PORTA = 0;
   725  00C4  0185               	clrf	5	;volatile
   726                           
   727                           ;main.c: 153:     TRISA = 0b00000001;
   728  00C5  3001               	movlw	1
   729  00C6  1683               	bsf	3,5	;RP0=1, select bank1
   730  00C7  1303               	bcf	3,6	;RP1=0, select bank1
   731  00C8  0085               	movwf	5	;volatile
   732  00C9                     l726:
   733                           
   734                           ;main.c: 155:     INTCONbits.GIE = 1;
   735  00C9  178B               	bsf	11,7	;volatile
   736  00CA                     l728:
   737                           
   738                           ;main.c: 156:     INTCONbits.RBIE = 1;
   739  00CA  158B               	bsf	11,3	;volatile
   740  00CB                     l730:
   741                           
   742                           ;main.c: 157:     INTCONbits.RBIF = 0;
   743  00CB  100B               	bcf	11,0	;volatile
   744                           
   745                           ;main.c: 158:     IOCB = 0b00000011;
   746  00CC  3003               	movlw	3
   747  00CD  0096               	movwf	22	;volatile
   748  00CE                     l91:
   749  00CE  0008               	return
   750  00CF                     __end_of_setup:
   751                           
   752                           	psect	text2
   753  0119                     __ptext2:	
   754 ;; *************** function _initTMR0 *****************
   755 ;; Defined at:
   756 ;;		line 3 in file "TMR0.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;		None
   759 ;; Auto vars:     Size  Location     Type
   760 ;;		None
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   770 ;;      Params:         0       0       0       0       0
   771 ;;      Locals:         0       0       0       0       0
   772 ;;      Temps:          0       0       0       0       0
   773 ;;      Totals:         0       0       0       0       0
   774 ;;Total ram usage:        0 bytes
   775 ;; Hardware stack levels used:    1
   776 ;; Hardware stack levels required when called:    1
   777 ;; This function calls:
   778 ;;		Nothing
   779 ;; This function is called by:
   780 ;;		_main
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           
   785                           ;psect for function _initTMR0
   786  0119                     _initTMR0:
   787  0119                     l738:	
   788                           ;incstack = 0
   789                           ; Regs used in _initTMR0: [wreg]
   790                           
   791                           
   792                           ;TMR0.c: 5:   INTCONbits.GIE = 1;
   793  0119  178B               	bsf	11,7	;volatile
   794                           
   795                           ;TMR0.c: 6:   INTCONbits.PEIE = 1;
   796  011A  170B               	bsf	11,6	;volatile
   797                           
   798                           ;TMR0.c: 7:   INTCONbits.T0IE = 1;
   799  011B  168B               	bsf	11,5	;volatile
   800                           
   801                           ;TMR0.c: 8:   INTCONbits.T0IF = 0;
   802  011C  110B               	bcf	11,2	;volatile
   803  011D                     l740:
   804                           
   805                           ;TMR0.c: 10:   OPTION_REG = 0b10000101;
   806  011D  3085               	movlw	133
   807  011E  1683               	bsf	3,5	;RP0=1, select bank1
   808  011F  1303               	bcf	3,6	;RP1=0, select bank1
   809  0120  0081               	movwf	1	;volatile
   810                           
   811                           ;TMR0.c: 12:   TMR0 = 176;
   812  0121  30B0               	movlw	176
   813  0122  1283               	bcf	3,5	;RP0=0, select bank0
   814  0123  1303               	bcf	3,6	;RP1=0, select bank0
   815  0124  0081               	movwf	1	;volatile
   816  0125                     l116:
   817  0125  0008               	return
   818  0126                     __end_of_initTMR0:
   819                           
   820                           	psect	text3
   821  0126                     __ptext3:	
   822 ;; *************** function _initADC *****************
   823 ;; Defined at:
   824 ;;		line 3 in file "ADC.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, status,2
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   838 ;;      Params:         0       0       0       0       0
   839 ;;      Locals:         0       0       0       0       0
   840 ;;      Temps:          0       0       0       0       0
   841 ;;      Totals:         0       0       0       0       0
   842 ;;Total ram usage:        0 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; Hardware stack levels required when called:    1
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_main
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           
   853                           ;psect for function _initADC
   854  0126                     _initADC:
   855  0126                     l732:	
   856                           ;incstack = 0
   857                           ; Regs used in _initADC: [wreg+status,2]
   858                           
   859                           
   860                           ;ADC.c: 5:     INTCONbits.PEIE = 1;
   861  0126  170B               	bsf	11,6	;volatile
   862                           
   863                           ;ADC.c: 6:     PIE1bits.ADIE = 1;
   864  0127  1683               	bsf	3,5	;RP0=1, select bank1
   865  0128  1303               	bcf	3,6	;RP1=0, select bank1
   866  0129  170C               	bsf	12,6	;volatile
   867                           
   868                           ;ADC.c: 7:     PIR1bits.ADIF = 0;
   869  012A  1283               	bcf	3,5	;RP0=0, select bank0
   870  012B  1303               	bcf	3,6	;RP1=0, select bank0
   871  012C  130C               	bcf	12,6	;volatile
   872  012D                     l734:
   873                           
   874                           ;ADC.c: 8:     ADCON0 = 0b01000001;
   875  012D  3041               	movlw	65
   876  012E  009F               	movwf	31	;volatile
   877  012F                     l736:
   878                           
   879                           ;ADC.c: 9:     ADCON1 = 0b00000000;
   880  012F  1683               	bsf	3,5	;RP0=1, select bank1
   881  0130  1303               	bcf	3,6	;RP1=0, select bank1
   882  0131  019F               	clrf	31	;volatile
   883  0132                     l107:
   884  0132  0008               	return
   885  0133                     __end_of_initADC:
   886                           
   887                           	psect	text4
   888  0133                     __ptext4:	
   889 ;; *************** function _adc *****************
   890 ;; Defined at:
   891 ;;		line 171 in file "main.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   905 ;;      Params:         0       0       0       0       0
   906 ;;      Locals:         0       0       0       0       0
   907 ;;      Temps:          1       0       0       0       0
   908 ;;      Totals:         1       0       0       0       0
   909 ;;Total ram usage:        1 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           
   920                           ;psect for function _adc
   921  0133                     _adc:
   922  0133                     l742:	
   923                           ;incstack = 0
   924                           ; Regs used in _adc: [wreg]
   925                           
   926                           
   927                           ;main.c: 172:     _delay((unsigned long)((8)*(8000000/4000000.0)));
   928  0133  3005               	movlw	5
   929  0134  00F6               	movwf	??_adc
   930  0135                     u117:
   931  0135  0BF6               	decfsz	??_adc,f
   932  0136  2935               	goto	u117
   933  0137                     l744:
   934                           
   935                           ;main.c: 173:     ADCON0bits.GO_DONE = 1;
   936  0137  1283               	bcf	3,5	;RP0=0, select bank0
   937  0138  1303               	bcf	3,6	;RP1=0, select bank0
   938  0139  149F               	bsf	31,1	;volatile
   939  013A                     l94:
   940  013A  0008               	return
   941  013B                     __end_of_adc:
   942                           
   943                           	psect	text5
   944  0028                     __ptext5:	
   945 ;; *************** function _ISR *****************
   946 ;; Defined at:
   947 ;;		line 59 in file "main.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;		None
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         0       0       0       0       0
   962 ;;      Locals:         0       0       0       0       0
   963 ;;      Temps:          6       0       0       0       0
   964 ;;      Totals:         6       0       0       0       0
   965 ;;Total ram usage:        6 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; This function calls:
   968 ;;		Nothing
   969 ;; This function is called by:
   970 ;;		Interrupt level 1
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           
   975                           ;psect for function _ISR
   976  0028                     _ISR:
   977  0028                     i1l746:
   978                           
   979                           ;main.c: 60:     if (INTCONbits.RBIF == 1) {
   980  0028  1C0B               	btfss	11,0	;volatile
   981  0029  282B               	goto	u1_21
   982  002A  282C               	goto	u1_20
   983  002B                     u1_21:
   984  002B  285C               	goto	i1l768
   985  002C                     u1_20:
   986  002C                     i1l748:
   987                           
   988                           ;main.c: 62:         if (PORTBbits.RB0 == 0) {
   989  002C  1283               	bcf	3,5	;RP0=0, select bank0
   990  002D  1303               	bcf	3,6	;RP1=0, select bank0
   991  002E  1806               	btfsc	6,0	;volatile
   992  002F  2831               	goto	u2_21
   993  0030  2832               	goto	u2_20
   994  0031                     u2_21:
   995  0031  2846               	goto	i1l758
   996  0032                     u2_20:
   997  0032                     i1l750:
   998                           
   999                           ;main.c: 63:             _delay((unsigned long)((50)*(8000000/4000.0)));
  1000  0032  3082               	movlw	130
  1001  0033  00F1               	movwf	??_ISR+1
  1002  0034  30DD               	movlw	221
  1003  0035  00F0               	movwf	??_ISR
  1004  0036                     u12_27:
  1005  0036  0BF0               	decfsz	??_ISR,f
  1006  0037  2836               	goto	u12_27
  1007  0038  0BF1               	decfsz	??_ISR+1,f
  1008  0039  2836               	goto	u12_27
  1009  003A  283B               	nop2
  1010  003B                     i1l752:
  1011                           
  1012                           ;main.c: 64:             if (PORTBbits.RB0 == 1) {
  1013  003B  1283               	bcf	3,5	;RP0=0, select bank0
  1014  003C  1303               	bcf	3,6	;RP1=0, select bank0
  1015  003D  1C06               	btfss	6,0	;volatile
  1016  003E  2840               	goto	u3_21
  1017  003F  2841               	goto	u3_20
  1018  0040                     u3_21:
  1019  0040  2846               	goto	i1l758
  1020  0041                     u3_20:
  1021  0041                     i1l754:
  1022                           
  1023                           ;main.c: 65:                 PORTC ++;
  1024  0041  3001               	movlw	1
  1025  0042  00F0               	movwf	??_ISR
  1026  0043  0870               	movf	??_ISR,w
  1027  0044  0787               	addwf	7,f	;volatile
  1028  0045                     i1l756:
  1029                           
  1030                           ;main.c: 66:                 INTCONbits.RBIF = 0;
  1031  0045  100B               	bcf	11,0	;volatile
  1032  0046                     i1l758:
  1033                           
  1034                           ;main.c: 69:         if (PORTBbits.RB1 == 0) {
  1035  0046  1886               	btfsc	6,1	;volatile
  1036  0047  2849               	goto	u4_21
  1037  0048  284A               	goto	u4_20
  1038  0049                     u4_21:
  1039  0049  285C               	goto	i1l768
  1040  004A                     u4_20:
  1041  004A                     i1l760:
  1042                           
  1043                           ;main.c: 70:             _delay((unsigned long)((50)*(8000000/4000.0)));
  1044  004A  3082               	movlw	130
  1045  004B  00F1               	movwf	??_ISR+1
  1046  004C  30DD               	movlw	221
  1047  004D  00F0               	movwf	??_ISR
  1048  004E                     u13_27:
  1049  004E  0BF0               	decfsz	??_ISR,f
  1050  004F  284E               	goto	u13_27
  1051  0050  0BF1               	decfsz	??_ISR+1,f
  1052  0051  284E               	goto	u13_27
  1053  0052  2853               	nop2
  1054  0053                     i1l762:
  1055                           
  1056                           ;main.c: 71:             if (PORTBbits.RB1 == 1) {
  1057  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0055  1C86               	btfss	6,1	;volatile
  1060  0056  2858               	goto	u5_21
  1061  0057  2859               	goto	u5_20
  1062  0058                     u5_21:
  1063  0058  285C               	goto	i1l768
  1064  0059                     u5_20:
  1065  0059                     i1l764:
  1066                           
  1067                           ;main.c: 72:                 PORTC --;
  1068  0059  3001               	movlw	1
  1069  005A  0287               	subwf	7,f	;volatile
  1070  005B                     i1l766:
  1071                           
  1072                           ;main.c: 73:                 INTCONbits.RBIF = 0;
  1073  005B  100B               	bcf	11,0	;volatile
  1074  005C                     i1l768:
  1075                           
  1076                           ;main.c: 78:     if (PIR1bits.ADIF == 1) {
  1077  005C  1283               	bcf	3,5	;RP0=0, select bank0
  1078  005D  1303               	bcf	3,6	;RP1=0, select bank0
  1079  005E  1F0C               	btfss	12,6	;volatile
  1080  005F  2861               	goto	u6_21
  1081  0060  2862               	goto	u6_20
  1082  0061                     u6_21:
  1083  0061  288B               	goto	i1l780
  1084  0062                     u6_20:
  1085  0062                     i1l770:
  1086                           
  1087                           ;main.c: 80:         valor_adc = ADRESH;
  1088  0062  081E               	movf	30,w	;volatile
  1089  0063  00F0               	movwf	??_ISR
  1090  0064  0870               	movf	??_ISR,w
  1091  0065  00FC               	movwf	_valor_adc
  1092  0066                     i1l772:
  1093                           
  1094                           ;main.c: 81:         adc_low = valor_adc & 0b00001111;
  1095  0066  087C               	movf	_valor_adc,w
  1096  0067  390F               	andlw	15
  1097  0068  00F0               	movwf	??_ISR
  1098  0069  0870               	movf	??_ISR,w
  1099  006A  00FB               	movwf	_adc_low
  1100  006B                     i1l774:
  1101                           
  1102                           ;main.c: 82:         swap = ((valor_adc & 0b00001111)<<4 | (valor_adc & 0b11110000)>>4);
  1103  006B  087C               	movf	_valor_adc,w
  1104  006C  00F0               	movwf	??_ISR
  1105  006D  3004               	movlw	4
  1106  006E                     u7_25:
  1107  006E  1003               	clrc
  1108  006F  0CF0               	rrf	??_ISR,f
  1109  0070  3EFF               	addlw	-1
  1110  0071  1D03               	skipz
  1111  0072  286E               	goto	u7_25
  1112  0073  300F               	movlw	15
  1113  0074  0570               	andwf	??_ISR,w
  1114  0075  00F1               	movwf	??_ISR+1
  1115  0076  087C               	movf	_valor_adc,w
  1116  0077  390F               	andlw	15
  1117  0078  00F2               	movwf	??_ISR+2
  1118  0079  3003               	movlw	3
  1119  007A                     u8_25:
  1120  007A  1003               	clrc
  1121  007B  0DF2               	rlf	??_ISR+2,f
  1122  007C  3EFF               	addlw	-1
  1123  007D  1D03               	skipz
  1124  007E  287A               	goto	u8_25
  1125  007F  1003               	clrc
  1126  0080  0D72               	rlf	??_ISR+2,w
  1127  0081  0471               	iorwf	??_ISR+1,w
  1128  0082  00F3               	movwf	??_ISR+3
  1129  0083  0873               	movf	??_ISR+3,w
  1130  0084  00FD               	movwf	_swap
  1131  0085                     i1l776:
  1132                           
  1133                           ;main.c: 83:         adc_high = swap & 0b00001111;
  1134  0085  087D               	movf	_swap,w
  1135  0086  390F               	andlw	15
  1136  0087  00F0               	movwf	??_ISR
  1137  0088  0870               	movf	??_ISR,w
  1138  0089  00FA               	movwf	_adc_high
  1139  008A                     i1l778:
  1140                           
  1141                           ;main.c: 85:         PIR1bits.ADIF = 0;
  1142  008A  130C               	bcf	12,6	;volatile
  1143  008B                     i1l780:
  1144                           
  1145                           ;main.c: 88:     if (INTCONbits.T0IF == 1) {
  1146  008B  1D0B               	btfss	11,2	;volatile
  1147  008C  288E               	goto	u9_21
  1148  008D  288F               	goto	u9_20
  1149  008E                     u9_21:
  1150  008E  289F               	goto	i1l80
  1151  008F                     u9_20:
  1152  008F                     i1l782:
  1153                           
  1154                           ;main.c: 89:         if (PORTEbits.RE0 == 1){
  1155  008F  1C09               	btfss	9,0	;volatile
  1156  0090  2892               	goto	u10_21
  1157  0091  2893               	goto	u10_20
  1158  0092                     u10_21:
  1159  0092  2898               	goto	i1l78
  1160  0093                     u10_20:
  1161  0093                     i1l784:
  1162                           
  1163                           ;main.c: 90:             PORTEbits.RE0 = 0;
  1164  0093  1009               	bcf	9,0	;volatile
  1165                           
  1166                           ;main.c: 91:             PORTEbits.RE1 = 1;
  1167  0094  1489               	bsf	9,1	;volatile
  1168  0095                     i1l786:
  1169                           
  1170                           ;main.c: 92:             PORTD = display_2;
  1171  0095  0878               	movf	_display_2,w
  1172  0096  0088               	movwf	8	;volatile
  1173                           
  1174                           ;main.c: 93:         } else {
  1175  0097  289C               	goto	i1l79
  1176  0098                     i1l78:
  1177                           
  1178                           ;main.c: 94:             PORTEbits.RE0 = 1;
  1179  0098  1409               	bsf	9,0	;volatile
  1180                           
  1181                           ;main.c: 95:             PORTEbits.RE1 = 0;
  1182  0099  1089               	bcf	9,1	;volatile
  1183  009A                     i1l788:
  1184                           
  1185                           ;main.c: 96:             PORTD = display_1;
  1186  009A  0879               	movf	_display_1,w
  1187  009B  0088               	movwf	8	;volatile
  1188  009C                     i1l79:	
  1189                           ;main.c: 97:         }
  1190                           
  1191                           
  1192                           ;main.c: 98:         TMR0 = 176;
  1193  009C  30B0               	movlw	176
  1194  009D  0081               	movwf	1	;volatile
  1195  009E                     i1l790:
  1196                           
  1197                           ;main.c: 99:         INTCONbits.T0IF = 0;
  1198  009E  110B               	bcf	11,2	;volatile
  1199  009F                     i1l80:
  1200  009F  0875               	movf	??_ISR+5,w
  1201  00A0  008A               	movwf	10
  1202  00A1  0E74               	swapf	??_ISR+4,w
  1203  00A2  0083               	movwf	3
  1204  00A3  0EFE               	swapf	btemp,f
  1205  00A4  0E7E               	swapf	btemp,w
  1206  00A5  0009               	retfie
  1207  00A6                     __end_of_ISR:
  1208  007E                     btemp	set	126	;btemp
  1209  007E                     wtemp0	set	126
  1210                           
  1211                           	psect	intentry
  1212  0004                     __pintentry:	
  1213                           ;incstack = 0
  1214                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1215                           
  1216  0004                     interrupt_function:
  1217  007E                     saved_w	set	btemp
  1218  0004  00FE               	movwf	btemp
  1219  0005  0E03               	swapf	3,w
  1220  0006  00F4               	movwf	??_ISR+4
  1221  0007  080A               	movf	10,w
  1222  0008  00F5               	movwf	??_ISR+5
  1223  0009  120A  118A  2828   	ljmp	_ISR
  1224                           
  1225                           	psect	config
  1226                           
  1227                           ;Config register CONFIG1 @ 0x2007
  1228                           ;	Oscillator Selection bits
  1229                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1230                           ;	Watchdog Timer Enable bit
  1231                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1232                           ;	Power-up Timer Enable bit
  1233                           ;	PWRTE = OFF, PWRT disabled
  1234                           ;	RE3/MCLR pin function select bit
  1235                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1236                           ;	Code Protection bit
  1237                           ;	CP = OFF, Program memory code protection is disabled
  1238                           ;	Data Code Protection bit
  1239                           ;	CPD = OFF, Data memory code protection is disabled
  1240                           ;	Brown Out Reset Selection bits
  1241                           ;	BOREN = OFF, BOR disabled
  1242                           ;	Internal External Switchover bit
  1243                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1244                           ;	Fail-Safe Clock Monitor Enabled bit
  1245                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1246                           ;	Low Voltage Programming Enable bit
  1247                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1248                           ;	In-Circuit Debugger Mode bit
  1249                           ;	DEBUG = 0x1, unprogrammed default
  1250  2007                     	org	8199
  1251  2007  20D1               	dw	8401
  1252                           
  1253                           ;Config register CONFIG2 @ 0x2008
  1254                           ;	Brown-out Reset Selection bit
  1255                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1256                           ;	Flash Program Memory Self Write Enable bits
  1257                           ;	WRT = OFF, Write protection off
  1258  2008                     	org	8200
  1259  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      0      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_adc

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              7 COMMON     1     1      0
                                _adc
                            _initADC
                           _initTMR0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTMR0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc                                                  1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc
   _initADC
   _initTMR0
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      11       5       21.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1F      12        0.0%
ABS                  0      0      1F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 01:17:17 2021

                      pc 0002                       l91 00CE                       l85 00DE  
                     l94 013A                       fsr 0004                      l107 0132  
                    l116 0125                      l710 00AC                      l720 00BE  
                    l712 00B0                      l730 00CB                      l722 00C1  
                    l714 00B5                      l732 0126                      l740 011D  
                    l724 00C4                      l716 00B8                      l708 00A6  
                    l742 0133                      l734 012D                      l726 00C9  
                    l718 00BB                      l744 0137                      l736 012F  
                    l728 00CA                      l738 0119                      l792 00CF  
                    l794 00E3                      l796 00EB                      u117 0135  
                    _ISR 0028                      _adc 0133                      fsr0 0004  
                    indf 0000                     ?_ISR 0070                     ?_adc 0070  
                   _IOCB 0096                     i1l80 009F                     i1l78 0098  
                   i1l79 009C                     _TMR0 0001                     u1_20 002C  
                   u1_21 002B                     u2_20 0032                     u2_21 0031  
                   u3_20 0041                     u3_21 0040                     u4_20 004A  
                   u4_21 0049                     u5_20 0059                     u5_21 0058  
                   u6_20 0062                     u6_21 0061                     u7_25 006E  
                   u8_25 007A                     u9_20 008F                     u9_21 008E  
                   _main 00CF                     _swap 007D                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ??_adc 0076  
                  ?_main 0070                    _ANSEL 0188                    i1l750 0032  
                  i1l760 004A                    i1l752 003B                    i1l770 0062  
                  i1l762 0053                    i1l754 0041                    i1l746 0028  
                  i1l772 0066                    i1l780 008B                    i1l764 0059  
                  i1l756 0045                    i1l748 002C                    i1l790 009E  
                  i1l782 008F                    i1l774 006B                    i1l766 005B  
                  i1l758 0046                    i1l784 0093                    i1l776 0085  
                  i1l768 005C                    i1l786 0095                    i1l778 008A  
                  i1l788 009A                    u10_20 0093                    u10_21 0092  
                  u12_27 0036                    u13_27 004E                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
        __end_of_initADC 0133                    _setup 00A6                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00F6                   ??_main 0077                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _cambio 0030         __end_of_initTMR0 0126  
              ??_initADC 0076                   saved_w 007E  __end_of__initialization 0024  
         __pcstackCOMMON 0070             __pidataBANK0 0109            __end_of_setup 00CF  
                ??_setup 0076               __pbssBANK0 0030               __pmaintext 00CF  
             __pintentry 0004                ?_initTMR0 0070                  _adc_low 007B  
                __ptext1 00A6                  __ptext2 0119                  __ptext3 0126  
                __ptext4 0133                  __ptext5 0028                  _initADC 0126  
           __size_of_ISR 007E             __size_of_adc 0008     end_of_initialization 0024  
             ??_initTMR0 0076                _PORTBbits 0006                _PORTEbits 0009  
    start_initialization 000F              __end_of_ISR 00A6              __end_of_adc 013B  
             init_fetch0 00F6              __pdataBANK0 0020              __pbssCOMMON 0078  
              ___latbits 0002        __size_of_initTMR0 000D                _display_1 0079  
              _display_2 0078                 ?_initADC 0070           __size_of_setup 0029  
      interrupt_function 0004                 _PIE1bits 008C                _segmentos 0020  
               _PIR1bits 000C                _valor_adc 007C               _ADCON0bits 001F  
               _adc_high 007A         __size_of_initADC 000D                 _initTMR0 0119  
          __size_of_main 0027               _INTCONbits 000B                 init_ram0 00FA  
               intlevel1 0000               _OPTION_REG 0081  
