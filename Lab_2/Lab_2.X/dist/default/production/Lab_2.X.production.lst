

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 06 23:43:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287                           
   288                           	psect	idataBANK0
   289  00DF                     __pidataBANK0:
   290                           
   291                           ;initializer for _segmentos
   292  00DF  343F               	retlw	63
   293  00E0  3406               	retlw	6
   294  00E1  345B               	retlw	91
   295  00E2  344F               	retlw	79
   296  00E3  3466               	retlw	102
   297  00E4  346D               	retlw	109
   298  00E5  347D               	retlw	125
   299  00E6  3407               	retlw	7
   300  00E7  347F               	retlw	127
   301  00E8  346F               	retlw	111
   302  00E9  3477               	retlw	119
   303  00EA  347C               	retlw	124
   304  00EB  3439               	retlw	57
   305  00EC  345E               	retlw	94
   306  00ED  3479               	retlw	121
   307  00EE  3471               	retlw	113
   308  001F                     _ADCON0	set	31
   309  001F                     _ADCON0bits	set	31
   310  0005                     _PORTA	set	5
   311  0008                     _PORTD	set	8
   312  0006                     _PORTB	set	6
   313  0009                     _PORTE	set	9
   314  001E                     _ADRESH	set	30
   315  000C                     _PIR1bits	set	12
   316  0007                     _PORTC	set	7
   317  0006                     _PORTBbits	set	6
   318  000B                     _INTCONbits	set	11
   319  009F                     _ADCON1	set	159
   320  008C                     _PIE1bits	set	140
   321  0096                     _IOCB	set	150
   322  0085                     _TRISA	set	133
   323  0088                     _TRISD	set	136
   324  0087                     _TRISC	set	135
   325  0086                     _TRISB	set	134
   326  0089                     _TRISE	set	137
   327  0189                     _ANSELH	set	393
   328  0188                     _ANSEL	set	392
   329                           
   330                           	psect	cinit
   331  000F                     start_initialization:	
   332                           ; #config settings
   333                           
   334  000F                     __initialization:
   335                           
   336                           ; Initialize objects allocated to BANK0
   337  000F  1383               	bcf	3,7	;select IRP bank0
   338  0010  3030               	movlw	low (__pdataBANK0+16)
   339  0011  00FD               	movwf	btemp+-1
   340  0012  3000               	movlw	high __pidataBANK0
   341  0013  00FE               	movwf	btemp
   342  0014  30DF               	movlw	low __pidataBANK0
   343  0015  00FF               	movwf	btemp+1
   344  0016  3020               	movlw	low __pdataBANK0
   345  0017  0084               	movwf	4
   346  0018  120A  118A  20BD  120A  118A  	fcall	init_ram0
   347                           
   348                           ; Clear objects allocated to COMMON
   349  001D  01F7               	clrf	__pbssCOMMON& (0+127)
   350  001E  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   351  001F  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   352  0020  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   353  0021  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   354  0022                     end_of_initialization:	
   355                           ;End of C runtime variable initialization code
   356                           
   357  0022                     __end_of__initialization:
   358  0022  0183               	clrf	3
   359  0023  120A  118A  28CC   	ljmp	_main	;jump to C main() function
   360                           
   361                           	psect	bssCOMMON
   362  0077                     __pbssCOMMON:
   363  0077                     _adc_high:
   364  0077                     	ds	1
   365  0078                     _adc_low:
   366  0078                     	ds	1
   367  0079                     _valor_adc:
   368  0079                     	ds	1
   369  007A                     _swap:
   370  007A                     	ds	1
   371  007B                     _cambio:
   372  007B                     	ds	1
   373                           
   374                           	psect	dataBANK0
   375  0020                     __pdataBANK0:
   376  0020                     _segmentos:
   377  0020                     	ds	16
   378                           
   379                           	psect	inittext
   380  00B9                     init_fetch0:	
   381                           ;	Called with low address in FSR and high address in W
   382                           
   383  00B9  087E               	movf	btemp,w
   384  00BA  008A               	movwf	10
   385  00BB  087F               	movf	btemp+1,w
   386  00BC  0082               	movwf	2
   387  00BD                     init_ram0:	
   388                           ;Called with:
   389                           ;	high address of idata address in btemp 
   390                           ;	low address of idata address in btemp+1 
   391                           ;	low address of data in FSR
   392                           ;	high address + 1 of data in btemp-1
   393                           
   394  00BD  120A  118A  20B9  120A  118A  	fcall	init_fetch0
   395  00C2  0080               	movwf	0
   396  00C3  0A84               	incf	4,f
   397  00C4  0804               	movf	4,w
   398  00C5  067D               	xorwf	btemp+-1,w
   399  00C6  1903               	btfsc	3,2
   400  00C7  3400               	retlw	0
   401  00C8  0AFF               	incf	btemp+1,f
   402  00C9  1903               	btfsc	3,2
   403  00CA  0AFE               	incf	btemp,f
   404  00CB  28BD               	goto	init_ram0
   405                           
   406                           	psect	cstackCOMMON
   407  0070                     __pcstackCOMMON:
   408  0070                     ?_setup:
   409  0070                     ?_initADC:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_adc:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_ISR:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ??_ISR:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_main:	
   422                           ; 1 bytes @ 0x0
   423                           
   424                           
   425                           ; 1 bytes @ 0x0
   426  0070                     	ds	6
   427  0076                     ??_setup:
   428  0076                     ??_initADC:	
   429                           ; 1 bytes @ 0x6
   430                           
   431  0076                     ??_adc:	
   432                           ; 1 bytes @ 0x6
   433                           
   434                           
   435                           ; 1 bytes @ 0x6
   436  0076                     	ds	1
   437  0077                     ??_main:
   438                           
   439                           	psect	maintext
   440  00CC                     __pmaintext:	
   441                           ; 1 bytes @ 0x7
   442 ;;
   443 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   444 ;;
   445 ;; *************** function _main *****************
   446 ;; Defined at:
   447 ;;		line 97 in file "main.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;		None
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg, status,2, status,0, pclath, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : B00/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   461 ;;      Params:         0       0       0       0       0
   462 ;;      Locals:         0       0       0       0       0
   463 ;;      Temps:          0       0       0       0       0
   464 ;;      Totals:         0       0       0       0       0
   465 ;;Total ram usage:        0 bytes
   466 ;; Hardware stack levels required when called:    2
   467 ;; This function calls:
   468 ;;		_adc
   469 ;;		_initADC
   470 ;;		_setup
   471 ;; This function is called by:
   472 ;;		Startup code after reset
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           
   477                           ;psect for function _main
   478  00CC                     _main:
   479  00CC                     l754:	
   480                           ;incstack = 0
   481                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   482                           
   483                           
   484                           ;main.c: 99:     setup();
   485  00CC  120A  118A  2090  120A  118A  	fcall	_setup
   486                           
   487                           ;main.c: 100:     initADC();
   488  00D1  120A  118A  20EF  120A  118A  	fcall	_initADC
   489  00D6                     l72:	
   490                           ;main.c: 106:     while (1) {
   491                           
   492                           
   493                           ;main.c: 107:         adc();
   494  00D6  120A  118A  20FC  120A  118A  	fcall	_adc
   495  00DB  28D6               	goto	l72
   496  00DC  120A  118A  280C   	ljmp	start
   497  00DF                     __end_of_main:
   498                           
   499                           	psect	text1
   500  0090                     __ptext1:	
   501 ;; *************** function _setup *****************
   502 ;; Defined at:
   503 ;;		line 118 in file "main.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;		None
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, status,2
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   517 ;;      Params:         0       0       0       0       0
   518 ;;      Locals:         0       0       0       0       0
   519 ;;      Temps:          0       0       0       0       0
   520 ;;      Totals:         0       0       0       0       0
   521 ;;Total ram usage:        0 bytes
   522 ;; Hardware stack levels used:    1
   523 ;; Hardware stack levels required when called:    1
   524 ;; This function calls:
   525 ;;		Nothing
   526 ;; This function is called by:
   527 ;;		_main
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           
   532                           ;psect for function _setup
   533  0090                     _setup:
   534  0090                     l686:	
   535                           ;incstack = 0
   536                           ; Regs used in _setup: [wreg+status,2]
   537                           
   538                           
   539                           ;main.c: 122:     TRISE = 0;
   540  0090  1683               	bsf	3,5	;RP0=1, select bank1
   541  0091  1303               	bcf	3,6	;RP1=0, select bank1
   542  0092  0189               	clrf	9	;volatile
   543                           
   544                           ;main.c: 123:     PORTE = 0;
   545  0093  1283               	bcf	3,5	;RP0=0, select bank0
   546  0094  1303               	bcf	3,6	;RP1=0, select bank0
   547  0095  0189               	clrf	9	;volatile
   548  0096                     l688:
   549                           
   550                           ;main.c: 124:     ANSEL = 0b00000001;
   551  0096  3001               	movlw	1
   552  0097  1683               	bsf	3,5	;RP0=1, select bank3
   553  0098  1703               	bsf	3,6	;RP1=1, select bank3
   554  0099  0088               	movwf	8	;volatile
   555  009A                     l690:
   556                           
   557                           ;main.c: 125:     ANSELH = 0;
   558  009A  0189               	clrf	9	;volatile
   559                           
   560                           ;main.c: 126:     TRISB = 0b00000011;
   561  009B  3003               	movlw	3
   562  009C  1683               	bsf	3,5	;RP0=1, select bank1
   563  009D  1303               	bcf	3,6	;RP1=0, select bank1
   564  009E  0086               	movwf	6	;volatile
   565  009F                     l692:
   566                           
   567                           ;main.c: 127:     PORTB = 0;
   568  009F  1283               	bcf	3,5	;RP0=0, select bank0
   569  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   570  00A1  0186               	clrf	6	;volatile
   571  00A2                     l694:
   572                           
   573                           ;main.c: 128:     TRISC = 0;
   574  00A2  1683               	bsf	3,5	;RP0=1, select bank1
   575  00A3  1303               	bcf	3,6	;RP1=0, select bank1
   576  00A4  0187               	clrf	7	;volatile
   577  00A5                     l696:
   578                           
   579                           ;main.c: 129:     PORTC = 0;
   580  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   581  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   582  00A7  0187               	clrf	7	;volatile
   583  00A8                     l698:
   584                           
   585                           ;main.c: 130:     TRISD = 0;
   586  00A8  1683               	bsf	3,5	;RP0=1, select bank1
   587  00A9  1303               	bcf	3,6	;RP1=0, select bank1
   588  00AA  0188               	clrf	8	;volatile
   589  00AB                     l700:
   590                           
   591                           ;main.c: 131:     PORTD = 0;
   592  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   593  00AC  1303               	bcf	3,6	;RP1=0, select bank0
   594  00AD  0188               	clrf	8	;volatile
   595  00AE                     l702:
   596                           
   597                           ;main.c: 132:     PORTA = 0;
   598  00AE  0185               	clrf	5	;volatile
   599                           
   600                           ;main.c: 133:     TRISA = 0b00000001;
   601  00AF  3001               	movlw	1
   602  00B0  1683               	bsf	3,5	;RP0=1, select bank1
   603  00B1  1303               	bcf	3,6	;RP1=0, select bank1
   604  00B2  0085               	movwf	5	;volatile
   605  00B3                     l704:
   606                           
   607                           ;main.c: 135:     INTCONbits.GIE = 1;
   608  00B3  178B               	bsf	11,7	;volatile
   609  00B4                     l706:
   610                           
   611                           ;main.c: 136:     INTCONbits.RBIE = 1;
   612  00B4  158B               	bsf	11,3	;volatile
   613  00B5                     l708:
   614                           
   615                           ;main.c: 137:     INTCONbits.RBIF = 0;
   616  00B5  100B               	bcf	11,0	;volatile
   617                           
   618                           ;main.c: 138:     IOCB = 0b00000011;
   619  00B6  3003               	movlw	3
   620  00B7  0096               	movwf	22	;volatile
   621  00B8                     l78:
   622  00B8  0008               	return
   623  00B9                     __end_of_setup:
   624                           
   625                           	psect	text2
   626  00EF                     __ptext2:	
   627 ;; *************** function _initADC *****************
   628 ;; Defined at:
   629 ;;		line 3 in file "ADC.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, status,2
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   643 ;;      Params:         0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0
   646 ;;      Totals:         0       0       0       0       0
   647 ;;Total ram usage:        0 bytes
   648 ;; Hardware stack levels used:    1
   649 ;; Hardware stack levels required when called:    1
   650 ;; This function calls:
   651 ;;		Nothing
   652 ;; This function is called by:
   653 ;;		_main
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           
   658                           ;psect for function _initADC
   659  00EF                     _initADC:
   660  00EF                     l710:	
   661                           ;incstack = 0
   662                           ; Regs used in _initADC: [wreg+status,2]
   663                           
   664                           
   665                           ;ADC.c: 4:     INTCONbits.PEIE = 1;
   666  00EF  170B               	bsf	11,6	;volatile
   667                           
   668                           ;ADC.c: 5:     PIE1bits.ADIE = 1;
   669  00F0  1683               	bsf	3,5	;RP0=1, select bank1
   670  00F1  1303               	bcf	3,6	;RP1=0, select bank1
   671  00F2  170C               	bsf	12,6	;volatile
   672                           
   673                           ;ADC.c: 6:     PIR1bits.ADIF = 0;
   674  00F3  1283               	bcf	3,5	;RP0=0, select bank0
   675  00F4  1303               	bcf	3,6	;RP1=0, select bank0
   676  00F5  130C               	bcf	12,6	;volatile
   677  00F6                     l712:
   678                           
   679                           ;ADC.c: 7:     ADCON0 = 0b01000001;
   680  00F6  3041               	movlw	65
   681  00F7  009F               	movwf	31	;volatile
   682  00F8                     l714:
   683                           
   684                           ;ADC.c: 8:     ADCON1 = 0b00000000;
   685  00F8  1683               	bsf	3,5	;RP0=1, select bank1
   686  00F9  1303               	bcf	3,6	;RP1=0, select bank1
   687  00FA  019F               	clrf	31	;volatile
   688  00FB                     l94:
   689  00FB  0008               	return
   690  00FC                     __end_of_initADC:
   691                           
   692                           	psect	text3
   693  00FC                     __ptext3:	
   694 ;; *************** function _adc *****************
   695 ;; Defined at:
   696 ;;		line 151 in file "main.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   710 ;;      Params:         0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0
   712 ;;      Temps:          1       0       0       0       0
   713 ;;      Totals:         1       0       0       0       0
   714 ;;Total ram usage:        1 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; Hardware stack levels required when called:    1
   717 ;; This function calls:
   718 ;;		Nothing
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           
   725                           ;psect for function _adc
   726  00FC                     _adc:
   727  00FC                     l716:	
   728                           ;incstack = 0
   729                           ; Regs used in _adc: [wreg]
   730                           
   731                           
   732                           ;main.c: 152:     _delay((unsigned long)((8)*(8000000/4000000.0)));
   733  00FC  3005               	movlw	5
   734  00FD  00F6               	movwf	??_adc
   735  00FE                     u97:
   736  00FE  0BF6               	decfsz	??_adc,f
   737  00FF  28FE               	goto	u97
   738  0100                     l718:
   739                           
   740                           ;main.c: 153:     ADCON0bits.GO_DONE = 1;
   741  0100  1283               	bcf	3,5	;RP0=0, select bank0
   742  0101  1303               	bcf	3,6	;RP1=0, select bank0
   743  0102  149F               	bsf	31,1	;volatile
   744  0103                     l81:
   745  0103  0008               	return
   746  0104                     __end_of_adc:
   747                           
   748                           	psect	text4
   749  0026                     __ptext4:	
   750 ;; *************** function _ISR *****************
   751 ;; Defined at:
   752 ;;		line 56 in file "main.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, status,2, status,0
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   766 ;;      Params:         0       0       0       0       0
   767 ;;      Locals:         0       0       0       0       0
   768 ;;      Temps:          6       0       0       0       0
   769 ;;      Totals:         6       0       0       0       0
   770 ;;Total ram usage:        6 bytes
   771 ;; Hardware stack levels used:    1
   772 ;; This function calls:
   773 ;;		Nothing
   774 ;; This function is called by:
   775 ;;		Interrupt level 1
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           
   780                           ;psect for function _ISR
   781  0026                     _ISR:
   782  0026                     i1l720:
   783                           
   784                           ;main.c: 57:     if (INTCONbits.RBIF == 1) {
   785  0026  1C0B               	btfss	11,0	;volatile
   786  0027  2829               	goto	u1_21
   787  0028  282A               	goto	u1_20
   788  0029                     u1_21:
   789  0029  285A               	goto	i1l742
   790  002A                     u1_20:
   791  002A                     i1l722:
   792                           
   793                           ;main.c: 59:         if (PORTBbits.RB0 == 0) {
   794  002A  1283               	bcf	3,5	;RP0=0, select bank0
   795  002B  1303               	bcf	3,6	;RP1=0, select bank0
   796  002C  1806               	btfsc	6,0	;volatile
   797  002D  282F               	goto	u2_21
   798  002E  2830               	goto	u2_20
   799  002F                     u2_21:
   800  002F  2844               	goto	i1l732
   801  0030                     u2_20:
   802  0030                     i1l724:
   803                           
   804                           ;main.c: 60:             _delay((unsigned long)((50)*(8000000/4000.0)));
   805  0030  3082               	movlw	130
   806  0031  00F1               	movwf	??_ISR+1
   807  0032  30DD               	movlw	221
   808  0033  00F0               	movwf	??_ISR
   809  0034                     u10_27:
   810  0034  0BF0               	decfsz	??_ISR,f
   811  0035  2834               	goto	u10_27
   812  0036  0BF1               	decfsz	??_ISR+1,f
   813  0037  2834               	goto	u10_27
   814  0038  2839               	nop2
   815  0039                     i1l726:
   816                           
   817                           ;main.c: 61:             if (PORTBbits.RB0 == 1) {
   818  0039  1283               	bcf	3,5	;RP0=0, select bank0
   819  003A  1303               	bcf	3,6	;RP1=0, select bank0
   820  003B  1C06               	btfss	6,0	;volatile
   821  003C  283E               	goto	u3_21
   822  003D  283F               	goto	u3_20
   823  003E                     u3_21:
   824  003E  2844               	goto	i1l732
   825  003F                     u3_20:
   826  003F                     i1l728:
   827                           
   828                           ;main.c: 62:                 PORTC ++;
   829  003F  3001               	movlw	1
   830  0040  00F0               	movwf	??_ISR
   831  0041  0870               	movf	??_ISR,w
   832  0042  0787               	addwf	7,f	;volatile
   833  0043                     i1l730:
   834                           
   835                           ;main.c: 63:                 INTCONbits.RBIF = 0;
   836  0043  100B               	bcf	11,0	;volatile
   837  0044                     i1l732:
   838                           
   839                           ;main.c: 66:         if (PORTBbits.RB1 == 0) {
   840  0044  1886               	btfsc	6,1	;volatile
   841  0045  2847               	goto	u4_21
   842  0046  2848               	goto	u4_20
   843  0047                     u4_21:
   844  0047  285A               	goto	i1l742
   845  0048                     u4_20:
   846  0048                     i1l734:
   847                           
   848                           ;main.c: 67:             _delay((unsigned long)((50)*(8000000/4000.0)));
   849  0048  3082               	movlw	130
   850  0049  00F1               	movwf	??_ISR+1
   851  004A  30DD               	movlw	221
   852  004B  00F0               	movwf	??_ISR
   853  004C                     u11_27:
   854  004C  0BF0               	decfsz	??_ISR,f
   855  004D  284C               	goto	u11_27
   856  004E  0BF1               	decfsz	??_ISR+1,f
   857  004F  284C               	goto	u11_27
   858  0050  2851               	nop2
   859  0051                     i1l736:
   860                           
   861                           ;main.c: 68:             if (PORTBbits.RB1 == 1) {
   862  0051  1283               	bcf	3,5	;RP0=0, select bank0
   863  0052  1303               	bcf	3,6	;RP1=0, select bank0
   864  0053  1C86               	btfss	6,1	;volatile
   865  0054  2856               	goto	u5_21
   866  0055  2857               	goto	u5_20
   867  0056                     u5_21:
   868  0056  285A               	goto	i1l742
   869  0057                     u5_20:
   870  0057                     i1l738:
   871                           
   872                           ;main.c: 69:                 PORTC --;
   873  0057  3001               	movlw	1
   874  0058  0287               	subwf	7,f	;volatile
   875  0059                     i1l740:
   876                           
   877                           ;main.c: 70:                 INTCONbits.RBIF = 0;
   878  0059  100B               	bcf	11,0	;volatile
   879  005A                     i1l742:
   880                           
   881                           ;main.c: 75:     if (PIR1bits.ADIF == 1) {
   882  005A  1283               	bcf	3,5	;RP0=0, select bank0
   883  005B  1303               	bcf	3,6	;RP1=0, select bank0
   884  005C  1F0C               	btfss	12,6	;volatile
   885  005D  285F               	goto	u6_21
   886  005E  2860               	goto	u6_20
   887  005F                     u6_21:
   888  005F  2889               	goto	i1l67
   889  0060                     u6_20:
   890  0060                     i1l744:
   891                           
   892                           ;main.c: 77:         valor_adc = ADRESH;
   893  0060  081E               	movf	30,w	;volatile
   894  0061  00F0               	movwf	??_ISR
   895  0062  0870               	movf	??_ISR,w
   896  0063  00F9               	movwf	_valor_adc
   897  0064                     i1l746:
   898                           
   899                           ;main.c: 78:         adc_low = valor_adc & 0b00001111;
   900  0064  0879               	movf	_valor_adc,w
   901  0065  390F               	andlw	15
   902  0066  00F0               	movwf	??_ISR
   903  0067  0870               	movf	??_ISR,w
   904  0068  00F8               	movwf	_adc_low
   905  0069                     i1l748:
   906                           
   907                           ;main.c: 79:         swap = ((valor_adc & 0b00001111)<<4 | (valor_adc & 0b11110000)>>4);
   908  0069  0879               	movf	_valor_adc,w
   909  006A  00F0               	movwf	??_ISR
   910  006B  3004               	movlw	4
   911  006C                     u7_25:
   912  006C  1003               	clrc
   913  006D  0CF0               	rrf	??_ISR,f
   914  006E  3EFF               	addlw	-1
   915  006F  1D03               	skipz
   916  0070  286C               	goto	u7_25
   917  0071  300F               	movlw	15
   918  0072  0570               	andwf	??_ISR,w
   919  0073  00F1               	movwf	??_ISR+1
   920  0074  0879               	movf	_valor_adc,w
   921  0075  390F               	andlw	15
   922  0076  00F2               	movwf	??_ISR+2
   923  0077  3003               	movlw	3
   924  0078                     u8_25:
   925  0078  1003               	clrc
   926  0079  0DF2               	rlf	??_ISR+2,f
   927  007A  3EFF               	addlw	-1
   928  007B  1D03               	skipz
   929  007C  2878               	goto	u8_25
   930  007D  1003               	clrc
   931  007E  0D72               	rlf	??_ISR+2,w
   932  007F  0471               	iorwf	??_ISR+1,w
   933  0080  00F3               	movwf	??_ISR+3
   934  0081  0873               	movf	??_ISR+3,w
   935  0082  00FA               	movwf	_swap
   936  0083                     i1l750:
   937                           
   938                           ;main.c: 80:         adc_high = swap & 0b00001111;
   939  0083  087A               	movf	_swap,w
   940  0084  390F               	andlw	15
   941  0085  00F0               	movwf	??_ISR
   942  0086  0870               	movf	??_ISR,w
   943  0087  00F7               	movwf	_adc_high
   944  0088                     i1l752:
   945                           
   946                           ;main.c: 82:         PIR1bits.ADIF = 0;
   947  0088  130C               	bcf	12,6	;volatile
   948  0089                     i1l67:
   949  0089  0875               	movf	??_ISR+5,w
   950  008A  008A               	movwf	10
   951  008B  0E74               	swapf	??_ISR+4,w
   952  008C  0083               	movwf	3
   953  008D  0EFE               	swapf	btemp,f
   954  008E  0E7E               	swapf	btemp,w
   955  008F  0009               	retfie
   956  0090                     __end_of_ISR:
   957  007E                     btemp	set	126	;btemp
   958  007E                     wtemp0	set	126
   959                           
   960                           	psect	intentry
   961  0004                     __pintentry:	
   962                           ;incstack = 0
   963                           ; Regs used in _ISR: [wreg+status,2+status,0]
   964                           
   965  0004                     interrupt_function:
   966  007E                     saved_w	set	btemp
   967  0004  00FE               	movwf	btemp
   968  0005  0E03               	swapf	3,w
   969  0006  00F4               	movwf	??_ISR+4
   970  0007  080A               	movf	10,w
   971  0008  00F5               	movwf	??_ISR+5
   972  0009  120A  118A  2826   	ljmp	_ISR
   973                           
   974                           	psect	config
   975                           
   976                           ;Config register CONFIG1 @ 0x2007
   977                           ;	Oscillator Selection bits
   978                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   979                           ;	Watchdog Timer Enable bit
   980                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   981                           ;	Power-up Timer Enable bit
   982                           ;	PWRTE = OFF, PWRT disabled
   983                           ;	RE3/MCLR pin function select bit
   984                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   985                           ;	Code Protection bit
   986                           ;	CP = OFF, Program memory code protection is disabled
   987                           ;	Data Code Protection bit
   988                           ;	CPD = OFF, Data memory code protection is disabled
   989                           ;	Brown Out Reset Selection bits
   990                           ;	BOREN = OFF, BOR disabled
   991                           ;	Internal External Switchover bit
   992                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   993                           ;	Fail-Safe Clock Monitor Enabled bit
   994                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   995                           ;	Low Voltage Programming Enable bit
   996                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   997                           ;	In-Circuit Debugger Mode bit
   998                           ;	DEBUG = 0x1, unprogrammed default
   999  2007                     	org	8199
  1000  2007  20D1               	dw	8401
  1001                           
  1002                           ;Config register CONFIG2 @ 0x2008
  1003                           ;	Brown-out Reset Selection bit
  1004                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1005                           ;	Flash Program Memory Self Write Enable bits
  1006                           ;	WRT = OFF, Write protection off
  1007  2008                     	org	8200
  1008  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_adc

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                                _adc
                            _initADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc                                                  1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc
   _initADC
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1C      12        0.0%
ABS                  0      0      1C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 06 23:43:56 2021

                      pc 0002                       l72 00D6                       l81 0103  
                     l94 00FB                       l78 00B8                       u97 00FE  
                     fsr 0004                      l700 00AB                      l710 00EF  
                    l702 00AE                      l712 00F6                      l704 00B3  
                    l714 00F8                      l706 00B4                      l716 00FC  
                    l708 00B5                      l718 0100                      l690 009A  
                    l754 00CC                      l692 009F                      l694 00A2  
                    l686 0090                      l696 00A5                      l688 0096  
                    l698 00A8                      _ISR 0026                      _adc 00FC  
                    indf 0000                     ?_ISR 0070                     ?_adc 0070  
                   _IOCB 0096                     i1l67 0089                     u1_20 002A  
                   u1_21 0029                     u2_20 0030                     u2_21 002F  
                   u3_20 003F                     u3_21 003E                     u4_20 0048  
                   u4_21 0047                     u5_20 0057                     u5_21 0056  
                   u6_20 0060                     u6_21 005F                     u7_25 006C  
                   u8_25 0078                     _main 00CC                     _swap 007A  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ??_adc 0076                    ?_main 0070                    _ANSEL 0188  
                  i1l720 0026                    i1l730 0043                    i1l722 002A  
                  i1l740 0059                    i1l724 0030                    i1l732 0044  
                  i1l750 0083                    i1l734 0048                    i1l726 0039  
                  i1l742 005A                    i1l752 0088                    i1l744 0060  
                  i1l736 0051                    i1l728 003F                    i1l746 0064  
                  i1l738 0057                    i1l748 0069                    u10_27 0034  
                  u11_27 004C                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089          __end_of_initADC 00FC  
                  _setup 0090                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00DF  
                 ??_main 0077                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 _cambio 007B                ??_initADC 0076                   saved_w 007E  
__end_of__initialization 0022           __pcstackCOMMON 0070             __pidataBANK0 00DF  
          __end_of_setup 00B9                  ??_setup 0076               __pmaintext 00CC  
             __pintentry 0004                  _adc_low 0078                  __ptext1 0090  
                __ptext2 00EF                  __ptext3 00FC                  __ptext4 0026  
                _initADC 00EF             __size_of_ISR 006A             __size_of_adc 0008  
   end_of_initialization 0022                _PORTBbits 0006      start_initialization 000F  
            __end_of_ISR 0090              __end_of_adc 0104               init_fetch0 00B9  
            __pdataBANK0 0020              __pbssCOMMON 0077                ___latbits 0002  
               ?_initADC 0070           __size_of_setup 0029        interrupt_function 0004  
               _PIE1bits 008C                _segmentos 0020                 _PIR1bits 000C  
              _valor_adc 0079               _ADCON0bits 001F                 _adc_high 0077  
       __size_of_initADC 000D            __size_of_main 0013               _INTCONbits 000B  
               init_ram0 00BD                 intlevel1 0000  
