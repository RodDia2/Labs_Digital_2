

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 07:55:42 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0008                     _PORTD	set	8
   285  0006                     _PORTB	set	6
   286  0007                     _PORTCbits	set	7
   287  0013                     _SSPBUF	set	19
   288  0014                     _SSPCON	set	20
   289  0088                     _TRISD	set	136
   290  0086                     _TRISB	set	134
   291  0094                     _SSPSTATbits	set	148
   292  0094                     _SSPSTAT	set	148
   293  043A                     _TRISC2	set	1082
   294  0439                     _TRISC1	set	1081
   295  0438                     _TRISC0	set	1080
   296  043B                     _TRISC3	set	1083
   297  043D                     _TRISC5	set	1085
   298  0189                     _ANSELH	set	393
   299  0188                     _ANSEL	set	392
   300                           
   301                           	psect	cinit
   302  07FB                     start_initialization:	
   303                           ; #config settings
   304                           
   305  07FB                     __initialization:
   306                           
   307                           ; Clear objects allocated to COMMON
   308  07FB  01F6               	clrf	__pbssCOMMON& (0+127)
   309  07FC                     end_of_initialization:	
   310                           ;End of C runtime variable initialization code
   311                           
   312  07FC                     __end_of__initialization:
   313  07FC  0183               	clrf	3
   314  07FD  120A  118A  2F65   	ljmp	_main	;jump to C main() function
   315                           
   316                           	psect	bssCOMMON
   317  0076                     __pbssCOMMON:
   318  0076                     _temperatura:
   319  0076                     	ds	1
   320                           
   321                           	psect	cstackCOMMON
   322  0070                     __pcstackCOMMON:
   323  0070                     ?_setup:
   324  0070                     ?_spiInit:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ?_spiReceiveWait:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ??_spiReceiveWait:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_spiWrite:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ??_spiWrite:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_spiRead:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ??_spiRead:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_main:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     spiInit@sDataSample:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     spiWrite@dat:	
   352                           ; 1 bytes @ 0x0
   353                           
   354                           
   355                           ; 1 bytes @ 0x0
   356  0070                     	ds	1
   357  0071                     spiInit@sClockIdle:
   358                           
   359                           ; 1 bytes @ 0x1
   360  0071                     	ds	1
   361  0072                     spiInit@sTransmitEdge:
   362                           
   363                           ; 1 bytes @ 0x2
   364  0072                     	ds	1
   365  0073                     ??_spiInit:
   366  0073                     spiInit@sType:	
   367                           ; 1 bytes @ 0x3
   368                           
   369                           
   370                           ; 1 bytes @ 0x3
   371  0073                     	ds	1
   372  0074                     ??_setup:
   373  0074                     ??_main:	
   374                           ; 1 bytes @ 0x4
   375                           
   376                           
   377                           ; 1 bytes @ 0x4
   378  0074                     	ds	2
   379                           
   380                           	psect	maintext
   381  0765                     __pmaintext:	
   382 ;;
   383 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   384 ;;
   385 ;; *************** function _main *****************
   386 ;; Defined at:
   387 ;;		line 53 in file "main_master.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;		None
   390 ;; Auto vars:     Size  Location     Type
   391 ;;		None
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, status,2, status,0, pclath, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : B00/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   401 ;;      Params:         0       0       0       0       0
   402 ;;      Locals:         0       0       0       0       0
   403 ;;      Temps:          2       0       0       0       0
   404 ;;      Totals:         2       0       0       0       0
   405 ;;Total ram usage:        2 bytes
   406 ;; Hardware stack levels required when called:    2
   407 ;; This function calls:
   408 ;;		_setup
   409 ;;		_spiRead
   410 ;;		_spiWrite
   411 ;; This function is called by:
   412 ;;		Startup code after reset
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416                           
   417                           ;psect for function _main
   418  0765                     _main:
   419  0765                     l777:	
   420                           ;incstack = 0
   421                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   422                           
   423                           
   424                           ;main_master.c: 54:     setup();
   425  0765  120A  118A  2749  120A  118A  	fcall	_setup
   426  076A                     l779:
   427                           
   428                           ;main_master.c: 59:        PORTCbits.RC2 = 0;
   429  076A  1283               	bcf	3,5	;RP0=0, select bank0
   430  076B  1303               	bcf	3,6	;RP1=0, select bank0
   431  076C  1107               	bcf	7,2	;volatile
   432  076D                     l781:
   433                           
   434                           ;main_master.c: 60:        _delay((unsigned long)((1)*(8000000/4000.0)));
   435  076D  3003               	movlw	3
   436  076E  00F5               	movwf	??_main+1
   437  076F  3097               	movlw	151
   438  0770  00F4               	movwf	??_main
   439  0771                     u47:
   440  0771  0BF4               	decfsz	??_main,f
   441  0772  2F71               	goto	u47
   442  0773  0BF5               	decfsz	??_main+1,f
   443  0774  2F71               	goto	u47
   444  0775  2F76               	nop2
   445  0776                     l783:
   446                           
   447                           ;main_master.c: 62:        spiWrite(1);
   448  0776  3001               	movlw	1
   449  0777  120A  118A  271D  120A  118A  	fcall	_spiWrite
   450  077C                     l785:
   451                           
   452                           ;main_master.c: 63:        PORTB = spiRead();
   453  077C  120A  118A  272A  120A  118A  	fcall	_spiRead
   454  0781  1283               	bcf	3,5	;RP0=0, select bank0
   455  0782  1303               	bcf	3,6	;RP1=0, select bank0
   456  0783  0086               	movwf	6	;volatile
   457  0784                     l787:
   458                           
   459                           ;main_master.c: 65:        _delay((unsigned long)((1)*(8000000/4000.0)));
   460  0784  3003               	movlw	3
   461  0785  00F5               	movwf	??_main+1
   462  0786  3097               	movlw	151
   463  0787  00F4               	movwf	??_main
   464  0788                     u57:
   465  0788  0BF4               	decfsz	??_main,f
   466  0789  2F88               	goto	u57
   467  078A  0BF5               	decfsz	??_main+1,f
   468  078B  2F88               	goto	u57
   469  078C  2F8D               	nop2
   470  078D                     l789:
   471                           
   472                           ;main_master.c: 66:        PORTCbits.RC2 = 1;
   473  078D  1283               	bcf	3,5	;RP0=0, select bank0
   474  078E  1303               	bcf	3,6	;RP1=0, select bank0
   475  078F  1507               	bsf	7,2	;volatile
   476  0790                     l791:
   477                           
   478                           ;main_master.c: 68:        _delay((unsigned long)((1)*(8000000/4000.0)));
   479  0790  3003               	movlw	3
   480  0791  00F5               	movwf	??_main+1
   481  0792  3097               	movlw	151
   482  0793  00F4               	movwf	??_main
   483  0794                     u67:
   484  0794  0BF4               	decfsz	??_main,f
   485  0795  2F94               	goto	u67
   486  0796  0BF5               	decfsz	??_main+1,f
   487  0797  2F94               	goto	u67
   488  0798  2F99               	nop2
   489  0799                     l793:
   490                           
   491                           ;main_master.c: 69:        PORTCbits.RC1 = 0;
   492  0799  1283               	bcf	3,5	;RP0=0, select bank0
   493  079A  1303               	bcf	3,6	;RP1=0, select bank0
   494  079B  1087               	bcf	7,1	;volatile
   495  079C                     l795:
   496                           
   497                           ;main_master.c: 70:        _delay((unsigned long)((1)*(8000000/4000.0)));
   498  079C  3003               	movlw	3
   499  079D  00F5               	movwf	??_main+1
   500  079E  3097               	movlw	151
   501  079F  00F4               	movwf	??_main
   502  07A0                     u77:
   503  07A0  0BF4               	decfsz	??_main,f
   504  07A1  2FA0               	goto	u77
   505  07A2  0BF5               	decfsz	??_main+1,f
   506  07A3  2FA0               	goto	u77
   507  07A4  2FA5               	nop2
   508                           
   509                           ;main_master.c: 72:        spiWrite(1);
   510  07A5  3001               	movlw	1
   511  07A6  120A  118A  271D  120A  118A  	fcall	_spiWrite
   512                           
   513                           ;main_master.c: 73:        PORTD = spiRead();
   514  07AB  120A  118A  272A  120A  118A  	fcall	_spiRead
   515  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   516  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   517  07B2  0088               	movwf	8	;volatile
   518  07B3                     l797:
   519                           
   520                           ;main_master.c: 75:        _delay((unsigned long)((1)*(8000000/4000.0)));
   521  07B3  3003               	movlw	3
   522  07B4  00F5               	movwf	??_main+1
   523  07B5  3097               	movlw	151
   524  07B6  00F4               	movwf	??_main
   525  07B7                     u87:
   526  07B7  0BF4               	decfsz	??_main,f
   527  07B8  2FB7               	goto	u87
   528  07B9  0BF5               	decfsz	??_main+1,f
   529  07BA  2FB7               	goto	u87
   530  07BB  2FBC               	nop2
   531  07BC                     l799:
   532                           
   533                           ;main_master.c: 76:        PORTCbits.RC1 = 1;
   534  07BC  1283               	bcf	3,5	;RP0=0, select bank0
   535  07BD  1303               	bcf	3,6	;RP1=0, select bank0
   536  07BE  1487               	bsf	7,1	;volatile
   537  07BF                     l801:
   538                           
   539                           ;main_master.c: 77:        _delay((unsigned long)((1)*(8000000/4000.0)));
   540  07BF  3003               	movlw	3
   541  07C0  00F5               	movwf	??_main+1
   542  07C1  3097               	movlw	151
   543  07C2  00F4               	movwf	??_main
   544  07C3                     u97:
   545  07C3  0BF4               	decfsz	??_main,f
   546  07C4  2FC3               	goto	u97
   547  07C5  0BF5               	decfsz	??_main+1,f
   548  07C6  2FC3               	goto	u97
   549  07C7  2FC8               	nop2
   550  07C8                     l803:
   551                           
   552                           ;main_master.c: 81:        PORTCbits.RC0 = 0;
   553  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   554  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   555  07CA  1007               	bcf	7,0	;volatile
   556  07CB                     l805:
   557                           
   558                           ;main_master.c: 82:        _delay((unsigned long)((1)*(8000000/4000.0)));
   559  07CB  3003               	movlw	3
   560  07CC  00F5               	movwf	??_main+1
   561  07CD  3097               	movlw	151
   562  07CE  00F4               	movwf	??_main
   563  07CF                     u107:
   564  07CF  0BF4               	decfsz	??_main,f
   565  07D0  2FCF               	goto	u107
   566  07D1  0BF5               	decfsz	??_main+1,f
   567  07D2  2FCF               	goto	u107
   568  07D3  2FD4               	nop2
   569  07D4                     l807:
   570                           
   571                           ;main_master.c: 84:        spiWrite(1);
   572  07D4  3001               	movlw	1
   573  07D5  120A  118A  271D  120A  118A  	fcall	_spiWrite
   574  07DA                     l809:
   575                           
   576                           ;main_master.c: 85:        temperatura = spiRead();
   577  07DA  120A  118A  272A  120A  118A  	fcall	_spiRead
   578  07DF  00F4               	movwf	??_main
   579  07E0  0874               	movf	??_main,w
   580  07E1  00F6               	movwf	_temperatura
   581  07E2                     l811:
   582                           
   583                           ;main_master.c: 87:        _delay((unsigned long)((1)*(8000000/4000.0)));
   584  07E2  3003               	movlw	3
   585  07E3  00F5               	movwf	??_main+1
   586  07E4  3097               	movlw	151
   587  07E5  00F4               	movwf	??_main
   588  07E6                     u117:
   589  07E6  0BF4               	decfsz	??_main,f
   590  07E7  2FE6               	goto	u117
   591  07E8  0BF5               	decfsz	??_main+1,f
   592  07E9  2FE6               	goto	u117
   593  07EA  2FEB               	nop2
   594  07EB                     l813:
   595                           
   596                           ;main_master.c: 88:        PORTCbits.RC0 = 1;
   597  07EB  1283               	bcf	3,5	;RP0=0, select bank0
   598  07EC  1303               	bcf	3,6	;RP1=0, select bank0
   599  07ED  1407               	bsf	7,0	;volatile
   600  07EE                     l815:
   601                           
   602                           ;main_master.c: 90:        _delay((unsigned long)((1)*(8000000/4000.0)));
   603  07EE  3003               	movlw	3
   604  07EF  00F5               	movwf	??_main+1
   605  07F0  3097               	movlw	151
   606  07F1  00F4               	movwf	??_main
   607  07F2                     u127:
   608  07F2  0BF4               	decfsz	??_main,f
   609  07F3  2FF2               	goto	u127
   610  07F4  0BF5               	decfsz	??_main+1,f
   611  07F5  2FF2               	goto	u127
   612  07F6  2FF7               	nop2
   613  07F7  2F6A               	goto	l779
   614  07F8  120A  118A  2800   	ljmp	start
   615  07FB                     __end_of_main:
   616                           
   617                           	psect	text1
   618  071D                     __ptext1:	
   619 ;; *************** function _spiWrite *****************
   620 ;; Defined at:
   621 ;;		line 34 in file "SPI.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;  dat             1    wreg     unsigned char 
   624 ;; Auto vars:     Size  Location     Type
   625 ;;  dat             1    0[COMMON] unsigned char 
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   635 ;;      Params:         0       0       0       0       0
   636 ;;      Locals:         1       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0
   638 ;;      Totals:         1       0       0       0       0
   639 ;;Total ram usage:        1 bytes
   640 ;; Hardware stack levels used:    1
   641 ;; This function calls:
   642 ;;		Nothing
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           
   649                           ;psect for function _spiWrite
   650  071D                     _spiWrite:
   651                           
   652                           ;incstack = 0
   653                           ; Regs used in _spiWrite: [wreg]
   654                           ;spiWrite@dat stored from wreg
   655  071D  00F0               	movwf	spiWrite@dat
   656  071E                     l681:
   657                           
   658                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   659  071E  0870               	movf	spiWrite@dat,w
   660  071F  1283               	bcf	3,5	;RP0=0, select bank0
   661  0720  1303               	bcf	3,6	;RP1=0, select bank0
   662  0721  0093               	movwf	19	;volatile
   663  0722                     l26:
   664  0722  0008               	return
   665  0723                     __end_of_spiWrite:
   666                           
   667                           	psect	text2
   668  072A                     __ptext2:	
   669 ;; *************** function _spiRead *****************
   670 ;; Defined at:
   671 ;;		line 47 in file "SPI.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      unsigned char 
   678 ;; Registers used:
   679 ;;		wreg, status,2, status,0, pclath, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   685 ;;      Params:         0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0
   688 ;;      Totals:         0       0       0       0       0
   689 ;;Total ram usage:        0 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; Hardware stack levels required when called:    1
   692 ;; This function calls:
   693 ;;		_spiReceiveWait
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           
   700                           ;psect for function _spiRead
   701  072A                     _spiRead:
   702  072A                     l683:	
   703                           ;incstack = 0
   704                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   705                           
   706                           
   707                           ;SPI.c: 49:     spiReceiveWait();
   708  072A  120A  118A  2723  120A  118A  	fcall	_spiReceiveWait
   709  072F                     l685:
   710                           
   711                           ;SPI.c: 50:     return(SSPBUF);
   712  072F  1283               	bcf	3,5	;RP0=0, select bank0
   713  0730  1303               	bcf	3,6	;RP1=0, select bank0
   714  0731  0813               	movf	19,w	;volatile
   715  0732                     l34:
   716  0732  0008               	return
   717  0733                     __end_of_spiRead:
   718                           
   719                           	psect	text3
   720  0723                     __ptext3:	
   721 ;; *************** function _spiReceiveWait *****************
   722 ;; Defined at:
   723 ;;		line 29 in file "SPI.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		None
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   737 ;;      Params:         0       0       0       0       0
   738 ;;      Locals:         0       0       0       0       0
   739 ;;      Temps:          0       0       0       0       0
   740 ;;      Totals:         0       0       0       0       0
   741 ;;Total ram usage:        0 bytes
   742 ;; Hardware stack levels used:    1
   743 ;; This function calls:
   744 ;;		Nothing
   745 ;; This function is called by:
   746 ;;		_spiRead
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           
   751                           ;psect for function _spiReceiveWait
   752  0723                     _spiReceiveWait:
   753  0723                     l679:	
   754                           ;incstack = 0
   755                           ; Regs used in _spiReceiveWait: []
   756                           
   757  0723                     l20:	
   758                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   759                           
   760  0723  1683               	bsf	3,5	;RP0=1, select bank1
   761  0724  1303               	bcf	3,6	;RP1=0, select bank1
   762  0725  1C14               	btfss	20,0	;volatile
   763  0726  2F28               	goto	u21
   764  0727  2F29               	goto	u20
   765  0728                     u21:
   766  0728  2F23               	goto	l20
   767  0729                     u20:
   768  0729                     l23:
   769  0729  0008               	return
   770  072A                     __end_of_spiReceiveWait:
   771                           
   772                           	psect	text4
   773  0749                     __ptext4:	
   774 ;; *************** function _setup *****************
   775 ;; Defined at:
   776 ;;		line 97 in file "main_master.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, status,2, status,0, pclath, cstack
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   790 ;;      Params:         0       0       0       0       0
   791 ;;      Locals:         0       0       0       0       0
   792 ;;      Temps:          0       0       0       0       0
   793 ;;      Totals:         0       0       0       0       0
   794 ;;Total ram usage:        0 bytes
   795 ;; Hardware stack levels used:    1
   796 ;; Hardware stack levels required when called:    1
   797 ;; This function calls:
   798 ;;		_spiInit
   799 ;; This function is called by:
   800 ;;		_main
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           
   805                           ;psect for function _setup
   806  0749                     _setup:
   807  0749                     l761:	
   808                           ;incstack = 0
   809                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   810                           
   811                           
   812                           ;main_master.c: 98:     ANSEL = 0;
   813  0749  1683               	bsf	3,5	;RP0=1, select bank3
   814  074A  1703               	bsf	3,6	;RP1=1, select bank3
   815  074B  0188               	clrf	8	;volatile
   816                           
   817                           ;main_master.c: 99:     ANSELH = 0;
   818  074C  0189               	clrf	9	;volatile
   819  074D                     l763:
   820                           
   821                           ;main_master.c: 100:     TRISC0 = 0;
   822  074D  1683               	bsf	3,5	;RP0=1, select bank1
   823  074E  1303               	bcf	3,6	;RP1=0, select bank1
   824  074F  1007               	bcf	7,0	;volatile
   825  0750                     l765:
   826                           
   827                           ;main_master.c: 101:     TRISC1 = 0;
   828  0750  1087               	bcf	7,1	;volatile
   829  0751                     l767:
   830                           
   831                           ;main_master.c: 102:     TRISC2 = 0;
   832  0751  1107               	bcf	7,2	;volatile
   833                           
   834                           ;main_master.c: 103:     TRISB = 0;
   835  0752  0186               	clrf	6	;volatile
   836                           
   837                           ;main_master.c: 104:     TRISD = 0;
   838  0753  0188               	clrf	8	;volatile
   839                           
   840                           ;main_master.c: 105:     PORTB = 0;
   841  0754  1283               	bcf	3,5	;RP0=0, select bank0
   842  0755  1303               	bcf	3,6	;RP1=0, select bank0
   843  0756  0186               	clrf	6	;volatile
   844                           
   845                           ;main_master.c: 106:     PORTD = 0;
   846  0757  0188               	clrf	8	;volatile
   847  0758                     l769:
   848                           
   849                           ;main_master.c: 107:     PORTCbits.RC2 = 1;
   850  0758  1507               	bsf	7,2	;volatile
   851  0759                     l771:
   852                           
   853                           ;main_master.c: 108:     PORTCbits.RC1 = 1;
   854  0759  1487               	bsf	7,1	;volatile
   855  075A                     l773:
   856                           
   857                           ;main_master.c: 109:     PORTCbits.RC0 = 1;
   858  075A  1407               	bsf	7,0	;volatile
   859  075B                     l775:
   860                           
   861                           ;main_master.c: 110:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_
      +                          IDLE_LOW, SPI_IDLE_2_ACTIVE);
   862  075B  01F0               	clrf	spiInit@sDataSample
   863  075C  01F1               	clrf	spiInit@sClockIdle
   864  075D  01F2               	clrf	spiInit@sTransmitEdge
   865  075E  3020               	movlw	32
   866  075F  120A  118A  2733  120A  118A  	fcall	_spiInit
   867  0764                     l77:
   868  0764  0008               	return
   869  0765                     __end_of_setup:
   870                           
   871                           	psect	text5
   872  0733                     __ptext5:	
   873 ;; *************** function _spiInit *****************
   874 ;; Defined at:
   875 ;;		line 12 in file "SPI.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  sType           1    wreg     enum E1264
   878 ;;  sDataSample     1    0[COMMON] enum E1272
   879 ;;  sClockIdle      1    1[COMMON] enum E1276
   880 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  sType           1    3[COMMON] enum E1264
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   892 ;;      Params:         3       0       0       0       0
   893 ;;      Locals:         1       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0
   895 ;;      Totals:         4       0       0       0       0
   896 ;;Total ram usage:        4 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; This function calls:
   899 ;;		Nothing
   900 ;; This function is called by:
   901 ;;		_setup
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           
   906                           ;psect for function _spiInit
   907  0733                     _spiInit:
   908                           
   909                           ;incstack = 0
   910                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   911                           ;spiInit@sType stored from wreg
   912  0733  00F3               	movwf	spiInit@sType
   913  0734                     l751:
   914                           
   915                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   916  0734  1683               	bsf	3,5	;RP0=1, select bank1
   917  0735  1303               	bcf	3,6	;RP1=0, select bank1
   918  0736  1287               	bcf	7,5	;volatile
   919                           
   920                           ;SPI.c: 15:     if(sType & 0b00000100)
   921  0737  1D73               	btfss	spiInit@sType,2
   922  0738  2F3A               	goto	u31
   923  0739  2F3B               	goto	u30
   924  073A                     u31:
   925  073A  2F3F               	goto	l757
   926  073B                     u30:
   927  073B                     l753:
   928                           
   929                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   930  073B  0872               	movf	spiInit@sTransmitEdge,w
   931  073C  0094               	movwf	20	;volatile
   932  073D                     l755:
   933                           
   934                           ;SPI.c: 18:         TRISC3 = 1;
   935  073D  1587               	bsf	7,3	;volatile
   936                           
   937                           ;SPI.c: 19:     }
   938  073E  2F43               	goto	l16
   939  073F                     l757:
   940                           
   941                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   942  073F  0870               	movf	spiInit@sDataSample,w
   943  0740  0472               	iorwf	spiInit@sTransmitEdge,w
   944  0741  0094               	movwf	20	;volatile
   945  0742                     l759:
   946                           
   947                           ;SPI.c: 23:         TRISC3 = 0;
   948  0742  1187               	bcf	7,3	;volatile
   949  0743                     l16:	
   950                           ;SPI.c: 24:     }
   951                           
   952                           
   953                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   954  0743  0873               	movf	spiInit@sType,w
   955  0744  0471               	iorwf	spiInit@sClockIdle,w
   956  0745  1283               	bcf	3,5	;RP0=0, select bank0
   957  0746  1303               	bcf	3,6	;RP1=0, select bank0
   958  0747  0094               	movwf	20	;volatile
   959  0748                     l17:
   960  0748  0008               	return
   961  0749                     __end_of_spiInit:
   962  007E                     btemp	set	126	;btemp
   963  007E                     wtemp0	set	126
   964                           
   965                           	psect	config
   966                           
   967                           ;Config register CONFIG1 @ 0x2007
   968                           ;	Oscillator Selection bits
   969                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
   970                           ;	Watchdog Timer Enable bit
   971                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   972                           ;	Power-up Timer Enable bit
   973                           ;	PWRTE = OFF, PWRT disabled
   974                           ;	RE3/MCLR pin function select bit
   975                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   976                           ;	Code Protection bit
   977                           ;	CP = OFF, Program memory code protection is disabled
   978                           ;	Data Code Protection bit
   979                           ;	CPD = OFF, Data memory code protection is disabled
   980                           ;	Brown Out Reset Selection bits
   981                           ;	BOREN = OFF, BOR disabled
   982                           ;	Internal External Switchover bit
   983                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   984                           ;	Fail-Safe Clock Monitor Enabled bit
   985                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   986                           ;	Low Voltage Programming Enable bit
   987                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   988                           ;	In-Circuit Debugger Mode bit
   989                           ;	DEBUG = 0x1, unprogrammed default
   990  2007                     	org	8199
   991  2007  20D6               	dw	8406
   992                           
   993                           ;Config register CONFIG2 @ 0x2008
   994                           ;	Brown-out Reset Selection bit
   995                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   996                           ;	Flash Program Memory Self Write Enable bits
   997                           ;	WRT = OFF, Write protection off
   998  2008                     	org	8200
   999  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              4 COMMON     2     2      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 07:55:42 2021

            _SSPSTATbits 0094                       l20 0723                       l23 0729  
                     l16 0743                       l17 0748                       l34 0732  
                     l26 0722                       l77 0764                       u20 0729  
                     u21 0728                       u30 073B                       u31 073A  
                     u47 0771                       u57 0788                       u67 0794  
                     u77 07A0                       u87 07B7                       u97 07C3  
                    l801 07BF                      l811 07E2                      l803 07C8  
                    l813 07EB                      l805 07CB                      l751 0734  
                    l815 07EE                      l807 07D4                      l753 073B  
                    l761 0749                      l681 071E                      l809 07DA  
                    l755 073D                      l771 0759                      l763 074D  
                    l683 072A                      l757 073F                      l773 075A  
                    l765 0750                      l685 072F                      l781 076D  
                    l759 0742                      l775 075B                      l767 0751  
                    l679 0723                      l791 0790                      l783 0776  
                    l769 0758                      l793 0799                      l785 077C  
                    l777 0765                      l795 079C                      l787 0784  
                    l779 076A                      l797 07B3                      l789 078D  
                    l799 07BC                      u107 07CF                      u117 07E6  
                    u127 07F2                     _main 0765                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _setup 0749          __end_of_spiInit 0749  
        __end_of_spiRead 0733                    status 0003                    wtemp0 007E  
        __initialization 07FB             __end_of_main 07FB                   ??_main 0074  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC0 0438  
                 _TRISC1 0439                   _TRISC2 043A                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
       __end_of_spiWrite 0723                ??_spiInit 0073                ??_spiRead 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_setup 0765  
                ??_setup 0074               __pmaintext 0765  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 071D  
                __ptext2 072A                  __ptext3 0723                  __ptext4 0749  
                __ptext5 0733                  _spiInit 0733                  _spiRead 072A  
   end_of_initialization 07FC               ??_spiWrite 0070                _PORTCbits 0007  
            spiWrite@dat 0070           _spiReceiveWait 0723      start_initialization 07FB  
 __end_of_spiReceiveWait 072A              __pbssCOMMON 0076                ___latbits 0002  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006                 ?_spiInit 0070  
               ?_spiRead 0070           __size_of_setup 001C     spiInit@sTransmitEdge 0072  
     spiInit@sDataSample 0070         __size_of_spiInit 0016         __size_of_spiRead 0009  
          __size_of_main 0096                 _spiWrite 071D             spiInit@sType 0073  
      spiInit@sClockIdle 0071         ??_spiReceiveWait 0070              _temperatura 0076  
