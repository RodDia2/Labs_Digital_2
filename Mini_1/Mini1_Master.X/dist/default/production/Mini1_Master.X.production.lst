

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 19:26:15 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F887 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0088                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0105                     	;# 
   156  0107                     	;# 
   157  0108                     	;# 
   158  0109                     	;# 
   159  010C                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0185                     	;# 
   165  0187                     	;# 
   166  0188                     	;# 
   167  0189                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  0105                     	;# 
   234  0107                     	;# 
   235  0108                     	;# 
   236  0109                     	;# 
   237  010C                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  0185                     	;# 
   243  0187                     	;# 
   244  0188                     	;# 
   245  0189                     	;# 
   246  018C                     	;# 
   247  018D                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  000E                     	;# 
   263  000E                     	;# 
   264  000F                     	;# 
   265  0010                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0013                     	;# 
   269  0014                     	;# 
   270  0015                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0017                     	;# 
   274  0018                     	;# 
   275  0019                     	;# 
   276  001A                     	;# 
   277  001B                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  001D                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  0081                     	;# 
   284  0085                     	;# 
   285  0086                     	;# 
   286  0087                     	;# 
   287  0088                     	;# 
   288  0089                     	;# 
   289  008C                     	;# 
   290  008D                     	;# 
   291  008E                     	;# 
   292  008F                     	;# 
   293  0090                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009E                     	;# 
   310  009F                     	;# 
   311  0105                     	;# 
   312  0107                     	;# 
   313  0108                     	;# 
   314  0109                     	;# 
   315  010C                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  010F                     	;# 
   320  0185                     	;# 
   321  0187                     	;# 
   322  0188                     	;# 
   323  0189                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  008F                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0094                     	;# 
   378  0095                     	;# 
   379  0096                     	;# 
   380  0097                     	;# 
   381  0098                     	;# 
   382  0099                     	;# 
   383  009A                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  0105                     	;# 
   390  0107                     	;# 
   391  0108                     	;# 
   392  0109                     	;# 
   393  010C                     	;# 
   394  010C                     	;# 
   395  010D                     	;# 
   396  010E                     	;# 
   397  010F                     	;# 
   398  0185                     	;# 
   399  0187                     	;# 
   400  0188                     	;# 
   401  0189                     	;# 
   402  018C                     	;# 
   403  018D                     	;# 
   404  0000                     	;# 
   405  0001                     	;# 
   406  0002                     	;# 
   407  0003                     	;# 
   408  0004                     	;# 
   409  0005                     	;# 
   410  0006                     	;# 
   411  0007                     	;# 
   412  0008                     	;# 
   413  0009                     	;# 
   414  000A                     	;# 
   415  000B                     	;# 
   416  000C                     	;# 
   417  000D                     	;# 
   418  000E                     	;# 
   419  000E                     	;# 
   420  000F                     	;# 
   421  0010                     	;# 
   422  0011                     	;# 
   423  0012                     	;# 
   424  0013                     	;# 
   425  0014                     	;# 
   426  0015                     	;# 
   427  0015                     	;# 
   428  0016                     	;# 
   429  0017                     	;# 
   430  0018                     	;# 
   431  0019                     	;# 
   432  001A                     	;# 
   433  001B                     	;# 
   434  001B                     	;# 
   435  001C                     	;# 
   436  001D                     	;# 
   437  001E                     	;# 
   438  001F                     	;# 
   439  0081                     	;# 
   440  0085                     	;# 
   441  0086                     	;# 
   442  0087                     	;# 
   443  0088                     	;# 
   444  0089                     	;# 
   445  008C                     	;# 
   446  008D                     	;# 
   447  008E                     	;# 
   448  008F                     	;# 
   449  0090                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0094                     	;# 
   456  0095                     	;# 
   457  0096                     	;# 
   458  0097                     	;# 
   459  0098                     	;# 
   460  0099                     	;# 
   461  009A                     	;# 
   462  009B                     	;# 
   463  009C                     	;# 
   464  009D                     	;# 
   465  009E                     	;# 
   466  009F                     	;# 
   467  0105                     	;# 
   468  0107                     	;# 
   469  0108                     	;# 
   470  0109                     	;# 
   471  010C                     	;# 
   472  010C                     	;# 
   473  010D                     	;# 
   474  010E                     	;# 
   475  010F                     	;# 
   476  0185                     	;# 
   477  0187                     	;# 
   478  0188                     	;# 
   479  0189                     	;# 
   480  018C                     	;# 
   481  018D                     	;# 
   482                           
   483                           	psect	idataBANK1
   484  0005                     __pidataBANK1:
   485                           
   486                           ;initializer for _TEMP
   487  0005  3405               	retlw	5
   488                           
   489                           	psect	strings
   490  0800                     __pstrings:
   491  0800                     stringtab:
   492  0800                     __stringtab:
   493                           
   494                           ;	String table - string pointers are 1 byte each
   495  0800  1BFF               	btfsc	btemp+1,7
   496  0801  280A               	ljmp	stringcode
   497  0802  1383               	bcf	3,7
   498  0803  187F               	btfsc	btemp+1,0
   499  0804  1783               	bsf	3,7
   500  0805  0800               	movf	0,w
   501  0806  0A84               	incf	4,f
   502  0807  1903               	skipnz
   503  0808  0AFF               	incf	btemp+1,f
   504  0809  0008               	return
   505  080A                     stringcode:
   506  080A                     stringdir:
   507  080A  3008               	movlw	high stringdir
   508  080B  008A               	movwf	10
   509  080C  0804               	movf	4,w
   510  080D  0A84               	incf	4,f
   511  080E  0782               	addwf	2,f
   512  080F                     __stringbase:
   513  080F  3400               	retlw	0
   514  0810                     __end_of__stringtab:
   515  0810                     __powers_:
   516  0810  3400               	retlw	0
   517  0811  3400               	retlw	0
   518  0812  3480               	retlw	128
   519  0813  343F               	retlw	63
   520  0814  3400               	retlw	0
   521  0815  3400               	retlw	0
   522  0816  3420               	retlw	32
   523  0817  3441               	retlw	65
   524  0818  3400               	retlw	0
   525  0819  3400               	retlw	0
   526  081A  34C8               	retlw	200
   527  081B  3442               	retlw	66
   528  081C  3400               	retlw	0
   529  081D  3400               	retlw	0
   530  081E  347A               	retlw	122
   531  081F  3444               	retlw	68
   532  0820  3400               	retlw	0
   533  0821  3440               	retlw	64
   534  0822  341C               	retlw	28
   535  0823  3446               	retlw	70
   536  0824  3400               	retlw	0
   537  0825  3450               	retlw	80
   538  0826  34C3               	retlw	195
   539  0827  3447               	retlw	71
   540  0828  3400               	retlw	0
   541  0829  3424               	retlw	36
   542  082A  3474               	retlw	116
   543  082B  3449               	retlw	73
   544  082C  3480               	retlw	128
   545  082D  3496               	retlw	150
   546  082E  3418               	retlw	24
   547  082F  344B               	retlw	75
   548  0830  3420               	retlw	32
   549  0831  34BC               	retlw	188
   550  0832  34BE               	retlw	190
   551  0833  344C               	retlw	76
   552  0834  3428               	retlw	40
   553  0835  346B               	retlw	107
   554  0836  346E               	retlw	110
   555  0837  344E               	retlw	78
   556  0838  34F9               	retlw	249
   557  0839  3402               	retlw	2
   558  083A  3415               	retlw	21
   559  083B  3450               	retlw	80
   560  083C  34EC               	retlw	236
   561  083D  3478               	retlw	120
   562  083E  34AD               	retlw	173
   563  083F  3460               	retlw	96
   564  0840  34CA               	retlw	202
   565  0841  34F2               	retlw	242
   566  0842  3449               	retlw	73
   567  0843  3471               	retlw	113
   568  0844                     __end_of__powers_:
   569  0844                     __npowers_:
   570  0844  3400               	retlw	0
   571  0845  3400               	retlw	0
   572  0846  3480               	retlw	128
   573  0847  343F               	retlw	63
   574  0848  34CD               	retlw	205
   575  0849  34CC               	retlw	204
   576  084A  34CC               	retlw	204
   577  084B  343D               	retlw	61
   578  084C  340A               	retlw	10
   579  084D  34D7               	retlw	215
   580  084E  3423               	retlw	35
   581  084F  343C               	retlw	60
   582  0850  346F               	retlw	111
   583  0851  3412               	retlw	18
   584  0852  3483               	retlw	131
   585  0853  343A               	retlw	58
   586  0854  3417               	retlw	23
   587  0855  34B7               	retlw	183
   588  0856  34D1               	retlw	209
   589  0857  3438               	retlw	56
   590  0858  34AC               	retlw	172
   591  0859  34C5               	retlw	197
   592  085A  3427               	retlw	39
   593  085B  3437               	retlw	55
   594  085C  34BD               	retlw	189
   595  085D  3437               	retlw	55
   596  085E  3486               	retlw	134
   597  085F  3435               	retlw	53
   598  0860  3495               	retlw	149
   599  0861  34BF               	retlw	191
   600  0862  34D6               	retlw	214
   601  0863  3433               	retlw	51
   602  0864  3477               	retlw	119
   603  0865  34CC               	retlw	204
   604  0866  342B               	retlw	43
   605  0867  3432               	retlw	50
   606  0868  345F               	retlw	95
   607  0869  3470               	retlw	112
   608  086A  3489               	retlw	137
   609  086B  3430               	retlw	48
   610  086C  34FF               	retlw	255
   611  086D  34E6               	retlw	230
   612  086E  34DB               	retlw	219
   613  086F  342E               	retlw	46
   614  0870  3408               	retlw	8
   615  0871  34E5               	retlw	229
   616  0872  343C               	retlw	60
   617  0873  341E               	retlw	30
   618  0874  3460               	retlw	96
   619  0875  3442               	retlw	66
   620  0876  34A2               	retlw	162
   621  0877  340D               	retlw	13
   622  0878                     __end_of__npowers_:
   623  0878                     _dpowers:
   624  0878  3401               	retlw	1
   625  0879  3400               	retlw	0
   626  087A  3400               	retlw	0
   627  087B  3400               	retlw	0
   628  087C  340A               	retlw	10
   629  087D  3400               	retlw	0
   630  087E  3400               	retlw	0
   631  087F  3400               	retlw	0
   632  0880  3464               	retlw	100
   633  0881  3400               	retlw	0
   634  0882  3400               	retlw	0
   635  0883  3400               	retlw	0
   636  0884  34E8               	retlw	232
   637  0885  3403               	retlw	3
   638  0886  3400               	retlw	0
   639  0887  3400               	retlw	0
   640  0888  3410               	retlw	16
   641  0889  3427               	retlw	39
   642  088A  3400               	retlw	0
   643  088B  3400               	retlw	0
   644  088C  34A0               	retlw	160
   645  088D  3486               	retlw	134
   646  088E  3401               	retlw	1
   647  088F  3400               	retlw	0
   648  0890  3440               	retlw	64
   649  0891  3442               	retlw	66
   650  0892  340F               	retlw	15
   651  0893  3400               	retlw	0
   652  0894  3480               	retlw	128
   653  0895  3496               	retlw	150
   654  0896  3498               	retlw	152
   655  0897  3400               	retlw	0
   656  0898  3400               	retlw	0
   657  0899  34E1               	retlw	225
   658  089A  34F5               	retlw	245
   659  089B  3405               	retlw	5
   660  089C  3400               	retlw	0
   661  089D  34CA               	retlw	202
   662  089E  349A               	retlw	154
   663  089F  343B               	retlw	59
   664  08A0                     __end_of_dpowers:
   665  001A                     _RCREG	set	26
   666  0019                     _TXREG	set	25
   667  0018                     _RCSTAbits	set	24
   668  000B                     _INTCONbits	set	11
   669  000C                     _PIR1bits	set	12
   670  0009                     _PORTE	set	9
   671  0008                     _PORTD	set	8
   672  0006                     _PORTB	set	6
   673  0007                     _PORTCbits	set	7
   674  0013                     _SSPBUF	set	19
   675  0014                     _SSPCON	set	20
   676  0065                     _RCIF	set	101
   677  0049                     _RE1	set	73
   678  0048                     _RE0	set	72
   679  0087                     _TRISCbits	set	135
   680  008C                     _PIE1bits	set	140
   681  0098                     _TXSTAbits	set	152
   682  0099                     _SPBRG	set	153
   683  0089                     _TRISE	set	137
   684  0088                     _TRISD	set	136
   685  0086                     _TRISB	set	134
   686  0094                     _SSPSTATbits	set	148
   687  0094                     _SSPSTAT	set	148
   688  04C1                     _TRMT	set	1217
   689  043F                     _TRISC7	set	1087
   690  043A                     _TRISC2	set	1082
   691  0439                     _TRISC1	set	1081
   692  0438                     _TRISC0	set	1080
   693  043B                     _TRISC3	set	1083
   694  043D                     _TRISC5	set	1085
   695  0189                     _ANSELH	set	393
   696  0188                     _ANSEL	set	392
   697  08A0                     STR_1:
   698  08A0  3441               	retlw	65	;'A'
   699  08A1  3444               	retlw	68	;'D'
   700  08A2  3443               	retlw	67	;'C'
   701  08A3  3420               	retlw	32	;' '
   702  08A4  3420               	retlw	32	;' '
   703  08A5  3443               	retlw	67	;'C'
   704  08A6  344F               	retlw	79	;'O'
   705  08A7  344E               	retlw	78	;'N'
   706  08A8  3454               	retlw	84	;'T'
   707  08A9  3420               	retlw	32	;' '
   708  08AA  3420               	retlw	32	;' '
   709  08AB  3454               	retlw	84	;'T'
   710  08AC  3445               	retlw	69	;'E'
   711  08AD  344D               	retlw	77	;'M'
   712  08AE  3450               	retlw	80	;'P'
   713  08AF  3420               	retlw	32	;' '
   714  08B0  340A               	retlw	10
   715  08B1  3400               	retlw	0
   716  08B2                     STR_2:
   717  08B2  3425               	retlw	37	;'%'
   718  08B3  3431               	retlw	49	;'1'
   719  08B4  342E               	retlw	46	;'.'
   720  08B5  3432               	retlw	50	;'2'
   721  08B6  3466               	retlw	102	;'f'
   722  08B7  3456               	retlw	86	;'V'
   723  08B8  3420               	retlw	32	;' '
   724  08B9  3425               	retlw	37	;'%'
   725  08BA  3433               	retlw	51	;'3'
   726  08BB  3464               	retlw	100	;'d'
   727  08BC  3420               	retlw	32	;' '
   728  08BD  3420               	retlw	32	;' '
   729  08BE  3425               	retlw	37	;'%'
   730  08BF  3433               	retlw	51	;'3'
   731  08C0  3464               	retlw	100	;'d'
   732  08C1  3443               	retlw	67	;'C'
   733  08C2  3400               	retlw	0
   734  08C3                     STR_3:
   735  08C3  3441               	retlw	65	;'A'
   736  08C4  3444               	retlw	68	;'D'
   737  08C5  3443               	retlw	67	;'C'
   738  08C6  3420               	retlw	32	;' '
   739  08C7  3420               	retlw	32	;' '
   740  08C8  3443               	retlw	67	;'C'
   741  08C9  344F               	retlw	79	;'O'
   742  08CA  344E               	retlw	78	;'N'
   743  08CB  3454               	retlw	84	;'T'
   744  08CC  3420               	retlw	32	;' '
   745  08CD  3420               	retlw	32	;' '
   746  08CE  3454               	retlw	84	;'T'
   747  08CF  3445               	retlw	69	;'E'
   748  08D0  344D               	retlw	77	;'M'
   749  08D1  3450               	retlw	80	;'P'
   750  08D2  3400               	retlw	0
   751                           
   752                           	psect	cinit
   753  07E8                     start_initialization:	
   754                           ; #config settings
   755                           
   756  07E8                     __initialization:
   757                           
   758                           ; Initialize objects allocated to BANK1
   759  07E8  1683               	bsf	3,5	;RP0=1, select bank1
   760  07E9  1303               	bcf	3,6	;RP1=0, select bank1
   761  07EA  120A  118A  2005  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   762  07EF  00E8               	movwf	__pdataBANK1& (0+127)
   763                           
   764                           ; Clear objects allocated to BANK1
   765  07F0  1383               	bcf	3,7	;select IRP bank0
   766  07F1  30CE               	movlw	low __pbssBANK1
   767  07F2  0084               	movwf	4
   768  07F3  30E8               	movlw	low (__pbssBANK1+26)
   769  07F4  160A  158A  21BA  120A  118A  	fcall	clear_ram0
   770                           
   771                           ; Clear objects allocated to BANK0
   772  07F9  1283               	bcf	3,5	;RP0=0, select bank0
   773  07FA  1303               	bcf	3,6	;RP1=0, select bank0
   774  07FB  01EE               	clrf	__pbssBANK0& (0+127)
   775  07FC                     end_of_initialization:	
   776                           ;End of C runtime variable initialization code
   777                           
   778  07FC                     __end_of__initialization:
   779  07FC  0183               	clrf	3
   780  07FD  120A  118A  285F   	ljmp	_main	;jump to C main() function
   781                           
   782                           	psect	bssBANK0
   783  006E                     __pbssBANK0:
   784  006E                     _recibido:
   785  006E                     	ds	1
   786                           
   787                           	psect	bssBANK1
   788  00CE                     __pbssBANK1:
   789  00CE                     _V1:
   790  00CE                     	ds	4
   791  00D2                     _CONT:
   792  00D2                     	ds	1
   793  00D3                     _ADC:
   794  00D3                     	ds	1
   795  00D4                     _pantalla:
   796  00D4                     	ds	20
   797                           
   798                           	psect	dataBANK1
   799  00E8                     __pdataBANK1:
   800  00E8                     _TEMP:
   801  00E8                     	ds	1
   802                           
   803                           	psect	clrtext
   804  19BA                     clear_ram0:	
   805                           ;	Called with FSR containing the base address, and
   806                           ;	W with the last address+1
   807                           
   808  19BA  0064               	clrwdt	;clear the watchdog before getting into this loop
   809  19BB                     clrloop0:
   810  19BB  0180               	clrf	0	;clear RAM location pointed to by FSR
   811  19BC  0A84               	incf	4,f	;increment pointer
   812  19BD  0604               	xorwf	4,w	;XOR with final address
   813  19BE  1903               	btfsc	3,2	;have we reached the end yet?
   814  19BF  3400               	retlw	0	;all done for this memory range, return
   815  19C0  0604               	xorwf	4,w	;XOR again to restore value
   816  19C1  29BB               	goto	clrloop0	;do the next byte
   817                           
   818                           	psect	cstackBANK1
   819  00A0                     __pcstackBANK1:
   820  00A0                     ?_sprintf:
   821  00A0                     sprintf@f:	
   822                           ; 2 bytes @ 0x0
   823                           
   824                           
   825                           ; 1 bytes @ 0x0
   826  00A0                     	ds	9
   827  00A9                     ??_sprintf:
   828                           
   829                           ; 1 bytes @ 0x9
   830  00A9                     	ds	5
   831  00AE                     _sprintf$1220:
   832                           
   833                           ; 4 bytes @ 0xE
   834  00AE                     	ds	4
   835  00B2                     sprintf@ap:
   836                           
   837                           ; 1 bytes @ 0x12
   838  00B2                     	ds	1
   839  00B3                     sprintf@flag:
   840                           
   841                           ; 2 bytes @ 0x13
   842  00B3                     	ds	2
   843  00B5                     sprintf@width:
   844                           
   845                           ; 2 bytes @ 0x15
   846  00B5                     	ds	2
   847  00B7                     sprintf@tmpval:
   848                           
   849                           ; 4 bytes @ 0x17
   850  00B7                     	ds	4
   851  00BB                     sprintf@val:
   852                           
   853                           ; 4 bytes @ 0x1B
   854  00BB                     	ds	4
   855  00BF                     sprintf@eexp:
   856                           
   857                           ; 2 bytes @ 0x1F
   858  00BF                     	ds	2
   859  00C1                     sprintf@fval:
   860                           
   861                           ; 4 bytes @ 0x21
   862  00C1                     	ds	4
   863  00C5                     sprintf@sp:
   864                           
   865                           ; 1 bytes @ 0x25
   866  00C5                     	ds	1
   867  00C6                     sprintf@prec:
   868                           
   869                           ; 2 bytes @ 0x26
   870  00C6                     	ds	2
   871  00C8                     sprintf@c:
   872                           
   873                           ; 1 bytes @ 0x28
   874  00C8                     	ds	1
   875  00C9                     ??_main:
   876                           
   877                           ; 1 bytes @ 0x29
   878  00C9                     	ds	5
   879                           
   880                           	psect	cstackCOMMON
   881  0070                     __pcstackCOMMON:
   882  0070                     ?_isdigit:
   883  0070                     ?___fleq:	
   884                           ; 1 bit 
   885                           
   886  0070                     ?___flge:	
   887                           ; 1 bit 
   888                           
   889  0070                     ?_setup:	
   890                           ; 1 bit 
   891                           
   892  0070                     ?_LCD_Init:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0070                     ?_LCD_clear:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0070                     ?_Set_Baud_Rate:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0070                     ??_Set_Baud_Rate:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  0070                     ?_Init_Transmit:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0070                     ??_Init_Transmit:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  0070                     ?_Init_Receive:	
   911                           ; 1 bytes @ 0x0
   912                           
   913  0070                     ??_Init_Receive:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  0070                     ?_USART_Write:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0070                     ??_USART_Write:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0070                     ?_LCD_Port:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0070                     ??_LCD_Port:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0070                     ??_isdigit:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0070                     ?_spiInit:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0070                     ?_spiReceiveWait:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0070                     ??_spiReceiveWait:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0070                     ?_spiWrite:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0070                     ??_spiWrite:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0070                     ?_spiRead:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0070                     ??_spiRead:	
   950                           ; 1 bytes @ 0x0
   951                           
   952  0070                     ?_main:	
   953                           ; 1 bytes @ 0x0
   954                           
   955  0070                     ?_LCD_Write_Char:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0070                     ?_LCD_Command:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0070                     ?__Umul8_16:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0070                     ?___wmul:	
   965                           ; 2 bytes @ 0x0
   966                           
   967  0070                     ?___awmod:	
   968                           ; 2 bytes @ 0x0
   969                           
   970  0070                     ?___lwmod:	
   971                           ; 2 bytes @ 0x0
   972                           
   973  0070                     ?__tdiv_to_l_:	
   974                           ; 2 bytes @ 0x0
   975                           
   976  0070                     ?__div_to_l_:	
   977                           ; 4 bytes @ 0x0
   978                           
   979  0070                     ?___lldiv:	
   980                           ; 4 bytes @ 0x0
   981                           
   982  0070                     ?___flneg:	
   983                           ; 4 bytes @ 0x0
   984                           
   985  0070                     ?___xxtofl:	
   986                           ; 4 bytes @ 0x0
   987                           
   988  0070                     spiInit@sDataSample:	
   989                           ; 4 bytes @ 0x0
   990                           
   991  0070                     spiWrite@dat:	
   992                           ; 1 bytes @ 0x0
   993                           
   994  0070                     LCD_Port@a:	
   995                           ; 1 bytes @ 0x0
   996                           
   997  0070                     USART_Write@a:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000  0070                     __Umul8_16@multiplicand:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003  0070                     _isdigit$1033:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006  0070                     ___wmul@multiplier:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009  0070                     ___awmod@divisor:	
  1010                           ; 2 bytes @ 0x0
  1011                           
  1012  0070                     ___lwmod@divisor:	
  1013                           ; 2 bytes @ 0x0
  1014                           
  1015  0070                     ___lldiv@divisor:	
  1016                           ; 2 bytes @ 0x0
  1017                           
  1018  0070                     __div_to_l_@f1:	
  1019                           ; 4 bytes @ 0x0
  1020                           
  1021  0070                     ___fleq@ff1:	
  1022                           ; 4 bytes @ 0x0
  1023                           
  1024  0070                     ___flge@ff1:	
  1025                           ; 4 bytes @ 0x0
  1026                           
  1027  0070                     ___flneg@f1:	
  1028                           ; 4 bytes @ 0x0
  1029                           
  1030  0070                     __tdiv_to_l_@f1:	
  1031                           ; 4 bytes @ 0x0
  1032                           
  1033  0070                     ___xxtofl@val:	
  1034                           ; 4 bytes @ 0x0
  1035                           
  1036                           
  1037                           ; 4 bytes @ 0x0
  1038  0070                     	ds	1
  1039  0071                     ?_USART_Write_String:
  1040  0071                     ??_LCD_Write_Char:	
  1041                           ; 1 bytes @ 0x1
  1042                           
  1043  0071                     ??_LCD_Command:	
  1044                           ; 1 bytes @ 0x1
  1045                           
  1046  0071                     spiInit@sClockIdle:	
  1047                           ; 1 bytes @ 0x1
  1048                           
  1049  0071                     isdigit@c:	
  1050                           ; 1 bytes @ 0x1
  1051                           
  1052  0071                     USART_Write_String@a:	
  1053                           ; 1 bytes @ 0x1
  1054                           
  1055                           
  1056                           ; 2 bytes @ 0x1
  1057  0071                     	ds	1
  1058  0072                     ??__Umul8_16:
  1059  0072                     spiInit@sTransmitEdge:	
  1060                           ; 1 bytes @ 0x2
  1061                           
  1062  0072                     LCD_Write_Char@a:	
  1063                           ; 1 bytes @ 0x2
  1064                           
  1065  0072                     ___wmul@multiplicand:	
  1066                           ; 1 bytes @ 0x2
  1067                           
  1068  0072                     ___awmod@dividend:	
  1069                           ; 2 bytes @ 0x2
  1070                           
  1071  0072                     ___lwmod@dividend:	
  1072                           ; 2 bytes @ 0x2
  1073                           
  1074                           
  1075                           ; 2 bytes @ 0x2
  1076  0072                     	ds	1
  1077  0073                     ??_USART_Write_String:
  1078  0073                     ?_LCD_Write_String:	
  1079                           ; 1 bytes @ 0x3
  1080                           
  1081  0073                     ??_spiInit:	
  1082                           ; 1 bytes @ 0x3
  1083                           
  1084  0073                     spiInit@sType:	
  1085                           ; 1 bytes @ 0x3
  1086                           
  1087  0073                     LCD_Command@a:	
  1088                           ; 1 bytes @ 0x3
  1089                           
  1090  0073                     LCD_Write_String@a:	
  1091                           ; 1 bytes @ 0x3
  1092                           
  1093                           
  1094                           ; 2 bytes @ 0x3
  1095  0073                     	ds	1
  1096  0074                     ??_setup:
  1097  0074                     ??_LCD_Init:	
  1098                           ; 1 bytes @ 0x4
  1099                           
  1100  0074                     ??_LCD_clear:	
  1101                           ; 1 bytes @ 0x4
  1102                           
  1103  0074                     ?_LCD_Set_Cursor:	
  1104                           ; 1 bytes @ 0x4
  1105                           
  1106  0074                     ??___wmul:	
  1107                           ; 1 bytes @ 0x4
  1108                           
  1109  0074                     ??___awmod:	
  1110                           ; 1 bytes @ 0x4
  1111                           
  1112  0074                     ??___flneg:	
  1113                           ; 1 bytes @ 0x4
  1114                           
  1115  0074                     ??___lwmod:	
  1116                           ; 1 bytes @ 0x4
  1117                           
  1118  0074                     ??___xxtofl:	
  1119                           ; 1 bytes @ 0x4
  1120                           
  1121  0074                     LCD_Set_Cursor@y:	
  1122                           ; 1 bytes @ 0x4
  1123                           
  1124  0074                     USART_Write_String@i:	
  1125                           ; 1 bytes @ 0x4
  1126                           
  1127  0074                     ___wmul@product:	
  1128                           ; 1 bytes @ 0x4
  1129                           
  1130  0074                     __Umul8_16@product:	
  1131                           ; 2 bytes @ 0x4
  1132                           
  1133  0074                     ___lldiv@dividend:	
  1134                           ; 2 bytes @ 0x4
  1135                           
  1136  0074                     __div_to_l_@f2:	
  1137                           ; 4 bytes @ 0x4
  1138                           
  1139  0074                     ___fleq@ff2:	
  1140                           ; 4 bytes @ 0x4
  1141                           
  1142  0074                     ___flge@ff2:	
  1143                           ; 4 bytes @ 0x4
  1144                           
  1145  0074                     __tdiv_to_l_@f2:	
  1146                           ; 4 bytes @ 0x4
  1147                           
  1148                           
  1149                           ; 4 bytes @ 0x4
  1150  0074                     	ds	1
  1151  0075                     ??_LCD_Set_Cursor:
  1152  0075                     ??_LCD_Write_String:	
  1153                           ; 1 bytes @ 0x5
  1154                           
  1155  0075                     ___awmod@counter:	
  1156                           ; 1 bytes @ 0x5
  1157                           
  1158  0075                     ___lwmod@counter:	
  1159                           ; 1 bytes @ 0x5
  1160                           
  1161                           
  1162                           ; 1 bytes @ 0x5
  1163  0075                     	ds	1
  1164  0076                     ?___lwdiv:
  1165  0076                     LCD_Set_Cursor@x:	
  1166                           ; 2 bytes @ 0x6
  1167                           
  1168  0076                     ___awmod@sign:	
  1169                           ; 1 bytes @ 0x6
  1170                           
  1171  0076                     ___lwdiv@divisor:	
  1172                           ; 1 bytes @ 0x6
  1173                           
  1174  0076                     __Umul8_16@word_mpld:	
  1175                           ; 2 bytes @ 0x6
  1176                           
  1177                           
  1178                           ; 2 bytes @ 0x6
  1179  0076                     	ds	1
  1180  0077                     ?___awdiv:
  1181  0077                     LCD_Set_Cursor@a:	
  1182                           ; 2 bytes @ 0x7
  1183                           
  1184  0077                     ___awdiv@divisor:	
  1185                           ; 1 bytes @ 0x7
  1186                           
  1187                           
  1188                           ; 2 bytes @ 0x7
  1189  0077                     	ds	1
  1190  0078                     ??__tdiv_to_l_:
  1191  0078                     ??__div_to_l_:	
  1192                           ; 1 bytes @ 0x8
  1193                           
  1194  0078                     ??___lldiv:	
  1195                           ; 1 bytes @ 0x8
  1196                           
  1197  0078                     ??___fleq:	
  1198                           ; 1 bytes @ 0x8
  1199                           
  1200  0078                     ??___flge:	
  1201                           ; 1 bytes @ 0x8
  1202                           
  1203  0078                     __Umul8_16@multiplier:	
  1204                           ; 1 bytes @ 0x8
  1205                           
  1206  0078                     ___xxtofl@sign:	
  1207                           ; 1 bytes @ 0x8
  1208                           
  1209  0078                     LCD_Write_String@i:	
  1210                           ; 1 bytes @ 0x8
  1211                           
  1212  0078                     ___lwdiv@dividend:	
  1213                           ; 2 bytes @ 0x8
  1214                           
  1215                           
  1216                           ; 2 bytes @ 0x8
  1217  0078                     	ds	1
  1218  0079                     ___xxtofl@exp:
  1219  0079                     ___awdiv@dividend:	
  1220                           ; 1 bytes @ 0x9
  1221                           
  1222  0079                     ___lldiv@quotient:	
  1223                           ; 2 bytes @ 0x9
  1224                           
  1225                           
  1226                           ; 4 bytes @ 0x9
  1227  0079                     	ds	1
  1228  007A                     ??___lwdiv:
  1229  007A                     ___xxtofl@arg:	
  1230                           ; 1 bytes @ 0xA
  1231                           
  1232                           
  1233                           ; 4 bytes @ 0xA
  1234  007A                     	ds	1
  1235  007B                     ??___awdiv:
  1236  007B                     ___lwdiv@quotient:	
  1237                           ; 1 bytes @ 0xB
  1238                           
  1239                           
  1240                           ; 2 bytes @ 0xB
  1241  007B                     	ds	2
  1242  007D                     ___lldiv@counter:
  1243  007D                     ___lwdiv@counter:	
  1244                           ; 1 bytes @ 0xD
  1245                           
  1246                           
  1247                           ; 1 bytes @ 0xD
  1248  007D                     	ds	1
  1249  007E                     ??___flsub:
  1250                           
  1251                           	psect	cstackBANK0
  1252  0020                     __pcstackBANK0:	
  1253                           ; 1 bytes @ 0xE
  1254                           
  1255  0020                     ?___llmod:
  1256  0020                     ___awdiv@counter:	
  1257                           ; 4 bytes @ 0x0
  1258                           
  1259  0020                     __div_to_l_@quot:	
  1260                           ; 1 bytes @ 0x0
  1261                           
  1262  0020                     __tdiv_to_l_@quot:	
  1263                           ; 4 bytes @ 0x0
  1264                           
  1265  0020                     ___llmod@divisor:	
  1266                           ; 4 bytes @ 0x0
  1267                           
  1268                           
  1269                           ; 4 bytes @ 0x0
  1270  0020                     	ds	1
  1271  0021                     ___awdiv@sign:
  1272                           
  1273                           ; 1 bytes @ 0x1
  1274  0021                     	ds	1
  1275  0022                     ___awdiv@quotient:
  1276                           
  1277                           ; 2 bytes @ 0x2
  1278  0022                     	ds	2
  1279  0024                     ?___flmul:
  1280  0024                     __div_to_l_@cntr:	
  1281                           ; 4 bytes @ 0x4
  1282                           
  1283  0024                     __tdiv_to_l_@cntr:	
  1284                           ; 1 bytes @ 0x4
  1285                           
  1286  0024                     ___llmod@dividend:	
  1287                           ; 1 bytes @ 0x4
  1288                           
  1289  0024                     ___flmul@b:	
  1290                           ; 4 bytes @ 0x4
  1291                           
  1292                           
  1293                           ; 4 bytes @ 0x4
  1294  0024                     	ds	1
  1295  0025                     __div_to_l_@exp1:
  1296  0025                     __tdiv_to_l_@exp1:	
  1297                           ; 1 bytes @ 0x5
  1298                           
  1299                           
  1300                           ; 1 bytes @ 0x5
  1301  0025                     	ds	3
  1302  0028                     ??___llmod:
  1303  0028                     ___flmul@a:	
  1304                           ; 1 bytes @ 0x8
  1305                           
  1306                           
  1307                           ; 4 bytes @ 0x8
  1308  0028                     	ds	1
  1309  0029                     ___llmod@counter:
  1310                           
  1311                           ; 1 bytes @ 0x9
  1312  0029                     	ds	3
  1313  002C                     ??___flmul:
  1314                           
  1315                           ; 1 bytes @ 0xC
  1316  002C                     	ds	5
  1317  0031                     ___flmul@sign:
  1318                           
  1319                           ; 1 bytes @ 0x11
  1320  0031                     	ds	1
  1321  0032                     ___flmul@grs:
  1322                           
  1323                           ; 4 bytes @ 0x12
  1324  0032                     	ds	4
  1325  0036                     ___flmul@aexp:
  1326                           
  1327                           ; 1 bytes @ 0x16
  1328  0036                     	ds	1
  1329  0037                     ___flmul@bexp:
  1330                           
  1331                           ; 1 bytes @ 0x17
  1332  0037                     	ds	1
  1333  0038                     ___flmul@prod:
  1334                           
  1335                           ; 4 bytes @ 0x18
  1336  0038                     	ds	4
  1337  003C                     ___flmul@temp:
  1338                           
  1339                           ; 2 bytes @ 0x1C
  1340  003C                     	ds	2
  1341  003E                     ?_fround:
  1342  003E                     ?_scale:	
  1343                           ; 4 bytes @ 0x1E
  1344                           
  1345                           
  1346                           ; 4 bytes @ 0x1E
  1347  003E                     	ds	4
  1348  0042                     ??_fround:
  1349  0042                     ??_scale:	
  1350                           ; 1 bytes @ 0x22
  1351                           
  1352                           
  1353                           ; 1 bytes @ 0x22
  1354  0042                     	ds	7
  1355  0049                     _fround$1218:
  1356                           
  1357                           ; 4 bytes @ 0x29
  1358  0049                     	ds	3
  1359  004C                     _scale$1219:
  1360                           
  1361                           ; 4 bytes @ 0x2C
  1362  004C                     	ds	1
  1363  004D                     _fround$1217:
  1364                           
  1365                           ; 4 bytes @ 0x2D
  1366  004D                     	ds	3
  1367  0050                     scale@scl:
  1368                           
  1369                           ; 1 bytes @ 0x30
  1370  0050                     	ds	1
  1371  0051                     ?___fltol:
  1372  0051                     fround@prec:	
  1373                           ; 4 bytes @ 0x31
  1374                           
  1375  0051                     ___fltol@f1:	
  1376                           ; 1 bytes @ 0x31
  1377                           
  1378                           
  1379                           ; 4 bytes @ 0x31
  1380  0051                     	ds	1
  1381  0052                     ?___fladd:
  1382  0052                     ___fladd@b:	
  1383                           ; 4 bytes @ 0x32
  1384                           
  1385                           
  1386                           ; 4 bytes @ 0x32
  1387  0052                     	ds	3
  1388  0055                     ??___fltol:
  1389                           
  1390                           ; 1 bytes @ 0x35
  1391  0055                     	ds	1
  1392  0056                     ___fladd@a:
  1393                           
  1394                           ; 4 bytes @ 0x36
  1395  0056                     	ds	4
  1396  005A                     ??___fladd:
  1397  005A                     ___fltol@sign1:	
  1398                           ; 1 bytes @ 0x3A
  1399                           
  1400                           
  1401                           ; 1 bytes @ 0x3A
  1402  005A                     	ds	1
  1403  005B                     ___fltol@exp1:
  1404                           
  1405                           ; 1 bytes @ 0x3B
  1406  005B                     	ds	7
  1407  0062                     ___fladd@signs:
  1408                           
  1409                           ; 1 bytes @ 0x42
  1410  0062                     	ds	1
  1411  0063                     ___fladd@aexp:
  1412                           
  1413                           ; 1 bytes @ 0x43
  1414  0063                     	ds	1
  1415  0064                     ___fladd@bexp:
  1416                           
  1417                           ; 1 bytes @ 0x44
  1418  0064                     	ds	1
  1419  0065                     ___fladd@grs:
  1420                           
  1421                           ; 1 bytes @ 0x45
  1422  0065                     	ds	1
  1423  0066                     ?___flsub:
  1424  0066                     ___flsub@a:	
  1425                           ; 4 bytes @ 0x46
  1426                           
  1427                           
  1428                           ; 4 bytes @ 0x46
  1429  0066                     	ds	4
  1430  006A                     ___flsub@b:
  1431                           
  1432                           ; 4 bytes @ 0x4A
  1433  006A                     	ds	4
  1434                           
  1435                           	psect	maintext
  1436  005F                     __pmaintext:	
  1437 ;;
  1438 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1439 ;;
  1440 ;; *************** function _main *****************
  1441 ;; Defined at:
  1442 ;;		line 63 in file "main_master.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : B00/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1456 ;;      Params:         0       0       0       0       0
  1457 ;;      Locals:         0       0       0       0       0
  1458 ;;      Temps:          0       0       5       0       0
  1459 ;;      Totals:         0       0       5       0       0
  1460 ;;Total ram usage:        5 bytes
  1461 ;; Hardware stack levels required when called:    4
  1462 ;; This function calls:
  1463 ;;		_Init_Receive
  1464 ;;		_Init_Transmit
  1465 ;;		_LCD_Init
  1466 ;;		_LCD_Set_Cursor
  1467 ;;		_LCD_Write_String
  1468 ;;		_LCD_clear
  1469 ;;		_Set_Baud_Rate
  1470 ;;		_USART_Write
  1471 ;;		_USART_Write_String
  1472 ;;		___flmul
  1473 ;;		___xxtofl
  1474 ;;		_setup
  1475 ;;		_spiRead
  1476 ;;		_spiWrite
  1477 ;;		_sprintf
  1478 ;; This function is called by:
  1479 ;;		Startup code after reset
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           
  1484                           ;psect for function _main
  1485  005F                     _main:
  1486  005F                     l3595:	
  1487                           ;incstack = 0
  1488                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1489                           
  1490                           
  1491                           ;main_master.c: 65:     setup();
  1492  005F  160A  158A  2235  120A  118A  	fcall	_setup
  1493                           
  1494                           ;main_master.c: 67:     LCD_Init();
  1495  0064  160A  158A  2444  120A  118A  	fcall	_LCD_Init
  1496                           
  1497                           ;main_master.c: 68:     LCD_clear();
  1498  0069  160A  158A  21D9  120A  118A  	fcall	_LCD_clear
  1499                           
  1500                           ;main_master.c: 70:     Set_Baud_Rate();
  1501  006E  160A  158A  219A  120A  118A  	fcall	_Set_Baud_Rate
  1502  0073                     l3597:
  1503                           
  1504                           ;main_master.c: 72:     Init_Transmit();
  1505  0073  160A  158A  21E6  120A  118A  	fcall	_Init_Transmit
  1506  0078                     l3599:
  1507                           
  1508                           ;main_master.c: 73:     Init_Receive();
  1509  0078  160A  158A  21B2  120A  118A  	fcall	_Init_Receive
  1510  007D                     l3601:
  1511                           
  1512                           ;main_master.c: 87:         USART_Write_String("ADC  CONT  TEMP \n");
  1513  007D  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1514  007E  00F1               	movwf	USART_Write_String@a
  1515  007F  3080               	movlw	128
  1516  0080  00F2               	movwf	USART_Write_String@a+1
  1517  0081  160A  158A  230B  120A  118A  	fcall	_USART_Write_String
  1518  0086                     l3603:
  1519                           
  1520                           ;main_master.c: 89:         USART_Write(13);
  1521  0086  300D               	movlw	13
  1522  0087  160A  158A  21CD  120A  118A  	fcall	_USART_Write
  1523  008C                     l3605:
  1524                           
  1525                           ;main_master.c: 90:         USART_Write(10);
  1526  008C  300A               	movlw	10
  1527  008D  160A  158A  21CD  120A  118A  	fcall	_USART_Write
  1528  0092                     l3607:
  1529                           
  1530                           ;main_master.c: 94:         V1 = ADC*0.0196;
  1531  0092  303C               	movlw	60
  1532  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0095  00A7               	movwf	___flmul@b+3
  1535  0096  30A0               	movlw	160
  1536  0097  00A6               	movwf	___flmul@b+2
  1537  0098  3090               	movlw	144
  1538  0099  00A5               	movwf	___flmul@b+1
  1539  009A  302E               	movlw	46
  1540  009B  00A4               	movwf	___flmul@b
  1541  009C  1683               	bsf	3,5	;RP0=1, select bank1
  1542  009D  1303               	bcf	3,6	;RP1=0, select bank1
  1543  009E  0853               	movf	_ADC^(0+128),w
  1544  009F  00C9               	movwf	??_main^(0+128)
  1545  00A0  01CA               	clrf	(??_main^(0+128)+1)
  1546  00A1  01CB               	clrf	(??_main^(0+128)+2)
  1547  00A2  01CC               	clrf	(??_main^(0+128)+3)
  1548  00A3  084C               	movf	(??_main+3)^(0+128),w
  1549  00A4  00F3               	movwf	___xxtofl@val+3
  1550  00A5  084B               	movf	(??_main+2)^(0+128),w
  1551  00A6  00F2               	movwf	___xxtofl@val+2
  1552  00A7  084A               	movf	(??_main+1)^(0+128),w
  1553  00A8  00F1               	movwf	___xxtofl@val+1
  1554  00A9  0849               	movf	??_main^(0+128),w
  1555  00AA  00F0               	movwf	___xxtofl@val
  1556  00AB  3001               	movlw	1
  1557  00AC  160A  158A  25CB  120A  118A  	fcall	___xxtofl
  1558  00B1  0873               	movf	?___xxtofl+3,w
  1559  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1560  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1561  00B4  00AB               	movwf	___flmul@a+3
  1562  00B5  0872               	movf	?___xxtofl+2,w
  1563  00B6  00AA               	movwf	___flmul@a+2
  1564  00B7  0871               	movf	?___xxtofl+1,w
  1565  00B8  00A9               	movwf	___flmul@a+1
  1566  00B9  0870               	movf	?___xxtofl,w
  1567  00BA  00A8               	movwf	___flmul@a
  1568  00BB  120A  158A  249F  120A  118A  	fcall	___flmul
  1569  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1570  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1571  00C2  0827               	movf	?___flmul+3,w
  1572  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1573  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  1574  00C5  00D1               	movwf	(_V1+3)^(0+128)
  1575  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1576  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1577  00C8  0826               	movf	?___flmul+2,w
  1578  00C9  1683               	bsf	3,5	;RP0=1, select bank1
  1579  00CA  1303               	bcf	3,6	;RP1=0, select bank1
  1580  00CB  00D0               	movwf	(_V1+2)^(0+128)
  1581  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1582  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1583  00CE  0825               	movf	?___flmul+1,w
  1584  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  1585  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  1586  00D1  00CF               	movwf	(_V1+1)^(0+128)
  1587  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1588  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1589  00D4  0824               	movf	?___flmul,w
  1590  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  1591  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  1592  00D7  00CE               	movwf	_V1^(0+128)
  1593  00D8                     l3609:
  1594                           
  1595                           ;main_master.c: 95:         sprintf(pantalla, "%1.2fV %3d  %3dC", V1,CONT,TEMP);
  1596  00D8  30A3               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1597  00D9  00C9               	movwf	??_main^(0+128)
  1598  00DA  0849               	movf	??_main^(0+128),w
  1599  00DB  00A0               	movwf	sprintf@f^(0+128)
  1600  00DC  0851               	movf	(_V1+3)^(0+128),w
  1601  00DD  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1602  00DE  0850               	movf	(_V1+2)^(0+128),w
  1603  00DF  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1604  00E0  084F               	movf	(_V1+1)^(0+128),w
  1605  00E1  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1606  00E2  084E               	movf	_V1^(0+128),w
  1607  00E3  00A1               	movwf	(?_sprintf^(0+128)+1)
  1608  00E4  0852               	movf	_CONT^(0+128),w
  1609  00E5  00CA               	movwf	(??_main+1)^(0+128)
  1610  00E6  01CB               	clrf	((??_main+1)^(0+128)+1)
  1611  00E7  084A               	movf	(??_main+1)^(0+128),w
  1612  00E8  00A5               	movwf	(?_sprintf^(0+128)+5)
  1613  00E9  084B               	movf	(??_main+2)^(0+128),w
  1614  00EA  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  1615  00EB  0868               	movf	_TEMP^(0+128),w
  1616  00EC  00CC               	movwf	(??_main+3)^(0+128)
  1617  00ED  01CD               	clrf	((??_main+3)^(0+128)+1)
  1618  00EE  084C               	movf	(??_main+3)^(0+128),w
  1619  00EF  00A7               	movwf	(?_sprintf^(0+128)+7)
  1620  00F0  084D               	movf	(??_main+4)^(0+128),w
  1621  00F1  00A8               	movwf	((?_sprintf+1)^(0+128)+7)
  1622  00F2  30D4               	movlw	(low (_pantalla| 0))& (0+255)
  1623  00F3  160A  118A  253E  120A  118A  	fcall	_sprintf
  1624  00F8                     l3611:
  1625                           
  1626                           ;main_master.c: 97:         USART_Write_String(pantalla);
  1627  00F8  30D4               	movlw	(low (_pantalla| 0))& (0+255)
  1628  00F9  00F1               	movwf	USART_Write_String@a
  1629  00FA  3000               	movlw	0
  1630  00FB  00F2               	movwf	USART_Write_String@a+1
  1631  00FC  160A  158A  230B  120A  118A  	fcall	_USART_Write_String
  1632  0101                     l3613:
  1633                           
  1634                           ;main_master.c: 99:         USART_Write(13);
  1635  0101  300D               	movlw	13
  1636  0102  160A  158A  21CD  120A  118A  	fcall	_USART_Write
  1637  0107                     l3615:
  1638                           
  1639                           ;main_master.c: 100:         USART_Write(10);
  1640  0107  300A               	movlw	10
  1641  0108  160A  158A  21CD  120A  118A  	fcall	_USART_Write
  1642  010D                     l3617:
  1643                           
  1644                           ;main_master.c: 102:         LCD_clear();
  1645  010D  160A  158A  21D9  120A  118A  	fcall	_LCD_clear
  1646  0112                     l3619:
  1647                           
  1648                           ;main_master.c: 104:         LCD_Set_Cursor(1,1);
  1649  0112  01F4               	clrf	LCD_Set_Cursor@y
  1650  0113  0AF4               	incf	LCD_Set_Cursor@y,f
  1651  0114  3001               	movlw	1
  1652  0115  160A  158A  2277  120A  118A  	fcall	_LCD_Set_Cursor
  1653  011A                     l3621:
  1654                           
  1655                           ;main_master.c: 105:         LCD_Write_String("ADC  CONT  TEMP");
  1656  011A  30B4               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1657  011B  00F3               	movwf	LCD_Write_String@a
  1658  011C  3080               	movlw	128
  1659  011D  00F4               	movwf	LCD_Write_String@a+1
  1660  011E  160A  158A  2370  120A  118A  	fcall	_LCD_Write_String
  1661  0123                     l3623:
  1662                           
  1663                           ;main_master.c: 106:         LCD_Set_Cursor(2,1);
  1664  0123  01F4               	clrf	LCD_Set_Cursor@y
  1665  0124  0AF4               	incf	LCD_Set_Cursor@y,f
  1666  0125  3002               	movlw	2
  1667  0126  160A  158A  2277  120A  118A  	fcall	_LCD_Set_Cursor
  1668  012B                     l3625:
  1669                           
  1670                           ;main_master.c: 107:         LCD_Write_String(pantalla);
  1671  012B  30D4               	movlw	(low (_pantalla| 0))& (0+255)
  1672  012C  00F3               	movwf	LCD_Write_String@a
  1673  012D  3000               	movlw	0
  1674  012E  00F4               	movwf	LCD_Write_String@a+1
  1675  012F  160A  158A  2370  120A  118A  	fcall	_LCD_Write_String
  1676  0134                     l3627:
  1677                           
  1678                           ;main_master.c: 110:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1679  0134  3006               	movlw	6
  1680  0135  1683               	bsf	3,5	;RP0=1, select bank1
  1681  0136  1303               	bcf	3,6	;RP1=0, select bank1
  1682  0137  00CB               	movwf	(??_main^(0+128)+2)
  1683  0138  3013               	movlw	19
  1684  0139  00CA               	movwf	(??_main^(0+128)+1)
  1685  013A  30AD               	movlw	173
  1686  013B  00C9               	movwf	??_main^(0+128)
  1687  013C                     u5727:
  1688  013C  0BC9               	decfsz	??_main^(0+128),f
  1689  013D  293C               	goto	u5727
  1690  013E  0BCA               	decfsz	(??_main^(0+128)+1),f
  1691  013F  293C               	goto	u5727
  1692  0140  0BCB               	decfsz	(??_main^(0+128)+2),f
  1693  0141  293C               	goto	u5727
  1694  0142                     l3629:
  1695                           
  1696                           ;main_master.c: 117:        PORTCbits.RC2 = 0;
  1697  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1698  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1699  0144  1107               	bcf	7,2	;volatile
  1700  0145                     l3631:
  1701                           
  1702                           ;main_master.c: 118:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1703  0145  3003               	movlw	3
  1704  0146  1683               	bsf	3,5	;RP0=1, select bank1
  1705  0147  1303               	bcf	3,6	;RP1=0, select bank1
  1706  0148  00CA               	movwf	(??_main^(0+128)+1)
  1707  0149  3097               	movlw	151
  1708  014A  00C9               	movwf	??_main^(0+128)
  1709  014B                     u5737:
  1710  014B  0BC9               	decfsz	??_main^(0+128),f
  1711  014C  294B               	goto	u5737
  1712  014D  0BCA               	decfsz	(??_main^(0+128)+1),f
  1713  014E  294B               	goto	u5737
  1714  014F                     l3633:
  1715                           
  1716                           ;main_master.c: 120:        spiWrite(1);
  1717  014F  3001               	movlw	1
  1718  0150  160A  158A  21A5  120A  118A  	fcall	_spiWrite
  1719  0155                     l3635:
  1720                           
  1721                           ;main_master.c: 121:        CONT = spiRead();
  1722  0155  160A  118A  2000  120A  118A  	fcall	_spiRead
  1723  015A  1683               	bsf	3,5	;RP0=1, select bank1
  1724  015B  1303               	bcf	3,6	;RP1=0, select bank1
  1725  015C  00C9               	movwf	??_main^(0+128)
  1726  015D  0849               	movf	??_main^(0+128),w
  1727  015E  00D2               	movwf	_CONT^(0+128)
  1728  015F                     l3637:
  1729                           
  1730                           ;main_master.c: 124:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1731  015F  3003               	movlw	3
  1732  0160  1683               	bsf	3,5	;RP0=1, select bank1
  1733  0161  1303               	bcf	3,6	;RP1=0, select bank1
  1734  0162  00CA               	movwf	(??_main^(0+128)+1)
  1735  0163  3097               	movlw	151
  1736  0164  00C9               	movwf	??_main^(0+128)
  1737  0165                     u5747:
  1738  0165  0BC9               	decfsz	??_main^(0+128),f
  1739  0166  2965               	goto	u5747
  1740  0167  0BCA               	decfsz	(??_main^(0+128)+1),f
  1741  0168  2965               	goto	u5747
  1742  0169                     l3639:
  1743                           
  1744                           ;main_master.c: 125:        PORTCbits.RC2 = 1;
  1745  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1746  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1747  016B  1507               	bsf	7,2	;volatile
  1748  016C                     l3641:
  1749                           
  1750                           ;main_master.c: 127:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1751  016C  3003               	movlw	3
  1752  016D  1683               	bsf	3,5	;RP0=1, select bank1
  1753  016E  1303               	bcf	3,6	;RP1=0, select bank1
  1754  016F  00CA               	movwf	(??_main^(0+128)+1)
  1755  0170  3097               	movlw	151
  1756  0171  00C9               	movwf	??_main^(0+128)
  1757  0172                     u5757:
  1758  0172  0BC9               	decfsz	??_main^(0+128),f
  1759  0173  2972               	goto	u5757
  1760  0174  0BCA               	decfsz	(??_main^(0+128)+1),f
  1761  0175  2972               	goto	u5757
  1762  0176                     l3643:
  1763                           
  1764                           ;main_master.c: 129:        PORTCbits.RC1 = 0;
  1765  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1766  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1767  0178  1087               	bcf	7,1	;volatile
  1768  0179                     l3645:
  1769                           
  1770                           ;main_master.c: 130:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1771  0179  3003               	movlw	3
  1772  017A  1683               	bsf	3,5	;RP0=1, select bank1
  1773  017B  1303               	bcf	3,6	;RP1=0, select bank1
  1774  017C  00CA               	movwf	(??_main^(0+128)+1)
  1775  017D  3097               	movlw	151
  1776  017E  00C9               	movwf	??_main^(0+128)
  1777  017F                     u5767:
  1778  017F  0BC9               	decfsz	??_main^(0+128),f
  1779  0180  297F               	goto	u5767
  1780  0181  0BCA               	decfsz	(??_main^(0+128)+1),f
  1781  0182  297F               	goto	u5767
  1782  0183                     l3647:
  1783                           
  1784                           ;main_master.c: 132:        spiWrite(1);
  1785  0183  3001               	movlw	1
  1786  0184  160A  158A  21A5  120A  118A  	fcall	_spiWrite
  1787  0189                     l3649:
  1788                           
  1789                           ;main_master.c: 133:        ADC = spiRead();
  1790  0189  160A  118A  2000  120A  118A  	fcall	_spiRead
  1791  018E  1683               	bsf	3,5	;RP0=1, select bank1
  1792  018F  1303               	bcf	3,6	;RP1=0, select bank1
  1793  0190  00C9               	movwf	??_main^(0+128)
  1794  0191  0849               	movf	??_main^(0+128),w
  1795  0192  00D3               	movwf	_ADC^(0+128)
  1796  0193                     l3651:
  1797                           
  1798                           ;main_master.c: 136:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1799  0193  3003               	movlw	3
  1800  0194  1683               	bsf	3,5	;RP0=1, select bank1
  1801  0195  1303               	bcf	3,6	;RP1=0, select bank1
  1802  0196  00CA               	movwf	(??_main^(0+128)+1)
  1803  0197  3097               	movlw	151
  1804  0198  00C9               	movwf	??_main^(0+128)
  1805  0199                     u5777:
  1806  0199  0BC9               	decfsz	??_main^(0+128),f
  1807  019A  2999               	goto	u5777
  1808  019B  0BCA               	decfsz	(??_main^(0+128)+1),f
  1809  019C  2999               	goto	u5777
  1810  019D                     l3653:
  1811                           
  1812                           ;main_master.c: 137:        PORTCbits.RC1 = 1;
  1813  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1814  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1815  019F  1487               	bsf	7,1	;volatile
  1816  01A0                     l3655:
  1817                           
  1818                           ;main_master.c: 138:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1819  01A0  3003               	movlw	3
  1820  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  1821  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  1822  01A3  00CA               	movwf	(??_main^(0+128)+1)
  1823  01A4  3097               	movlw	151
  1824  01A5  00C9               	movwf	??_main^(0+128)
  1825  01A6                     u5787:
  1826  01A6  0BC9               	decfsz	??_main^(0+128),f
  1827  01A7  29A6               	goto	u5787
  1828  01A8  0BCA               	decfsz	(??_main^(0+128)+1),f
  1829  01A9  29A6               	goto	u5787
  1830  01AA                     l3657:
  1831                           
  1832                           ;main_master.c: 142:        PORTCbits.RC0 = 0;
  1833  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1834  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1835  01AC  1007               	bcf	7,0	;volatile
  1836  01AD                     l3659:
  1837                           
  1838                           ;main_master.c: 143:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1839  01AD  3003               	movlw	3
  1840  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  1841  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  1842  01B0  00CA               	movwf	(??_main^(0+128)+1)
  1843  01B1  3097               	movlw	151
  1844  01B2  00C9               	movwf	??_main^(0+128)
  1845  01B3                     u5797:
  1846  01B3  0BC9               	decfsz	??_main^(0+128),f
  1847  01B4  29B3               	goto	u5797
  1848  01B5  0BCA               	decfsz	(??_main^(0+128)+1),f
  1849  01B6  29B3               	goto	u5797
  1850  01B7                     l3661:
  1851                           
  1852                           ;main_master.c: 145:        spiWrite(1);
  1853  01B7  3001               	movlw	1
  1854  01B8  160A  158A  21A5  120A  118A  	fcall	_spiWrite
  1855  01BD                     l3663:
  1856                           
  1857                           ;main_master.c: 146:        TEMP = spiRead();
  1858  01BD  160A  118A  2000  120A  118A  	fcall	_spiRead
  1859  01C2  1683               	bsf	3,5	;RP0=1, select bank1
  1860  01C3  1303               	bcf	3,6	;RP1=0, select bank1
  1861  01C4  00C9               	movwf	??_main^(0+128)
  1862  01C5  0849               	movf	??_main^(0+128),w
  1863  01C6  00E8               	movwf	_TEMP^(0+128)
  1864  01C7                     l3665:
  1865                           
  1866                           ;main_master.c: 149:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1867  01C7  3003               	movlw	3
  1868  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  1869  01C9  1303               	bcf	3,6	;RP1=0, select bank1
  1870  01CA  00CA               	movwf	(??_main^(0+128)+1)
  1871  01CB  3097               	movlw	151
  1872  01CC  00C9               	movwf	??_main^(0+128)
  1873  01CD                     u5807:
  1874  01CD  0BC9               	decfsz	??_main^(0+128),f
  1875  01CE  29CD               	goto	u5807
  1876  01CF  0BCA               	decfsz	(??_main^(0+128)+1),f
  1877  01D0  29CD               	goto	u5807
  1878  01D1                     l3667:
  1879                           
  1880                           ;main_master.c: 150:        PORTCbits.RC0 = 1;
  1881  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  1882  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  1883  01D3  1407               	bsf	7,0	;volatile
  1884  01D4                     l3669:
  1885                           
  1886                           ;main_master.c: 152:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1887  01D4  3003               	movlw	3
  1888  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  1889  01D6  1303               	bcf	3,6	;RP1=0, select bank1
  1890  01D7  00CA               	movwf	(??_main^(0+128)+1)
  1891  01D8  3097               	movlw	151
  1892  01D9  00C9               	movwf	??_main^(0+128)
  1893  01DA                     u5817:
  1894  01DA  0BC9               	decfsz	??_main^(0+128),f
  1895  01DB  29DA               	goto	u5817
  1896  01DC  0BCA               	decfsz	(??_main^(0+128)+1),f
  1897  01DD  29DA               	goto	u5817
  1898  01DE  287D               	goto	l3601
  1899  01DF  120A  118A  2800   	ljmp	start
  1900  01E2                     __end_of_main:
  1901                           
  1902                           	psect	text1
  1903  153E                     __ptext1:	
  1904 ;; *************** function _sprintf *****************
  1905 ;; Defined at:
  1906 ;;		line 505 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  sp              1    wreg     PTR unsigned char 
  1909 ;;		 -> pantalla(20), 
  1910 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1911 ;;		 -> STR_2(17), 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  sp              1   37[BANK1 ] PTR unsigned char 
  1914 ;;		 -> pantalla(20), 
  1915 ;;  fval            4   33[BANK1 ] PTR unsigned char 
  1916 ;;  val             4   27[BANK1 ] unsigned long 
  1917 ;;  tmpval          4   23[BANK1 ] struct .
  1918 ;;  prec            2   38[BANK1 ] int 
  1919 ;;  eexp            2   31[BANK1 ] int 
  1920 ;;  width           2   21[BANK1 ] int 
  1921 ;;  flag            2   19[BANK1 ] unsigned short 
  1922 ;;  cp              2    0        PTR const unsigned char 
  1923 ;;  len             2    0        unsigned int 
  1924 ;;  c               1   40[BANK1 ] unsigned char 
  1925 ;;  ap              1   18[BANK1 ] PTR void [1]
  1926 ;;		 -> ?_sprintf(2), 
  1927 ;;  d               1    0        unsigned char 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  2    0[BANK1 ] int 
  1930 ;; Registers used:
  1931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1937 ;;      Params:         0       0       9       0       0
  1938 ;;      Locals:         0       0      27       0       0
  1939 ;;      Temps:          0       0       5       0       0
  1940 ;;      Totals:         0       0      41       0       0
  1941 ;;Total ram usage:       41 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    3
  1944 ;; This function calls:
  1945 ;;		___awdiv
  1946 ;;		___fladd
  1947 ;;		___fleq
  1948 ;;		___flge
  1949 ;;		___flmul
  1950 ;;		___flneg
  1951 ;;		___flsub
  1952 ;;		___fltol
  1953 ;;		___lldiv
  1954 ;;		___llmod
  1955 ;;		___wmul
  1956 ;;		___xxtofl
  1957 ;;		__div_to_l_
  1958 ;;		__tdiv_to_l_
  1959 ;;		_fround
  1960 ;;		_isdigit
  1961 ;;		_scale
  1962 ;; This function is called by:
  1963 ;;		_main
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           
  1968                           ;psect for function _sprintf
  1969  153E                     _sprintf:
  1970                           
  1971                           ;incstack = 0
  1972                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1973                           ;sprintf@sp stored from wreg
  1974  153E  1683               	bsf	3,5	;RP0=1, select bank1
  1975  153F  1303               	bcf	3,6	;RP1=0, select bank1
  1976  1540  00C5               	movwf	sprintf@sp^(0+128)
  1977  1541                     l3281:
  1978                           
  1979                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const c
      +                          har * f, ...);D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 506: {;D:\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\Microchip\xc8\v2.31\pi
      +                          c\sources\c90\common\doprnt.c: 512:  char c;;D:\Microchip\xc8\v2.31\pic\sources\c90\comm
      +                          on\doprnt.c: 514:  int width;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 51
      +                          7:  int prec;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsigned sho
      +                          rt flag;
  1980  1541  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1981  1542  00A9               	movwf	??_sprintf^(0+128)
  1982  1543  0829               	movf	??_sprintf^(0+128),w
  1983  1544  00B2               	movwf	sprintf@ap^(0+128)
  1984  1545                     L1:
  1985                           
  1986                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1987  1545  120A  118A  2FCF   	goto	l3563
  1988  1548                     l3283:
  1989                           
  1990                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  1991  1548  3025               	movlw	37
  1992  1549  0648               	xorwf	sprintf@c^(0+128),w
  1993  154A  1903               	btfsc	3,2
  1994  154B  2D4D               	goto	u5141
  1995  154C  2D4E               	goto	u5140
  1996  154D                     u5141:
  1997  154D  2D5A               	goto	l3289
  1998  154E                     u5140:
  1999  154E                     l3285:
  2000                           
  2001                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;D:\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2002  154E  0848               	movf	sprintf@c^(0+128),w
  2003  154F  00A9               	movwf	??_sprintf^(0+128)
  2004  1550  0845               	movf	sprintf@sp^(0+128),w
  2005  1551  0084               	movwf	4
  2006  1552  0829               	movf	??_sprintf^(0+128),w
  2007  1553  1383               	bcf	3,7	;select IRP bank0
  2008  1554  0080               	movwf	0
  2009  1555                     l3287:
  2010  1555  3001               	movlw	1
  2011  1556  00A9               	movwf	??_sprintf^(0+128)
  2012  1557  0829               	movf	??_sprintf^(0+128),w
  2013  1558  07C5               	addwf	sprintf@sp^(0+128),f
  2014                           
  2015                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2016  1559  2D45               	goto	L1
  2017  155A                     l3289:
  2018                           
  2019                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2020  155A  01B5               	clrf	sprintf@width^(0+128)
  2021  155B  01B6               	clrf	(sprintf@width+1)^(0+128)
  2022                           
  2023                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2024  155C  01B3               	clrf	sprintf@flag^(0+128)
  2025  155D  01B4               	clrf	(sprintf@flag+1)^(0+128)
  2026  155E                     l3291:
  2027                           
  2028                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit((unsigned)*f)
      +                          ) {
  2029  155E  0820               	movf	sprintf@f^(0+128),w
  2030  155F  0084               	movwf	4
  2031  1560  120A  158A  200A  160A  118A  	fcall	stringdir
  2032  1565  160A  158A  21F4  160A  118A  	fcall	_isdigit
  2033  156A  1C03               	btfss	3,0
  2034  156B  2D6D               	goto	u5151
  2035  156C  2D6E               	goto	u5150
  2036  156D                     u5151:
  2037  156D  2DAE               	goto	l3303
  2038  156E                     u5150:
  2039  156E                     l3293:
  2040                           
  2041                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0;
  2042  156E  1683               	bsf	3,5	;RP0=1, select bank1
  2043  156F  1303               	bcf	3,6	;RP1=0, select bank1
  2044  1570  01B5               	clrf	sprintf@width^(0+128)
  2045  1571  01B6               	clrf	(sprintf@width+1)^(0+128)
  2046  1572                     l3295:
  2047                           
  2048                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *= 10;
  2049  1572  300A               	movlw	10
  2050  1573  00F0               	movwf	___wmul@multiplier
  2051  1574  3000               	movlw	0
  2052  1575  00F1               	movwf	___wmul@multiplier+1
  2053  1576  1683               	bsf	3,5	;RP0=1, select bank1
  2054  1577  1303               	bcf	3,6	;RP1=0, select bank1
  2055  1578  0836               	movf	(sprintf@width+1)^(0+128),w
  2056  1579  00F3               	movwf	___wmul@multiplicand+1
  2057  157A  0835               	movf	sprintf@width^(0+128),w
  2058  157B  00F2               	movwf	___wmul@multiplicand
  2059  157C  160A  158A  22BF  160A  118A  	fcall	___wmul
  2060  1581  0871               	movf	?___wmul+1,w
  2061  1582  1683               	bsf	3,5	;RP0=1, select bank1
  2062  1583  1303               	bcf	3,6	;RP1=0, select bank1
  2063  1584  00B6               	movwf	(sprintf@width+1)^(0+128)
  2064  1585  0870               	movf	?___wmul,w
  2065  1586  00B5               	movwf	sprintf@width^(0+128)
  2066  1587                     l3297:
  2067                           
  2068                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width += *f++ - '0'
      +                          ;
  2069  1587  0820               	movf	sprintf@f^(0+128),w
  2070  1588  0084               	movwf	4
  2071  1589  120A  158A  200A  160A  118A  	fcall	stringdir
  2072  158E  3ED0               	addlw	208
  2073  158F  00A9               	movwf	??_sprintf^(0+128)
  2074  1590  30FF               	movlw	255
  2075  1591  1803               	skipnc
  2076  1592  3000               	movlw	0
  2077  1593  00AA               	movwf	(??_sprintf^(0+128)+1)
  2078  1594  0829               	movf	??_sprintf^(0+128),w
  2079  1595  07B5               	addwf	sprintf@width^(0+128),f
  2080  1596  1803               	skipnc
  2081  1597  0AB6               	incf	(sprintf@width+1)^(0+128),f
  2082  1598  082A               	movf	(??_sprintf+1)^(0+128),w
  2083  1599  07B6               	addwf	(sprintf@width+1)^(0+128),f
  2084  159A                     l3299:
  2085  159A  3001               	movlw	1
  2086  159B  00A9               	movwf	??_sprintf^(0+128)
  2087  159C  0829               	movf	??_sprintf^(0+128),w
  2088  159D  07A0               	addwf	sprintf@f^(0+128),f
  2089  159E                     l3301:
  2090                           
  2091                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(isdigit((unsign
      +                          ed)*f));
  2092  159E  0820               	movf	sprintf@f^(0+128),w
  2093  159F  0084               	movwf	4
  2094  15A0  120A  158A  200A  160A  118A  	fcall	stringdir
  2095  15A5  160A  158A  21F4  160A  118A  	fcall	_isdigit
  2096  15AA  1803               	btfsc	3,0
  2097  15AB  2DAD               	goto	u5161
  2098  15AC  2DAE               	goto	u5160
  2099  15AD                     u5161:
  2100  15AD  2D72               	goto	l3295
  2101  15AE                     u5160:
  2102  15AE                     l3303:
  2103                           
  2104                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '.') {
  2105  15AE  1683               	bsf	3,5	;RP0=1, select bank1
  2106  15AF  1303               	bcf	3,6	;RP1=0, select bank1
  2107  15B0  0820               	movf	sprintf@f^(0+128),w
  2108  15B1  0084               	movwf	4
  2109  15B2  120A  158A  200A  160A  118A  	fcall	stringdir
  2110  15B7  3A2E               	xorlw	46
  2111  15B8  1D03               	skipz
  2112  15B9  2DBB               	goto	u5171
  2113  15BA  2DBC               	goto	u5170
  2114  15BB                     u5171:
  2115  15BB  2E01               	goto	l3319
  2116  15BC                     u5170:
  2117  15BC                     l3305:
  2118                           
  2119                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0x4000;
  2120  15BC  1734               	bsf	(sprintf@flag^(0+128)+1),6
  2121  15BD                     l3307:
  2122                           
  2123                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2124  15BD  3001               	movlw	1
  2125  15BE  00A9               	movwf	??_sprintf^(0+128)
  2126  15BF  0829               	movf	??_sprintf^(0+128),w
  2127  15C0  07A0               	addwf	sprintf@f^(0+128),f
  2128  15C1                     l3309:
  2129                           
  2130                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2131  15C1  01C6               	clrf	sprintf@prec^(0+128)
  2132  15C2  01C7               	clrf	(sprintf@prec+1)^(0+128)
  2133                           
  2134                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigne
      +                          d)*f)) {
  2135  15C3  2DF0               	goto	l3317
  2136  15C4                     l3311:
  2137                           
  2138                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *= 10;
  2139  15C4  300A               	movlw	10
  2140  15C5  00F0               	movwf	___wmul@multiplier
  2141  15C6  3000               	movlw	0
  2142  15C7  00F1               	movwf	___wmul@multiplier+1
  2143  15C8  1683               	bsf	3,5	;RP0=1, select bank1
  2144  15C9  1303               	bcf	3,6	;RP1=0, select bank1
  2145  15CA  0847               	movf	(sprintf@prec+1)^(0+128),w
  2146  15CB  00F3               	movwf	___wmul@multiplicand+1
  2147  15CC  0846               	movf	sprintf@prec^(0+128),w
  2148  15CD  00F2               	movwf	___wmul@multiplicand
  2149  15CE  160A  158A  22BF  160A  118A  	fcall	___wmul
  2150  15D3  0871               	movf	?___wmul+1,w
  2151  15D4  1683               	bsf	3,5	;RP0=1, select bank1
  2152  15D5  1303               	bcf	3,6	;RP1=0, select bank1
  2153  15D6  00C7               	movwf	(sprintf@prec+1)^(0+128)
  2154  15D7  0870               	movf	?___wmul,w
  2155  15D8  00C6               	movwf	sprintf@prec^(0+128)
  2156  15D9                     l3313:
  2157                           
  2158                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec += *f++ - '0'
      +                          ;
  2159  15D9  0820               	movf	sprintf@f^(0+128),w
  2160  15DA  0084               	movwf	4
  2161  15DB  120A  158A  200A  160A  118A  	fcall	stringdir
  2162  15E0  3ED0               	addlw	208
  2163  15E1  00A9               	movwf	??_sprintf^(0+128)
  2164  15E2  30FF               	movlw	255
  2165  15E3  1803               	skipnc
  2166  15E4  3000               	movlw	0
  2167  15E5  00AA               	movwf	(??_sprintf^(0+128)+1)
  2168  15E6  0829               	movf	??_sprintf^(0+128),w
  2169  15E7  07C6               	addwf	sprintf@prec^(0+128),f
  2170  15E8  1803               	skipnc
  2171  15E9  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  2172  15EA  082A               	movf	(??_sprintf+1)^(0+128),w
  2173  15EB  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  2174  15EC                     l3315:
  2175  15EC  3001               	movlw	1
  2176  15ED  00A9               	movwf	??_sprintf^(0+128)
  2177  15EE  0829               	movf	??_sprintf^(0+128),w
  2178  15EF  07A0               	addwf	sprintf@f^(0+128),f
  2179  15F0                     l3317:
  2180                           
  2181                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigne
      +                          d)*f)) {
  2182  15F0  0820               	movf	sprintf@f^(0+128),w
  2183  15F1  0084               	movwf	4
  2184  15F2  120A  158A  200A  160A  118A  	fcall	stringdir
  2185  15F7  160A  158A  21F4  160A  118A  	fcall	_isdigit
  2186  15FC  1803               	btfsc	3,0
  2187  15FD  2DFF               	goto	u5181
  2188  15FE  2E00               	goto	u5180
  2189  15FF                     u5181:
  2190  15FF  2DC4               	goto	l3311
  2191  1600                     u5180:
  2192  1600  2E07               	goto	l3325
  2193  1601                     l3319:
  2194                           
  2195                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2196  1601  01C6               	clrf	sprintf@prec^(0+128)
  2197  1602  01C7               	clrf	(sprintf@prec+1)^(0+128)
  2198  1603                     l3321:
  2199                           
  2200                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0x1000;
  2201  1603  1634               	bsf	(sprintf@flag^(0+128)+1),4
  2202  1604  2E07               	goto	l3325
  2203  1605                     l330:	
  2204                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2205                           
  2206                           
  2207                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0x400;
  2208  1605  1534               	bsf	(sprintf@flag^(0+128)+1),2
  2209                           
  2210                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2211  1606  2E29               	goto	l3327
  2212  1607                     l3325:
  2213  1607  3001               	movlw	1
  2214  1608  1683               	bsf	3,5	;RP0=1, select bank1
  2215  1609  1303               	bcf	3,6	;RP1=0, select bank1
  2216  160A  07A0               	addwf	sprintf@f^(0+128),f
  2217  160B  30FF               	movlw	-1
  2218  160C  0720               	addwf	sprintf@f^(0+128),w
  2219  160D  0084               	movwf	4
  2220  160E  120A  158A  200A  160A  118A  	fcall	stringdir
  2221  1613  00C8               	movwf	sprintf@c^(0+128)
  2222  1614  00A9               	movwf	??_sprintf^(0+128)
  2223  1615  01AA               	clrf	(??_sprintf^(0+128)+1)
  2224                           
  2225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2226                           ; Switch size 1, requested type "simple"
  2227                           ; Number of cases is 1, Range of values is 0 to 0
  2228                           ; switch strategies available:
  2229                           ; Name         Instructions Cycles
  2230                           ; simple_byte            4     3 (average)
  2231                           ; direct_byte           11     8 (fixed)
  2232                           ; jumptable            260     6 (fixed)
  2233                           ;	Chosen strategy is simple_byte
  2234  1616  082A               	movf	(??_sprintf+1)^(0+128),w
  2235  1617  3A00               	xorlw	0	; case 0
  2236  1618  1903               	skipnz
  2237  1619  2E1B               	goto	l3701
  2238  161A  2D45               	goto	L1
  2239  161B                     l3701:
  2240                           
  2241                           ; Switch size 1, requested type "simple"
  2242                           ; Number of cases is 4, Range of values is 0 to 105
  2243                           ; switch strategies available:
  2244                           ; Name         Instructions Cycles
  2245                           ; simple_byte           13     7 (average)
  2246                           ; jumptable            260     6 (fixed)
  2247                           ;	Chosen strategy is simple_byte
  2248  161B  0829               	movf	??_sprintf^(0+128),w
  2249  161C  3A00               	xorlw	0	; case 0
  2250  161D  1903               	skipnz
  2251  161E  2FFD               	goto	L3
  2252  161F  3A64               	xorlw	100	; case 100
  2253  1620  1903               	skipnz
  2254  1621  2E29               	goto	l3327
  2255  1622  3A02               	xorlw	2	; case 102
  2256  1623  1903               	skipnz
  2257  1624  2E05               	goto	l330
  2258  1625  3A0F               	xorlw	15	; case 105
  2259  1626  1903               	skipnz
  2260  1627  2E29               	goto	l3327
  2261  1628  2D45               	goto	L1
  2262  1629                     l3327:
  2263                           
  2264                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & (0x700)) {
  2265  1629  3000               	movlw	0
  2266  162A  0533               	andwf	sprintf@flag^(0+128),w
  2267  162B  00A9               	movwf	??_sprintf^(0+128)
  2268  162C  3007               	movlw	7
  2269  162D  0534               	andwf	(sprintf@flag+1)^(0+128),w
  2270  162E  00AA               	movwf	(??_sprintf+1)^(0+128)
  2271  162F  0829               	movf	??_sprintf^(0+128),w
  2272  1630  042A               	iorwf	(??_sprintf^(0+128)+1),w
  2273  1631  1903               	btfsc	3,2
  2274  1632  2E34               	goto	u5191
  2275  1633  2E37               	goto	u5190
  2276  1634                     u5191:
  2277  1634  120A  118A  2E32   	goto	l3485
  2278  1637                     u5190:
  2279  1637                     l3329:
  2280                           
  2281                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag & 0x1000)
  2282  1637  1E34               	btfss	(sprintf@flag+1)^(0+128),4
  2283  1638  2E3A               	goto	u5201
  2284  1639  2E3B               	goto	u5200
  2285  163A                     u5201:
  2286  163A  2E3F               	goto	l3333
  2287  163B                     u5200:
  2288  163B                     l3331:
  2289                           
  2290                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6;
  2291  163B  3006               	movlw	6
  2292  163C  00C6               	movwf	sprintf@prec^(0+128)
  2293  163D  3000               	movlw	0
  2294  163E  00C7               	movwf	(sprintf@prec^(0+128)+1)
  2295  163F                     l3333:
  2296                           
  2297                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*(double *)__va
      +                          _arg((*(double **)ap), (double)0));
  2298  163F  0832               	movf	sprintf@ap^(0+128),w
  2299  1640  0084               	movwf	4
  2300  1641  1383               	bcf	3,7	;select IRP bank0
  2301  1642  0800               	movf	0,w
  2302  1643  00C1               	movwf	sprintf@fval^(0+128)
  2303  1644  0A84               	incf	4,f
  2304  1645  0800               	movf	0,w
  2305  1646  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2306  1647  0A84               	incf	4,f
  2307  1648  0800               	movf	0,w
  2308  1649  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2309  164A  0A84               	incf	4,f
  2310  164B  0800               	movf	0,w
  2311  164C  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2312  164D                     l3335:
  2313  164D  3004               	movlw	4
  2314  164E  00A9               	movwf	??_sprintf^(0+128)
  2315  164F  0829               	movf	??_sprintf^(0+128),w
  2316  1650  07B2               	addwf	sprintf@ap^(0+128),f
  2317  1651                     l3337:
  2318                           
  2319                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval < 0.0) {
  2320  1651  0844               	movf	(sprintf@fval+3)^(0+128),w
  2321  1652  00F3               	movwf	___flge@ff1+3
  2322  1653  0843               	movf	(sprintf@fval+2)^(0+128),w
  2323  1654  00F2               	movwf	___flge@ff1+2
  2324  1655  0842               	movf	(sprintf@fval+1)^(0+128),w
  2325  1656  00F1               	movwf	___flge@ff1+1
  2326  1657  0841               	movf	sprintf@fval^(0+128),w
  2327  1658  00F0               	movwf	___flge@ff1
  2328  1659  3000               	movlw	0
  2329  165A  00F7               	movwf	___flge@ff2+3
  2330  165B  3000               	movlw	0
  2331  165C  00F6               	movwf	___flge@ff2+2
  2332  165D  3000               	movlw	0
  2333  165E  00F5               	movwf	___flge@ff2+1
  2334  165F  3000               	movlw	0
  2335  1660  00F4               	movwf	___flge@ff2
  2336  1661  160A  118A  2009  160A  118A  	fcall	___flge
  2337  1666  1803               	btfsc	3,0
  2338  1667  2E69               	goto	u5211
  2339  1668  2E6A               	goto	u5210
  2340  1669                     u5211:
  2341  1669  2E87               	goto	l3343
  2342  166A                     u5210:
  2343  166A                     l3339:
  2344                           
  2345                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -fval;
  2346  166A  1683               	bsf	3,5	;RP0=1, select bank1
  2347  166B  1303               	bcf	3,6	;RP1=0, select bank1
  2348  166C  0844               	movf	(sprintf@fval+3)^(0+128),w
  2349  166D  00F3               	movwf	___flneg@f1+3
  2350  166E  0843               	movf	(sprintf@fval+2)^(0+128),w
  2351  166F  00F2               	movwf	___flneg@f1+2
  2352  1670  0842               	movf	(sprintf@fval+1)^(0+128),w
  2353  1671  00F1               	movwf	___flneg@f1+1
  2354  1672  0841               	movf	sprintf@fval^(0+128),w
  2355  1673  00F0               	movwf	___flneg@f1
  2356  1674  160A  158A  21C2  160A  118A  	fcall	___flneg
  2357  1679  0873               	movf	?___flneg+3,w
  2358  167A  1683               	bsf	3,5	;RP0=1, select bank1
  2359  167B  1303               	bcf	3,6	;RP1=0, select bank1
  2360  167C  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2361  167D  0872               	movf	?___flneg+2,w
  2362  167E  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2363  167F  0871               	movf	?___flneg+1,w
  2364  1680  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2365  1681  0870               	movf	?___flneg,w
  2366  1682  00C1               	movwf	sprintf@fval^(0+128)
  2367  1683                     l3341:
  2368                           
  2369                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 0x03;
  2370  1683  3003               	movlw	3
  2371  1684  04B3               	iorwf	sprintf@flag^(0+128),f
  2372  1685  3000               	movlw	0
  2373  1686  04B4               	iorwf	(sprintf@flag+1)^(0+128),f
  2374  1687                     l3343:
  2375                           
  2376                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2377  1687  1683               	bsf	3,5	;RP0=1, select bank1
  2378  1688  1303               	bcf	3,6	;RP1=0, select bank1
  2379  1689  01BF               	clrf	sprintf@eexp^(0+128)
  2380  168A  01C0               	clrf	(sprintf@eexp+1)^(0+128)
  2381  168B                     l3345:
  2382                           
  2383                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!=0) {
  2384  168B  0844               	movf	(sprintf@fval+3)^(0+128),w
  2385  168C  00F3               	movwf	___fleq@ff1+3
  2386  168D  0843               	movf	(sprintf@fval+2)^(0+128),w
  2387  168E  00F2               	movwf	___fleq@ff1+2
  2388  168F  0842               	movf	(sprintf@fval+1)^(0+128),w
  2389  1690  00F1               	movwf	___fleq@ff1+1
  2390  1691  0841               	movf	sprintf@fval^(0+128),w
  2391  1692  00F0               	movwf	___fleq@ff1
  2392  1693  3000               	movlw	0
  2393  1694  00F7               	movwf	___fleq@ff2+3
  2394  1695  3000               	movlw	0
  2395  1696  00F6               	movwf	___fleq@ff2+2
  2396  1697  3000               	movlw	0
  2397  1698  00F5               	movwf	___fleq@ff2+1
  2398  1699  3000               	movlw	0
  2399  169A  00F4               	movwf	___fleq@ff2
  2400  169B  160A  158A  23F6  160A  118A  	fcall	___fleq
  2401  16A0  1803               	btfsc	3,0
  2402  16A1  2EA3               	goto	u5221
  2403  16A2  2EA4               	goto	u5220
  2404  16A3                     u5221:
  2405  16A3  2F94               	goto	l3371
  2406  16A4                     u5220:
  2407  16A4                     l3347:
  2408                           
  2409                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*(&eexp) = (uns
      +                          igned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2410  16A4  1003               	clrc
  2411  16A5  1683               	bsf	3,5	;RP0=1, select bank1
  2412  16A6  1303               	bcf	3,6	;RP1=0, select bank1
  2413  16A7  0D43               	rlf	(sprintf@fval+2)^(0+128),w
  2414  16A8  0D44               	rlf	(sprintf@fval+3)^(0+128),w
  2415  16A9  3E82               	addlw	130
  2416  16AA  00BF               	movwf	sprintf@eexp^(0+128)
  2417  16AB  30FF               	movlw	255
  2418  16AC  1803               	skipnc
  2419  16AD  3000               	movlw	0
  2420  16AE  00C0               	movwf	(sprintf@eexp^(0+128)+1)
  2421  16AF                     l3349:
  2422                           
  2423                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2424  16AF  30FF               	movlw	255
  2425  16B0  07BF               	addwf	sprintf@eexp^(0+128),f
  2426  16B1  1803               	skipnc
  2427  16B2  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2428  16B3  30FF               	movlw	255
  2429  16B4  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2430  16B5                     l3351:
  2431                           
  2432                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 3;
  2433  16B5  3003               	movlw	3
  2434  16B6  00F0               	movwf	___wmul@multiplier
  2435  16B7  3000               	movlw	0
  2436  16B8  00F1               	movwf	___wmul@multiplier+1
  2437  16B9  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2438  16BA  00F3               	movwf	___wmul@multiplicand+1
  2439  16BB  083F               	movf	sprintf@eexp^(0+128),w
  2440  16BC  00F2               	movwf	___wmul@multiplicand
  2441  16BD  160A  158A  22BF  160A  118A  	fcall	___wmul
  2442  16C2  0871               	movf	?___wmul+1,w
  2443  16C3  1683               	bsf	3,5	;RP0=1, select bank1
  2444  16C4  1303               	bcf	3,6	;RP1=0, select bank1
  2445  16C5  00C0               	movwf	(sprintf@eexp+1)^(0+128)
  2446  16C6  0870               	movf	?___wmul,w
  2447  16C7  00BF               	movwf	sprintf@eexp^(0+128)
  2448  16C8                     l3353:
  2449                           
  2450                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 10;
  2451  16C8  300A               	movlw	10
  2452  16C9  00F7               	movwf	___awdiv@divisor
  2453  16CA  3000               	movlw	0
  2454  16CB  00F8               	movwf	___awdiv@divisor+1
  2455  16CC  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2456  16CD  00FA               	movwf	___awdiv@dividend+1
  2457  16CE  083F               	movf	sprintf@eexp^(0+128),w
  2458  16CF  00F9               	movwf	___awdiv@dividend
  2459  16D0  120A  158A  20D7  160A  118A  	fcall	___awdiv
  2460  16D5  0878               	movf	?___awdiv+1,w
  2461  16D6  1683               	bsf	3,5	;RP0=1, select bank1
  2462  16D7  1303               	bcf	3,6	;RP1=0, select bank1
  2463  16D8  00C0               	movwf	(sprintf@eexp+1)^(0+128)
  2464  16D9  0877               	movf	?___awdiv,w
  2465  16DA  00BF               	movwf	sprintf@eexp^(0+128)
  2466  16DB                     l3355:
  2467                           
  2468                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp < 0)
  2469  16DB  1FC0               	btfss	(sprintf@eexp+1)^(0+128),7
  2470  16DC  2EDE               	goto	u5231
  2471  16DD  2EDF               	goto	u5230
  2472  16DE                     u5231:
  2473  16DE  2EE5               	goto	l3359
  2474  16DF                     u5230:
  2475  16DF                     l3357:
  2476                           
  2477                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2478  16DF  30FF               	movlw	255
  2479  16E0  07BF               	addwf	sprintf@eexp^(0+128),f
  2480  16E1  1803               	skipnc
  2481  16E2  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2482  16E3  30FF               	movlw	255
  2483  16E4  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2484  16E5                     l3359:
  2485                           
  2486                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.integ = scale(-
      +                          eexp);
  2487  16E5  033F               	decf	sprintf@eexp^(0+128),w
  2488  16E6  3AFF               	xorlw	255
  2489  16E7  120A  158A  2140  160A  118A  	fcall	_scale
  2490  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2491  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2492  16EE  0841               	movf	?_scale+3,w
  2493  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2494  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2495  16F1  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2496  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2497  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2498  16F4  0840               	movf	?_scale+2,w
  2499  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2500  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2501  16F7  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2502  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2503  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2504  16FA  083F               	movf	?_scale+1,w
  2505  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2506  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2507  16FD  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2508  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2509  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2510  1700  083E               	movf	?_scale,w
  2511  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2512  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2513  1703  00B7               	movwf	sprintf@tmpval^(0+128)
  2514  1704                     l3361:
  2515                           
  2516                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.integ *= fval;
  2517  1704  0844               	movf	(sprintf@fval+3)^(0+128),w
  2518  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2519  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2520  1707  00A7               	movwf	___flmul@b+3
  2521  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2522  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2523  170A  0843               	movf	(sprintf@fval+2)^(0+128),w
  2524  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2525  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2526  170D  00A6               	movwf	___flmul@b+2
  2527  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2528  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2529  1710  0842               	movf	(sprintf@fval+1)^(0+128),w
  2530  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2531  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2532  1713  00A5               	movwf	___flmul@b+1
  2533  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2534  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2535  1716  0841               	movf	sprintf@fval^(0+128),w
  2536  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2537  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2538  1719  00A4               	movwf	___flmul@b
  2539  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2540  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2541  171C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2542  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2543  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2544  171F  00AB               	movwf	___flmul@a+3
  2545  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2546  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2547  1722  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2548  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2549  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2550  1725  00AA               	movwf	___flmul@a+2
  2551  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2552  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2553  1728  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2554  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2555  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2556  172B  00A9               	movwf	___flmul@a+1
  2557  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2558  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2559  172E  0837               	movf	sprintf@tmpval^(0+128),w
  2560  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2561  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2562  1731  00A8               	movwf	___flmul@a
  2563  1732  120A  158A  249F  160A  118A  	fcall	___flmul
  2564  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2565  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2566  1739  0827               	movf	?___flmul+3,w
  2567  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2568  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2569  173C  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2570  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2571  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2572  173F  0826               	movf	?___flmul+2,w
  2573  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2574  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2575  1742  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2576  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2577  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2578  1745  0825               	movf	?___flmul+1,w
  2579  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2580  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2581  1748  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2582  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2583  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2584  174B  0824               	movf	?___flmul,w
  2585  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2586  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2587  174E  00B7               	movwf	sprintf@tmpval^(0+128)
  2588  174F                     l3363:
  2589                           
  2590                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpval.integ < 1.0)
  2591  174F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2592  1750  00F3               	movwf	___flge@ff1+3
  2593  1751  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2594  1752  00F2               	movwf	___flge@ff1+2
  2595  1753  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2596  1754  00F1               	movwf	___flge@ff1+1
  2597  1755  0837               	movf	sprintf@tmpval^(0+128),w
  2598  1756  00F0               	movwf	___flge@ff1
  2599  1757  303F               	movlw	63
  2600  1758  00F7               	movwf	___flge@ff2+3
  2601  1759  3080               	movlw	128
  2602  175A  00F6               	movwf	___flge@ff2+2
  2603  175B  3000               	movlw	0
  2604  175C  00F5               	movwf	___flge@ff2+1
  2605  175D  3000               	movlw	0
  2606  175E  00F4               	movwf	___flge@ff2
  2607  175F  160A  118A  2009  160A  118A  	fcall	___flge
  2608  1764  1803               	btfsc	3,0
  2609  1765  2F67               	goto	u5241
  2610  1766  2F68               	goto	u5240
  2611  1767                     u5241:
  2612  1767  2F71               	goto	l3367
  2613  1768                     u5240:
  2614  1768                     l3365:
  2615                           
  2616                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2617  1768  30FF               	movlw	255
  2618  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2619  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2620  176B  07BF               	addwf	sprintf@eexp^(0+128),f
  2621  176C  1803               	skipnc
  2622  176D  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2623  176E  30FF               	movlw	255
  2624  176F  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2625  1770  2F94               	goto	l3371
  2626  1771                     l3367:
  2627  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2628  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2629  1773  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2630  1774  00F3               	movwf	___flge@ff1+3
  2631  1775  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2632  1776  00F2               	movwf	___flge@ff1+2
  2633  1777  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2634  1778  00F1               	movwf	___flge@ff1+1
  2635  1779  0837               	movf	sprintf@tmpval^(0+128),w
  2636  177A  00F0               	movwf	___flge@ff1
  2637  177B  3041               	movlw	65
  2638  177C  00F7               	movwf	___flge@ff2+3
  2639  177D  3020               	movlw	32
  2640  177E  00F6               	movwf	___flge@ff2+2
  2641  177F  3000               	movlw	0
  2642  1780  00F5               	movwf	___flge@ff2+1
  2643  1781  3000               	movlw	0
  2644  1782  00F4               	movwf	___flge@ff2
  2645  1783  160A  118A  2009  160A  118A  	fcall	___flge
  2646  1788  1C03               	btfss	3,0
  2647  1789  2F8B               	goto	u5251
  2648  178A  2F8C               	goto	u5250
  2649  178B                     u5251:
  2650  178B  2F94               	goto	l3371
  2651  178C                     u5250:
  2652  178C                     l3369:
  2653                           
  2654                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2655  178C  3001               	movlw	1
  2656  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2657  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2658  178F  07BF               	addwf	sprintf@eexp^(0+128),f
  2659  1790  1803               	skipnc
  2660  1791  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2661  1792  3000               	movlw	0
  2662  1793  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2663  1794                     l3371:
  2664                           
  2665                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(prec <= 12)
  2666  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2667  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2668  1796  0847               	movf	(sprintf@prec+1)^(0+128),w
  2669  1797  3A80               	xorlw	128
  2670  1798  00FF               	movwf	btemp+1
  2671  1799  3080               	movlw	128
  2672  179A  027F               	subwf	btemp+1,w
  2673  179B  1D03               	skipz
  2674  179C  2F9F               	goto	u5265
  2675  179D  300D               	movlw	13
  2676  179E  0246               	subwf	sprintf@prec^(0+128),w
  2677  179F                     u5265:
  2678  179F  1803               	skipnc
  2679  17A0  2FA2               	goto	u5261
  2680  17A1  2FA3               	goto	u5260
  2681  17A2                     u5261:
  2682  17A2  2FEA               	goto	l3375
  2683  17A3                     u5260:
  2684  17A3                     l3373:
  2685                           
  2686                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval += fround((uns
      +                          igned int)prec);
  2687  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2688  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2689  17A5  0846               	movf	sprintf@prec^(0+128),w
  2690  17A6  160A  118A  20AB  160A  118A  	fcall	_fround
  2691  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2692  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2693  17AD  0841               	movf	?_fround+3,w
  2694  17AE  00D5               	movwf	___fladd@b+3
  2695  17AF  0840               	movf	?_fround+2,w
  2696  17B0  00D4               	movwf	___fladd@b+2
  2697  17B1  083F               	movf	?_fround+1,w
  2698  17B2  00D3               	movwf	___fladd@b+1
  2699  17B3  083E               	movf	?_fround,w
  2700  17B4  00D2               	movwf	___fladd@b
  2701  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2702  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2703  17B7  0844               	movf	(sprintf@fval+3)^(0+128),w
  2704  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2705  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2706  17BA  00D9               	movwf	___fladd@a+3
  2707  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2708  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2709  17BD  0843               	movf	(sprintf@fval+2)^(0+128),w
  2710  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2711  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2712  17C0  00D8               	movwf	___fladd@a+2
  2713  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2714  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2715  17C3  0842               	movf	(sprintf@fval+1)^(0+128),w
  2716  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2717  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2718  17C6  00D7               	movwf	___fladd@a+1
  2719  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2720  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2721  17C9  0841               	movf	sprintf@fval^(0+128),w
  2722  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2723  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2724  17CC  00D6               	movwf	___fladd@a
  2725  17CD  160A  118A  22B6  160A  118A  	fcall	___fladd
  2726  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2727  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2728  17D4  0855               	movf	?___fladd+3,w
  2729  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2730  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2731  17D7  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2732  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2733  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2734  17DA  0854               	movf	?___fladd+2,w
  2735  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2736  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2737  17DD  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2738  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2739  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2740  17E0  0853               	movf	?___fladd+1,w
  2741  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2742  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2743  17E3  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2744  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2745  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2746  17E6  0852               	movf	?___fladd,w
  2747  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2748  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2749  17E9  00C1               	movwf	sprintf@fval^(0+128)
  2750  17EA                     l3375:
  2751                           
  2752                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eexp > 9)||(fval 
      +                          != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2753  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2754  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2755  17EC  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2756  17ED  3A80               	xorlw	128
  2757  17EE  00FF               	movwf	btemp+1
  2758  17EF  3080               	movlw	128
  2759  17F0  027F               	subwf	btemp+1,w
  2760  17F1  1D03               	skipz
  2761  17F2  2FF5               	goto	u5275
  2762  17F3  300A               	movlw	10
  2763  17F4  023F               	subwf	sprintf@eexp^(0+128),w
  2764  17F5                     u5275:
  2765  17F5  1803               	skipnc
  2766  17F6  2FFA               	goto	u5271
  2767  17F7  120A  118A  29E2   	goto	u5270
  2768  17FA                     u5271:
  2769  17FA  120A  118A  2A33   	goto	l3383
  2770  17FD                     L3:
  2771  17FD                     L2:
  2772  17FD  120A  118A  2FE3   	ljmp	l3565
  2773                           
  2774                           	psect	text2
  2775  0940                     __ptext2:	
  2776 ;; *************** function _scale *****************
  2777 ;; Defined at:
  2778 ;;		line 433 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  scl             1    wreg     char 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  scl             1   48[BANK0 ] char 
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  4   30[BANK0 ] char 
  2785 ;; Registers used:
  2786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2792 ;;      Params:         0       4       0       0       0
  2793 ;;      Locals:         0       5       0       0       0
  2794 ;;      Temps:          0      10       0       0       0
  2795 ;;      Totals:         0      19       0       0       0
  2796 ;;Total ram usage:       19 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:    2
  2799 ;; This function calls:
  2800 ;;		___awdiv
  2801 ;;		___awmod
  2802 ;;		___flmul
  2803 ;; This function is called by:
  2804 ;;		_sprintf
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           
  2809                           ;psect for function _scale
  2810  0940                     _scale:
  2811                           
  2812                           ;incstack = 0
  2813                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2814                           ;scale@scl stored from wreg
  2815  0940  1283               	bcf	3,5	;RP0=0, select bank0
  2816  0941  1303               	bcf	3,6	;RP1=0, select bank0
  2817  0942  00D0               	movwf	scale@scl
  2818  0943                     l2887:
  2819                           
  2820                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed char scl);D:\
      +                          Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;D:\Microchip\xc8\v2.31\pic\s
      +                          ources\c90\common\doprnt.c: 436:  if(scl < 0) {
  2821  0943  1FD0               	btfss	scale@scl,7
  2822  0944  2946               	goto	u4161
  2823  0945  2947               	goto	u4160
  2824  0946                     u4161:
  2825  0946  2AF4               	goto	l2909
  2826  0947                     u4160:
  2827  0947                     l2889:
  2828                           
  2829                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl;
  2830  0947  09D0               	comf	scale@scl,f
  2831  0948  0AD0               	incf	scale@scl,f
  2832  0949                     l2891:
  2833                           
  2834                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=110)
  2835  0949  0850               	movf	scale@scl,w
  2836  094A  3A80               	xorlw	128
  2837  094B  3E12               	addlw	-238
  2838  094C  1C03               	skipc
  2839  094D  294F               	goto	u4171
  2840  094E  2950               	goto	u4170
  2841  094F                     u4171:
  2842  094F  2A38               	goto	l2899
  2843  0950                     u4170:
  2844  0950                     l2893:
  2845                           
  2846                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsig
      +                          ned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigne
      +                          d char)(scl%10)];
  2847  0950  300A               	movlw	10
  2848  0951  00F7               	movwf	___awdiv@divisor
  2849  0952  3000               	movlw	0
  2850  0953  00F8               	movwf	___awdiv@divisor+1
  2851  0954  0850               	movf	scale@scl,w
  2852  0955  00F2               	movwf	___awmod@dividend
  2853  0956  01F3               	clrf	___awmod@dividend+1
  2854  0957  1BF2               	btfsc	___awmod@dividend,7
  2855  0958  03F3               	decf	___awmod@dividend+1,f
  2856  0959  3064               	movlw	100
  2857  095A  00F0               	movwf	___awmod@divisor
  2858  095B  3000               	movlw	0
  2859  095C  00F1               	movwf	___awmod@divisor+1
  2860  095D  120A  118A  2006  120A  158A  	fcall	___awmod
  2861  0962  0871               	movf	?___awmod+1,w
  2862  0963  00FA               	movwf	___awdiv@dividend+1
  2863  0964  0870               	movf	?___awmod,w
  2864  0965  00F9               	movwf	___awdiv@dividend
  2865  0966  120A  158A  20D7  120A  158A  	fcall	___awdiv
  2866  096B  0877               	movf	?___awdiv,w
  2867  096C  1283               	bcf	3,5	;RP0=0, select bank0
  2868  096D  1303               	bcf	3,6	;RP1=0, select bank0
  2869  096E  00C2               	movwf	??_scale
  2870  096F  3001               	movlw	1
  2871  0970                     u4185:
  2872  0970  1003               	clrc
  2873  0971  0DC2               	rlf	??_scale,f
  2874  0972  3EFF               	addlw	-1
  2875  0973  1D03               	skipz
  2876  0974  2970               	goto	u4185
  2877  0975  1003               	clrc
  2878  0976  0D42               	rlf	??_scale,w
  2879  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2880  0978  0084               	movwf	4
  2881  0979  120A  158A  200A  120A  158A  	fcall	stringdir
  2882  097E  00C3               	movwf	??_scale+1
  2883  097F  120A  158A  200A  120A  158A  	fcall	stringdir
  2884  0984  00C4               	movwf	??_scale+2
  2885  0985  120A  158A  200A  120A  158A  	fcall	stringdir
  2886  098A  00C5               	movwf	??_scale+3
  2887  098B  120A  158A  200A  120A  158A  	fcall	stringdir
  2888  0990  00C6               	movwf	??_scale+4
  2889  0991  0846               	movf	??_scale+4,w
  2890  0992  00A7               	movwf	___flmul@b+3
  2891  0993  0845               	movf	??_scale+3,w
  2892  0994  00A6               	movwf	___flmul@b+2
  2893  0995  0844               	movf	??_scale+2,w
  2894  0996  00A5               	movwf	___flmul@b+1
  2895  0997  0843               	movf	??_scale+1,w
  2896  0998  00A4               	movwf	___flmul@b
  2897  0999  3064               	movlw	100
  2898  099A  00F7               	movwf	___awdiv@divisor
  2899  099B  3000               	movlw	0
  2900  099C  00F8               	movwf	___awdiv@divisor+1
  2901  099D  0850               	movf	scale@scl,w
  2902  099E  00F9               	movwf	___awdiv@dividend
  2903  099F  01FA               	clrf	___awdiv@dividend+1
  2904  09A0  1BF9               	btfsc	___awdiv@dividend,7
  2905  09A1  03FA               	decf	___awdiv@dividend+1,f
  2906  09A2  120A  158A  20D7  120A  158A  	fcall	___awdiv
  2907  09A7  0877               	movf	?___awdiv,w
  2908  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  2909  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  2910  09AA  00C7               	movwf	??_scale+5
  2911  09AB  3001               	movlw	1
  2912  09AC                     u4195:
  2913  09AC  1003               	clrc
  2914  09AD  0DC7               	rlf	??_scale+5,f
  2915  09AE  3EFF               	addlw	-1
  2916  09AF  1D03               	skipz
  2917  09B0  29AC               	goto	u4195
  2918  09B1  1003               	clrc
  2919  09B2  0D47               	rlf	??_scale+5,w
  2920  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2921  09B4  0084               	movwf	4
  2922  09B5  120A  158A  200A  120A  158A  	fcall	stringdir
  2923  09BA  00C8               	movwf	??_scale+6
  2924  09BB  120A  158A  200A  120A  158A  	fcall	stringdir
  2925  09C0  00C9               	movwf	??_scale+7
  2926  09C1  120A  158A  200A  120A  158A  	fcall	stringdir
  2927  09C6  00CA               	movwf	??_scale+8
  2928  09C7  120A  158A  200A  120A  158A  	fcall	stringdir
  2929  09CC  00CB               	movwf	??_scale+9
  2930  09CD  084B               	movf	??_scale+9,w
  2931  09CE  00AB               	movwf	___flmul@a+3
  2932  09CF  084A               	movf	??_scale+8,w
  2933  09D0  00AA               	movwf	___flmul@a+2
  2934  09D1  0849               	movf	??_scale+7,w
  2935  09D2  00A9               	movwf	___flmul@a+1
  2936  09D3  0848               	movf	??_scale+6,w
  2937  09D4  00A8               	movwf	___flmul@a
  2938  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  2939  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  2940  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  2941  09DC  0827               	movf	?___flmul+3,w
  2942  09DD  00CF               	movwf	_scale$1219+3
  2943  09DE  0826               	movf	?___flmul+2,w
  2944  09DF  00CE               	movwf	_scale$1219+2
  2945  09E0  0825               	movf	?___flmul+1,w
  2946  09E1  00CD               	movwf	_scale$1219+1
  2947  09E2  0824               	movf	?___flmul,w
  2948  09E3  00CC               	movwf	_scale$1219
  2949                           
  2950                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsig
      +                          ned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigne
      +                          d char)(scl%10)];
  2951  09E4  300A               	movlw	10
  2952  09E5  00F0               	movwf	___awmod@divisor
  2953  09E6  3000               	movlw	0
  2954  09E7  00F1               	movwf	___awmod@divisor+1
  2955  09E8  0850               	movf	scale@scl,w
  2956  09E9  00F2               	movwf	___awmod@dividend
  2957  09EA  01F3               	clrf	___awmod@dividend+1
  2958  09EB  1BF2               	btfsc	___awmod@dividend,7
  2959  09EC  03F3               	decf	___awmod@dividend+1,f
  2960  09ED  120A  118A  2006  120A  158A  	fcall	___awmod
  2961  09F2  0870               	movf	?___awmod,w
  2962  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  2963  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  2964  09F5  00C2               	movwf	??_scale
  2965  09F6  3001               	movlw	1
  2966  09F7                     u4205:
  2967  09F7  1003               	clrc
  2968  09F8  0DC2               	rlf	??_scale,f
  2969  09F9  3EFF               	addlw	-1
  2970  09FA  1D03               	skipz
  2971  09FB  29F7               	goto	u4205
  2972  09FC  1003               	clrc
  2973  09FD  0D42               	rlf	??_scale,w
  2974  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2975  09FF  0084               	movwf	4
  2976  0A00  120A  158A  200A  120A  158A  	fcall	stringdir
  2977  0A05  00C3               	movwf	??_scale+1
  2978  0A06  120A  158A  200A  120A  158A  	fcall	stringdir
  2979  0A0B  00C4               	movwf	??_scale+2
  2980  0A0C  120A  158A  200A  120A  158A  	fcall	stringdir
  2981  0A11  00C5               	movwf	??_scale+3
  2982  0A12  120A  158A  200A  120A  158A  	fcall	stringdir
  2983  0A17  00C6               	movwf	??_scale+4
  2984  0A18  0846               	movf	??_scale+4,w
  2985  0A19  00A7               	movwf	___flmul@b+3
  2986  0A1A  0845               	movf	??_scale+3,w
  2987  0A1B  00A6               	movwf	___flmul@b+2
  2988  0A1C  0844               	movf	??_scale+2,w
  2989  0A1D  00A5               	movwf	___flmul@b+1
  2990  0A1E  0843               	movf	??_scale+1,w
  2991  0A1F  00A4               	movwf	___flmul@b
  2992  0A20  084F               	movf	_scale$1219+3,w
  2993  0A21  00AB               	movwf	___flmul@a+3
  2994  0A22  084E               	movf	_scale$1219+2,w
  2995  0A23  00AA               	movwf	___flmul@a+2
  2996  0A24  084D               	movf	_scale$1219+1,w
  2997  0A25  00A9               	movwf	___flmul@a+1
  2998  0A26  084C               	movf	_scale$1219,w
  2999  0A27  00A8               	movwf	___flmul@a
  3000  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  3001  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  3002  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  3003  0A2F  0827               	movf	?___flmul+3,w
  3004  0A30  00C1               	movwf	?_scale+3
  3005  0A31  0826               	movf	?___flmul+2,w
  3006  0A32  00C0               	movwf	?_scale+2
  3007  0A33  0825               	movf	?___flmul+1,w
  3008  0A34  00BF               	movwf	?_scale+1
  3009  0A35  0824               	movf	?___flmul,w
  3010  0A36  00BE               	movwf	?_scale
  3011  0A37  2C9E               	goto	l308
  3012  0A38                     l2899:
  3013  0A38  0850               	movf	scale@scl,w
  3014  0A39  3A80               	xorlw	128
  3015  0A3A  3E75               	addlw	-139
  3016  0A3B  1C03               	skipc
  3017  0A3C  2A3E               	goto	u4211
  3018  0A3D  2A3F               	goto	u4210
  3019  0A3E                     u4211:
  3020  0A3E  2AC7               	goto	l2905
  3021  0A3F                     u4210:
  3022  0A3F                     l2901:
  3023                           
  3024                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _npowers_[(unsig
      +                          ned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3025  0A3F  300A               	movlw	10
  3026  0A40  00F0               	movwf	___awmod@divisor
  3027  0A41  3000               	movlw	0
  3028  0A42  00F1               	movwf	___awmod@divisor+1
  3029  0A43  0850               	movf	scale@scl,w
  3030  0A44  00F2               	movwf	___awmod@dividend
  3031  0A45  01F3               	clrf	___awmod@dividend+1
  3032  0A46  1BF2               	btfsc	___awmod@dividend,7
  3033  0A47  03F3               	decf	___awmod@dividend+1,f
  3034  0A48  120A  118A  2006  120A  158A  	fcall	___awmod
  3035  0A4D  0870               	movf	?___awmod,w
  3036  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3037  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3038  0A50  00C2               	movwf	??_scale
  3039  0A51  3001               	movlw	1
  3040  0A52                     u4225:
  3041  0A52  1003               	clrc
  3042  0A53  0DC2               	rlf	??_scale,f
  3043  0A54  3EFF               	addlw	-1
  3044  0A55  1D03               	skipz
  3045  0A56  2A52               	goto	u4225
  3046  0A57  1003               	clrc
  3047  0A58  0D42               	rlf	??_scale,w
  3048  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3049  0A5A  0084               	movwf	4
  3050  0A5B  120A  158A  200A  120A  158A  	fcall	stringdir
  3051  0A60  00C3               	movwf	??_scale+1
  3052  0A61  120A  158A  200A  120A  158A  	fcall	stringdir
  3053  0A66  00C4               	movwf	??_scale+2
  3054  0A67  120A  158A  200A  120A  158A  	fcall	stringdir
  3055  0A6C  00C5               	movwf	??_scale+3
  3056  0A6D  120A  158A  200A  120A  158A  	fcall	stringdir
  3057  0A72  00C6               	movwf	??_scale+4
  3058  0A73  0846               	movf	??_scale+4,w
  3059  0A74  00A7               	movwf	___flmul@b+3
  3060  0A75  0845               	movf	??_scale+3,w
  3061  0A76  00A6               	movwf	___flmul@b+2
  3062  0A77  0844               	movf	??_scale+2,w
  3063  0A78  00A5               	movwf	___flmul@b+1
  3064  0A79  0843               	movf	??_scale+1,w
  3065  0A7A  00A4               	movwf	___flmul@b
  3066  0A7B  300A               	movlw	10
  3067  0A7C  00F7               	movwf	___awdiv@divisor
  3068  0A7D  3000               	movlw	0
  3069  0A7E  00F8               	movwf	___awdiv@divisor+1
  3070  0A7F  0850               	movf	scale@scl,w
  3071  0A80  00F9               	movwf	___awdiv@dividend
  3072  0A81  01FA               	clrf	___awdiv@dividend+1
  3073  0A82  1BF9               	btfsc	___awdiv@dividend,7
  3074  0A83  03FA               	decf	___awdiv@dividend+1,f
  3075  0A84  120A  158A  20D7  120A  158A  	fcall	___awdiv
  3076  0A89  0877               	movf	?___awdiv,w
  3077  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  3078  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  3079  0A8C  00C7               	movwf	??_scale+5
  3080  0A8D  3001               	movlw	1
  3081  0A8E                     u4235:
  3082  0A8E  1003               	clrc
  3083  0A8F  0DC7               	rlf	??_scale+5,f
  3084  0A90  3EFF               	addlw	-1
  3085  0A91  1D03               	skipz
  3086  0A92  2A8E               	goto	u4235
  3087  0A93  1003               	clrc
  3088  0A94  0D47               	rlf	??_scale+5,w
  3089  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3090  0A96  0084               	movwf	4
  3091  0A97  120A  158A  200A  120A  158A  	fcall	stringdir
  3092  0A9C  00C8               	movwf	??_scale+6
  3093  0A9D  120A  158A  200A  120A  158A  	fcall	stringdir
  3094  0AA2  00C9               	movwf	??_scale+7
  3095  0AA3  120A  158A  200A  120A  158A  	fcall	stringdir
  3096  0AA8  00CA               	movwf	??_scale+8
  3097  0AA9  120A  158A  200A  120A  158A  	fcall	stringdir
  3098  0AAE  00CB               	movwf	??_scale+9
  3099  0AAF  084B               	movf	??_scale+9,w
  3100  0AB0  00AB               	movwf	___flmul@a+3
  3101  0AB1  084A               	movf	??_scale+8,w
  3102  0AB2  00AA               	movwf	___flmul@a+2
  3103  0AB3  0849               	movf	??_scale+7,w
  3104  0AB4  00A9               	movwf	___flmul@a+1
  3105  0AB5  0848               	movf	??_scale+6,w
  3106  0AB6  00A8               	movwf	___flmul@a
  3107  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  3108  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3109  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3110  0ABE  0827               	movf	?___flmul+3,w
  3111  0ABF  00C1               	movwf	?_scale+3
  3112  0AC0  0826               	movf	?___flmul+2,w
  3113  0AC1  00C0               	movwf	?_scale+2
  3114  0AC2  0825               	movf	?___flmul+1,w
  3115  0AC3  00BF               	movwf	?_scale+1
  3116  0AC4  0824               	movf	?___flmul,w
  3117  0AC5  00BE               	movwf	?_scale
  3118  0AC6  2C9E               	goto	l308
  3119  0AC7                     l2905:
  3120                           
  3121                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _npowers_[(unsign
      +                          ed char)scl];
  3122  0AC7  0850               	movf	scale@scl,w
  3123  0AC8  00C2               	movwf	??_scale
  3124  0AC9  3001               	movlw	1
  3125  0ACA                     u4245:
  3126  0ACA  1003               	clrc
  3127  0ACB  0DC2               	rlf	??_scale,f
  3128  0ACC  3EFF               	addlw	-1
  3129  0ACD  1D03               	skipz
  3130  0ACE  2ACA               	goto	u4245
  3131  0ACF  1003               	clrc
  3132  0AD0  0D42               	rlf	??_scale,w
  3133  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3134  0AD2  0084               	movwf	4
  3135  0AD3  120A  158A  200A  120A  158A  	fcall	stringdir
  3136  0AD8  00C3               	movwf	??_scale+1
  3137  0AD9  120A  158A  200A  120A  158A  	fcall	stringdir
  3138  0ADE  00C4               	movwf	??_scale+2
  3139  0ADF  120A  158A  200A  120A  158A  	fcall	stringdir
  3140  0AE4  00C5               	movwf	??_scale+3
  3141  0AE5  120A  158A  200A  120A  158A  	fcall	stringdir
  3142  0AEA  00C6               	movwf	??_scale+4
  3143  0AEB  0846               	movf	??_scale+4,w
  3144  0AEC  00C1               	movwf	?_scale+3
  3145  0AED  0845               	movf	??_scale+3,w
  3146  0AEE  00C0               	movwf	?_scale+2
  3147  0AEF  0844               	movf	??_scale+2,w
  3148  0AF0  00BF               	movwf	?_scale+1
  3149  0AF1  0843               	movf	??_scale+1,w
  3150  0AF2  00BE               	movwf	?_scale
  3151  0AF3  2C9E               	goto	l308
  3152  0AF4                     l2909:
  3153                           
  3154                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110)
  3155  0AF4  0850               	movf	scale@scl,w
  3156  0AF5  3A80               	xorlw	128
  3157  0AF6  3E12               	addlw	-238
  3158  0AF7  1C03               	skipc
  3159  0AF8  2AFA               	goto	u4251
  3160  0AF9  2AFB               	goto	u4250
  3161  0AFA                     u4251:
  3162  0AFA  2BE3               	goto	l2917
  3163  0AFB                     u4250:
  3164  0AFB                     l2911:
  3165                           
  3166                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigne
      +                          d char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned ch
      +                          ar)(scl%10)];
  3167  0AFB  300A               	movlw	10
  3168  0AFC  00F7               	movwf	___awdiv@divisor
  3169  0AFD  3000               	movlw	0
  3170  0AFE  00F8               	movwf	___awdiv@divisor+1
  3171  0AFF  0850               	movf	scale@scl,w
  3172  0B00  00F2               	movwf	___awmod@dividend
  3173  0B01  01F3               	clrf	___awmod@dividend+1
  3174  0B02  1BF2               	btfsc	___awmod@dividend,7
  3175  0B03  03F3               	decf	___awmod@dividend+1,f
  3176  0B04  3064               	movlw	100
  3177  0B05  00F0               	movwf	___awmod@divisor
  3178  0B06  3000               	movlw	0
  3179  0B07  00F1               	movwf	___awmod@divisor+1
  3180  0B08  120A  118A  2006  120A  158A  	fcall	___awmod
  3181  0B0D  0871               	movf	?___awmod+1,w
  3182  0B0E  00FA               	movwf	___awdiv@dividend+1
  3183  0B0F  0870               	movf	?___awmod,w
  3184  0B10  00F9               	movwf	___awdiv@dividend
  3185  0B11  120A  158A  20D7  120A  158A  	fcall	___awdiv
  3186  0B16  0877               	movf	?___awdiv,w
  3187  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3188  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3189  0B19  00C2               	movwf	??_scale
  3190  0B1A  3001               	movlw	1
  3191  0B1B                     u4265:
  3192  0B1B  1003               	clrc
  3193  0B1C  0DC2               	rlf	??_scale,f
  3194  0B1D  3EFF               	addlw	-1
  3195  0B1E  1D03               	skipz
  3196  0B1F  2B1B               	goto	u4265
  3197  0B20  1003               	clrc
  3198  0B21  0D42               	rlf	??_scale,w
  3199  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3200  0B23  0084               	movwf	4
  3201  0B24  120A  158A  200A  120A  158A  	fcall	stringdir
  3202  0B29  00C3               	movwf	??_scale+1
  3203  0B2A  120A  158A  200A  120A  158A  	fcall	stringdir
  3204  0B2F  00C4               	movwf	??_scale+2
  3205  0B30  120A  158A  200A  120A  158A  	fcall	stringdir
  3206  0B35  00C5               	movwf	??_scale+3
  3207  0B36  120A  158A  200A  120A  158A  	fcall	stringdir
  3208  0B3B  00C6               	movwf	??_scale+4
  3209  0B3C  0846               	movf	??_scale+4,w
  3210  0B3D  00A7               	movwf	___flmul@b+3
  3211  0B3E  0845               	movf	??_scale+3,w
  3212  0B3F  00A6               	movwf	___flmul@b+2
  3213  0B40  0844               	movf	??_scale+2,w
  3214  0B41  00A5               	movwf	___flmul@b+1
  3215  0B42  0843               	movf	??_scale+1,w
  3216  0B43  00A4               	movwf	___flmul@b
  3217  0B44  3064               	movlw	100
  3218  0B45  00F7               	movwf	___awdiv@divisor
  3219  0B46  3000               	movlw	0
  3220  0B47  00F8               	movwf	___awdiv@divisor+1
  3221  0B48  0850               	movf	scale@scl,w
  3222  0B49  00F9               	movwf	___awdiv@dividend
  3223  0B4A  01FA               	clrf	___awdiv@dividend+1
  3224  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  3225  0B4C  03FA               	decf	___awdiv@dividend+1,f
  3226  0B4D  120A  158A  20D7  120A  158A  	fcall	___awdiv
  3227  0B52  0877               	movf	?___awdiv,w
  3228  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  3229  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  3230  0B55  00C7               	movwf	??_scale+5
  3231  0B56  3001               	movlw	1
  3232  0B57                     u4275:
  3233  0B57  1003               	clrc
  3234  0B58  0DC7               	rlf	??_scale+5,f
  3235  0B59  3EFF               	addlw	-1
  3236  0B5A  1D03               	skipz
  3237  0B5B  2B57               	goto	u4275
  3238  0B5C  1003               	clrc
  3239  0B5D  0D47               	rlf	??_scale+5,w
  3240  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3241  0B5F  0084               	movwf	4
  3242  0B60  120A  158A  200A  120A  158A  	fcall	stringdir
  3243  0B65  00C8               	movwf	??_scale+6
  3244  0B66  120A  158A  200A  120A  158A  	fcall	stringdir
  3245  0B6B  00C9               	movwf	??_scale+7
  3246  0B6C  120A  158A  200A  120A  158A  	fcall	stringdir
  3247  0B71  00CA               	movwf	??_scale+8
  3248  0B72  120A  158A  200A  120A  158A  	fcall	stringdir
  3249  0B77  00CB               	movwf	??_scale+9
  3250  0B78  084B               	movf	??_scale+9,w
  3251  0B79  00AB               	movwf	___flmul@a+3
  3252  0B7A  084A               	movf	??_scale+8,w
  3253  0B7B  00AA               	movwf	___flmul@a+2
  3254  0B7C  0849               	movf	??_scale+7,w
  3255  0B7D  00A9               	movwf	___flmul@a+1
  3256  0B7E  0848               	movf	??_scale+6,w
  3257  0B7F  00A8               	movwf	___flmul@a
  3258  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  3259  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  3260  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  3261  0B87  0827               	movf	?___flmul+3,w
  3262  0B88  00CF               	movwf	_scale$1219+3
  3263  0B89  0826               	movf	?___flmul+2,w
  3264  0B8A  00CE               	movwf	_scale$1219+2
  3265  0B8B  0825               	movf	?___flmul+1,w
  3266  0B8C  00CD               	movwf	_scale$1219+1
  3267  0B8D  0824               	movf	?___flmul,w
  3268  0B8E  00CC               	movwf	_scale$1219
  3269                           
  3270                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigne
      +                          d char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned ch
      +                          ar)(scl%10)];
  3271  0B8F  300A               	movlw	10
  3272  0B90  00F0               	movwf	___awmod@divisor
  3273  0B91  3000               	movlw	0
  3274  0B92  00F1               	movwf	___awmod@divisor+1
  3275  0B93  0850               	movf	scale@scl,w
  3276  0B94  00F2               	movwf	___awmod@dividend
  3277  0B95  01F3               	clrf	___awmod@dividend+1
  3278  0B96  1BF2               	btfsc	___awmod@dividend,7
  3279  0B97  03F3               	decf	___awmod@dividend+1,f
  3280  0B98  120A  118A  2006  120A  158A  	fcall	___awmod
  3281  0B9D  0870               	movf	?___awmod,w
  3282  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  3283  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  3284  0BA0  00C2               	movwf	??_scale
  3285  0BA1  3001               	movlw	1
  3286  0BA2                     u4285:
  3287  0BA2  1003               	clrc
  3288  0BA3  0DC2               	rlf	??_scale,f
  3289  0BA4  3EFF               	addlw	-1
  3290  0BA5  1D03               	skipz
  3291  0BA6  2BA2               	goto	u4285
  3292  0BA7  1003               	clrc
  3293  0BA8  0D42               	rlf	??_scale,w
  3294  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3295  0BAA  0084               	movwf	4
  3296  0BAB  120A  158A  200A  120A  158A  	fcall	stringdir
  3297  0BB0  00C3               	movwf	??_scale+1
  3298  0BB1  120A  158A  200A  120A  158A  	fcall	stringdir
  3299  0BB6  00C4               	movwf	??_scale+2
  3300  0BB7  120A  158A  200A  120A  158A  	fcall	stringdir
  3301  0BBC  00C5               	movwf	??_scale+3
  3302  0BBD  120A  158A  200A  120A  158A  	fcall	stringdir
  3303  0BC2  00C6               	movwf	??_scale+4
  3304  0BC3  0846               	movf	??_scale+4,w
  3305  0BC4  00A7               	movwf	___flmul@b+3
  3306  0BC5  0845               	movf	??_scale+3,w
  3307  0BC6  00A6               	movwf	___flmul@b+2
  3308  0BC7  0844               	movf	??_scale+2,w
  3309  0BC8  00A5               	movwf	___flmul@b+1
  3310  0BC9  0843               	movf	??_scale+1,w
  3311  0BCA  00A4               	movwf	___flmul@b
  3312  0BCB  084F               	movf	_scale$1219+3,w
  3313  0BCC  00AB               	movwf	___flmul@a+3
  3314  0BCD  084E               	movf	_scale$1219+2,w
  3315  0BCE  00AA               	movwf	___flmul@a+2
  3316  0BCF  084D               	movf	_scale$1219+1,w
  3317  0BD0  00A9               	movwf	___flmul@a+1
  3318  0BD1  084C               	movf	_scale$1219,w
  3319  0BD2  00A8               	movwf	___flmul@a
  3320  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  3321  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  3322  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  3323  0BDA  0827               	movf	?___flmul+3,w
  3324  0BDB  00C1               	movwf	?_scale+3
  3325  0BDC  0826               	movf	?___flmul+2,w
  3326  0BDD  00C0               	movwf	?_scale+2
  3327  0BDE  0825               	movf	?___flmul+1,w
  3328  0BDF  00BF               	movwf	?_scale+1
  3329  0BE0  0824               	movf	?___flmul,w
  3330  0BE1  00BE               	movwf	?_scale
  3331  0BE2  2C9E               	goto	l308
  3332  0BE3                     l2917:
  3333  0BE3  0850               	movf	scale@scl,w
  3334  0BE4  3A80               	xorlw	128
  3335  0BE5  3E75               	addlw	-139
  3336  0BE6  1C03               	skipc
  3337  0BE7  2BE9               	goto	u4291
  3338  0BE8  2BEA               	goto	u4290
  3339  0BE9                     u4291:
  3340  0BE9  2C72               	goto	l2923
  3341  0BEA                     u4290:
  3342  0BEA                     l2919:
  3343                           
  3344                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _powers_[(unsigne
      +                          d char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3345  0BEA  300A               	movlw	10
  3346  0BEB  00F0               	movwf	___awmod@divisor
  3347  0BEC  3000               	movlw	0
  3348  0BED  00F1               	movwf	___awmod@divisor+1
  3349  0BEE  0850               	movf	scale@scl,w
  3350  0BEF  00F2               	movwf	___awmod@dividend
  3351  0BF0  01F3               	clrf	___awmod@dividend+1
  3352  0BF1  1BF2               	btfsc	___awmod@dividend,7
  3353  0BF2  03F3               	decf	___awmod@dividend+1,f
  3354  0BF3  120A  118A  2006  120A  158A  	fcall	___awmod
  3355  0BF8  0870               	movf	?___awmod,w
  3356  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  3357  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  3358  0BFB  00C2               	movwf	??_scale
  3359  0BFC  3001               	movlw	1
  3360  0BFD                     u4305:
  3361  0BFD  1003               	clrc
  3362  0BFE  0DC2               	rlf	??_scale,f
  3363  0BFF  3EFF               	addlw	-1
  3364  0C00  1D03               	skipz
  3365  0C01  2BFD               	goto	u4305
  3366  0C02  1003               	clrc
  3367  0C03  0D42               	rlf	??_scale,w
  3368  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3369  0C05  0084               	movwf	4
  3370  0C06  120A  158A  200A  120A  158A  	fcall	stringdir
  3371  0C0B  00C3               	movwf	??_scale+1
  3372  0C0C  120A  158A  200A  120A  158A  	fcall	stringdir
  3373  0C11  00C4               	movwf	??_scale+2
  3374  0C12  120A  158A  200A  120A  158A  	fcall	stringdir
  3375  0C17  00C5               	movwf	??_scale+3
  3376  0C18  120A  158A  200A  120A  158A  	fcall	stringdir
  3377  0C1D  00C6               	movwf	??_scale+4
  3378  0C1E  0846               	movf	??_scale+4,w
  3379  0C1F  00A7               	movwf	___flmul@b+3
  3380  0C20  0845               	movf	??_scale+3,w
  3381  0C21  00A6               	movwf	___flmul@b+2
  3382  0C22  0844               	movf	??_scale+2,w
  3383  0C23  00A5               	movwf	___flmul@b+1
  3384  0C24  0843               	movf	??_scale+1,w
  3385  0C25  00A4               	movwf	___flmul@b
  3386  0C26  300A               	movlw	10
  3387  0C27  00F7               	movwf	___awdiv@divisor
  3388  0C28  3000               	movlw	0
  3389  0C29  00F8               	movwf	___awdiv@divisor+1
  3390  0C2A  0850               	movf	scale@scl,w
  3391  0C2B  00F9               	movwf	___awdiv@dividend
  3392  0C2C  01FA               	clrf	___awdiv@dividend+1
  3393  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  3394  0C2E  03FA               	decf	___awdiv@dividend+1,f
  3395  0C2F  120A  158A  20D7  120A  158A  	fcall	___awdiv
  3396  0C34  0877               	movf	?___awdiv,w
  3397  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  3398  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  3399  0C37  00C7               	movwf	??_scale+5
  3400  0C38  3001               	movlw	1
  3401  0C39                     u4315:
  3402  0C39  1003               	clrc
  3403  0C3A  0DC7               	rlf	??_scale+5,f
  3404  0C3B  3EFF               	addlw	-1
  3405  0C3C  1D03               	skipz
  3406  0C3D  2C39               	goto	u4315
  3407  0C3E  1003               	clrc
  3408  0C3F  0D47               	rlf	??_scale+5,w
  3409  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3410  0C41  0084               	movwf	4
  3411  0C42  120A  158A  200A  120A  158A  	fcall	stringdir
  3412  0C47  00C8               	movwf	??_scale+6
  3413  0C48  120A  158A  200A  120A  158A  	fcall	stringdir
  3414  0C4D  00C9               	movwf	??_scale+7
  3415  0C4E  120A  158A  200A  120A  158A  	fcall	stringdir
  3416  0C53  00CA               	movwf	??_scale+8
  3417  0C54  120A  158A  200A  120A  158A  	fcall	stringdir
  3418  0C59  00CB               	movwf	??_scale+9
  3419  0C5A  084B               	movf	??_scale+9,w
  3420  0C5B  00AB               	movwf	___flmul@a+3
  3421  0C5C  084A               	movf	??_scale+8,w
  3422  0C5D  00AA               	movwf	___flmul@a+2
  3423  0C5E  0849               	movf	??_scale+7,w
  3424  0C5F  00A9               	movwf	___flmul@a+1
  3425  0C60  0848               	movf	??_scale+6,w
  3426  0C61  00A8               	movwf	___flmul@a
  3427  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  3428  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  3429  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  3430  0C69  0827               	movf	?___flmul+3,w
  3431  0C6A  00C1               	movwf	?_scale+3
  3432  0C6B  0826               	movf	?___flmul+2,w
  3433  0C6C  00C0               	movwf	?_scale+2
  3434  0C6D  0825               	movf	?___flmul+1,w
  3435  0C6E  00BF               	movwf	?_scale+1
  3436  0C6F  0824               	movf	?___flmul,w
  3437  0C70  00BE               	movwf	?_scale
  3438  0C71  2C9E               	goto	l308
  3439  0C72                     l2923:
  3440                           
  3441                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _powers_[(unsigned
      +                           char)scl];
  3442  0C72  0850               	movf	scale@scl,w
  3443  0C73  00C2               	movwf	??_scale
  3444  0C74  3001               	movlw	1
  3445  0C75                     u4325:
  3446  0C75  1003               	clrc
  3447  0C76  0DC2               	rlf	??_scale,f
  3448  0C77  3EFF               	addlw	-1
  3449  0C78  1D03               	skipz
  3450  0C79  2C75               	goto	u4325
  3451  0C7A  1003               	clrc
  3452  0C7B  0D42               	rlf	??_scale,w
  3453  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3454  0C7D  0084               	movwf	4
  3455  0C7E  120A  158A  200A  120A  158A  	fcall	stringdir
  3456  0C83  00C3               	movwf	??_scale+1
  3457  0C84  120A  158A  200A  120A  158A  	fcall	stringdir
  3458  0C89  00C4               	movwf	??_scale+2
  3459  0C8A  120A  158A  200A  120A  158A  	fcall	stringdir
  3460  0C8F  00C5               	movwf	??_scale+3
  3461  0C90  120A  158A  200A  120A  158A  	fcall	stringdir
  3462  0C95  00C6               	movwf	??_scale+4
  3463  0C96  0846               	movf	??_scale+4,w
  3464  0C97  00C1               	movwf	?_scale+3
  3465  0C98  0845               	movf	??_scale+3,w
  3466  0C99  00C0               	movwf	?_scale+2
  3467  0C9A  0844               	movf	??_scale+2,w
  3468  0C9B  00BF               	movwf	?_scale+1
  3469  0C9C  0843               	movf	??_scale+1,w
  3470  0C9D  00BE               	movwf	?_scale
  3471  0C9E                     l308:
  3472  0C9E  0008               	return
  3473  0C9F                     __end_of_scale:
  3474                           
  3475                           	psect	text3
  3476  0006                     __ptext3:	
  3477 ;; *************** function ___awmod *****************
  3478 ;; Defined at:
  3479 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  divisor         2    0[COMMON] int 
  3482 ;;  dividend        2    2[COMMON] int 
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;  sign            1    6[COMMON] unsigned char 
  3485 ;;  counter         1    5[COMMON] unsigned char 
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  2    0[COMMON] int 
  3488 ;; Registers used:
  3489 ;;		wreg, status,2, status,0
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3495 ;;      Params:         4       0       0       0       0
  3496 ;;      Locals:         2       0       0       0       0
  3497 ;;      Temps:          1       0       0       0       0
  3498 ;;      Totals:         7       0       0       0       0
  3499 ;;Total ram usage:        7 bytes
  3500 ;; Hardware stack levels used:    1
  3501 ;; This function calls:
  3502 ;;		Nothing
  3503 ;; This function is called by:
  3504 ;;		_scale
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           
  3509                           ;psect for function ___awmod
  3510  0006                     ___awmod:
  3511  0006                     l2409:	
  3512                           ;incstack = 0
  3513                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3514                           
  3515  0006  01F6               	clrf	___awmod@sign
  3516  0007                     l2411:
  3517  0007  1FF3               	btfss	___awmod@dividend+1,7
  3518  0008  280A               	goto	u3001
  3519  0009  280B               	goto	u3000
  3520  000A                     u3001:
  3521  000A  2812               	goto	l2417
  3522  000B                     u3000:
  3523  000B                     l2413:
  3524  000B  09F2               	comf	___awmod@dividend,f
  3525  000C  09F3               	comf	___awmod@dividend+1,f
  3526  000D  0AF2               	incf	___awmod@dividend,f
  3527  000E  1903               	skipnz
  3528  000F  0AF3               	incf	___awmod@dividend+1,f
  3529  0010                     l2415:
  3530  0010  01F6               	clrf	___awmod@sign
  3531  0011  0AF6               	incf	___awmod@sign,f
  3532  0012                     l2417:
  3533  0012  1FF1               	btfss	___awmod@divisor+1,7
  3534  0013  2815               	goto	u3011
  3535  0014  2816               	goto	u3010
  3536  0015                     u3011:
  3537  0015  281B               	goto	l2421
  3538  0016                     u3010:
  3539  0016                     l2419:
  3540  0016  09F0               	comf	___awmod@divisor,f
  3541  0017  09F1               	comf	___awmod@divisor+1,f
  3542  0018  0AF0               	incf	___awmod@divisor,f
  3543  0019  1903               	skipnz
  3544  001A  0AF1               	incf	___awmod@divisor+1,f
  3545  001B                     l2421:
  3546  001B  0870               	movf	___awmod@divisor,w
  3547  001C  0471               	iorwf	___awmod@divisor+1,w
  3548  001D  1903               	btfsc	3,2
  3549  001E  2820               	goto	u3021
  3550  001F  2821               	goto	u3020
  3551  0020                     u3021:
  3552  0020  2850               	goto	l2439
  3553  0021                     u3020:
  3554  0021                     l2423:
  3555  0021  01F5               	clrf	___awmod@counter
  3556  0022  0AF5               	incf	___awmod@counter,f
  3557  0023  282F               	goto	l2429
  3558  0024                     l2425:
  3559  0024  3001               	movlw	1
  3560  0025                     u3035:
  3561  0025  1003               	clrc
  3562  0026  0DF0               	rlf	___awmod@divisor,f
  3563  0027  0DF1               	rlf	___awmod@divisor+1,f
  3564  0028  3EFF               	addlw	-1
  3565  0029  1D03               	skipz
  3566  002A  2825               	goto	u3035
  3567  002B                     l2427:
  3568  002B  3001               	movlw	1
  3569  002C  00F4               	movwf	??___awmod
  3570  002D  0874               	movf	??___awmod,w
  3571  002E  07F5               	addwf	___awmod@counter,f
  3572  002F                     l2429:
  3573  002F  1FF1               	btfss	___awmod@divisor+1,7
  3574  0030  2832               	goto	u3041
  3575  0031  2833               	goto	u3040
  3576  0032                     u3041:
  3577  0032  2824               	goto	l2425
  3578  0033                     u3040:
  3579  0033                     l2431:
  3580  0033  0871               	movf	___awmod@divisor+1,w
  3581  0034  0273               	subwf	___awmod@dividend+1,w
  3582  0035  1D03               	skipz
  3583  0036  2839               	goto	u3055
  3584  0037  0870               	movf	___awmod@divisor,w
  3585  0038  0272               	subwf	___awmod@dividend,w
  3586  0039                     u3055:
  3587  0039  1C03               	skipc
  3588  003A  283C               	goto	u3051
  3589  003B  283D               	goto	u3050
  3590  003C                     u3051:
  3591  003C  2843               	goto	l2435
  3592  003D                     u3050:
  3593  003D                     l2433:
  3594  003D  0870               	movf	___awmod@divisor,w
  3595  003E  02F2               	subwf	___awmod@dividend,f
  3596  003F  0871               	movf	___awmod@divisor+1,w
  3597  0040  1C03               	skipc
  3598  0041  03F3               	decf	___awmod@dividend+1,f
  3599  0042  02F3               	subwf	___awmod@dividend+1,f
  3600  0043                     l2435:
  3601  0043  3001               	movlw	1
  3602  0044                     u3065:
  3603  0044  1003               	clrc
  3604  0045  0CF1               	rrf	___awmod@divisor+1,f
  3605  0046  0CF0               	rrf	___awmod@divisor,f
  3606  0047  3EFF               	addlw	-1
  3607  0048  1D03               	skipz
  3608  0049  2844               	goto	u3065
  3609  004A                     l2437:
  3610  004A  3001               	movlw	1
  3611  004B  02F5               	subwf	___awmod@counter,f
  3612  004C  1D03               	btfss	3,2
  3613  004D  284F               	goto	u3071
  3614  004E  2850               	goto	u3070
  3615  004F                     u3071:
  3616  004F  2833               	goto	l2431
  3617  0050                     u3070:
  3618  0050                     l2439:
  3619  0050  0876               	movf	___awmod@sign,w
  3620  0051  1903               	btfsc	3,2
  3621  0052  2854               	goto	u3081
  3622  0053  2855               	goto	u3080
  3623  0054                     u3081:
  3624  0054  285A               	goto	l2443
  3625  0055                     u3080:
  3626  0055                     l2441:
  3627  0055  09F2               	comf	___awmod@dividend,f
  3628  0056  09F3               	comf	___awmod@dividend+1,f
  3629  0057  0AF2               	incf	___awmod@dividend,f
  3630  0058  1903               	skipnz
  3631  0059  0AF3               	incf	___awmod@dividend+1,f
  3632  005A                     l2443:
  3633  005A  0873               	movf	___awmod@dividend+1,w
  3634  005B  00F1               	movwf	?___awmod+1
  3635  005C  0872               	movf	___awmod@dividend,w
  3636  005D  00F0               	movwf	?___awmod
  3637  005E                     l570:
  3638  005E  0008               	return
  3639  005F                     __end_of___awmod:
  3640                           
  3641                           	psect	text4
  3642  08D7                     __ptext4:	
  3643 ;; *************** function ___awdiv *****************
  3644 ;; Defined at:
  3645 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;  divisor         2    7[COMMON] int 
  3648 ;;  dividend        2    9[COMMON] int 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;  quotient        2    2[BANK0 ] int 
  3651 ;;  sign            1    1[BANK0 ] unsigned char 
  3652 ;;  counter         1    0[BANK0 ] unsigned char 
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  2    7[COMMON] int 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2, status,0
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3662 ;;      Params:         4       0       0       0       0
  3663 ;;      Locals:         0       4       0       0       0
  3664 ;;      Temps:          1       0       0       0       0
  3665 ;;      Totals:         5       4       0       0       0
  3666 ;;Total ram usage:        9 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; This function calls:
  3669 ;;		Nothing
  3670 ;; This function is called by:
  3671 ;;		_scale
  3672 ;;		_sprintf
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           
  3677                           ;psect for function ___awdiv
  3678  08D7                     ___awdiv:
  3679  08D7                     l2365:	
  3680                           ;incstack = 0
  3681                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3682                           
  3683  08D7  1283               	bcf	3,5	;RP0=0, select bank0
  3684  08D8  1303               	bcf	3,6	;RP1=0, select bank0
  3685  08D9  01A1               	clrf	___awdiv@sign
  3686  08DA                     l2367:
  3687  08DA  1FF8               	btfss	___awdiv@divisor+1,7
  3688  08DB  28DD               	goto	u2901
  3689  08DC  28DE               	goto	u2900
  3690  08DD                     u2901:
  3691  08DD  28E5               	goto	l2373
  3692  08DE                     u2900:
  3693  08DE                     l2369:
  3694  08DE  09F7               	comf	___awdiv@divisor,f
  3695  08DF  09F8               	comf	___awdiv@divisor+1,f
  3696  08E0  0AF7               	incf	___awdiv@divisor,f
  3697  08E1  1903               	skipnz
  3698  08E2  0AF8               	incf	___awdiv@divisor+1,f
  3699  08E3                     l2371:
  3700  08E3  01A1               	clrf	___awdiv@sign
  3701  08E4  0AA1               	incf	___awdiv@sign,f
  3702  08E5                     l2373:
  3703  08E5  1FFA               	btfss	___awdiv@dividend+1,7
  3704  08E6  28E8               	goto	u2911
  3705  08E7  28E9               	goto	u2910
  3706  08E8                     u2911:
  3707  08E8  28F2               	goto	l2379
  3708  08E9                     u2910:
  3709  08E9                     l2375:
  3710  08E9  09F9               	comf	___awdiv@dividend,f
  3711  08EA  09FA               	comf	___awdiv@dividend+1,f
  3712  08EB  0AF9               	incf	___awdiv@dividend,f
  3713  08EC  1903               	skipnz
  3714  08ED  0AFA               	incf	___awdiv@dividend+1,f
  3715  08EE                     l2377:
  3716  08EE  3001               	movlw	1
  3717  08EF  00FB               	movwf	??___awdiv
  3718  08F0  087B               	movf	??___awdiv,w
  3719  08F1  06A1               	xorwf	___awdiv@sign,f
  3720  08F2                     l2379:
  3721  08F2  01A2               	clrf	___awdiv@quotient
  3722  08F3  01A3               	clrf	___awdiv@quotient+1
  3723  08F4                     l2381:
  3724  08F4  0877               	movf	___awdiv@divisor,w
  3725  08F5  0478               	iorwf	___awdiv@divisor+1,w
  3726  08F6  1903               	btfsc	3,2
  3727  08F7  28F9               	goto	u2921
  3728  08F8  28FA               	goto	u2920
  3729  08F9                     u2921:
  3730  08F9  2931               	goto	l2401
  3731  08FA                     u2920:
  3732  08FA                     l2383:
  3733  08FA  01A0               	clrf	___awdiv@counter
  3734  08FB  0AA0               	incf	___awdiv@counter,f
  3735  08FC  2908               	goto	l2389
  3736  08FD                     l2385:
  3737  08FD  3001               	movlw	1
  3738  08FE                     u2935:
  3739  08FE  1003               	clrc
  3740  08FF  0DF7               	rlf	___awdiv@divisor,f
  3741  0900  0DF8               	rlf	___awdiv@divisor+1,f
  3742  0901  3EFF               	addlw	-1
  3743  0902  1D03               	skipz
  3744  0903  28FE               	goto	u2935
  3745  0904                     l2387:
  3746  0904  3001               	movlw	1
  3747  0905  00FB               	movwf	??___awdiv
  3748  0906  087B               	movf	??___awdiv,w
  3749  0907  07A0               	addwf	___awdiv@counter,f
  3750  0908                     l2389:
  3751  0908  1FF8               	btfss	___awdiv@divisor+1,7
  3752  0909  290B               	goto	u2941
  3753  090A  290C               	goto	u2940
  3754  090B                     u2941:
  3755  090B  28FD               	goto	l2385
  3756  090C                     u2940:
  3757  090C                     l2391:
  3758  090C  3001               	movlw	1
  3759  090D                     u2955:
  3760  090D  1003               	clrc
  3761  090E  0DA2               	rlf	___awdiv@quotient,f
  3762  090F  0DA3               	rlf	___awdiv@quotient+1,f
  3763  0910  3EFF               	addlw	-1
  3764  0911  1D03               	skipz
  3765  0912  290D               	goto	u2955
  3766  0913  0878               	movf	___awdiv@divisor+1,w
  3767  0914  027A               	subwf	___awdiv@dividend+1,w
  3768  0915  1D03               	skipz
  3769  0916  2919               	goto	u2965
  3770  0917  0877               	movf	___awdiv@divisor,w
  3771  0918  0279               	subwf	___awdiv@dividend,w
  3772  0919                     u2965:
  3773  0919  1C03               	skipc
  3774  091A  291C               	goto	u2961
  3775  091B  291D               	goto	u2960
  3776  091C                     u2961:
  3777  091C  2924               	goto	l2397
  3778  091D                     u2960:
  3779  091D                     l2393:
  3780  091D  0877               	movf	___awdiv@divisor,w
  3781  091E  02F9               	subwf	___awdiv@dividend,f
  3782  091F  0878               	movf	___awdiv@divisor+1,w
  3783  0920  1C03               	skipc
  3784  0921  03FA               	decf	___awdiv@dividend+1,f
  3785  0922  02FA               	subwf	___awdiv@dividend+1,f
  3786  0923                     l2395:
  3787  0923  1422               	bsf	___awdiv@quotient,0
  3788  0924                     l2397:
  3789  0924  3001               	movlw	1
  3790  0925                     u2975:
  3791  0925  1003               	clrc
  3792  0926  0CF8               	rrf	___awdiv@divisor+1,f
  3793  0927  0CF7               	rrf	___awdiv@divisor,f
  3794  0928  3EFF               	addlw	-1
  3795  0929  1D03               	skipz
  3796  092A  2925               	goto	u2975
  3797  092B                     l2399:
  3798  092B  3001               	movlw	1
  3799  092C  02A0               	subwf	___awdiv@counter,f
  3800  092D  1D03               	btfss	3,2
  3801  092E  2930               	goto	u2981
  3802  092F  2931               	goto	u2980
  3803  0930                     u2981:
  3804  0930  290C               	goto	l2391
  3805  0931                     u2980:
  3806  0931                     l2401:
  3807  0931  0821               	movf	___awdiv@sign,w
  3808  0932  1903               	btfsc	3,2
  3809  0933  2935               	goto	u2991
  3810  0934  2936               	goto	u2990
  3811  0935                     u2991:
  3812  0935  293B               	goto	l2405
  3813  0936                     u2990:
  3814  0936                     l2403:
  3815  0936  09A2               	comf	___awdiv@quotient,f
  3816  0937  09A3               	comf	___awdiv@quotient+1,f
  3817  0938  0AA2               	incf	___awdiv@quotient,f
  3818  0939  1903               	skipnz
  3819  093A  0AA3               	incf	___awdiv@quotient+1,f
  3820  093B                     l2405:
  3821  093B  0823               	movf	___awdiv@quotient+1,w
  3822  093C  00F8               	movwf	?___awdiv+1
  3823  093D  0822               	movf	___awdiv@quotient,w
  3824  093E  00F7               	movwf	?___awdiv
  3825  093F                     l557:
  3826  093F  0008               	return
  3827  0940                     __end_of___awdiv:
  3828                           
  3829                           	psect	text5
  3830  19F4                     __ptext5:	
  3831 ;; *************** function _isdigit *****************
  3832 ;; Defined at:
  3833 ;;		line 8 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  c               1    wreg     unsigned char 
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;  c               1    1[COMMON] unsigned char 
  3838 ;; Return value:  Size  Location     Type
  3839 ;;		None               void
  3840 ;; Registers used:
  3841 ;;		wreg, status,2, status,0
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3847 ;;      Params:         0       0       0       0       0
  3848 ;;      Locals:         2       0       0       0       0
  3849 ;;      Temps:          0       0       0       0       0
  3850 ;;      Totals:         2       0       0       0       0
  3851 ;;Total ram usage:        2 bytes
  3852 ;; Hardware stack levels used:    1
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		_sprintf
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           
  3861                           ;psect for function _isdigit
  3862  19F4                     _isdigit:
  3863                           
  3864                           ;incstack = 0
  3865                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3866                           ;isdigit@c stored from wreg
  3867  19F4  00F1               	movwf	isdigit@c
  3868  19F5                     l2927:
  3869  19F5  01F0               	clrf	_isdigit$1033
  3870  19F6                     l2929:
  3871  19F6  303A               	movlw	58
  3872  19F7  0271               	subwf	isdigit@c,w
  3873  19F8  1803               	skipnc
  3874  19F9  29FB               	goto	u4331
  3875  19FA  29FC               	goto	u4330
  3876  19FB                     u4331:
  3877  19FB  2A04               	goto	l2935
  3878  19FC                     u4330:
  3879  19FC                     l2931:
  3880  19FC  3030               	movlw	48
  3881  19FD  0271               	subwf	isdigit@c,w
  3882  19FE  1C03               	skipc
  3883  19FF  2A01               	goto	u4341
  3884  1A00  2A02               	goto	u4340
  3885  1A01                     u4341:
  3886  1A01  2A04               	goto	l2935
  3887  1A02                     u4340:
  3888  1A02                     l2933:
  3889  1A02  01F0               	clrf	_isdigit$1033
  3890  1A03  0AF0               	incf	_isdigit$1033,f
  3891  1A04                     l2935:
  3892  1A04  0C70               	rrf	_isdigit$1033,w
  3893  1A05                     l891:
  3894  1A05  0008               	return
  3895  1A06                     __end_of_isdigit:
  3896                           
  3897                           	psect	text6
  3898  10AB                     __ptext6:	
  3899 ;; *************** function _fround *****************
  3900 ;; Defined at:
  3901 ;;		line 417 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  prec            1    wreg     unsigned char 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;  prec            1   49[BANK0 ] unsigned char 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  4   30[BANK0 ] unsigned char 
  3908 ;; Registers used:
  3909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3915 ;;      Params:         0       4       0       0       0
  3916 ;;      Locals:         0       9       0       0       0
  3917 ;;      Temps:          0       7       0       0       0
  3918 ;;      Totals:         0      20       0       0       0
  3919 ;;Total ram usage:       20 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; Hardware stack levels required when called:    2
  3922 ;; This function calls:
  3923 ;;		___flmul
  3924 ;;		___lwdiv
  3925 ;;		___lwmod
  3926 ;; This function is called by:
  3927 ;;		_sprintf
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           
  3932                           ;psect for function _fround
  3933  10AB                     _fround:
  3934                           
  3935                           ;incstack = 0
  3936                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3937                           ;fround@prec stored from wreg
  3938  10AB  1283               	bcf	3,5	;RP0=0, select bank0
  3939  10AC  1303               	bcf	3,6	;RP1=0, select bank0
  3940  10AD  00D1               	movwf	fround@prec
  3941  10AE                     l2869:
  3942                           
  3943                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsigned char prec)
      +                          ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418: {;D:\Microchip\xc8\v2.31\p
      +                          ic\sources\c90\common\doprnt.c: 421:  if(prec>=110)
  3944  10AE  306E               	movlw	110
  3945  10AF  0251               	subwf	fround@prec,w
  3946  10B0  1C03               	skipc
  3947  10B1  28B3               	goto	u4081
  3948  10B2  28B4               	goto	u4080
  3949  10B3                     u4081:
  3950  10B3  29C1               	goto	l2877
  3951  10B4                     u4080:
  3952  10B4                     l2871:
  3953                           
  3954                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[p
      +                          rec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3955  10B4  303F               	movlw	63
  3956  10B5  00A7               	movwf	___flmul@b+3
  3957  10B6  3000               	movlw	0
  3958  10B7  00A6               	movwf	___flmul@b+2
  3959  10B8  3000               	movlw	0
  3960  10B9  00A5               	movwf	___flmul@b+1
  3961  10BA  3000               	movlw	0
  3962  10BB  00A4               	movwf	___flmul@b
  3963  10BC  3064               	movlw	100
  3964  10BD  00F6               	movwf	___lwdiv@divisor
  3965  10BE  3000               	movlw	0
  3966  10BF  00F7               	movwf	___lwdiv@divisor+1
  3967  10C0  0851               	movf	fround@prec,w
  3968  10C1  00C2               	movwf	??_fround
  3969  10C2  01C3               	clrf	??_fround+1
  3970  10C3  0842               	movf	??_fround,w
  3971  10C4  00F8               	movwf	___lwdiv@dividend
  3972  10C5  0843               	movf	??_fround+1,w
  3973  10C6  00F9               	movwf	___lwdiv@dividend+1
  3974  10C7  160A  158A  23B2  160A  118A  	fcall	___lwdiv
  3975  10CC  0876               	movf	?___lwdiv,w
  3976  10CD  1283               	bcf	3,5	;RP0=0, select bank0
  3977  10CE  1303               	bcf	3,6	;RP1=0, select bank0
  3978  10CF  00C4               	movwf	??_fround+2
  3979  10D0  3001               	movlw	1
  3980  10D1                     u4095:
  3981  10D1  1003               	clrc
  3982  10D2  0DC4               	rlf	??_fround+2,f
  3983  10D3  3EFF               	addlw	-1
  3984  10D4  1D03               	skipz
  3985  10D5  28D1               	goto	u4095
  3986  10D6  1003               	clrc
  3987  10D7  0D44               	rlf	??_fround+2,w
  3988  10D8  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3989  10D9  0084               	movwf	4
  3990  10DA  120A  158A  200A  160A  118A  	fcall	stringdir
  3991  10DF  00C5               	movwf	??_fround+3
  3992  10E0  120A  158A  200A  160A  118A  	fcall	stringdir
  3993  10E5  00C6               	movwf	??_fround+4
  3994  10E6  120A  158A  200A  160A  118A  	fcall	stringdir
  3995  10EB  00C7               	movwf	??_fround+5
  3996  10EC  120A  158A  200A  160A  118A  	fcall	stringdir
  3997  10F1  00C8               	movwf	??_fround+6
  3998  10F2  0848               	movf	??_fround+6,w
  3999  10F3  00AB               	movwf	___flmul@a+3
  4000  10F4  0847               	movf	??_fround+5,w
  4001  10F5  00AA               	movwf	___flmul@a+2
  4002  10F6  0846               	movf	??_fround+4,w
  4003  10F7  00A9               	movwf	___flmul@a+1
  4004  10F8  0845               	movf	??_fround+3,w
  4005  10F9  00A8               	movwf	___flmul@a
  4006  10FA  120A  158A  249F  160A  118A  	fcall	___flmul
  4007  10FF  1283               	bcf	3,5	;RP0=0, select bank0
  4008  1100  1303               	bcf	3,6	;RP1=0, select bank0
  4009  1101  0827               	movf	?___flmul+3,w
  4010  1102  00D0               	movwf	_fround$1217+3
  4011  1103  0826               	movf	?___flmul+2,w
  4012  1104  00CF               	movwf	_fround$1217+2
  4013  1105  0825               	movf	?___flmul+1,w
  4014  1106  00CE               	movwf	_fround$1217+1
  4015  1107  0824               	movf	?___flmul,w
  4016  1108  00CD               	movwf	_fround$1217
  4017                           
  4018                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[p
      +                          rec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4019  1109  300A               	movlw	10
  4020  110A  00F6               	movwf	___lwdiv@divisor
  4021  110B  3000               	movlw	0
  4022  110C  00F7               	movwf	___lwdiv@divisor+1
  4023  110D  0851               	movf	fround@prec,w
  4024  110E  00C2               	movwf	??_fround
  4025  110F  01C3               	clrf	??_fround+1
  4026  1110  0842               	movf	??_fround,w
  4027  1111  00F2               	movwf	___lwmod@dividend
  4028  1112  0843               	movf	??_fround+1,w
  4029  1113  00F3               	movwf	___lwmod@dividend+1
  4030  1114  3064               	movlw	100
  4031  1115  00F0               	movwf	___lwmod@divisor
  4032  1116  3000               	movlw	0
  4033  1117  00F1               	movwf	___lwmod@divisor+1
  4034  1118  160A  158A  2336  160A  118A  	fcall	___lwmod
  4035  111D  0871               	movf	?___lwmod+1,w
  4036  111E  00F9               	movwf	___lwdiv@dividend+1
  4037  111F  0870               	movf	?___lwmod,w
  4038  1120  00F8               	movwf	___lwdiv@dividend
  4039  1121  160A  158A  23B2  160A  118A  	fcall	___lwdiv
  4040  1126  0876               	movf	?___lwdiv,w
  4041  1127  1283               	bcf	3,5	;RP0=0, select bank0
  4042  1128  1303               	bcf	3,6	;RP1=0, select bank0
  4043  1129  00C4               	movwf	??_fround+2
  4044  112A  3001               	movlw	1
  4045  112B                     u4105:
  4046  112B  1003               	clrc
  4047  112C  0DC4               	rlf	??_fround+2,f
  4048  112D  3EFF               	addlw	-1
  4049  112E  1D03               	skipz
  4050  112F  292B               	goto	u4105
  4051  1130  1003               	clrc
  4052  1131  0D44               	rlf	??_fround+2,w
  4053  1132  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4054  1133  0084               	movwf	4
  4055  1134  120A  158A  200A  160A  118A  	fcall	stringdir
  4056  1139  00C5               	movwf	??_fround+3
  4057  113A  120A  158A  200A  160A  118A  	fcall	stringdir
  4058  113F  00C6               	movwf	??_fround+4
  4059  1140  120A  158A  200A  160A  118A  	fcall	stringdir
  4060  1145  00C7               	movwf	??_fround+5
  4061  1146  120A  158A  200A  160A  118A  	fcall	stringdir
  4062  114B  00C8               	movwf	??_fround+6
  4063  114C  0848               	movf	??_fround+6,w
  4064  114D  00A7               	movwf	___flmul@b+3
  4065  114E  0847               	movf	??_fround+5,w
  4066  114F  00A6               	movwf	___flmul@b+2
  4067  1150  0846               	movf	??_fround+4,w
  4068  1151  00A5               	movwf	___flmul@b+1
  4069  1152  0845               	movf	??_fround+3,w
  4070  1153  00A4               	movwf	___flmul@b
  4071  1154  0850               	movf	_fround$1217+3,w
  4072  1155  00AB               	movwf	___flmul@a+3
  4073  1156  084F               	movf	_fround$1217+2,w
  4074  1157  00AA               	movwf	___flmul@a+2
  4075  1158  084E               	movf	_fround$1217+1,w
  4076  1159  00A9               	movwf	___flmul@a+1
  4077  115A  084D               	movf	_fround$1217,w
  4078  115B  00A8               	movwf	___flmul@a
  4079  115C  120A  158A  249F  160A  118A  	fcall	___flmul
  4080  1161  1283               	bcf	3,5	;RP0=0, select bank0
  4081  1162  1303               	bcf	3,6	;RP1=0, select bank0
  4082  1163  0827               	movf	?___flmul+3,w
  4083  1164  00CC               	movwf	_fround$1218+3
  4084  1165  0826               	movf	?___flmul+2,w
  4085  1166  00CB               	movwf	_fround$1218+2
  4086  1167  0825               	movf	?___flmul+1,w
  4087  1168  00CA               	movwf	_fround$1218+1
  4088  1169  0824               	movf	?___flmul,w
  4089  116A  00C9               	movwf	_fround$1218
  4090                           
  4091                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[p
      +                          rec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4092  116B  300A               	movlw	10
  4093  116C  00F0               	movwf	___lwmod@divisor
  4094  116D  3000               	movlw	0
  4095  116E  00F1               	movwf	___lwmod@divisor+1
  4096  116F  0851               	movf	fround@prec,w
  4097  1170  00C2               	movwf	??_fround
  4098  1171  01C3               	clrf	??_fround+1
  4099  1172  0842               	movf	??_fround,w
  4100  1173  00F2               	movwf	___lwmod@dividend
  4101  1174  0843               	movf	??_fround+1,w
  4102  1175  00F3               	movwf	___lwmod@dividend+1
  4103  1176  160A  158A  2336  160A  118A  	fcall	___lwmod
  4104  117B  0870               	movf	?___lwmod,w
  4105  117C  1283               	bcf	3,5	;RP0=0, select bank0
  4106  117D  1303               	bcf	3,6	;RP1=0, select bank0
  4107  117E  00C4               	movwf	??_fround+2
  4108  117F  3001               	movlw	1
  4109  1180                     u4115:
  4110  1180  1003               	clrc
  4111  1181  0DC4               	rlf	??_fround+2,f
  4112  1182  3EFF               	addlw	-1
  4113  1183  1D03               	skipz
  4114  1184  2980               	goto	u4115
  4115  1185  1003               	clrc
  4116  1186  0D44               	rlf	??_fround+2,w
  4117  1187  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4118  1188  0084               	movwf	4
  4119  1189  120A  158A  200A  160A  118A  	fcall	stringdir
  4120  118E  00C5               	movwf	??_fround+3
  4121  118F  120A  158A  200A  160A  118A  	fcall	stringdir
  4122  1194  00C6               	movwf	??_fround+4
  4123  1195  120A  158A  200A  160A  118A  	fcall	stringdir
  4124  119A  00C7               	movwf	??_fround+5
  4125  119B  120A  158A  200A  160A  118A  	fcall	stringdir
  4126  11A0  00C8               	movwf	??_fround+6
  4127  11A1  0848               	movf	??_fround+6,w
  4128  11A2  00A7               	movwf	___flmul@b+3
  4129  11A3  0847               	movf	??_fround+5,w
  4130  11A4  00A6               	movwf	___flmul@b+2
  4131  11A5  0846               	movf	??_fround+4,w
  4132  11A6  00A5               	movwf	___flmul@b+1
  4133  11A7  0845               	movf	??_fround+3,w
  4134  11A8  00A4               	movwf	___flmul@b
  4135  11A9  084C               	movf	_fround$1218+3,w
  4136  11AA  00AB               	movwf	___flmul@a+3
  4137  11AB  084B               	movf	_fround$1218+2,w
  4138  11AC  00AA               	movwf	___flmul@a+2
  4139  11AD  084A               	movf	_fround$1218+1,w
  4140  11AE  00A9               	movwf	___flmul@a+1
  4141  11AF  0849               	movf	_fround$1218,w
  4142  11B0  00A8               	movwf	___flmul@a
  4143  11B1  120A  158A  249F  160A  118A  	fcall	___flmul
  4144  11B6  1283               	bcf	3,5	;RP0=0, select bank0
  4145  11B7  1303               	bcf	3,6	;RP1=0, select bank0
  4146  11B8  0827               	movf	?___flmul+3,w
  4147  11B9  00C1               	movwf	?_fround+3
  4148  11BA  0826               	movf	?___flmul+2,w
  4149  11BB  00C0               	movwf	?_fround+2
  4150  11BC  0825               	movf	?___flmul+1,w
  4151  11BD  00BF               	movwf	?_fround+1
  4152  11BE  0824               	movf	?___flmul,w
  4153  11BF  00BE               	movwf	?_fround
  4154  11C0  2AB5               	goto	l301
  4155  11C1                     l2877:
  4156  11C1  300B               	movlw	11
  4157  11C2  0251               	subwf	fround@prec,w
  4158  11C3  1C03               	skipc
  4159  11C4  29C6               	goto	u4121
  4160  11C5  29C7               	goto	u4120
  4161  11C6                     u4121:
  4162  11C6  2A72               	goto	l2883
  4163  11C7                     u4120:
  4164  11C7                     l2879:
  4165                           
  4166                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[p
      +                          rec/10U+9U] * _npowers_[prec%10U];
  4167  11C7  303F               	movlw	63
  4168  11C8  00A7               	movwf	___flmul@b+3
  4169  11C9  3000               	movlw	0
  4170  11CA  00A6               	movwf	___flmul@b+2
  4171  11CB  3000               	movlw	0
  4172  11CC  00A5               	movwf	___flmul@b+1
  4173  11CD  3000               	movlw	0
  4174  11CE  00A4               	movwf	___flmul@b
  4175  11CF  300A               	movlw	10
  4176  11D0  00F6               	movwf	___lwdiv@divisor
  4177  11D1  3000               	movlw	0
  4178  11D2  00F7               	movwf	___lwdiv@divisor+1
  4179  11D3  0851               	movf	fround@prec,w
  4180  11D4  00C2               	movwf	??_fround
  4181  11D5  01C3               	clrf	??_fround+1
  4182  11D6  0842               	movf	??_fround,w
  4183  11D7  00F8               	movwf	___lwdiv@dividend
  4184  11D8  0843               	movf	??_fround+1,w
  4185  11D9  00F9               	movwf	___lwdiv@dividend+1
  4186  11DA  160A  158A  23B2  160A  118A  	fcall	___lwdiv
  4187  11DF  0876               	movf	?___lwdiv,w
  4188  11E0  1283               	bcf	3,5	;RP0=0, select bank0
  4189  11E1  1303               	bcf	3,6	;RP1=0, select bank0
  4190  11E2  00C4               	movwf	??_fround+2
  4191  11E3  3001               	movlw	1
  4192  11E4                     u4135:
  4193  11E4  1003               	clrc
  4194  11E5  0DC4               	rlf	??_fround+2,f
  4195  11E6  3EFF               	addlw	-1
  4196  11E7  1D03               	skipz
  4197  11E8  29E4               	goto	u4135
  4198  11E9  1003               	clrc
  4199  11EA  0D44               	rlf	??_fround+2,w
  4200  11EB  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4201  11EC  0084               	movwf	4
  4202  11ED  120A  158A  200A  160A  118A  	fcall	stringdir
  4203  11F2  00C5               	movwf	??_fround+3
  4204  11F3  120A  158A  200A  160A  118A  	fcall	stringdir
  4205  11F8  00C6               	movwf	??_fround+4
  4206  11F9  120A  158A  200A  160A  118A  	fcall	stringdir
  4207  11FE  00C7               	movwf	??_fround+5
  4208  11FF  120A  158A  200A  160A  118A  	fcall	stringdir
  4209  1204  00C8               	movwf	??_fround+6
  4210  1205  0848               	movf	??_fround+6,w
  4211  1206  00AB               	movwf	___flmul@a+3
  4212  1207  0847               	movf	??_fround+5,w
  4213  1208  00AA               	movwf	___flmul@a+2
  4214  1209  0846               	movf	??_fround+4,w
  4215  120A  00A9               	movwf	___flmul@a+1
  4216  120B  0845               	movf	??_fround+3,w
  4217  120C  00A8               	movwf	___flmul@a
  4218  120D  120A  158A  249F  160A  118A  	fcall	___flmul
  4219  1212  1283               	bcf	3,5	;RP0=0, select bank0
  4220  1213  1303               	bcf	3,6	;RP1=0, select bank0
  4221  1214  0827               	movf	?___flmul+3,w
  4222  1215  00D0               	movwf	_fround$1217+3
  4223  1216  0826               	movf	?___flmul+2,w
  4224  1217  00CF               	movwf	_fround$1217+2
  4225  1218  0825               	movf	?___flmul+1,w
  4226  1219  00CE               	movwf	_fround$1217+1
  4227  121A  0824               	movf	?___flmul,w
  4228  121B  00CD               	movwf	_fround$1217
  4229                           
  4230                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[p
      +                          rec/10U+9U] * _npowers_[prec%10U];
  4231  121C  300A               	movlw	10
  4232  121D  00F0               	movwf	___lwmod@divisor
  4233  121E  3000               	movlw	0
  4234  121F  00F1               	movwf	___lwmod@divisor+1
  4235  1220  0851               	movf	fround@prec,w
  4236  1221  00C2               	movwf	??_fround
  4237  1222  01C3               	clrf	??_fround+1
  4238  1223  0842               	movf	??_fround,w
  4239  1224  00F2               	movwf	___lwmod@dividend
  4240  1225  0843               	movf	??_fround+1,w
  4241  1226  00F3               	movwf	___lwmod@dividend+1
  4242  1227  160A  158A  2336  160A  118A  	fcall	___lwmod
  4243  122C  0870               	movf	?___lwmod,w
  4244  122D  1283               	bcf	3,5	;RP0=0, select bank0
  4245  122E  1303               	bcf	3,6	;RP1=0, select bank0
  4246  122F  00C4               	movwf	??_fround+2
  4247  1230  3001               	movlw	1
  4248  1231                     u4145:
  4249  1231  1003               	clrc
  4250  1232  0DC4               	rlf	??_fround+2,f
  4251  1233  3EFF               	addlw	-1
  4252  1234  1D03               	skipz
  4253  1235  2A31               	goto	u4145
  4254  1236  1003               	clrc
  4255  1237  0D44               	rlf	??_fround+2,w
  4256  1238  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4257  1239  0084               	movwf	4
  4258  123A  120A  158A  200A  160A  118A  	fcall	stringdir
  4259  123F  00C5               	movwf	??_fround+3
  4260  1240  120A  158A  200A  160A  118A  	fcall	stringdir
  4261  1245  00C6               	movwf	??_fround+4
  4262  1246  120A  158A  200A  160A  118A  	fcall	stringdir
  4263  124B  00C7               	movwf	??_fround+5
  4264  124C  120A  158A  200A  160A  118A  	fcall	stringdir
  4265  1251  00C8               	movwf	??_fround+6
  4266  1252  0848               	movf	??_fround+6,w
  4267  1253  00A7               	movwf	___flmul@b+3
  4268  1254  0847               	movf	??_fround+5,w
  4269  1255  00A6               	movwf	___flmul@b+2
  4270  1256  0846               	movf	??_fround+4,w
  4271  1257  00A5               	movwf	___flmul@b+1
  4272  1258  0845               	movf	??_fround+3,w
  4273  1259  00A4               	movwf	___flmul@b
  4274  125A  0850               	movf	_fround$1217+3,w
  4275  125B  00AB               	movwf	___flmul@a+3
  4276  125C  084F               	movf	_fround$1217+2,w
  4277  125D  00AA               	movwf	___flmul@a+2
  4278  125E  084E               	movf	_fround$1217+1,w
  4279  125F  00A9               	movwf	___flmul@a+1
  4280  1260  084D               	movf	_fround$1217,w
  4281  1261  00A8               	movwf	___flmul@a
  4282  1262  120A  158A  249F  160A  118A  	fcall	___flmul
  4283  1267  1283               	bcf	3,5	;RP0=0, select bank0
  4284  1268  1303               	bcf	3,6	;RP1=0, select bank0
  4285  1269  0827               	movf	?___flmul+3,w
  4286  126A  00C1               	movwf	?_fround+3
  4287  126B  0826               	movf	?___flmul+2,w
  4288  126C  00C0               	movwf	?_fround+2
  4289  126D  0825               	movf	?___flmul+1,w
  4290  126E  00BF               	movwf	?_fround+1
  4291  126F  0824               	movf	?___flmul,w
  4292  1270  00BE               	movwf	?_fround
  4293  1271  2AB5               	goto	l301
  4294  1272                     l2883:
  4295                           
  4296                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 * _npowers_[pr
      +                          ec];
  4297  1272  303F               	movlw	63
  4298  1273  00A7               	movwf	___flmul@b+3
  4299  1274  3000               	movlw	0
  4300  1275  00A6               	movwf	___flmul@b+2
  4301  1276  3000               	movlw	0
  4302  1277  00A5               	movwf	___flmul@b+1
  4303  1278  3000               	movlw	0
  4304  1279  00A4               	movwf	___flmul@b
  4305  127A  0851               	movf	fround@prec,w
  4306  127B  00C2               	movwf	??_fround
  4307  127C  3001               	movlw	1
  4308  127D                     u4155:
  4309  127D  1003               	clrc
  4310  127E  0DC2               	rlf	??_fround,f
  4311  127F  3EFF               	addlw	-1
  4312  1280  1D03               	skipz
  4313  1281  2A7D               	goto	u4155
  4314  1282  1003               	clrc
  4315  1283  0D42               	rlf	??_fround,w
  4316  1284  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4317  1285  0084               	movwf	4
  4318  1286  120A  158A  200A  160A  118A  	fcall	stringdir
  4319  128B  00C3               	movwf	??_fround+1
  4320  128C  120A  158A  200A  160A  118A  	fcall	stringdir
  4321  1291  00C4               	movwf	??_fround+2
  4322  1292  120A  158A  200A  160A  118A  	fcall	stringdir
  4323  1297  00C5               	movwf	??_fround+3
  4324  1298  120A  158A  200A  160A  118A  	fcall	stringdir
  4325  129D  00C6               	movwf	??_fround+4
  4326  129E  0846               	movf	??_fround+4,w
  4327  129F  00AB               	movwf	___flmul@a+3
  4328  12A0  0845               	movf	??_fround+3,w
  4329  12A1  00AA               	movwf	___flmul@a+2
  4330  12A2  0844               	movf	??_fround+2,w
  4331  12A3  00A9               	movwf	___flmul@a+1
  4332  12A4  0843               	movf	??_fround+1,w
  4333  12A5  00A8               	movwf	___flmul@a
  4334  12A6  120A  158A  249F  160A  118A  	fcall	___flmul
  4335  12AB  1283               	bcf	3,5	;RP0=0, select bank0
  4336  12AC  1303               	bcf	3,6	;RP1=0, select bank0
  4337  12AD  0827               	movf	?___flmul+3,w
  4338  12AE  00C1               	movwf	?_fround+3
  4339  12AF  0826               	movf	?___flmul+2,w
  4340  12B0  00C0               	movwf	?_fround+2
  4341  12B1  0825               	movf	?___flmul+1,w
  4342  12B2  00BF               	movwf	?_fround+1
  4343  12B3  0824               	movf	?___flmul,w
  4344  12B4  00BE               	movwf	?_fround
  4345  12B5                     l301:
  4346  12B5  0008               	return
  4347  12B6                     __end_of_fround:
  4348                           
  4349                           	psect	text7
  4350  1B36                     __ptext7:	
  4351 ;; *************** function ___lwmod *****************
  4352 ;; Defined at:
  4353 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;  divisor         2    0[COMMON] unsigned int 
  4356 ;;  dividend        2    2[COMMON] unsigned int 
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  counter         1    5[COMMON] unsigned char 
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  2    0[COMMON] unsigned int 
  4361 ;; Registers used:
  4362 ;;		wreg, status,2, status,0
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4368 ;;      Params:         4       0       0       0       0
  4369 ;;      Locals:         1       0       0       0       0
  4370 ;;      Temps:          1       0       0       0       0
  4371 ;;      Totals:         6       0       0       0       0
  4372 ;;Total ram usage:        6 bytes
  4373 ;; Hardware stack levels used:    1
  4374 ;; This function calls:
  4375 ;;		Nothing
  4376 ;; This function is called by:
  4377 ;;		_fround
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           
  4382                           ;psect for function ___lwmod
  4383  1B36                     ___lwmod:
  4384  1B36                     l2473:	
  4385                           ;incstack = 0
  4386                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4387                           
  4388  1B36  0870               	movf	___lwmod@divisor,w
  4389  1B37  0471               	iorwf	___lwmod@divisor+1,w
  4390  1B38  1903               	btfsc	3,2
  4391  1B39  2B3B               	goto	u3161
  4392  1B3A  2B3C               	goto	u3160
  4393  1B3B                     u3161:
  4394  1B3B  2B6B               	goto	l2491
  4395  1B3C                     u3160:
  4396  1B3C                     l2475:
  4397  1B3C  01F5               	clrf	___lwmod@counter
  4398  1B3D  0AF5               	incf	___lwmod@counter,f
  4399  1B3E  2B4A               	goto	l2481
  4400  1B3F                     l2477:
  4401  1B3F  3001               	movlw	1
  4402  1B40                     u3175:
  4403  1B40  1003               	clrc
  4404  1B41  0DF0               	rlf	___lwmod@divisor,f
  4405  1B42  0DF1               	rlf	___lwmod@divisor+1,f
  4406  1B43  3EFF               	addlw	-1
  4407  1B44  1D03               	skipz
  4408  1B45  2B40               	goto	u3175
  4409  1B46                     l2479:
  4410  1B46  3001               	movlw	1
  4411  1B47  00F4               	movwf	??___lwmod
  4412  1B48  0874               	movf	??___lwmod,w
  4413  1B49  07F5               	addwf	___lwmod@counter,f
  4414  1B4A                     l2481:
  4415  1B4A  1FF1               	btfss	___lwmod@divisor+1,7
  4416  1B4B  2B4D               	goto	u3181
  4417  1B4C  2B4E               	goto	u3180
  4418  1B4D                     u3181:
  4419  1B4D  2B3F               	goto	l2477
  4420  1B4E                     u3180:
  4421  1B4E                     l2483:
  4422  1B4E  0871               	movf	___lwmod@divisor+1,w
  4423  1B4F  0273               	subwf	___lwmod@dividend+1,w
  4424  1B50  1D03               	skipz
  4425  1B51  2B54               	goto	u3195
  4426  1B52  0870               	movf	___lwmod@divisor,w
  4427  1B53  0272               	subwf	___lwmod@dividend,w
  4428  1B54                     u3195:
  4429  1B54  1C03               	skipc
  4430  1B55  2B57               	goto	u3191
  4431  1B56  2B58               	goto	u3190
  4432  1B57                     u3191:
  4433  1B57  2B5E               	goto	l2487
  4434  1B58                     u3190:
  4435  1B58                     l2485:
  4436  1B58  0870               	movf	___lwmod@divisor,w
  4437  1B59  02F2               	subwf	___lwmod@dividend,f
  4438  1B5A  0871               	movf	___lwmod@divisor+1,w
  4439  1B5B  1C03               	skipc
  4440  1B5C  03F3               	decf	___lwmod@dividend+1,f
  4441  1B5D  02F3               	subwf	___lwmod@dividend+1,f
  4442  1B5E                     l2487:
  4443  1B5E  3001               	movlw	1
  4444  1B5F                     u3205:
  4445  1B5F  1003               	clrc
  4446  1B60  0CF1               	rrf	___lwmod@divisor+1,f
  4447  1B61  0CF0               	rrf	___lwmod@divisor,f
  4448  1B62  3EFF               	addlw	-1
  4449  1B63  1D03               	skipz
  4450  1B64  2B5F               	goto	u3205
  4451  1B65                     l2489:
  4452  1B65  3001               	movlw	1
  4453  1B66  02F5               	subwf	___lwmod@counter,f
  4454  1B67  1D03               	btfss	3,2
  4455  1B68  2B6A               	goto	u3211
  4456  1B69  2B6B               	goto	u3210
  4457  1B6A                     u3211:
  4458  1B6A  2B4E               	goto	l2483
  4459  1B6B                     u3210:
  4460  1B6B                     l2491:
  4461  1B6B  0873               	movf	___lwmod@dividend+1,w
  4462  1B6C  00F1               	movwf	?___lwmod+1
  4463  1B6D  0872               	movf	___lwmod@dividend,w
  4464  1B6E  00F0               	movwf	?___lwmod
  4465  1B6F                     l720:
  4466  1B6F  0008               	return
  4467  1B70                     __end_of___lwmod:
  4468                           
  4469                           	psect	text8
  4470  1BB2                     __ptext8:	
  4471 ;; *************** function ___lwdiv *****************
  4472 ;; Defined at:
  4473 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  divisor         2    6[COMMON] unsigned int 
  4476 ;;  dividend        2    8[COMMON] unsigned int 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  quotient        2   11[COMMON] unsigned int 
  4479 ;;  counter         1   13[COMMON] unsigned char 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  2    6[COMMON] unsigned int 
  4482 ;; Registers used:
  4483 ;;		wreg, status,2, status,0
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4489 ;;      Params:         4       0       0       0       0
  4490 ;;      Locals:         3       0       0       0       0
  4491 ;;      Temps:          1       0       0       0       0
  4492 ;;      Totals:         8       0       0       0       0
  4493 ;;Total ram usage:        8 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; This function calls:
  4496 ;;		Nothing
  4497 ;; This function is called by:
  4498 ;;		_fround
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           
  4503                           ;psect for function ___lwdiv
  4504  1BB2                     ___lwdiv:
  4505  1BB2                     l2447:	
  4506                           ;incstack = 0
  4507                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4508                           
  4509  1BB2  01FB               	clrf	___lwdiv@quotient
  4510  1BB3  01FC               	clrf	___lwdiv@quotient+1
  4511  1BB4                     l2449:
  4512  1BB4  0876               	movf	___lwdiv@divisor,w
  4513  1BB5  0477               	iorwf	___lwdiv@divisor+1,w
  4514  1BB6  1903               	btfsc	3,2
  4515  1BB7  2BB9               	goto	u3091
  4516  1BB8  2BBA               	goto	u3090
  4517  1BB9                     u3091:
  4518  1BB9  2BF1               	goto	l2469
  4519  1BBA                     u3090:
  4520  1BBA                     l2451:
  4521  1BBA  01FD               	clrf	___lwdiv@counter
  4522  1BBB  0AFD               	incf	___lwdiv@counter,f
  4523  1BBC  2BC8               	goto	l2457
  4524  1BBD                     l2453:
  4525  1BBD  3001               	movlw	1
  4526  1BBE                     u3105:
  4527  1BBE  1003               	clrc
  4528  1BBF  0DF6               	rlf	___lwdiv@divisor,f
  4529  1BC0  0DF7               	rlf	___lwdiv@divisor+1,f
  4530  1BC1  3EFF               	addlw	-1
  4531  1BC2  1D03               	skipz
  4532  1BC3  2BBE               	goto	u3105
  4533  1BC4                     l2455:
  4534  1BC4  3001               	movlw	1
  4535  1BC5  00FA               	movwf	??___lwdiv
  4536  1BC6  087A               	movf	??___lwdiv,w
  4537  1BC7  07FD               	addwf	___lwdiv@counter,f
  4538  1BC8                     l2457:
  4539  1BC8  1FF7               	btfss	___lwdiv@divisor+1,7
  4540  1BC9  2BCB               	goto	u3111
  4541  1BCA  2BCC               	goto	u3110
  4542  1BCB                     u3111:
  4543  1BCB  2BBD               	goto	l2453
  4544  1BCC                     u3110:
  4545  1BCC                     l2459:
  4546  1BCC  3001               	movlw	1
  4547  1BCD                     u3125:
  4548  1BCD  1003               	clrc
  4549  1BCE  0DFB               	rlf	___lwdiv@quotient,f
  4550  1BCF  0DFC               	rlf	___lwdiv@quotient+1,f
  4551  1BD0  3EFF               	addlw	-1
  4552  1BD1  1D03               	skipz
  4553  1BD2  2BCD               	goto	u3125
  4554  1BD3  0877               	movf	___lwdiv@divisor+1,w
  4555  1BD4  0279               	subwf	___lwdiv@dividend+1,w
  4556  1BD5  1D03               	skipz
  4557  1BD6  2BD9               	goto	u3135
  4558  1BD7  0876               	movf	___lwdiv@divisor,w
  4559  1BD8  0278               	subwf	___lwdiv@dividend,w
  4560  1BD9                     u3135:
  4561  1BD9  1C03               	skipc
  4562  1BDA  2BDC               	goto	u3131
  4563  1BDB  2BDD               	goto	u3130
  4564  1BDC                     u3131:
  4565  1BDC  2BE4               	goto	l2465
  4566  1BDD                     u3130:
  4567  1BDD                     l2461:
  4568  1BDD  0876               	movf	___lwdiv@divisor,w
  4569  1BDE  02F8               	subwf	___lwdiv@dividend,f
  4570  1BDF  0877               	movf	___lwdiv@divisor+1,w
  4571  1BE0  1C03               	skipc
  4572  1BE1  03F9               	decf	___lwdiv@dividend+1,f
  4573  1BE2  02F9               	subwf	___lwdiv@dividend+1,f
  4574  1BE3                     l2463:
  4575  1BE3  147B               	bsf	___lwdiv@quotient,0
  4576  1BE4                     l2465:
  4577  1BE4  3001               	movlw	1
  4578  1BE5                     u3145:
  4579  1BE5  1003               	clrc
  4580  1BE6  0CF7               	rrf	___lwdiv@divisor+1,f
  4581  1BE7  0CF6               	rrf	___lwdiv@divisor,f
  4582  1BE8  3EFF               	addlw	-1
  4583  1BE9  1D03               	skipz
  4584  1BEA  2BE5               	goto	u3145
  4585  1BEB                     l2467:
  4586  1BEB  3001               	movlw	1
  4587  1BEC  02FD               	subwf	___lwdiv@counter,f
  4588  1BED  1D03               	btfss	3,2
  4589  1BEE  2BF0               	goto	u3151
  4590  1BEF  2BF1               	goto	u3150
  4591  1BF0                     u3151:
  4592  1BF0  2BCC               	goto	l2459
  4593  1BF1                     u3150:
  4594  1BF1                     l2469:
  4595  1BF1  087C               	movf	___lwdiv@quotient+1,w
  4596  1BF2  00F7               	movwf	?___lwdiv+1
  4597  1BF3  087B               	movf	___lwdiv@quotient,w
  4598  1BF4  00F6               	movwf	?___lwdiv
  4599  1BF5                     l710:
  4600  1BF5  0008               	return
  4601  1BF6                     __end_of___lwdiv:
  4602                           
  4603                           	psect	text9
  4604  0C9F                     __ptext9:	
  4605 ;; *************** function ___flmul *****************
  4606 ;; Defined at:
  4607 ;;		line 8 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  b               4    4[BANK0 ] unsigned int 
  4610 ;;  a               4    8[BANK0 ] unsigned int 
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;  prod            4   24[BANK0 ] struct .
  4613 ;;  grs             4   18[BANK0 ] unsigned long 
  4614 ;;  temp            2   28[BANK0 ] struct .
  4615 ;;  bexp            1   23[BANK0 ] unsigned char 
  4616 ;;  aexp            1   22[BANK0 ] unsigned char 
  4617 ;;  sign            1   17[BANK0 ] unsigned char 
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  4    4[BANK0 ] unsigned char 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4627 ;;      Params:         0       8       0       0       0
  4628 ;;      Locals:         0      13       0       0       0
  4629 ;;      Temps:          0       5       0       0       0
  4630 ;;      Totals:         0      26       0       0       0
  4631 ;;Total ram usage:       26 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; Hardware stack levels required when called:    1
  4634 ;; This function calls:
  4635 ;;		__Umul8_16
  4636 ;; This function is called by:
  4637 ;;		_main
  4638 ;;		_fround
  4639 ;;		_scale
  4640 ;;		_sprintf
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           
  4645                           ;psect for function ___flmul
  4646  0C9F                     ___flmul:
  4647  0C9F                     l2689:	
  4648                           ;incstack = 0
  4649                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4650                           
  4651  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  4652  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  4653  0CA1  0827               	movf	___flmul@b+3,w
  4654  0CA2  3980               	andlw	128
  4655  0CA3  00AC               	movwf	??___flmul
  4656  0CA4  082C               	movf	??___flmul,w
  4657  0CA5  00B1               	movwf	___flmul@sign
  4658  0CA6                     l2691:
  4659  0CA6  0827               	movf	___flmul@b+3,w
  4660  0CA7  00AC               	movwf	??___flmul
  4661  0CA8  072C               	addwf	??___flmul,w
  4662  0CA9  00AD               	movwf	??___flmul+1
  4663  0CAA  082D               	movf	??___flmul+1,w
  4664  0CAB  00B7               	movwf	___flmul@bexp
  4665  0CAC                     l2693:
  4666  0CAC  1FA6               	btfss	___flmul@b+2,7
  4667  0CAD  2CAF               	goto	u3681
  4668  0CAE  2CB0               	goto	u3680
  4669  0CAF                     u3681:
  4670  0CAF  2CB1               	goto	l2697
  4671  0CB0                     u3680:
  4672  0CB0                     l2695:
  4673  0CB0  1437               	bsf	___flmul@bexp,0
  4674  0CB1                     l2697:
  4675  0CB1  0837               	movf	___flmul@bexp,w
  4676  0CB2  1903               	btfsc	3,2
  4677  0CB3  2CB5               	goto	u3691
  4678  0CB4  2CB6               	goto	u3690
  4679  0CB5                     u3691:
  4680  0CB5  2CC5               	goto	l2705
  4681  0CB6                     u3690:
  4682  0CB6                     l2699:
  4683  0CB6  0A37               	incf	___flmul@bexp,w
  4684  0CB7  1D03               	btfss	3,2
  4685  0CB8  2CBA               	goto	u3701
  4686  0CB9  2CBB               	goto	u3700
  4687  0CBA                     u3701:
  4688  0CBA  2CC3               	goto	l2703
  4689  0CBB                     u3700:
  4690  0CBB                     l2701:
  4691  0CBB  3000               	movlw	0
  4692  0CBC  00A7               	movwf	___flmul@b+3
  4693  0CBD  3000               	movlw	0
  4694  0CBE  00A6               	movwf	___flmul@b+2
  4695  0CBF  3000               	movlw	0
  4696  0CC0  00A5               	movwf	___flmul@b+1
  4697  0CC1  3000               	movlw	0
  4698  0CC2  00A4               	movwf	___flmul@b
  4699  0CC3                     l2703:
  4700  0CC3  17A6               	bsf	___flmul@b+2,7
  4701  0CC4  2CCD               	goto	l2707
  4702  0CC5                     l2705:
  4703  0CC5  3000               	movlw	0
  4704  0CC6  00A7               	movwf	___flmul@b+3
  4705  0CC7  3000               	movlw	0
  4706  0CC8  00A6               	movwf	___flmul@b+2
  4707  0CC9  3000               	movlw	0
  4708  0CCA  00A5               	movwf	___flmul@b+1
  4709  0CCB  3000               	movlw	0
  4710  0CCC  00A4               	movwf	___flmul@b
  4711  0CCD                     l2707:
  4712  0CCD  082B               	movf	___flmul@a+3,w
  4713  0CCE  3980               	andlw	128
  4714  0CCF  00AC               	movwf	??___flmul
  4715  0CD0  082C               	movf	??___flmul,w
  4716  0CD1  06B1               	xorwf	___flmul@sign,f
  4717  0CD2                     l2709:
  4718  0CD2  082B               	movf	___flmul@a+3,w
  4719  0CD3  00AC               	movwf	??___flmul
  4720  0CD4  072C               	addwf	??___flmul,w
  4721  0CD5  00AD               	movwf	??___flmul+1
  4722  0CD6  082D               	movf	??___flmul+1,w
  4723  0CD7  00B6               	movwf	___flmul@aexp
  4724  0CD8                     l2711:
  4725  0CD8  1FAA               	btfss	___flmul@a+2,7
  4726  0CD9  2CDB               	goto	u3711
  4727  0CDA  2CDC               	goto	u3710
  4728  0CDB                     u3711:
  4729  0CDB  2CDD               	goto	l2715
  4730  0CDC                     u3710:
  4731  0CDC                     l2713:
  4732  0CDC  1436               	bsf	___flmul@aexp,0
  4733  0CDD                     l2715:
  4734  0CDD  0836               	movf	___flmul@aexp,w
  4735  0CDE  1903               	btfsc	3,2
  4736  0CDF  2CE1               	goto	u3721
  4737  0CE0  2CE2               	goto	u3720
  4738  0CE1                     u3721:
  4739  0CE1  2CF1               	goto	l2723
  4740  0CE2                     u3720:
  4741  0CE2                     l2717:
  4742  0CE2  0A36               	incf	___flmul@aexp,w
  4743  0CE3  1D03               	btfss	3,2
  4744  0CE4  2CE6               	goto	u3731
  4745  0CE5  2CE7               	goto	u3730
  4746  0CE6                     u3731:
  4747  0CE6  2CEF               	goto	l2721
  4748  0CE7                     u3730:
  4749  0CE7                     l2719:
  4750  0CE7  3000               	movlw	0
  4751  0CE8  00AB               	movwf	___flmul@a+3
  4752  0CE9  3000               	movlw	0
  4753  0CEA  00AA               	movwf	___flmul@a+2
  4754  0CEB  3000               	movlw	0
  4755  0CEC  00A9               	movwf	___flmul@a+1
  4756  0CED  3000               	movlw	0
  4757  0CEE  00A8               	movwf	___flmul@a
  4758  0CEF                     l2721:
  4759  0CEF  17AA               	bsf	___flmul@a+2,7
  4760  0CF0  2CF9               	goto	l2725
  4761  0CF1                     l2723:
  4762  0CF1  3000               	movlw	0
  4763  0CF2  00AB               	movwf	___flmul@a+3
  4764  0CF3  3000               	movlw	0
  4765  0CF4  00AA               	movwf	___flmul@a+2
  4766  0CF5  3000               	movlw	0
  4767  0CF6  00A9               	movwf	___flmul@a+1
  4768  0CF7  3000               	movlw	0
  4769  0CF8  00A8               	movwf	___flmul@a
  4770  0CF9                     l2725:
  4771  0CF9  0836               	movf	___flmul@aexp,w
  4772  0CFA  1903               	btfsc	3,2
  4773  0CFB  2CFD               	goto	u3741
  4774  0CFC  2CFE               	goto	u3740
  4775  0CFD                     u3741:
  4776  0CFD  2D03               	goto	l2729
  4777  0CFE                     u3740:
  4778  0CFE                     l2727:
  4779  0CFE  0837               	movf	___flmul@bexp,w
  4780  0CFF  1D03               	btfss	3,2
  4781  0D00  2D02               	goto	u3751
  4782  0D01  2D03               	goto	u3750
  4783  0D02                     u3751:
  4784  0D02  2D0C               	goto	l2733
  4785  0D03                     u3750:
  4786  0D03                     l2729:
  4787  0D03  3000               	movlw	0
  4788  0D04  00A7               	movwf	?___flmul+3
  4789  0D05  3000               	movlw	0
  4790  0D06  00A6               	movwf	?___flmul+2
  4791  0D07  3000               	movlw	0
  4792  0D08  00A5               	movwf	?___flmul+1
  4793  0D09  3000               	movlw	0
  4794  0D0A  00A4               	movwf	?___flmul
  4795  0D0B  2FFF               	goto	l827
  4796  0D0C                     l2733:
  4797  0D0C  0824               	movf	___flmul@b,w
  4798  0D0D  00AC               	movwf	??___flmul
  4799  0D0E  082C               	movf	??___flmul,w
  4800  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  4801  0D10  082A               	movf	___flmul@a+2,w
  4802  0D11  160A  158A  22E4  120A  158A  	fcall	__Umul8_16
  4803  0D16  0871               	movf	?__Umul8_16+1,w
  4804  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  4805  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  4806  0D19  00BD               	movwf	___flmul@temp+1
  4807  0D1A  0870               	movf	?__Umul8_16,w
  4808  0D1B  00BC               	movwf	___flmul@temp
  4809  0D1C                     l2735:
  4810  0D1C  083C               	movf	___flmul@temp,w
  4811  0D1D  00AC               	movwf	??___flmul
  4812  0D1E  01AD               	clrf	??___flmul+1
  4813  0D1F  01AE               	clrf	??___flmul+2
  4814  0D20  01AF               	clrf	??___flmul+3
  4815  0D21  082F               	movf	??___flmul+3,w
  4816  0D22  00B5               	movwf	___flmul@grs+3
  4817  0D23  082E               	movf	??___flmul+2,w
  4818  0D24  00B4               	movwf	___flmul@grs+2
  4819  0D25  082D               	movf	??___flmul+1,w
  4820  0D26  00B3               	movwf	___flmul@grs+1
  4821  0D27  082C               	movf	??___flmul,w
  4822  0D28  00B2               	movwf	___flmul@grs
  4823  0D29                     l2737:
  4824  0D29  083D               	movf	___flmul@temp+1,w
  4825  0D2A  00AC               	movwf	??___flmul
  4826  0D2B  01AD               	clrf	??___flmul+1
  4827  0D2C  01AE               	clrf	??___flmul+2
  4828  0D2D  01AF               	clrf	??___flmul+3
  4829  0D2E  082F               	movf	??___flmul+3,w
  4830  0D2F  00BB               	movwf	___flmul@prod+3
  4831  0D30  082E               	movf	??___flmul+2,w
  4832  0D31  00BA               	movwf	___flmul@prod+2
  4833  0D32  082D               	movf	??___flmul+1,w
  4834  0D33  00B9               	movwf	___flmul@prod+1
  4835  0D34  082C               	movf	??___flmul,w
  4836  0D35  00B8               	movwf	___flmul@prod
  4837  0D36  0825               	movf	___flmul@b+1,w
  4838  0D37  00AC               	movwf	??___flmul
  4839  0D38  082C               	movf	??___flmul,w
  4840  0D39  00F0               	movwf	__Umul8_16@multiplicand
  4841  0D3A  0829               	movf	___flmul@a+1,w
  4842  0D3B  160A  158A  22E4  120A  158A  	fcall	__Umul8_16
  4843  0D40  0871               	movf	?__Umul8_16+1,w
  4844  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4845  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4846  0D43  00BD               	movwf	___flmul@temp+1
  4847  0D44  0870               	movf	?__Umul8_16,w
  4848  0D45  00BC               	movwf	___flmul@temp
  4849  0D46                     l2739:
  4850  0D46  083C               	movf	___flmul@temp,w
  4851  0D47  00AC               	movwf	??___flmul
  4852  0D48  01AD               	clrf	??___flmul+1
  4853  0D49  01AE               	clrf	??___flmul+2
  4854  0D4A  01AF               	clrf	??___flmul+3
  4855  0D4B  082C               	movf	??___flmul,w
  4856  0D4C  07B2               	addwf	___flmul@grs,f
  4857  0D4D  082D               	movf	??___flmul+1,w
  4858  0D4E  1103               	clrz
  4859  0D4F  1803               	skipnc
  4860  0D50  3E01               	addlw	1
  4861  0D51  1903               	skipnz
  4862  0D52  2D54               	goto	u3761
  4863  0D53  07B3               	addwf	___flmul@grs+1,f
  4864  0D54                     u3761:
  4865  0D54  082E               	movf	??___flmul+2,w
  4866  0D55  1103               	clrz
  4867  0D56  1803               	skipnc
  4868  0D57  3E01               	addlw	1
  4869  0D58  1903               	skipnz
  4870  0D59  2D5B               	goto	u3762
  4871  0D5A  07B4               	addwf	___flmul@grs+2,f
  4872  0D5B                     u3762:
  4873  0D5B  082F               	movf	??___flmul+3,w
  4874  0D5C  1103               	clrz
  4875  0D5D  1803               	skipnc
  4876  0D5E  3E01               	addlw	1
  4877  0D5F  1903               	skipnz
  4878  0D60  2D62               	goto	u3763
  4879  0D61  07B5               	addwf	___flmul@grs+3,f
  4880  0D62                     u3763:
  4881  0D62                     l2741:
  4882  0D62  083D               	movf	___flmul@temp+1,w
  4883  0D63  00AC               	movwf	??___flmul
  4884  0D64  01AD               	clrf	??___flmul+1
  4885  0D65  01AE               	clrf	??___flmul+2
  4886  0D66  01AF               	clrf	??___flmul+3
  4887  0D67  082C               	movf	??___flmul,w
  4888  0D68  07B8               	addwf	___flmul@prod,f
  4889  0D69  082D               	movf	??___flmul+1,w
  4890  0D6A  1103               	clrz
  4891  0D6B  1803               	skipnc
  4892  0D6C  3E01               	addlw	1
  4893  0D6D  1903               	skipnz
  4894  0D6E  2D70               	goto	u3771
  4895  0D6F  07B9               	addwf	___flmul@prod+1,f
  4896  0D70                     u3771:
  4897  0D70  082E               	movf	??___flmul+2,w
  4898  0D71  1103               	clrz
  4899  0D72  1803               	skipnc
  4900  0D73  3E01               	addlw	1
  4901  0D74  1903               	skipnz
  4902  0D75  2D77               	goto	u3772
  4903  0D76  07BA               	addwf	___flmul@prod+2,f
  4904  0D77                     u3772:
  4905  0D77  082F               	movf	??___flmul+3,w
  4906  0D78  1103               	clrz
  4907  0D79  1803               	skipnc
  4908  0D7A  3E01               	addlw	1
  4909  0D7B  1903               	skipnz
  4910  0D7C  2D7E               	goto	u3773
  4911  0D7D  07BB               	addwf	___flmul@prod+3,f
  4912  0D7E                     u3773:
  4913  0D7E  0826               	movf	___flmul@b+2,w
  4914  0D7F  00AC               	movwf	??___flmul
  4915  0D80  082C               	movf	??___flmul,w
  4916  0D81  00F0               	movwf	__Umul8_16@multiplicand
  4917  0D82  0828               	movf	___flmul@a,w
  4918  0D83  160A  158A  22E4  120A  158A  	fcall	__Umul8_16
  4919  0D88  0871               	movf	?__Umul8_16+1,w
  4920  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  4921  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  4922  0D8B  00BD               	movwf	___flmul@temp+1
  4923  0D8C  0870               	movf	?__Umul8_16,w
  4924  0D8D  00BC               	movwf	___flmul@temp
  4925  0D8E                     l2743:
  4926  0D8E  083C               	movf	___flmul@temp,w
  4927  0D8F  00AC               	movwf	??___flmul
  4928  0D90  01AD               	clrf	??___flmul+1
  4929  0D91  01AE               	clrf	??___flmul+2
  4930  0D92  01AF               	clrf	??___flmul+3
  4931  0D93  082C               	movf	??___flmul,w
  4932  0D94  07B2               	addwf	___flmul@grs,f
  4933  0D95  082D               	movf	??___flmul+1,w
  4934  0D96  1103               	clrz
  4935  0D97  1803               	skipnc
  4936  0D98  3E01               	addlw	1
  4937  0D99  1903               	skipnz
  4938  0D9A  2D9C               	goto	u3781
  4939  0D9B  07B3               	addwf	___flmul@grs+1,f
  4940  0D9C                     u3781:
  4941  0D9C  082E               	movf	??___flmul+2,w
  4942  0D9D  1103               	clrz
  4943  0D9E  1803               	skipnc
  4944  0D9F  3E01               	addlw	1
  4945  0DA0  1903               	skipnz
  4946  0DA1  2DA3               	goto	u3782
  4947  0DA2  07B4               	addwf	___flmul@grs+2,f
  4948  0DA3                     u3782:
  4949  0DA3  082F               	movf	??___flmul+3,w
  4950  0DA4  1103               	clrz
  4951  0DA5  1803               	skipnc
  4952  0DA6  3E01               	addlw	1
  4953  0DA7  1903               	skipnz
  4954  0DA8  2DAA               	goto	u3783
  4955  0DA9  07B5               	addwf	___flmul@grs+3,f
  4956  0DAA                     u3783:
  4957  0DAA                     l2745:
  4958  0DAA  083D               	movf	___flmul@temp+1,w
  4959  0DAB  00AC               	movwf	??___flmul
  4960  0DAC  01AD               	clrf	??___flmul+1
  4961  0DAD  01AE               	clrf	??___flmul+2
  4962  0DAE  01AF               	clrf	??___flmul+3
  4963  0DAF  082C               	movf	??___flmul,w
  4964  0DB0  07B8               	addwf	___flmul@prod,f
  4965  0DB1  082D               	movf	??___flmul+1,w
  4966  0DB2  1103               	clrz
  4967  0DB3  1803               	skipnc
  4968  0DB4  3E01               	addlw	1
  4969  0DB5  1903               	skipnz
  4970  0DB6  2DB8               	goto	u3791
  4971  0DB7  07B9               	addwf	___flmul@prod+1,f
  4972  0DB8                     u3791:
  4973  0DB8  082E               	movf	??___flmul+2,w
  4974  0DB9  1103               	clrz
  4975  0DBA  1803               	skipnc
  4976  0DBB  3E01               	addlw	1
  4977  0DBC  1903               	skipnz
  4978  0DBD  2DBF               	goto	u3792
  4979  0DBE  07BA               	addwf	___flmul@prod+2,f
  4980  0DBF                     u3792:
  4981  0DBF  082F               	movf	??___flmul+3,w
  4982  0DC0  1103               	clrz
  4983  0DC1  1803               	skipnc
  4984  0DC2  3E01               	addlw	1
  4985  0DC3  1903               	skipnz
  4986  0DC4  2DC6               	goto	u3793
  4987  0DC5  07BB               	addwf	___flmul@prod+3,f
  4988  0DC6                     u3793:
  4989  0DC6                     l2747:
  4990  0DC6  3008               	movlw	8
  4991  0DC7  00AC               	movwf	??___flmul
  4992  0DC8                     u3805:
  4993  0DC8  1003               	clrc
  4994  0DC9  0DB2               	rlf	___flmul@grs,f
  4995  0DCA  0DB3               	rlf	___flmul@grs+1,f
  4996  0DCB  0DB4               	rlf	___flmul@grs+2,f
  4997  0DCC  0DB5               	rlf	___flmul@grs+3,f
  4998  0DCD  0BAC               	decfsz	??___flmul,f
  4999  0DCE  2DC8               	goto	u3805
  5000  0DCF                     l2749:
  5001  0DCF  0825               	movf	___flmul@b+1,w
  5002  0DD0  00AC               	movwf	??___flmul
  5003  0DD1  082C               	movf	??___flmul,w
  5004  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  5005  0DD3  0828               	movf	___flmul@a,w
  5006  0DD4  160A  158A  22E4  120A  158A  	fcall	__Umul8_16
  5007  0DD9  0871               	movf	?__Umul8_16+1,w
  5008  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  5009  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  5010  0DDC  00BD               	movwf	___flmul@temp+1
  5011  0DDD  0870               	movf	?__Umul8_16,w
  5012  0DDE  00BC               	movwf	___flmul@temp
  5013  0DDF                     l2751:
  5014  0DDF  083C               	movf	___flmul@temp,w
  5015  0DE0  00AC               	movwf	??___flmul
  5016  0DE1  083D               	movf	___flmul@temp+1,w
  5017  0DE2  00AD               	movwf	??___flmul+1
  5018  0DE3  01AE               	clrf	??___flmul+2
  5019  0DE4  01AF               	clrf	??___flmul+3
  5020  0DE5  082C               	movf	??___flmul,w
  5021  0DE6  07B2               	addwf	___flmul@grs,f
  5022  0DE7  082D               	movf	??___flmul+1,w
  5023  0DE8  1103               	clrz
  5024  0DE9  1803               	skipnc
  5025  0DEA  3E01               	addlw	1
  5026  0DEB  1903               	skipnz
  5027  0DEC  2DEE               	goto	u3811
  5028  0DED  07B3               	addwf	___flmul@grs+1,f
  5029  0DEE                     u3811:
  5030  0DEE  082E               	movf	??___flmul+2,w
  5031  0DEF  1103               	clrz
  5032  0DF0  1803               	skipnc
  5033  0DF1  3E01               	addlw	1
  5034  0DF2  1903               	skipnz
  5035  0DF3  2DF5               	goto	u3812
  5036  0DF4  07B4               	addwf	___flmul@grs+2,f
  5037  0DF5                     u3812:
  5038  0DF5  082F               	movf	??___flmul+3,w
  5039  0DF6  1103               	clrz
  5040  0DF7  1803               	skipnc
  5041  0DF8  3E01               	addlw	1
  5042  0DF9  1903               	skipnz
  5043  0DFA  2DFC               	goto	u3813
  5044  0DFB  07B5               	addwf	___flmul@grs+3,f
  5045  0DFC                     u3813:
  5046  0DFC                     l2753:
  5047  0DFC  0824               	movf	___flmul@b,w
  5048  0DFD  00AC               	movwf	??___flmul
  5049  0DFE  082C               	movf	??___flmul,w
  5050  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  5051  0E00  0829               	movf	___flmul@a+1,w
  5052  0E01  160A  158A  22E4  120A  158A  	fcall	__Umul8_16
  5053  0E06  0871               	movf	?__Umul8_16+1,w
  5054  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  5055  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  5056  0E09  00BD               	movwf	___flmul@temp+1
  5057  0E0A  0870               	movf	?__Umul8_16,w
  5058  0E0B  00BC               	movwf	___flmul@temp
  5059  0E0C                     l2755:
  5060  0E0C  083C               	movf	___flmul@temp,w
  5061  0E0D  00AC               	movwf	??___flmul
  5062  0E0E  083D               	movf	___flmul@temp+1,w
  5063  0E0F  00AD               	movwf	??___flmul+1
  5064  0E10  01AE               	clrf	??___flmul+2
  5065  0E11  01AF               	clrf	??___flmul+3
  5066  0E12  082C               	movf	??___flmul,w
  5067  0E13  07B2               	addwf	___flmul@grs,f
  5068  0E14  082D               	movf	??___flmul+1,w
  5069  0E15  1103               	clrz
  5070  0E16  1803               	skipnc
  5071  0E17  3E01               	addlw	1
  5072  0E18  1903               	skipnz
  5073  0E19  2E1B               	goto	u3821
  5074  0E1A  07B3               	addwf	___flmul@grs+1,f
  5075  0E1B                     u3821:
  5076  0E1B  082E               	movf	??___flmul+2,w
  5077  0E1C  1103               	clrz
  5078  0E1D  1803               	skipnc
  5079  0E1E  3E01               	addlw	1
  5080  0E1F  1903               	skipnz
  5081  0E20  2E22               	goto	u3822
  5082  0E21  07B4               	addwf	___flmul@grs+2,f
  5083  0E22                     u3822:
  5084  0E22  082F               	movf	??___flmul+3,w
  5085  0E23  1103               	clrz
  5086  0E24  1803               	skipnc
  5087  0E25  3E01               	addlw	1
  5088  0E26  1903               	skipnz
  5089  0E27  2E29               	goto	u3823
  5090  0E28  07B5               	addwf	___flmul@grs+3,f
  5091  0E29                     u3823:
  5092  0E29                     l2757:
  5093  0E29  3008               	movlw	8
  5094  0E2A  00AC               	movwf	??___flmul
  5095  0E2B                     u3835:
  5096  0E2B  1003               	clrc
  5097  0E2C  0DB2               	rlf	___flmul@grs,f
  5098  0E2D  0DB3               	rlf	___flmul@grs+1,f
  5099  0E2E  0DB4               	rlf	___flmul@grs+2,f
  5100  0E2F  0DB5               	rlf	___flmul@grs+3,f
  5101  0E30  0BAC               	decfsz	??___flmul,f
  5102  0E31  2E2B               	goto	u3835
  5103  0E32  0824               	movf	___flmul@b,w
  5104  0E33  00AC               	movwf	??___flmul
  5105  0E34  082C               	movf	??___flmul,w
  5106  0E35  00F0               	movwf	__Umul8_16@multiplicand
  5107  0E36  0828               	movf	___flmul@a,w
  5108  0E37  160A  158A  22E4  120A  158A  	fcall	__Umul8_16
  5109  0E3C  0871               	movf	?__Umul8_16+1,w
  5110  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5111  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5112  0E3F  00BD               	movwf	___flmul@temp+1
  5113  0E40  0870               	movf	?__Umul8_16,w
  5114  0E41  00BC               	movwf	___flmul@temp
  5115  0E42                     l2759:
  5116  0E42  083C               	movf	___flmul@temp,w
  5117  0E43  00AC               	movwf	??___flmul
  5118  0E44  083D               	movf	___flmul@temp+1,w
  5119  0E45  00AD               	movwf	??___flmul+1
  5120  0E46  01AE               	clrf	??___flmul+2
  5121  0E47  01AF               	clrf	??___flmul+3
  5122  0E48  082C               	movf	??___flmul,w
  5123  0E49  07B2               	addwf	___flmul@grs,f
  5124  0E4A  082D               	movf	??___flmul+1,w
  5125  0E4B  1103               	clrz
  5126  0E4C  1803               	skipnc
  5127  0E4D  3E01               	addlw	1
  5128  0E4E  1903               	skipnz
  5129  0E4F  2E51               	goto	u3841
  5130  0E50  07B3               	addwf	___flmul@grs+1,f
  5131  0E51                     u3841:
  5132  0E51  082E               	movf	??___flmul+2,w
  5133  0E52  1103               	clrz
  5134  0E53  1803               	skipnc
  5135  0E54  3E01               	addlw	1
  5136  0E55  1903               	skipnz
  5137  0E56  2E58               	goto	u3842
  5138  0E57  07B4               	addwf	___flmul@grs+2,f
  5139  0E58                     u3842:
  5140  0E58  082F               	movf	??___flmul+3,w
  5141  0E59  1103               	clrz
  5142  0E5A  1803               	skipnc
  5143  0E5B  3E01               	addlw	1
  5144  0E5C  1903               	skipnz
  5145  0E5D  2E5F               	goto	u3843
  5146  0E5E  07B5               	addwf	___flmul@grs+3,f
  5147  0E5F                     u3843:
  5148  0E5F                     l2761:
  5149  0E5F  0825               	movf	___flmul@b+1,w
  5150  0E60  00AC               	movwf	??___flmul
  5151  0E61  082C               	movf	??___flmul,w
  5152  0E62  00F0               	movwf	__Umul8_16@multiplicand
  5153  0E63  082A               	movf	___flmul@a+2,w
  5154  0E64  160A  158A  22E4  120A  158A  	fcall	__Umul8_16
  5155  0E69  0871               	movf	?__Umul8_16+1,w
  5156  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  5157  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  5158  0E6C  00BD               	movwf	___flmul@temp+1
  5159  0E6D  0870               	movf	?__Umul8_16,w
  5160  0E6E  00BC               	movwf	___flmul@temp
  5161  0E6F  083C               	movf	___flmul@temp,w
  5162  0E70  00AC               	movwf	??___flmul
  5163  0E71  083D               	movf	___flmul@temp+1,w
  5164  0E72  00AD               	movwf	??___flmul+1
  5165  0E73  01AE               	clrf	??___flmul+2
  5166  0E74  01AF               	clrf	??___flmul+3
  5167  0E75  082C               	movf	??___flmul,w
  5168  0E76  07B8               	addwf	___flmul@prod,f
  5169  0E77  082D               	movf	??___flmul+1,w
  5170  0E78  1103               	clrz
  5171  0E79  1803               	skipnc
  5172  0E7A  3E01               	addlw	1
  5173  0E7B  1903               	skipnz
  5174  0E7C  2E7E               	goto	u3851
  5175  0E7D  07B9               	addwf	___flmul@prod+1,f
  5176  0E7E                     u3851:
  5177  0E7E  082E               	movf	??___flmul+2,w
  5178  0E7F  1103               	clrz
  5179  0E80  1803               	skipnc
  5180  0E81  3E01               	addlw	1
  5181  0E82  1903               	skipnz
  5182  0E83  2E85               	goto	u3852
  5183  0E84  07BA               	addwf	___flmul@prod+2,f
  5184  0E85                     u3852:
  5185  0E85  082F               	movf	??___flmul+3,w
  5186  0E86  1103               	clrz
  5187  0E87  1803               	skipnc
  5188  0E88  3E01               	addlw	1
  5189  0E89  1903               	skipnz
  5190  0E8A  2E8C               	goto	u3853
  5191  0E8B  07BB               	addwf	___flmul@prod+3,f
  5192  0E8C                     u3853:
  5193  0E8C                     l2763:
  5194  0E8C  0826               	movf	___flmul@b+2,w
  5195  0E8D  00AC               	movwf	??___flmul
  5196  0E8E  082C               	movf	??___flmul,w
  5197  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  5198  0E90  0829               	movf	___flmul@a+1,w
  5199  0E91  160A  158A  22E4  120A  158A  	fcall	__Umul8_16
  5200  0E96  0871               	movf	?__Umul8_16+1,w
  5201  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  5202  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  5203  0E99  00BD               	movwf	___flmul@temp+1
  5204  0E9A  0870               	movf	?__Umul8_16,w
  5205  0E9B  00BC               	movwf	___flmul@temp
  5206  0E9C                     l2765:
  5207  0E9C  083C               	movf	___flmul@temp,w
  5208  0E9D  00AC               	movwf	??___flmul
  5209  0E9E  083D               	movf	___flmul@temp+1,w
  5210  0E9F  00AD               	movwf	??___flmul+1
  5211  0EA0  01AE               	clrf	??___flmul+2
  5212  0EA1  01AF               	clrf	??___flmul+3
  5213  0EA2  082C               	movf	??___flmul,w
  5214  0EA3  07B8               	addwf	___flmul@prod,f
  5215  0EA4  082D               	movf	??___flmul+1,w
  5216  0EA5  1103               	clrz
  5217  0EA6  1803               	skipnc
  5218  0EA7  3E01               	addlw	1
  5219  0EA8  1903               	skipnz
  5220  0EA9  2EAB               	goto	u3861
  5221  0EAA  07B9               	addwf	___flmul@prod+1,f
  5222  0EAB                     u3861:
  5223  0EAB  082E               	movf	??___flmul+2,w
  5224  0EAC  1103               	clrz
  5225  0EAD  1803               	skipnc
  5226  0EAE  3E01               	addlw	1
  5227  0EAF  1903               	skipnz
  5228  0EB0  2EB2               	goto	u3862
  5229  0EB1  07BA               	addwf	___flmul@prod+2,f
  5230  0EB2                     u3862:
  5231  0EB2  082F               	movf	??___flmul+3,w
  5232  0EB3  1103               	clrz
  5233  0EB4  1803               	skipnc
  5234  0EB5  3E01               	addlw	1
  5235  0EB6  1903               	skipnz
  5236  0EB7  2EB9               	goto	u3863
  5237  0EB8  07BB               	addwf	___flmul@prod+3,f
  5238  0EB9                     u3863:
  5239  0EB9  0826               	movf	___flmul@b+2,w
  5240  0EBA  00AC               	movwf	??___flmul
  5241  0EBB  082C               	movf	??___flmul,w
  5242  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  5243  0EBD  082A               	movf	___flmul@a+2,w
  5244  0EBE  160A  158A  22E4  120A  158A  	fcall	__Umul8_16
  5245  0EC3  0871               	movf	?__Umul8_16+1,w
  5246  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  5247  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  5248  0EC6  00BD               	movwf	___flmul@temp+1
  5249  0EC7  0870               	movf	?__Umul8_16,w
  5250  0EC8  00BC               	movwf	___flmul@temp
  5251  0EC9                     l2767:
  5252  0EC9  083C               	movf	___flmul@temp,w
  5253  0ECA  00AC               	movwf	??___flmul
  5254  0ECB  083D               	movf	___flmul@temp+1,w
  5255  0ECC  00AD               	movwf	??___flmul+1
  5256  0ECD  01AE               	clrf	??___flmul+2
  5257  0ECE  01AF               	clrf	??___flmul+3
  5258  0ECF  3008               	movlw	8
  5259  0ED0                     u3875:
  5260  0ED0  1003               	clrc
  5261  0ED1  0DAC               	rlf	??___flmul,f
  5262  0ED2  0DAD               	rlf	??___flmul+1,f
  5263  0ED3  0DAE               	rlf	??___flmul+2,f
  5264  0ED4  0DAF               	rlf	??___flmul+3,f
  5265  0ED5                     u3870:
  5266  0ED5  3EFF               	addlw	-1
  5267  0ED6  1D03               	skipz
  5268  0ED7  2ED0               	goto	u3875
  5269  0ED8  082C               	movf	??___flmul,w
  5270  0ED9  07B8               	addwf	___flmul@prod,f
  5271  0EDA  082D               	movf	??___flmul+1,w
  5272  0EDB  1103               	clrz
  5273  0EDC  1803               	skipnc
  5274  0EDD  3E01               	addlw	1
  5275  0EDE  1903               	skipnz
  5276  0EDF  2EE1               	goto	u3881
  5277  0EE0  07B9               	addwf	___flmul@prod+1,f
  5278  0EE1                     u3881:
  5279  0EE1  082E               	movf	??___flmul+2,w
  5280  0EE2  1103               	clrz
  5281  0EE3  1803               	skipnc
  5282  0EE4  3E01               	addlw	1
  5283  0EE5  1903               	skipnz
  5284  0EE6  2EE8               	goto	u3882
  5285  0EE7  07BA               	addwf	___flmul@prod+2,f
  5286  0EE8                     u3882:
  5287  0EE8  082F               	movf	??___flmul+3,w
  5288  0EE9  1103               	clrz
  5289  0EEA  1803               	skipnc
  5290  0EEB  3E01               	addlw	1
  5291  0EEC  1903               	skipnz
  5292  0EED  2EEF               	goto	u3883
  5293  0EEE  07BB               	addwf	___flmul@prod+3,f
  5294  0EEF                     u3883:
  5295  0EEF                     l2769:
  5296  0EEF  0832               	movf	___flmul@grs,w
  5297  0EF0  00AC               	movwf	??___flmul
  5298  0EF1  0833               	movf	___flmul@grs+1,w
  5299  0EF2  00AD               	movwf	??___flmul+1
  5300  0EF3  0834               	movf	___flmul@grs+2,w
  5301  0EF4  00AE               	movwf	??___flmul+2
  5302  0EF5  0835               	movf	___flmul@grs+3,w
  5303  0EF6  00AF               	movwf	??___flmul+3
  5304  0EF7  3018               	movlw	24
  5305  0EF8                     u3895:
  5306  0EF8  1003               	clrc
  5307  0EF9  0CAF               	rrf	??___flmul+3,f
  5308  0EFA  0CAE               	rrf	??___flmul+2,f
  5309  0EFB  0CAD               	rrf	??___flmul+1,f
  5310  0EFC  0CAC               	rrf	??___flmul,f
  5311  0EFD                     u3890:
  5312  0EFD  3EFF               	addlw	-1
  5313  0EFE  1D03               	skipz
  5314  0EFF  2EF8               	goto	u3895
  5315  0F00  082C               	movf	??___flmul,w
  5316  0F01  07B8               	addwf	___flmul@prod,f
  5317  0F02  082D               	movf	??___flmul+1,w
  5318  0F03  1103               	clrz
  5319  0F04  1803               	skipnc
  5320  0F05  3E01               	addlw	1
  5321  0F06  1903               	skipnz
  5322  0F07  2F09               	goto	u3901
  5323  0F08  07B9               	addwf	___flmul@prod+1,f
  5324  0F09                     u3901:
  5325  0F09  082E               	movf	??___flmul+2,w
  5326  0F0A  1103               	clrz
  5327  0F0B  1803               	skipnc
  5328  0F0C  3E01               	addlw	1
  5329  0F0D  1903               	skipnz
  5330  0F0E  2F10               	goto	u3902
  5331  0F0F  07BA               	addwf	___flmul@prod+2,f
  5332  0F10                     u3902:
  5333  0F10  082F               	movf	??___flmul+3,w
  5334  0F11  1103               	clrz
  5335  0F12  1803               	skipnc
  5336  0F13  3E01               	addlw	1
  5337  0F14  1903               	skipnz
  5338  0F15  2F17               	goto	u3903
  5339  0F16  07BB               	addwf	___flmul@prod+3,f
  5340  0F17                     u3903:
  5341  0F17                     l2771:
  5342  0F17  3008               	movlw	8
  5343  0F18  00AC               	movwf	??___flmul
  5344  0F19                     u3915:
  5345  0F19  1003               	clrc
  5346  0F1A  0DB2               	rlf	___flmul@grs,f
  5347  0F1B  0DB3               	rlf	___flmul@grs+1,f
  5348  0F1C  0DB4               	rlf	___flmul@grs+2,f
  5349  0F1D  0DB5               	rlf	___flmul@grs+3,f
  5350  0F1E  0BAC               	decfsz	??___flmul,f
  5351  0F1F  2F19               	goto	u3915
  5352  0F20                     l2773:
  5353  0F20  0837               	movf	___flmul@bexp,w
  5354  0F21  0736               	addwf	___flmul@aexp,w
  5355  0F22  00AC               	movwf	??___flmul
  5356  0F23  01AD               	clrf	??___flmul+1
  5357  0F24  0DAD               	rlf	??___flmul+1,f
  5358  0F25  082C               	movf	??___flmul,w
  5359  0F26  3E82               	addlw	130
  5360  0F27  00BC               	movwf	___flmul@temp
  5361  0F28  082D               	movf	??___flmul+1,w
  5362  0F29  1803               	skipnc
  5363  0F2A  3E01               	addlw	1
  5364  0F2B  3EFF               	addlw	255
  5365  0F2C  00BD               	movwf	___flmul@temp+1
  5366  0F2D  2F4B               	goto	l2785
  5367  0F2E                     l2775:
  5368  0F2E  3001               	movlw	1
  5369  0F2F  00AC               	movwf	??___flmul
  5370  0F30                     u3925:
  5371  0F30  1003               	clrc
  5372  0F31  0DB8               	rlf	___flmul@prod,f
  5373  0F32  0DB9               	rlf	___flmul@prod+1,f
  5374  0F33  0DBA               	rlf	___flmul@prod+2,f
  5375  0F34  0DBB               	rlf	___flmul@prod+3,f
  5376  0F35  0BAC               	decfsz	??___flmul,f
  5377  0F36  2F30               	goto	u3925
  5378  0F37                     l2777:
  5379  0F37  1FB5               	btfss	___flmul@grs+3,7
  5380  0F38  2F3A               	goto	u3931
  5381  0F39  2F3B               	goto	u3930
  5382  0F3A                     u3931:
  5383  0F3A  2F3C               	goto	l2781
  5384  0F3B                     u3930:
  5385  0F3B                     l2779:
  5386  0F3B  1438               	bsf	___flmul@prod,0
  5387  0F3C                     l2781:
  5388  0F3C  3001               	movlw	1
  5389  0F3D  00AC               	movwf	??___flmul
  5390  0F3E                     u3945:
  5391  0F3E  1003               	clrc
  5392  0F3F  0DB2               	rlf	___flmul@grs,f
  5393  0F40  0DB3               	rlf	___flmul@grs+1,f
  5394  0F41  0DB4               	rlf	___flmul@grs+2,f
  5395  0F42  0DB5               	rlf	___flmul@grs+3,f
  5396  0F43  0BAC               	decfsz	??___flmul,f
  5397  0F44  2F3E               	goto	u3945
  5398  0F45                     l2783:
  5399  0F45  30FF               	movlw	255
  5400  0F46  07BC               	addwf	___flmul@temp,f
  5401  0F47  1803               	skipnc
  5402  0F48  0ABD               	incf	___flmul@temp+1,f
  5403  0F49  30FF               	movlw	255
  5404  0F4A  07BD               	addwf	___flmul@temp+1,f
  5405  0F4B                     l2785:
  5406  0F4B  1FBA               	btfss	___flmul@prod+2,7
  5407  0F4C  2F4E               	goto	u3951
  5408  0F4D  2F4F               	goto	u3950
  5409  0F4E                     u3951:
  5410  0F4E  2F2E               	goto	l2775
  5411  0F4F                     u3950:
  5412  0F4F                     l2787:
  5413  0F4F  01B6               	clrf	___flmul@aexp
  5414  0F50                     l2789:
  5415  0F50  1FB5               	btfss	___flmul@grs+3,7
  5416  0F51  2F53               	goto	u3961
  5417  0F52  2F54               	goto	u3960
  5418  0F53                     u3961:
  5419  0F53  2F70               	goto	l2797
  5420  0F54                     u3960:
  5421  0F54                     l2791:
  5422  0F54  30FF               	movlw	255
  5423  0F55  0532               	andwf	___flmul@grs,w
  5424  0F56  00AC               	movwf	??___flmul
  5425  0F57  30FF               	movlw	255
  5426  0F58  0533               	andwf	___flmul@grs+1,w
  5427  0F59  00AD               	movwf	??___flmul+1
  5428  0F5A  30FF               	movlw	255
  5429  0F5B  0534               	andwf	___flmul@grs+2,w
  5430  0F5C  00AE               	movwf	??___flmul+2
  5431  0F5D  307F               	movlw	127
  5432  0F5E  0535               	andwf	___flmul@grs+3,w
  5433  0F5F  00AF               	movwf	??___flmul+3
  5434  0F60  082F               	movf	??___flmul+3,w
  5435  0F61  042E               	iorwf	??___flmul+2,w
  5436  0F62  042D               	iorwf	??___flmul+1,w
  5437  0F63  042C               	iorwf	??___flmul,w
  5438  0F64  1903               	skipnz
  5439  0F65  2F67               	goto	u3971
  5440  0F66  2F68               	goto	u3970
  5441  0F67                     u3971:
  5442  0F67  2F6B               	goto	l833
  5443  0F68                     u3970:
  5444  0F68                     l2793:
  5445  0F68  01B6               	clrf	___flmul@aexp
  5446  0F69  0AB6               	incf	___flmul@aexp,f
  5447  0F6A  2F70               	goto	l2797
  5448  0F6B                     l833:
  5449  0F6B  1C38               	btfss	___flmul@prod,0
  5450  0F6C  2F6E               	goto	u3981
  5451  0F6D  2F6F               	goto	u3980
  5452  0F6E                     u3981:
  5453  0F6E  2F70               	goto	l2797
  5454  0F6F                     u3980:
  5455  0F6F  2F68               	goto	l2793
  5456  0F70                     l2797:
  5457  0F70  0836               	movf	___flmul@aexp,w
  5458  0F71  1903               	btfsc	3,2
  5459  0F72  2F74               	goto	u3991
  5460  0F73  2F75               	goto	u3990
  5461  0F74                     u3991:
  5462  0F74  2FA6               	goto	l2807
  5463  0F75                     u3990:
  5464  0F75                     l2799:
  5465  0F75  3001               	movlw	1
  5466  0F76  07B8               	addwf	___flmul@prod,f
  5467  0F77  3000               	movlw	0
  5468  0F78  1803               	skipnc
  5469  0F79  3001               	movlw	1
  5470  0F7A  07B9               	addwf	___flmul@prod+1,f
  5471  0F7B  3000               	movlw	0
  5472  0F7C  1803               	skipnc
  5473  0F7D  3001               	movlw	1
  5474  0F7E  07BA               	addwf	___flmul@prod+2,f
  5475  0F7F  3000               	movlw	0
  5476  0F80  1803               	skipnc
  5477  0F81  3001               	movlw	1
  5478  0F82  07BB               	addwf	___flmul@prod+3,f
  5479  0F83                     l2801:
  5480  0F83  1C3B               	btfss	___flmul@prod+3,0
  5481  0F84  2F86               	goto	u4001
  5482  0F85  2F87               	goto	u4000
  5483  0F86                     u4001:
  5484  0F86  2FA6               	goto	l2807
  5485  0F87                     u4000:
  5486  0F87                     l2803:
  5487  0F87  0838               	movf	___flmul@prod,w
  5488  0F88  00AC               	movwf	??___flmul
  5489  0F89  0839               	movf	___flmul@prod+1,w
  5490  0F8A  00AD               	movwf	??___flmul+1
  5491  0F8B  083A               	movf	___flmul@prod+2,w
  5492  0F8C  00AE               	movwf	??___flmul+2
  5493  0F8D  083B               	movf	___flmul@prod+3,w
  5494  0F8E  00AF               	movwf	??___flmul+3
  5495  0F8F  3001               	movlw	1
  5496  0F90  00B0               	movwf	??___flmul+4
  5497  0F91                     u4015:
  5498  0F91  0D2F               	rlf	??___flmul+3,w
  5499  0F92  0CAF               	rrf	??___flmul+3,f
  5500  0F93  0CAE               	rrf	??___flmul+2,f
  5501  0F94  0CAD               	rrf	??___flmul+1,f
  5502  0F95  0CAC               	rrf	??___flmul,f
  5503  0F96                     u4010:
  5504  0F96  0BB0               	decfsz	??___flmul+4,f
  5505  0F97  2F91               	goto	u4015
  5506  0F98  082F               	movf	??___flmul+3,w
  5507  0F99  00BB               	movwf	___flmul@prod+3
  5508  0F9A  082E               	movf	??___flmul+2,w
  5509  0F9B  00BA               	movwf	___flmul@prod+2
  5510  0F9C  082D               	movf	??___flmul+1,w
  5511  0F9D  00B9               	movwf	___flmul@prod+1
  5512  0F9E  082C               	movf	??___flmul,w
  5513  0F9F  00B8               	movwf	___flmul@prod
  5514  0FA0                     l2805:
  5515  0FA0  3001               	movlw	1
  5516  0FA1  07BC               	addwf	___flmul@temp,f
  5517  0FA2  1803               	skipnc
  5518  0FA3  0ABD               	incf	___flmul@temp+1,f
  5519  0FA4  3000               	movlw	0
  5520  0FA5  07BD               	addwf	___flmul@temp+1,f
  5521  0FA6                     l2807:
  5522  0FA6  083D               	movf	___flmul@temp+1,w
  5523  0FA7  3A80               	xorlw	128
  5524  0FA8  00FF               	movwf	btemp+1
  5525  0FA9  3080               	movlw	128
  5526  0FAA  027F               	subwf	btemp+1,w
  5527  0FAB  1D03               	skipz
  5528  0FAC  2FAF               	goto	u4025
  5529  0FAD  30FF               	movlw	255
  5530  0FAE  023C               	subwf	___flmul@temp,w
  5531  0FAF                     u4025:
  5532  0FAF  1C03               	skipc
  5533  0FB0  2FB2               	goto	u4021
  5534  0FB1  2FB3               	goto	u4020
  5535  0FB2                     u4021:
  5536  0FB2  2FBE               	goto	l2811
  5537  0FB3                     u4020:
  5538  0FB3                     l2809:
  5539  0FB3  307F               	movlw	127
  5540  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  5541  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  5542  0FB6  00BB               	movwf	___flmul@prod+3
  5543  0FB7  3080               	movlw	128
  5544  0FB8  00BA               	movwf	___flmul@prod+2
  5545  0FB9  3000               	movlw	0
  5546  0FBA  00B9               	movwf	___flmul@prod+1
  5547  0FBB  3000               	movlw	0
  5548  0FBC  00B8               	movwf	___flmul@prod
  5549  0FBD  2FF3               	goto	l839
  5550  0FBE                     l2811:
  5551  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  5552  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  5553  0FC0  083D               	movf	___flmul@temp+1,w
  5554  0FC1  3A80               	xorlw	128
  5555  0FC2  00FF               	movwf	btemp+1
  5556  0FC3  3080               	movlw	128
  5557  0FC4  027F               	subwf	btemp+1,w
  5558  0FC5  1D03               	skipz
  5559  0FC6  2FC9               	goto	u4035
  5560  0FC7  3001               	movlw	1
  5561  0FC8  023C               	subwf	___flmul@temp,w
  5562  0FC9                     u4035:
  5563  0FC9  1803               	skipnc
  5564  0FCA  2FCC               	goto	u4031
  5565  0FCB  2FCD               	goto	u4030
  5566  0FCC                     u4031:
  5567  0FCC  2FD9               	goto	l2817
  5568  0FCD                     u4030:
  5569  0FCD                     l2813:
  5570  0FCD  3000               	movlw	0
  5571  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  5572  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  5573  0FD0  00BB               	movwf	___flmul@prod+3
  5574  0FD1  3000               	movlw	0
  5575  0FD2  00BA               	movwf	___flmul@prod+2
  5576  0FD3  3000               	movlw	0
  5577  0FD4  00B9               	movwf	___flmul@prod+1
  5578  0FD5  3000               	movlw	0
  5579  0FD6  00B8               	movwf	___flmul@prod
  5580  0FD7                     l2815:
  5581  0FD7  01B1               	clrf	___flmul@sign
  5582  0FD8  2FF3               	goto	l839
  5583  0FD9                     l2817:
  5584  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  5585  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  5586  0FDB  083C               	movf	___flmul@temp,w
  5587  0FDC  00AC               	movwf	??___flmul
  5588  0FDD  082C               	movf	??___flmul,w
  5589  0FDE  00B7               	movwf	___flmul@bexp
  5590  0FDF  30FF               	movlw	255
  5591  0FE0  05B8               	andwf	___flmul@prod,f
  5592  0FE1  30FF               	movlw	255
  5593  0FE2  05B9               	andwf	___flmul@prod+1,f
  5594  0FE3  307F               	movlw	127
  5595  0FE4  05BA               	andwf	___flmul@prod+2,f
  5596  0FE5  3000               	movlw	0
  5597  0FE6  05BB               	andwf	___flmul@prod+3,f
  5598  0FE7                     l2819:
  5599  0FE7  1C37               	btfss	___flmul@bexp,0
  5600  0FE8  2FEA               	goto	u4041
  5601  0FE9  2FEB               	goto	u4040
  5602  0FEA                     u4041:
  5603  0FEA  2FEC               	goto	l2823
  5604  0FEB                     u4040:
  5605  0FEB                     l2821:
  5606  0FEB  17BA               	bsf	___flmul@prod+2,7
  5607  0FEC                     l2823:
  5608  0FEC  0837               	movf	___flmul@bexp,w
  5609  0FED  00AC               	movwf	??___flmul
  5610  0FEE  1003               	clrc
  5611  0FEF  0C2C               	rrf	??___flmul,w
  5612  0FF0  00AD               	movwf	??___flmul+1
  5613  0FF1  082D               	movf	??___flmul+1,w
  5614  0FF2  00BB               	movwf	___flmul@prod+3
  5615  0FF3                     l839:
  5616  0FF3  0831               	movf	___flmul@sign,w
  5617  0FF4  00AC               	movwf	??___flmul
  5618  0FF5  082C               	movf	??___flmul,w
  5619  0FF6  04BB               	iorwf	___flmul@prod+3,f
  5620  0FF7                     l2825:
  5621  0FF7  083B               	movf	___flmul@prod+3,w
  5622  0FF8  00A7               	movwf	?___flmul+3
  5623  0FF9  083A               	movf	___flmul@prod+2,w
  5624  0FFA  00A6               	movwf	?___flmul+2
  5625  0FFB  0839               	movf	___flmul@prod+1,w
  5626  0FFC  00A5               	movwf	?___flmul+1
  5627  0FFD  0838               	movf	___flmul@prod,w
  5628  0FFE  00A4               	movwf	?___flmul
  5629  0FFF                     l827:
  5630  0FFF  0008               	return
  5631  1000                     __end_of___flmul:
  5632                           
  5633                           	psect	text10
  5634  1AE4                     __ptext10:	
  5635 ;; *************** function __Umul8_16 *****************
  5636 ;; Defined at:
  5637 ;;		line 4 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5638 ;; Parameters:    Size  Location     Type
  5639 ;;  multiplier      1    wreg     unsigned char 
  5640 ;;  multiplicand    1    0[COMMON] unsigned char 
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;  multiplier      1    8[COMMON] unsigned char 
  5643 ;;  word_mpld       2    6[COMMON] unsigned int 
  5644 ;;  product         2    4[COMMON] unsigned int 
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  2    0[COMMON] unsigned int 
  5647 ;; Registers used:
  5648 ;;		wreg, status,2, status,0
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5654 ;;      Params:         2       0       0       0       0
  5655 ;;      Locals:         5       0       0       0       0
  5656 ;;      Temps:          2       0       0       0       0
  5657 ;;      Totals:         9       0       0       0       0
  5658 ;;Total ram usage:        9 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; This function calls:
  5661 ;;		Nothing
  5662 ;; This function is called by:
  5663 ;;		___flmul
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           
  5668                           ;psect for function __Umul8_16
  5669  1AE4                     __Umul8_16:
  5670                           
  5671                           ;incstack = 0
  5672                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5673                           ;__Umul8_16@multiplier stored from wreg
  5674  1AE4  00F8               	movwf	__Umul8_16@multiplier
  5675  1AE5                     l2349:
  5676  1AE5  01F4               	clrf	__Umul8_16@product
  5677  1AE6  01F5               	clrf	__Umul8_16@product+1
  5678  1AE7                     l2351:
  5679  1AE7  0870               	movf	__Umul8_16@multiplicand,w
  5680  1AE8  00F2               	movwf	??__Umul8_16
  5681  1AE9  01F3               	clrf	??__Umul8_16+1
  5682  1AEA  0872               	movf	??__Umul8_16,w
  5683  1AEB  00F6               	movwf	__Umul8_16@word_mpld
  5684  1AEC  0873               	movf	??__Umul8_16+1,w
  5685  1AED  00F7               	movwf	__Umul8_16@word_mpld+1
  5686  1AEE                     l2353:
  5687  1AEE  1C78               	btfss	__Umul8_16@multiplier,0
  5688  1AEF  2AF1               	goto	u2871
  5689  1AF0  2AF2               	goto	u2870
  5690  1AF1                     u2871:
  5691  1AF1  2AF8               	goto	l846
  5692  1AF2                     u2870:
  5693  1AF2                     l2355:
  5694  1AF2  0876               	movf	__Umul8_16@word_mpld,w
  5695  1AF3  07F4               	addwf	__Umul8_16@product,f
  5696  1AF4  1803               	skipnc
  5697  1AF5  0AF5               	incf	__Umul8_16@product+1,f
  5698  1AF6  0877               	movf	__Umul8_16@word_mpld+1,w
  5699  1AF7  07F5               	addwf	__Umul8_16@product+1,f
  5700  1AF8                     l846:
  5701  1AF8  3001               	movlw	1
  5702  1AF9                     u2885:
  5703  1AF9  1003               	clrc
  5704  1AFA  0DF6               	rlf	__Umul8_16@word_mpld,f
  5705  1AFB  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5706  1AFC  3EFF               	addlw	-1
  5707  1AFD  1D03               	skipz
  5708  1AFE  2AF9               	goto	u2885
  5709  1AFF  1003               	clrc
  5710  1B00  0CF8               	rrf	__Umul8_16@multiplier,f
  5711  1B01                     l2357:
  5712  1B01  0878               	movf	__Umul8_16@multiplier,w
  5713  1B02  1D03               	btfss	3,2
  5714  1B03  2B05               	goto	u2891
  5715  1B04  2B06               	goto	u2890
  5716  1B05                     u2891:
  5717  1B05  2AEE               	goto	l2353
  5718  1B06                     u2890:
  5719  1B06                     l2359:
  5720  1B06  0875               	movf	__Umul8_16@product+1,w
  5721  1B07  00F1               	movwf	?__Umul8_16+1
  5722  1B08  0874               	movf	__Umul8_16@product,w
  5723  1B09  00F0               	movwf	?__Umul8_16
  5724  1B0A                     l848:
  5725  1B0A  0008               	return
  5726  1B0B                     __end_of__Umul8_16:
  5727                           
  5728                           	psect	text11
  5729  1E85                     __ptext11:	
  5730 ;; *************** function __tdiv_to_l_ *****************
  5731 ;; Defined at:
  5732 ;;		line 60 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;  f1              4    0[COMMON] float 
  5735 ;;  f2              4    4[COMMON] float 
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;  quot            4    0[BANK0 ] unsigned long 
  5738 ;;  exp1            1    5[BANK0 ] unsigned char 
  5739 ;;  cntr            1    4[BANK0 ] unsigned char 
  5740 ;; Return value:  Size  Location     Type
  5741 ;;                  4    0[COMMON] unsigned long 
  5742 ;; Registers used:
  5743 ;;		wreg, status,2, status,0
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5749 ;;      Params:         8       0       0       0       0
  5750 ;;      Locals:         0       6       0       0       0
  5751 ;;      Temps:          4       0       0       0       0
  5752 ;;      Totals:        12       6       0       0       0
  5753 ;;Total ram usage:       18 bytes
  5754 ;; Hardware stack levels used:    1
  5755 ;; This function calls:
  5756 ;;		Nothing
  5757 ;; This function is called by:
  5758 ;;		_sprintf
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           
  5763                           ;psect for function __tdiv_to_l_
  5764  1E85                     __tdiv_to_l_:
  5765  1E85                     l2939:	
  5766                           ;incstack = 0
  5767                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5768                           
  5769  1E85  0870               	movf	__tdiv_to_l_@f1,w
  5770  1E86  00F8               	movwf	??__tdiv_to_l_
  5771  1E87  0871               	movf	__tdiv_to_l_@f1+1,w
  5772  1E88  00F9               	movwf	??__tdiv_to_l_+1
  5773  1E89  0872               	movf	__tdiv_to_l_@f1+2,w
  5774  1E8A  00FA               	movwf	??__tdiv_to_l_+2
  5775  1E8B  1003               	clrc
  5776  1E8C  0D79               	rlf	??__tdiv_to_l_+1,w
  5777  1E8D  0D7A               	rlf	??__tdiv_to_l_+2,w
  5778  1E8E  00FB               	movwf	??__tdiv_to_l_+3
  5779  1E8F  087B               	movf	??__tdiv_to_l_+3,w
  5780  1E90  1283               	bcf	3,5	;RP0=0, select bank0
  5781  1E91  1303               	bcf	3,6	;RP1=0, select bank0
  5782  1E92  00A5               	movwf	__tdiv_to_l_@exp1
  5783  1E93  0825               	movf	__tdiv_to_l_@exp1,w
  5784  1E94  1D03               	btfss	3,2
  5785  1E95  2E97               	goto	u4351
  5786  1E96  2E98               	goto	u4350
  5787  1E97                     u4351:
  5788  1E97  2EA1               	goto	l2945
  5789  1E98                     u4350:
  5790  1E98                     l2941:
  5791  1E98  3000               	movlw	0
  5792  1E99  00F3               	movwf	?__tdiv_to_l_+3
  5793  1E9A  3000               	movlw	0
  5794  1E9B  00F2               	movwf	?__tdiv_to_l_+2
  5795  1E9C  3000               	movlw	0
  5796  1E9D  00F1               	movwf	?__tdiv_to_l_+1
  5797  1E9E  3000               	movlw	0
  5798  1E9F  00F0               	movwf	?__tdiv_to_l_
  5799  1EA0  2F41               	goto	l621
  5800  1EA1                     l2945:
  5801  1EA1  0874               	movf	__tdiv_to_l_@f2,w
  5802  1EA2  00F8               	movwf	??__tdiv_to_l_
  5803  1EA3  0875               	movf	__tdiv_to_l_@f2+1,w
  5804  1EA4  00F9               	movwf	??__tdiv_to_l_+1
  5805  1EA5  0876               	movf	__tdiv_to_l_@f2+2,w
  5806  1EA6  00FA               	movwf	??__tdiv_to_l_+2
  5807  1EA7  1003               	clrc
  5808  1EA8  0D79               	rlf	??__tdiv_to_l_+1,w
  5809  1EA9  0D7A               	rlf	??__tdiv_to_l_+2,w
  5810  1EAA  00FB               	movwf	??__tdiv_to_l_+3
  5811  1EAB  087B               	movf	??__tdiv_to_l_+3,w
  5812  1EAC  00A4               	movwf	__tdiv_to_l_@cntr
  5813  1EAD  0824               	movf	__tdiv_to_l_@cntr,w
  5814  1EAE  1D03               	btfss	3,2
  5815  1EAF  2EB1               	goto	u4361
  5816  1EB0  2EB2               	goto	u4360
  5817  1EB1                     u4361:
  5818  1EB1  2EB3               	goto	l622
  5819  1EB2                     u4360:
  5820  1EB2  2E98               	goto	l2941
  5821  1EB3                     l622:
  5822  1EB3  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5823  1EB4                     l2951:
  5824  1EB4  30FF               	movlw	255
  5825  1EB5  05F0               	andwf	__tdiv_to_l_@f1,f
  5826  1EB6  30FF               	movlw	255
  5827  1EB7  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5828  1EB8  3000               	movlw	0
  5829  1EB9  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5830  1EBA                     l2953:
  5831  1EBA  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5832  1EBB  30FF               	movlw	255
  5833  1EBC  05F4               	andwf	__tdiv_to_l_@f2,f
  5834  1EBD  30FF               	movlw	255
  5835  1EBE  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5836  1EBF  3000               	movlw	0
  5837  1EC0  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5838  1EC1  3000               	movlw	0
  5839  1EC2  00A3               	movwf	__tdiv_to_l_@quot+3
  5840  1EC3  3000               	movlw	0
  5841  1EC4  00A2               	movwf	__tdiv_to_l_@quot+2
  5842  1EC5  3000               	movlw	0
  5843  1EC6  00A1               	movwf	__tdiv_to_l_@quot+1
  5844  1EC7  3000               	movlw	0
  5845  1EC8  00A0               	movwf	__tdiv_to_l_@quot
  5846  1EC9                     l2955:
  5847  1EC9  307F               	movlw	127
  5848  1ECA  02A5               	subwf	__tdiv_to_l_@exp1,f
  5849  1ECB                     l2957:
  5850  1ECB  3098               	movlw	152
  5851  1ECC  0724               	addwf	__tdiv_to_l_@cntr,w
  5852  1ECD  00F8               	movwf	??__tdiv_to_l_
  5853  1ECE  0878               	movf	??__tdiv_to_l_,w
  5854  1ECF  02A5               	subwf	__tdiv_to_l_@exp1,f
  5855  1ED0  3018               	movlw	24
  5856  1ED1  00F8               	movwf	??__tdiv_to_l_
  5857  1ED2  0878               	movf	??__tdiv_to_l_,w
  5858  1ED3  00A4               	movwf	__tdiv_to_l_@cntr
  5859  1ED4                     l2959:
  5860  1ED4  3001               	movlw	1
  5861  1ED5  00F8               	movwf	??__tdiv_to_l_
  5862  1ED6                     u4375:
  5863  1ED6  1003               	clrc
  5864  1ED7  0DA0               	rlf	__tdiv_to_l_@quot,f
  5865  1ED8  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5866  1ED9  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5867  1EDA  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5868  1EDB  0BF8               	decfsz	??__tdiv_to_l_,f
  5869  1EDC  2ED6               	goto	u4375
  5870  1EDD                     l2961:
  5871  1EDD  0876               	movf	__tdiv_to_l_@f2+2,w
  5872  1EDE  0272               	subwf	__tdiv_to_l_@f1+2,w
  5873  1EDF  1D03               	skipz
  5874  1EE0  2EE7               	goto	u4385
  5875  1EE1  0875               	movf	__tdiv_to_l_@f2+1,w
  5876  1EE2  0271               	subwf	__tdiv_to_l_@f1+1,w
  5877  1EE3  1D03               	skipz
  5878  1EE4  2EE7               	goto	u4385
  5879  1EE5  0874               	movf	__tdiv_to_l_@f2,w
  5880  1EE6  0270               	subwf	__tdiv_to_l_@f1,w
  5881  1EE7                     u4385:
  5882  1EE7  1C03               	skipc
  5883  1EE8  2EEA               	goto	u4381
  5884  1EE9  2EEB               	goto	u4380
  5885  1EEA                     u4381:
  5886  1EEA  2EF6               	goto	l2967
  5887  1EEB                     u4380:
  5888  1EEB                     l2963:
  5889  1EEB  0874               	movf	__tdiv_to_l_@f2,w
  5890  1EEC  02F0               	subwf	__tdiv_to_l_@f1,f
  5891  1EED  0875               	movf	__tdiv_to_l_@f2+1,w
  5892  1EEE  1C03               	skipc
  5893  1EEF  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5894  1EF0  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5895  1EF1  0876               	movf	__tdiv_to_l_@f2+2,w
  5896  1EF2  1C03               	skipc
  5897  1EF3  0A76               	incf	__tdiv_to_l_@f2+2,w
  5898  1EF4  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5899  1EF5                     l2965:
  5900  1EF5  1420               	bsf	__tdiv_to_l_@quot,0
  5901  1EF6                     l2967:
  5902  1EF6  3001               	movlw	1
  5903  1EF7                     u4395:
  5904  1EF7  1003               	clrc
  5905  1EF8  0DF0               	rlf	__tdiv_to_l_@f1,f
  5906  1EF9  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5907  1EFA  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5908  1EFB  3EFF               	addlw	-1
  5909  1EFC  1D03               	skipz
  5910  1EFD  2EF7               	goto	u4395
  5911  1EFE                     l2969:
  5912  1EFE  3001               	movlw	1
  5913  1EFF  02A4               	subwf	__tdiv_to_l_@cntr,f
  5914  1F00  1D03               	btfss	3,2
  5915  1F01  2F03               	goto	u4401
  5916  1F02  2F04               	goto	u4400
  5917  1F03                     u4401:
  5918  1F03  2ED4               	goto	l2959
  5919  1F04                     u4400:
  5920  1F04                     l625:
  5921  1F04  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5922  1F05  2F07               	goto	u4411
  5923  1F06  2F08               	goto	u4410
  5924  1F07                     u4411:
  5925  1F07  2F22               	goto	l2979
  5926  1F08                     u4410:
  5927  1F08                     l2971:
  5928  1F08  0825               	movf	__tdiv_to_l_@exp1,w
  5929  1F09  3A80               	xorlw	128
  5930  1F0A  3E97               	addlw	151
  5931  1F0B  1803               	skipnc
  5932  1F0C  2F0E               	goto	u4421
  5933  1F0D  2F0F               	goto	u4420
  5934  1F0E                     u4421:
  5935  1F0E  2F10               	goto	l2977
  5936  1F0F                     u4420:
  5937  1F0F  2E98               	goto	l2941
  5938  1F10                     l2977:
  5939  1F10  3001               	movlw	1
  5940  1F11                     u4435:
  5941  1F11  1003               	clrc
  5942  1F12  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5943  1F13  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5944  1F14  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5945  1F15  0CA0               	rrf	__tdiv_to_l_@quot,f
  5946  1F16  3EFF               	addlw	-1
  5947  1F17  1D03               	skipz
  5948  1F18  2F11               	goto	u4435
  5949  1F19  3001               	movlw	1
  5950  1F1A  00F8               	movwf	??__tdiv_to_l_
  5951  1F1B  0878               	movf	??__tdiv_to_l_,w
  5952  1F1C  07A5               	addwf	__tdiv_to_l_@exp1,f
  5953  1F1D  1D03               	btfss	3,2
  5954  1F1E  2F20               	goto	u4441
  5955  1F1F  2F21               	goto	u4440
  5956  1F20                     u4441:
  5957  1F20  2F10               	goto	l2977
  5958  1F21                     u4440:
  5959  1F21  2F39               	goto	l2987
  5960  1F22                     l2979:
  5961  1F22  3018               	movlw	24
  5962  1F23  0225               	subwf	__tdiv_to_l_@exp1,w
  5963  1F24  1C03               	skipc
  5964  1F25  2F27               	goto	u4451
  5965  1F26  2F28               	goto	u4450
  5966  1F27                     u4451:
  5967  1F27  2F34               	goto	l632
  5968  1F28                     u4450:
  5969  1F28  2E98               	goto	l2941
  5970  1F29                     l2985:
  5971  1F29  3001               	movlw	1
  5972  1F2A  00F8               	movwf	??__tdiv_to_l_
  5973  1F2B                     u4465:
  5974  1F2B  1003               	clrc
  5975  1F2C  0DA0               	rlf	__tdiv_to_l_@quot,f
  5976  1F2D  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5977  1F2E  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5978  1F2F  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5979  1F30  0BF8               	decfsz	??__tdiv_to_l_,f
  5980  1F31  2F2B               	goto	u4465
  5981  1F32  3001               	movlw	1
  5982  1F33  02A5               	subwf	__tdiv_to_l_@exp1,f
  5983  1F34                     l632:
  5984  1F34  0825               	movf	__tdiv_to_l_@exp1,w
  5985  1F35  1D03               	btfss	3,2
  5986  1F36  2F38               	goto	u4471
  5987  1F37  2F39               	goto	u4470
  5988  1F38                     u4471:
  5989  1F38  2F29               	goto	l2985
  5990  1F39                     u4470:
  5991  1F39                     l2987:
  5992  1F39  0823               	movf	__tdiv_to_l_@quot+3,w
  5993  1F3A  00F3               	movwf	?__tdiv_to_l_+3
  5994  1F3B  0822               	movf	__tdiv_to_l_@quot+2,w
  5995  1F3C  00F2               	movwf	?__tdiv_to_l_+2
  5996  1F3D  0821               	movf	__tdiv_to_l_@quot+1,w
  5997  1F3E  00F1               	movwf	?__tdiv_to_l_+1
  5998  1F3F  0820               	movf	__tdiv_to_l_@quot,w
  5999  1F40  00F0               	movwf	?__tdiv_to_l_
  6000  1F41                     l621:
  6001  1F41  0008               	return
  6002  1F42                     __end_of__tdiv_to_l_:
  6003                           
  6004                           	psect	text12
  6005  1F42                     __ptext12:	
  6006 ;; *************** function __div_to_l_ *****************
  6007 ;; Defined at:
  6008 ;;		line 60 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;  f1              4    0[COMMON] unsigned long 
  6011 ;;  f2              4    4[COMMON] unsigned long 
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;  quot            4    0[BANK0 ] unsigned long 
  6014 ;;  exp1            1    5[BANK0 ] unsigned char 
  6015 ;;  cntr            1    4[BANK0 ] unsigned char 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  4    0[COMMON] unsigned long 
  6018 ;; Registers used:
  6019 ;;		wreg, status,2, status,0
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6025 ;;      Params:         8       0       0       0       0
  6026 ;;      Locals:         0       6       0       0       0
  6027 ;;      Temps:          1       0       0       0       0
  6028 ;;      Totals:         9       6       0       0       0
  6029 ;;Total ram usage:       15 bytes
  6030 ;; Hardware stack levels used:    1
  6031 ;; This function calls:
  6032 ;;		Nothing
  6033 ;; This function is called by:
  6034 ;;		_sprintf
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           
  6039                           ;psect for function __div_to_l_
  6040  1F42                     __div_to_l_:
  6041  1F42                     l2991:	
  6042                           ;incstack = 0
  6043                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6044                           
  6045  1F42  1003               	clrc
  6046  1F43  0D72               	rlf	__div_to_l_@f1+2,w
  6047  1F44  0D73               	rlf	__div_to_l_@f1+3,w
  6048  1F45  00F8               	movwf	??__div_to_l_
  6049  1F46  0878               	movf	??__div_to_l_,w
  6050  1F47  1283               	bcf	3,5	;RP0=0, select bank0
  6051  1F48  1303               	bcf	3,6	;RP1=0, select bank0
  6052  1F49  00A5               	movwf	__div_to_l_@exp1
  6053  1F4A  0825               	movf	__div_to_l_@exp1,w
  6054  1F4B  1D03               	btfss	3,2
  6055  1F4C  2F4E               	goto	u4481
  6056  1F4D  2F4F               	goto	u4480
  6057  1F4E                     u4481:
  6058  1F4E  2F58               	goto	l2997
  6059  1F4F                     u4480:
  6060  1F4F                     l2993:
  6061  1F4F  3000               	movlw	0
  6062  1F50  00F3               	movwf	?__div_to_l_+3
  6063  1F51  3000               	movlw	0
  6064  1F52  00F2               	movwf	?__div_to_l_+2
  6065  1F53  3000               	movlw	0
  6066  1F54  00F1               	movwf	?__div_to_l_+1
  6067  1F55  3000               	movlw	0
  6068  1F56  00F0               	movwf	?__div_to_l_
  6069  1F57  2FFF               	goto	l574
  6070  1F58                     l2997:
  6071  1F58  1003               	clrc
  6072  1F59  0D76               	rlf	__div_to_l_@f2+2,w
  6073  1F5A  0D77               	rlf	__div_to_l_@f2+3,w
  6074  1F5B  00F8               	movwf	??__div_to_l_
  6075  1F5C  0878               	movf	??__div_to_l_,w
  6076  1F5D  00A4               	movwf	__div_to_l_@cntr
  6077  1F5E  0824               	movf	__div_to_l_@cntr,w
  6078  1F5F  1D03               	btfss	3,2
  6079  1F60  2F62               	goto	u4491
  6080  1F61  2F63               	goto	u4490
  6081  1F62                     u4491:
  6082  1F62  2F64               	goto	l575
  6083  1F63                     u4490:
  6084  1F63  2F4F               	goto	l2993
  6085  1F64                     l575:
  6086  1F64  17F2               	bsf	__div_to_l_@f1+2,7
  6087  1F65                     l3003:
  6088  1F65  30FF               	movlw	255
  6089  1F66  05F0               	andwf	__div_to_l_@f1,f
  6090  1F67  30FF               	movlw	255
  6091  1F68  05F1               	andwf	__div_to_l_@f1+1,f
  6092  1F69  30FF               	movlw	255
  6093  1F6A  05F2               	andwf	__div_to_l_@f1+2,f
  6094  1F6B  3000               	movlw	0
  6095  1F6C  05F3               	andwf	__div_to_l_@f1+3,f
  6096  1F6D                     l3005:
  6097  1F6D  17F6               	bsf	__div_to_l_@f2+2,7
  6098  1F6E  30FF               	movlw	255
  6099  1F6F  05F4               	andwf	__div_to_l_@f2,f
  6100  1F70  30FF               	movlw	255
  6101  1F71  05F5               	andwf	__div_to_l_@f2+1,f
  6102  1F72  30FF               	movlw	255
  6103  1F73  05F6               	andwf	__div_to_l_@f2+2,f
  6104  1F74  3000               	movlw	0
  6105  1F75  05F7               	andwf	__div_to_l_@f2+3,f
  6106  1F76  3000               	movlw	0
  6107  1F77  00A3               	movwf	__div_to_l_@quot+3
  6108  1F78  3000               	movlw	0
  6109  1F79  00A2               	movwf	__div_to_l_@quot+2
  6110  1F7A  3000               	movlw	0
  6111  1F7B  00A1               	movwf	__div_to_l_@quot+1
  6112  1F7C  3000               	movlw	0
  6113  1F7D  00A0               	movwf	__div_to_l_@quot
  6114  1F7E                     l3007:
  6115  1F7E  307F               	movlw	127
  6116  1F7F  02A5               	subwf	__div_to_l_@exp1,f
  6117  1F80                     l3009:
  6118  1F80  30A0               	movlw	160
  6119  1F81  0724               	addwf	__div_to_l_@cntr,w
  6120  1F82  00F8               	movwf	??__div_to_l_
  6121  1F83  0878               	movf	??__div_to_l_,w
  6122  1F84  02A5               	subwf	__div_to_l_@exp1,f
  6123  1F85  3020               	movlw	32
  6124  1F86  00F8               	movwf	??__div_to_l_
  6125  1F87  0878               	movf	??__div_to_l_,w
  6126  1F88  00A4               	movwf	__div_to_l_@cntr
  6127  1F89                     l3011:
  6128  1F89  3001               	movlw	1
  6129  1F8A  00F8               	movwf	??__div_to_l_
  6130  1F8B                     u4505:
  6131  1F8B  1003               	clrc
  6132  1F8C  0DA0               	rlf	__div_to_l_@quot,f
  6133  1F8D  0DA1               	rlf	__div_to_l_@quot+1,f
  6134  1F8E  0DA2               	rlf	__div_to_l_@quot+2,f
  6135  1F8F  0DA3               	rlf	__div_to_l_@quot+3,f
  6136  1F90  0BF8               	decfsz	??__div_to_l_,f
  6137  1F91  2F8B               	goto	u4505
  6138  1F92                     l3013:
  6139  1F92  0877               	movf	__div_to_l_@f2+3,w
  6140  1F93  0273               	subwf	__div_to_l_@f1+3,w
  6141  1F94  1D03               	skipz
  6142  1F95  2FA0               	goto	u4515
  6143  1F96  0876               	movf	__div_to_l_@f2+2,w
  6144  1F97  0272               	subwf	__div_to_l_@f1+2,w
  6145  1F98  1D03               	skipz
  6146  1F99  2FA0               	goto	u4515
  6147  1F9A  0875               	movf	__div_to_l_@f2+1,w
  6148  1F9B  0271               	subwf	__div_to_l_@f1+1,w
  6149  1F9C  1D03               	skipz
  6150  1F9D  2FA0               	goto	u4515
  6151  1F9E  0874               	movf	__div_to_l_@f2,w
  6152  1F9F  0270               	subwf	__div_to_l_@f1,w
  6153  1FA0                     u4515:
  6154  1FA0  1C03               	skipc
  6155  1FA1  2FA3               	goto	u4511
  6156  1FA2  2FA4               	goto	u4510
  6157  1FA3                     u4511:
  6158  1FA3  2FB3               	goto	l3019
  6159  1FA4                     u4510:
  6160  1FA4                     l3015:
  6161  1FA4  0874               	movf	__div_to_l_@f2,w
  6162  1FA5  02F0               	subwf	__div_to_l_@f1,f
  6163  1FA6  0875               	movf	__div_to_l_@f2+1,w
  6164  1FA7  1C03               	skipc
  6165  1FA8  0F75               	incfsz	__div_to_l_@f2+1,w
  6166  1FA9  02F1               	subwf	__div_to_l_@f1+1,f
  6167  1FAA  0876               	movf	__div_to_l_@f2+2,w
  6168  1FAB  1C03               	skipc
  6169  1FAC  0F76               	incfsz	__div_to_l_@f2+2,w
  6170  1FAD  02F2               	subwf	__div_to_l_@f1+2,f
  6171  1FAE  0877               	movf	__div_to_l_@f2+3,w
  6172  1FAF  1C03               	skipc
  6173  1FB0  0F77               	incfsz	__div_to_l_@f2+3,w
  6174  1FB1  02F3               	subwf	__div_to_l_@f1+3,f
  6175  1FB2                     l3017:
  6176  1FB2  1420               	bsf	__div_to_l_@quot,0
  6177  1FB3                     l3019:
  6178  1FB3  3001               	movlw	1
  6179  1FB4  00F8               	movwf	??__div_to_l_
  6180  1FB5                     u4525:
  6181  1FB5  1003               	clrc
  6182  1FB6  0DF0               	rlf	__div_to_l_@f1,f
  6183  1FB7  0DF1               	rlf	__div_to_l_@f1+1,f
  6184  1FB8  0DF2               	rlf	__div_to_l_@f1+2,f
  6185  1FB9  0DF3               	rlf	__div_to_l_@f1+3,f
  6186  1FBA  0BF8               	decfsz	??__div_to_l_,f
  6187  1FBB  2FB5               	goto	u4525
  6188  1FBC                     l3021:
  6189  1FBC  3001               	movlw	1
  6190  1FBD  02A4               	subwf	__div_to_l_@cntr,f
  6191  1FBE  1D03               	btfss	3,2
  6192  1FBF  2FC1               	goto	u4531
  6193  1FC0  2FC2               	goto	u4530
  6194  1FC1                     u4531:
  6195  1FC1  2F89               	goto	l3011
  6196  1FC2                     u4530:
  6197  1FC2                     l578:
  6198  1FC2  1FA5               	btfss	__div_to_l_@exp1,7
  6199  1FC3  2FC5               	goto	u4541
  6200  1FC4  2FC6               	goto	u4540
  6201  1FC5                     u4541:
  6202  1FC5  2FE0               	goto	l3031
  6203  1FC6                     u4540:
  6204  1FC6                     l3023:
  6205  1FC6  0825               	movf	__div_to_l_@exp1,w
  6206  1FC7  3A80               	xorlw	128
  6207  1FC8  3E9F               	addlw	159
  6208  1FC9  1803               	skipnc
  6209  1FCA  2FCC               	goto	u4551
  6210  1FCB  2FCD               	goto	u4550
  6211  1FCC                     u4551:
  6212  1FCC  2FCE               	goto	l3029
  6213  1FCD                     u4550:
  6214  1FCD  2F4F               	goto	l2993
  6215  1FCE                     l3029:
  6216  1FCE  3001               	movlw	1
  6217  1FCF                     u4565:
  6218  1FCF  1003               	clrc
  6219  1FD0  0CA3               	rrf	__div_to_l_@quot+3,f
  6220  1FD1  0CA2               	rrf	__div_to_l_@quot+2,f
  6221  1FD2  0CA1               	rrf	__div_to_l_@quot+1,f
  6222  1FD3  0CA0               	rrf	__div_to_l_@quot,f
  6223  1FD4  3EFF               	addlw	-1
  6224  1FD5  1D03               	skipz
  6225  1FD6  2FCF               	goto	u4565
  6226  1FD7  3001               	movlw	1
  6227  1FD8  00F8               	movwf	??__div_to_l_
  6228  1FD9  0878               	movf	??__div_to_l_,w
  6229  1FDA  07A5               	addwf	__div_to_l_@exp1,f
  6230  1FDB  1D03               	btfss	3,2
  6231  1FDC  2FDE               	goto	u4571
  6232  1FDD  2FDF               	goto	u4570
  6233  1FDE                     u4571:
  6234  1FDE  2FCE               	goto	l3029
  6235  1FDF                     u4570:
  6236  1FDF  2FF7               	goto	l3039
  6237  1FE0                     l3031:
  6238  1FE0  3020               	movlw	32
  6239  1FE1  0225               	subwf	__div_to_l_@exp1,w
  6240  1FE2  1C03               	skipc
  6241  1FE3  2FE5               	goto	u4581
  6242  1FE4  2FE6               	goto	u4580
  6243  1FE5                     u4581:
  6244  1FE5  2FF2               	goto	l585
  6245  1FE6                     u4580:
  6246  1FE6  2F4F               	goto	l2993
  6247  1FE7                     l3037:
  6248  1FE7  3001               	movlw	1
  6249  1FE8  00F8               	movwf	??__div_to_l_
  6250  1FE9                     u4595:
  6251  1FE9  1003               	clrc
  6252  1FEA  0DA0               	rlf	__div_to_l_@quot,f
  6253  1FEB  0DA1               	rlf	__div_to_l_@quot+1,f
  6254  1FEC  0DA2               	rlf	__div_to_l_@quot+2,f
  6255  1FED  0DA3               	rlf	__div_to_l_@quot+3,f
  6256  1FEE  0BF8               	decfsz	??__div_to_l_,f
  6257  1FEF  2FE9               	goto	u4595
  6258  1FF0  3001               	movlw	1
  6259  1FF1  02A5               	subwf	__div_to_l_@exp1,f
  6260  1FF2                     l585:
  6261  1FF2  0825               	movf	__div_to_l_@exp1,w
  6262  1FF3  1D03               	btfss	3,2
  6263  1FF4  2FF6               	goto	u4601
  6264  1FF5  2FF7               	goto	u4600
  6265  1FF6                     u4601:
  6266  1FF6  2FE7               	goto	l3037
  6267  1FF7                     u4600:
  6268  1FF7                     l3039:
  6269  1FF7  0823               	movf	__div_to_l_@quot+3,w
  6270  1FF8  00F3               	movwf	?__div_to_l_+3
  6271  1FF9  0822               	movf	__div_to_l_@quot+2,w
  6272  1FFA  00F2               	movwf	?__div_to_l_+2
  6273  1FFB  0821               	movf	__div_to_l_@quot+1,w
  6274  1FFC  00F1               	movwf	?__div_to_l_+1
  6275  1FFD  0820               	movf	__div_to_l_@quot,w
  6276  1FFE  00F0               	movwf	?__div_to_l_
  6277  1FFF                     l574:
  6278  1FFF  0008               	return
  6279  2000                     __end_of__div_to_l_:
  6280                           
  6281                           	psect	text13
  6282  1DCB                     __ptext13:	
  6283 ;; *************** function ___xxtofl *****************
  6284 ;; Defined at:
  6285 ;;		line 10 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;  sign            1    wreg     unsigned char 
  6288 ;;  val             4    0[COMMON] long 
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;  sign            1    8[COMMON] unsigned char 
  6291 ;;  arg             4   10[COMMON] unsigned long 
  6292 ;;  exp             1    9[COMMON] unsigned char 
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  4    0[COMMON] unsigned char 
  6295 ;; Registers used:
  6296 ;;		wreg, status,2, status,0
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6302 ;;      Params:         4       0       0       0       0
  6303 ;;      Locals:         6       0       0       0       0
  6304 ;;      Temps:          4       0       0       0       0
  6305 ;;      Totals:        14       0       0       0       0
  6306 ;;Total ram usage:       14 bytes
  6307 ;; Hardware stack levels used:    1
  6308 ;; This function calls:
  6309 ;;		Nothing
  6310 ;; This function is called by:
  6311 ;;		_main
  6312 ;;		_sprintf
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           
  6317                           ;psect for function ___xxtofl
  6318  1DCB                     ___xxtofl:
  6319                           
  6320                           ;incstack = 0
  6321                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6322                           ;___xxtofl@sign stored from wreg
  6323  1DCB  00F8               	movwf	___xxtofl@sign
  6324  1DCC                     l3183:
  6325  1DCC  0878               	movf	___xxtofl@sign,w
  6326  1DCD  1903               	btfsc	3,2
  6327  1DCE  2DD0               	goto	u4991
  6328  1DCF  2DD1               	goto	u4990
  6329  1DD0                     u4991:
  6330  1DD0  2DE5               	goto	l3189
  6331  1DD1                     u4990:
  6332  1DD1                     l3185:
  6333  1DD1  1FF3               	btfss	___xxtofl@val+3,7
  6334  1DD2  2DD4               	goto	u5001
  6335  1DD3  2DD5               	goto	u5000
  6336  1DD4                     u5001:
  6337  1DD4  2DE5               	goto	l3189
  6338  1DD5                     u5000:
  6339  1DD5                     l3187:
  6340  1DD5  0970               	comf	___xxtofl@val,w
  6341  1DD6  00FA               	movwf	___xxtofl@arg
  6342  1DD7  0971               	comf	___xxtofl@val+1,w
  6343  1DD8  00FB               	movwf	___xxtofl@arg+1
  6344  1DD9  0972               	comf	___xxtofl@val+2,w
  6345  1DDA  00FC               	movwf	___xxtofl@arg+2
  6346  1DDB  0973               	comf	___xxtofl@val+3,w
  6347  1DDC  00FD               	movwf	___xxtofl@arg+3
  6348  1DDD  0AFA               	incf	___xxtofl@arg,f
  6349  1DDE  1903               	skipnz
  6350  1DDF  0AFB               	incf	___xxtofl@arg+1,f
  6351  1DE0  1903               	skipnz
  6352  1DE1  0AFC               	incf	___xxtofl@arg+2,f
  6353  1DE2  1903               	skipnz
  6354  1DE3  0AFD               	incf	___xxtofl@arg+3,f
  6355  1DE4  2DED               	goto	l871
  6356  1DE5                     l3189:
  6357  1DE5  0873               	movf	___xxtofl@val+3,w
  6358  1DE6  00FD               	movwf	___xxtofl@arg+3
  6359  1DE7  0872               	movf	___xxtofl@val+2,w
  6360  1DE8  00FC               	movwf	___xxtofl@arg+2
  6361  1DE9  0871               	movf	___xxtofl@val+1,w
  6362  1DEA  00FB               	movwf	___xxtofl@arg+1
  6363  1DEB  0870               	movf	___xxtofl@val,w
  6364  1DEC  00FA               	movwf	___xxtofl@arg
  6365  1DED                     l871:
  6366  1DED  0873               	movf	___xxtofl@val+3,w
  6367  1DEE  0472               	iorwf	___xxtofl@val+2,w
  6368  1DEF  0471               	iorwf	___xxtofl@val+1,w
  6369  1DF0  0470               	iorwf	___xxtofl@val,w
  6370  1DF1  1D03               	skipz
  6371  1DF2  2DF4               	goto	u5011
  6372  1DF3  2DF5               	goto	u5010
  6373  1DF4                     u5011:
  6374  1DF4  2DFE               	goto	l3195
  6375  1DF5                     u5010:
  6376  1DF5                     l3191:
  6377  1DF5  3000               	movlw	0
  6378  1DF6  00F3               	movwf	?___xxtofl+3
  6379  1DF7  3000               	movlw	0
  6380  1DF8  00F2               	movwf	?___xxtofl+2
  6381  1DF9  3000               	movlw	0
  6382  1DFA  00F1               	movwf	?___xxtofl+1
  6383  1DFB  3000               	movlw	0
  6384  1DFC  00F0               	movwf	?___xxtofl
  6385  1DFD  2E84               	goto	l873
  6386  1DFE                     l3195:
  6387  1DFE  3096               	movlw	150
  6388  1DFF  00F4               	movwf	??___xxtofl
  6389  1E00  0874               	movf	??___xxtofl,w
  6390  1E01  00F9               	movwf	___xxtofl@exp
  6391  1E02  2E10               	goto	l3199
  6392  1E03                     l3197:
  6393  1E03  3001               	movlw	1
  6394  1E04  00F4               	movwf	??___xxtofl
  6395  1E05  0874               	movf	??___xxtofl,w
  6396  1E06  07F9               	addwf	___xxtofl@exp,f
  6397  1E07  3001               	movlw	1
  6398  1E08                     u5025:
  6399  1E08  1003               	clrc
  6400  1E09  0CFD               	rrf	___xxtofl@arg+3,f
  6401  1E0A  0CFC               	rrf	___xxtofl@arg+2,f
  6402  1E0B  0CFB               	rrf	___xxtofl@arg+1,f
  6403  1E0C  0CFA               	rrf	___xxtofl@arg,f
  6404  1E0D  3EFF               	addlw	-1
  6405  1E0E  1D03               	skipz
  6406  1E0F  2E08               	goto	u5025
  6407  1E10                     l3199:
  6408  1E10  30FE               	movlw	254
  6409  1E11  057D               	andwf	___xxtofl@arg+3,w
  6410  1E12  1D03               	btfss	3,2
  6411  1E13  2E15               	goto	u5031
  6412  1E14  2E16               	goto	u5030
  6413  1E15                     u5031:
  6414  1E15  2E03               	goto	l3197
  6415  1E16                     u5030:
  6416  1E16  2E32               	goto	l877
  6417  1E17                     l3201:
  6418  1E17  3001               	movlw	1
  6419  1E18  00F4               	movwf	??___xxtofl
  6420  1E19  0874               	movf	??___xxtofl,w
  6421  1E1A  07F9               	addwf	___xxtofl@exp,f
  6422  1E1B                     l3203:
  6423  1E1B  3001               	movlw	1
  6424  1E1C  07FA               	addwf	___xxtofl@arg,f
  6425  1E1D  3000               	movlw	0
  6426  1E1E  1803               	skipnc
  6427  1E1F  3001               	movlw	1
  6428  1E20  07FB               	addwf	___xxtofl@arg+1,f
  6429  1E21  3000               	movlw	0
  6430  1E22  1803               	skipnc
  6431  1E23  3001               	movlw	1
  6432  1E24  07FC               	addwf	___xxtofl@arg+2,f
  6433  1E25  3000               	movlw	0
  6434  1E26  1803               	skipnc
  6435  1E27  3001               	movlw	1
  6436  1E28  07FD               	addwf	___xxtofl@arg+3,f
  6437  1E29                     l3205:
  6438  1E29  3001               	movlw	1
  6439  1E2A                     u5045:
  6440  1E2A  1003               	clrc
  6441  1E2B  0CFD               	rrf	___xxtofl@arg+3,f
  6442  1E2C  0CFC               	rrf	___xxtofl@arg+2,f
  6443  1E2D  0CFB               	rrf	___xxtofl@arg+1,f
  6444  1E2E  0CFA               	rrf	___xxtofl@arg,f
  6445  1E2F  3EFF               	addlw	-1
  6446  1E30  1D03               	skipz
  6447  1E31  2E2A               	goto	u5045
  6448  1E32                     l877:
  6449  1E32  30FF               	movlw	255
  6450  1E33  057D               	andwf	___xxtofl@arg+3,w
  6451  1E34  1D03               	btfss	3,2
  6452  1E35  2E37               	goto	u5051
  6453  1E36  2E38               	goto	u5050
  6454  1E37                     u5051:
  6455  1E37  2E17               	goto	l3201
  6456  1E38                     u5050:
  6457  1E38  2E44               	goto	l3209
  6458  1E39                     l3207:
  6459  1E39  3001               	movlw	1
  6460  1E3A  02F9               	subwf	___xxtofl@exp,f
  6461  1E3B  3001               	movlw	1
  6462  1E3C  00F4               	movwf	??___xxtofl
  6463  1E3D                     u5065:
  6464  1E3D  1003               	clrc
  6465  1E3E  0DFA               	rlf	___xxtofl@arg,f
  6466  1E3F  0DFB               	rlf	___xxtofl@arg+1,f
  6467  1E40  0DFC               	rlf	___xxtofl@arg+2,f
  6468  1E41  0DFD               	rlf	___xxtofl@arg+3,f
  6469  1E42  0BF4               	decfsz	??___xxtofl,f
  6470  1E43  2E3D               	goto	u5065
  6471  1E44                     l3209:
  6472  1E44  1BFC               	btfsc	___xxtofl@arg+2,7
  6473  1E45  2E47               	goto	u5071
  6474  1E46  2E48               	goto	u5070
  6475  1E47                     u5071:
  6476  1E47  2E4E               	goto	l884
  6477  1E48                     u5070:
  6478  1E48                     l3211:
  6479  1E48  3002               	movlw	2
  6480  1E49  0279               	subwf	___xxtofl@exp,w
  6481  1E4A  1803               	skipnc
  6482  1E4B  2E4D               	goto	u5081
  6483  1E4C  2E4E               	goto	u5080
  6484  1E4D                     u5081:
  6485  1E4D  2E39               	goto	l3207
  6486  1E4E                     u5080:
  6487  1E4E                     l884:
  6488  1E4E  1879               	btfsc	___xxtofl@exp,0
  6489  1E4F  2E51               	goto	u5091
  6490  1E50  2E52               	goto	u5090
  6491  1E51                     u5091:
  6492  1E51  2E5A               	goto	l885
  6493  1E52                     u5090:
  6494  1E52                     l3213:
  6495  1E52  30FF               	movlw	255
  6496  1E53  05FA               	andwf	___xxtofl@arg,f
  6497  1E54  30FF               	movlw	255
  6498  1E55  05FB               	andwf	___xxtofl@arg+1,f
  6499  1E56  307F               	movlw	127
  6500  1E57  05FC               	andwf	___xxtofl@arg+2,f
  6501  1E58  30FF               	movlw	255
  6502  1E59  05FD               	andwf	___xxtofl@arg+3,f
  6503  1E5A                     l885:
  6504  1E5A  1003               	clrc
  6505  1E5B  0CF9               	rrf	___xxtofl@exp,f
  6506  1E5C                     l3215:
  6507  1E5C  0879               	movf	___xxtofl@exp,w
  6508  1E5D  00F4               	movwf	??___xxtofl
  6509  1E5E  01F5               	clrf	??___xxtofl+1
  6510  1E5F  01F6               	clrf	??___xxtofl+2
  6511  1E60  01F7               	clrf	??___xxtofl+3
  6512  1E61  3018               	movlw	24
  6513  1E62                     u5105:
  6514  1E62  1003               	clrc
  6515  1E63  0DF4               	rlf	??___xxtofl,f
  6516  1E64  0DF5               	rlf	??___xxtofl+1,f
  6517  1E65  0DF6               	rlf	??___xxtofl+2,f
  6518  1E66  0DF7               	rlf	??___xxtofl+3,f
  6519  1E67                     u5100:
  6520  1E67  3EFF               	addlw	-1
  6521  1E68  1D03               	skipz
  6522  1E69  2E62               	goto	u5105
  6523  1E6A  0874               	movf	??___xxtofl,w
  6524  1E6B  04FA               	iorwf	___xxtofl@arg,f
  6525  1E6C  0875               	movf	??___xxtofl+1,w
  6526  1E6D  04FB               	iorwf	___xxtofl@arg+1,f
  6527  1E6E  0876               	movf	??___xxtofl+2,w
  6528  1E6F  04FC               	iorwf	___xxtofl@arg+2,f
  6529  1E70  0877               	movf	??___xxtofl+3,w
  6530  1E71  04FD               	iorwf	___xxtofl@arg+3,f
  6531  1E72                     l3217:
  6532  1E72  0878               	movf	___xxtofl@sign,w
  6533  1E73  1903               	btfsc	3,2
  6534  1E74  2E76               	goto	u5111
  6535  1E75  2E77               	goto	u5110
  6536  1E76                     u5111:
  6537  1E76  2E7C               	goto	l3223
  6538  1E77                     u5110:
  6539  1E77                     l3219:
  6540  1E77  1FF3               	btfss	___xxtofl@val+3,7
  6541  1E78  2E7A               	goto	u5121
  6542  1E79  2E7B               	goto	u5120
  6543  1E7A                     u5121:
  6544  1E7A  2E7C               	goto	l3223
  6545  1E7B                     u5120:
  6546  1E7B                     l3221:
  6547  1E7B  17FD               	bsf	___xxtofl@arg+3,7
  6548  1E7C                     l3223:
  6549  1E7C  087D               	movf	___xxtofl@arg+3,w
  6550  1E7D  00F3               	movwf	?___xxtofl+3
  6551  1E7E  087C               	movf	___xxtofl@arg+2,w
  6552  1E7F  00F2               	movwf	?___xxtofl+2
  6553  1E80  087B               	movf	___xxtofl@arg+1,w
  6554  1E81  00F1               	movwf	?___xxtofl+1
  6555  1E82  087A               	movf	___xxtofl@arg,w
  6556  1E83  00F0               	movwf	?___xxtofl
  6557  1E84                     l873:
  6558  1E84  0008               	return
  6559  1E85                     __end_of___xxtofl:
  6560                           
  6561                           	psect	text14
  6562  1ABF                     __ptext14:	
  6563 ;; *************** function ___wmul *****************
  6564 ;; Defined at:
  6565 ;;		line 15 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;  multiplier      2    0[COMMON] unsigned int 
  6568 ;;  multiplicand    2    2[COMMON] unsigned int 
  6569 ;; Auto vars:     Size  Location     Type
  6570 ;;  product         2    4[COMMON] unsigned int 
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  2    0[COMMON] unsigned int 
  6573 ;; Registers used:
  6574 ;;		wreg, status,2, status,0
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6580 ;;      Params:         4       0       0       0       0
  6581 ;;      Locals:         2       0       0       0       0
  6582 ;;      Temps:          0       0       0       0       0
  6583 ;;      Totals:         6       0       0       0       0
  6584 ;;Total ram usage:        6 bytes
  6585 ;; Hardware stack levels used:    1
  6586 ;; This function calls:
  6587 ;;		Nothing
  6588 ;; This function is called by:
  6589 ;;		_sprintf
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           
  6594                           ;psect for function ___wmul
  6595  1ABF                     ___wmul:
  6596  1ABF                     l3043:	
  6597                           ;incstack = 0
  6598                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6599                           
  6600  1ABF  01F4               	clrf	___wmul@product
  6601  1AC0  01F5               	clrf	___wmul@product+1
  6602  1AC1                     l3045:
  6603  1AC1  1C70               	btfss	___wmul@multiplier,0
  6604  1AC2  2AC4               	goto	u4611
  6605  1AC3  2AC5               	goto	u4610
  6606  1AC4                     u4611:
  6607  1AC4  2ACB               	goto	l404
  6608  1AC5                     u4610:
  6609  1AC5                     l3047:
  6610  1AC5  0872               	movf	___wmul@multiplicand,w
  6611  1AC6  07F4               	addwf	___wmul@product,f
  6612  1AC7  1803               	skipnc
  6613  1AC8  0AF5               	incf	___wmul@product+1,f
  6614  1AC9  0873               	movf	___wmul@multiplicand+1,w
  6615  1ACA  07F5               	addwf	___wmul@product+1,f
  6616  1ACB                     l404:
  6617  1ACB  3001               	movlw	1
  6618  1ACC                     u4625:
  6619  1ACC  1003               	clrc
  6620  1ACD  0DF2               	rlf	___wmul@multiplicand,f
  6621  1ACE  0DF3               	rlf	___wmul@multiplicand+1,f
  6622  1ACF  3EFF               	addlw	-1
  6623  1AD0  1D03               	skipz
  6624  1AD1  2ACC               	goto	u4625
  6625  1AD2                     l3049:
  6626  1AD2  3001               	movlw	1
  6627  1AD3                     u4635:
  6628  1AD3  1003               	clrc
  6629  1AD4  0CF1               	rrf	___wmul@multiplier+1,f
  6630  1AD5  0CF0               	rrf	___wmul@multiplier,f
  6631  1AD6  3EFF               	addlw	-1
  6632  1AD7  1D03               	skipz
  6633  1AD8  2AD3               	goto	u4635
  6634  1AD9                     l3051:
  6635  1AD9  0870               	movf	___wmul@multiplier,w
  6636  1ADA  0471               	iorwf	___wmul@multiplier+1,w
  6637  1ADB  1D03               	btfss	3,2
  6638  1ADC  2ADE               	goto	u4641
  6639  1ADD  2ADF               	goto	u4640
  6640  1ADE                     u4641:
  6641  1ADE  2AC1               	goto	l3045
  6642  1ADF                     u4640:
  6643  1ADF                     l3053:
  6644  1ADF  0875               	movf	___wmul@product+1,w
  6645  1AE0  00F1               	movwf	?___wmul+1
  6646  1AE1  0874               	movf	___wmul@product,w
  6647  1AE2  00F0               	movwf	?___wmul
  6648  1AE3                     l406:
  6649  1AE3  0008               	return
  6650  1AE4                     __end_of___wmul:
  6651                           
  6652                           	psect	text15
  6653  1C93                     __ptext15:	
  6654 ;; *************** function ___llmod *****************
  6655 ;; Defined at:
  6656 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;  divisor         4    0[BANK0 ] unsigned long 
  6659 ;;  dividend        4    4[BANK0 ] unsigned long 
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;  counter         1    9[BANK0 ] unsigned char 
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  4    0[BANK0 ] unsigned long 
  6664 ;; Registers used:
  6665 ;;		wreg, status,2, status,0
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/0
  6668 ;;		On exit  : 0/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6671 ;;      Params:         0       8       0       0       0
  6672 ;;      Locals:         0       1       0       0       0
  6673 ;;      Temps:          0       1       0       0       0
  6674 ;;      Totals:         0      10       0       0       0
  6675 ;;Total ram usage:       10 bytes
  6676 ;; Hardware stack levels used:    1
  6677 ;; This function calls:
  6678 ;;		Nothing
  6679 ;; This function is called by:
  6680 ;;		_sprintf
  6681 ;; This function uses a non-reentrant model
  6682 ;;
  6683                           
  6684                           
  6685                           ;psect for function ___llmod
  6686  1C93                     ___llmod:
  6687  1C93                     l3157:	
  6688                           ;incstack = 0
  6689                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6690                           
  6691  1C93  1283               	bcf	3,5	;RP0=0, select bank0
  6692  1C94  1303               	bcf	3,6	;RP1=0, select bank0
  6693  1C95  0823               	movf	___llmod@divisor+3,w
  6694  1C96  0422               	iorwf	___llmod@divisor+2,w
  6695  1C97  0421               	iorwf	___llmod@divisor+1,w
  6696  1C98  0420               	iorwf	___llmod@divisor,w
  6697  1C99  1903               	skipnz
  6698  1C9A  2C9C               	goto	u4931
  6699  1C9B  2C9D               	goto	u4930
  6700  1C9C                     u4931:
  6701  1C9C  2CE0               	goto	l3173
  6702  1C9D                     u4930:
  6703  1C9D                     l3159:
  6704  1C9D  01A9               	clrf	___llmod@counter
  6705  1C9E  0AA9               	incf	___llmod@counter,f
  6706  1C9F  2CAD               	goto	l3163
  6707  1CA0                     l3161:
  6708  1CA0  3001               	movlw	1
  6709  1CA1  00A8               	movwf	??___llmod
  6710  1CA2                     u4945:
  6711  1CA2  1003               	clrc
  6712  1CA3  0DA0               	rlf	___llmod@divisor,f
  6713  1CA4  0DA1               	rlf	___llmod@divisor+1,f
  6714  1CA5  0DA2               	rlf	___llmod@divisor+2,f
  6715  1CA6  0DA3               	rlf	___llmod@divisor+3,f
  6716  1CA7  0BA8               	decfsz	??___llmod,f
  6717  1CA8  2CA2               	goto	u4945
  6718  1CA9  3001               	movlw	1
  6719  1CAA  00A8               	movwf	??___llmod
  6720  1CAB  0828               	movf	??___llmod,w
  6721  1CAC  07A9               	addwf	___llmod@counter,f
  6722  1CAD                     l3163:
  6723  1CAD  1FA3               	btfss	___llmod@divisor+3,7
  6724  1CAE  2CB0               	goto	u4951
  6725  1CAF  2CB1               	goto	u4950
  6726  1CB0                     u4951:
  6727  1CB0  2CA0               	goto	l3161
  6728  1CB1                     u4950:
  6729  1CB1                     l3165:
  6730  1CB1  0823               	movf	___llmod@divisor+3,w
  6731  1CB2  0227               	subwf	___llmod@dividend+3,w
  6732  1CB3  1D03               	skipz
  6733  1CB4  2CBF               	goto	u4965
  6734  1CB5  0822               	movf	___llmod@divisor+2,w
  6735  1CB6  0226               	subwf	___llmod@dividend+2,w
  6736  1CB7  1D03               	skipz
  6737  1CB8  2CBF               	goto	u4965
  6738  1CB9  0821               	movf	___llmod@divisor+1,w
  6739  1CBA  0225               	subwf	___llmod@dividend+1,w
  6740  1CBB  1D03               	skipz
  6741  1CBC  2CBF               	goto	u4965
  6742  1CBD  0820               	movf	___llmod@divisor,w
  6743  1CBE  0224               	subwf	___llmod@dividend,w
  6744  1CBF                     u4965:
  6745  1CBF  1C03               	skipc
  6746  1CC0  2CC2               	goto	u4961
  6747  1CC1  2CC3               	goto	u4960
  6748  1CC2                     u4961:
  6749  1CC2  2CD1               	goto	l3169
  6750  1CC3                     u4960:
  6751  1CC3                     l3167:
  6752  1CC3  0820               	movf	___llmod@divisor,w
  6753  1CC4  02A4               	subwf	___llmod@dividend,f
  6754  1CC5  0821               	movf	___llmod@divisor+1,w
  6755  1CC6  1C03               	skipc
  6756  1CC7  0F21               	incfsz	___llmod@divisor+1,w
  6757  1CC8  02A5               	subwf	___llmod@dividend+1,f
  6758  1CC9  0822               	movf	___llmod@divisor+2,w
  6759  1CCA  1C03               	skipc
  6760  1CCB  0F22               	incfsz	___llmod@divisor+2,w
  6761  1CCC  02A6               	subwf	___llmod@dividend+2,f
  6762  1CCD  0823               	movf	___llmod@divisor+3,w
  6763  1CCE  1C03               	skipc
  6764  1CCF  0F23               	incfsz	___llmod@divisor+3,w
  6765  1CD0  02A7               	subwf	___llmod@dividend+3,f
  6766  1CD1                     l3169:
  6767  1CD1  3001               	movlw	1
  6768  1CD2                     u4975:
  6769  1CD2  1003               	clrc
  6770  1CD3  0CA3               	rrf	___llmod@divisor+3,f
  6771  1CD4  0CA2               	rrf	___llmod@divisor+2,f
  6772  1CD5  0CA1               	rrf	___llmod@divisor+1,f
  6773  1CD6  0CA0               	rrf	___llmod@divisor,f
  6774  1CD7  3EFF               	addlw	-1
  6775  1CD8  1D03               	skipz
  6776  1CD9  2CD2               	goto	u4975
  6777  1CDA                     l3171:
  6778  1CDA  3001               	movlw	1
  6779  1CDB  02A9               	subwf	___llmod@counter,f
  6780  1CDC  1D03               	btfss	3,2
  6781  1CDD  2CDF               	goto	u4981
  6782  1CDE  2CE0               	goto	u4980
  6783  1CDF                     u4981:
  6784  1CDF  2CB1               	goto	l3165
  6785  1CE0                     u4980:
  6786  1CE0                     l3173:
  6787  1CE0  0827               	movf	___llmod@dividend+3,w
  6788  1CE1  00A3               	movwf	?___llmod+3
  6789  1CE2  0826               	movf	___llmod@dividend+2,w
  6790  1CE3  00A2               	movwf	?___llmod+2
  6791  1CE4  0825               	movf	___llmod@dividend+1,w
  6792  1CE5  00A1               	movwf	?___llmod+1
  6793  1CE6  0824               	movf	___llmod@dividend,w
  6794  1CE7  00A0               	movwf	?___llmod
  6795  1CE8                     l660:
  6796  1CE8  0008               	return
  6797  1CE9                     __end_of___llmod:
  6798                           
  6799                           	psect	text16
  6800  1CE9                     __ptext16:	
  6801 ;; *************** function ___lldiv *****************
  6802 ;; Defined at:
  6803 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  divisor         4    0[COMMON] unsigned long 
  6806 ;;  dividend        4    4[COMMON] unsigned long 
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;  quotient        4    9[COMMON] unsigned long 
  6809 ;;  counter         1   13[COMMON] unsigned char 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  4    0[COMMON] unsigned long 
  6812 ;; Registers used:
  6813 ;;		wreg, status,2, status,0
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6819 ;;      Params:         8       0       0       0       0
  6820 ;;      Locals:         5       0       0       0       0
  6821 ;;      Temps:          1       0       0       0       0
  6822 ;;      Totals:        14       0       0       0       0
  6823 ;;Total ram usage:       14 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; This function calls:
  6826 ;;		Nothing
  6827 ;; This function is called by:
  6828 ;;		_sprintf
  6829 ;; This function uses a non-reentrant model
  6830 ;;
  6831                           
  6832                           
  6833                           ;psect for function ___lldiv
  6834  1CE9                     ___lldiv:
  6835  1CE9                     l3057:	
  6836                           ;incstack = 0
  6837                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6838                           
  6839  1CE9  3000               	movlw	0
  6840  1CEA  00FC               	movwf	___lldiv@quotient+3
  6841  1CEB  3000               	movlw	0
  6842  1CEC  00FB               	movwf	___lldiv@quotient+2
  6843  1CED  3000               	movlw	0
  6844  1CEE  00FA               	movwf	___lldiv@quotient+1
  6845  1CEF  3000               	movlw	0
  6846  1CF0  00F9               	movwf	___lldiv@quotient
  6847  1CF1  0873               	movf	___lldiv@divisor+3,w
  6848  1CF2  0472               	iorwf	___lldiv@divisor+2,w
  6849  1CF3  0471               	iorwf	___lldiv@divisor+1,w
  6850  1CF4  0470               	iorwf	___lldiv@divisor,w
  6851  1CF5  1903               	skipnz
  6852  1CF6  2CF8               	goto	u4651
  6853  1CF7  2CF9               	goto	u4650
  6854  1CF8                     u4651:
  6855  1CF8  2D46               	goto	l3077
  6856  1CF9                     u4650:
  6857  1CF9                     l3059:
  6858  1CF9  01FD               	clrf	___lldiv@counter
  6859  1CFA  0AFD               	incf	___lldiv@counter,f
  6860  1CFB  2D09               	goto	l3063
  6861  1CFC                     l3061:
  6862  1CFC  3001               	movlw	1
  6863  1CFD  00F8               	movwf	??___lldiv
  6864  1CFE                     u4665:
  6865  1CFE  1003               	clrc
  6866  1CFF  0DF0               	rlf	___lldiv@divisor,f
  6867  1D00  0DF1               	rlf	___lldiv@divisor+1,f
  6868  1D01  0DF2               	rlf	___lldiv@divisor+2,f
  6869  1D02  0DF3               	rlf	___lldiv@divisor+3,f
  6870  1D03  0BF8               	decfsz	??___lldiv,f
  6871  1D04  2CFE               	goto	u4665
  6872  1D05  3001               	movlw	1
  6873  1D06  00F8               	movwf	??___lldiv
  6874  1D07  0878               	movf	??___lldiv,w
  6875  1D08  07FD               	addwf	___lldiv@counter,f
  6876  1D09                     l3063:
  6877  1D09  1FF3               	btfss	___lldiv@divisor+3,7
  6878  1D0A  2D0C               	goto	u4671
  6879  1D0B  2D0D               	goto	u4670
  6880  1D0C                     u4671:
  6881  1D0C  2CFC               	goto	l3061
  6882  1D0D                     u4670:
  6883  1D0D                     l3065:
  6884  1D0D  3001               	movlw	1
  6885  1D0E  00F8               	movwf	??___lldiv
  6886  1D0F                     u4685:
  6887  1D0F  1003               	clrc
  6888  1D10  0DF9               	rlf	___lldiv@quotient,f
  6889  1D11  0DFA               	rlf	___lldiv@quotient+1,f
  6890  1D12  0DFB               	rlf	___lldiv@quotient+2,f
  6891  1D13  0DFC               	rlf	___lldiv@quotient+3,f
  6892  1D14  0BF8               	decfsz	??___lldiv,f
  6893  1D15  2D0F               	goto	u4685
  6894  1D16                     l3067:
  6895  1D16  0873               	movf	___lldiv@divisor+3,w
  6896  1D17  0277               	subwf	___lldiv@dividend+3,w
  6897  1D18  1D03               	skipz
  6898  1D19  2D24               	goto	u4695
  6899  1D1A  0872               	movf	___lldiv@divisor+2,w
  6900  1D1B  0276               	subwf	___lldiv@dividend+2,w
  6901  1D1C  1D03               	skipz
  6902  1D1D  2D24               	goto	u4695
  6903  1D1E  0871               	movf	___lldiv@divisor+1,w
  6904  1D1F  0275               	subwf	___lldiv@dividend+1,w
  6905  1D20  1D03               	skipz
  6906  1D21  2D24               	goto	u4695
  6907  1D22  0870               	movf	___lldiv@divisor,w
  6908  1D23  0274               	subwf	___lldiv@dividend,w
  6909  1D24                     u4695:
  6910  1D24  1C03               	skipc
  6911  1D25  2D27               	goto	u4691
  6912  1D26  2D28               	goto	u4690
  6913  1D27                     u4691:
  6914  1D27  2D37               	goto	l3073
  6915  1D28                     u4690:
  6916  1D28                     l3069:
  6917  1D28  0870               	movf	___lldiv@divisor,w
  6918  1D29  02F4               	subwf	___lldiv@dividend,f
  6919  1D2A  0871               	movf	___lldiv@divisor+1,w
  6920  1D2B  1C03               	skipc
  6921  1D2C  0F71               	incfsz	___lldiv@divisor+1,w
  6922  1D2D  02F5               	subwf	___lldiv@dividend+1,f
  6923  1D2E  0872               	movf	___lldiv@divisor+2,w
  6924  1D2F  1C03               	skipc
  6925  1D30  0F72               	incfsz	___lldiv@divisor+2,w
  6926  1D31  02F6               	subwf	___lldiv@dividend+2,f
  6927  1D32  0873               	movf	___lldiv@divisor+3,w
  6928  1D33  1C03               	skipc
  6929  1D34  0F73               	incfsz	___lldiv@divisor+3,w
  6930  1D35  02F7               	subwf	___lldiv@dividend+3,f
  6931  1D36                     l3071:
  6932  1D36  1479               	bsf	___lldiv@quotient,0
  6933  1D37                     l3073:
  6934  1D37  3001               	movlw	1
  6935  1D38                     u4705:
  6936  1D38  1003               	clrc
  6937  1D39  0CF3               	rrf	___lldiv@divisor+3,f
  6938  1D3A  0CF2               	rrf	___lldiv@divisor+2,f
  6939  1D3B  0CF1               	rrf	___lldiv@divisor+1,f
  6940  1D3C  0CF0               	rrf	___lldiv@divisor,f
  6941  1D3D  3EFF               	addlw	-1
  6942  1D3E  1D03               	skipz
  6943  1D3F  2D38               	goto	u4705
  6944  1D40                     l3075:
  6945  1D40  3001               	movlw	1
  6946  1D41  02FD               	subwf	___lldiv@counter,f
  6947  1D42  1D03               	btfss	3,2
  6948  1D43  2D45               	goto	u4711
  6949  1D44  2D46               	goto	u4710
  6950  1D45                     u4711:
  6951  1D45  2D0D               	goto	l3065
  6952  1D46                     u4710:
  6953  1D46                     l3077:
  6954  1D46  087C               	movf	___lldiv@quotient+3,w
  6955  1D47  00F3               	movwf	?___lldiv+3
  6956  1D48  087B               	movf	___lldiv@quotient+2,w
  6957  1D49  00F2               	movwf	?___lldiv+2
  6958  1D4A  087A               	movf	___lldiv@quotient+1,w
  6959  1D4B  00F1               	movwf	?___lldiv+1
  6960  1D4C  0879               	movf	___lldiv@quotient,w
  6961  1D4D  00F0               	movwf	?___lldiv
  6962  1D4E                     l440:
  6963  1D4E  0008               	return
  6964  1D4F                     __end_of___lldiv:
  6965                           
  6966                           	psect	text17
  6967  1D4F                     __ptext17:	
  6968 ;; *************** function ___fltol *****************
  6969 ;; Defined at:
  6970 ;;		line 43 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  f1              4   49[BANK0 ] unsigned long 
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;  exp1            1   59[BANK0 ] unsigned char 
  6975 ;;  sign1           1   58[BANK0 ] unsigned char 
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  4   49[BANK0 ] long 
  6978 ;; Registers used:
  6979 ;;		wreg, status,2, status,0
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6985 ;;      Params:         0       4       0       0       0
  6986 ;;      Locals:         0       2       0       0       0
  6987 ;;      Temps:          0       5       0       0       0
  6988 ;;      Totals:         0      11       0       0       0
  6989 ;;Total ram usage:       11 bytes
  6990 ;; Hardware stack levels used:    1
  6991 ;; This function calls:
  6992 ;;		Nothing
  6993 ;; This function is called by:
  6994 ;;		_sprintf
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998                           
  6999                           ;psect for function ___fltol
  7000  1D4F                     ___fltol:
  7001  1D4F                     l3121:	
  7002                           ;incstack = 0
  7003                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7004                           
  7005  1D4F  1003               	clrc
  7006  1D50  1283               	bcf	3,5	;RP0=0, select bank0
  7007  1D51  1303               	bcf	3,6	;RP1=0, select bank0
  7008  1D52  0D53               	rlf	___fltol@f1+2,w
  7009  1D53  0D54               	rlf	___fltol@f1+3,w
  7010  1D54  00D5               	movwf	??___fltol
  7011  1D55  0855               	movf	??___fltol,w
  7012  1D56  00DB               	movwf	___fltol@exp1
  7013  1D57  085B               	movf	___fltol@exp1,w
  7014  1D58  1D03               	btfss	3,2
  7015  1D59  2D5B               	goto	u4831
  7016  1D5A  2D5C               	goto	u4830
  7017  1D5B                     u4831:
  7018  1D5B  2D65               	goto	l3127
  7019  1D5C                     u4830:
  7020  1D5C                     l3123:
  7021  1D5C  3000               	movlw	0
  7022  1D5D  00D4               	movwf	?___fltol+3
  7023  1D5E  3000               	movlw	0
  7024  1D5F  00D3               	movwf	?___fltol+2
  7025  1D60  3000               	movlw	0
  7026  1D61  00D2               	movwf	?___fltol+1
  7027  1D62  3000               	movlw	0
  7028  1D63  00D1               	movwf	?___fltol
  7029  1D64  2DCA               	goto	l607
  7030  1D65                     l3127:
  7031  1D65  0851               	movf	___fltol@f1,w
  7032  1D66  00D5               	movwf	??___fltol
  7033  1D67  0852               	movf	___fltol@f1+1,w
  7034  1D68  00D6               	movwf	??___fltol+1
  7035  1D69  0853               	movf	___fltol@f1+2,w
  7036  1D6A  00D7               	movwf	??___fltol+2
  7037  1D6B  0854               	movf	___fltol@f1+3,w
  7038  1D6C  00D8               	movwf	??___fltol+3
  7039  1D6D  301F               	movlw	31
  7040  1D6E                     u4845:
  7041  1D6E  1003               	clrc
  7042  1D6F  0CD8               	rrf	??___fltol+3,f
  7043  1D70  0CD7               	rrf	??___fltol+2,f
  7044  1D71  0CD6               	rrf	??___fltol+1,f
  7045  1D72  0CD5               	rrf	??___fltol,f
  7046  1D73                     u4840:
  7047  1D73  3EFF               	addlw	-1
  7048  1D74  1D03               	skipz
  7049  1D75  2D6E               	goto	u4845
  7050  1D76  0855               	movf	??___fltol,w
  7051  1D77  00D9               	movwf	??___fltol+4
  7052  1D78  0859               	movf	??___fltol+4,w
  7053  1D79  00DA               	movwf	___fltol@sign1
  7054  1D7A                     l3129:
  7055  1D7A  17D3               	bsf	___fltol@f1+2,7
  7056  1D7B                     l3131:
  7057  1D7B  30FF               	movlw	255
  7058  1D7C  05D1               	andwf	___fltol@f1,f
  7059  1D7D  30FF               	movlw	255
  7060  1D7E  05D2               	andwf	___fltol@f1+1,f
  7061  1D7F  30FF               	movlw	255
  7062  1D80  05D3               	andwf	___fltol@f1+2,f
  7063  1D81  3000               	movlw	0
  7064  1D82  05D4               	andwf	___fltol@f1+3,f
  7065  1D83                     l3133:
  7066  1D83  3096               	movlw	150
  7067  1D84  02DB               	subwf	___fltol@exp1,f
  7068  1D85                     l3135:
  7069  1D85  1FDB               	btfss	___fltol@exp1,7
  7070  1D86  2D88               	goto	u4851
  7071  1D87  2D89               	goto	u4850
  7072  1D88                     u4851:
  7073  1D88  2DA3               	goto	l3145
  7074  1D89                     u4850:
  7075  1D89                     l3137:
  7076  1D89  085B               	movf	___fltol@exp1,w
  7077  1D8A  3A80               	xorlw	128
  7078  1D8B  3E97               	addlw	151
  7079  1D8C  1803               	skipnc
  7080  1D8D  2D8F               	goto	u4861
  7081  1D8E  2D90               	goto	u4860
  7082  1D8F                     u4861:
  7083  1D8F  2D91               	goto	l3143
  7084  1D90                     u4860:
  7085  1D90  2D5C               	goto	l3123
  7086  1D91                     l3143:
  7087  1D91  3001               	movlw	1
  7088  1D92                     u4875:
  7089  1D92  1003               	clrc
  7090  1D93  0CD4               	rrf	___fltol@f1+3,f
  7091  1D94  0CD3               	rrf	___fltol@f1+2,f
  7092  1D95  0CD2               	rrf	___fltol@f1+1,f
  7093  1D96  0CD1               	rrf	___fltol@f1,f
  7094  1D97  3EFF               	addlw	-1
  7095  1D98  1D03               	skipz
  7096  1D99  2D92               	goto	u4875
  7097  1D9A  3001               	movlw	1
  7098  1D9B  00D5               	movwf	??___fltol
  7099  1D9C  0855               	movf	??___fltol,w
  7100  1D9D  07DB               	addwf	___fltol@exp1,f
  7101  1D9E  1D03               	btfss	3,2
  7102  1D9F  2DA1               	goto	u4881
  7103  1DA0  2DA2               	goto	u4880
  7104  1DA1                     u4881:
  7105  1DA1  2D91               	goto	l3143
  7106  1DA2                     u4880:
  7107  1DA2  2DBA               	goto	l3153
  7108  1DA3                     l3145:
  7109  1DA3  3020               	movlw	32
  7110  1DA4  025B               	subwf	___fltol@exp1,w
  7111  1DA5  1C03               	skipc
  7112  1DA6  2DA8               	goto	u4891
  7113  1DA7  2DA9               	goto	u4890
  7114  1DA8                     u4891:
  7115  1DA8  2DB5               	goto	l614
  7116  1DA9                     u4890:
  7117  1DA9  2D5C               	goto	l3123
  7118  1DAA                     l3151:
  7119  1DAA  3001               	movlw	1
  7120  1DAB  00D5               	movwf	??___fltol
  7121  1DAC                     u4905:
  7122  1DAC  1003               	clrc
  7123  1DAD  0DD1               	rlf	___fltol@f1,f
  7124  1DAE  0DD2               	rlf	___fltol@f1+1,f
  7125  1DAF  0DD3               	rlf	___fltol@f1+2,f
  7126  1DB0  0DD4               	rlf	___fltol@f1+3,f
  7127  1DB1  0BD5               	decfsz	??___fltol,f
  7128  1DB2  2DAC               	goto	u4905
  7129  1DB3  3001               	movlw	1
  7130  1DB4  02DB               	subwf	___fltol@exp1,f
  7131  1DB5                     l614:
  7132  1DB5  085B               	movf	___fltol@exp1,w
  7133  1DB6  1D03               	btfss	3,2
  7134  1DB7  2DB9               	goto	u4911
  7135  1DB8  2DBA               	goto	u4910
  7136  1DB9                     u4911:
  7137  1DB9  2DAA               	goto	l3151
  7138  1DBA                     u4910:
  7139  1DBA                     l3153:
  7140  1DBA  085A               	movf	___fltol@sign1,w
  7141  1DBB  1903               	btfsc	3,2
  7142  1DBC  2DBE               	goto	u4921
  7143  1DBD  2DBF               	goto	u4920
  7144  1DBE                     u4921:
  7145  1DBE  2DCA               	goto	l617
  7146  1DBF                     u4920:
  7147  1DBF                     l3155:
  7148  1DBF  09D1               	comf	___fltol@f1,f
  7149  1DC0  09D2               	comf	___fltol@f1+1,f
  7150  1DC1  09D3               	comf	___fltol@f1+2,f
  7151  1DC2  09D4               	comf	___fltol@f1+3,f
  7152  1DC3  0AD1               	incf	___fltol@f1,f
  7153  1DC4  1903               	skipnz
  7154  1DC5  0AD2               	incf	___fltol@f1+1,f
  7155  1DC6  1903               	skipnz
  7156  1DC7  0AD3               	incf	___fltol@f1+2,f
  7157  1DC8  1903               	skipnz
  7158  1DC9  0AD4               	incf	___fltol@f1+3,f
  7159  1DCA                     l617:
  7160  1DCA                     l607:
  7161  1DCA  0008               	return
  7162  1DCB                     __end_of___fltol:
  7163                           
  7164                           	psect	text18
  7165  1A9B                     __ptext18:	
  7166 ;; *************** function ___flsub *****************
  7167 ;; Defined at:
  7168 ;;		line 242 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7169 ;; Parameters:    Size  Location     Type
  7170 ;;  a               4   70[BANK0 ] long 
  7171 ;;  b               4   74[BANK0 ] long 
  7172 ;; Auto vars:     Size  Location     Type
  7173 ;;		None
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  4   70[BANK0 ] long 
  7176 ;; Registers used:
  7177 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7183 ;;      Params:         0       8       0       0       0
  7184 ;;      Locals:         0       0       0       0       0
  7185 ;;      Temps:          0       0       0       0       0
  7186 ;;      Totals:         0       8       0       0       0
  7187 ;;Total ram usage:        8 bytes
  7188 ;; Hardware stack levels used:    1
  7189 ;; Hardware stack levels required when called:    1
  7190 ;; This function calls:
  7191 ;;		___fladd
  7192 ;; This function is called by:
  7193 ;;		_sprintf
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197                           
  7198                           ;psect for function ___flsub
  7199  1A9B                     ___flsub:
  7200  1A9B                     l3177:	
  7201                           ;incstack = 0
  7202                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7203                           
  7204  1A9B  3080               	movlw	128
  7205  1A9C  1283               	bcf	3,5	;RP0=0, select bank0
  7206  1A9D  1303               	bcf	3,6	;RP1=0, select bank0
  7207  1A9E  06E9               	xorwf	___flsub@a+3,f
  7208  1A9F                     l3179:
  7209  1A9F  086D               	movf	___flsub@b+3,w
  7210  1AA0  00D5               	movwf	___fladd@b+3
  7211  1AA1  086C               	movf	___flsub@b+2,w
  7212  1AA2  00D4               	movwf	___fladd@b+2
  7213  1AA3  086B               	movf	___flsub@b+1,w
  7214  1AA4  00D3               	movwf	___fladd@b+1
  7215  1AA5  086A               	movf	___flsub@b,w
  7216  1AA6  00D2               	movwf	___fladd@b
  7217  1AA7  0869               	movf	___flsub@a+3,w
  7218  1AA8  00D9               	movwf	___fladd@a+3
  7219  1AA9  0868               	movf	___flsub@a+2,w
  7220  1AAA  00D8               	movwf	___fladd@a+2
  7221  1AAB  0867               	movf	___flsub@a+1,w
  7222  1AAC  00D7               	movwf	___fladd@a+1
  7223  1AAD  0866               	movf	___flsub@a,w
  7224  1AAE  00D6               	movwf	___fladd@a
  7225  1AAF  160A  118A  22B6  160A  158A  	fcall	___fladd
  7226  1AB4  1283               	bcf	3,5	;RP0=0, select bank0
  7227  1AB5  1303               	bcf	3,6	;RP1=0, select bank0
  7228  1AB6  0855               	movf	?___fladd+3,w
  7229  1AB7  00E9               	movwf	?___flsub+3
  7230  1AB8  0854               	movf	?___fladd+2,w
  7231  1AB9  00E8               	movwf	?___flsub+2
  7232  1ABA  0853               	movf	?___fladd+1,w
  7233  1ABB  00E7               	movwf	?___flsub+1
  7234  1ABC  0852               	movf	?___fladd,w
  7235  1ABD  00E6               	movwf	?___flsub
  7236  1ABE                     l777:
  7237  1ABE  0008               	return
  7238  1ABF                     __end_of___flsub:
  7239                           
  7240                           	psect	text19
  7241  12B6                     __ptext19:	
  7242 ;; *************** function ___fladd *****************
  7243 ;; Defined at:
  7244 ;;		line 10 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7245 ;; Parameters:    Size  Location     Type
  7246 ;;  b               4   50[BANK0 ] long 
  7247 ;;  a               4   54[BANK0 ] long 
  7248 ;; Auto vars:     Size  Location     Type
  7249 ;;  grs             1   69[BANK0 ] unsigned char 
  7250 ;;  bexp            1   68[BANK0 ] unsigned char 
  7251 ;;  aexp            1   67[BANK0 ] unsigned char 
  7252 ;;  signs           1   66[BANK0 ] unsigned char 
  7253 ;; Return value:  Size  Location     Type
  7254 ;;                  4   50[BANK0 ] unsigned char 
  7255 ;; Registers used:
  7256 ;;		wreg, status,2, status,0, btemp+1
  7257 ;; Tracked objects:
  7258 ;;		On entry : 0/0
  7259 ;;		On exit  : 0/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7262 ;;      Params:         0       8       0       0       0
  7263 ;;      Locals:         0       4       0       0       0
  7264 ;;      Temps:          0       8       0       0       0
  7265 ;;      Totals:         0      20       0       0       0
  7266 ;;Total ram usage:       20 bytes
  7267 ;; Hardware stack levels used:    1
  7268 ;; This function calls:
  7269 ;;		Nothing
  7270 ;; This function is called by:
  7271 ;;		_sprintf
  7272 ;;		___flsub
  7273 ;; This function uses a non-reentrant model
  7274 ;;
  7275                           
  7276                           
  7277                           ;psect for function ___fladd
  7278  12B6                     ___fladd:
  7279  12B6                     l2495:	
  7280                           ;incstack = 0
  7281                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7282                           
  7283  12B6  1283               	bcf	3,5	;RP0=0, select bank0
  7284  12B7  1303               	bcf	3,6	;RP1=0, select bank0
  7285  12B8  0855               	movf	___fladd@b+3,w
  7286  12B9  3980               	andlw	128
  7287  12BA  00DA               	movwf	??___fladd
  7288  12BB  085A               	movf	??___fladd,w
  7289  12BC  00E2               	movwf	___fladd@signs
  7290  12BD                     l2497:
  7291  12BD  0855               	movf	___fladd@b+3,w
  7292  12BE  00DA               	movwf	??___fladd
  7293  12BF  075A               	addwf	??___fladd,w
  7294  12C0  00DB               	movwf	??___fladd+1
  7295  12C1  085B               	movf	??___fladd+1,w
  7296  12C2  00E4               	movwf	___fladd@bexp
  7297  12C3                     l2499:
  7298  12C3  1FD4               	btfss	___fladd@b+2,7
  7299  12C4  2AC6               	goto	u3221
  7300  12C5  2AC7               	goto	u3220
  7301  12C6                     u3221:
  7302  12C6  2AC8               	goto	l2503
  7303  12C7                     u3220:
  7304  12C7                     l2501:
  7305  12C7  1464               	bsf	___fladd@bexp,0
  7306  12C8                     l2503:
  7307  12C8  0864               	movf	___fladd@bexp,w
  7308  12C9  1903               	btfsc	3,2
  7309  12CA  2ACC               	goto	u3231
  7310  12CB  2ACD               	goto	u3230
  7311  12CC                     u3231:
  7312  12CC  2ADD               	goto	l2513
  7313  12CD                     u3230:
  7314  12CD                     l2505:
  7315  12CD  0A64               	incf	___fladd@bexp,w
  7316  12CE  1D03               	btfss	3,2
  7317  12CF  2AD1               	goto	u3241
  7318  12D0  2AD2               	goto	u3240
  7319  12D1                     u3241:
  7320  12D1  2ADA               	goto	l2509
  7321  12D2                     u3240:
  7322  12D2                     l2507:
  7323  12D2  3000               	movlw	0
  7324  12D3  00D5               	movwf	___fladd@b+3
  7325  12D4  3000               	movlw	0
  7326  12D5  00D4               	movwf	___fladd@b+2
  7327  12D6  3000               	movlw	0
  7328  12D7  00D3               	movwf	___fladd@b+1
  7329  12D8  3000               	movlw	0
  7330  12D9  00D2               	movwf	___fladd@b
  7331  12DA                     l2509:
  7332  12DA  17D4               	bsf	___fladd@b+2,7
  7333  12DB                     l2511:
  7334  12DB  01D5               	clrf	___fladd@b+3
  7335  12DC  2AE5               	goto	l2515
  7336  12DD                     l2513:
  7337  12DD  3000               	movlw	0
  7338  12DE  00D5               	movwf	___fladd@b+3
  7339  12DF  3000               	movlw	0
  7340  12E0  00D4               	movwf	___fladd@b+2
  7341  12E1  3000               	movlw	0
  7342  12E2  00D3               	movwf	___fladd@b+1
  7343  12E3  3000               	movlw	0
  7344  12E4  00D2               	movwf	___fladd@b
  7345  12E5                     l2515:
  7346  12E5  0859               	movf	___fladd@a+3,w
  7347  12E6  3980               	andlw	128
  7348  12E7  00DA               	movwf	??___fladd
  7349  12E8  085A               	movf	??___fladd,w
  7350  12E9  00E3               	movwf	___fladd@aexp
  7351  12EA                     l2517:
  7352  12EA  0863               	movf	___fladd@aexp,w
  7353  12EB  0662               	xorwf	___fladd@signs,w
  7354  12EC  1903               	skipnz
  7355  12ED  2AEF               	goto	u3251
  7356  12EE  2AF0               	goto	u3250
  7357  12EF                     u3251:
  7358  12EF  2AF1               	goto	l2521
  7359  12F0                     u3250:
  7360  12F0                     l2519:
  7361  12F0  1762               	bsf	___fladd@signs,6
  7362  12F1                     l2521:
  7363  12F1  0859               	movf	___fladd@a+3,w
  7364  12F2  00DA               	movwf	??___fladd
  7365  12F3  075A               	addwf	??___fladd,w
  7366  12F4  00DB               	movwf	??___fladd+1
  7367  12F5  085B               	movf	??___fladd+1,w
  7368  12F6  00E3               	movwf	___fladd@aexp
  7369  12F7                     l2523:
  7370  12F7  1FD8               	btfss	___fladd@a+2,7
  7371  12F8  2AFA               	goto	u3261
  7372  12F9  2AFB               	goto	u3260
  7373  12FA                     u3261:
  7374  12FA  2AFC               	goto	l2527
  7375  12FB                     u3260:
  7376  12FB                     l2525:
  7377  12FB  1463               	bsf	___fladd@aexp,0
  7378  12FC                     l2527:
  7379  12FC  0863               	movf	___fladd@aexp,w
  7380  12FD  1903               	btfsc	3,2
  7381  12FE  2B00               	goto	u3271
  7382  12FF  2B01               	goto	u3270
  7383  1300                     u3271:
  7384  1300  2B11               	goto	l2537
  7385  1301                     u3270:
  7386  1301                     l2529:
  7387  1301  0A63               	incf	___fladd@aexp,w
  7388  1302  1D03               	btfss	3,2
  7389  1303  2B05               	goto	u3281
  7390  1304  2B06               	goto	u3280
  7391  1305                     u3281:
  7392  1305  2B0E               	goto	l2533
  7393  1306                     u3280:
  7394  1306                     l2531:
  7395  1306  3000               	movlw	0
  7396  1307  00D9               	movwf	___fladd@a+3
  7397  1308  3000               	movlw	0
  7398  1309  00D8               	movwf	___fladd@a+2
  7399  130A  3000               	movlw	0
  7400  130B  00D7               	movwf	___fladd@a+1
  7401  130C  3000               	movlw	0
  7402  130D  00D6               	movwf	___fladd@a
  7403  130E                     l2533:
  7404  130E  17D8               	bsf	___fladd@a+2,7
  7405  130F                     l2535:
  7406  130F  01D9               	clrf	___fladd@a+3
  7407  1310  2B19               	goto	l731
  7408  1311                     l2537:
  7409  1311  3000               	movlw	0
  7410  1312  00D9               	movwf	___fladd@a+3
  7411  1313  3000               	movlw	0
  7412  1314  00D8               	movwf	___fladd@a+2
  7413  1315  3000               	movlw	0
  7414  1316  00D7               	movwf	___fladd@a+1
  7415  1317  3000               	movlw	0
  7416  1318  00D6               	movwf	___fladd@a
  7417  1319                     l731:
  7418  1319  0864               	movf	___fladd@bexp,w
  7419  131A  0263               	subwf	___fladd@aexp,w
  7420  131B  1803               	skipnc
  7421  131C  2B1E               	goto	u3291
  7422  131D  2B1F               	goto	u3290
  7423  131E                     u3291:
  7424  131E  2B63               	goto	l2573
  7425  131F                     u3290:
  7426  131F                     l2539:
  7427  131F  1F62               	btfss	___fladd@signs,6
  7428  1320  2B22               	goto	u3301
  7429  1321  2B23               	goto	u3300
  7430  1322                     u3301:
  7431  1322  2B27               	goto	l2543
  7432  1323                     u3300:
  7433  1323                     l2541:
  7434  1323  3080               	movlw	128
  7435  1324  00DA               	movwf	??___fladd
  7436  1325  085A               	movf	??___fladd,w
  7437  1326  06E2               	xorwf	___fladd@signs,f
  7438  1327                     l2543:
  7439  1327  0864               	movf	___fladd@bexp,w
  7440  1328  00DA               	movwf	??___fladd
  7441  1329  085A               	movf	??___fladd,w
  7442  132A  00E5               	movwf	___fladd@grs
  7443  132B                     l2545:
  7444  132B  0863               	movf	___fladd@aexp,w
  7445  132C  00DA               	movwf	??___fladd
  7446  132D  085A               	movf	??___fladd,w
  7447  132E  00E4               	movwf	___fladd@bexp
  7448  132F                     l2547:
  7449  132F  0865               	movf	___fladd@grs,w
  7450  1330  00DA               	movwf	??___fladd
  7451  1331  085A               	movf	??___fladd,w
  7452  1332  00E3               	movwf	___fladd@aexp
  7453  1333                     l2549:
  7454  1333  0852               	movf	___fladd@b,w
  7455  1334  00DA               	movwf	??___fladd
  7456  1335  085A               	movf	??___fladd,w
  7457  1336  00E5               	movwf	___fladd@grs
  7458  1337                     l2551:
  7459  1337  0856               	movf	___fladd@a,w
  7460  1338  00DA               	movwf	??___fladd
  7461  1339  085A               	movf	??___fladd,w
  7462  133A  00D2               	movwf	___fladd@b
  7463  133B                     l2553:
  7464  133B  0865               	movf	___fladd@grs,w
  7465  133C  00DA               	movwf	??___fladd
  7466  133D  085A               	movf	??___fladd,w
  7467  133E  00D6               	movwf	___fladd@a
  7468  133F                     l2555:
  7469  133F  0853               	movf	___fladd@b+1,w
  7470  1340  00DA               	movwf	??___fladd
  7471  1341  085A               	movf	??___fladd,w
  7472  1342  00E5               	movwf	___fladd@grs
  7473  1343                     l2557:
  7474  1343  0857               	movf	___fladd@a+1,w
  7475  1344  00DA               	movwf	??___fladd
  7476  1345  085A               	movf	??___fladd,w
  7477  1346  00D3               	movwf	___fladd@b+1
  7478  1347                     l2559:
  7479  1347  0865               	movf	___fladd@grs,w
  7480  1348  00DA               	movwf	??___fladd
  7481  1349  085A               	movf	??___fladd,w
  7482  134A  00D7               	movwf	___fladd@a+1
  7483  134B                     l2561:
  7484  134B  0854               	movf	___fladd@b+2,w
  7485  134C  00DA               	movwf	??___fladd
  7486  134D  085A               	movf	??___fladd,w
  7487  134E  00E5               	movwf	___fladd@grs
  7488  134F                     l2563:
  7489  134F  0858               	movf	___fladd@a+2,w
  7490  1350  00DA               	movwf	??___fladd
  7491  1351  085A               	movf	??___fladd,w
  7492  1352  00D4               	movwf	___fladd@b+2
  7493  1353                     l2565:
  7494  1353  0865               	movf	___fladd@grs,w
  7495  1354  00DA               	movwf	??___fladd
  7496  1355  085A               	movf	??___fladd,w
  7497  1356  00D8               	movwf	___fladd@a+2
  7498  1357                     l2567:
  7499  1357  0855               	movf	___fladd@b+3,w
  7500  1358  00DA               	movwf	??___fladd
  7501  1359  085A               	movf	??___fladd,w
  7502  135A  00E5               	movwf	___fladd@grs
  7503  135B                     l2569:
  7504  135B  0859               	movf	___fladd@a+3,w
  7505  135C  00DA               	movwf	??___fladd
  7506  135D  085A               	movf	??___fladd,w
  7507  135E  00D5               	movwf	___fladd@b+3
  7508  135F                     l2571:
  7509  135F  0865               	movf	___fladd@grs,w
  7510  1360  00DA               	movwf	??___fladd
  7511  1361  085A               	movf	??___fladd,w
  7512  1362  00D9               	movwf	___fladd@a+3
  7513  1363                     l2573:
  7514  1363  01E5               	clrf	___fladd@grs
  7515  1364                     l2575:
  7516  1364  0863               	movf	___fladd@aexp,w
  7517  1365  00DA               	movwf	??___fladd
  7518  1366  01DB               	clrf	??___fladd+1
  7519  1367  085B               	movf	??___fladd+1,w
  7520  1368  00DD               	movwf	??___fladd+3
  7521  1369  0864               	movf	___fladd@bexp,w
  7522  136A  025A               	subwf	??___fladd,w
  7523  136B  00DC               	movwf	??___fladd+2
  7524  136C  1C03               	skipc
  7525  136D  03DD               	decf	??___fladd+3,f
  7526  136E  085D               	movf	??___fladd+3,w
  7527  136F  3A80               	xorlw	128
  7528  1370  00FF               	movwf	btemp+1
  7529  1371  3080               	movlw	128
  7530  1372  027F               	subwf	btemp+1,w
  7531  1373  1D03               	skipz
  7532  1374  2B77               	goto	u3315
  7533  1375  301A               	movlw	26
  7534  1376  025C               	subwf	??___fladd+2,w
  7535  1377                     u3315:
  7536  1377  1C03               	skipc
  7537  1378  2B7A               	goto	u3311
  7538  1379  2B7B               	goto	u3310
  7539  137A                     u3311:
  7540  137A  2BB8               	goto	l2591
  7541  137B                     u3310:
  7542  137B                     l2577:
  7543  137B  1283               	bcf	3,5	;RP0=0, select bank0
  7544  137C  1303               	bcf	3,6	;RP1=0, select bank0
  7545  137D  0855               	movf	___fladd@b+3,w
  7546  137E  0454               	iorwf	___fladd@b+2,w
  7547  137F  0453               	iorwf	___fladd@b+1,w
  7548  1380  0452               	iorwf	___fladd@b,w
  7549  1381  1D03               	skipz
  7550  1382  2B84               	goto	u3321
  7551  1383  2B86               	goto	u3320
  7552  1384                     u3321:
  7553  1384  3001               	movlw	1
  7554  1385  2B87               	goto	u3330
  7555  1386                     u3320:
  7556  1386  3000               	movlw	0
  7557  1387                     u3330:
  7558  1387  00DA               	movwf	??___fladd
  7559  1388  085A               	movf	??___fladd,w
  7560  1389  00E5               	movwf	___fladd@grs
  7561  138A  3000               	movlw	0
  7562  138B  00D5               	movwf	___fladd@b+3
  7563  138C  3000               	movlw	0
  7564  138D  00D4               	movwf	___fladd@b+2
  7565  138E  3000               	movlw	0
  7566  138F  00D3               	movwf	___fladd@b+1
  7567  1390  3000               	movlw	0
  7568  1391  00D2               	movwf	___fladd@b
  7569  1392  0863               	movf	___fladd@aexp,w
  7570  1393  00DA               	movwf	??___fladd
  7571  1394  085A               	movf	??___fladd,w
  7572  1395  00E4               	movwf	___fladd@bexp
  7573  1396  2BC0               	goto	l735
  7574  1397                     l737:
  7575  1397  1C65               	btfss	___fladd@grs,0
  7576  1398  2B9A               	goto	u3341
  7577  1399  2B9B               	goto	u3340
  7578  139A                     u3341:
  7579  139A  2BA4               	goto	l2581
  7580  139B                     u3340:
  7581  139B                     l2579:
  7582  139B  0865               	movf	___fladd@grs,w
  7583  139C  00DA               	movwf	??___fladd
  7584  139D  1003               	clrc
  7585  139E  0C5A               	rrf	??___fladd,w
  7586  139F  3801               	iorlw	1
  7587  13A0  00DB               	movwf	??___fladd+1
  7588  13A1  085B               	movf	??___fladd+1,w
  7589  13A2  00E5               	movwf	___fladd@grs
  7590  13A3  2BA6               	goto	l2583
  7591  13A4                     l2581:
  7592  13A4  1003               	clrc
  7593  13A5  0CE5               	rrf	___fladd@grs,f
  7594  13A6                     l2583:
  7595  13A6  1C52               	btfss	___fladd@b,0
  7596  13A7  2BA9               	goto	u3351
  7597  13A8  2BAA               	goto	u3350
  7598  13A9                     u3351:
  7599  13A9  2BAB               	goto	l2587
  7600  13AA                     u3350:
  7601  13AA                     l2585:
  7602  13AA  17E5               	bsf	___fladd@grs,7
  7603  13AB                     l2587:
  7604  13AB  3001               	movlw	1
  7605  13AC  00DA               	movwf	??___fladd
  7606  13AD                     u3365:
  7607  13AD  0D55               	rlf	___fladd@b+3,w
  7608  13AE  0CD5               	rrf	___fladd@b+3,f
  7609  13AF  0CD4               	rrf	___fladd@b+2,f
  7610  13B0  0CD3               	rrf	___fladd@b+1,f
  7611  13B1  0CD2               	rrf	___fladd@b,f
  7612  13B2  0BDA               	decfsz	??___fladd& (0+127),f
  7613  13B3  2BAD               	goto	u3365
  7614  13B4                     l2589:
  7615  13B4  3001               	movlw	1
  7616  13B5  00DA               	movwf	??___fladd
  7617  13B6  085A               	movf	??___fladd,w
  7618  13B7  07E4               	addwf	___fladd@bexp,f
  7619  13B8                     l2591:
  7620  13B8  1283               	bcf	3,5	;RP0=0, select bank0
  7621  13B9  1303               	bcf	3,6	;RP1=0, select bank0
  7622  13BA  0863               	movf	___fladd@aexp,w
  7623  13BB  0264               	subwf	___fladd@bexp,w
  7624  13BC  1C03               	skipc
  7625  13BD  2BBF               	goto	u3371
  7626  13BE  2BC0               	goto	u3370
  7627  13BF                     u3371:
  7628  13BF  2B97               	goto	l737
  7629  13C0                     u3370:
  7630  13C0                     l735:
  7631  13C0  1B62               	btfsc	___fladd@signs,6
  7632  13C1  2BC3               	goto	u3381
  7633  13C2  2BC4               	goto	u3380
  7634  13C3                     u3381:
  7635  13C3  2C0F               	goto	l2617
  7636  13C4                     u3380:
  7637  13C4                     l2593:
  7638  13C4  0864               	movf	___fladd@bexp,w
  7639  13C5  1D03               	btfss	3,2
  7640  13C6  2BC8               	goto	u3391
  7641  13C7  2BC9               	goto	u3390
  7642  13C8                     u3391:
  7643  13C8  2BD2               	goto	l2599
  7644  13C9                     u3390:
  7645  13C9                     l2595:
  7646  13C9  3000               	movlw	0
  7647  13CA  00D5               	movwf	?___fladd+3
  7648  13CB  3000               	movlw	0
  7649  13CC  00D4               	movwf	?___fladd+2
  7650  13CD  3000               	movlw	0
  7651  13CE  00D3               	movwf	?___fladd+1
  7652  13CF  3000               	movlw	0
  7653  13D0  00D2               	movwf	?___fladd
  7654  13D1  2D3D               	goto	l744
  7655  13D2                     l2599:
  7656  13D2  0856               	movf	___fladd@a,w
  7657  13D3  07D2               	addwf	___fladd@b,f
  7658  13D4  0857               	movf	___fladd@a+1,w
  7659  13D5  1103               	clrz
  7660  13D6  1803               	skipnc
  7661  13D7  3E01               	addlw	1
  7662  13D8  1903               	skipnz
  7663  13D9  2BDB               	goto	u3401
  7664  13DA  07D3               	addwf	___fladd@b+1,f
  7665  13DB                     u3401:
  7666  13DB  0858               	movf	___fladd@a+2,w
  7667  13DC  1103               	clrz
  7668  13DD  1803               	skipnc
  7669  13DE  3E01               	addlw	1
  7670  13DF  1903               	skipnz
  7671  13E0  2BE2               	goto	u3402
  7672  13E1  07D4               	addwf	___fladd@b+2,f
  7673  13E2                     u3402:
  7674  13E2  0859               	movf	___fladd@a+3,w
  7675  13E3  1103               	clrz
  7676  13E4  1803               	skipnc
  7677  13E5  3E01               	addlw	1
  7678  13E6  1903               	skipnz
  7679  13E7  2BE9               	goto	u3403
  7680  13E8  07D5               	addwf	___fladd@b+3,f
  7681  13E9                     u3403:
  7682  13E9                     l2601:
  7683  13E9  1C55               	btfss	___fladd@b+3,0
  7684  13EA  2BEC               	goto	u3411
  7685  13EB  2BED               	goto	u3410
  7686  13EC                     u3411:
  7687  13EC  2CC3               	goto	l2651
  7688  13ED                     u3410:
  7689  13ED                     l2603:
  7690  13ED  1C65               	btfss	___fladd@grs,0
  7691  13EE  2BF0               	goto	u3421
  7692  13EF  2BF1               	goto	u3420
  7693  13F0                     u3421:
  7694  13F0  2BFA               	goto	l2607
  7695  13F1                     u3420:
  7696  13F1                     l2605:
  7697  13F1  0865               	movf	___fladd@grs,w
  7698  13F2  00DA               	movwf	??___fladd
  7699  13F3  1003               	clrc
  7700  13F4  0C5A               	rrf	??___fladd,w
  7701  13F5  3801               	iorlw	1
  7702  13F6  00DB               	movwf	??___fladd+1
  7703  13F7  085B               	movf	??___fladd+1,w
  7704  13F8  00E5               	movwf	___fladd@grs
  7705  13F9  2BFC               	goto	l2609
  7706  13FA                     l2607:
  7707  13FA  1003               	clrc
  7708  13FB  0CE5               	rrf	___fladd@grs,f
  7709  13FC                     l2609:
  7710  13FC  1C52               	btfss	___fladd@b,0
  7711  13FD  2BFF               	goto	u3431
  7712  13FE  2C00               	goto	u3430
  7713  13FF                     u3431:
  7714  13FF  2C01               	goto	l2613
  7715  1400                     u3430:
  7716  1400                     l2611:
  7717  1400  17E5               	bsf	___fladd@grs,7
  7718  1401                     l2613:
  7719  1401  3001               	movlw	1
  7720  1402  00DA               	movwf	??___fladd
  7721  1403                     u3445:
  7722  1403  0D55               	rlf	___fladd@b+3,w
  7723  1404  0CD5               	rrf	___fladd@b+3,f
  7724  1405  0CD4               	rrf	___fladd@b+2,f
  7725  1406  0CD3               	rrf	___fladd@b+1,f
  7726  1407  0CD2               	rrf	___fladd@b,f
  7727  1408  0BDA               	decfsz	??___fladd& (0+127),f
  7728  1409  2C03               	goto	u3445
  7729  140A                     l2615:
  7730  140A  3001               	movlw	1
  7731  140B  00DA               	movwf	??___fladd
  7732  140C  085A               	movf	??___fladd,w
  7733  140D  07E4               	addwf	___fladd@bexp,f
  7734  140E  2CC3               	goto	l2651
  7735  140F                     l2617:
  7736  140F  0855               	movf	___fladd@b+3,w
  7737  1410  3A80               	xorlw	128
  7738  1411  00FF               	movwf	btemp+1
  7739  1412  0859               	movf	___fladd@a+3,w
  7740  1413  3A80               	xorlw	128
  7741  1414  027F               	subwf	btemp+1,w
  7742  1415  1D03               	skipz
  7743  1416  2C21               	goto	u3453
  7744  1417  0858               	movf	___fladd@a+2,w
  7745  1418  0254               	subwf	___fladd@b+2,w
  7746  1419  1D03               	skipz
  7747  141A  2C21               	goto	u3453
  7748  141B  0857               	movf	___fladd@a+1,w
  7749  141C  0253               	subwf	___fladd@b+1,w
  7750  141D  1D03               	skipz
  7751  141E  2C21               	goto	u3453
  7752  141F  0856               	movf	___fladd@a,w
  7753  1420  0252               	subwf	___fladd@b,w
  7754  1421                     u3453:
  7755  1421  1803               	skipnc
  7756  1422  2C24               	goto	u3451
  7757  1423  2C25               	goto	u3450
  7758  1424                     u3451:
  7759  1424  2C7D               	goto	l2627
  7760  1425                     u3450:
  7761  1425                     l2619:
  7762  1425  30FF               	movlw	255
  7763  1426  00DA               	movwf	??___fladd
  7764  1427  30FF               	movlw	255
  7765  1428  00DB               	movwf	??___fladd+1
  7766  1429  30FF               	movlw	255
  7767  142A  00DC               	movwf	??___fladd+2
  7768  142B  30FF               	movlw	255
  7769  142C  00DD               	movwf	??___fladd+3
  7770  142D  0856               	movf	___fladd@a,w
  7771  142E  00DE               	movwf	??___fladd+4
  7772  142F  0857               	movf	___fladd@a+1,w
  7773  1430  00DF               	movwf	??___fladd+5
  7774  1431  0858               	movf	___fladd@a+2,w
  7775  1432  00E0               	movwf	??___fladd+6
  7776  1433  0859               	movf	___fladd@a+3,w
  7777  1434  00E1               	movwf	??___fladd+7
  7778  1435  0852               	movf	___fladd@b,w
  7779  1436  02DE               	subwf	??___fladd+4,f
  7780  1437  0853               	movf	___fladd@b+1,w
  7781  1438  1C03               	skipc
  7782  1439  0F53               	incfsz	___fladd@b+1,w
  7783  143A  2C3C               	goto	u3461
  7784  143B  2C3D               	goto	u3462
  7785  143C                     u3461:
  7786  143C  02DF               	subwf	??___fladd+5,f
  7787  143D                     u3462:
  7788  143D  0854               	movf	___fladd@b+2,w
  7789  143E  1C03               	skipc
  7790  143F  0F54               	incfsz	___fladd@b+2,w
  7791  1440  2C42               	goto	u3463
  7792  1441  2C43               	goto	u3464
  7793  1442                     u3463:
  7794  1442  02E0               	subwf	??___fladd+6,f
  7795  1443                     u3464:
  7796  1443  0855               	movf	___fladd@b+3,w
  7797  1444  1C03               	skipc
  7798  1445  0F55               	incfsz	___fladd@b+3,w
  7799  1446  2C48               	goto	u3465
  7800  1447  2C49               	goto	u3466
  7801  1448                     u3465:
  7802  1448  02E1               	subwf	??___fladd+7,f
  7803  1449                     u3466:
  7804  1449  085E               	movf	??___fladd+4,w
  7805  144A  07DA               	addwf	??___fladd,f
  7806  144B  085F               	movf	??___fladd+5,w
  7807  144C  1803               	skipnc
  7808  144D  0F5F               	incfsz	??___fladd+5,w
  7809  144E  2C50               	goto	u3470
  7810  144F  2C51               	goto	u3471
  7811  1450                     u3470:
  7812  1450  07DB               	addwf	??___fladd+1,f
  7813  1451                     u3471:
  7814  1451  0860               	movf	??___fladd+6,w
  7815  1452  1803               	skipnc
  7816  1453  0F60               	incfsz	??___fladd+6,w
  7817  1454  2C56               	goto	u3472
  7818  1455  2C57               	goto	u3473
  7819  1456                     u3472:
  7820  1456  07DC               	addwf	??___fladd+2,f
  7821  1457                     u3473:
  7822  1457  0861               	movf	??___fladd+7,w
  7823  1458  1803               	skipnc
  7824  1459  0A61               	incf	??___fladd+7,w
  7825  145A  07DD               	addwf	??___fladd+3,f
  7826  145B  085D               	movf	??___fladd+3,w
  7827  145C  00D5               	movwf	___fladd@b+3
  7828  145D  085C               	movf	??___fladd+2,w
  7829  145E  00D4               	movwf	___fladd@b+2
  7830  145F  085B               	movf	??___fladd+1,w
  7831  1460  00D3               	movwf	___fladd@b+1
  7832  1461  085A               	movf	??___fladd,w
  7833  1462  00D2               	movwf	___fladd@b
  7834  1463                     l2621:
  7835  1463  3080               	movlw	128
  7836  1464  00DA               	movwf	??___fladd
  7837  1465  085A               	movf	??___fladd,w
  7838  1466  06E2               	xorwf	___fladd@signs,f
  7839  1467  09E5               	comf	___fladd@grs,f
  7840  1468  0AE5               	incf	___fladd@grs,f
  7841  1469                     l2623:
  7842  1469  0865               	movf	___fladd@grs,w
  7843  146A  1D03               	btfss	3,2
  7844  146B  2C6D               	goto	u3481
  7845  146C  2C6E               	goto	u3480
  7846  146D                     u3481:
  7847  146D  2C8B               	goto	l752
  7848  146E                     u3480:
  7849  146E                     l2625:
  7850  146E  3001               	movlw	1
  7851  146F  07D2               	addwf	___fladd@b,f
  7852  1470  3000               	movlw	0
  7853  1471  1803               	skipnc
  7854  1472  3001               	movlw	1
  7855  1473  07D3               	addwf	___fladd@b+1,f
  7856  1474  3000               	movlw	0
  7857  1475  1803               	skipnc
  7858  1476  3001               	movlw	1
  7859  1477  07D4               	addwf	___fladd@b+2,f
  7860  1478  3000               	movlw	0
  7861  1479  1803               	skipnc
  7862  147A  3001               	movlw	1
  7863  147B  07D5               	addwf	___fladd@b+3,f
  7864  147C  2C8B               	goto	l752
  7865  147D                     l2627:
  7866  147D  0856               	movf	___fladd@a,w
  7867  147E  02D2               	subwf	___fladd@b,f
  7868  147F  0857               	movf	___fladd@a+1,w
  7869  1480  1C03               	skipc
  7870  1481  0F57               	incfsz	___fladd@a+1,w
  7871  1482  02D3               	subwf	___fladd@b+1,f
  7872  1483  0858               	movf	___fladd@a+2,w
  7873  1484  1C03               	skipc
  7874  1485  0F58               	incfsz	___fladd@a+2,w
  7875  1486  02D4               	subwf	___fladd@b+2,f
  7876  1487  0859               	movf	___fladd@a+3,w
  7877  1488  1C03               	skipc
  7878  1489  0F59               	incfsz	___fladd@a+3,w
  7879  148A  02D5               	subwf	___fladd@b+3,f
  7880  148B                     l752:
  7881  148B  0855               	movf	___fladd@b+3,w
  7882  148C  0454               	iorwf	___fladd@b+2,w
  7883  148D  0453               	iorwf	___fladd@b+1,w
  7884  148E  0452               	iorwf	___fladd@b,w
  7885  148F  1D03               	skipz
  7886  1490  2C92               	goto	u3491
  7887  1491  2C93               	goto	u3490
  7888  1492                     u3491:
  7889  1492  2CBF               	goto	l2649
  7890  1493                     u3490:
  7891  1493                     l2629:
  7892  1493  0865               	movf	___fladd@grs,w
  7893  1494  1D03               	btfss	3,2
  7894  1495  2C97               	goto	u3501
  7895  1496  2C98               	goto	u3500
  7896  1497                     u3501:
  7897  1497  2CBF               	goto	l2649
  7898  1498                     u3500:
  7899  1498                     l2631:
  7900  1498  3000               	movlw	0
  7901  1499  00D5               	movwf	?___fladd+3
  7902  149A  3000               	movlw	0
  7903  149B  00D4               	movwf	?___fladd+2
  7904  149C  3000               	movlw	0
  7905  149D  00D3               	movwf	?___fladd+1
  7906  149E  3000               	movlw	0
  7907  149F  00D2               	movwf	?___fladd
  7908  14A0  2D3D               	goto	l744
  7909  14A1                     l2635:
  7910  14A1  3001               	movlw	1
  7911  14A2  00DA               	movwf	??___fladd
  7912  14A3                     u3515:
  7913  14A3  1003               	clrc
  7914  14A4  0DD2               	rlf	___fladd@b,f
  7915  14A5  0DD3               	rlf	___fladd@b+1,f
  7916  14A6  0DD4               	rlf	___fladd@b+2,f
  7917  14A7  0DD5               	rlf	___fladd@b+3,f
  7918  14A8  0BDA               	decfsz	??___fladd,f
  7919  14A9  2CA3               	goto	u3515
  7920  14AA                     l2637:
  7921  14AA  1FE5               	btfss	___fladd@grs,7
  7922  14AB  2CAD               	goto	u3521
  7923  14AC  2CAE               	goto	u3520
  7924  14AD                     u3521:
  7925  14AD  2CAF               	goto	l756
  7926  14AE                     u3520:
  7927  14AE                     l2639:
  7928  14AE  1452               	bsf	___fladd@b,0
  7929  14AF                     l756:
  7930  14AF  1C65               	btfss	___fladd@grs,0
  7931  14B0  2CB2               	goto	u3531
  7932  14B1  2CB3               	goto	u3530
  7933  14B2                     u3531:
  7934  14B2  2CB6               	goto	l2643
  7935  14B3                     u3530:
  7936  14B3                     l2641:
  7937  14B3  1403               	setc
  7938  14B4  0DE5               	rlf	___fladd@grs,f
  7939  14B5  2CB8               	goto	l2645
  7940  14B6                     l2643:
  7941  14B6  1003               	clrc
  7942  14B7  0DE5               	rlf	___fladd@grs,f
  7943  14B8                     l2645:
  7944  14B8  0864               	movf	___fladd@bexp,w
  7945  14B9  1903               	btfsc	3,2
  7946  14BA  2CBC               	goto	u3541
  7947  14BB  2CBD               	goto	u3540
  7948  14BC                     u3541:
  7949  14BC  2CBF               	goto	l2649
  7950  14BD                     u3540:
  7951  14BD                     l2647:
  7952  14BD  3001               	movlw	1
  7953  14BE  02E4               	subwf	___fladd@bexp,f
  7954  14BF                     l2649:
  7955  14BF  1FD4               	btfss	___fladd@b+2,7
  7956  14C0  2CC2               	goto	u3551
  7957  14C1  2CC3               	goto	u3550
  7958  14C2                     u3551:
  7959  14C2  2CA1               	goto	l2635
  7960  14C3                     u3550:
  7961  14C3                     l2651:
  7962  14C3  01E3               	clrf	___fladd@aexp
  7963  14C4                     l2653:
  7964  14C4  1FE5               	btfss	___fladd@grs,7
  7965  14C5  2CC7               	goto	u3561
  7966  14C6  2CC8               	goto	u3560
  7967  14C7                     u3561:
  7968  14C7  2CD6               	goto	l2661
  7969  14C8                     u3560:
  7970  14C8                     l2655:
  7971  14C8  0865               	movf	___fladd@grs,w
  7972  14C9  397F               	andlw	127
  7973  14CA  1903               	btfsc	3,2
  7974  14CB  2CCD               	goto	u3571
  7975  14CC  2CCE               	goto	u3570
  7976  14CD                     u3571:
  7977  14CD  2CD1               	goto	l762
  7978  14CE                     u3570:
  7979  14CE                     l2657:
  7980  14CE  01E3               	clrf	___fladd@aexp
  7981  14CF  0AE3               	incf	___fladd@aexp,f
  7982  14D0  2CD6               	goto	l2661
  7983  14D1                     l762:
  7984  14D1  1C52               	btfss	___fladd@b,0
  7985  14D2  2CD4               	goto	u3581
  7986  14D3  2CD5               	goto	u3580
  7987  14D4                     u3581:
  7988  14D4  2CD6               	goto	l2661
  7989  14D5                     u3580:
  7990  14D5  2CCE               	goto	l2657
  7991  14D6                     l2661:
  7992  14D6  0863               	movf	___fladd@aexp,w
  7993  14D7  1903               	btfsc	3,2
  7994  14D8  2CDA               	goto	u3591
  7995  14D9  2CDB               	goto	u3590
  7996  14DA                     u3591:
  7997  14DA  2D0F               	goto	l765
  7998  14DB                     u3590:
  7999  14DB                     l2663:
  8000  14DB  3001               	movlw	1
  8001  14DC  07D2               	addwf	___fladd@b,f
  8002  14DD  3000               	movlw	0
  8003  14DE  1803               	skipnc
  8004  14DF  3001               	movlw	1
  8005  14E0  07D3               	addwf	___fladd@b+1,f
  8006  14E1  3000               	movlw	0
  8007  14E2  1803               	skipnc
  8008  14E3  3001               	movlw	1
  8009  14E4  07D4               	addwf	___fladd@b+2,f
  8010  14E5  3000               	movlw	0
  8011  14E6  1803               	skipnc
  8012  14E7  3001               	movlw	1
  8013  14E8  07D5               	addwf	___fladd@b+3,f
  8014  14E9                     l2665:
  8015  14E9  1C55               	btfss	___fladd@b+3,0
  8016  14EA  2CEC               	goto	u3601
  8017  14EB  2CED               	goto	u3600
  8018  14EC                     u3601:
  8019  14EC  2D0F               	goto	l765
  8020  14ED                     u3600:
  8021  14ED                     l2667:
  8022  14ED  0852               	movf	___fladd@b,w
  8023  14EE  00DA               	movwf	??___fladd
  8024  14EF  0853               	movf	___fladd@b+1,w
  8025  14F0  00DB               	movwf	??___fladd+1
  8026  14F1  0854               	movf	___fladd@b+2,w
  8027  14F2  00DC               	movwf	??___fladd+2
  8028  14F3  0855               	movf	___fladd@b+3,w
  8029  14F4  00DD               	movwf	??___fladd+3
  8030  14F5  3001               	movlw	1
  8031  14F6  00DE               	movwf	??___fladd+4
  8032  14F7                     u3615:
  8033  14F7  0D5D               	rlf	??___fladd+3,w
  8034  14F8  0CDD               	rrf	??___fladd+3,f
  8035  14F9  0CDC               	rrf	??___fladd+2,f
  8036  14FA  0CDB               	rrf	??___fladd+1,f
  8037  14FB  0CDA               	rrf	??___fladd,f
  8038  14FC                     u3610:
  8039  14FC  0BDE               	decfsz	??___fladd+4,f
  8040  14FD  2CF7               	goto	u3615
  8041  14FE  085D               	movf	??___fladd+3,w
  8042  14FF  00D5               	movwf	___fladd@b+3
  8043  1500  085C               	movf	??___fladd+2,w
  8044  1501  00D4               	movwf	___fladd@b+2
  8045  1502  085B               	movf	??___fladd+1,w
  8046  1503  00D3               	movwf	___fladd@b+1
  8047  1504  085A               	movf	??___fladd,w
  8048  1505  00D2               	movwf	___fladd@b
  8049  1506  0A64               	incf	___fladd@bexp,w
  8050  1507  1903               	btfsc	3,2
  8051  1508  2D0A               	goto	u3621
  8052  1509  2D0B               	goto	u3620
  8053  150A                     u3621:
  8054  150A  2D0F               	goto	l765
  8055  150B                     u3620:
  8056  150B                     l2669:
  8057  150B  3001               	movlw	1
  8058  150C  00DA               	movwf	??___fladd
  8059  150D  085A               	movf	??___fladd,w
  8060  150E  07E4               	addwf	___fladd@bexp,f
  8061  150F                     l765:
  8062  150F  0A64               	incf	___fladd@bexp,w
  8063  1510  1903               	btfsc	3,2
  8064  1511  2D13               	goto	u3631
  8065  1512  2D14               	goto	u3630
  8066  1513                     u3631:
  8067  1513  2D19               	goto	l2673
  8068  1514                     u3630:
  8069  1514                     l2671:
  8070  1514  0864               	movf	___fladd@bexp,w
  8071  1515  1D03               	btfss	3,2
  8072  1516  2D18               	goto	u3641
  8073  1517  2D19               	goto	u3640
  8074  1518                     u3641:
  8075  1518  2D27               	goto	l2679
  8076  1519                     u3640:
  8077  1519                     l2673:
  8078  1519  3000               	movlw	0
  8079  151A  00D5               	movwf	___fladd@b+3
  8080  151B  3000               	movlw	0
  8081  151C  00D4               	movwf	___fladd@b+2
  8082  151D  3000               	movlw	0
  8083  151E  00D3               	movwf	___fladd@b+1
  8084  151F  3000               	movlw	0
  8085  1520  00D2               	movwf	___fladd@b
  8086  1521                     l2675:
  8087  1521  0864               	movf	___fladd@bexp,w
  8088  1522  1D03               	btfss	3,2
  8089  1523  2D25               	goto	u3651
  8090  1524  2D26               	goto	u3650
  8091  1525                     u3651:
  8092  1525  2D27               	goto	l2679
  8093  1526                     u3650:
  8094  1526                     l2677:
  8095  1526  01E2               	clrf	___fladd@signs
  8096  1527                     l2679:
  8097  1527  1C64               	btfss	___fladd@bexp,0
  8098  1528  2D2A               	goto	u3661
  8099  1529  2D2B               	goto	u3660
  8100  152A                     u3661:
  8101  152A  2D2D               	goto	l2683
  8102  152B                     u3660:
  8103  152B                     l2681:
  8104  152B  17D4               	bsf	___fladd@b+2,7
  8105  152C  2D31               	goto	l773
  8106  152D                     l2683:
  8107  152D  307F               	movlw	127
  8108  152E  00DA               	movwf	??___fladd
  8109  152F  085A               	movf	??___fladd,w
  8110  1530  05D4               	andwf	___fladd@b+2,f
  8111  1531                     l773:
  8112  1531  0864               	movf	___fladd@bexp,w
  8113  1532  00DA               	movwf	??___fladd
  8114  1533  1003               	clrc
  8115  1534  0C5A               	rrf	??___fladd,w
  8116  1535  00DB               	movwf	??___fladd+1
  8117  1536  085B               	movf	??___fladd+1,w
  8118  1537  00D5               	movwf	___fladd@b+3
  8119  1538                     l2685:
  8120  1538  1FE2               	btfss	___fladd@signs,7
  8121  1539  2D3B               	goto	u3671
  8122  153A  2D3C               	goto	u3670
  8123  153B                     u3671:
  8124  153B  2D3D               	goto	l774
  8125  153C                     u3670:
  8126  153C                     l2687:
  8127  153C  17D5               	bsf	___fladd@b+3,7
  8128  153D                     l774:
  8129  153D                     l744:
  8130  153D  0008               	return
  8131  153E                     __end_of___fladd:
  8132                           
  8133                           	psect	text20
  8134  19C2                     __ptext20:	
  8135 ;; *************** function ___flneg *****************
  8136 ;; Defined at:
  8137 ;;		line 15 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8138 ;; Parameters:    Size  Location     Type
  8139 ;;  f1              4    0[COMMON] unsigned char 
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;		None
  8142 ;; Return value:  Size  Location     Type
  8143 ;;                  4    0[COMMON] unsigned char 
  8144 ;; Registers used:
  8145 ;;		wreg
  8146 ;; Tracked objects:
  8147 ;;		On entry : 0/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8151 ;;      Params:         4       0       0       0       0
  8152 ;;      Locals:         0       0       0       0       0
  8153 ;;      Temps:          0       0       0       0       0
  8154 ;;      Totals:         4       0       0       0       0
  8155 ;;Total ram usage:        4 bytes
  8156 ;; Hardware stack levels used:    1
  8157 ;; This function calls:
  8158 ;;		Nothing
  8159 ;; This function is called by:
  8160 ;;		_sprintf
  8161 ;; This function uses a non-reentrant model
  8162 ;;
  8163                           
  8164                           
  8165                           ;psect for function ___flneg
  8166  19C2                     ___flneg:
  8167  19C2                     l3113:	
  8168                           ;incstack = 0
  8169                           ; Regs used in ___flneg: [wreg]
  8170                           
  8171  19C2  0873               	movf	___flneg@f1+3,w
  8172  19C3  0472               	iorwf	___flneg@f1+2,w
  8173  19C4  0471               	iorwf	___flneg@f1+1,w
  8174  19C5  0470               	iorwf	___flneg@f1,w
  8175  19C6  1903               	skipnz
  8176  19C7  29C9               	goto	u4821
  8177  19C8  29CA               	goto	u4820
  8178  19C9                     u4821:
  8179  19C9  29CC               	goto	l3117
  8180  19CA                     u4820:
  8181  19CA                     l3115:
  8182  19CA  3080               	movlw	128
  8183  19CB  06F3               	xorwf	___flneg@f1+3,f
  8184  19CC                     l3117:
  8185  19CC                     l603:
  8186  19CC  0008               	return
  8187  19CD                     __end_of___flneg:
  8188                           
  8189                           	psect	text21
  8190  1009                     __ptext21:	
  8191 ;; *************** function ___flge *****************
  8192 ;; Defined at:
  8193 ;;		line 4 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8194 ;; Parameters:    Size  Location     Type
  8195 ;;  ff1             4    0[COMMON] unsigned char 
  8196 ;;  ff2             4    4[COMMON] unsigned char 
  8197 ;; Auto vars:     Size  Location     Type
  8198 ;;		None
  8199 ;; Return value:  Size  Location     Type
  8200 ;;		None               void
  8201 ;; Registers used:
  8202 ;;		wreg, status,2, status,0
  8203 ;; Tracked objects:
  8204 ;;		On entry : 0/0
  8205 ;;		On exit  : 0/0
  8206 ;;		Unchanged: 0/0
  8207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8208 ;;      Params:         8       0       0       0       0
  8209 ;;      Locals:         0       0       0       0       0
  8210 ;;      Temps:          4       0       0       0       0
  8211 ;;      Totals:        12       0       0       0       0
  8212 ;;Total ram usage:       12 bytes
  8213 ;; Hardware stack levels used:    1
  8214 ;; This function calls:
  8215 ;;		Nothing
  8216 ;; This function is called by:
  8217 ;;		_sprintf
  8218 ;; This function uses a non-reentrant model
  8219 ;;
  8220                           
  8221                           
  8222                           ;psect for function ___flge
  8223  1009                     ___flge:
  8224  1009                     l3093:	
  8225                           ;incstack = 0
  8226                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8227                           
  8228  1009  3000               	movlw	0
  8229  100A  0570               	andwf	___flge@ff1,w
  8230  100B  00F8               	movwf	??___flge
  8231  100C  3000               	movlw	0
  8232  100D  0571               	andwf	___flge@ff1+1,w
  8233  100E  00F9               	movwf	??___flge+1
  8234  100F  3080               	movlw	128
  8235  1010  0572               	andwf	___flge@ff1+2,w
  8236  1011  00FA               	movwf	??___flge+2
  8237  1012  307F               	movlw	127
  8238  1013  0573               	andwf	___flge@ff1+3,w
  8239  1014  00FB               	movwf	??___flge+3
  8240  1015  087B               	movf	??___flge+3,w
  8241  1016  047A               	iorwf	??___flge+2,w
  8242  1017  0479               	iorwf	??___flge+1,w
  8243  1018  0478               	iorwf	??___flge,w
  8244  1019  1D03               	skipz
  8245  101A  281C               	goto	u4751
  8246  101B  281D               	goto	u4750
  8247  101C                     u4751:
  8248  101C  2825               	goto	l595
  8249  101D                     u4750:
  8250  101D                     l3095:
  8251  101D  3000               	movlw	0
  8252  101E  00F3               	movwf	___flge@ff1+3
  8253  101F  3000               	movlw	0
  8254  1020  00F2               	movwf	___flge@ff1+2
  8255  1021  3000               	movlw	0
  8256  1022  00F1               	movwf	___flge@ff1+1
  8257  1023  3000               	movlw	0
  8258  1024  00F0               	movwf	___flge@ff1
  8259  1025                     l595:
  8260  1025  3000               	movlw	0
  8261  1026  0574               	andwf	___flge@ff2,w
  8262  1027  00F8               	movwf	??___flge
  8263  1028  3000               	movlw	0
  8264  1029  0575               	andwf	___flge@ff2+1,w
  8265  102A  00F9               	movwf	??___flge+1
  8266  102B  3080               	movlw	128
  8267  102C  0576               	andwf	___flge@ff2+2,w
  8268  102D  00FA               	movwf	??___flge+2
  8269  102E  307F               	movlw	127
  8270  102F  0577               	andwf	___flge@ff2+3,w
  8271  1030  00FB               	movwf	??___flge+3
  8272  1031  087B               	movf	??___flge+3,w
  8273  1032  047A               	iorwf	??___flge+2,w
  8274  1033  0479               	iorwf	??___flge+1,w
  8275  1034  0478               	iorwf	??___flge,w
  8276  1035  1D03               	skipz
  8277  1036  2838               	goto	u4761
  8278  1037  2839               	goto	u4760
  8279  1038                     u4761:
  8280  1038  2841               	goto	l3099
  8281  1039                     u4760:
  8282  1039                     l3097:
  8283  1039  3000               	movlw	0
  8284  103A  00F7               	movwf	___flge@ff2+3
  8285  103B  3000               	movlw	0
  8286  103C  00F6               	movwf	___flge@ff2+2
  8287  103D  3000               	movlw	0
  8288  103E  00F5               	movwf	___flge@ff2+1
  8289  103F  3000               	movlw	0
  8290  1040  00F4               	movwf	___flge@ff2
  8291  1041                     l3099:
  8292  1041  1FF3               	btfss	___flge@ff1+3,7
  8293  1042  2844               	goto	u4771
  8294  1043  2845               	goto	u4770
  8295  1044                     u4771:
  8296  1044  2869               	goto	l3103
  8297  1045                     u4770:
  8298  1045                     l3101:
  8299  1045  3000               	movlw	0
  8300  1046  00F8               	movwf	??___flge
  8301  1047  3000               	movlw	0
  8302  1048  00F9               	movwf	??___flge+1
  8303  1049  3000               	movlw	0
  8304  104A  00FA               	movwf	??___flge+2
  8305  104B  3080               	movlw	128
  8306  104C  00FB               	movwf	??___flge+3
  8307  104D  0870               	movf	___flge@ff1,w
  8308  104E  02F8               	subwf	??___flge,f
  8309  104F  0871               	movf	___flge@ff1+1,w
  8310  1050  1C03               	skipc
  8311  1051  0F71               	incfsz	___flge@ff1+1,w
  8312  1052  2854               	goto	u4781
  8313  1053  2855               	goto	u4782
  8314  1054                     u4781:
  8315  1054  02F9               	subwf	??___flge+1,f
  8316  1055                     u4782:
  8317  1055  0872               	movf	___flge@ff1+2,w
  8318  1056  1C03               	skipc
  8319  1057  0F72               	incfsz	___flge@ff1+2,w
  8320  1058  285A               	goto	u4783
  8321  1059  285B               	goto	u4784
  8322  105A                     u4783:
  8323  105A  02FA               	subwf	??___flge+2,f
  8324  105B                     u4784:
  8325  105B  0873               	movf	___flge@ff1+3,w
  8326  105C  1C03               	skipc
  8327  105D  0F73               	incfsz	___flge@ff1+3,w
  8328  105E  2860               	goto	u4785
  8329  105F  2861               	goto	u4786
  8330  1060                     u4785:
  8331  1060  02FB               	subwf	??___flge+3,f
  8332  1061                     u4786:
  8333  1061  087B               	movf	??___flge+3,w
  8334  1062  00F3               	movwf	___flge@ff1+3
  8335  1063  087A               	movf	??___flge+2,w
  8336  1064  00F2               	movwf	___flge@ff1+2
  8337  1065  0879               	movf	??___flge+1,w
  8338  1066  00F1               	movwf	___flge@ff1+1
  8339  1067  0878               	movf	??___flge,w
  8340  1068  00F0               	movwf	___flge@ff1
  8341  1069                     l3103:
  8342  1069  1FF7               	btfss	___flge@ff2+3,7
  8343  106A  286C               	goto	u4791
  8344  106B  286D               	goto	u4790
  8345  106C                     u4791:
  8346  106C  2891               	goto	l598
  8347  106D                     u4790:
  8348  106D                     l3105:
  8349  106D  3000               	movlw	0
  8350  106E  00F8               	movwf	??___flge
  8351  106F  3000               	movlw	0
  8352  1070  00F9               	movwf	??___flge+1
  8353  1071  3000               	movlw	0
  8354  1072  00FA               	movwf	??___flge+2
  8355  1073  3080               	movlw	128
  8356  1074  00FB               	movwf	??___flge+3
  8357  1075  0874               	movf	___flge@ff2,w
  8358  1076  02F8               	subwf	??___flge,f
  8359  1077  0875               	movf	___flge@ff2+1,w
  8360  1078  1C03               	skipc
  8361  1079  0F75               	incfsz	___flge@ff2+1,w
  8362  107A  287C               	goto	u4801
  8363  107B  287D               	goto	u4802
  8364  107C                     u4801:
  8365  107C  02F9               	subwf	??___flge+1,f
  8366  107D                     u4802:
  8367  107D  0876               	movf	___flge@ff2+2,w
  8368  107E  1C03               	skipc
  8369  107F  0F76               	incfsz	___flge@ff2+2,w
  8370  1080  2882               	goto	u4803
  8371  1081  2883               	goto	u4804
  8372  1082                     u4803:
  8373  1082  02FA               	subwf	??___flge+2,f
  8374  1083                     u4804:
  8375  1083  0877               	movf	___flge@ff2+3,w
  8376  1084  1C03               	skipc
  8377  1085  0F77               	incfsz	___flge@ff2+3,w
  8378  1086  2888               	goto	u4805
  8379  1087  2889               	goto	u4806
  8380  1088                     u4805:
  8381  1088  02FB               	subwf	??___flge+3,f
  8382  1089                     u4806:
  8383  1089  087B               	movf	??___flge+3,w
  8384  108A  00F7               	movwf	___flge@ff2+3
  8385  108B  087A               	movf	??___flge+2,w
  8386  108C  00F6               	movwf	___flge@ff2+2
  8387  108D  0879               	movf	??___flge+1,w
  8388  108E  00F5               	movwf	___flge@ff2+1
  8389  108F  0878               	movf	??___flge,w
  8390  1090  00F4               	movwf	___flge@ff2
  8391  1091                     l598:
  8392  1091  3080               	movlw	128
  8393  1092  06F3               	xorwf	___flge@ff1+3,f
  8394  1093  3080               	movlw	128
  8395  1094  06F7               	xorwf	___flge@ff2+3,f
  8396  1095  0877               	movf	___flge@ff2+3,w
  8397  1096  0273               	subwf	___flge@ff1+3,w
  8398  1097  1D03               	skipz
  8399  1098  28A3               	goto	u4815
  8400  1099  0876               	movf	___flge@ff2+2,w
  8401  109A  0272               	subwf	___flge@ff1+2,w
  8402  109B  1D03               	skipz
  8403  109C  28A3               	goto	u4815
  8404  109D  0875               	movf	___flge@ff2+1,w
  8405  109E  0271               	subwf	___flge@ff1+1,w
  8406  109F  1D03               	skipz
  8407  10A0  28A3               	goto	u4815
  8408  10A1  0874               	movf	___flge@ff2,w
  8409  10A2  0270               	subwf	___flge@ff1,w
  8410  10A3                     u4815:
  8411  10A3  1803               	skipnc
  8412  10A4  28A6               	goto	u4811
  8413  10A5  28A7               	goto	u4810
  8414  10A6                     u4811:
  8415  10A6  28A9               	goto	l3109
  8416  10A7                     u4810:
  8417  10A7                     l3107:
  8418  10A7  1003               	clrc
  8419  10A8  28AA               	goto	l599
  8420  10A9                     l3109:
  8421  10A9  1403               	setc
  8422  10AA                     l599:
  8423  10AA  0008               	return
  8424  10AB                     __end_of___flge:
  8425                           
  8426                           	psect	text22
  8427  1BF6                     __ptext22:	
  8428 ;; *************** function ___fleq *****************
  8429 ;; Defined at:
  8430 ;;		line 4 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;  ff1             4    0[COMMON] unsigned char 
  8433 ;;  ff2             4    4[COMMON] unsigned char 
  8434 ;; Auto vars:     Size  Location     Type
  8435 ;;		None
  8436 ;; Return value:  Size  Location     Type
  8437 ;;		None               void
  8438 ;; Registers used:
  8439 ;;		wreg, status,2, status,0
  8440 ;; Tracked objects:
  8441 ;;		On entry : 0/0
  8442 ;;		On exit  : 0/0
  8443 ;;		Unchanged: 0/0
  8444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8445 ;;      Params:         8       0       0       0       0
  8446 ;;      Locals:         0       0       0       0       0
  8447 ;;      Temps:          4       0       0       0       0
  8448 ;;      Totals:        12       0       0       0       0
  8449 ;;Total ram usage:       12 bytes
  8450 ;; Hardware stack levels used:    1
  8451 ;; This function calls:
  8452 ;;		Nothing
  8453 ;; This function is called by:
  8454 ;;		_sprintf
  8455 ;; This function uses a non-reentrant model
  8456 ;;
  8457                           
  8458                           
  8459                           ;psect for function ___fleq
  8460  1BF6                     ___fleq:
  8461  1BF6                     l3081:	
  8462                           ;incstack = 0
  8463                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8464                           
  8465  1BF6  3000               	movlw	0
  8466  1BF7  0570               	andwf	___fleq@ff1,w
  8467  1BF8  00F8               	movwf	??___fleq
  8468  1BF9  3000               	movlw	0
  8469  1BFA  0571               	andwf	___fleq@ff1+1,w
  8470  1BFB  00F9               	movwf	??___fleq+1
  8471  1BFC  3080               	movlw	128
  8472  1BFD  0572               	andwf	___fleq@ff1+2,w
  8473  1BFE  00FA               	movwf	??___fleq+2
  8474  1BFF  307F               	movlw	127
  8475  1C00  0573               	andwf	___fleq@ff1+3,w
  8476  1C01  00FB               	movwf	??___fleq+3
  8477  1C02  087B               	movf	??___fleq+3,w
  8478  1C03  047A               	iorwf	??___fleq+2,w
  8479  1C04  0479               	iorwf	??___fleq+1,w
  8480  1C05  0478               	iorwf	??___fleq,w
  8481  1C06  1D03               	skipz
  8482  1C07  2C09               	goto	u4721
  8483  1C08  2C0A               	goto	u4720
  8484  1C09                     u4721:
  8485  1C09  2C12               	goto	l590
  8486  1C0A                     u4720:
  8487  1C0A                     l3083:
  8488  1C0A  3000               	movlw	0
  8489  1C0B  00F3               	movwf	___fleq@ff1+3
  8490  1C0C  3000               	movlw	0
  8491  1C0D  00F2               	movwf	___fleq@ff1+2
  8492  1C0E  3000               	movlw	0
  8493  1C0F  00F1               	movwf	___fleq@ff1+1
  8494  1C10  3000               	movlw	0
  8495  1C11  00F0               	movwf	___fleq@ff1
  8496  1C12                     l590:
  8497  1C12  3000               	movlw	0
  8498  1C13  0574               	andwf	___fleq@ff2,w
  8499  1C14  00F8               	movwf	??___fleq
  8500  1C15  3000               	movlw	0
  8501  1C16  0575               	andwf	___fleq@ff2+1,w
  8502  1C17  00F9               	movwf	??___fleq+1
  8503  1C18  3080               	movlw	128
  8504  1C19  0576               	andwf	___fleq@ff2+2,w
  8505  1C1A  00FA               	movwf	??___fleq+2
  8506  1C1B  307F               	movlw	127
  8507  1C1C  0577               	andwf	___fleq@ff2+3,w
  8508  1C1D  00FB               	movwf	??___fleq+3
  8509  1C1E  087B               	movf	??___fleq+3,w
  8510  1C1F  047A               	iorwf	??___fleq+2,w
  8511  1C20  0479               	iorwf	??___fleq+1,w
  8512  1C21  0478               	iorwf	??___fleq,w
  8513  1C22  1D03               	skipz
  8514  1C23  2C25               	goto	u4731
  8515  1C24  2C26               	goto	u4730
  8516  1C25                     u4731:
  8517  1C25  2C2E               	goto	l591
  8518  1C26                     u4730:
  8519  1C26                     l3085:
  8520  1C26  3000               	movlw	0
  8521  1C27  00F7               	movwf	___fleq@ff2+3
  8522  1C28  3000               	movlw	0
  8523  1C29  00F6               	movwf	___fleq@ff2+2
  8524  1C2A  3000               	movlw	0
  8525  1C2B  00F5               	movwf	___fleq@ff2+1
  8526  1C2C  3000               	movlw	0
  8527  1C2D  00F4               	movwf	___fleq@ff2
  8528  1C2E                     l591:
  8529  1C2E  0877               	movf	___fleq@ff2+3,w
  8530  1C2F  0673               	xorwf	___fleq@ff1+3,w
  8531  1C30  1D03               	skipz
  8532  1C31  2C3C               	goto	u4745
  8533  1C32  0876               	movf	___fleq@ff2+2,w
  8534  1C33  0672               	xorwf	___fleq@ff1+2,w
  8535  1C34  1D03               	skipz
  8536  1C35  2C3C               	goto	u4745
  8537  1C36  0875               	movf	___fleq@ff2+1,w
  8538  1C37  0671               	xorwf	___fleq@ff1+1,w
  8539  1C38  1D03               	skipz
  8540  1C39  2C3C               	goto	u4745
  8541  1C3A  0874               	movf	___fleq@ff2,w
  8542  1C3B  0670               	xorwf	___fleq@ff1,w
  8543  1C3C                     u4745:
  8544  1C3C  1903               	skipnz
  8545  1C3D  2C3F               	goto	u4741
  8546  1C3E  2C40               	goto	u4740
  8547  1C3F                     u4741:
  8548  1C3F  2C42               	goto	l3089
  8549  1C40                     u4740:
  8550  1C40                     l3087:
  8551  1C40  1003               	clrc
  8552  1C41  2C43               	goto	l592
  8553  1C42                     l3089:
  8554  1C42  1403               	setc
  8555  1C43                     l592:
  8556  1C43  0008               	return
  8557  1C44                     __end_of___fleq:
  8558                           
  8559                           	psect	text23
  8560  19A5                     __ptext23:	
  8561 ;; *************** function _spiWrite *****************
  8562 ;; Defined at:
  8563 ;;		line 34 in file "SPI.c"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;  dat             1    wreg     unsigned char 
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;  dat             1    0[COMMON] unsigned char 
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  1    wreg      void 
  8570 ;; Registers used:
  8571 ;;		wreg
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8577 ;;      Params:         0       0       0       0       0
  8578 ;;      Locals:         1       0       0       0       0
  8579 ;;      Temps:          0       0       0       0       0
  8580 ;;      Totals:         1       0       0       0       0
  8581 ;;Total ram usage:        1 bytes
  8582 ;; Hardware stack levels used:    1
  8583 ;; This function calls:
  8584 ;;		Nothing
  8585 ;; This function is called by:
  8586 ;;		_main
  8587 ;; This function uses a non-reentrant model
  8588 ;;
  8589                           
  8590                           
  8591                           ;psect for function _spiWrite
  8592  19A5                     _spiWrite:
  8593                           
  8594                           ;incstack = 0
  8595                           ; Regs used in _spiWrite: [wreg]
  8596                           ;spiWrite@dat stored from wreg
  8597  19A5  00F0               	movwf	spiWrite@dat
  8598  19A6                     l3227:
  8599                           
  8600                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  8601  19A6  0870               	movf	spiWrite@dat,w
  8602  19A7  1283               	bcf	3,5	;RP0=0, select bank0
  8603  19A8  1303               	bcf	3,6	;RP1=0, select bank0
  8604  19A9  0093               	movwf	19	;volatile
  8605  19AA                     l26:
  8606  19AA  0008               	return
  8607  19AB                     __end_of_spiWrite:
  8608                           
  8609                           	psect	text24
  8610  1000                     __ptext24:	
  8611 ;; *************** function _spiRead *****************
  8612 ;; Defined at:
  8613 ;;		line 47 in file "SPI.c"
  8614 ;; Parameters:    Size  Location     Type
  8615 ;;		None
  8616 ;; Auto vars:     Size  Location     Type
  8617 ;;		None
  8618 ;; Return value:  Size  Location     Type
  8619 ;;                  1    wreg      unsigned char 
  8620 ;; Registers used:
  8621 ;;		wreg, status,2, status,0, pclath, cstack
  8622 ;; Tracked objects:
  8623 ;;		On entry : 0/0
  8624 ;;		On exit  : 0/0
  8625 ;;		Unchanged: 0/0
  8626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8627 ;;      Params:         0       0       0       0       0
  8628 ;;      Locals:         0       0       0       0       0
  8629 ;;      Temps:          0       0       0       0       0
  8630 ;;      Totals:         0       0       0       0       0
  8631 ;;Total ram usage:        0 bytes
  8632 ;; Hardware stack levels used:    1
  8633 ;; Hardware stack levels required when called:    1
  8634 ;; This function calls:
  8635 ;;		_spiReceiveWait
  8636 ;; This function is called by:
  8637 ;;		_main
  8638 ;; This function uses a non-reentrant model
  8639 ;;
  8640                           
  8641                           
  8642                           ;psect for function _spiRead
  8643  1000                     _spiRead:
  8644  1000                     l3229:	
  8645                           ;incstack = 0
  8646                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  8647                           
  8648                           
  8649                           ;SPI.c: 49:     spiReceiveWait();
  8650  1000  160A  158A  21AB  160A  118A  	fcall	_spiReceiveWait
  8651  1005                     l3231:
  8652                           
  8653                           ;SPI.c: 50:     return(SSPBUF);
  8654  1005  1283               	bcf	3,5	;RP0=0, select bank0
  8655  1006  1303               	bcf	3,6	;RP1=0, select bank0
  8656  1007  0813               	movf	19,w	;volatile
  8657  1008                     l34:
  8658  1008  0008               	return
  8659  1009                     __end_of_spiRead:
  8660                           
  8661                           	psect	text25
  8662  19AB                     __ptext25:	
  8663 ;; *************** function _spiReceiveWait *****************
  8664 ;; Defined at:
  8665 ;;		line 29 in file "SPI.c"
  8666 ;; Parameters:    Size  Location     Type
  8667 ;;		None
  8668 ;; Auto vars:     Size  Location     Type
  8669 ;;		None
  8670 ;; Return value:  Size  Location     Type
  8671 ;;                  1    wreg      void 
  8672 ;; Registers used:
  8673 ;;		None
  8674 ;; Tracked objects:
  8675 ;;		On entry : 0/0
  8676 ;;		On exit  : 0/0
  8677 ;;		Unchanged: 0/0
  8678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8679 ;;      Params:         0       0       0       0       0
  8680 ;;      Locals:         0       0       0       0       0
  8681 ;;      Temps:          0       0       0       0       0
  8682 ;;      Totals:         0       0       0       0       0
  8683 ;;Total ram usage:        0 bytes
  8684 ;; Hardware stack levels used:    1
  8685 ;; This function calls:
  8686 ;;		Nothing
  8687 ;; This function is called by:
  8688 ;;		_spiRead
  8689 ;; This function uses a non-reentrant model
  8690 ;;
  8691                           
  8692                           
  8693                           ;psect for function _spiReceiveWait
  8694  19AB                     _spiReceiveWait:
  8695  19AB                     l2839:	
  8696                           ;incstack = 0
  8697                           ; Regs used in _spiReceiveWait: []
  8698                           
  8699  19AB                     l20:	
  8700                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  8701                           
  8702  19AB  1683               	bsf	3,5	;RP0=1, select bank1
  8703  19AC  1303               	bcf	3,6	;RP1=0, select bank1
  8704  19AD  1C14               	btfss	20,0	;volatile
  8705  19AE  29B0               	goto	u4061
  8706  19AF  29B1               	goto	u4060
  8707  19B0                     u4061:
  8708  19B0  29AB               	goto	l20
  8709  19B1                     u4060:
  8710  19B1                     l23:
  8711  19B1  0008               	return
  8712  19B2                     __end_of_spiReceiveWait:
  8713                           
  8714                           	psect	text26
  8715  1A35                     __ptext26:	
  8716 ;; *************** function _setup *****************
  8717 ;; Defined at:
  8718 ;;		line 159 in file "main_master.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;		None
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;		None
  8723 ;; Return value:  Size  Location     Type
  8724 ;;                  1    wreg      void 
  8725 ;; Registers used:
  8726 ;;		wreg, status,2, status,0, pclath, cstack
  8727 ;; Tracked objects:
  8728 ;;		On entry : 0/0
  8729 ;;		On exit  : 0/0
  8730 ;;		Unchanged: 0/0
  8731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8732 ;;      Params:         0       0       0       0       0
  8733 ;;      Locals:         0       0       0       0       0
  8734 ;;      Temps:          0       0       0       0       0
  8735 ;;      Totals:         0       0       0       0       0
  8736 ;;Total ram usage:        0 bytes
  8737 ;; Hardware stack levels used:    1
  8738 ;; Hardware stack levels required when called:    1
  8739 ;; This function calls:
  8740 ;;		_spiInit
  8741 ;; This function is called by:
  8742 ;;		_main
  8743 ;; This function uses a non-reentrant model
  8744 ;;
  8745                           
  8746                           
  8747                           ;psect for function _setup
  8748  1A35                     _setup:
  8749  1A35                     l3235:	
  8750                           ;incstack = 0
  8751                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  8752                           
  8753                           
  8754                           ;main_master.c: 163:     ANSEL = 0;
  8755  1A35  1683               	bsf	3,5	;RP0=1, select bank3
  8756  1A36  1703               	bsf	3,6	;RP1=1, select bank3
  8757  1A37  0188               	clrf	8	;volatile
  8758                           
  8759                           ;main_master.c: 164:     ANSELH = 0;
  8760  1A38  0189               	clrf	9	;volatile
  8761  1A39                     l3237:
  8762                           
  8763                           ;main_master.c: 166:     TRISC0 = 0;
  8764  1A39  1683               	bsf	3,5	;RP0=1, select bank1
  8765  1A3A  1303               	bcf	3,6	;RP1=0, select bank1
  8766  1A3B  1007               	bcf	7,0	;volatile
  8767  1A3C                     l3239:
  8768                           
  8769                           ;main_master.c: 167:     TRISC1 = 0;
  8770  1A3C  1087               	bcf	7,1	;volatile
  8771  1A3D                     l3241:
  8772                           
  8773                           ;main_master.c: 168:     TRISC2 = 0;
  8774  1A3D  1107               	bcf	7,2	;volatile
  8775  1A3E                     l3243:
  8776                           
  8777                           ;main_master.c: 169:     TRISC7 = 1;
  8778  1A3E  1787               	bsf	7,7	;volatile
  8779                           
  8780                           ;main_master.c: 170:     TRISB = 0;
  8781  1A3F  0186               	clrf	6	;volatile
  8782                           
  8783                           ;main_master.c: 171:     TRISD = 0;
  8784  1A40  0188               	clrf	8	;volatile
  8785                           
  8786                           ;main_master.c: 172:     TRISE = 0;
  8787  1A41  0189               	clrf	9	;volatile
  8788                           
  8789                           ;main_master.c: 174:     PORTB = 0;
  8790  1A42  1283               	bcf	3,5	;RP0=0, select bank0
  8791  1A43  1303               	bcf	3,6	;RP1=0, select bank0
  8792  1A44  0186               	clrf	6	;volatile
  8793                           
  8794                           ;main_master.c: 175:     PORTD = 0;
  8795  1A45  0188               	clrf	8	;volatile
  8796                           
  8797                           ;main_master.c: 176:     PORTE = 0;
  8798  1A46  0189               	clrf	9	;volatile
  8799  1A47                     l3245:
  8800                           
  8801                           ;main_master.c: 179:     PORTCbits.RC2 = 1;
  8802  1A47  1507               	bsf	7,2	;volatile
  8803  1A48                     l3247:
  8804                           
  8805                           ;main_master.c: 180:     PORTCbits.RC1 = 1;
  8806  1A48  1487               	bsf	7,1	;volatile
  8807  1A49                     l3249:
  8808                           
  8809                           ;main_master.c: 181:     PORTCbits.RC0 = 1;
  8810  1A49  1407               	bsf	7,0	;volatile
  8811  1A4A                     l3251:
  8812                           
  8813                           ;main_master.c: 184:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_
      +                          IDLE_LOW, SPI_IDLE_2_ACTIVE);
  8814  1A4A  01F0               	clrf	spiInit@sDataSample
  8815  1A4B  01F1               	clrf	spiInit@sClockIdle
  8816  1A4C  01F2               	clrf	spiInit@sTransmitEdge
  8817  1A4D  3020               	movlw	32
  8818  1A4E  160A  158A  2206  160A  158A  	fcall	_spiInit
  8819  1A53                     l113:
  8820  1A53  0008               	return
  8821  1A54                     __end_of_setup:
  8822                           
  8823                           	psect	text27
  8824  1A06                     __ptext27:	
  8825 ;; *************** function _spiInit *****************
  8826 ;; Defined at:
  8827 ;;		line 12 in file "SPI.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;  sType           1    wreg     enum E1264
  8830 ;;  sDataSample     1    0[COMMON] enum E1272
  8831 ;;  sClockIdle      1    1[COMMON] enum E1276
  8832 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  8833 ;; Auto vars:     Size  Location     Type
  8834 ;;  sType           1    3[COMMON] enum E1264
  8835 ;; Return value:  Size  Location     Type
  8836 ;;                  1    wreg      void 
  8837 ;; Registers used:
  8838 ;;		wreg, status,2, status,0
  8839 ;; Tracked objects:
  8840 ;;		On entry : 0/0
  8841 ;;		On exit  : 0/0
  8842 ;;		Unchanged: 0/0
  8843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8844 ;;      Params:         3       0       0       0       0
  8845 ;;      Locals:         1       0       0       0       0
  8846 ;;      Temps:          0       0       0       0       0
  8847 ;;      Totals:         4       0       0       0       0
  8848 ;;Total ram usage:        4 bytes
  8849 ;; Hardware stack levels used:    1
  8850 ;; This function calls:
  8851 ;;		Nothing
  8852 ;; This function is called by:
  8853 ;;		_setup
  8854 ;; This function uses a non-reentrant model
  8855 ;;
  8856                           
  8857                           
  8858                           ;psect for function _spiInit
  8859  1A06                     _spiInit:
  8860                           
  8861                           ;incstack = 0
  8862                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  8863                           ;spiInit@sType stored from wreg
  8864  1A06  00F3               	movwf	spiInit@sType
  8865  1A07                     l2829:
  8866                           
  8867                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  8868  1A07  1683               	bsf	3,5	;RP0=1, select bank1
  8869  1A08  1303               	bcf	3,6	;RP1=0, select bank1
  8870  1A09  1287               	bcf	7,5	;volatile
  8871                           
  8872                           ;SPI.c: 15:     if(sType & 0b00000100)
  8873  1A0A  1D73               	btfss	spiInit@sType,2
  8874  1A0B  2A0D               	goto	u4051
  8875  1A0C  2A0E               	goto	u4050
  8876  1A0D                     u4051:
  8877  1A0D  2A12               	goto	l2835
  8878  1A0E                     u4050:
  8879  1A0E                     l2831:
  8880                           
  8881                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  8882  1A0E  0872               	movf	spiInit@sTransmitEdge,w
  8883  1A0F  0094               	movwf	20	;volatile
  8884  1A10                     l2833:
  8885                           
  8886                           ;SPI.c: 18:         TRISC3 = 1;
  8887  1A10  1587               	bsf	7,3	;volatile
  8888                           
  8889                           ;SPI.c: 19:     }
  8890  1A11  2A16               	goto	l16
  8891  1A12                     l2835:
  8892                           
  8893                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  8894  1A12  0870               	movf	spiInit@sDataSample,w
  8895  1A13  0472               	iorwf	spiInit@sTransmitEdge,w
  8896  1A14  0094               	movwf	20	;volatile
  8897  1A15                     l2837:
  8898                           
  8899                           ;SPI.c: 23:         TRISC3 = 0;
  8900  1A15  1187               	bcf	7,3	;volatile
  8901  1A16                     l16:	
  8902                           ;SPI.c: 24:     }
  8903                           
  8904                           
  8905                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  8906  1A16  0873               	movf	spiInit@sType,w
  8907  1A17  0471               	iorwf	spiInit@sClockIdle,w
  8908  1A18  1283               	bcf	3,5	;RP0=0, select bank0
  8909  1A19  1303               	bcf	3,6	;RP1=0, select bank0
  8910  1A1A  0094               	movwf	20	;volatile
  8911  1A1B                     l17:
  8912  1A1B  0008               	return
  8913  1A1C                     __end_of_spiInit:
  8914                           
  8915                           	psect	text28
  8916  1B0B                     __ptext28:	
  8917 ;; *************** function _USART_Write_String *****************
  8918 ;; Defined at:
  8919 ;;		line 48 in file "USART.c"
  8920 ;; Parameters:    Size  Location     Type
  8921 ;;  a               2    1[COMMON] PTR unsigned char 
  8922 ;;		 -> pantalla(20), STR_1(18), 
  8923 ;; Auto vars:     Size  Location     Type
  8924 ;;  i               1    4[COMMON] unsigned char 
  8925 ;; Return value:  Size  Location     Type
  8926 ;;                  1    wreg      void 
  8927 ;; Registers used:
  8928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8929 ;; Tracked objects:
  8930 ;;		On entry : 0/0
  8931 ;;		On exit  : 0/0
  8932 ;;		Unchanged: 0/0
  8933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8934 ;;      Params:         2       0       0       0       0
  8935 ;;      Locals:         1       0       0       0       0
  8936 ;;      Temps:          1       0       0       0       0
  8937 ;;      Totals:         4       0       0       0       0
  8938 ;;Total ram usage:        4 bytes
  8939 ;; Hardware stack levels used:    1
  8940 ;; Hardware stack levels required when called:    1
  8941 ;; This function calls:
  8942 ;;		_USART_Write
  8943 ;; This function is called by:
  8944 ;;		_main
  8945 ;; This function uses a non-reentrant model
  8946 ;;
  8947                           
  8948                           
  8949                           ;psect for function _USART_Write_String
  8950  1B0B                     _USART_Write_String:
  8951  1B0B                     l3273:	
  8952                           ;incstack = 0
  8953                           ; Regs used in _USART_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8954                           
  8955                           
  8956                           ;USART.c: 49:     uint8_t i;;USART.c: 50:     for(i=0;a[i]!='\0';i++){
  8957  1B0B  01F4               	clrf	USART_Write_String@i
  8958  1B0C  2B22               	goto	l3279
  8959  1B0D                     l3275:
  8960                           
  8961                           ;USART.c: 51:         USART_Write(a[i]);
  8962  1B0D  0874               	movf	USART_Write_String@i,w
  8963  1B0E  0771               	addwf	USART_Write_String@a,w
  8964  1B0F  0084               	movwf	4
  8965  1B10  0872               	movf	USART_Write_String@a+1,w
  8966  1B11  1803               	skipnc
  8967  1B12  0A72               	incf	USART_Write_String@a+1,w
  8968  1B13  00FF               	movwf	btemp+1
  8969  1B14  120A  158A  2000  160A  158A  	fcall	stringtab
  8970  1B19  160A  158A  21CD  160A  158A  	fcall	_USART_Write
  8971  1B1E                     l3277:
  8972                           
  8973                           ;USART.c: 52:     }
  8974  1B1E  3001               	movlw	1
  8975  1B1F  00F3               	movwf	??_USART_Write_String
  8976  1B20  0873               	movf	??_USART_Write_String,w
  8977  1B21  07F4               	addwf	USART_Write_String@i,f
  8978  1B22                     l3279:
  8979  1B22  0874               	movf	USART_Write_String@i,w
  8980  1B23  0771               	addwf	USART_Write_String@a,w
  8981  1B24  0084               	movwf	4
  8982  1B25  0872               	movf	USART_Write_String@a+1,w
  8983  1B26  1803               	skipnc
  8984  1B27  0A72               	incf	USART_Write_String@a+1,w
  8985  1B28  1283               	bcf	3,5	;RP0=0, select bank0
  8986  1B29  1303               	bcf	3,6	;RP1=0, select bank0
  8987  1B2A  00FF               	movwf	btemp+1
  8988  1B2B  120A  158A  2000  160A  158A  	fcall	stringtab
  8989  1B30  3A00               	xorlw	0
  8990  1B31  1D03               	skipz
  8991  1B32  2B34               	goto	u5131
  8992  1B33  2B35               	goto	u5130
  8993  1B34                     u5131:
  8994  1B34  2B0D               	goto	l3275
  8995  1B35                     u5130:
  8996  1B35                     l193:
  8997  1B35  0008               	return
  8998  1B36                     __end_of_USART_Write_String:
  8999                           
  9000                           	psect	text29
  9001  19CD                     __ptext29:	
  9002 ;; *************** function _USART_Write *****************
  9003 ;; Defined at:
  9004 ;;		line 43 in file "USART.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;  a               1    wreg     unsigned char 
  9007 ;; Auto vars:     Size  Location     Type
  9008 ;;  a               1    0[COMMON] unsigned char 
  9009 ;; Return value:  Size  Location     Type
  9010 ;;                  1    wreg      void 
  9011 ;; Registers used:
  9012 ;;		wreg
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/0
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9018 ;;      Params:         0       0       0       0       0
  9019 ;;      Locals:         1       0       0       0       0
  9020 ;;      Temps:          0       0       0       0       0
  9021 ;;      Totals:         1       0       0       0       0
  9022 ;;Total ram usage:        1 bytes
  9023 ;; Hardware stack levels used:    1
  9024 ;; This function calls:
  9025 ;;		Nothing
  9026 ;; This function is called by:
  9027 ;;		_main
  9028 ;;		_USART_Write_String
  9029 ;; This function uses a non-reentrant model
  9030 ;;
  9031                           
  9032                           
  9033                           ;psect for function _USART_Write
  9034  19CD                     _USART_Write:
  9035                           
  9036                           ;incstack = 0
  9037                           ; Regs used in _USART_Write: [wreg]
  9038                           ;USART_Write@a stored from wreg
  9039  19CD  00F0               	movwf	USART_Write@a
  9040  19CE                     l2841:
  9041  19CE                     l184:	
  9042                           ;USART.c: 44:     while(!TRMT);
  9043                           
  9044  19CE  1683               	bsf	3,5	;RP0=1, select bank1
  9045  19CF  1303               	bcf	3,6	;RP1=0, select bank1
  9046  19D0  1C98               	btfss	24,1	;volatile
  9047  19D1  29D3               	goto	u4071
  9048  19D2  29D4               	goto	u4070
  9049  19D3                     u4071:
  9050  19D3  29CE               	goto	l184
  9051  19D4                     u4070:
  9052  19D4                     l2843:
  9053                           
  9054                           ;USART.c: 45:     TXREG=a;
  9055  19D4  0870               	movf	USART_Write@a,w
  9056  19D5  1283               	bcf	3,5	;RP0=0, select bank0
  9057  19D6  1303               	bcf	3,6	;RP1=0, select bank0
  9058  19D7  0099               	movwf	25	;volatile
  9059  19D8                     l187:
  9060  19D8  0008               	return
  9061  19D9                     __end_of_USART_Write:
  9062                           
  9063                           	psect	text30
  9064  199A                     __ptext30:	
  9065 ;; *************** function _Set_Baud_Rate *****************
  9066 ;; Defined at:
  9067 ;;		line 11 in file "USART.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;		None
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;		None
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  1    wreg      void 
  9074 ;; Registers used:
  9075 ;;		wreg
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9081 ;;      Params:         0       0       0       0       0
  9082 ;;      Locals:         0       0       0       0       0
  9083 ;;      Temps:          0       0       0       0       0
  9084 ;;      Totals:         0       0       0       0       0
  9085 ;;Total ram usage:        0 bytes
  9086 ;; Hardware stack levels used:    1
  9087 ;; This function calls:
  9088 ;;		Nothing
  9089 ;; This function is called by:
  9090 ;;		_main
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           
  9095                           ;psect for function _Set_Baud_Rate
  9096  199A                     _Set_Baud_Rate:
  9097  199A                     l3267:	
  9098                           ;incstack = 0
  9099                           ; Regs used in _Set_Baud_Rate: [wreg]
  9100                           
  9101                           
  9102                           ;USART.c: 12:     SPBRG = 12;
  9103  199A  300C               	movlw	12
  9104  199B  1683               	bsf	3,5	;RP0=1, select bank1
  9105  199C  1303               	bcf	3,6	;RP1=0, select bank1
  9106  199D  0099               	movwf	25	;volatile
  9107  199E                     l175:
  9108  199E  0008               	return
  9109  199F                     __end_of_Set_Baud_Rate:
  9110                           
  9111                           	psect	text31
  9112  19D9                     __ptext31:	
  9113 ;; *************** function _LCD_clear *****************
  9114 ;; Defined at:
  9115 ;;		line 41 in file "LCD.c"
  9116 ;; Parameters:    Size  Location     Type
  9117 ;;		None
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;		None
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  1    wreg      void 
  9122 ;; Registers used:
  9123 ;;		wreg, status,2, status,0, pclath, cstack
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9129 ;;      Params:         0       0       0       0       0
  9130 ;;      Locals:         0       0       0       0       0
  9131 ;;      Temps:          0       0       0       0       0
  9132 ;;      Totals:         0       0       0       0       0
  9133 ;;Total ram usage:        0 bytes
  9134 ;; Hardware stack levels used:    1
  9135 ;; Hardware stack levels required when called:    2
  9136 ;; This function calls:
  9137 ;;		_LCD_Command
  9138 ;; This function is called by:
  9139 ;;		_main
  9140 ;; This function uses a non-reentrant model
  9141 ;;
  9142                           
  9143                           
  9144                           ;psect for function _LCD_clear
  9145  19D9                     _LCD_clear:
  9146  19D9                     l3265:	
  9147                           ;incstack = 0
  9148                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  9149                           
  9150                           
  9151                           ;LCD.c: 42:     LCD_Command(0);
  9152  19D9  3000               	movlw	0
  9153  19DA  160A  158A  2254  160A  158A  	fcall	_LCD_Command
  9154                           
  9155                           ;LCD.c: 43:     LCD_Command(1);
  9156  19DF  3001               	movlw	1
  9157  19E0  160A  158A  2254  160A  158A  	fcall	_LCD_Command
  9158  19E5                     l135:
  9159  19E5  0008               	return
  9160  19E6                     __end_of_LCD_clear:
  9161                           
  9162                           	psect	text32
  9163  1B70                     __ptext32:	
  9164 ;; *************** function _LCD_Write_String *****************
  9165 ;; Defined at:
  9166 ;;		line 77 in file "LCD.c"
  9167 ;; Parameters:    Size  Location     Type
  9168 ;;  a               2    3[COMMON] PTR unsigned char 
  9169 ;;		 -> STR_3(16), pantalla(20), 
  9170 ;; Auto vars:     Size  Location     Type
  9171 ;;  i               2    8[COMMON] int 
  9172 ;; Return value:  Size  Location     Type
  9173 ;;                  1    wreg      void 
  9174 ;; Registers used:
  9175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9176 ;; Tracked objects:
  9177 ;;		On entry : 0/0
  9178 ;;		On exit  : 0/0
  9179 ;;		Unchanged: 0/0
  9180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9181 ;;      Params:         2       0       0       0       0
  9182 ;;      Locals:         2       0       0       0       0
  9183 ;;      Temps:          3       0       0       0       0
  9184 ;;      Totals:         7       0       0       0       0
  9185 ;;Total ram usage:        7 bytes
  9186 ;; Hardware stack levels used:    1
  9187 ;; Hardware stack levels required when called:    2
  9188 ;; This function calls:
  9189 ;;		_LCD_Write_Char
  9190 ;; This function is called by:
  9191 ;;		_main
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195                           
  9196                           ;psect for function _LCD_Write_String
  9197  1B70                     _LCD_Write_String:
  9198  1B70                     l3587:	
  9199                           ;incstack = 0
  9200                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9201                           
  9202                           
  9203                           ;LCD.c: 78:  int i;;LCD.c: 79:  for(i=0;a[i]!='\0';i++)
  9204  1B70  01F8               	clrf	LCD_Write_String@i
  9205  1B71  01F9               	clrf	LCD_Write_String@i+1
  9206  1B72  2B95               	goto	l3593
  9207  1B73                     l3589:
  9208                           
  9209                           ;LCD.c: 80:     LCD_Write_Char(a[i]);
  9210  1B73  0878               	movf	LCD_Write_String@i,w
  9211  1B74  0773               	addwf	LCD_Write_String@a,w
  9212  1B75  00F6               	movwf	??_LCD_Write_String+1
  9213  1B76  0874               	movf	LCD_Write_String@a+1,w
  9214  1B77  00F5               	movwf	??_LCD_Write_String
  9215  1B78  1803               	skipnc
  9216  1B79  0AF5               	incf	??_LCD_Write_String,f
  9217  1B7A  1FF8               	btfss	LCD_Write_String@i,7
  9218  1B7B  2B7D               	goto	u5690
  9219  1B7C  03F5               	decf	??_LCD_Write_String,f
  9220  1B7D                     u5690:
  9221  1B7D  0875               	movf	??_LCD_Write_String,w
  9222  1B7E  00F7               	movwf	??_LCD_Write_String+2
  9223  1B7F  0877               	movf	??_LCD_Write_String+2,w
  9224  1B80  1283               	bcf	3,5	;RP0=0, select bank0
  9225  1B81  1303               	bcf	3,6	;RP1=0, select bank0
  9226  1B82  00FF               	movwf	btemp+1
  9227  1B83  0876               	movf	??_LCD_Write_String+1,w
  9228  1B84  0084               	movwf	4
  9229  1B85  120A  158A  2000  160A  158A  	fcall	stringtab
  9230  1B8A  160A  158A  221C  160A  158A  	fcall	_LCD_Write_Char
  9231  1B8F                     l3591:
  9232  1B8F  3001               	movlw	1
  9233  1B90  07F8               	addwf	LCD_Write_String@i,f
  9234  1B91  1803               	skipnc
  9235  1B92  0AF9               	incf	LCD_Write_String@i+1,f
  9236  1B93  3000               	movlw	0
  9237  1B94  07F9               	addwf	LCD_Write_String@i+1,f
  9238  1B95                     l3593:
  9239  1B95  0878               	movf	LCD_Write_String@i,w
  9240  1B96  0773               	addwf	LCD_Write_String@a,w
  9241  1B97  00F6               	movwf	??_LCD_Write_String+1
  9242  1B98  0874               	movf	LCD_Write_String@a+1,w
  9243  1B99  00F5               	movwf	??_LCD_Write_String
  9244  1B9A  1803               	skipnc
  9245  1B9B  0AF5               	incf	??_LCD_Write_String,f
  9246  1B9C  1FF8               	btfss	LCD_Write_String@i,7
  9247  1B9D  2B9F               	goto	u5700
  9248  1B9E  03F5               	decf	??_LCD_Write_String,f
  9249  1B9F                     u5700:
  9250  1B9F  0875               	movf	??_LCD_Write_String,w
  9251  1BA0  00F7               	movwf	??_LCD_Write_String+2
  9252  1BA1  0877               	movf	??_LCD_Write_String+2,w
  9253  1BA2  1283               	bcf	3,5	;RP0=0, select bank0
  9254  1BA3  1303               	bcf	3,6	;RP1=0, select bank0
  9255  1BA4  00FF               	movwf	btemp+1
  9256  1BA5  0876               	movf	??_LCD_Write_String+1,w
  9257  1BA6  0084               	movwf	4
  9258  1BA7  120A  158A  2000  160A  158A  	fcall	stringtab
  9259  1BAC  3A00               	xorlw	0
  9260  1BAD  1D03               	skipz
  9261  1BAE  2BB0               	goto	u5711
  9262  1BAF  2BB1               	goto	u5710
  9263  1BB0                     u5711:
  9264  1BB0  2B73               	goto	l3589
  9265  1BB1                     u5710:
  9266  1BB1                     l150:
  9267  1BB1  0008               	return
  9268  1BB2                     __end_of_LCD_Write_String:
  9269                           
  9270                           	psect	text33
  9271  1A1C                     __ptext33:	
  9272 ;; *************** function _LCD_Write_Char *****************
  9273 ;; Defined at:
  9274 ;;		line 9 in file "LCD.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;  a               1    wreg     unsigned char 
  9277 ;; Auto vars:     Size  Location     Type
  9278 ;;  a               1    2[COMMON] unsigned char 
  9279 ;; Return value:  Size  Location     Type
  9280 ;;                  1    wreg      void 
  9281 ;; Registers used:
  9282 ;;		wreg, status,2, status,0, pclath, cstack
  9283 ;; Tracked objects:
  9284 ;;		On entry : 0/0
  9285 ;;		On exit  : 0/0
  9286 ;;		Unchanged: 0/0
  9287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9288 ;;      Params:         0       0       0       0       0
  9289 ;;      Locals:         1       0       0       0       0
  9290 ;;      Temps:          1       0       0       0       0
  9291 ;;      Totals:         2       0       0       0       0
  9292 ;;Total ram usage:        2 bytes
  9293 ;; Hardware stack levels used:    1
  9294 ;; Hardware stack levels required when called:    1
  9295 ;; This function calls:
  9296 ;;		_LCD_Port
  9297 ;; This function is called by:
  9298 ;;		_LCD_Write_String
  9299 ;; This function uses a non-reentrant model
  9300 ;;
  9301                           
  9302                           
  9303                           ;psect for function _LCD_Write_Char
  9304  1A1C                     _LCD_Write_Char:
  9305                           
  9306                           ;incstack = 0
  9307                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9308                           ;LCD_Write_Char@a stored from wreg
  9309  1A1C  00F2               	movwf	LCD_Write_Char@a
  9310  1A1D                     l2845:
  9311                           
  9312                           ;LCD.c: 10:     RE0 = 1;
  9313  1A1D  1283               	bcf	3,5	;RP0=0, select bank0
  9314  1A1E  1303               	bcf	3,6	;RP1=0, select bank0
  9315  1A1F  1409               	bsf	9,0	;volatile
  9316  1A20                     l2847:
  9317                           
  9318                           ;LCD.c: 11:     LCD_Port(a);
  9319  1A20  0872               	movf	LCD_Write_Char@a,w
  9320  1A21  160A  158A  219F  160A  158A  	fcall	_LCD_Port
  9321  1A26                     l2849:
  9322                           
  9323                           ;LCD.c: 12:     RE1 = 1;
  9324  1A26  1283               	bcf	3,5	;RP0=0, select bank0
  9325  1A27  1303               	bcf	3,6	;RP1=0, select bank0
  9326  1A28  1489               	bsf	9,1	;volatile
  9327  1A29                     l2851:
  9328                           
  9329                           ;LCD.c: 13:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  9330  1A29  300D               	movlw	13
  9331  1A2A  00F1               	movwf	??_LCD_Write_Char
  9332  1A2B                     u5827:
  9333  1A2B  0BF1               	decfsz	??_LCD_Write_Char,f
  9334  1A2C  2A2B               	goto	u5827
  9335  1A2D                     l2853:
  9336                           
  9337                           ;LCD.c: 14:     RE1 = 0;
  9338  1A2D  1283               	bcf	3,5	;RP0=0, select bank0
  9339  1A2E  1303               	bcf	3,6	;RP1=0, select bank0
  9340  1A2F  1089               	bcf	9,1	;volatile
  9341  1A30                     l2855:
  9342                           
  9343                           ;LCD.c: 15:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  9344  1A30  3003               	movlw	3
  9345  1A31  00F1               	movwf	??_LCD_Write_Char
  9346  1A32                     u5837:
  9347  1A32  0BF1               	decfsz	??_LCD_Write_Char,f
  9348  1A33  2A32               	goto	u5837
  9349  1A34                     l126:
  9350  1A34  0008               	return
  9351  1A35                     __end_of_LCD_Write_Char:
  9352                           
  9353                           	psect	text34
  9354  1A77                     __ptext34:	
  9355 ;; *************** function _LCD_Set_Cursor *****************
  9356 ;; Defined at:
  9357 ;;		line 63 in file "LCD.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;  x               1    wreg     unsigned char 
  9360 ;;  y               1    4[COMMON] unsigned char 
  9361 ;; Auto vars:     Size  Location     Type
  9362 ;;  x               1    6[COMMON] unsigned char 
  9363 ;;  a               1    7[COMMON] unsigned char 
  9364 ;; Return value:  Size  Location     Type
  9365 ;;                  1    wreg      void 
  9366 ;; Registers used:
  9367 ;;		wreg, status,2, status,0, pclath, cstack
  9368 ;; Tracked objects:
  9369 ;;		On entry : 0/0
  9370 ;;		On exit  : 0/0
  9371 ;;		Unchanged: 0/0
  9372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9373 ;;      Params:         1       0       0       0       0
  9374 ;;      Locals:         2       0       0       0       0
  9375 ;;      Temps:          1       0       0       0       0
  9376 ;;      Totals:         4       0       0       0       0
  9377 ;;Total ram usage:        4 bytes
  9378 ;; Hardware stack levels used:    1
  9379 ;; Hardware stack levels required when called:    2
  9380 ;; This function calls:
  9381 ;;		_LCD_Command
  9382 ;; This function is called by:
  9383 ;;		_main
  9384 ;; This function uses a non-reentrant model
  9385 ;;
  9386                           
  9387                           
  9388                           ;psect for function _LCD_Set_Cursor
  9389  1A77                     _LCD_Set_Cursor:
  9390                           
  9391                           ;incstack = 0
  9392                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9393                           ;LCD_Set_Cursor@x stored from wreg
  9394  1A77  00F6               	movwf	LCD_Set_Cursor@x
  9395  1A78                     l3575:
  9396                           
  9397                           ;LCD.c: 64:  char a;;LCD.c: 65:  if(x == 1)
  9398  1A78  0376               	decf	LCD_Set_Cursor@x,w
  9399  1A79  1D03               	btfss	3,2
  9400  1A7A  2A7C               	goto	u5671
  9401  1A7B  2A7D               	goto	u5670
  9402  1A7C                     u5671:
  9403  1A7C  2A89               	goto	l3581
  9404  1A7D                     u5670:
  9405  1A7D                     l3577:
  9406                           
  9407                           ;LCD.c: 66:  {;LCD.c: 67:         a = 0x80 + y;
  9408  1A7D  0874               	movf	LCD_Set_Cursor@y,w
  9409  1A7E  3E80               	addlw	128
  9410  1A7F  00F5               	movwf	??_LCD_Set_Cursor
  9411  1A80  0875               	movf	??_LCD_Set_Cursor,w
  9412  1A81  00F7               	movwf	LCD_Set_Cursor@a
  9413  1A82                     l3579:
  9414                           
  9415                           ;LCD.c: 68:   LCD_Command(a);
  9416  1A82  0877               	movf	LCD_Set_Cursor@a,w
  9417  1A83  160A  158A  2254  160A  158A  	fcall	_LCD_Command
  9418                           
  9419                           ;LCD.c: 69:  }
  9420  1A88  2A9A               	goto	l144
  9421  1A89                     l3581:
  9422  1A89  3002               	movlw	2
  9423  1A8A  0676               	xorwf	LCD_Set_Cursor@x,w
  9424  1A8B  1D03               	btfss	3,2
  9425  1A8C  2A8E               	goto	u5681
  9426  1A8D  2A8F               	goto	u5680
  9427  1A8E                     u5681:
  9428  1A8E  2A9A               	goto	l144
  9429  1A8F                     u5680:
  9430  1A8F                     l3583:
  9431                           
  9432                           ;LCD.c: 71:  {;LCD.c: 72:   a = 0xC0 + y;
  9433  1A8F  0874               	movf	LCD_Set_Cursor@y,w
  9434  1A90  3EC0               	addlw	192
  9435  1A91  00F5               	movwf	??_LCD_Set_Cursor
  9436  1A92  0875               	movf	??_LCD_Set_Cursor,w
  9437  1A93  00F7               	movwf	LCD_Set_Cursor@a
  9438  1A94                     l3585:
  9439                           
  9440                           ;LCD.c: 73:   LCD_Command(a);
  9441  1A94  0877               	movf	LCD_Set_Cursor@a,w
  9442  1A95  160A  158A  2254  160A  158A  	fcall	_LCD_Command
  9443  1A9A                     l144:
  9444  1A9A  0008               	return
  9445  1A9B                     __end_of_LCD_Set_Cursor:
  9446                           
  9447                           	psect	text35
  9448  1C44                     __ptext35:	
  9449 ;; *************** function _LCD_Init *****************
  9450 ;; Defined at:
  9451 ;;		line 46 in file "LCD.c"
  9452 ;; Parameters:    Size  Location     Type
  9453 ;;		None
  9454 ;; Auto vars:     Size  Location     Type
  9455 ;;		None
  9456 ;; Return value:  Size  Location     Type
  9457 ;;                  1    wreg      void 
  9458 ;; Registers used:
  9459 ;;		wreg, status,2, status,0, pclath, cstack
  9460 ;; Tracked objects:
  9461 ;;		On entry : 0/0
  9462 ;;		On exit  : 0/0
  9463 ;;		Unchanged: 0/0
  9464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9465 ;;      Params:         0       0       0       0       0
  9466 ;;      Locals:         0       0       0       0       0
  9467 ;;      Temps:          2       0       0       0       0
  9468 ;;      Totals:         2       0       0       0       0
  9469 ;;Total ram usage:        2 bytes
  9470 ;; Hardware stack levels used:    1
  9471 ;; Hardware stack levels required when called:    2
  9472 ;; This function calls:
  9473 ;;		_LCD_Command
  9474 ;;		_LCD_Port
  9475 ;; This function is called by:
  9476 ;;		_main
  9477 ;; This function uses a non-reentrant model
  9478 ;;
  9479                           
  9480                           
  9481                           ;psect for function _LCD_Init
  9482  1C44                     _LCD_Init:
  9483  1C44                     l3253:	
  9484                           ;incstack = 0
  9485                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9486                           
  9487                           
  9488                           ;LCD.c: 47:     RE0=0;
  9489  1C44  1283               	bcf	3,5	;RP0=0, select bank0
  9490  1C45  1303               	bcf	3,6	;RP1=0, select bank0
  9491  1C46  1009               	bcf	9,0	;volatile
  9492                           
  9493                           ;LCD.c: 48:     RE1=0;
  9494  1C47  1089               	bcf	9,1	;volatile
  9495  1C48                     l3255:
  9496                           
  9497                           ;LCD.c: 49:     LCD_Port(0x00);
  9498  1C48  3000               	movlw	0
  9499  1C49  160A  158A  219F  160A  158A  	fcall	_LCD_Port
  9500  1C4E                     l3257:
  9501                           
  9502                           ;LCD.c: 50:     _delay((unsigned long)((20)*(4000000/4000.0)));
  9503  1C4E  301A               	movlw	26
  9504  1C4F  00F5               	movwf	??_LCD_Init+1
  9505  1C50  30F8               	movlw	248
  9506  1C51  00F4               	movwf	??_LCD_Init
  9507  1C52                     u5847:
  9508  1C52  0BF4               	decfsz	??_LCD_Init,f
  9509  1C53  2C52               	goto	u5847
  9510  1C54  0BF5               	decfsz	??_LCD_Init+1,f
  9511  1C55  2C52               	goto	u5847
  9512  1C56  0000               	nop
  9513  1C57                     l3259:
  9514                           
  9515                           ;LCD.c: 51:     LCD_Command(0x30);
  9516  1C57  3030               	movlw	48
  9517  1C58  160A  158A  2254  160A  158A  	fcall	_LCD_Command
  9518                           
  9519                           ;LCD.c: 52:     _delay((unsigned long)((5)*(4000000/4000.0)));
  9520  1C5D  3007               	movlw	7
  9521  1C5E  00F5               	movwf	??_LCD_Init+1
  9522  1C5F  307D               	movlw	125
  9523  1C60  00F4               	movwf	??_LCD_Init
  9524  1C61                     u5857:
  9525  1C61  0BF4               	decfsz	??_LCD_Init,f
  9526  1C62  2C61               	goto	u5857
  9527  1C63  0BF5               	decfsz	??_LCD_Init+1,f
  9528  1C64  2C61               	goto	u5857
  9529  1C65                     l3261:
  9530                           
  9531                           ;LCD.c: 53:     LCD_Command(0x30);
  9532  1C65  3030               	movlw	48
  9533  1C66  160A  158A  2254  160A  158A  	fcall	_LCD_Command
  9534  1C6B                     l3263:
  9535                           
  9536                           ;LCD.c: 54:     _delay((unsigned long)((11)*(4000000/4000.0)));
  9537  1C6B  300F               	movlw	15
  9538  1C6C  00F5               	movwf	??_LCD_Init+1
  9539  1C6D  3047               	movlw	71
  9540  1C6E  00F4               	movwf	??_LCD_Init
  9541  1C6F                     u5867:
  9542  1C6F  0BF4               	decfsz	??_LCD_Init,f
  9543  1C70  2C6F               	goto	u5867
  9544  1C71  0BF5               	decfsz	??_LCD_Init+1,f
  9545  1C72  2C6F               	goto	u5867
  9546  1C73  2C74               	nop2
  9547                           
  9548                           ;LCD.c: 55:     LCD_Command(0x30);
  9549  1C74  3030               	movlw	48
  9550  1C75  160A  158A  2254  160A  158A  	fcall	_LCD_Command
  9551                           
  9552                           ;LCD.c: 56:     LCD_Command(0x38);
  9553  1C7A  3038               	movlw	56
  9554  1C7B  160A  158A  2254  160A  158A  	fcall	_LCD_Command
  9555                           
  9556                           ;LCD.c: 57:     LCD_Command(0x0C);
  9557  1C80  300C               	movlw	12
  9558  1C81  160A  158A  2254  160A  158A  	fcall	_LCD_Command
  9559                           
  9560                           ;LCD.c: 58:     LCD_Command(0x01);
  9561  1C86  3001               	movlw	1
  9562  1C87  160A  158A  2254  160A  158A  	fcall	_LCD_Command
  9563                           
  9564                           ;LCD.c: 59:     LCD_Command(0x06);
  9565  1C8C  3006               	movlw	6
  9566  1C8D  160A  158A  2254  160A  158A  	fcall	_LCD_Command
  9567  1C92                     l138:
  9568  1C92  0008               	return
  9569  1C93                     __end_of_LCD_Init:
  9570                           
  9571                           	psect	text36
  9572  1A54                     __ptext36:	
  9573 ;; *************** function _LCD_Command *****************
  9574 ;; Defined at:
  9575 ;;		line 32 in file "LCD.c"
  9576 ;; Parameters:    Size  Location     Type
  9577 ;;  a               1    wreg     unsigned char 
  9578 ;; Auto vars:     Size  Location     Type
  9579 ;;  a               1    3[COMMON] unsigned char 
  9580 ;; Return value:  Size  Location     Type
  9581 ;;                  1    wreg      void 
  9582 ;; Registers used:
  9583 ;;		wreg, status,2, status,0, pclath, cstack
  9584 ;; Tracked objects:
  9585 ;;		On entry : 0/0
  9586 ;;		On exit  : 0/0
  9587 ;;		Unchanged: 0/0
  9588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9589 ;;      Params:         0       0       0       0       0
  9590 ;;      Locals:         1       0       0       0       0
  9591 ;;      Temps:          2       0       0       0       0
  9592 ;;      Totals:         3       0       0       0       0
  9593 ;;Total ram usage:        3 bytes
  9594 ;; Hardware stack levels used:    1
  9595 ;; Hardware stack levels required when called:    1
  9596 ;; This function calls:
  9597 ;;		_LCD_Port
  9598 ;; This function is called by:
  9599 ;;		_LCD_clear
  9600 ;;		_LCD_Init
  9601 ;;		_LCD_Set_Cursor
  9602 ;; This function uses a non-reentrant model
  9603 ;;
  9604                           
  9605                           
  9606                           ;psect for function _LCD_Command
  9607  1A54                     _LCD_Command:
  9608                           
  9609                           ;incstack = 0
  9610                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  9611                           ;LCD_Command@a stored from wreg
  9612  1A54  00F3               	movwf	LCD_Command@a
  9613  1A55                     l2857:
  9614                           
  9615                           ;LCD.c: 33:     RE0=0;
  9616  1A55  1283               	bcf	3,5	;RP0=0, select bank0
  9617  1A56  1303               	bcf	3,6	;RP1=0, select bank0
  9618  1A57  1009               	bcf	9,0	;volatile
  9619  1A58                     l2859:
  9620                           
  9621                           ;LCD.c: 34:     LCD_Port(a);
  9622  1A58  0873               	movf	LCD_Command@a,w
  9623  1A59  160A  158A  219F  160A  158A  	fcall	_LCD_Port
  9624  1A5E                     l2861:
  9625                           
  9626                           ;LCD.c: 35:     RE1=1;
  9627  1A5E  1283               	bcf	3,5	;RP0=0, select bank0
  9628  1A5F  1303               	bcf	3,6	;RP1=0, select bank0
  9629  1A60  1489               	bsf	9,1	;volatile
  9630  1A61                     l2863:
  9631                           
  9632                           ;LCD.c: 36:     _delay((unsigned long)((4)*(4000000/4000.0)));
  9633  1A61  3006               	movlw	6
  9634  1A62  00F2               	movwf	??_LCD_Command+1
  9635  1A63  3030               	movlw	48
  9636  1A64  00F1               	movwf	??_LCD_Command
  9637  1A65                     u5877:
  9638  1A65  0BF1               	decfsz	??_LCD_Command,f
  9639  1A66  2A65               	goto	u5877
  9640  1A67  0BF2               	decfsz	??_LCD_Command+1,f
  9641  1A68  2A65               	goto	u5877
  9642  1A69  0000               	nop
  9643  1A6A                     l2865:
  9644                           
  9645                           ;LCD.c: 37:     RE1=0;
  9646  1A6A  1283               	bcf	3,5	;RP0=0, select bank0
  9647  1A6B  1303               	bcf	3,6	;RP1=0, select bank0
  9648  1A6C  1089               	bcf	9,1	;volatile
  9649  1A6D                     l2867:
  9650                           
  9651                           ;LCD.c: 38:     _delay((unsigned long)((2)*(4000000/4000.0)));
  9652  1A6D  3003               	movlw	3
  9653  1A6E  00F2               	movwf	??_LCD_Command+1
  9654  1A6F  3097               	movlw	151
  9655  1A70  00F1               	movwf	??_LCD_Command
  9656  1A71                     u5887:
  9657  1A71  0BF1               	decfsz	??_LCD_Command,f
  9658  1A72  2A71               	goto	u5887
  9659  1A73  0BF2               	decfsz	??_LCD_Command+1,f
  9660  1A74  2A71               	goto	u5887
  9661  1A75  2A76               	nop2
  9662  1A76                     l132:
  9663  1A76  0008               	return
  9664  1A77                     __end_of_LCD_Command:
  9665                           
  9666                           	psect	text37
  9667  199F                     __ptext37:	
  9668 ;; *************** function _LCD_Port *****************
  9669 ;; Defined at:
  9670 ;;		line 18 in file "LCD.c"
  9671 ;; Parameters:    Size  Location     Type
  9672 ;;  a               1    wreg     unsigned char 
  9673 ;; Auto vars:     Size  Location     Type
  9674 ;;  a               1    0[COMMON] unsigned char 
  9675 ;; Return value:  Size  Location     Type
  9676 ;;                  1    wreg      void 
  9677 ;; Registers used:
  9678 ;;		wreg
  9679 ;; Tracked objects:
  9680 ;;		On entry : 0/0
  9681 ;;		On exit  : 0/0
  9682 ;;		Unchanged: 0/0
  9683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9684 ;;      Params:         0       0       0       0       0
  9685 ;;      Locals:         1       0       0       0       0
  9686 ;;      Temps:          0       0       0       0       0
  9687 ;;      Totals:         1       0       0       0       0
  9688 ;;Total ram usage:        1 bytes
  9689 ;; Hardware stack levels used:    1
  9690 ;; This function calls:
  9691 ;;		Nothing
  9692 ;; This function is called by:
  9693 ;;		_LCD_Write_Char
  9694 ;;		_LCD_Command
  9695 ;;		_LCD_Init
  9696 ;; This function uses a non-reentrant model
  9697 ;;
  9698                           
  9699                           
  9700                           ;psect for function _LCD_Port
  9701  199F                     _LCD_Port:
  9702                           
  9703                           ;incstack = 0
  9704                           ; Regs used in _LCD_Port: [wreg]
  9705                           ;LCD_Port@a stored from wreg
  9706  199F  00F0               	movwf	LCD_Port@a
  9707  19A0                     l2363:
  9708                           
  9709                           ;LCD.c: 19:     PORTD = a;
  9710  19A0  0870               	movf	LCD_Port@a,w
  9711  19A1  1283               	bcf	3,5	;RP0=0, select bank0
  9712  19A2  1303               	bcf	3,6	;RP1=0, select bank0
  9713  19A3  0088               	movwf	8	;volatile
  9714  19A4                     l129:
  9715  19A4  0008               	return
  9716  19A5                     __end_of_LCD_Port:
  9717                           
  9718                           	psect	text38
  9719  19E6                     __ptext38:	
  9720 ;; *************** function _Init_Transmit *****************
  9721 ;; Defined at:
  9722 ;;		line 15 in file "USART.c"
  9723 ;; Parameters:    Size  Location     Type
  9724 ;;		None
  9725 ;; Auto vars:     Size  Location     Type
  9726 ;;		None
  9727 ;; Return value:  Size  Location     Type
  9728 ;;                  1    wreg      void 
  9729 ;; Registers used:
  9730 ;;		None
  9731 ;; Tracked objects:
  9732 ;;		On entry : 0/0
  9733 ;;		On exit  : 0/0
  9734 ;;		Unchanged: 0/0
  9735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9736 ;;      Params:         0       0       0       0       0
  9737 ;;      Locals:         0       0       0       0       0
  9738 ;;      Temps:          0       0       0       0       0
  9739 ;;      Totals:         0       0       0       0       0
  9740 ;;Total ram usage:        0 bytes
  9741 ;; Hardware stack levels used:    1
  9742 ;; This function calls:
  9743 ;;		Nothing
  9744 ;; This function is called by:
  9745 ;;		_main
  9746 ;; This function uses a non-reentrant model
  9747 ;;
  9748                           
  9749                           
  9750                           ;psect for function _Init_Transmit
  9751  19E6                     _Init_Transmit:
  9752  19E6                     l3269:	
  9753                           ;incstack = 0
  9754                           ; Regs used in _Init_Transmit: []
  9755                           
  9756                           
  9757                           ;USART.c: 16:     TXSTAbits.TXEN = 1;
  9758  19E6  1683               	bsf	3,5	;RP0=1, select bank1
  9759  19E7  1303               	bcf	3,6	;RP1=0, select bank1
  9760  19E8  1698               	bsf	24,5	;volatile
  9761                           
  9762                           ;USART.c: 19:     PIR1bits.TXIF = 0;
  9763  19E9  1283               	bcf	3,5	;RP0=0, select bank0
  9764  19EA  1303               	bcf	3,6	;RP1=0, select bank0
  9765  19EB  120C               	bcf	12,4	;volatile
  9766                           
  9767                           ;USART.c: 20:     PIE1bits.TXIE = 0;
  9768  19EC  1683               	bsf	3,5	;RP0=1, select bank1
  9769  19ED  1303               	bcf	3,6	;RP1=0, select bank1
  9770  19EE  120C               	bcf	12,4	;volatile
  9771                           
  9772                           ;USART.c: 21:     INTCONbits.GIE = 0;
  9773  19EF  138B               	bcf	11,7	;volatile
  9774                           
  9775                           ;USART.c: 22:     INTCONbits.PEIE = 0;
  9776  19F0  130B               	bcf	11,6	;volatile
  9777                           
  9778                           ;USART.c: 24:     TRISCbits.TRISC7 = 1;
  9779  19F1  1787               	bsf	7,7	;volatile
  9780                           
  9781                           ;USART.c: 25:     TRISCbits.TRISC6 = 0;
  9782  19F2  1307               	bcf	7,6	;volatile
  9783  19F3                     l178:
  9784  19F3  0008               	return
  9785  19F4                     __end_of_Init_Transmit:
  9786                           
  9787                           	psect	text39
  9788  19B2                     __ptext39:	
  9789 ;; *************** function _Init_Receive *****************
  9790 ;; Defined at:
  9791 ;;		line 30 in file "USART.c"
  9792 ;; Parameters:    Size  Location     Type
  9793 ;;		None
  9794 ;; Auto vars:     Size  Location     Type
  9795 ;;		None
  9796 ;; Return value:  Size  Location     Type
  9797 ;;                  1    wreg      void 
  9798 ;; Registers used:
  9799 ;;		None
  9800 ;; Tracked objects:
  9801 ;;		On entry : 0/0
  9802 ;;		On exit  : 0/0
  9803 ;;		Unchanged: 0/0
  9804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9805 ;;      Params:         0       0       0       0       0
  9806 ;;      Locals:         0       0       0       0       0
  9807 ;;      Temps:          0       0       0       0       0
  9808 ;;      Totals:         0       0       0       0       0
  9809 ;;Total ram usage:        0 bytes
  9810 ;; Hardware stack levels used:    1
  9811 ;; This function calls:
  9812 ;;		Nothing
  9813 ;; This function is called by:
  9814 ;;		_main
  9815 ;; This function uses a non-reentrant model
  9816 ;;
  9817                           
  9818                           
  9819                           ;psect for function _Init_Receive
  9820  19B2                     _Init_Receive:
  9821  19B2                     l3271:	
  9822                           ;incstack = 0
  9823                           ; Regs used in _Init_Receive: []
  9824                           
  9825                           
  9826                           ;USART.c: 31:     TXSTAbits.SYNC = 0;
  9827  19B2  1683               	bsf	3,5	;RP0=1, select bank1
  9828  19B3  1303               	bcf	3,6	;RP1=0, select bank1
  9829  19B4  1218               	bcf	24,4	;volatile
  9830                           
  9831                           ;USART.c: 32:     RCSTAbits.SPEN = 1;
  9832  19B5  1283               	bcf	3,5	;RP0=0, select bank0
  9833  19B6  1303               	bcf	3,6	;RP1=0, select bank0
  9834  19B7  1798               	bsf	24,7	;volatile
  9835                           
  9836                           ;USART.c: 37:     RCSTAbits.CREN = 1;
  9837  19B8  1618               	bsf	24,4	;volatile
  9838  19B9                     l181:
  9839  19B9  0008               	return
  9840  19BA                     __end_of_Init_Receive:
  9841  007E                     btemp	set	126	;btemp
  9842  007E                     wtemp0	set	126
  9843                           
  9844                           	psect	config
  9845                           
  9846                           ;Config register CONFIG1 @ 0x2007
  9847                           ;	Oscillator Selection bits
  9848                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  9849                           ;	Watchdog Timer Enable bit
  9850                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9851                           ;	Power-up Timer Enable bit
  9852                           ;	PWRTE = OFF, PWRT disabled
  9853                           ;	RE3/MCLR pin function select bit
  9854                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9855                           ;	Code Protection bit
  9856                           ;	CP = OFF, Program memory code protection is disabled
  9857                           ;	Data Code Protection bit
  9858                           ;	CPD = OFF, Data memory code protection is disabled
  9859                           ;	Brown Out Reset Selection bits
  9860                           ;	BOREN = OFF, BOR disabled
  9861                           ;	Internal External Switchover bit
  9862                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9863                           ;	Fail-Safe Clock Monitor Enabled bit
  9864                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9865                           ;	Low Voltage Programming Enable bit
  9866                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9867                           ;	In-Circuit Debugger Mode bit
  9868                           ;	DEBUG = 0x1, unprogrammed default
  9869  2007                     	org	8199
  9870  2007  20D6               	dw	8406
  9871                           
  9872                           ;Config register CONFIG2 @ 0x2008
  9873                           ;	Brown-out Reset Selection bit
  9874                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9875                           ;	Flash Program Memory Self Write Enable bits
  9876                           ;	WRT = OFF, Write protection off
  9877  2008                     	org	8200
  9878  2008  3FFF               	dw	16383
  9879                           
  9880                           	psect	text1_split_1
  9881  01E2                     u5270:
  9882  01E2                     l3377:
  9883  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  9884  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  9885  01E4  0844               	movf	(sprintf@fval+3)^(0+128),w
  9886  01E5  00F3               	movwf	___fleq@ff1+3
  9887  01E6  0843               	movf	(sprintf@fval+2)^(0+128),w
  9888  01E7  00F2               	movwf	___fleq@ff1+2
  9889  01E8  0842               	movf	(sprintf@fval+1)^(0+128),w
  9890  01E9  00F1               	movwf	___fleq@ff1+1
  9891  01EA  0841               	movf	sprintf@fval^(0+128),w
  9892  01EB  00F0               	movwf	___fleq@ff1
  9893  01EC  3000               	movlw	0
  9894  01ED  00F7               	movwf	___fleq@ff2+3
  9895  01EE  3000               	movlw	0
  9896  01EF  00F6               	movwf	___fleq@ff2+2
  9897  01F0  3000               	movlw	0
  9898  01F1  00F5               	movwf	___fleq@ff2+1
  9899  01F2  3000               	movlw	0
  9900  01F3  00F4               	movwf	___fleq@ff2
  9901  01F4  160A  158A  23F6  120A  118A  	fcall	___fleq
  9902  01F9  1803               	btfsc	3,0
  9903  01FA  29FC               	goto	u5281
  9904  01FB  29FD               	goto	u5280
  9905  01FC                     u5281:
  9906  01FC  2AA5               	goto	l3397
  9907  01FD                     u5280:
  9908  01FD                     l3379:
  9909  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  9910  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  9911  01FF  0844               	movf	(sprintf@fval+3)^(0+128),w
  9912  0200  1283               	bcf	3,5	;RP0=0, select bank0
  9913  0201  1303               	bcf	3,6	;RP1=0, select bank0
  9914  0202  00D4               	movwf	___fltol@f1+3
  9915  0203  1683               	bsf	3,5	;RP0=1, select bank1
  9916  0204  1303               	bcf	3,6	;RP1=0, select bank1
  9917  0205  0843               	movf	(sprintf@fval+2)^(0+128),w
  9918  0206  1283               	bcf	3,5	;RP0=0, select bank0
  9919  0207  1303               	bcf	3,6	;RP1=0, select bank0
  9920  0208  00D3               	movwf	___fltol@f1+2
  9921  0209  1683               	bsf	3,5	;RP0=1, select bank1
  9922  020A  1303               	bcf	3,6	;RP1=0, select bank1
  9923  020B  0842               	movf	(sprintf@fval+1)^(0+128),w
  9924  020C  1283               	bcf	3,5	;RP0=0, select bank0
  9925  020D  1303               	bcf	3,6	;RP1=0, select bank0
  9926  020E  00D2               	movwf	___fltol@f1+1
  9927  020F  1683               	bsf	3,5	;RP0=1, select bank1
  9928  0210  1303               	bcf	3,6	;RP1=0, select bank1
  9929  0211  0841               	movf	sprintf@fval^(0+128),w
  9930  0212  1283               	bcf	3,5	;RP0=0, select bank0
  9931  0213  1303               	bcf	3,6	;RP1=0, select bank0
  9932  0214  00D1               	movwf	___fltol@f1
  9933  0215  160A  158A  254F  120A  118A  	fcall	___fltol
  9934  021A  1283               	bcf	3,5	;RP0=0, select bank0
  9935  021B  1303               	bcf	3,6	;RP1=0, select bank0
  9936  021C  0854               	movf	?___fltol+3,w
  9937  021D  0453               	iorwf	?___fltol+2,w
  9938  021E  0452               	iorwf	?___fltol+1,w
  9939  021F  0451               	iorwf	?___fltol,w
  9940  0220  1D03               	skipz
  9941  0221  2A23               	goto	u5291
  9942  0222  2A24               	goto	u5290
  9943  0223                     u5291:
  9944  0223  2AA5               	goto	l3397
  9945  0224                     u5290:
  9946  0224                     l3381:
  9947  0224  1683               	bsf	3,5	;RP0=1, select bank1
  9948  0225  1303               	bcf	3,6	;RP1=0, select bank1
  9949  0226  0840               	movf	(sprintf@eexp+1)^(0+128),w
  9950  0227  3A80               	xorlw	128
  9951  0228  00FF               	movwf	btemp+1
  9952  0229  3080               	movlw	128
  9953  022A  027F               	subwf	btemp+1,w
  9954  022B  1D03               	skipz
  9955  022C  2A2F               	goto	u5305
  9956  022D  3002               	movlw	2
  9957  022E  023F               	subwf	sprintf@eexp^(0+128),w
  9958  022F                     u5305:
  9959  022F  1C03               	skipc
  9960  0230  2A32               	goto	u5301
  9961  0231  2A33               	goto	u5300
  9962  0232                     u5301:
  9963  0232  2AA5               	goto	l3397
  9964  0233                     u5300:
  9965  0233                     l3383:
  9966                           
  9967                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmpval.integ < 4.
      +                          294967296){
  9968  0233  1683               	bsf	3,5	;RP0=1, select bank1
  9969  0234  1303               	bcf	3,6	;RP1=0, select bank1
  9970  0235  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  9971  0236  00F3               	movwf	___flge@ff1+3
  9972  0237  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  9973  0238  00F2               	movwf	___flge@ff1+2
  9974  0239  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  9975  023A  00F1               	movwf	___flge@ff1+1
  9976  023B  0837               	movf	sprintf@tmpval^(0+128),w
  9977  023C  00F0               	movwf	___flge@ff1
  9978  023D  3040               	movlw	64
  9979  023E  00F7               	movwf	___flge@ff2+3
  9980  023F  3089               	movlw	137
  9981  0240  00F6               	movwf	___flge@ff2+2
  9982  0241  3070               	movlw	112
  9983  0242  00F5               	movwf	___flge@ff2+1
  9984  0243  305F               	movlw	95
  9985  0244  00F4               	movwf	___flge@ff2
  9986  0245  160A  118A  2009  120A  118A  	fcall	___flge
  9987  024A  1803               	btfsc	3,0
  9988  024B  2A4D               	goto	u5311
  9989  024C  2A4E               	goto	u5310
  9990  024D                     u5311:
  9991  024D  2A57               	goto	l3387
  9992  024E                     u5310:
  9993  024E                     l3385:
  9994                           
  9995                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp -= (sizeof dpo
      +                          wers/sizeof dpowers[0])-1;
  9996  024E  30F7               	movlw	247
  9997  024F  1683               	bsf	3,5	;RP0=1, select bank1
  9998  0250  1303               	bcf	3,6	;RP1=0, select bank1
  9999  0251  07BF               	addwf	sprintf@eexp^(0+128),f
 10000  0252  1803               	skipnc
 10001  0253  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
 10002  0254  30FF               	movlw	255
 10003  0255  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
 10004                           
 10005                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10006  0256  2A5F               	goto	l3389
 10007  0257                     l3387:
 10008                           
 10009                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp -= (sizeof dpo
      +                          wers/sizeof dpowers[0])-2;
 10010  0257  30F8               	movlw	248
 10011  0258  1683               	bsf	3,5	;RP0=1, select bank1
 10012  0259  1303               	bcf	3,6	;RP1=0, select bank1
 10013  025A  07BF               	addwf	sprintf@eexp^(0+128),f
 10014  025B  1803               	skipnc
 10015  025C  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
 10016  025D  30FF               	movlw	255
 10017  025E  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
 10018  025F                     l3389:
 10019                           
 10020                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = ((sizeof(doubl
      +                          e)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10021  025F  083F               	movf	sprintf@eexp^(0+128),w
 10022  0260  120A  158A  2140  120A  118A  	fcall	_scale
 10023  0265  1283               	bcf	3,5	;RP0=0, select bank0
 10024  0266  1303               	bcf	3,6	;RP1=0, select bank0
 10025  0267  0841               	movf	?_scale+3,w
 10026  0268  1683               	bsf	3,5	;RP0=1, select bank1
 10027  0269  1303               	bcf	3,6	;RP1=0, select bank1
 10028  026A  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
 10029  026B  1283               	bcf	3,5	;RP0=0, select bank0
 10030  026C  1303               	bcf	3,6	;RP1=0, select bank0
 10031  026D  0840               	movf	?_scale+2,w
 10032  026E  1683               	bsf	3,5	;RP0=1, select bank1
 10033  026F  1303               	bcf	3,6	;RP1=0, select bank1
 10034  0270  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 10035  0271  1283               	bcf	3,5	;RP0=0, select bank0
 10036  0272  1303               	bcf	3,6	;RP1=0, select bank0
 10037  0273  083F               	movf	?_scale+1,w
 10038  0274  1683               	bsf	3,5	;RP0=1, select bank1
 10039  0275  1303               	bcf	3,6	;RP1=0, select bank1
 10040  0276  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 10041  0277  1283               	bcf	3,5	;RP0=0, select bank0
 10042  0278  1303               	bcf	3,6	;RP1=0, select bank0
 10043  0279  083E               	movf	?_scale,w
 10044  027A  1683               	bsf	3,5	;RP0=1, select bank1
 10045  027B  1303               	bcf	3,6	;RP1=0, select bank1
 10046  027C  00B7               	movwf	sprintf@tmpval^(0+128)
 10047  027D                     l3391:
 10048  027D  0844               	movf	(sprintf@fval+3)^(0+128),w
 10049  027E  00F3               	movwf	__div_to_l_@f1+3
 10050  027F  0843               	movf	(sprintf@fval+2)^(0+128),w
 10051  0280  00F2               	movwf	__div_to_l_@f1+2
 10052  0281  0842               	movf	(sprintf@fval+1)^(0+128),w
 10053  0282  00F1               	movwf	__div_to_l_@f1+1
 10054  0283  0841               	movf	sprintf@fval^(0+128),w
 10055  0284  00F0               	movwf	__div_to_l_@f1
 10056  0285  083A               	movf	(sprintf@tmpval+3)^(0+128),w
 10057  0286  00F7               	movwf	__div_to_l_@f2+3
 10058  0287  0839               	movf	(sprintf@tmpval+2)^(0+128),w
 10059  0288  00F6               	movwf	__div_to_l_@f2+2
 10060  0289  0838               	movf	(sprintf@tmpval+1)^(0+128),w
 10061  028A  00F5               	movwf	__div_to_l_@f2+1
 10062  028B  0837               	movf	sprintf@tmpval^(0+128),w
 10063  028C  00F4               	movwf	__div_to_l_@f2
 10064  028D  160A  158A  2742  120A  118A  	fcall	__div_to_l_
 10065  0292  0873               	movf	?__div_to_l_+3,w
 10066  0293  1683               	bsf	3,5	;RP0=1, select bank1
 10067  0294  1303               	bcf	3,6	;RP1=0, select bank1
 10068  0295  00BE               	movwf	(sprintf@val+3)^(0+128)
 10069  0296  0872               	movf	?__div_to_l_+2,w
 10070  0297  00BD               	movwf	(sprintf@val+2)^(0+128)
 10071  0298  0871               	movf	?__div_to_l_+1,w
 10072  0299  00BC               	movwf	(sprintf@val+1)^(0+128)
 10073  029A  0870               	movf	?__div_to_l_,w
 10074  029B  00BB               	movwf	sprintf@val^(0+128)
 10075  029C                     l3395:
 10076                           
 10077                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval = 0.0;
 10078  029C  3000               	movlw	0
 10079  029D  00C4               	movwf	(sprintf@fval+3)^(0+128)
 10080  029E  3000               	movlw	0
 10081  029F  00C3               	movwf	(sprintf@fval+2)^(0+128)
 10082  02A0  3000               	movlw	0
 10083  02A1  00C2               	movwf	(sprintf@fval+1)^(0+128)
 10084  02A2  3000               	movlw	0
 10085  02A3  00C1               	movwf	sprintf@fval^(0+128)
 10086                           
 10087                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else {
 10088  02A4  2B29               	goto	l3403
 10089  02A5                     l3397:
 10090                           
 10091                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = (unsigned long
      +                          )fval;
 10092  02A5  1683               	bsf	3,5	;RP0=1, select bank1
 10093  02A6  1303               	bcf	3,6	;RP1=0, select bank1
 10094  02A7  0844               	movf	(sprintf@fval+3)^(0+128),w
 10095  02A8  1283               	bcf	3,5	;RP0=0, select bank0
 10096  02A9  1303               	bcf	3,6	;RP1=0, select bank0
 10097  02AA  00D4               	movwf	___fltol@f1+3
 10098  02AB  1683               	bsf	3,5	;RP0=1, select bank1
 10099  02AC  1303               	bcf	3,6	;RP1=0, select bank1
 10100  02AD  0843               	movf	(sprintf@fval+2)^(0+128),w
 10101  02AE  1283               	bcf	3,5	;RP0=0, select bank0
 10102  02AF  1303               	bcf	3,6	;RP1=0, select bank0
 10103  02B0  00D3               	movwf	___fltol@f1+2
 10104  02B1  1683               	bsf	3,5	;RP0=1, select bank1
 10105  02B2  1303               	bcf	3,6	;RP1=0, select bank1
 10106  02B3  0842               	movf	(sprintf@fval+1)^(0+128),w
 10107  02B4  1283               	bcf	3,5	;RP0=0, select bank0
 10108  02B5  1303               	bcf	3,6	;RP1=0, select bank0
 10109  02B6  00D2               	movwf	___fltol@f1+1
 10110  02B7  1683               	bsf	3,5	;RP0=1, select bank1
 10111  02B8  1303               	bcf	3,6	;RP1=0, select bank1
 10112  02B9  0841               	movf	sprintf@fval^(0+128),w
 10113  02BA  1283               	bcf	3,5	;RP0=0, select bank0
 10114  02BB  1303               	bcf	3,6	;RP1=0, select bank0
 10115  02BC  00D1               	movwf	___fltol@f1
 10116  02BD  160A  158A  254F  120A  118A  	fcall	___fltol
 10117  02C2  1283               	bcf	3,5	;RP0=0, select bank0
 10118  02C3  1303               	bcf	3,6	;RP1=0, select bank0
 10119  02C4  0854               	movf	?___fltol+3,w
 10120  02C5  1683               	bsf	3,5	;RP0=1, select bank1
 10121  02C6  1303               	bcf	3,6	;RP1=0, select bank1
 10122  02C7  00BE               	movwf	(sprintf@val+3)^(0+128)
 10123  02C8  1283               	bcf	3,5	;RP0=0, select bank0
 10124  02C9  1303               	bcf	3,6	;RP1=0, select bank0
 10125  02CA  0853               	movf	?___fltol+2,w
 10126  02CB  1683               	bsf	3,5	;RP0=1, select bank1
 10127  02CC  1303               	bcf	3,6	;RP1=0, select bank1
 10128  02CD  00BD               	movwf	(sprintf@val+2)^(0+128)
 10129  02CE  1283               	bcf	3,5	;RP0=0, select bank0
 10130  02CF  1303               	bcf	3,6	;RP1=0, select bank0
 10131  02D0  0852               	movf	?___fltol+1,w
 10132  02D1  1683               	bsf	3,5	;RP0=1, select bank1
 10133  02D2  1303               	bcf	3,6	;RP1=0, select bank1
 10134  02D3  00BC               	movwf	(sprintf@val+1)^(0+128)
 10135  02D4  1283               	bcf	3,5	;RP0=0, select bank0
 10136  02D5  1303               	bcf	3,6	;RP1=0, select bank0
 10137  02D6  0851               	movf	?___fltol,w
 10138  02D7  1683               	bsf	3,5	;RP0=1, select bank1
 10139  02D8  1303               	bcf	3,6	;RP1=0, select bank1
 10140  02D9  00BB               	movwf	sprintf@val^(0+128)
 10141  02DA                     l3399:
 10142                           
 10143                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -= (double)val;
 10144  02DA  083E               	movf	(sprintf@val+3)^(0+128),w
 10145  02DB  00F3               	movwf	___xxtofl@val+3
 10146  02DC  083D               	movf	(sprintf@val+2)^(0+128),w
 10147  02DD  00F2               	movwf	___xxtofl@val+2
 10148  02DE  083C               	movf	(sprintf@val+1)^(0+128),w
 10149  02DF  00F1               	movwf	___xxtofl@val+1
 10150  02E0  083B               	movf	sprintf@val^(0+128),w
 10151  02E1  00F0               	movwf	___xxtofl@val
 10152  02E2  3000               	movlw	0
 10153  02E3  160A  158A  25CB  120A  118A  	fcall	___xxtofl
 10154  02E8  0873               	movf	?___xxtofl+3,w
 10155  02E9  1283               	bcf	3,5	;RP0=0, select bank0
 10156  02EA  1303               	bcf	3,6	;RP1=0, select bank0
 10157  02EB  00E9               	movwf	___flsub@a+3
 10158  02EC  0872               	movf	?___xxtofl+2,w
 10159  02ED  00E8               	movwf	___flsub@a+2
 10160  02EE  0871               	movf	?___xxtofl+1,w
 10161  02EF  00E7               	movwf	___flsub@a+1
 10162  02F0  0870               	movf	?___xxtofl,w
 10163  02F1  00E6               	movwf	___flsub@a
 10164  02F2  1683               	bsf	3,5	;RP0=1, select bank1
 10165  02F3  1303               	bcf	3,6	;RP1=0, select bank1
 10166  02F4  0844               	movf	(sprintf@fval+3)^(0+128),w
 10167  02F5  1283               	bcf	3,5	;RP0=0, select bank0
 10168  02F6  1303               	bcf	3,6	;RP1=0, select bank0
 10169  02F7  00ED               	movwf	___flsub@b+3
 10170  02F8  1683               	bsf	3,5	;RP0=1, select bank1
 10171  02F9  1303               	bcf	3,6	;RP1=0, select bank1
 10172  02FA  0843               	movf	(sprintf@fval+2)^(0+128),w
 10173  02FB  1283               	bcf	3,5	;RP0=0, select bank0
 10174  02FC  1303               	bcf	3,6	;RP1=0, select bank0
 10175  02FD  00EC               	movwf	___flsub@b+2
 10176  02FE  1683               	bsf	3,5	;RP0=1, select bank1
 10177  02FF  1303               	bcf	3,6	;RP1=0, select bank1
 10178  0300  0842               	movf	(sprintf@fval+1)^(0+128),w
 10179  0301  1283               	bcf	3,5	;RP0=0, select bank0
 10180  0302  1303               	bcf	3,6	;RP1=0, select bank0
 10181  0303  00EB               	movwf	___flsub@b+1
 10182  0304  1683               	bsf	3,5	;RP0=1, select bank1
 10183  0305  1303               	bcf	3,6	;RP1=0, select bank1
 10184  0306  0841               	movf	sprintf@fval^(0+128),w
 10185  0307  1283               	bcf	3,5	;RP0=0, select bank0
 10186  0308  1303               	bcf	3,6	;RP1=0, select bank0
 10187  0309  00EA               	movwf	___flsub@b
 10188  030A  160A  158A  229B  120A  118A  	fcall	___flsub
 10189  030F  1283               	bcf	3,5	;RP0=0, select bank0
 10190  0310  1303               	bcf	3,6	;RP1=0, select bank0
 10191  0311  0869               	movf	?___flsub+3,w
 10192  0312  1683               	bsf	3,5	;RP0=1, select bank1
 10193  0313  1303               	bcf	3,6	;RP1=0, select bank1
 10194  0314  00C4               	movwf	(sprintf@fval+3)^(0+128)
 10195  0315  1283               	bcf	3,5	;RP0=0, select bank0
 10196  0316  1303               	bcf	3,6	;RP1=0, select bank0
 10197  0317  0868               	movf	?___flsub+2,w
 10198  0318  1683               	bsf	3,5	;RP0=1, select bank1
 10199  0319  1303               	bcf	3,6	;RP1=0, select bank1
 10200  031A  00C3               	movwf	(sprintf@fval+2)^(0+128)
 10201  031B  1283               	bcf	3,5	;RP0=0, select bank0
 10202  031C  1303               	bcf	3,6	;RP1=0, select bank0
 10203  031D  0867               	movf	?___flsub+1,w
 10204  031E  1683               	bsf	3,5	;RP0=1, select bank1
 10205  031F  1303               	bcf	3,6	;RP1=0, select bank1
 10206  0320  00C2               	movwf	(sprintf@fval+1)^(0+128)
 10207  0321  1283               	bcf	3,5	;RP0=0, select bank0
 10208  0322  1303               	bcf	3,6	;RP1=0, select bank0
 10209  0323  0866               	movf	?___flsub,w
 10210  0324  1683               	bsf	3,5	;RP0=1, select bank1
 10211  0325  1303               	bcf	3,6	;RP1=0, select bank1
 10212  0326  00C1               	movwf	sprintf@fval^(0+128)
 10213  0327                     l3401:
 10214                           
 10215                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp = 0;
 10216  0327  01BF               	clrf	sprintf@eexp^(0+128)
 10217  0328  01C0               	clrf	(sprintf@eexp+1)^(0+128)
 10218  0329                     l3403:
 10219                           
 10220                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c = 1 ; c != (siz
      +                          eof dpowers/sizeof dpowers[0]) ; c++)
 10221  0329  01C8               	clrf	sprintf@c^(0+128)
 10222  032A  0AC8               	incf	sprintf@c^(0+128),f
 10223  032B                     l3409:
 10224                           
 10225                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val < dpowers[c])
 10226  032B  0848               	movf	sprintf@c^(0+128),w
 10227  032C  00A9               	movwf	??_sprintf^(0+128)
 10228  032D  3001               	movlw	1
 10229  032E                     u5325:
 10230  032E  1003               	clrc
 10231  032F  0DA9               	rlf	??_sprintf^(0+128),f
 10232  0330  3EFF               	addlw	-1
 10233  0331  1D03               	skipz
 10234  0332  2B2E               	goto	u5325
 10235  0333  1003               	clrc
 10236  0334  0D29               	rlf	??_sprintf^(0+128),w
 10237  0335  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10238  0336  0084               	movwf	4
 10239  0337  120A  158A  200A  120A  118A  	fcall	stringdir
 10240  033C  00AA               	movwf	(??_sprintf+1)^(0+128)
 10241  033D  120A  158A  200A  120A  118A  	fcall	stringdir
 10242  0342  00AB               	movwf	((??_sprintf+1)^(0+128)+1)
 10243  0343  120A  158A  200A  120A  118A  	fcall	stringdir
 10244  0348  00AC               	movwf	((??_sprintf+1)^(0+128)+2)
 10245  0349  120A  158A  200A  120A  118A  	fcall	stringdir
 10246  034E  00AD               	movwf	((??_sprintf+1)^(0+128)+3)
 10247  034F  082D               	movf	(??_sprintf+4)^(0+128),w
 10248  0350  023E               	subwf	(sprintf@val+3)^(0+128),w
 10249  0351  1D03               	skipz
 10250  0352  2B5D               	goto	u5335
 10251  0353  082C               	movf	(??_sprintf+3)^(0+128),w
 10252  0354  023D               	subwf	(sprintf@val+2)^(0+128),w
 10253  0355  1D03               	skipz
 10254  0356  2B5D               	goto	u5335
 10255  0357  082B               	movf	(??_sprintf+2)^(0+128),w
 10256  0358  023C               	subwf	(sprintf@val+1)^(0+128),w
 10257  0359  1D03               	skipz
 10258  035A  2B5D               	goto	u5335
 10259  035B  082A               	movf	(??_sprintf+1)^(0+128),w
 10260  035C  023B               	subwf	sprintf@val^(0+128),w
 10261  035D                     u5335:
 10262  035D  1803               	skipnc
 10263  035E  2B60               	goto	u5331
 10264  035F  2B61               	goto	u5330
 10265  0360                     u5331:
 10266  0360  2B62               	goto	l3413
 10267  0361                     u5330:
 10268  0361  2B6C               	goto	l3415
 10269  0362                     l3413:
 10270  0362  3001               	movlw	1
 10271  0363  00A9               	movwf	??_sprintf^(0+128)
 10272  0364  0829               	movf	??_sprintf^(0+128),w
 10273  0365  07C8               	addwf	sprintf@c^(0+128),f
 10274  0366  300A               	movlw	10
 10275  0367  0648               	xorwf	sprintf@c^(0+128),w
 10276  0368  1D03               	btfss	3,2
 10277  0369  2B6B               	goto	u5341
 10278  036A  2B6C               	goto	u5340
 10279  036B                     u5341:
 10280  036B  2B2B               	goto	l3409
 10281  036C                     u5340:
 10282  036C                     l3415:
 10283                           
 10284                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -= prec + c + e
      +                          exp;
 10285  036C  0848               	movf	sprintf@c^(0+128),w
 10286  036D  0746               	addwf	sprintf@prec^(0+128),w
 10287  036E  00A9               	movwf	??_sprintf^(0+128)
 10288  036F  0847               	movf	(sprintf@prec+1)^(0+128),w
 10289  0370  1803               	skipnc
 10290  0371  0A47               	incf	(sprintf@prec+1)^(0+128),w
 10291  0372  00AA               	movwf	(??_sprintf^(0+128)+1)
 10292  0373  083F               	movf	sprintf@eexp^(0+128),w
 10293  0374  0729               	addwf	??_sprintf^(0+128),w
 10294  0375  00AB               	movwf	(??_sprintf+2)^(0+128)
 10295  0376  0840               	movf	(sprintf@eexp+1)^(0+128),w
 10296  0377  1803               	skipnc
 10297  0378  0A40               	incf	(sprintf@eexp+1)^(0+128),w
 10298  0379  072A               	addwf	(??_sprintf+1)^(0+128),w
 10299  037A  00AC               	movwf	(??_sprintf+3)^(0+128)
 10300  037B  082B               	movf	(??_sprintf+2)^(0+128),w
 10301  037C  02B5               	subwf	sprintf@width^(0+128),f
 10302  037D  082C               	movf	(??_sprintf+3)^(0+128),w
 10303  037E  1C03               	skipc
 10304  037F  03B6               	decf	(sprintf@width+1)^(0+128),f
 10305  0380  02B6               	subwf	(sprintf@width+1)^(0+128),f
 10306                           
 10307                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10308  0381  0846               	movf	sprintf@prec^(0+128),w
 10309  0382  0447               	iorwf	(sprintf@prec+1)^(0+128),w
 10310  0383  1903               	btfsc	3,2
 10311  0384  2B86               	goto	u5351
 10312  0385  2B87               	goto	u5350
 10313  0386                     u5351:
 10314  0386  2B8D               	goto	l3419
 10315  0387                     u5350:
 10316  0387                     l3417:
 10317                           
 10318                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width--;
 10319  0387  30FF               	movlw	255
 10320  0388  07B5               	addwf	sprintf@width^(0+128),f
 10321  0389  1803               	skipnc
 10322  038A  0AB6               	incf	(sprintf@width+1)^(0+128),f
 10323  038B  30FF               	movlw	255
 10324  038C  07B6               	addwf	(sprintf@width+1)^(0+128),f
 10325  038D                     l3419:
 10326                           
 10327                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag & 0x03)
 10328  038D  3003               	movlw	3
 10329  038E  0533               	andwf	sprintf@flag^(0+128),w
 10330  038F  00A9               	movwf	??_sprintf^(0+128)
 10331  0390  3000               	movlw	0
 10332  0391  0534               	andwf	(sprintf@flag+1)^(0+128),w
 10333  0392  00AA               	movwf	(??_sprintf+1)^(0+128)
 10334  0393  0829               	movf	??_sprintf^(0+128),w
 10335  0394  042A               	iorwf	(??_sprintf^(0+128)+1),w
 10336  0395  1903               	btfsc	3,2
 10337  0396  2B98               	goto	u5361
 10338  0397  2B99               	goto	u5360
 10339  0398                     u5361:
 10340  0398  2BAE               	goto	l3429
 10341  0399                     u5360:
 10342  0399                     l3421:
 10343                           
 10344                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width--;
 10345  0399  30FF               	movlw	255
 10346  039A  07B5               	addwf	sprintf@width^(0+128),f
 10347  039B  1803               	skipnc
 10348  039C  0AB6               	incf	(sprintf@width+1)^(0+128),f
 10349  039D  30FF               	movlw	255
 10350  039E  07B6               	addwf	(sprintf@width+1)^(0+128),f
 10351  039F  2BAE               	goto	l3429
 10352  03A0                     l3423:
 10353                           
 10354                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp++ = (' ')));
 10355  03A0  3020               	movlw	32
 10356  03A1  1683               	bsf	3,5	;RP0=1, select bank1
 10357  03A2  1303               	bcf	3,6	;RP1=0, select bank1
 10358  03A3  00A9               	movwf	??_sprintf^(0+128)
 10359  03A4  0845               	movf	sprintf@sp^(0+128),w
 10360  03A5  0084               	movwf	4
 10361  03A6  0829               	movf	??_sprintf^(0+128),w
 10362  03A7  1383               	bcf	3,7	;select IRP bank0
 10363  03A8  0080               	movwf	0
 10364  03A9                     l3425:
 10365  03A9  3001               	movlw	1
 10366  03AA  00A9               	movwf	??_sprintf^(0+128)
 10367  03AB  0829               	movf	??_sprintf^(0+128),w
 10368  03AC  07C5               	addwf	sprintf@sp^(0+128),f
 10369  03AD  2B99               	goto	l3421
 10370  03AE                     l3429:
 10371                           
 10372                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(width > 0) {
 10373  03AE  0836               	movf	(sprintf@width+1)^(0+128),w
 10374  03AF  3A80               	xorlw	128
 10375  03B0  00FF               	movwf	btemp+1
 10376  03B1  3080               	movlw	128
 10377  03B2  027F               	subwf	btemp+1,w
 10378  03B3  1D03               	skipz
 10379  03B4  2BB7               	goto	u5375
 10380  03B5  3001               	movlw	1
 10381  03B6  0235               	subwf	sprintf@width^(0+128),w
 10382  03B7                     u5375:
 10383  03B7  1803               	skipnc
 10384  03B8  2BBA               	goto	u5371
 10385  03B9  2BBB               	goto	u5370
 10386  03BA                     u5371:
 10387  03BA  2BA0               	goto	l3423
 10388  03BB                     u5370:
 10389  03BB                     l3431:
 10390                           
 10391                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x03)
 10392  03BB  3003               	movlw	3
 10393  03BC  1683               	bsf	3,5	;RP0=1, select bank1
 10394  03BD  1303               	bcf	3,6	;RP1=0, select bank1
 10395  03BE  0533               	andwf	sprintf@flag^(0+128),w
 10396  03BF  00A9               	movwf	??_sprintf^(0+128)
 10397  03C0  3000               	movlw	0
 10398  03C1  0534               	andwf	(sprintf@flag+1)^(0+128),w
 10399  03C2  00AA               	movwf	(??_sprintf+1)^(0+128)
 10400  03C3  0829               	movf	??_sprintf^(0+128),w
 10401  03C4  042A               	iorwf	(??_sprintf^(0+128)+1),w
 10402  03C5  1903               	btfsc	3,2
 10403  03C6  2BC8               	goto	u5381
 10404  03C7  2BC9               	goto	u5380
 10405  03C8                     u5381:
 10406  03C8  2C5B               	goto	l363
 10407  03C9                     u5380:
 10408  03C9                     l3433:
 10409                           
 10410                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp++ = ('-')));
 10411  03C9  302D               	movlw	45
 10412  03CA  00A9               	movwf	??_sprintf^(0+128)
 10413  03CB  0845               	movf	sprintf@sp^(0+128),w
 10414  03CC  0084               	movwf	4
 10415  03CD  0829               	movf	??_sprintf^(0+128),w
 10416  03CE  1383               	bcf	3,7	;select IRP bank0
 10417  03CF  0080               	movwf	0
 10418  03D0                     l3435:
 10419  03D0  3001               	movlw	1
 10420  03D1  00A9               	movwf	??_sprintf^(0+128)
 10421  03D2  0829               	movf	??_sprintf^(0+128),w
 10422  03D3  07C5               	addwf	sprintf@sp^(0+128),f
 10423  03D4  2C5B               	goto	l363
 10424  03D5                     l3437:
 10425                           
 10426                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;D:\Microchip\xc8\v2
      +                          .31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = val/dpowers[c];
 10427  03D5  0848               	movf	sprintf@c^(0+128),w
 10428  03D6  00A9               	movwf	??_sprintf^(0+128)
 10429  03D7  3001               	movlw	1
 10430  03D8                     u5395:
 10431  03D8  1003               	clrc
 10432  03D9  0DA9               	rlf	??_sprintf^(0+128),f
 10433  03DA  3EFF               	addlw	-1
 10434  03DB  1D03               	skipz
 10435  03DC  2BD8               	goto	u5395
 10436  03DD  1003               	clrc
 10437  03DE  0D29               	rlf	??_sprintf^(0+128),w
 10438  03DF  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10439  03E0  0084               	movwf	4
 10440  03E1  120A  158A  200A  120A  118A  	fcall	stringdir
 10441  03E6  00F0               	movwf	___lldiv@divisor
 10442  03E7  120A  158A  200A  120A  118A  	fcall	stringdir
 10443  03EC  00F1               	movwf	___lldiv@divisor+1
 10444  03ED  120A  158A  200A  120A  118A  	fcall	stringdir
 10445  03F2  00F2               	movwf	___lldiv@divisor+2
 10446  03F3  120A  158A  200A  120A  118A  	fcall	stringdir
 10447  03F8  00F3               	movwf	___lldiv@divisor+3
 10448  03F9  083E               	movf	(sprintf@val+3)^(0+128),w
 10449  03FA  00F7               	movwf	___lldiv@dividend+3
 10450  03FB  083D               	movf	(sprintf@val+2)^(0+128),w
 10451  03FC  00F6               	movwf	___lldiv@dividend+2
 10452  03FD  083C               	movf	(sprintf@val+1)^(0+128),w
 10453  03FE  00F5               	movwf	___lldiv@dividend+1
 10454  03FF  083B               	movf	sprintf@val^(0+128),w
 10455  0400  00F4               	movwf	___lldiv@dividend
 10456  0401  160A  158A  24E9  120A  118A  	fcall	___lldiv
 10457  0406  0873               	movf	?___lldiv+3,w
 10458  0407  1683               	bsf	3,5	;RP0=1, select bank1
 10459  0408  1303               	bcf	3,6	;RP1=0, select bank1
 10460  0409  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
 10461  040A  0872               	movf	?___lldiv+2,w
 10462  040B  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 10463  040C  0871               	movf	?___lldiv+1,w
 10464  040D  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 10465  040E  0870               	movf	?___lldiv,w
 10466  040F  00B7               	movwf	sprintf@tmpval^(0+128)
 10467  0410                     l3439:
 10468                           
 10469                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval.vd %= 10;
 10470  0410  3000               	movlw	0
 10471  0411  1283               	bcf	3,5	;RP0=0, select bank0
 10472  0412  1303               	bcf	3,6	;RP1=0, select bank0
 10473  0413  00A3               	movwf	___llmod@divisor+3
 10474  0414  3000               	movlw	0
 10475  0415  00A2               	movwf	___llmod@divisor+2
 10476  0416  3000               	movlw	0
 10477  0417  00A1               	movwf	___llmod@divisor+1
 10478  0418  300A               	movlw	10
 10479  0419  00A0               	movwf	___llmod@divisor
 10480  041A  1683               	bsf	3,5	;RP0=1, select bank1
 10481  041B  1303               	bcf	3,6	;RP1=0, select bank1
 10482  041C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
 10483  041D  1283               	bcf	3,5	;RP0=0, select bank0
 10484  041E  1303               	bcf	3,6	;RP1=0, select bank0
 10485  041F  00A7               	movwf	___llmod@dividend+3
 10486  0420  1683               	bsf	3,5	;RP0=1, select bank1
 10487  0421  1303               	bcf	3,6	;RP1=0, select bank1
 10488  0422  0839               	movf	(sprintf@tmpval+2)^(0+128),w
 10489  0423  1283               	bcf	3,5	;RP0=0, select bank0
 10490  0424  1303               	bcf	3,6	;RP1=0, select bank0
 10491  0425  00A6               	movwf	___llmod@dividend+2
 10492  0426  1683               	bsf	3,5	;RP0=1, select bank1
 10493  0427  1303               	bcf	3,6	;RP1=0, select bank1
 10494  0428  0838               	movf	(sprintf@tmpval+1)^(0+128),w
 10495  0429  1283               	bcf	3,5	;RP0=0, select bank0
 10496  042A  1303               	bcf	3,6	;RP1=0, select bank0
 10497  042B  00A5               	movwf	___llmod@dividend+1
 10498  042C  1683               	bsf	3,5	;RP0=1, select bank1
 10499  042D  1303               	bcf	3,6	;RP1=0, select bank1
 10500  042E  0837               	movf	sprintf@tmpval^(0+128),w
 10501  042F  1283               	bcf	3,5	;RP0=0, select bank0
 10502  0430  1303               	bcf	3,6	;RP1=0, select bank0
 10503  0431  00A4               	movwf	___llmod@dividend
 10504  0432  160A  158A  2493  120A  118A  	fcall	___llmod
 10505  0437  1283               	bcf	3,5	;RP0=0, select bank0
 10506  0438  1303               	bcf	3,6	;RP1=0, select bank0
 10507  0439  0823               	movf	?___llmod+3,w
 10508  043A  1683               	bsf	3,5	;RP0=1, select bank1
 10509  043B  1303               	bcf	3,6	;RP1=0, select bank1
 10510  043C  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
 10511  043D  1283               	bcf	3,5	;RP0=0, select bank0
 10512  043E  1303               	bcf	3,6	;RP1=0, select bank0
 10513  043F  0822               	movf	?___llmod+2,w
 10514  0440  1683               	bsf	3,5	;RP0=1, select bank1
 10515  0441  1303               	bcf	3,6	;RP1=0, select bank1
 10516  0442  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 10517  0443  1283               	bcf	3,5	;RP0=0, select bank0
 10518  0444  1303               	bcf	3,6	;RP1=0, select bank0
 10519  0445  0821               	movf	?___llmod+1,w
 10520  0446  1683               	bsf	3,5	;RP0=1, select bank1
 10521  0447  1303               	bcf	3,6	;RP1=0, select bank1
 10522  0448  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 10523  0449  1283               	bcf	3,5	;RP0=0, select bank0
 10524  044A  1303               	bcf	3,6	;RP1=0, select bank0
 10525  044B  0820               	movf	?___llmod,w
 10526  044C  1683               	bsf	3,5	;RP0=1, select bank1
 10527  044D  1303               	bcf	3,6	;RP1=0, select bank1
 10528  044E  00B7               	movwf	sprintf@tmpval^(0+128)
 10529  044F                     l3441:
 10530                           
 10531                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp++ = ('0' + tmp
      +                          val.vd)));
 10532  044F  0837               	movf	sprintf@tmpval^(0+128),w
 10533  0450  3E30               	addlw	48
 10534  0451  00A9               	movwf	??_sprintf^(0+128)
 10535  0452  0845               	movf	sprintf@sp^(0+128),w
 10536  0453  0084               	movwf	4
 10537  0454  0829               	movf	??_sprintf^(0+128),w
 10538  0455  1383               	bcf	3,7	;select IRP bank0
 10539  0456  0080               	movwf	0
 10540  0457  3001               	movlw	1
 10541  0458  00A9               	movwf	??_sprintf^(0+128)
 10542  0459  0829               	movf	??_sprintf^(0+128),w
 10543  045A  07C5               	addwf	sprintf@sp^(0+128),f
 10544  045B                     l363:	
 10545                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };D:\Microchip\xc8\v2
      +                          .31\pic\sources\c90\common\doprnt.c: 1232:    }
 10546                           
 10547                           
 10548                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c--) {
 10549  045B  3001               	movlw	1
 10550  045C  02C8               	subwf	sprintf@c^(0+128),f
 10551  045D  0A48               	incf	sprintf@c^(0+128),w
 10552  045E  1D03               	btfss	3,2
 10553  045F  2C61               	goto	u5401
 10554  0460  2C62               	goto	u5400
 10555  0461                     u5401:
 10556  0461  2BD5               	goto	l3437
 10557  0462                     u5400:
 10558  0462  2C76               	goto	l3449
 10559  0463                     l3443:
 10560                           
 10561                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++ = ('0')));
 10562  0463  3030               	movlw	48
 10563  0464  1683               	bsf	3,5	;RP0=1, select bank1
 10564  0465  1303               	bcf	3,6	;RP1=0, select bank1
 10565  0466  00A9               	movwf	??_sprintf^(0+128)
 10566  0467  0845               	movf	sprintf@sp^(0+128),w
 10567  0468  0084               	movwf	4
 10568  0469  0829               	movf	??_sprintf^(0+128),w
 10569  046A  1383               	bcf	3,7	;select IRP bank0
 10570  046B  0080               	movwf	0
 10571  046C                     l3445:
 10572  046C  3001               	movlw	1
 10573  046D  00A9               	movwf	??_sprintf^(0+128)
 10574  046E  0829               	movf	??_sprintf^(0+128),w
 10575  046F  07C5               	addwf	sprintf@sp^(0+128),f
 10576  0470                     l3447:
 10577                           
 10578                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10579  0470  30FF               	movlw	255
 10580  0471  07BF               	addwf	sprintf@eexp^(0+128),f
 10581  0472  1803               	skipnc
 10582  0473  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
 10583  0474  30FF               	movlw	255
 10584  0475  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
 10585  0476                     l3449:
 10586                           
 10587                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(eexp > 0) {
 10588  0476  0840               	movf	(sprintf@eexp+1)^(0+128),w
 10589  0477  3A80               	xorlw	128
 10590  0478  00FF               	movwf	btemp+1
 10591  0479  3080               	movlw	128
 10592  047A  027F               	subwf	btemp+1,w
 10593  047B  1D03               	skipz
 10594  047C  2C7F               	goto	u5415
 10595  047D  3001               	movlw	1
 10596  047E  023F               	subwf	sprintf@eexp^(0+128),w
 10597  047F                     u5415:
 10598  047F  1803               	skipnc
 10599  0480  2C82               	goto	u5411
 10600  0481  2C83               	goto	u5410
 10601  0482                     u5411:
 10602  0482  2C63               	goto	l3443
 10603  0483                     u5410:
 10604  0483                     l3451:
 10605                           
 10606                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec > (int)((sizeo
      +                          f dpowers/sizeof dpowers[0])-2))
 10607  0483  1683               	bsf	3,5	;RP0=1, select bank1
 10608  0484  1303               	bcf	3,6	;RP1=0, select bank1
 10609  0485  0847               	movf	(sprintf@prec+1)^(0+128),w
 10610  0486  3A80               	xorlw	128
 10611  0487  00FF               	movwf	btemp+1
 10612  0488  3080               	movlw	128
 10613  0489  027F               	subwf	btemp+1,w
 10614  048A  1D03               	skipz
 10615  048B  2C8E               	goto	u5425
 10616  048C  3009               	movlw	9
 10617  048D  0246               	subwf	sprintf@prec^(0+128),w
 10618  048E                     u5425:
 10619  048E  1C03               	skipc
 10620  048F  2C91               	goto	u5421
 10621  0490  2C92               	goto	u5420
 10622  0491                     u5421:
 10623  0491  2C99               	goto	l3455
 10624  0492                     u5420:
 10625  0492                     l3453:
 10626                           
 10627                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (sizeof dpowers/s
      +                          izeof dpowers[0])-2;
 10628  0492  3008               	movlw	8
 10629  0493  1683               	bsf	3,5	;RP0=1, select bank1
 10630  0494  1303               	bcf	3,6	;RP1=0, select bank1
 10631  0495  00A9               	movwf	??_sprintf^(0+128)
 10632  0496  0829               	movf	??_sprintf^(0+128),w
 10633  0497  00C8               	movwf	sprintf@c^(0+128)
 10634  0498  2C9F               	goto	l370
 10635  0499                     l3455:
 10636                           
 10637                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (char)prec;
 10638  0499  1683               	bsf	3,5	;RP0=1, select bank1
 10639  049A  1303               	bcf	3,6	;RP1=0, select bank1
 10640  049B  0846               	movf	sprintf@prec^(0+128),w
 10641  049C  00A9               	movwf	??_sprintf^(0+128)
 10642  049D  0829               	movf	??_sprintf^(0+128),w
 10643  049E  00C8               	movwf	sprintf@c^(0+128)
 10644  049F                     l370:
 10645                           
 10646                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= (int)c;
 10647  049F  0848               	movf	sprintf@c^(0+128),w
 10648  04A0  00A9               	movwf	??_sprintf^(0+128)
 10649  04A1  01AA               	clrf	(??_sprintf^(0+128)+1)
 10650  04A2  0829               	movf	??_sprintf^(0+128),w
 10651  04A3  02C6               	subwf	sprintf@prec^(0+128),f
 10652  04A4  082A               	movf	(??_sprintf+1)^(0+128),w
 10653  04A5  1C03               	skipc
 10654  04A6  03C7               	decf	(sprintf@prec+1)^(0+128),f
 10655  04A7  02C7               	subwf	(sprintf@prec+1)^(0+128),f
 10656  04A8                     l3457:
 10657                           
 10658                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10659  04A8  0848               	movf	sprintf@c^(0+128),w
 10660  04A9  1903               	btfsc	3,2
 10661  04AA  2CAC               	goto	u5431
 10662  04AB  2CAD               	goto	u5430
 10663  04AC                     u5431:
 10664  04AC  2CB8               	goto	l3463
 10665  04AD                     u5430:
 10666  04AD                     l3459:
 10667                           
 10668                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++ = ('.')));
 10669  04AD  302E               	movlw	46
 10670  04AE  00A9               	movwf	??_sprintf^(0+128)
 10671  04AF  0845               	movf	sprintf@sp^(0+128),w
 10672  04B0  0084               	movwf	4
 10673  04B1  0829               	movf	??_sprintf^(0+128),w
 10674  04B2  1383               	bcf	3,7	;select IRP bank0
 10675  04B3  0080               	movwf	0
 10676  04B4                     l3461:
 10677  04B4  3001               	movlw	1
 10678  04B5  00A9               	movwf	??_sprintf^(0+128)
 10679  04B6  0829               	movf	??_sprintf^(0+128),w
 10680  04B7  07C5               	addwf	sprintf@sp^(0+128),f
 10681  04B8                     l3463:
 10682                           
 10683                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(
      +                          fval * scale((signed char)c));
 10684  04B8  0848               	movf	sprintf@c^(0+128),w
 10685  04B9  120A  158A  2140  120A  118A  	fcall	_scale
 10686  04BE  1283               	bcf	3,5	;RP0=0, select bank0
 10687  04BF  1303               	bcf	3,6	;RP1=0, select bank0
 10688  04C0  0841               	movf	?_scale+3,w
 10689  04C1  1683               	bsf	3,5	;RP0=1, select bank1
 10690  04C2  1303               	bcf	3,6	;RP1=0, select bank1
 10691  04C3  00B1               	movwf	(_sprintf$1220+3)^(0+128)
 10692  04C4  1283               	bcf	3,5	;RP0=0, select bank0
 10693  04C5  1303               	bcf	3,6	;RP1=0, select bank0
 10694  04C6  0840               	movf	?_scale+2,w
 10695  04C7  1683               	bsf	3,5	;RP0=1, select bank1
 10696  04C8  1303               	bcf	3,6	;RP1=0, select bank1
 10697  04C9  00B0               	movwf	(_sprintf$1220+2)^(0+128)
 10698  04CA  1283               	bcf	3,5	;RP0=0, select bank0
 10699  04CB  1303               	bcf	3,6	;RP1=0, select bank0
 10700  04CC  083F               	movf	?_scale+1,w
 10701  04CD  1683               	bsf	3,5	;RP0=1, select bank1
 10702  04CE  1303               	bcf	3,6	;RP1=0, select bank1
 10703  04CF  00AF               	movwf	(_sprintf$1220+1)^(0+128)
 10704  04D0  1283               	bcf	3,5	;RP0=0, select bank0
 10705  04D1  1303               	bcf	3,6	;RP1=0, select bank0
 10706  04D2  083E               	movf	?_scale,w
 10707  04D3  1683               	bsf	3,5	;RP0=1, select bank1
 10708  04D4  1303               	bcf	3,6	;RP1=0, select bank1
 10709  04D5  00AE               	movwf	_sprintf$1220^(0+128)
 10710  04D6                     l3465:
 10711                           
 10712                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(
      +                          fval * scale((signed char)c));
 10713  04D6  0831               	movf	(_sprintf$1220+3)^(0+128),w
 10714  04D7  1283               	bcf	3,5	;RP0=0, select bank0
 10715  04D8  1303               	bcf	3,6	;RP1=0, select bank0
 10716  04D9  00AB               	movwf	___flmul@a+3
 10717  04DA  1683               	bsf	3,5	;RP0=1, select bank1
 10718  04DB  1303               	bcf	3,6	;RP1=0, select bank1
 10719  04DC  0830               	movf	(_sprintf$1220+2)^(0+128),w
 10720  04DD  1283               	bcf	3,5	;RP0=0, select bank0
 10721  04DE  1303               	bcf	3,6	;RP1=0, select bank0
 10722  04DF  00AA               	movwf	___flmul@a+2
 10723  04E0  1683               	bsf	3,5	;RP0=1, select bank1
 10724  04E1  1303               	bcf	3,6	;RP1=0, select bank1
 10725  04E2  082F               	movf	(_sprintf$1220+1)^(0+128),w
 10726  04E3  1283               	bcf	3,5	;RP0=0, select bank0
 10727  04E4  1303               	bcf	3,6	;RP1=0, select bank0
 10728  04E5  00A9               	movwf	___flmul@a+1
 10729  04E6  1683               	bsf	3,5	;RP0=1, select bank1
 10730  04E7  1303               	bcf	3,6	;RP1=0, select bank1
 10731  04E8  082E               	movf	_sprintf$1220^(0+128),w
 10732  04E9  1283               	bcf	3,5	;RP0=0, select bank0
 10733  04EA  1303               	bcf	3,6	;RP1=0, select bank0
 10734  04EB  00A8               	movwf	___flmul@a
 10735  04EC  1683               	bsf	3,5	;RP0=1, select bank1
 10736  04ED  1303               	bcf	3,6	;RP1=0, select bank1
 10737  04EE  0844               	movf	(sprintf@fval+3)^(0+128),w
 10738  04EF  1283               	bcf	3,5	;RP0=0, select bank0
 10739  04F0  1303               	bcf	3,6	;RP1=0, select bank0
 10740  04F1  00A7               	movwf	___flmul@b+3
 10741  04F2  1683               	bsf	3,5	;RP0=1, select bank1
 10742  04F3  1303               	bcf	3,6	;RP1=0, select bank1
 10743  04F4  0843               	movf	(sprintf@fval+2)^(0+128),w
 10744  04F5  1283               	bcf	3,5	;RP0=0, select bank0
 10745  04F6  1303               	bcf	3,6	;RP1=0, select bank0
 10746  04F7  00A6               	movwf	___flmul@b+2
 10747  04F8  1683               	bsf	3,5	;RP0=1, select bank1
 10748  04F9  1303               	bcf	3,6	;RP1=0, select bank1
 10749  04FA  0842               	movf	(sprintf@fval+1)^(0+128),w
 10750  04FB  1283               	bcf	3,5	;RP0=0, select bank0
 10751  04FC  1303               	bcf	3,6	;RP1=0, select bank0
 10752  04FD  00A5               	movwf	___flmul@b+1
 10753  04FE  1683               	bsf	3,5	;RP0=1, select bank1
 10754  04FF  1303               	bcf	3,6	;RP1=0, select bank1
 10755  0500  0841               	movf	sprintf@fval^(0+128),w
 10756  0501  1283               	bcf	3,5	;RP0=0, select bank0
 10757  0502  1303               	bcf	3,6	;RP1=0, select bank0
 10758  0503  00A4               	movwf	___flmul@b
 10759  0504  120A  158A  249F  120A  118A  	fcall	___flmul
 10760  0509  1283               	bcf	3,5	;RP0=0, select bank0
 10761  050A  1303               	bcf	3,6	;RP1=0, select bank0
 10762  050B  0827               	movf	?___flmul+3,w
 10763  050C  00D4               	movwf	___fltol@f1+3
 10764  050D  0826               	movf	?___flmul+2,w
 10765  050E  00D3               	movwf	___fltol@f1+2
 10766  050F  0825               	movf	?___flmul+1,w
 10767  0510  00D2               	movwf	___fltol@f1+1
 10768  0511  0824               	movf	?___flmul,w
 10769  0512  00D1               	movwf	___fltol@f1
 10770  0513  160A  158A  254F  120A  118A  	fcall	___fltol
 10771  0518  1283               	bcf	3,5	;RP0=0, select bank0
 10772  0519  1303               	bcf	3,6	;RP1=0, select bank0
 10773  051A  0854               	movf	?___fltol+3,w
 10774  051B  1683               	bsf	3,5	;RP0=1, select bank1
 10775  051C  1303               	bcf	3,6	;RP1=0, select bank1
 10776  051D  00BE               	movwf	(sprintf@val+3)^(0+128)
 10777  051E  1283               	bcf	3,5	;RP0=0, select bank0
 10778  051F  1303               	bcf	3,6	;RP1=0, select bank0
 10779  0520  0853               	movf	?___fltol+2,w
 10780  0521  1683               	bsf	3,5	;RP0=1, select bank1
 10781  0522  1303               	bcf	3,6	;RP1=0, select bank1
 10782  0523  00BD               	movwf	(sprintf@val+2)^(0+128)
 10783  0524  1283               	bcf	3,5	;RP0=0, select bank0
 10784  0525  1303               	bcf	3,6	;RP1=0, select bank0
 10785  0526  0852               	movf	?___fltol+1,w
 10786  0527  1683               	bsf	3,5	;RP0=1, select bank1
 10787  0528  1303               	bcf	3,6	;RP1=0, select bank1
 10788  0529  00BC               	movwf	(sprintf@val+1)^(0+128)
 10789  052A  1283               	bcf	3,5	;RP0=0, select bank0
 10790  052B  1303               	bcf	3,6	;RP1=0, select bank0
 10791  052C  0851               	movf	?___fltol,w
 10792  052D  1683               	bsf	3,5	;RP0=1, select bank1
 10793  052E  1303               	bcf	3,6	;RP1=0, select bank1
 10794  052F  00BB               	movwf	sprintf@val^(0+128)
 10795                           
 10796                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
 10797  0530  2E12               	goto	l3475
 10798  0531                     l3467:
 10799                           
 10800                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.vd = val/dpowe
      +                          rs[c];
 10801  0531  0848               	movf	sprintf@c^(0+128),w
 10802  0532  00A9               	movwf	??_sprintf^(0+128)
 10803  0533  3001               	movlw	1
 10804  0534                     u5445:
 10805  0534  1003               	clrc
 10806  0535  0DA9               	rlf	??_sprintf^(0+128),f
 10807  0536  3EFF               	addlw	-1
 10808  0537  1D03               	skipz
 10809  0538  2D34               	goto	u5445
 10810  0539  1003               	clrc
 10811  053A  0D29               	rlf	??_sprintf^(0+128),w
 10812  053B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10813  053C  0084               	movwf	4
 10814  053D  120A  158A  200A  120A  118A  	fcall	stringdir
 10815  0542  00F0               	movwf	___lldiv@divisor
 10816  0543  120A  158A  200A  120A  118A  	fcall	stringdir
 10817  0548  00F1               	movwf	___lldiv@divisor+1
 10818  0549  120A  158A  200A  120A  118A  	fcall	stringdir
 10819  054E  00F2               	movwf	___lldiv@divisor+2
 10820  054F  120A  158A  200A  120A  118A  	fcall	stringdir
 10821  0554  00F3               	movwf	___lldiv@divisor+3
 10822  0555  083E               	movf	(sprintf@val+3)^(0+128),w
 10823  0556  00F7               	movwf	___lldiv@dividend+3
 10824  0557  083D               	movf	(sprintf@val+2)^(0+128),w
 10825  0558  00F6               	movwf	___lldiv@dividend+2
 10826  0559  083C               	movf	(sprintf@val+1)^(0+128),w
 10827  055A  00F5               	movwf	___lldiv@dividend+1
 10828  055B  083B               	movf	sprintf@val^(0+128),w
 10829  055C  00F4               	movwf	___lldiv@dividend
 10830  055D  160A  158A  24E9  120A  118A  	fcall	___lldiv
 10831  0562  0873               	movf	?___lldiv+3,w
 10832  0563  1683               	bsf	3,5	;RP0=1, select bank1
 10833  0564  1303               	bcf	3,6	;RP1=0, select bank1
 10834  0565  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
 10835  0566  0872               	movf	?___lldiv+2,w
 10836  0567  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 10837  0568  0871               	movf	?___lldiv+1,w
 10838  0569  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 10839  056A  0870               	movf	?___lldiv,w
 10840  056B  00B7               	movwf	sprintf@tmpval^(0+128)
 10841  056C                     l3469:
 10842                           
 10843                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.vd %= 10;
 10844  056C  3000               	movlw	0
 10845  056D  1283               	bcf	3,5	;RP0=0, select bank0
 10846  056E  1303               	bcf	3,6	;RP1=0, select bank0
 10847  056F  00A3               	movwf	___llmod@divisor+3
 10848  0570  3000               	movlw	0
 10849  0571  00A2               	movwf	___llmod@divisor+2
 10850  0572  3000               	movlw	0
 10851  0573  00A1               	movwf	___llmod@divisor+1
 10852  0574  300A               	movlw	10
 10853  0575  00A0               	movwf	___llmod@divisor
 10854  0576  1683               	bsf	3,5	;RP0=1, select bank1
 10855  0577  1303               	bcf	3,6	;RP1=0, select bank1
 10856  0578  083A               	movf	(sprintf@tmpval+3)^(0+128),w
 10857  0579  1283               	bcf	3,5	;RP0=0, select bank0
 10858  057A  1303               	bcf	3,6	;RP1=0, select bank0
 10859  057B  00A7               	movwf	___llmod@dividend+3
 10860  057C  1683               	bsf	3,5	;RP0=1, select bank1
 10861  057D  1303               	bcf	3,6	;RP1=0, select bank1
 10862  057E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
 10863  057F  1283               	bcf	3,5	;RP0=0, select bank0
 10864  0580  1303               	bcf	3,6	;RP1=0, select bank0
 10865  0581  00A6               	movwf	___llmod@dividend+2
 10866  0582  1683               	bsf	3,5	;RP0=1, select bank1
 10867  0583  1303               	bcf	3,6	;RP1=0, select bank1
 10868  0584  0838               	movf	(sprintf@tmpval+1)^(0+128),w
 10869  0585  1283               	bcf	3,5	;RP0=0, select bank0
 10870  0586  1303               	bcf	3,6	;RP1=0, select bank0
 10871  0587  00A5               	movwf	___llmod@dividend+1
 10872  0588  1683               	bsf	3,5	;RP0=1, select bank1
 10873  0589  1303               	bcf	3,6	;RP1=0, select bank1
 10874  058A  0837               	movf	sprintf@tmpval^(0+128),w
 10875  058B  1283               	bcf	3,5	;RP0=0, select bank0
 10876  058C  1303               	bcf	3,6	;RP1=0, select bank0
 10877  058D  00A4               	movwf	___llmod@dividend
 10878  058E  160A  158A  2493  120A  118A  	fcall	___llmod
 10879  0593  1283               	bcf	3,5	;RP0=0, select bank0
 10880  0594  1303               	bcf	3,6	;RP1=0, select bank0
 10881  0595  0823               	movf	?___llmod+3,w
 10882  0596  1683               	bsf	3,5	;RP0=1, select bank1
 10883  0597  1303               	bcf	3,6	;RP1=0, select bank1
 10884  0598  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
 10885  0599  1283               	bcf	3,5	;RP0=0, select bank0
 10886  059A  1303               	bcf	3,6	;RP1=0, select bank0
 10887  059B  0822               	movf	?___llmod+2,w
 10888  059C  1683               	bsf	3,5	;RP0=1, select bank1
 10889  059D  1303               	bcf	3,6	;RP1=0, select bank1
 10890  059E  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 10891  059F  1283               	bcf	3,5	;RP0=0, select bank0
 10892  05A0  1303               	bcf	3,6	;RP1=0, select bank0
 10893  05A1  0821               	movf	?___llmod+1,w
 10894  05A2  1683               	bsf	3,5	;RP0=1, select bank1
 10895  05A3  1303               	bcf	3,6	;RP1=0, select bank1
 10896  05A4  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 10897  05A5  1283               	bcf	3,5	;RP0=0, select bank0
 10898  05A6  1303               	bcf	3,6	;RP1=0, select bank0
 10899  05A7  0820               	movf	?___llmod,w
 10900  05A8  1683               	bsf	3,5	;RP0=1, select bank1
 10901  05A9  1303               	bcf	3,6	;RP1=0, select bank1
 10902  05AA  00B7               	movwf	sprintf@tmpval^(0+128)
 10903  05AB                     l3471:
 10904                           
 10905                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++ = ('0' + tmpv
      +                          al.vd)));
 10906  05AB  0837               	movf	sprintf@tmpval^(0+128),w
 10907  05AC  3E30               	addlw	48
 10908  05AD  00A9               	movwf	??_sprintf^(0+128)
 10909  05AE  0845               	movf	sprintf@sp^(0+128),w
 10910  05AF  0084               	movwf	4
 10911  05B0  0829               	movf	??_sprintf^(0+128),w
 10912  05B1  1383               	bcf	3,7	;select IRP bank0
 10913  05B2  0080               	movwf	0
 10914  05B3  3001               	movlw	1
 10915  05B4  00A9               	movwf	??_sprintf^(0+128)
 10916  05B5  0829               	movf	??_sprintf^(0+128),w
 10917  05B6  07C5               	addwf	sprintf@sp^(0+128),f
 10918  05B7                     l3473:
 10919                           
 10920                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= dpowers[c];
 10921  05B7  0848               	movf	sprintf@c^(0+128),w
 10922  05B8  00A9               	movwf	??_sprintf^(0+128)
 10923  05B9  3001               	movlw	1
 10924  05BA                     u5455:
 10925  05BA  1003               	clrc
 10926  05BB  0DA9               	rlf	??_sprintf^(0+128),f
 10927  05BC  3EFF               	addlw	-1
 10928  05BD  1D03               	skipz
 10929  05BE  2DBA               	goto	u5455
 10930  05BF  1003               	clrc
 10931  05C0  0D29               	rlf	??_sprintf^(0+128),w
 10932  05C1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10933  05C2  0084               	movwf	4
 10934  05C3  120A  158A  200A  120A  118A  	fcall	stringdir
 10935  05C8  1283               	bcf	3,5	;RP0=0, select bank0
 10936  05C9  1303               	bcf	3,6	;RP1=0, select bank0
 10937  05CA  00A0               	movwf	___llmod@divisor
 10938  05CB  120A  158A  200A  120A  118A  	fcall	stringdir
 10939  05D0  00A1               	movwf	___llmod@divisor+1
 10940  05D1  120A  158A  200A  120A  118A  	fcall	stringdir
 10941  05D6  00A2               	movwf	___llmod@divisor+2
 10942  05D7  120A  158A  200A  120A  118A  	fcall	stringdir
 10943  05DC  00A3               	movwf	___llmod@divisor+3
 10944  05DD  1683               	bsf	3,5	;RP0=1, select bank1
 10945  05DE  1303               	bcf	3,6	;RP1=0, select bank1
 10946  05DF  083E               	movf	(sprintf@val+3)^(0+128),w
 10947  05E0  1283               	bcf	3,5	;RP0=0, select bank0
 10948  05E1  1303               	bcf	3,6	;RP1=0, select bank0
 10949  05E2  00A7               	movwf	___llmod@dividend+3
 10950  05E3  1683               	bsf	3,5	;RP0=1, select bank1
 10951  05E4  1303               	bcf	3,6	;RP1=0, select bank1
 10952  05E5  083D               	movf	(sprintf@val+2)^(0+128),w
 10953  05E6  1283               	bcf	3,5	;RP0=0, select bank0
 10954  05E7  1303               	bcf	3,6	;RP1=0, select bank0
 10955  05E8  00A6               	movwf	___llmod@dividend+2
 10956  05E9  1683               	bsf	3,5	;RP0=1, select bank1
 10957  05EA  1303               	bcf	3,6	;RP1=0, select bank1
 10958  05EB  083C               	movf	(sprintf@val+1)^(0+128),w
 10959  05EC  1283               	bcf	3,5	;RP0=0, select bank0
 10960  05ED  1303               	bcf	3,6	;RP1=0, select bank0
 10961  05EE  00A5               	movwf	___llmod@dividend+1
 10962  05EF  1683               	bsf	3,5	;RP0=1, select bank1
 10963  05F0  1303               	bcf	3,6	;RP1=0, select bank1
 10964  05F1  083B               	movf	sprintf@val^(0+128),w
 10965  05F2  1283               	bcf	3,5	;RP0=0, select bank0
 10966  05F3  1303               	bcf	3,6	;RP1=0, select bank0
 10967  05F4  00A4               	movwf	___llmod@dividend
 10968  05F5  160A  158A  2493  120A  118A  	fcall	___llmod
 10969  05FA  1283               	bcf	3,5	;RP0=0, select bank0
 10970  05FB  1303               	bcf	3,6	;RP1=0, select bank0
 10971  05FC  0823               	movf	?___llmod+3,w
 10972  05FD  1683               	bsf	3,5	;RP0=1, select bank1
 10973  05FE  1303               	bcf	3,6	;RP1=0, select bank1
 10974  05FF  00BE               	movwf	(sprintf@val+3)^(0+128)
 10975  0600  1283               	bcf	3,5	;RP0=0, select bank0
 10976  0601  1303               	bcf	3,6	;RP1=0, select bank0
 10977  0602  0822               	movf	?___llmod+2,w
 10978  0603  1683               	bsf	3,5	;RP0=1, select bank1
 10979  0604  1303               	bcf	3,6	;RP1=0, select bank1
 10980  0605  00BD               	movwf	(sprintf@val+2)^(0+128)
 10981  0606  1283               	bcf	3,5	;RP0=0, select bank0
 10982  0607  1303               	bcf	3,6	;RP1=0, select bank0
 10983  0608  0821               	movf	?___llmod+1,w
 10984  0609  1683               	bsf	3,5	;RP0=1, select bank1
 10985  060A  1303               	bcf	3,6	;RP1=0, select bank1
 10986  060B  00BC               	movwf	(sprintf@val+1)^(0+128)
 10987  060C  1283               	bcf	3,5	;RP0=0, select bank0
 10988  060D  1303               	bcf	3,6	;RP1=0, select bank0
 10989  060E  0820               	movf	?___llmod,w
 10990  060F  1683               	bsf	3,5	;RP0=1, select bank1
 10991  0610  1303               	bcf	3,6	;RP1=0, select bank1
 10992  0611  00BB               	movwf	sprintf@val^(0+128)
 10993  0612                     l3475:
 10994                           
 10995                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
 10996  0612  3001               	movlw	1
 10997  0613  02C8               	subwf	sprintf@c^(0+128),f
 10998  0614  0A48               	incf	sprintf@c^(0+128),w
 10999  0615  1D03               	btfss	3,2
 11000  0616  2E18               	goto	u5461
 11001  0617  2E19               	goto	u5460
 11002  0618                     u5461:
 11003  0618  2D31               	goto	l3467
 11004  0619                     u5460:
 11005  0619  2E2B               	goto	l3483
 11006  061A                     l3477:
 11007                           
 11008                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++ = ('0')));
 11009  061A  3030               	movlw	48
 11010  061B  00A9               	movwf	??_sprintf^(0+128)
 11011  061C  0845               	movf	sprintf@sp^(0+128),w
 11012  061D  0084               	movwf	4
 11013  061E  0829               	movf	??_sprintf^(0+128),w
 11014  061F  1383               	bcf	3,7	;select IRP bank0
 11015  0620  0080               	movwf	0
 11016  0621                     l3479:
 11017  0621  3001               	movlw	1
 11018  0622  00A9               	movwf	??_sprintf^(0+128)
 11019  0623  0829               	movf	??_sprintf^(0+128),w
 11020  0624  07C5               	addwf	sprintf@sp^(0+128),f
 11021  0625                     l3481:
 11022                           
 11023                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11024  0625  30FF               	movlw	255
 11025  0626  07C6               	addwf	sprintf@prec^(0+128),f
 11026  0627  1803               	skipnc
 11027  0628  0AC7               	incf	(sprintf@prec+1)^(0+128),f
 11028  0629  30FF               	movlw	255
 11029  062A  07C7               	addwf	(sprintf@prec+1)^(0+128),f
 11030  062B                     l3483:
 11031                           
 11032                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(prec) {
 11033  062B  0846               	movf	sprintf@prec^(0+128),w
 11034  062C  0447               	iorwf	(sprintf@prec+1)^(0+128),w
 11035  062D  1D03               	btfss	3,2
 11036  062E  2E30               	goto	u5471
 11037  062F  2E31               	goto	u5470
 11038  0630                     u5471:
 11039  0630  2E1A               	goto	l3477
 11040  0631                     u5470:
 11041  0631  2FCF               	goto	l3563
 11042  0632                     l3485:
 11043                           
 11044                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned long)(*(int *)__va_arg((*(i
      +                          nt **)ap), (int)0));
 11045  0632  0832               	movf	sprintf@ap^(0+128),w
 11046  0633  0084               	movwf	4
 11047  0634  1383               	bcf	3,7	;select IRP bank0
 11048  0635  0800               	movf	0,w
 11049  0636  00A9               	movwf	??_sprintf^(0+128)
 11050  0637  0A84               	incf	4,f
 11051  0638  0800               	movf	0,w
 11052  0639  00AA               	movwf	(??_sprintf^(0+128)+1)
 11053  063A  0829               	movf	??_sprintf^(0+128),w
 11054  063B  00BB               	movwf	sprintf@val^(0+128)
 11055  063C  082A               	movf	(??_sprintf+1)^(0+128),w
 11056  063D  00BC               	movwf	(sprintf@val+1)^(0+128)
 11057  063E  3000               	movlw	0
 11058  063F  1BBC               	btfsc	(sprintf@val+1)^(0+128),7
 11059  0640  30FF               	movlw	255
 11060  0641  00BD               	movwf	(sprintf@val+2)^(0+128)
 11061  0642  00BE               	movwf	(sprintf@val+3)^(0+128)
 11062  0643                     l3487:
 11063  0643  3002               	movlw	2
 11064  0644  00A9               	movwf	??_sprintf^(0+128)
 11065  0645  0829               	movf	??_sprintf^(0+128),w
 11066  0646  07B2               	addwf	sprintf@ap^(0+128),f
 11067  0647                     l3489:
 11068                           
 11069                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long)val < 0) {
 11070  0647  1FBE               	btfss	(sprintf@val+3)^(0+128),7
 11071  0648  2E4A               	goto	u5481
 11072  0649  2E4B               	goto	u5480
 11073  064A                     u5481:
 11074  064A  2E5A               	goto	l3495
 11075  064B                     u5480:
 11076  064B                     l3491:
 11077                           
 11078                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
 11079  064B  3003               	movlw	3
 11080  064C  04B3               	iorwf	sprintf@flag^(0+128),f
 11081  064D  3000               	movlw	0
 11082  064E  04B4               	iorwf	(sprintf@flag+1)^(0+128),f
 11083  064F                     l3493:
 11084                           
 11085                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
 11086  064F  09BB               	comf	sprintf@val^(0+128),f
 11087  0650  09BC               	comf	(sprintf@val+1)^(0+128),f
 11088  0651  09BD               	comf	(sprintf@val+2)^(0+128),f
 11089  0652  09BE               	comf	(sprintf@val+3)^(0+128),f
 11090  0653  0ABB               	incf	sprintf@val^(0+128),f
 11091  0654  1903               	skipnz
 11092  0655  0ABC               	incf	(sprintf@val+1)^(0+128),f
 11093  0656  1903               	skipnz
 11094  0657  0ABD               	incf	(sprintf@val+2)^(0+128),f
 11095  0658  1903               	skipnz
 11096  0659  0ABE               	incf	(sprintf@val+3)^(0+128),f
 11097  065A                     l3495:
 11098                           
 11099                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && val == 0)
 11100  065A  0846               	movf	sprintf@prec^(0+128),w
 11101  065B  0447               	iorwf	(sprintf@prec+1)^(0+128),w
 11102  065C  1D03               	btfss	3,2
 11103  065D  2E5F               	goto	u5491
 11104  065E  2E60               	goto	u5490
 11105  065F                     u5491:
 11106  065F  2E6E               	goto	l3501
 11107  0660                     u5490:
 11108  0660                     l3497:
 11109  0660  083E               	movf	(sprintf@val+3)^(0+128),w
 11110  0661  043D               	iorwf	(sprintf@val+2)^(0+128),w
 11111  0662  043C               	iorwf	(sprintf@val+1)^(0+128),w
 11112  0663  043B               	iorwf	sprintf@val^(0+128),w
 11113  0664  1D03               	skipz
 11114  0665  2E67               	goto	u5501
 11115  0666  2E68               	goto	u5500
 11116  0667                     u5501:
 11117  0667  2E6E               	goto	l3501
 11118  0668                     u5500:
 11119  0668                     l3499:
 11120                           
 11121                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11122  0668  3001               	movlw	1
 11123  0669  07C6               	addwf	sprintf@prec^(0+128),f
 11124  066A  1803               	skipnc
 11125  066B  0AC7               	incf	(sprintf@prec+1)^(0+128),f
 11126  066C  3000               	movlw	0
 11127  066D  07C7               	addwf	(sprintf@prec+1)^(0+128),f
 11128  066E                     l3501:
 11129                           
 11130                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeo
      +                          f dpowers/sizeof dpowers[0] ; c++)
 11131  066E  01C8               	clrf	sprintf@c^(0+128)
 11132  066F  0AC8               	incf	sprintf@c^(0+128),f
 11133  0670                     l3507:
 11134                           
 11135                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowers[c])
 11136  0670  0848               	movf	sprintf@c^(0+128),w
 11137  0671  00A9               	movwf	??_sprintf^(0+128)
 11138  0672  3001               	movlw	1
 11139  0673                     u5515:
 11140  0673  1003               	clrc
 11141  0674  0DA9               	rlf	??_sprintf^(0+128),f
 11142  0675  3EFF               	addlw	-1
 11143  0676  1D03               	skipz
 11144  0677  2E73               	goto	u5515
 11145  0678  1003               	clrc
 11146  0679  0D29               	rlf	??_sprintf^(0+128),w
 11147  067A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11148  067B  0084               	movwf	4
 11149  067C  120A  158A  200A  120A  118A  	fcall	stringdir
 11150  0681  00AA               	movwf	(??_sprintf+1)^(0+128)
 11151  0682  120A  158A  200A  120A  118A  	fcall	stringdir
 11152  0687  00AB               	movwf	((??_sprintf+1)^(0+128)+1)
 11153  0688  120A  158A  200A  120A  118A  	fcall	stringdir
 11154  068D  00AC               	movwf	((??_sprintf+1)^(0+128)+2)
 11155  068E  120A  158A  200A  120A  118A  	fcall	stringdir
 11156  0693  00AD               	movwf	((??_sprintf+1)^(0+128)+3)
 11157  0694  082D               	movf	(??_sprintf+4)^(0+128),w
 11158  0695  023E               	subwf	(sprintf@val+3)^(0+128),w
 11159  0696  1D03               	skipz
 11160  0697  2EA2               	goto	u5525
 11161  0698  082C               	movf	(??_sprintf+3)^(0+128),w
 11162  0699  023D               	subwf	(sprintf@val+2)^(0+128),w
 11163  069A  1D03               	skipz
 11164  069B  2EA2               	goto	u5525
 11165  069C  082B               	movf	(??_sprintf+2)^(0+128),w
 11166  069D  023C               	subwf	(sprintf@val+1)^(0+128),w
 11167  069E  1D03               	skipz
 11168  069F  2EA2               	goto	u5525
 11169  06A0  082A               	movf	(??_sprintf+1)^(0+128),w
 11170  06A1  023B               	subwf	sprintf@val^(0+128),w
 11171  06A2                     u5525:
 11172  06A2  1803               	skipnc
 11173  06A3  2EA5               	goto	u5521
 11174  06A4  2EA6               	goto	u5520
 11175  06A5                     u5521:
 11176  06A5  2EA7               	goto	l3511
 11177  06A6                     u5520:
 11178  06A6  2EB1               	goto	l3513
 11179  06A7                     l3511:
 11180  06A7  3001               	movlw	1
 11181  06A8  00A9               	movwf	??_sprintf^(0+128)
 11182  06A9  0829               	movf	??_sprintf^(0+128),w
 11183  06AA  07C8               	addwf	sprintf@c^(0+128),f
 11184  06AB  300A               	movlw	10
 11185  06AC  0648               	xorwf	sprintf@c^(0+128),w
 11186  06AD  1D03               	btfss	3,2
 11187  06AE  2EB0               	goto	u5531
 11188  06AF  2EB1               	goto	u5530
 11189  06B0                     u5531:
 11190  06B0  2E70               	goto	l3507
 11191  06B1                     u5530:
 11192  06B1                     l3513:
 11193                           
 11194                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < prec)
 11195  06B1  0847               	movf	(sprintf@prec+1)^(0+128),w
 11196  06B2  3A80               	xorlw	128
 11197  06B3  3C80               	sublw	128
 11198  06B4  1D03               	skipz
 11199  06B5  2EB8               	goto	u5545
 11200  06B6  0846               	movf	sprintf@prec^(0+128),w
 11201  06B7  0248               	subwf	sprintf@c^(0+128),w
 11202  06B8                     u5545:
 11203  06B8  1803               	skipnc
 11204  06B9  2EBB               	goto	u5541
 11205  06BA  2EBC               	goto	u5540
 11206  06BB                     u5541:
 11207  06BB  2EC3               	goto	l3517
 11208  06BC                     u5540:
 11209  06BC                     l3515:
 11210                           
 11211                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (char)prec;
 11212  06BC  1683               	bsf	3,5	;RP0=1, select bank1
 11213  06BD  1303               	bcf	3,6	;RP1=0, select bank1
 11214  06BE  0846               	movf	sprintf@prec^(0+128),w
 11215  06BF  00A9               	movwf	??_sprintf^(0+128)
 11216  06C0  0829               	movf	??_sprintf^(0+128),w
 11217  06C1  00C8               	movwf	sprintf@c^(0+128)
 11218  06C2  2EDB               	goto	l3521
 11219  06C3                     l3517:
 11220  06C3  1683               	bsf	3,5	;RP0=1, select bank1
 11221  06C4  1303               	bcf	3,6	;RP1=0, select bank1
 11222  06C5  0847               	movf	(sprintf@prec+1)^(0+128),w
 11223  06C6  3A80               	xorlw	128
 11224  06C7  00A9               	movwf	??_sprintf^(0+128)
 11225  06C8  3080               	movlw	128
 11226  06C9  0229               	subwf	??_sprintf^(0+128),w
 11227  06CA  1D03               	skipz
 11228  06CB  2ECE               	goto	u5555
 11229  06CC  0848               	movf	sprintf@c^(0+128),w
 11230  06CD  0246               	subwf	sprintf@prec^(0+128),w
 11231  06CE                     u5555:
 11232  06CE  1803               	skipnc
 11233  06CF  2ED1               	goto	u5551
 11234  06D0  2ED2               	goto	u5550
 11235  06D1                     u5551:
 11236  06D1  2EDB               	goto	l3521
 11237  06D2                     u5550:
 11238  06D2                     l3519:
 11239                           
 11240                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c;
 11241  06D2  1683               	bsf	3,5	;RP0=1, select bank1
 11242  06D3  1303               	bcf	3,6	;RP1=0, select bank1
 11243  06D4  0848               	movf	sprintf@c^(0+128),w
 11244  06D5  00A9               	movwf	??_sprintf^(0+128)
 11245  06D6  01AA               	clrf	(??_sprintf^(0+128)+1)
 11246  06D7  0829               	movf	??_sprintf^(0+128),w
 11247  06D8  00C6               	movwf	sprintf@prec^(0+128)
 11248  06D9  082A               	movf	(??_sprintf+1)^(0+128),w
 11249  06DA  00C7               	movwf	(sprintf@prec+1)^(0+128)
 11250  06DB                     l3521:
 11251                           
 11252                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width && flag & 0x03
      +                          )
 11253  06DB  1683               	bsf	3,5	;RP0=1, select bank1
 11254  06DC  1303               	bcf	3,6	;RP1=0, select bank1
 11255  06DD  0835               	movf	sprintf@width^(0+128),w
 11256  06DE  0436               	iorwf	(sprintf@width+1)^(0+128),w
 11257  06DF  1903               	btfsc	3,2
 11258  06E0  2EE2               	goto	u5561
 11259  06E1  2EE3               	goto	u5560
 11260  06E2                     u5561:
 11261  06E2  2EF5               	goto	l3527
 11262  06E3                     u5560:
 11263  06E3                     l3523:
 11264  06E3  3003               	movlw	3
 11265  06E4  0533               	andwf	sprintf@flag^(0+128),w
 11266  06E5  00A9               	movwf	??_sprintf^(0+128)
 11267  06E6  3000               	movlw	0
 11268  06E7  0534               	andwf	(sprintf@flag+1)^(0+128),w
 11269  06E8  00AA               	movwf	(??_sprintf+1)^(0+128)
 11270  06E9  0829               	movf	??_sprintf^(0+128),w
 11271  06EA  042A               	iorwf	(??_sprintf^(0+128)+1),w
 11272  06EB  1903               	btfsc	3,2
 11273  06EC  2EEE               	goto	u5571
 11274  06ED  2EEF               	goto	u5570
 11275  06EE                     u5571:
 11276  06EE  2EF5               	goto	l3527
 11277  06EF                     u5570:
 11278  06EF                     l3525:
 11279                           
 11280                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11281  06EF  30FF               	movlw	255
 11282  06F0  07B5               	addwf	sprintf@width^(0+128),f
 11283  06F1  1803               	skipnc
 11284  06F2  0AB6               	incf	(sprintf@width+1)^(0+128),f
 11285  06F3  30FF               	movlw	255
 11286  06F4  07B6               	addwf	(sprintf@width+1)^(0+128),f
 11287  06F5                     l3527:
 11288                           
 11289                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag & 0x4000) {
 11290  06F5  1F34               	btfss	(sprintf@flag+1)^(0+128),6
 11291  06F6  2EF8               	goto	u5581
 11292  06F7  2EF9               	goto	u5580
 11293  06F8                     u5581:
 11294  06F8  2F14               	goto	l3535
 11295  06F9                     u5580:
 11296  06F9                     l3529:
 11297                           
 11298                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width > prec)
 11299  06F9  0847               	movf	(sprintf@prec+1)^(0+128),w
 11300  06FA  3A80               	xorlw	128
 11301  06FB  00A9               	movwf	??_sprintf^(0+128)
 11302  06FC  0836               	movf	(sprintf@width+1)^(0+128),w
 11303  06FD  3A80               	xorlw	128
 11304  06FE  0229               	subwf	??_sprintf^(0+128),w
 11305  06FF  1D03               	skipz
 11306  0700  2F03               	goto	u5595
 11307  0701  0835               	movf	sprintf@width^(0+128),w
 11308  0702  0246               	subwf	sprintf@prec^(0+128),w
 11309  0703                     u5595:
 11310  0703  1803               	skipnc
 11311  0704  2F06               	goto	u5591
 11312  0705  2F07               	goto	u5590
 11313  0706                     u5591:
 11314  0706  2F10               	goto	l3533
 11315  0707                     u5590:
 11316  0707                     l3531:
 11317                           
 11318                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -= prec;
 11319  0707  1683               	bsf	3,5	;RP0=1, select bank1
 11320  0708  1303               	bcf	3,6	;RP1=0, select bank1
 11321  0709  0846               	movf	sprintf@prec^(0+128),w
 11322  070A  02B5               	subwf	sprintf@width^(0+128),f
 11323  070B  0847               	movf	(sprintf@prec+1)^(0+128),w
 11324  070C  1C03               	skipc
 11325  070D  03B6               	decf	(sprintf@width+1)^(0+128),f
 11326  070E  02B6               	subwf	(sprintf@width+1)^(0+128),f
 11327  070F  2F14               	goto	l3535
 11328  0710                     l3533:
 11329                           
 11330                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width = 0;
 11331  0710  1683               	bsf	3,5	;RP0=1, select bank1
 11332  0711  1303               	bcf	3,6	;RP1=0, select bank1
 11333  0712  01B5               	clrf	sprintf@width^(0+128)
 11334  0713  01B6               	clrf	(sprintf@width+1)^(0+128)
 11335  0714                     l3535:
 11336                           
 11337                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width > c)
 11338  0714  0836               	movf	(sprintf@width+1)^(0+128),w
 11339  0715  3A80               	xorlw	128
 11340  0716  3C80               	sublw	128
 11341  0717  1D03               	skipz
 11342  0718  2F1B               	goto	u5605
 11343  0719  0835               	movf	sprintf@width^(0+128),w
 11344  071A  0248               	subwf	sprintf@c^(0+128),w
 11345  071B                     u5605:
 11346  071B  1803               	skipnc
 11347  071C  2F1E               	goto	u5601
 11348  071D  2F1F               	goto	u5600
 11349  071E                     u5601:
 11350  071E  2F2B               	goto	l3539
 11351  071F                     u5600:
 11352  071F                     l3537:
 11353                           
 11354                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -= c;
 11355  071F  1683               	bsf	3,5	;RP0=1, select bank1
 11356  0720  1303               	bcf	3,6	;RP1=0, select bank1
 11357  0721  0848               	movf	sprintf@c^(0+128),w
 11358  0722  00A9               	movwf	??_sprintf^(0+128)
 11359  0723  01AA               	clrf	(??_sprintf^(0+128)+1)
 11360  0724  0829               	movf	??_sprintf^(0+128),w
 11361  0725  02B5               	subwf	sprintf@width^(0+128),f
 11362  0726  082A               	movf	(??_sprintf+1)^(0+128),w
 11363  0727  1C03               	skipc
 11364  0728  03B6               	decf	(sprintf@width+1)^(0+128),f
 11365  0729  02B6               	subwf	(sprintf@width+1)^(0+128),f
 11366  072A  2F2F               	goto	l3541
 11367  072B                     l3539:
 11368                           
 11369                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 0;
 11370  072B  1683               	bsf	3,5	;RP0=1, select bank1
 11371  072C  1303               	bcf	3,6	;RP1=0, select bank1
 11372  072D  01B5               	clrf	sprintf@width^(0+128)
 11373  072E  01B6               	clrf	(sprintf@width+1)^(0+128)
 11374  072F                     l3541:
 11375                           
 11376                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11377  072F  0835               	movf	sprintf@width^(0+128),w
 11378  0730  0436               	iorwf	(sprintf@width+1)^(0+128),w
 11379  0731  1903               	btfsc	3,2
 11380  0732  2F34               	goto	u5611
 11381  0733  2F35               	goto	u5610
 11382  0734                     u5611:
 11383  0734  2F4C               	goto	l3549
 11384  0735                     u5610:
 11385  0735                     l3543:
 11386                           
 11387                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp++ = (' ')));
 11388  0735  3020               	movlw	32
 11389  0736  00A9               	movwf	??_sprintf^(0+128)
 11390  0737  0845               	movf	sprintf@sp^(0+128),w
 11391  0738  0084               	movwf	4
 11392  0739  0829               	movf	??_sprintf^(0+128),w
 11393  073A  1383               	bcf	3,7	;select IRP bank0
 11394  073B  0080               	movwf	0
 11395  073C                     l3545:
 11396  073C  3001               	movlw	1
 11397  073D  00A9               	movwf	??_sprintf^(0+128)
 11398  073E  0829               	movf	??_sprintf^(0+128),w
 11399  073F  07C5               	addwf	sprintf@sp^(0+128),f
 11400  0740                     l3547:
 11401  0740  30FF               	movlw	255
 11402  0741  07B5               	addwf	sprintf@width^(0+128),f
 11403  0742  1803               	skipnc
 11404  0743  0AB6               	incf	(sprintf@width+1)^(0+128),f
 11405  0744  30FF               	movlw	255
 11406  0745  07B6               	addwf	(sprintf@width+1)^(0+128),f
 11407  0746  0835               	movf	sprintf@width^(0+128),w
 11408  0747  0436               	iorwf	(sprintf@width+1)^(0+128),w
 11409  0748  1D03               	btfss	3,2
 11410  0749  2F4B               	goto	u5621
 11411  074A  2F4C               	goto	u5620
 11412  074B                     u5621:
 11413  074B  2F35               	goto	l3543
 11414  074C                     u5620:
 11415  074C                     l3549:
 11416                           
 11417                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
 11418  074C  3003               	movlw	3
 11419  074D  0533               	andwf	sprintf@flag^(0+128),w
 11420  074E  00A9               	movwf	??_sprintf^(0+128)
 11421  074F  3000               	movlw	0
 11422  0750  0534               	andwf	(sprintf@flag+1)^(0+128),w
 11423  0751  00AA               	movwf	(??_sprintf+1)^(0+128)
 11424  0752  0829               	movf	??_sprintf^(0+128),w
 11425  0753  042A               	iorwf	(??_sprintf^(0+128)+1),w
 11426  0754  1903               	btfsc	3,2
 11427  0755  2F57               	goto	u5631
 11428  0756  2F58               	goto	u5630
 11429  0757                     u5631:
 11430  0757  2FC1               	goto	l3561
 11431  0758                     u5630:
 11432  0758                     l3551:
 11433                           
 11434                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
 11435  0758  302D               	movlw	45
 11436  0759  00A9               	movwf	??_sprintf^(0+128)
 11437  075A  0845               	movf	sprintf@sp^(0+128),w
 11438  075B  0084               	movwf	4
 11439  075C  0829               	movf	??_sprintf^(0+128),w
 11440  075D  1383               	bcf	3,7	;select IRP bank0
 11441  075E  0080               	movwf	0
 11442  075F                     l3553:
 11443  075F  3001               	movlw	1
 11444  0760  00A9               	movwf	??_sprintf^(0+128)
 11445  0761  0829               	movf	??_sprintf^(0+128),w
 11446  0762  07C5               	addwf	sprintf@sp^(0+128),f
 11447  0763  2FC1               	goto	l3561
 11448  0764                     l3555:
 11449                           
 11450                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpowers[(unsigned int)prec]) % 
      +                          10 + '0';
 11451  0764  3000               	movlw	0
 11452  0765  1283               	bcf	3,5	;RP0=0, select bank0
 11453  0766  1303               	bcf	3,6	;RP1=0, select bank0
 11454  0767  00A3               	movwf	___llmod@divisor+3
 11455  0768  3000               	movlw	0
 11456  0769  00A2               	movwf	___llmod@divisor+2
 11457  076A  3000               	movlw	0
 11458  076B  00A1               	movwf	___llmod@divisor+1
 11459  076C  300A               	movlw	10
 11460  076D  00A0               	movwf	___llmod@divisor
 11461  076E  1683               	bsf	3,5	;RP0=1, select bank1
 11462  076F  1303               	bcf	3,6	;RP1=0, select bank1
 11463  0770  0846               	movf	sprintf@prec^(0+128),w
 11464  0771  00A9               	movwf	??_sprintf^(0+128)
 11465  0772  3001               	movlw	1
 11466  0773                     u5645:
 11467  0773  1003               	clrc
 11468  0774  0DA9               	rlf	??_sprintf^(0+128),f
 11469  0775  3EFF               	addlw	-1
 11470  0776  1D03               	skipz
 11471  0777  2F73               	goto	u5645
 11472  0778  1003               	clrc
 11473  0779  0D29               	rlf	??_sprintf^(0+128),w
 11474  077A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11475  077B  0084               	movwf	4
 11476  077C  120A  158A  200A  120A  118A  	fcall	stringdir
 11477  0781  00F0               	movwf	___lldiv@divisor
 11478  0782  120A  158A  200A  120A  118A  	fcall	stringdir
 11479  0787  00F1               	movwf	___lldiv@divisor+1
 11480  0788  120A  158A  200A  120A  118A  	fcall	stringdir
 11481  078D  00F2               	movwf	___lldiv@divisor+2
 11482  078E  120A  158A  200A  120A  118A  	fcall	stringdir
 11483  0793  00F3               	movwf	___lldiv@divisor+3
 11484  0794  083E               	movf	(sprintf@val+3)^(0+128),w
 11485  0795  00F7               	movwf	___lldiv@dividend+3
 11486  0796  083D               	movf	(sprintf@val+2)^(0+128),w
 11487  0797  00F6               	movwf	___lldiv@dividend+2
 11488  0798  083C               	movf	(sprintf@val+1)^(0+128),w
 11489  0799  00F5               	movwf	___lldiv@dividend+1
 11490  079A  083B               	movf	sprintf@val^(0+128),w
 11491  079B  00F4               	movwf	___lldiv@dividend
 11492  079C  160A  158A  24E9  120A  118A  	fcall	___lldiv
 11493  07A1  0873               	movf	?___lldiv+3,w
 11494  07A2  1283               	bcf	3,5	;RP0=0, select bank0
 11495  07A3  1303               	bcf	3,6	;RP1=0, select bank0
 11496  07A4  00A7               	movwf	___llmod@dividend+3
 11497  07A5  0872               	movf	?___lldiv+2,w
 11498  07A6  00A6               	movwf	___llmod@dividend+2
 11499  07A7  0871               	movf	?___lldiv+1,w
 11500  07A8  00A5               	movwf	___llmod@dividend+1
 11501  07A9  0870               	movf	?___lldiv,w
 11502  07AA  00A4               	movwf	___llmod@dividend
 11503  07AB  160A  158A  2493  120A  118A  	fcall	___llmod
 11504  07B0  1283               	bcf	3,5	;RP0=0, select bank0
 11505  07B1  1303               	bcf	3,6	;RP1=0, select bank0
 11506  07B2  0820               	movf	?___llmod,w
 11507  07B3  3E30               	addlw	48
 11508  07B4  1683               	bsf	3,5	;RP0=1, select bank1
 11509  07B5  1303               	bcf	3,6	;RP1=0, select bank1
 11510  07B6  00AA               	movwf	(??_sprintf+1)^(0+128)
 11511  07B7  082A               	movf	(??_sprintf+1)^(0+128),w
 11512  07B8  00C8               	movwf	sprintf@c^(0+128)
 11513  07B9                     l3557:
 11514                           
 11515                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
 11516  07B9  0848               	movf	sprintf@c^(0+128),w
 11517  07BA  00A9               	movwf	??_sprintf^(0+128)
 11518  07BB  0845               	movf	sprintf@sp^(0+128),w
 11519  07BC  0084               	movwf	4
 11520  07BD  0829               	movf	??_sprintf^(0+128),w
 11521  07BE  1383               	bcf	3,7	;select IRP bank0
 11522  07BF  0080               	movwf	0
 11523  07C0  2F5F               	goto	l3553
 11524  07C1                     l3561:
 11525                           
 11526                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
 11527  07C1  30FF               	movlw	255
 11528  07C2  07C6               	addwf	sprintf@prec^(0+128),f
 11529  07C3  1803               	skipnc
 11530  07C4  0AC7               	incf	(sprintf@prec+1)^(0+128),f
 11531  07C5  30FF               	movlw	255
 11532  07C6  07C7               	addwf	(sprintf@prec+1)^(0+128),f
 11533  07C7  0A46               	incf	sprintf@prec^(0+128),w
 11534  07C8  1D03               	skipz
 11535  07C9  2FCE               	goto	u5651
 11536  07CA  0A47               	incf	(sprintf@prec+1)^(0+128),w
 11537  07CB  1D03               	btfss	3,2
 11538  07CC  2FCE               	goto	u5651
 11539  07CD  2FCF               	goto	u5650
 11540  07CE                     u5651:
 11541  07CE  2F64               	goto	l3555
 11542  07CF                     u5650:
 11543  07CF                     l3563:
 11544                           
 11545                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
 11546  07CF  3001               	movlw	1
 11547  07D0  07A0               	addwf	sprintf@f^(0+128),f
 11548  07D1  30FF               	movlw	-1
 11549  07D2  0720               	addwf	sprintf@f^(0+128),w
 11550  07D3  0084               	movwf	4
 11551  07D4  120A  158A  200A  120A  118A  	fcall	stringdir
 11552  07D9  00A9               	movwf	??_sprintf^(0+128)
 11553  07DA  0829               	movf	??_sprintf^(0+128),w
 11554  07DB  00C8               	movwf	sprintf@c^(0+128)
 11555  07DC  0848               	movf	sprintf@c^(0+128),w
 11556  07DD  1D03               	btfss	3,2
 11557  07DE  2FE0               	goto	u5661
 11558  07DF  2FE3               	goto	u5660
 11559  07E0                     u5661:
 11560  07E0  160A  118A  2D48   	goto	l3283
 11561  07E3                     u5660:
 11562  07E3                     l3565:
 11563                           
 11564                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11565  07E3  0845               	movf	sprintf@sp^(0+128),w
 11566  07E4  0084               	movwf	4
 11567  07E5  1383               	bcf	3,7	;select IRP bank0
 11568  07E6  0180               	clrf	0
 11569  07E7                     l400:
 11570  07E7  0008               	return
 11571  07E8                     __end_of_sprintf:

Data Sizes:
    Strings     51
    Constant    144
    Data        1
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      79
    BANK1            80     46      73
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> pantalla(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    USART_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> pantalla(BANK1[20]), STR_1(CODE[18]), 

    LCD_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[16]), pantalla(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _setup->_spiInit
    _USART_Write_String->_USART_Write
    _LCD_clear->_LCD_Command
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Command
    _LCD_Init->_LCD_Command
    _LCD_Command->_LCD_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   38617
                                             41 BANK1      5     5      0
                       _Init_Receive
                      _Init_Transmit
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                          _LCD_clear
                      _Set_Baud_Rate
                        _USART_Write
                 _USART_Write_String
                            ___flmul
                           ___xxtofl
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             46    37      9   32204
                                              0 BANK1     41    32      9
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _USART_Write_String                                   4     2      2     264
                                              1 COMMON     4     2      2
                        _USART_Write
 ---------------------------------------------------------------------------------
 (2) _USART_Write                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Set_Baud_Rate                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            0     0      0      44
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2     286
                                              3 COMMON     7     5      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     330
                                              4 COMMON     4     3      1
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                        _LCD_Command
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_Transmit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Receive                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Receive
   _Init_Transmit
   _LCD_Init
     _LCD_Command
       _LCD_Port
     _LCD_Port
   _LCD_Set_Cursor
     _LCD_Command
       _LCD_Port
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _LCD_clear
     _LCD_Command
       _LCD_Port
   _Set_Baud_Rate
   _USART_Write
   _USART_Write_String
     _USART_Write
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     2E      49       7       91.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A6      12        0.0%
ABS                  0      0      A6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 19:26:15 2021

     __size_of_Init_Transmit 000E                            pc 0002                 ?_LCD_Command 0070  
                _SSPSTATbits 0094                           l20 19AB                           l23 19B1  
                         l16 1A16                           l17 1A1B                           l34 1008  
                         l26 19AA                           _V1 00CE                 ___awdiv@sign 0021  
                         fsr 0004          ___wmul@multiplicand 0072          __Umul8_16@word_mpld 0076  
                        l113 1A53                          l132 1A76                          l301 12B5  
                        l126 1A34                          l150 1BB1                          l135 19E5  
                        l144 1A9A                          l400 07E7                          l129 19A4  
                        l138 1C92                          l330 1605                          l404 1ACB  
                        l308 0C9E                          l181 19B9                          l406 1AE3  
                        l175 199E                          _ADC 00D3                          l184 19CE  
                        l440 1D4E                          l193 1B35                          l178 19F3  
                        l370 049F                          l187 19D8                          l603 19CC  
                        l363 045B                          l621 1F41                          l614 1DB5  
                        l622 1EB3                          l710 1BF5                          l607 1DCA  
                        l632 1F34                          l720 1B6F                          l617 1DCA  
                        l625 1F04                          l570 005E                          l731 1319  
                        l660 1CE8                          l557 093F                          l590 1C12  
                        l574 1FFF                          l591 1C2E                          l735 13C0  
                        l575 1F64                          l592 1C43                          l752 148B  
                        l744 153D                          l737 1397                          l585 1FF2  
                        l833 0F6B                          l762 14D1                          l578 1FC2  
                        l595 1025                          l827 0FFF                          l756 14AF  
                        l773 1531                          l765 150F                          l598 1091  
                        l774 153D                          l846 1AF8                          l599 10AA  
                        l871 1DED                          l839 0FF3                          l848 1B0A  
                        l777 1ABE                          l873 1E84                          l891 1A05  
                        l884 1E4E                          l885 1E5A                          l877 1E32  
                        _RE0 0048                          _RE1 0049                          fsr0 0004  
                        indf 0000                 ___awmod@sign 0076                 ___flmul@aexp 0036  
               ___flmul@bexp 0037                 ___flmul@sign 0031                 ___flmul@temp 003C  
               ___flmul@prod 0038               _LCD_Set_Cursor 1A77                 ___fltol@exp1 005B  
                       l3011 1F89                         l3003 1F65                         l3101 1045  
                       l3021 1FBC                         l3013 1F92                         l3005 1F6D  
                       l3103 1069                         l3023 1FC6                         l3031 1FE0  
                       l3015 1FA4                         l3007 1F7E                         l3105 106D  
                       l3113 19C2                         l3121 1D4F                         l3201 1E17  
                       l3017 1FB2                         l3009 1F80                         l2401 0931  
                       l3107 10A7                         l3115 19CA                         l3131 1D7B  
                       l3123 1D5C                         l3051 1AD9                         l3043 1ABF  
                       l3211 1E48                         l3203 1E1B                         l3019 1FB3  
                       l2403 0936                         l2411 0007                         l3109 10A9  
                       l3117 19CC                         l2501 12C7                         l3133 1D83  
                       l3061 1CFC                         l3053 1ADF                         l3045 1AC1  
                       l3221 1E7B                         l3213 1E52                         l3205 1E29  
                       l3037 1FE7                         l3029 1FCE                         l2405 093B  
                       l2421 001B                         l2413 000B                         l3301 159E  
                       l3231 1005                         l2511 12DB                         l2503 12C8  
                       l3151 1DAA                         l3143 1D91                         l3135 1D85  
                       l3127 1D65                         l3071 1D36                         l3063 1D09  
                       l3047 1AC5                         l3223 1E7C                         l3215 1E5C  
                       l3207 1E39                         l3039 1FF7                         l2351 1AE7  
                       l2431 0033                         l2423 0021                         l2415 0010  
                       l3311 15C4                         l3303 15AE                         l3241 1A3D  
                       l3081 1BF6                         l2601 13E9                         l2521 12F1  
                       l2505 12CD                         l2513 12DD                         l3153 1DBA  
                       l3137 1D89                         l3145 1DA3                         l3129 1D7A  
                       l3073 1D37                         l3065 1D0D                         l3057 1CE9  
                       l3161 1CA0                         l3049 1AD2                         l3217 1E72  
                       l3209 1E44                         l2353 1AEE                         l2441 0055  
                       l2433 003D                         l2425 0024                         l2417 0012  
                       l2409 0006                         l3401 0327                         l3321 1603  
                       l3313 15D9                         l3305 15BC                         l2363 19A0  
                       l3251 1A4A                         l3243 1A3E                         l3235 1A35  
                       l3227 19A6                         l3083 1C0A                         l2611 1400  
                       l2603 13ED                         l2531 1306                         l2523 12F7  
                       l2515 12E5                         l2507 12D2                         l3155 1DBF  
                       l3075 1D40                         l3067 1D16                         l3059 1CF9  
                       l3171 1CDA                         l3163 1CAD                         l3219 1E77  
                       l2355 1AF2                         l2451 1BBA                         l2371 08E3  
                       l2443 005A                         l2435 0043                         l2427 002B  
                       l2419 0016                         l3403 0329                         l3331 163B  
                       l3315 15EC                         l3307 15BD                         l3261 1C65  
                       l3253 1C44                         l3245 1A47                         l3237 1A39  
                       l3229 1000                         l3085 1C26                         l3093 1009  
                       l2621 1463                         l2613 1401                         l2605 13F1  
                       l2541 1323                         l2533 130E                         l2525 12FB  
                       l2517 12EA                         l2509 12DA                         l3069 1D28  
                       l3077 1D46                         l3165 1CB1                         l3173 1CE0  
                       l3157 1C93                         l2357 1B01                         l2349 1AE5  
                       l2701 0CBB                         l2461 1BDD                         l2453 1BBD  
                       l2381 08F4                         l2373 08E5                         l2365 08D7  
                       l2437 004A                         l2429 002F                         l3501 066E  
                       l3421 0399                         l3413 0362                         l3341 1683  
                       l3333 163F                         l3325 1607                         l3317 15F0  
                       l3309 15C1                         l3271 19B2                         l3263 1C6B  
                       l3255 1C48                         l3247 1A48                         l3239 1A3C  
                       l3087 1C40                         l3095 101D                         l2631 1498  
                       l2623 1469                         l2615 140A                         l2607 13FA  
                       l2551 1337                         l2543 1327                         l2535 130F  
                       l2527 12FC                         l2519 12F0                         l3167 1CC3  
                       l3159 1C9D                         l3191 1DF5                         l3183 1DCC  
                       l2359 1B06                         l2711 0CD8                         l2703 0CC3  
                       l2463 1BE3                         l2455 1BC4                         l2447 1BB2  
                       l2391 090C                         l2383 08FA                         l2375 08E9  
                       l2367 08DA                         l2439 0050                         l3511 06A7  
                       l3431 03BB                         l3423 03A0                         l3415 036C  
                       l3351 16B5                         l3343 1687                         l3335 164D  
                       l3327 1629                         l3319 1601                         l3257 1C4E  
                       l3265 19D9                         l3273 1B0B                         l3249 1A49  
                       l3089 1C42                         l3097 1039                         l2641 14B3  
                       l2625 146E                         l2609 13FC                         l2617 140F  
                       l2561 134B                         l2553 133B                         l2545 132B  
                       l2529 1301                         l2537 1311                         l3177 1A9B  
                       l3169 1CD1                         l3185 1DD1                         l2801 0F83  
                       l2721 0CEF                         l2713 0CDC                         l2705 0CC5  
                       l2465 1BE4                         l2457 1BC8                         l2449 1BB4  
                       l2481 1B4A                         l2473 1B36                         l2393 091D  
                       l2385 08FD                         l2377 08EE                         l2369 08DE  
                       l3521 06DB                         l3513 06B1                         l3441 044F  
                       l3433 03C9                         l3425 03A9                         l3417 0387  
                       l3409 032B                         l3361 1704                         l3353 16C8  
                       l3345 168B                         l3337 1651                         l3329 1637  
                       l3281 1541                         l3601 007D                         l3259 1C57  
                       l3267 199A                         l3275 1B0D                         l3099 1041  
                       l2643 14B6                         l2635 14A1                         l2619 1425  
                       l2627 147D                         l2651 14C3                         l2571 135F  
                       l2563 134F                         l2555 133F                         l2547 132F  
                       l2539 131F                         l3179 1A9F                         l3195 1DFE  
                       l3187 1DD5                         l2811 0FBE                         l2803 0F87  
                       l2723 0CF1                         l2715 0CDD                         l2707 0CCD  
                       l2467 1BEB                         l2459 1BCC                         l2483 1B4E  
                       l2475 1B3C                         l2491 1B6B                         l2395 0923  
                       l2387 0904                         l2379 08F2                         l3531 0707  
                       l3523 06E3                         l3515 06BC                         l3507 0670  
                       l3451 0483                         l3443 0463                         l3435 03D0  
                       l3419 038D                         l3363 174F                         l3355 16DB  
                       l3347 16A4                         l3371 1794                         l3339 166A  
                       l3291 155E                         l3283 1548                         l3611 00F8  
                       l3603 0086                         l3269 19E6                         l3277 1B1E  
                       l2661 14D6                         l2653 14C4                         l2645 14B8  
                       l2637 14AA                         l2629 1493                         l2581 13A4  
                       l2565 1353                         l2557 1343                         l2549 1333  
                       l2573 1363                         l3197 1E03                         l3189 1DE5  
                       l2821 0FEB                         l2813 0FCD                         l2805 0FA0  
                       l2741 0D62                         l2733 0D0C                         l2725 0CF9  
                       l2717 0CE2                         l2709 0CD2                         l2469 1BF1  
                       l2485 1B58                         l2477 1B3F                         l2397 0924  
                       l2389 0908                         l2901 0A3F                         l3541 072F  
                       l3533 0710                         l3525 06EF                         l3517 06C3  
                       l3461 04B4                         l3453 0492                         l3445 046C  
                       l3437 03D5                         l3429 03AE                         l3381 0224  
                       l3373 17A3                         l3365 1768                         l3357 16DF  
                       l3349 16AF                         l3701 161B                         l3293 156E  
                       l3285 154E                         l3621 011A                         l3613 0101  
                       l3605 008C                         l3279 1B22                         l2831 1A0E  
                       l2671 1514                         l2663 14DB                         l2655 14C8  
                       l2647 14BD                         l2639 14AE                         l2583 13A6  
                       l2591 13B8                         l2575 1364                         l2567 1357  
                       l2559 1347                         l2495 12B6                         l3199 1E10  
                       l2823 0FEC                         l2815 0FD7                         l2807 0FA6  
                       l2751 0DDF                         l2743 0D8E                         l2735 0D1C  
                       l2727 0CFE                         l2719 0CE7                         l2487 1B5E  
                       l2479 1B46                         l2399 092B                         l2911 0AFB  
                       l3551 0758                         l3543 0735                         l3535 0714  
                       l3527 06F5                         l3519 06D2                         l3471 05AB  
                       l3463 04B8                         l3455 0499                         l3447 0470  
                       l3439 0410                         l3391 027D                         l3383 0233  
                       l3375 17EA                         l3367 1771                         l3359 16E5  
                       l3295 1572                         l3287 1555                         l3631 0145  
                       l3623 0123                         l3615 0107                         l3607 0092  
                       l2841 19CE                         l2833 1A10                         l2681 152B  
                       l2673 1519                         l2665 14E9                         l2657 14CE  
                       l2649 14BF                         l2593 13C4                         l2585 13AA  
                       l2577 137B                         l2569 135B                         l2497 12BD  
                       l2825 0FF7                         l2817 0FD9                         l2809 0FB3  
                       l2761 0E5F                         l2753 0DFC                         l2745 0DAA  
                       l2737 0D29                         l2729 0D03                         l2489 1B65  
                       l2905 0AC7                         l3553 075F                         l3561 07C1  
                       l3545 073C                         l3537 071F                         l3529 06F9  
                       l3481 0625                         l3473 05B7                         l3465 04D6  
                       l3457 04A8                         l3449 0476                         l3385 024E  
                       l3377 01E2                         l3369 178C                         l3297 1587  
                       l3289 155A                         l3641 016C                         l3633 014F  
                       l3625 012B                         l3617 010D                         l3609 00D8  
                       l2851 1A29                         l2843 19D4                         l2835 1A12  
                       l2683 152D                         l2675 1521                         l2667 14ED  
                       l2595 13C9                         l2587 13AB                         l2579 139B  
                       l2499 12C3                         l2819 0FE7                         l2771 0F17  
                       l2763 0E8C                         l2755 0E0C                         l2747 0DC6  
                       l2739 0D46                         l2691 0CA6                         l2931 19FC  
                       l2923 0C72                         l3555 0764                         l3547 0740  
                       l3539 072B                         l3491 064B                         l3483 062B  
                       l3467 0531                         l3475 0612                         l3459 04AD  
                       l3395 029C                         l3387 0257                         l3379 01FD  
                       l3299 159A                         l3563 07CF                         l3651 0193  
                       l3643 0176                         l3635 0155                         l3627 0134  
                       l3619 0112                         l2861 1A5E                         l3581 1A89  
                       l2853 1A2D                         l2845 1A1D                         l2837 1A15  
                       l2829 1A07                         l2685 1538                         l2677 1526  
                       l2669 150B                         l2589 13B4                         l2941 1E98  
                       l2781 0F3C                         l2773 0F20                         l2765 0E9C  
                       l2757 0E29                         l2749 0DCF                         l2693 0CAC  
                       l2933 1A02                         l2917 0BE3                         l2909 0AF4  
                       l3557 07B9                         l3549 074C                         l3493 064F  
                       l3477 061A                         l3469 056C                         l3389 025F  
                       l3397 02A5                         l3485 0632                         l3565 07E3  
                       l3661 01B7                         l3653 019D                         l3645 0179  
                       l3637 015F                         l3629 0142                         l2863 1A61  
                       l3583 1A8F                         l3575 1A78                         l2855 1A30  
                       l2847 1A20                         l3591 1B8F                         l2839 19AB  
                       l2687 153C                         l2679 1527                         l2599 13D2  
                       l2951 1EB4                         l2791 0F54                         l2783 0F45  
                       l2775 0F2E                         l2767 0EC9                         l2759 0E42  
                       l2695 0CB0                         l2871 10B4                         l2935 1A04  
                       l2927 19F5                         l2919 0BEA                         l3495 065A  
                       l3487 0643                         l3479 0621                         l3399 02DA  
                       l3663 01BD                         l3655 01A0                         l3647 0183  
                       l3639 0169                         l2865 1A6A                         l2857 1A55  
                       l3585 1A94                         l3577 1A7D                         l2849 1A26  
                       l3593 1B95                         l2961 1EDD                         l2953 1EBA  
                       l2945 1EA1                         l2793 0F68                         l2777 0F37  
                       l2785 0F4B                         l2769 0EEF                         l2697 0CB1  
                       l2689 0C9F                         l2929 19F6                         l3497 0660  
                       l3489 0647                         l3665 01C7                         l3657 01AA  
                       l3649 0189                         l2867 1A6D                         l2859 1A58  
                       l3579 1A82                         l3587 1B70                         l2971 1F08  
                       l2963 1EEB                         l2955 1EC9                         l2939 1E85  
                       l2787 0F4F                         l2779 0F3B                         l2699 0CB6  
                       l2883 1272                         l2891 0949                         l3499 0668  
                       l3667 01D1                         l3659 01AD                         l3595 005F  
                       l3589 1B73                         l2965 1EF5                         l2957 1ECB  
                       l2797 0F70                         l2789 0F50                         l2877 11C1  
                       l2869 10AE                         l2893 0950                         l3669 01D4  
                       l3597 0073                         l2991 1F42                         l2967 1EF6  
                       l2959 1ED4                         l2799 0F75                         l2879 11C7  
                       l2887 0943                         l3599 0078                         l2993 1F4F  
                       l2985 1F29                         l2977 1F10                         l2969 1EFE  
                       l2889 0947                         l2987 1F39                         l2979 1F22  
                       l2899 0A38                         l2997 1F58                         STR_1 08A0  
                       STR_2 08B2                         STR_3 08C3                         _CONT 00D2  
                       u3000 000B                         u3001 000A                         u3010 0016  
                       u3011 0015                         u3020 0021                         u3021 0020  
                       u3110 1BCC                         u3111 1BCB                         u4000 0F87  
                       u3040 0033                         u4001 0F86                         u3105 1BBE  
                       u3041 0032                         u4010 0F96                         u3130 1BDD  
                       u3210 1B6B                         u3050 003D                         u3131 1BDC  
                       u3211 1B6A                         u3051 003C                         u3035 0025  
                       u3300 1323                         u3220 12C7                         u4020 0FB3  
                       u3301 1322                         u3221 12C6                         u4021 0FB2  
                       u3125 1BCD                         u3205 1B5F                         u3310 137B  
                       u3230 12CD                         u4030 0FCD                         u3150 1BF1  
                       u3070 0050                         u3311 137A                         u3231 12CC  
                       u4031 0FCC                         u4015 0F91                         u3151 1BF0  
                       u3135 1BD9                         u3071 004F                         u3055 0039  
                       u3320 1386                         u3240 12D2                         u5000 1DD5  
                       u4040 0FEB                         u3160 1B3C                         u4120 11C7  
                       u3080 0055                         u3401 13DB                         u3321 1384  
                       u3241 12D1                         u5001 1DD4                         u4041 0FEA  
                       u4025 0FAF                         u3145 1BE5                         u3161 1B3B  
                       u4121 11C6                         u4105 112B                         u3081 0054  
                       u3065 0044                         u4050 1A0E                         u3410 13ED  
                       u3402 13E2                         u3330 1387                         u3250 12F0  
                       u5010 1DF5                         u3090 1BBA                         u4210 0A3F  
                       u4051 1A0D                         u3411 13EC                         u3403 13E9  
                       u3315 1377                         u3251 12EF                         u5011 1DF4  
                       u4035 0FC9                         u3091 1BB9                         u4115 1180  
                       u4211 0A3E                         u4060 19B1                         u3500 1498  
                       u3420 13F1                         u3340 139B                         u3260 12FB  
                       u5100 1E67                         u3180 1B4E                         u4061 19B0  
                       u3501 1497                         u3421 13F0                         u3341 139A  
                       u3261 12FA                         u3181 1B4D                         u4205 09F7  
                       u4070 19D4                         u3430 1400                         u3350 13AA  
                       u3270 1301                         u5110 1E77                         u5030 1E16  
                       u3190 1B58                         u4071 19D3                         u3431 13FF  
                       u3351 13A9                         u3271 1300                         u5111 1E76  
                       u5031 1E15                         u3191 1B57                         u3175 1B40  
                       u4135 11E4                         u3600 14ED                         u3520 14AE  
                       u3280 1306                         u5120 1E7B                         u4400 1F04  
                       u4080 10B4                         u4160 0947                         u5200 163B  
                       u3601 14EC                         u3521 14AD                         u3281 1305  
                       u5121 1E7A                         u5105 1E62                         u5025 1E08  
                       u4401 1F03                         u4145 1231                         u4081 10B3  
                       u4305 0BFD                         u4225 0A52                         u4161 0946  
                       u5201 163A                         u5130 1B35                         u3610 14FC  
                       u3530 14B3                         u3450 1425                         u3370 13C0  
                       u3290 131F                         u5050 1E38                         u4410 1F08  
                       u4330 19FC                         u4250 0AFB                         u4170 0950  
                       u5210 166A                         u5131 1B34                         u3531 14B2  
                       u3515 14A3                         u3451 1424                         u3371 13BF  
                       u3291 131E                         u5051 1E37                         u4411 1F07  
                       u3195 1B54                         u4155 127D                         u4331 19FB  
                       u4315 0C39                         u4251 0AFA                         u4235 0A8E  
                       u4171 094F                         u5211 1669                         u3620 150B  
                       u3540 14BD                         u3380 13C4                         u4420 1F0F  
                       u3700 0CBB                         u4340 1A02                         u2900 08DE  
                       u5300 0233                         u5220 16A4                         u5140 154E  
                       u3621 150A                         u3541 14BC                         u3461 143C  
                       u3453 1421                         u3445 1403                         u3381 13C3  
                       u3365 13AD                         u5045 1E2A                         u4421 1F0E  
                       u3701 0CBA                         u4341 1A01                         u2901 08DD  
                       u4325 0C75                         u4245 0ACA                         u5301 0232  
                       u5221 16A3                         u5141 154D                         u3630 1514  
                       u3550 14C3                         u3470 1450                         u3462 143D  
                       u3390 13C9                         u5070 1E48                         u4510 1FA4  
                       u4350 1E98                         u3710 0CDC                         u2910 08E9  
                       u5310 024E                         u5230 16DF                         u5150 156E  
                       u3631 1513                         u3615 14F7                         u3551 14C2  
                       u3471 1451                         u3463 1442                         u3391 13C8  
                       u5071 1E47                         u4511 1FA3                         u4351 1E97  
                       u3711 0CDB                         u4095 10D1                         u2911 08E8  
                       u5311 024D                         u5231 16DE                         u5151 156D  
                       u3640 1519                         u3560 14C8                         u3480 146E  
                       u3472 1456                         u3464 1443                         u5080 1E4E  
                       u4600 1FF7                         u4440 1F21                         u4360 1EB2  
                       u3720 0CE2                         u2920 08FA                         u5400 0462  
                       u5240 1768                         u5160 15AE                         u3641 1518  
                       u3561 14C7                         u3481 146D                         u3473 1457  
                       u3465 1448                         u5081 1E4D                         u5065 1E3D  
                       u4601 1FF6                         u4505 1F8B                         u4441 1F20  
                       u4361 1EB1                         u3721 0CE1                         u2921 08F9  
                       u4265 0B1B                         u4185 0970                         u5401 0461  
                       u5305 022F                         u5241 1767                         u5161 15AD  
                       u3650 1526                         u3570 14CE                         u3490 1493  
                       u3466 1449                         u4610 1AC5                         u5090 1E52  
                       u4530 1FC2                         u4450 1F28                         u3730 0CE7  
                       u4290 0BEA                         u5410 0483                         u5330 0361  
                       u5250 178C                         u5170 15BC                         u3651 1525  
                       u3571 14CD                         u3491 1492                         u4611 1AC4  
                       u5091 1E51                         u4531 1FC1                         u4515 1FA0  
                       u4451 1F27                         u4435 1F11                         u3811 0DEE  
                       u3731 0CE6                         u4291 0BE9                         u4275 0B57  
                       u4195 09AC                         u5411 0482                         u5331 0360  
                       u5251 178B                         u5171 15BB                         u3660 152B  
                       u3580 14D5                         u4540 1FC6                         u4380 1EEB  
                       u3812 0DF5                         u3740 0CFE                         u2940 090C  
                       u5500 0668                         u5420 0492                         u5340 036C  
                       u5260 17A3                         u5180 1600                         u3661 152A  
                       u3581 14D4                         u4541 1FC5                         u4525 1FB5  
                       u4381 1EEA                         u3901 0F09                         u3821 0E1B  
                       u3813 0DFC                         u3805 0DC8                         u3741 0CFD  
                       u2941 090B                         u4285 0BA2                         u5501 0667  
                       u5421 0491                         u5341 036B                         u5325 032E  
                       u5261 17A2                         u5181 15FF                         u3670 153C  
                       u3590 14DB                         u4710 1D46                         u4550 1FCD  
                       u4470 1F39                         u2870 1AF2                         u3902 0F10  
                       u3822 0E22                         u3750 0D03                         u5430 04AD  
                       u5350 0387                         u5270 01E2                         u5190 1637  
                       u3671 153B                         u3591 14DA                         u4711 1D45  
                       u4551 1FCC                         u4471 1F38                         u4375 1ED6  
                       u2871 1AF1                         u3903 0F17                         u3823 0E29  
                       u3751 0D02                         u2935 08FE                         u5431 04AC  
                       u5415 047F                         u5351 0386                         u5335 035D  
                       u5271 17FA                         u5191 1634                         u4720 1C0A  
                       u4640 1ADF                         u4480 1F4F                         u3680 0CB0  
                       u2960 091D                         u5600 071F                         u5520 06A6  
                       u5360 0399                         u5280 01FD                         u4721 1C09  
                       u4801 107C                         u4705 1D38                         u4641 1ADE  
                       u4625 1ACC                         u4481 1F4E                         u4465 1F2B  
                       u4385 1EE7                         u3841 0E51                         u3761 0D54  
                       u3681 0CAF                         u2961 091C                         u5601 071E  
                       u5521 06A5                         u5425 048E                         u5361 0398  
                       u5281 01FC                         u5265 179F                         u4730 1C26  
                       u4810 10A7                         u4802 107D                         u4650 1CF9  
                       u4570 1FDF                         u4490 1F63                         u2890 1B06  
                       u3930 0F3B                         u3842 0E58                         u3762 0D5B  
                       u3690 0CB6                         u5610 0735                         u5530 06B1  
                       u5370 03BB                         u5290 0224                         u4731 1C25  
                       u4811 10A6                         u4803 1082                         u4651 1CF8  
                       u4635 1AD3                         u4571 1FDE                         u4491 1F62  
                       u4395 1EF7                         u2891 1B05                         u3931 0F3A  
                       u3915 0F19                         u3851 0E7E                         u3843 0E5F  
                       u3835 0E2B                         u3771 0D70                         u3763 0D62  
                       u3691 0CB5                         u2955 090D                         u5611 0734  
                       u5531 06B0                         u5515 0673                         u5371 03BA  
                       u5291 0223                         u5275 17F5                         u5700 1B9F  
                       u4740 1C40                         u4804 1083                         u4820 19CA  
                       u4580 1FE6                         u3852 0E85                         u3772 0D77  
                       u2980 0931                         u5620 074C                         u5540 06BC  
                       u5460 0619                         u5380 03C9                         _RCIF 0065  
                       u4741 1C3F                         u4805 1088                         u4821 19C9  
                       u4581 1FE5                         u4565 1FCF                         u2885 1AF9  
                       u3925 0F30                         u3861 0EAB                         u3853 0E8C  
                       u3781 0D9C                         u3773 0D7E                         u2981 0930  
                       u2965 0919                         u5621 074B                         u5605 071B  
                       u5541 06BB                         u5525 06A2                         u5461 0618  
                       u5445 0534                         u5381 03C8                         u5710 1BB1  
                       u4806 1089                         u4750 101D                         u4910 1DBA  
                       u4830 1D5C                         u4670 1D0D                         u3950 0F4F  
                       u3870 0ED5                         u3862 0EB2                         u3782 0DA3  
                       u2990 0936                         u5630 0758                         u5550 06D2  
                       u5470 0631                         u5711 1BB0                         u4815 10A3  
                       u4751 101C                         u4911 1DB9                         u4831 1D5B  
                       u4671 1D0C                         u3951 0F4E                         u3863 0EB9  
                       u3791 0DB8                         u3783 0DAA                         u2991 0935  
                       u2975 0925                         u5631 0757                         u5551 06D1  
                       u5471 0630                         u5455 05BA                         u5375 03B7  
                       u4760 1039                         u4920 1DBF                         u4840 1D73  
                       u3960 0F54                         u3792 0DBF                         u5560 06E3  
                       u5480 064B                         u4745 1C3C                         u4761 1038  
                       u4921 1DBE                         u4905 1DAC                         u4665 1CFE  
                       u3961 0F53                         u3945 0F3E                         u3881 0EE1  
                       u3793 0DC6                         u5561 06E2                         u5545 06B8  
                       u5481 064A                         u4770 1045                         u4850 1D89  
                       u4690 1D28                         u4930 1C9D                         u3970 0F68  
                       u3890 0EFD                         u3882 0EE8                         u5650 07CF  
                       u5570 06EF                         u5490 0660                         u4771 1044  
                       u4851 1D88                         u4691 1D27                         u4931 1C9C  
                       u4595 1FE9                         u3971 0F67                         u3883 0EEF  
                       u3875 0ED0                         u5651 07CE                         u5571 06EE  
                       u5555 06CE                         u5491 065F                         u5395 03D8  
                       u4860 1D90                         u3980 0F6F                         u5660 07E3  
                       u5580 06F9                         u4781 1054                         u4861 1D8F  
                       u4845 1D6E                         u4685 1D0F                         u3981 0F6E  
                       u5661 07E0                         u5645 0773                         u5581 06F8  
                       u5670 1A7D                         u4790 106D                         u4782 1055  
                       u4950 1CB1                         u3990 0F75                         u5590 0707  
                       u5671 1A7C                         u4791 106C                         u4783 105A  
                       u4695 1D24                         u4951 1CB0                         u3991 0F74  
                       u3895 0EF8                         u5591 0706                         u5807 01CD  
                       u5727 013C                         u5680 1A8F                         u4784 105B  
                       u4880 1DA2                         u4960 1CC3                         u5681 1A8E  
                       u4785 1060                         u4881 1DA1                         u4961 1CC2  
                       u4945 1CA2                         u5817 01DA                         u5737 014B  
                       u5690 1B7D                         u4786 1061                         u4890 1DA9  
                       u5827 1A2B                         u4891 1DA8                         u4875 1D92  
                       u5595 0703                         u5747 0165                         u4980 1CE0  
                       u5837 1A32                         u4981 1CDF                         u4965 1CBF  
                       u5757 0172                         u4990 1DD1                         u5847 1C52  
                       u4975 1CD2                         u4991 1DD0                         u5767 017F  
                       u5857 1C61                         u5777 0199                         u5867 1C6F  
                       u5787 01A6                         u5877 1A65                         u5797 01B3  
                       u5887 1A71                         _TEMP 00E8                         _TRMT 04C1  
          ?_LCD_Write_String 0073  __size_of_USART_Write_String 002B                         _main 005F  
                       btemp 007E                         start 0000           ??_LCD_Write_String 0075  
         __size_of_LCD_clear 000D                 _sprintf$1220 00AE                ?_Init_Receive 0070  
           __end_of_LCD_Init 1C93             __end_of_LCD_Port 19A5                ___fltol@sign1 005A  
            __end_of___fladd 153E                        ?_main 0070              __end_of___awdiv 0940  
            __end_of___flneg 19CD              __end_of___awmod 005F              __end_of___flmul 1000  
            __end_of___flsub 1ABF              __end_of___fltol 1DCB                        _ANSEL 0188  
            __end_of___lldiv 1D4F              ___awdiv@divisor 0077              __end_of___llmod 1CE9  
            __end_of___lwdiv 1BF6              __end_of___lwmod 1B70              ___awdiv@counter 0020  
                      _RCREG 001A                        _SPBRG 0099                        _PORTB 0006  
                      _PORTD 0008                        _PORTE 0009                        _TRISB 0086  
                      _TRISD 0088                        _TRISE 0089                        _TXREG 0019  
     __end_of_LCD_Set_Cursor 1A9B                _Init_Transmit 19E6              __end_of_dpowers 08A0  
                      _scale 0940              __end_of_isdigit 1A06                        _setup 1A35  
               LCD_Command@a 0073                        pclath 000A              __end_of_spiInit 1A1C  
            __end_of_spiRead 1009                        status 0003                        wtemp0 007E  
            __end_of_sprintf 07E8                 USART_Write@a 0070               _LCD_Write_Char 1A1C  
            __initialization 07E8               ??_Init_Receive 0070                 __end_of_main 01E2  
                     ??_main 00C9         __size_of__tdiv_to_l_ 00BD            __end_of_LCD_clear 19E6  
             ?_Init_Transmit 0070              ?_LCD_Set_Cursor 0074             ___llmod@dividend 0024  
                     ?_scale 003E             ___awdiv@dividend 0079                       ?_setup 0070  
                     _ANSELH 0189                       _TRISC0 0438                       _TRISC1 0439  
                     _TRISC2 043A                       _TRISC3 043B                       _TRISC5 043D  
                     _TRISC7 043F                       _SSPCON 0014                       _SSPBUF 0013  
           __end_of___xxtofl 1E85       __end_of_LCD_Write_Char 1A35             __end_of__powers_ 0844  
                     ___flge 1009                       ___fleq 1BF6                    ??___fladd 005A  
                     ___wmul 1ABF                    ??___awdiv 007B                    ??___flneg 0074  
                  ??___awmod 0074                    ??___flmul 002C                    ??___flsub 007E  
                  ??___fltol 0055                    ??___lldiv 0078                    ??___llmod 0028  
                  ??___lwdiv 007A                    ??___lwmod 0074                       _fround 10AB  
           ___awdiv@quotient 0022              ___awmod@divisor 0070              ___awmod@counter 0075  
       __size_of_LCD_Command 0023                    ??_isdigit 0070           __size_of__Umul8_16 0027  
           __end_of_spiWrite 19AB                    ??_spiInit 0073                    ??_spiRead 0070  
                  ??_sprintf 00A9              LCD_Set_Cursor@a 0077              LCD_Set_Cursor@x 0076  
            LCD_Set_Cursor@y 0074                   ___flge@ff1 0070                   ___flge@ff2 0074  
               ___xxtofl@arg 007A                 ___xxtofl@exp 0079                 ___xxtofl@val 0070  
                 ___fleq@ff1 0070                   ___fleq@ff2 0074      __end_of__initialization 07FC  
                  ?_LCD_Init 0070                   ___flneg@f1 0070                    ?_LCD_Port 0070  
                 ___fltol@f1 0051              ?_LCD_Write_Char 0070                 ?_USART_Write 0070  
             __pcstackCOMMON 0070                    LCD_Port@a 0070                 __pidataBANK1 0005  
              __end_of_scale 0C9F                __end_of_setup 1A54       __size_of_Set_Baud_Rate 0005  
            ??_Init_Transmit 0070                   __div_to_l_ 1F42         __end_of_Init_Receive 19BA  
            __div_to_l_@exp1 0025              __div_to_l_@cntr 0024                      ??_scale 0042  
            __div_to_l_@quot 0020                 sprintf@width 00B5                      ??_setup 0074  
                 __pbssBANK0 006E                   __pbssBANK1 00CE                   ??_LCD_Init 0074  
                 ??_LCD_Port 0070                __div_to_l_@f1 0070                __div_to_l_@f2 0074  
          __end_of__Umul8_16 1B0B                   __pmaintext 005F                      ?___flge 0070  
                    ?___fleq 0070                      ?___wmul 0070      __size_of_spiReceiveWait 0007  
                    ?_fround 003E    __size_of_LCD_Write_String 0042                    ?___xxtofl 0070  
                    _SSPSTAT 0094   __end_of_USART_Write_String 1B36                   __stringtab 0800  
              _Set_Baud_Rate 199A            __end_of__npowers_ 0878                   _scale$1219 004C  
                  ?_spiWrite 0070              __size_of___flge 00A2              __size_of___fleq 004E  
                    ___fladd 12B6                      ___awdiv 08D7                      ___flneg 19C2  
                    ___awmod 0006                      ___flmul 0C9F                      ___flsub 1A9B  
                    ___fltol 1D4F                      ___lldiv 1CE9              __size_of___wmul 0025  
                    ___llmod 1C93                      ___lwdiv 1BB2                      ___lwmod 1B36  
            __size_of_fround 020B             ??_LCD_Set_Cursor 0075                      __ptext1 153E  
                    __ptext2 0940                      __ptext3 0006                      __ptext4 08D7  
                    __ptext5 19F4                      __ptext6 10AB                      __ptext7 1B36  
                    __ptext8 1BB2                      __ptext9 0C9F                  ?__div_to_l_ 0070  
                    _dpowers 0878                      _isdigit 19F4                   ??___xxtofl 0074  
           ___awmod@dividend 0072                      _spiInit 1A06                      _spiRead 1000  
                    _sprintf 153E                      clrloop0 19BB                    _LCD_clear 19D9  
       end_of_initialization 07FC               ?_Set_Baud_Rate 0070              ___lldiv@divisor 0070  
            ___lldiv@counter 007D                    _RCSTAbits 0018                   ??_spiWrite 0070  
                    psplit$0 D0035         __size_of_USART_Write 000C               __tdiv_to_l_@f1 0070  
             __tdiv_to_l_@f2 0074                ??__tdiv_to_l_ 0078                    _PORTCbits 0007  
      __size_of_Init_Receive 0008                  ___fladd@grs 0065                ___xxtofl@sign 0078  
                  _TRISCbits 0087                  spiWrite@dat 0070                   ?_LCD_clear 0070  
          LCD_Write_String@a 0073            LCD_Write_String@i 0078             ??_LCD_Write_Char 0071  
                ___flmul@grs 0032                    _TXSTAbits 0098            __size_of_LCD_Init 004F  
        __size_of__div_to_l_ 00BE            __size_of_LCD_Port 0006                 _Init_Receive 19B2  
              ??_LCD_Command 0071               _spiReceiveWait 19AB               __end_of___flge 10AB  
             __end_of___fleq 1C44               __end_of___wmul 1AE4             _LCD_Write_String 1B70  
          pnum$text1_split_1 0035               __end_of_fround 12B6          start_initialization 07E8  
        __end_of__tdiv_to_l_ 1F42              ??_Set_Baud_Rate 0070              ___llmod@divisor 0020  
            ___llmod@counter 0029       __end_of_spiReceiveWait 19B2                     ??___flge 0078  
                   ??___fleq 0078                     ??___wmul 0074                    __Umul8_16 1AE4  
                __pdataBANK1 00E8              LCD_Write_Char@a 0072                     ??_fround 0042  
              sprintf@tmpval 00B7                    ___fladd@a 0056                    ___fladd@b 0052  
                 fround@prec 0051          __end_of_LCD_Command 1A77                    ___flmul@a 0028  
                  ___flmul@b 0024                    ___flsub@a 0066                    ___flsub@b 006A  
      __end_of_Init_Transmit 19F4                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00A0            __size_of___xxtofl 00BA                 _isdigit$1033 0070  
                ??_LCD_clear 0074                  sprintf@flag 00B3                  sprintf@eexp 00BF  
                sprintf@fval 00C1                  sprintf@prec 00C6             ___lwdiv@dividend 0078  
            ?_spiReceiveWait 0070           _USART_Write_String 1B0B                     ?___fladd 0052  
                   ?___awdiv 0077                     ?___flneg 0070                     ?___awmod 0070  
                   ?___flmul 0024                     ?___flsub 0066                     ?___fltol 0051  
                   ?___lldiv 0070                     ?___llmod 0020                    __npowers_ 0844  
                 ?__Umul8_16 0070                     ?___lwdiv 0076                     ?___lwmod 0070  
          __size_of_spiWrite 0006                    __pstrings 0800          ?_USART_Write_String 0071  
                __tdiv_to_l_ 1E85                 ??__div_to_l_ 0078                     ?_isdigit 0070  
                   ?_spiInit 0070                     ?_spiRead 0070             ___lwdiv@quotient 007B  
                   ?_sprintf 00A0               __size_of_scale 035F               __size_of_setup 001F  
       ??_USART_Write_String 0073         spiInit@sTransmitEdge 0072                     _LCD_Init 1C44  
             ___wmul@product 0074                     _LCD_Port 199F                    clear_ram0 19BA  
                   _PIE1bits 008C           spiInit@sDataSample 0070                     _PIR1bits 000C  
         __end_of__div_to_l_ 2000                  _LCD_Command 1A54                  __stringbase 080F  
          ___wmul@multiplier 0070     __end_of_LCD_Write_String 1BB2                ??_USART_Write 0070  
                ??__Umul8_16 0072             __size_of___fladd 0288             __size_of___awdiv 0069  
           __size_of___flneg 000B             __size_of___awmod 0059             __size_of___flmul 0361  
           __size_of___flsub 0024             __size_of___fltol 007C             __size_of___lldiv 0066  
           __size_of___llmod 0056             __size_of___lwdiv 0044             __size_of___lwmod 003A  
                _fround$1217 004D                  _fround$1218 0049           __end_of__stringtab 0810  
                 sprintf@val 00BB                     ___xxtofl 1DCB             __size_of_isdigit 0012  
            ___lwdiv@divisor 0076              ___lwdiv@counter 007D                     __ptext10 1AE4  
                   __ptext11 1E85                     __ptext20 19C2                     __ptext12 1F42  
                   __ptext21 1009                     __ptext13 1DCB                     __ptext30 199A  
                   __ptext22 1BF6                     __ptext14 1ABF                     __ptext31 19D9  
                   __ptext23 19A5                     __ptext15 1C93                     __ptext32 1B70  
                   __ptext24 1000                     __ptext16 1CE9                     __ptext33 1A1C  
                   __ptext25 19AB                     __ptext17 1D4F                     __ptext34 1A77  
                   __ptext26 1A35                     __ptext18 1A9B                     __ptext35 1C44  
                   __ptext27 1A06                     __ptext19 12B6                     __ptext36 1A54  
                   __ptext28 1B0B                     __ptext37 199F                     __ptext29 19CD  
                   __ptext38 19E6                     __ptext39 19B2             __size_of_spiInit 0016  
           __size_of_spiRead 0009                     __powers_ 0810      __size_of_LCD_Set_Cursor 0024  
           __size_of_sprintf F2AA                __size_of_main 0183                    pnum$text1 000D  
                   _recibido 006E                     _pantalla 00D4                     _spiWrite 19A5  
               spiInit@sType 0073          __end_of_USART_Write 19D9            spiInit@sClockIdle 0071  
                 _INTCONbits 000B                     isdigit@c 0071                     scale@scl 0050  
      __end_of_Set_Baud_Rate 199F                    sprintf@ap 00B2             __tdiv_to_l_@exp1 0025  
           __tdiv_to_l_@cntr 0024                    sprintf@sp 00C5             __tdiv_to_l_@quot 0020  
           ___lwmod@dividend 0072             ___lldiv@dividend 0074             ??_spiReceiveWait 0070  
                  stringcode 080A      __size_of_LCD_Write_Char 0019                 ?__tdiv_to_l_ 0070  
     __Umul8_16@multiplicand 0070                     sprintf@c 00C8                     sprintf@f 00A0  
        USART_Write_String@a 0071          USART_Write_String@i 0074             ___lldiv@quotient 0079  
            ___lwmod@divisor 0070              ___lwmod@counter 0075                     stringdir 080A  
                   stringtab 0800                ___fladd@signs 0062                 ___fladd@aexp 0063  
               ___fladd@bexp 0064         __Umul8_16@multiplier 0078                  _USART_Write 19CD  
          __Umul8_16@product 0074  
