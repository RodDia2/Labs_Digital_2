

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 10:13:14 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0000                     	;# 
   385  0001                     	;# 
   386  0002                     	;# 
   387  0003                     	;# 
   388  0004                     	;# 
   389  0005                     	;# 
   390  0006                     	;# 
   391  0007                     	;# 
   392  0008                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  000E                     	;# 
   399  000E                     	;# 
   400  000F                     	;# 
   401  0010                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001D                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  0081                     	;# 
   420  0085                     	;# 
   421  0086                     	;# 
   422  0087                     	;# 
   423  0088                     	;# 
   424  0089                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  008F                     	;# 
   429  0090                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0094                     	;# 
   436  0095                     	;# 
   437  0096                     	;# 
   438  0097                     	;# 
   439  0098                     	;# 
   440  0099                     	;# 
   441  009A                     	;# 
   442  009B                     	;# 
   443  009C                     	;# 
   444  009D                     	;# 
   445  009E                     	;# 
   446  009F                     	;# 
   447  0105                     	;# 
   448  0107                     	;# 
   449  0108                     	;# 
   450  0109                     	;# 
   451  010C                     	;# 
   452  010C                     	;# 
   453  010D                     	;# 
   454  010E                     	;# 
   455  010F                     	;# 
   456  0185                     	;# 
   457  0187                     	;# 
   458  0188                     	;# 
   459  0189                     	;# 
   460  018C                     	;# 
   461  018D                     	;# 
   462                           
   463                           	psect	idataBANK0
   464  02CA                     __pidataBANK0:
   465                           
   466                           ;initializer for _TEMP
   467  02CA  3405               	retlw	5
   468                           
   469                           	psect	strings
   470  0003                     __pstrings:
   471  0003                     stringtab:
   472  0003                     __stringtab:
   473                           
   474                           ;	String table - string pointers are 1 byte each
   475  0003  1BFF               	btfsc	btemp+1,7
   476  0004  280D               	ljmp	stringcode
   477  0005  1383               	bcf	3,7
   478  0006  187F               	btfsc	btemp+1,0
   479  0007  1783               	bsf	3,7
   480  0008  0800               	movf	0,w
   481  0009  0A84               	incf	4,f
   482  000A  1903               	skipnz
   483  000B  0AFF               	incf	btemp+1,f
   484  000C  0008               	return
   485  000D                     stringcode:
   486  000D                     stringdir:
   487  000D  3000               	movlw	high stringdir
   488  000E  008A               	movwf	10
   489  000F  0804               	movf	4,w
   490  0010  0A84               	incf	4,f
   491  0011  0782               	addwf	2,f
   492  0012                     __stringbase:
   493  0012  3400               	retlw	0
   494  0013                     __end_of__stringtab:
   495  0013                     _dpowers:
   496  0013  3401               	retlw	1
   497  0014  3400               	retlw	0
   498  0015  340A               	retlw	10
   499  0016  3400               	retlw	0
   500  0017  3464               	retlw	100
   501  0018  3400               	retlw	0
   502  0019  34E8               	retlw	232
   503  001A  3403               	retlw	3
   504  001B  3410               	retlw	16
   505  001C  3427               	retlw	39
   506  001D                     __end_of_dpowers:
   507  001A                     _RCREG	set	26
   508  0019                     _TXREG	set	25
   509  0018                     _RCSTAbits	set	24
   510  000B                     _INTCONbits	set	11
   511  000C                     _PIR1bits	set	12
   512  0008                     _PORTD	set	8
   513  0006                     _PORTB	set	6
   514  0007                     _PORTCbits	set	7
   515  0013                     _SSPBUF	set	19
   516  0014                     _SSPCON	set	20
   517  0065                     _RCIF	set	101
   518  0049                     _RE1	set	73
   519  0048                     _RE0	set	72
   520  0087                     _TRISCbits	set	135
   521  008C                     _PIE1bits	set	140
   522  0098                     _TXSTAbits	set	152
   523  0099                     _SPBRG	set	153
   524  0088                     _TRISD	set	136
   525  0086                     _TRISB	set	134
   526  0094                     _SSPSTATbits	set	148
   527  0094                     _SSPSTAT	set	148
   528  04C1                     _TRMT	set	1217
   529  043F                     _TRISC7	set	1087
   530  043A                     _TRISC2	set	1082
   531  0439                     _TRISC1	set	1081
   532  0438                     _TRISC0	set	1080
   533  043B                     _TRISC3	set	1083
   534  043D                     _TRISC5	set	1085
   535  0189                     _ANSELH	set	393
   536  0188                     _ANSEL	set	392
   537  001D                     STR_1:
   538  001D  3441               	retlw	65	;'A'
   539  001E  3444               	retlw	68	;'D'
   540  001F  3443               	retlw	67	;'C'
   541  0020  3420               	retlw	32	;' '
   542  0021  3443               	retlw	67	;'C'
   543  0022  344F               	retlw	79	;'O'
   544  0023  344E               	retlw	78	;'N'
   545  0024  3454               	retlw	84	;'T'
   546  0025  3420               	retlw	32	;' '
   547  0026  3454               	retlw	84	;'T'
   548  0027  3445               	retlw	69	;'E'
   549  0028  344D               	retlw	77	;'M'
   550  0029  3450               	retlw	80	;'P'
   551  002A  3420               	retlw	32	;' '
   552  002B  340A               	retlw	10
   553  002C  3400               	retlw	0
   554  002D                     STR_3:
   555  002D  3441               	retlw	65	;'A'
   556  002E  3444               	retlw	68	;'D'
   557  002F  3443               	retlw	67	;'C'
   558  0030  3420               	retlw	32	;' '
   559  0031  3420               	retlw	32	;' '
   560  0032  3443               	retlw	67	;'C'
   561  0033  344F               	retlw	79	;'O'
   562  0034  344E               	retlw	78	;'N'
   563  0035  3454               	retlw	84	;'T'
   564  0036  3420               	retlw	32	;' '
   565  0037  3420               	retlw	32	;' '
   566  0038  3454               	retlw	84	;'T'
   567  0039  3445               	retlw	69	;'E'
   568  003A  344D               	retlw	77	;'M'
   569  003B  3450               	retlw	80	;'P'
   570  003C  3400               	retlw	0
   571  003D                     STR_2:
   572  003D  3425               	retlw	37	;'%'
   573  003E  3432               	retlw	50	;'2'
   574  003F  3464               	retlw	100	;'d'
   575  0040  3420               	retlw	32	;' '
   576  0041  3420               	retlw	32	;' '
   577  0042  3425               	retlw	37	;'%'
   578  0043  3432               	retlw	50	;'2'
   579  0044  3464               	retlw	100	;'d'
   580  0045  3420               	retlw	32	;' '
   581  0046  3420               	retlw	32	;' '
   582  0047  3425               	retlw	37	;'%'
   583  0048  3432               	retlw	50	;'2'
   584  0049  3464               	retlw	100	;'d'
   585  004A  3400               	retlw	0
   586                           
   587                           	psect	cinit
   588  07ED                     start_initialization:	
   589                           ; #config settings
   590                           
   591  07ED                     __initialization:
   592                           
   593                           ; Initialize objects allocated to BANK0
   594  07ED  120A  118A  22CA  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   595  07F2  00D1               	movwf	__pdataBANK0& (0+127)
   596                           
   597                           ; Clear objects allocated to BANK0
   598  07F3  1383               	bcf	3,7	;select IRP bank0
   599  07F4  303A               	movlw	low __pbssBANK0
   600  07F5  0084               	movwf	4
   601  07F6  3051               	movlw	low (__pbssBANK0+23)
   602  07F7  120A  118A  22EB  120A  118A  	fcall	clear_ram0
   603  07FC                     end_of_initialization:	
   604                           ;End of C runtime variable initialization code
   605                           
   606  07FC                     __end_of__initialization:
   607  07FC  0183               	clrf	3
   608  07FD  120A  118A  2D27   	ljmp	_main	;jump to C main() function
   609                           
   610                           	psect	bssBANK0
   611  003A                     __pbssBANK0:
   612  003A                     _recibido:
   613  003A                     	ds	1
   614  003B                     _CONT:
   615  003B                     	ds	1
   616  003C                     _ADC:
   617  003C                     	ds	1
   618  003D                     _pantalla:
   619  003D                     	ds	20
   620                           
   621                           	psect	dataBANK0
   622  0051                     __pdataBANK0:
   623  0051                     _TEMP:
   624  0051                     	ds	1
   625                           
   626                           	psect	clrtext
   627  02EB                     clear_ram0:	
   628                           ;	Called with FSR containing the base address, and
   629                           ;	W with the last address+1
   630                           
   631  02EB  0064               	clrwdt	;clear the watchdog before getting into this loop
   632  02EC                     clrloop0:
   633  02EC  0180               	clrf	0	;clear RAM location pointed to by FSR
   634  02ED  0A84               	incf	4,f	;increment pointer
   635  02EE  0604               	xorwf	4,w	;XOR with final address
   636  02EF  1903               	btfsc	3,2	;have we reached the end yet?
   637  02F0  3400               	retlw	0	;all done for this memory range, return
   638  02F1  0604               	xorwf	4,w	;XOR again to restore value
   639  02F2  2AEC               	goto	clrloop0	;do the next byte
   640                           
   641                           	psect	cstackCOMMON
   642  0070                     __pcstackCOMMON:
   643  0070                     ?_isdigit:
   644  0070                     ?_setup:	
   645                           ; 1 bit 
   646                           
   647  0070                     ?_LCD_Init:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_LCD_clear:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_Set_Baud_Rate:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ??_Set_Baud_Rate:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_Init_Transmit:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ??_Init_Transmit:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_Init_Receive:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ??_Init_Receive:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_USART_Write:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ??_USART_Write:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_LCD_Port:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ??_LCD_Port:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ??_isdigit:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_spiInit:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_spiReceiveWait:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ??_spiReceiveWait:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_spiWrite:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ??_spiWrite:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_spiRead:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ??_spiRead:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_main:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_LCD_Write_Char:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_LCD_Command:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?___wmul:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?___lwdiv:	
   720                           ; 2 bytes @ 0x0
   721                           
   722  0070                     spiInit@sDataSample:	
   723                           ; 2 bytes @ 0x0
   724                           
   725  0070                     spiWrite@dat:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     LCD_Port@a:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     USART_Write@a:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     _isdigit$995:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ___wmul@multiplier:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ___lwdiv@divisor:	
   741                           ; 2 bytes @ 0x0
   742                           
   743                           
   744                           ; 2 bytes @ 0x0
   745  0070                     	ds	1
   746  0071                     ?_USART_Write_String:
   747  0071                     ??_LCD_Write_Char:	
   748                           ; 1 bytes @ 0x1
   749                           
   750  0071                     ??_LCD_Command:	
   751                           ; 1 bytes @ 0x1
   752                           
   753  0071                     spiInit@sClockIdle:	
   754                           ; 1 bytes @ 0x1
   755                           
   756  0071                     isdigit@c:	
   757                           ; 1 bytes @ 0x1
   758                           
   759  0071                     USART_Write_String@a:	
   760                           ; 1 bytes @ 0x1
   761                           
   762                           
   763                           ; 2 bytes @ 0x1
   764  0071                     	ds	1
   765  0072                     spiInit@sTransmitEdge:
   766  0072                     LCD_Write_Char@a:	
   767                           ; 1 bytes @ 0x2
   768                           
   769  0072                     ___wmul@multiplicand:	
   770                           ; 1 bytes @ 0x2
   771                           
   772  0072                     ___lwdiv@dividend:	
   773                           ; 2 bytes @ 0x2
   774                           
   775                           
   776                           ; 2 bytes @ 0x2
   777  0072                     	ds	1
   778  0073                     ??_USART_Write_String:
   779  0073                     ?_LCD_Write_String:	
   780                           ; 1 bytes @ 0x3
   781                           
   782  0073                     ??_spiInit:	
   783                           ; 1 bytes @ 0x3
   784                           
   785  0073                     spiInit@sType:	
   786                           ; 1 bytes @ 0x3
   787                           
   788  0073                     LCD_Command@a:	
   789                           ; 1 bytes @ 0x3
   790                           
   791  0073                     LCD_Write_String@a:	
   792                           ; 1 bytes @ 0x3
   793                           
   794                           
   795                           ; 2 bytes @ 0x3
   796  0073                     	ds	1
   797  0074                     ??_setup:
   798  0074                     ??_LCD_Init:	
   799                           ; 1 bytes @ 0x4
   800                           
   801  0074                     ??_LCD_clear:	
   802                           ; 1 bytes @ 0x4
   803                           
   804  0074                     ?_LCD_Set_Cursor:	
   805                           ; 1 bytes @ 0x4
   806                           
   807  0074                     ??___wmul:	
   808                           ; 1 bytes @ 0x4
   809                           
   810  0074                     ??___lwdiv:	
   811                           ; 1 bytes @ 0x4
   812                           
   813  0074                     LCD_Set_Cursor@y:	
   814                           ; 1 bytes @ 0x4
   815                           
   816  0074                     USART_Write_String@i:	
   817                           ; 1 bytes @ 0x4
   818                           
   819  0074                     ___wmul@product:	
   820                           ; 1 bytes @ 0x4
   821                           
   822                           
   823                           ; 2 bytes @ 0x4
   824  0074                     	ds	1
   825  0075                     ??_LCD_Set_Cursor:
   826  0075                     ??_LCD_Write_String:	
   827                           ; 1 bytes @ 0x5
   828                           
   829  0075                     ___lwdiv@quotient:	
   830                           ; 1 bytes @ 0x5
   831                           
   832                           
   833                           ; 2 bytes @ 0x5
   834  0075                     	ds	1
   835  0076                     LCD_Set_Cursor@x:
   836                           
   837                           ; 1 bytes @ 0x6
   838  0076                     	ds	1
   839  0077                     LCD_Set_Cursor@a:
   840  0077                     ___lwdiv@counter:	
   841                           ; 1 bytes @ 0x7
   842                           
   843                           
   844                           ; 1 bytes @ 0x7
   845  0077                     	ds	1
   846  0078                     ?___lwmod:
   847  0078                     LCD_Write_String@i:	
   848                           ; 2 bytes @ 0x8
   849                           
   850  0078                     ___lwmod@divisor:	
   851                           ; 2 bytes @ 0x8
   852                           
   853                           
   854                           ; 2 bytes @ 0x8
   855  0078                     	ds	2
   856  007A                     ___lwmod@dividend:
   857                           
   858                           ; 2 bytes @ 0xA
   859  007A                     	ds	2
   860  007C                     ??___lwmod:
   861                           
   862                           ; 1 bytes @ 0xC
   863  007C                     	ds	1
   864  007D                     ___lwmod@counter:
   865                           
   866                           ; 1 bytes @ 0xD
   867  007D                     	ds	1
   868                           
   869                           	psect	cstackBANK0
   870  0020                     __pcstackBANK0:
   871  0020                     ?_sprintf:
   872  0020                     sprintf@f:	
   873                           ; 2 bytes @ 0x0
   874                           
   875                           
   876                           ; 1 bytes @ 0x0
   877  0020                     	ds	7
   878  0027                     ??_sprintf:
   879                           
   880                           ; 1 bytes @ 0x7
   881  0027                     	ds	3
   882  002A                     sprintf@ap:
   883                           
   884                           ; 1 bytes @ 0xA
   885  002A                     	ds	1
   886  002B                     sprintf@prec:
   887                           
   888                           ; 1 bytes @ 0xB
   889  002B                     	ds	1
   890  002C                     sprintf@flag:
   891                           
   892                           ; 1 bytes @ 0xC
   893  002C                     	ds	1
   894  002D                     sprintf@val:
   895                           
   896                           ; 2 bytes @ 0xD
   897  002D                     	ds	2
   898  002F                     sprintf@sp:
   899                           
   900                           ; 1 bytes @ 0xF
   901  002F                     	ds	1
   902  0030                     sprintf@width:
   903                           
   904                           ; 2 bytes @ 0x10
   905  0030                     	ds	2
   906  0032                     sprintf@c:
   907                           
   908                           ; 1 bytes @ 0x12
   909  0032                     	ds	1
   910  0033                     ??_main:
   911                           
   912                           ; 1 bytes @ 0x13
   913  0033                     	ds	7
   914                           
   915                           	psect	maintext
   916  0527                     __pmaintext:	
   917 ;;
   918 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
   919 ;;
   920 ;; *************** function _main *****************
   921 ;; Defined at:
   922 ;;		line 60 in file "main_master.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : B00/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   936 ;;      Params:         0       0       0       0       0
   937 ;;      Locals:         0       0       0       0       0
   938 ;;      Temps:          0       7       0       0       0
   939 ;;      Totals:         0       7       0       0       0
   940 ;;Total ram usage:        7 bytes
   941 ;; Hardware stack levels required when called:    3
   942 ;; This function calls:
   943 ;;		_Init_Receive
   944 ;;		_Init_Transmit
   945 ;;		_LCD_Init
   946 ;;		_LCD_Set_Cursor
   947 ;;		_LCD_Write_String
   948 ;;		_LCD_clear
   949 ;;		_Set_Baud_Rate
   950 ;;		_USART_Write
   951 ;;		_USART_Write_String
   952 ;;		_setup
   953 ;;		_spiRead
   954 ;;		_spiWrite
   955 ;;		_sprintf
   956 ;; This function is called by:
   957 ;;		Startup code after reset
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           
   962                           ;psect for function _main
   963  0527                     _main:
   964  0527                     l1499:	
   965                           ;incstack = 0
   966                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   967                           
   968                           
   969                           ;main_master.c: 61:     setup();
   970  0527  120A  118A  2364  120A  118A  	fcall	_setup
   971                           
   972                           ;main_master.c: 62:     LCD_Init();
   973  052C  120A  118A  24D8  120A  118A  	fcall	_LCD_Init
   974                           
   975                           ;main_master.c: 63:     LCD_clear();
   976  0531  120A  118A  2308  120A  118A  	fcall	_LCD_clear
   977                           
   978                           ;main_master.c: 65:     Set_Baud_Rate();
   979  0536  120A  118A  22CB  120A  118A  	fcall	_Set_Baud_Rate
   980  053B                     l1501:
   981                           
   982                           ;main_master.c: 67:     Init_Transmit();
   983  053B  120A  118A  2315  120A  118A  	fcall	_Init_Transmit
   984  0540                     l1503:
   985                           
   986                           ;main_master.c: 68:     Init_Receive();
   987  0540  120A  118A  22E3  120A  118A  	fcall	_Init_Receive
   988  0545                     l1505:
   989                           
   990                           ;main_master.c: 74:         USART_Write_String("ADC CONT TEMP \n");
   991  0545  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   992  0546  00F1               	movwf	USART_Write_String@a
   993  0547  3080               	movlw	128
   994  0548  00F2               	movwf	USART_Write_String@a+1
   995  0549  120A  118A  23ED  120A  118A  	fcall	_USART_Write_String
   996  054E                     l1507:
   997                           
   998                           ;main_master.c: 76:         USART_Write(13);
   999  054E  300D               	movlw	13
  1000  054F  120A  118A  22FC  120A  118A  	fcall	_USART_Write
  1001  0554                     l1509:
  1002                           
  1003                           ;main_master.c: 77:         USART_Write(10);
  1004  0554  300A               	movlw	10
  1005  0555  120A  118A  22FC  120A  118A  	fcall	_USART_Write
  1006  055A                     l1511:
  1007                           
  1008                           ;main_master.c: 80:         sprintf(pantalla, "%2d  %2d  %2d", ADC,CONT,TEMP);
  1009  055A  302B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1010  055B  1283               	bcf	3,5	;RP0=0, select bank0
  1011  055C  1303               	bcf	3,6	;RP1=0, select bank0
  1012  055D  00B3               	movwf	??_main
  1013  055E  0833               	movf	??_main,w
  1014  055F  00A0               	movwf	sprintf@f
  1015  0560  083C               	movf	_ADC,w
  1016  0561  00B4               	movwf	??_main+1
  1017  0562  01B5               	clrf	??_main+2
  1018  0563  0834               	movf	??_main+1,w
  1019  0564  00A1               	movwf	?_sprintf+1
  1020  0565  0835               	movf	??_main+2,w
  1021  0566  00A2               	movwf	?_sprintf+2
  1022  0567  083B               	movf	_CONT,w
  1023  0568  00B6               	movwf	??_main+3
  1024  0569  01B7               	clrf	??_main+4
  1025  056A  0836               	movf	??_main+3,w
  1026  056B  00A3               	movwf	?_sprintf+3
  1027  056C  0837               	movf	??_main+4,w
  1028  056D  00A4               	movwf	?_sprintf+4
  1029  056E  0851               	movf	_TEMP,w
  1030  056F  00B8               	movwf	??_main+5
  1031  0570  01B9               	clrf	??_main+6
  1032  0571  0838               	movf	??_main+5,w
  1033  0572  00A5               	movwf	?_sprintf+5
  1034  0573  0839               	movf	??_main+6,w
  1035  0574  00A6               	movwf	?_sprintf+6
  1036  0575  303D               	movlw	(low (_pantalla| 0))& (0+255)
  1037  0576  120A  118A  2667  120A  118A  	fcall	_sprintf
  1038  057B                     l1513:
  1039                           
  1040                           ;main_master.c: 82:         USART_Write_String(pantalla);
  1041  057B  303D               	movlw	(low (_pantalla| 0))& (0+255)
  1042  057C  00F1               	movwf	USART_Write_String@a
  1043  057D  3000               	movlw	0
  1044  057E  00F2               	movwf	USART_Write_String@a+1
  1045  057F  120A  118A  23ED  120A  118A  	fcall	_USART_Write_String
  1046  0584                     l1515:
  1047                           
  1048                           ;main_master.c: 84:         USART_Write(13);
  1049  0584  300D               	movlw	13
  1050  0585  120A  118A  22FC  120A  118A  	fcall	_USART_Write
  1051  058A                     l1517:
  1052                           
  1053                           ;main_master.c: 85:         USART_Write(10);
  1054  058A  300A               	movlw	10
  1055  058B  120A  118A  22FC  120A  118A  	fcall	_USART_Write
  1056  0590                     l1519:
  1057                           
  1058                           ;main_master.c: 87:         LCD_clear();
  1059  0590  120A  118A  2308  120A  118A  	fcall	_LCD_clear
  1060  0595                     l1521:
  1061                           
  1062                           ;main_master.c: 89:         LCD_Set_Cursor(1,1);
  1063  0595  01F4               	clrf	LCD_Set_Cursor@y
  1064  0596  0AF4               	incf	LCD_Set_Cursor@y,f
  1065  0597  3001               	movlw	1
  1066  0598  120A  118A  23A4  120A  118A  	fcall	_LCD_Set_Cursor
  1067  059D                     l1523:
  1068                           
  1069                           ;main_master.c: 90:         LCD_Write_String("ADC  CONT  TEMP");
  1070  059D  301B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1071  059E  00F3               	movwf	LCD_Write_String@a
  1072  059F  3080               	movlw	128
  1073  05A0  00F4               	movwf	LCD_Write_String@a+1
  1074  05A1  120A  118A  2452  120A  118A  	fcall	_LCD_Write_String
  1075                           
  1076                           ;main_master.c: 91:         LCD_Set_Cursor(2,1);
  1077  05A6  01F4               	clrf	LCD_Set_Cursor@y
  1078  05A7  0AF4               	incf	LCD_Set_Cursor@y,f
  1079  05A8  3002               	movlw	2
  1080  05A9  120A  118A  23A4  120A  118A  	fcall	_LCD_Set_Cursor
  1081  05AE                     l1525:
  1082                           
  1083                           ;main_master.c: 92:         LCD_Write_String(pantalla);
  1084  05AE  303D               	movlw	(low (_pantalla| 0))& (0+255)
  1085  05AF  00F3               	movwf	LCD_Write_String@a
  1086  05B0  3000               	movlw	0
  1087  05B1  00F4               	movwf	LCD_Write_String@a+1
  1088  05B2  120A  118A  2452  120A  118A  	fcall	_LCD_Write_String
  1089  05B7                     l1527:
  1090                           
  1091                           ;main_master.c: 94:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1092  05B7  3006               	movlw	6
  1093  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  1094  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  1095  05BA  00B5               	movwf	??_main+2
  1096  05BB  3013               	movlw	19
  1097  05BC  00B4               	movwf	??_main+1
  1098  05BD  30AD               	movlw	173
  1099  05BE  00B3               	movwf	??_main
  1100  05BF                     u867:
  1101  05BF  0BB3               	decfsz	??_main,f
  1102  05C0  2DBF               	goto	u867
  1103  05C1  0BB4               	decfsz	??_main+1,f
  1104  05C2  2DBF               	goto	u867
  1105  05C3  0BB5               	decfsz	??_main+2,f
  1106  05C4  2DBF               	goto	u867
  1107  05C5                     l1529:
  1108                           
  1109                           ;main_master.c: 97:        PORTCbits.RC2 = 0;
  1110  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1111  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1112  05C7  1107               	bcf	7,2	;volatile
  1113  05C8                     l1531:
  1114                           
  1115                           ;main_master.c: 98:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1116  05C8  3003               	movlw	3
  1117  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  1118  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  1119  05CB  00B4               	movwf	??_main+1
  1120  05CC  3097               	movlw	151
  1121  05CD  00B3               	movwf	??_main
  1122  05CE                     u877:
  1123  05CE  0BB3               	decfsz	??_main,f
  1124  05CF  2DCE               	goto	u877
  1125  05D0  0BB4               	decfsz	??_main+1,f
  1126  05D1  2DCE               	goto	u877
  1127  05D2                     l1533:
  1128                           
  1129                           ;main_master.c: 100:        spiWrite(1);
  1130  05D2  3001               	movlw	1
  1131  05D3  120A  118A  22D6  120A  118A  	fcall	_spiWrite
  1132  05D8                     l1535:
  1133                           
  1134                           ;main_master.c: 101:        CONT = spiRead();
  1135  05D8  120A  118A  22F3  120A  118A  	fcall	_spiRead
  1136  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  1137  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  1138  05DF  00B3               	movwf	??_main
  1139  05E0  0833               	movf	??_main,w
  1140  05E1  00BB               	movwf	_CONT
  1141  05E2                     l1537:
  1142                           
  1143                           ;main_master.c: 104:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1144  05E2  3003               	movlw	3
  1145  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  1146  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  1147  05E5  00B4               	movwf	??_main+1
  1148  05E6  3097               	movlw	151
  1149  05E7  00B3               	movwf	??_main
  1150  05E8                     u887:
  1151  05E8  0BB3               	decfsz	??_main,f
  1152  05E9  2DE8               	goto	u887
  1153  05EA  0BB4               	decfsz	??_main+1,f
  1154  05EB  2DE8               	goto	u887
  1155  05EC                     l1539:
  1156                           
  1157                           ;main_master.c: 105:        PORTCbits.RC2 = 1;
  1158  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  1159  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1160  05EE  1507               	bsf	7,2	;volatile
  1161  05EF                     l1541:
  1162                           
  1163                           ;main_master.c: 107:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1164  05EF  3003               	movlw	3
  1165  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  1166  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  1167  05F2  00B4               	movwf	??_main+1
  1168  05F3  3097               	movlw	151
  1169  05F4  00B3               	movwf	??_main
  1170  05F5                     u897:
  1171  05F5  0BB3               	decfsz	??_main,f
  1172  05F6  2DF5               	goto	u897
  1173  05F7  0BB4               	decfsz	??_main+1,f
  1174  05F8  2DF5               	goto	u897
  1175  05F9                     l1543:
  1176                           
  1177                           ;main_master.c: 109:        PORTCbits.RC1 = 0;
  1178  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  1179  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  1180  05FB  1087               	bcf	7,1	;volatile
  1181  05FC                     l1545:
  1182                           
  1183                           ;main_master.c: 110:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1184  05FC  3003               	movlw	3
  1185  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  1186  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  1187  05FF  00B4               	movwf	??_main+1
  1188  0600  3097               	movlw	151
  1189  0601  00B3               	movwf	??_main
  1190  0602                     u907:
  1191  0602  0BB3               	decfsz	??_main,f
  1192  0603  2E02               	goto	u907
  1193  0604  0BB4               	decfsz	??_main+1,f
  1194  0605  2E02               	goto	u907
  1195  0606                     l1547:
  1196                           
  1197                           ;main_master.c: 112:        spiWrite(1);
  1198  0606  3001               	movlw	1
  1199  0607  120A  118A  22D6  120A  118A  	fcall	_spiWrite
  1200  060C                     l1549:
  1201                           
  1202                           ;main_master.c: 113:        ADC = spiRead();
  1203  060C  120A  118A  22F3  120A  118A  	fcall	_spiRead
  1204  0611  1283               	bcf	3,5	;RP0=0, select bank0
  1205  0612  1303               	bcf	3,6	;RP1=0, select bank0
  1206  0613  00B3               	movwf	??_main
  1207  0614  0833               	movf	??_main,w
  1208  0615  00BC               	movwf	_ADC
  1209  0616                     l1551:
  1210                           
  1211                           ;main_master.c: 116:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1212  0616  3003               	movlw	3
  1213  0617  1283               	bcf	3,5	;RP0=0, select bank0
  1214  0618  1303               	bcf	3,6	;RP1=0, select bank0
  1215  0619  00B4               	movwf	??_main+1
  1216  061A  3097               	movlw	151
  1217  061B  00B3               	movwf	??_main
  1218  061C                     u917:
  1219  061C  0BB3               	decfsz	??_main,f
  1220  061D  2E1C               	goto	u917
  1221  061E  0BB4               	decfsz	??_main+1,f
  1222  061F  2E1C               	goto	u917
  1223  0620                     l1553:
  1224                           
  1225                           ;main_master.c: 117:        PORTCbits.RC1 = 1;
  1226  0620  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0621  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0622  1487               	bsf	7,1	;volatile
  1229  0623                     l1555:
  1230                           
  1231                           ;main_master.c: 118:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1232  0623  3003               	movlw	3
  1233  0624  1283               	bcf	3,5	;RP0=0, select bank0
  1234  0625  1303               	bcf	3,6	;RP1=0, select bank0
  1235  0626  00B4               	movwf	??_main+1
  1236  0627  3097               	movlw	151
  1237  0628  00B3               	movwf	??_main
  1238  0629                     u927:
  1239  0629  0BB3               	decfsz	??_main,f
  1240  062A  2E29               	goto	u927
  1241  062B  0BB4               	decfsz	??_main+1,f
  1242  062C  2E29               	goto	u927
  1243  062D                     l1557:
  1244                           
  1245                           ;main_master.c: 122:        PORTCbits.RC0 = 0;
  1246  062D  1283               	bcf	3,5	;RP0=0, select bank0
  1247  062E  1303               	bcf	3,6	;RP1=0, select bank0
  1248  062F  1007               	bcf	7,0	;volatile
  1249  0630                     l1559:
  1250                           
  1251                           ;main_master.c: 123:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1252  0630  3003               	movlw	3
  1253  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1254  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0633  00B4               	movwf	??_main+1
  1256  0634  3097               	movlw	151
  1257  0635  00B3               	movwf	??_main
  1258  0636                     u937:
  1259  0636  0BB3               	decfsz	??_main,f
  1260  0637  2E36               	goto	u937
  1261  0638  0BB4               	decfsz	??_main+1,f
  1262  0639  2E36               	goto	u937
  1263  063A                     l1561:
  1264                           
  1265                           ;main_master.c: 125:        spiWrite(1);
  1266  063A  3001               	movlw	1
  1267  063B  120A  118A  22D6  120A  118A  	fcall	_spiWrite
  1268  0640                     l1563:
  1269                           
  1270                           ;main_master.c: 126:        TEMP = spiRead();
  1271  0640  120A  118A  22F3  120A  118A  	fcall	_spiRead
  1272  0645  1283               	bcf	3,5	;RP0=0, select bank0
  1273  0646  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0647  00B3               	movwf	??_main
  1275  0648  0833               	movf	??_main,w
  1276  0649  00D1               	movwf	_TEMP
  1277  064A                     l1565:
  1278                           
  1279                           ;main_master.c: 127:        PORTB = TEMP;
  1280  064A  0851               	movf	_TEMP,w
  1281  064B  0086               	movwf	6	;volatile
  1282  064C                     l1567:
  1283                           
  1284                           ;main_master.c: 129:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1285  064C  3003               	movlw	3
  1286  064D  1283               	bcf	3,5	;RP0=0, select bank0
  1287  064E  1303               	bcf	3,6	;RP1=0, select bank0
  1288  064F  00B4               	movwf	??_main+1
  1289  0650  3097               	movlw	151
  1290  0651  00B3               	movwf	??_main
  1291  0652                     u947:
  1292  0652  0BB3               	decfsz	??_main,f
  1293  0653  2E52               	goto	u947
  1294  0654  0BB4               	decfsz	??_main+1,f
  1295  0655  2E52               	goto	u947
  1296  0656                     l1569:
  1297                           
  1298                           ;main_master.c: 130:        PORTCbits.RC0 = 1;
  1299  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1300  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1301  0658  1407               	bsf	7,0	;volatile
  1302  0659                     l1571:
  1303                           
  1304                           ;main_master.c: 132:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1305  0659  3003               	movlw	3
  1306  065A  1283               	bcf	3,5	;RP0=0, select bank0
  1307  065B  1303               	bcf	3,6	;RP1=0, select bank0
  1308  065C  00B4               	movwf	??_main+1
  1309  065D  3097               	movlw	151
  1310  065E  00B3               	movwf	??_main
  1311  065F                     u957:
  1312  065F  0BB3               	decfsz	??_main,f
  1313  0660  2E5F               	goto	u957
  1314  0661  0BB4               	decfsz	??_main+1,f
  1315  0662  2E5F               	goto	u957
  1316  0663  2D45               	goto	l1505
  1317  0664  120A  118A  2800   	ljmp	start
  1318  0667                     __end_of_main:
  1319                           
  1320                           	psect	text1
  1321  0667                     __ptext1:	
  1322 ;; *************** function _sprintf *****************
  1323 ;; Defined at:
  1324 ;;		line 505 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;  sp              1    wreg     PTR unsigned char 
  1327 ;;		 -> pantalla(20), 
  1328 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1329 ;;		 -> STR_2(14), 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  1332 ;;		 -> pantalla(20), 
  1333 ;;  tmpval          4    0        struct .
  1334 ;;  width           2   16[BANK0 ] int 
  1335 ;;  val             2   13[BANK0 ] unsigned int 
  1336 ;;  cp              2    0        PTR const unsigned char 
  1337 ;;  len             2    0        unsigned int 
  1338 ;;  c               1   18[BANK0 ] unsigned char 
  1339 ;;  flag            1   12[BANK0 ] unsigned char 
  1340 ;;  prec            1   11[BANK0 ] char 
  1341 ;;  ap              1   10[BANK0 ] PTR void [1]
  1342 ;;		 -> ?_sprintf(2), 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  2    0[BANK0 ] int 
  1345 ;; Registers used:
  1346 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1352 ;;      Params:         0       7       0       0       0
  1353 ;;      Locals:         0       9       0       0       0
  1354 ;;      Temps:          0       3       0       0       0
  1355 ;;      Totals:         0      19       0       0       0
  1356 ;;Total ram usage:       19 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    1
  1359 ;; This function calls:
  1360 ;;		___lwdiv
  1361 ;;		___lwmod
  1362 ;;		___wmul
  1363 ;;		_isdigit
  1364 ;; This function is called by:
  1365 ;;		_main
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           
  1370                           ;psect for function _sprintf
  1371  0667                     _sprintf:
  1372                           
  1373                           ;incstack = 0
  1374                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1375                           ;sprintf@sp stored from wreg
  1376  0667  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0668  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0669  00AF               	movwf	sprintf@sp
  1379  066A                     l1387:
  1380                           
  1381                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const c
      +                          har * f, ...);D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 506: {;D:\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\Microchip\xc8\v2.31\pi
      +                          c\sources\c90\common\doprnt.c: 512:  char c;;D:\Microchip\xc8\v2.31\pic\sources\c90\comm
      +                          on\doprnt.c: 514:  int width;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 52
      +                          1:  signed char prec;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsi
      +                          gned char flag;
  1382  066A  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1383  066B  00A7               	movwf	??_sprintf
  1384  066C  0827               	movf	??_sprintf,w
  1385  066D  00AA               	movwf	sprintf@ap
  1386                           
  1387                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1388  066E  2FD6               	goto	l1469
  1389  066F                     l1389:
  1390                           
  1391                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  1392  066F  3025               	movlw	37
  1393  0670  0632               	xorwf	sprintf@c,w
  1394  0671  1903               	btfsc	3,2
  1395  0672  2E74               	goto	u671
  1396  0673  2E75               	goto	u670
  1397  0674                     u671:
  1398  0674  2E81               	goto	l1395
  1399  0675                     u670:
  1400  0675                     l1391:
  1401                           
  1402                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;D:\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1403  0675  0832               	movf	sprintf@c,w
  1404  0676  00A7               	movwf	??_sprintf
  1405  0677  082F               	movf	sprintf@sp,w
  1406  0678  0084               	movwf	4
  1407  0679  0827               	movf	??_sprintf,w
  1408  067A  1383               	bcf	3,7	;select IRP bank0
  1409  067B  0080               	movwf	0
  1410  067C                     l1393:
  1411  067C  3001               	movlw	1
  1412  067D  00A7               	movwf	??_sprintf
  1413  067E  0827               	movf	??_sprintf,w
  1414  067F  07AF               	addwf	sprintf@sp,f
  1415                           
  1416                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1417  0680  2FD6               	goto	l1469
  1418  0681                     l1395:
  1419                           
  1420                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1421  0681  01B0               	clrf	sprintf@width
  1422  0682  01B1               	clrf	sprintf@width+1
  1423                           
  1424                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1425  0683  01AC               	clrf	sprintf@flag
  1426  0684                     l1397:
  1427                           
  1428                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit((unsigned)*f)
      +                          ) {
  1429  0684  0820               	movf	sprintf@f,w
  1430  0685  0084               	movwf	4
  1431  0686  120A  118A  200D  120A  118A  	fcall	stringdir
  1432  068B  120A  118A  2323  120A  118A  	fcall	_isdigit
  1433  0690  1C03               	btfss	3,0
  1434  0691  2E93               	goto	u681
  1435  0692  2E94               	goto	u680
  1436  0693                     u681:
  1437  0693  2ED4               	goto	l1411
  1438  0694                     u680:
  1439  0694                     l1399:
  1440                           
  1441                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0;
  1442  0694  1283               	bcf	3,5	;RP0=0, select bank0
  1443  0695  1303               	bcf	3,6	;RP1=0, select bank0
  1444  0696  01B0               	clrf	sprintf@width
  1445  0697  01B1               	clrf	sprintf@width+1
  1446  0698                     l1401:
  1447                           
  1448                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *= 10;
  1449  0698  300A               	movlw	10
  1450  0699  00F0               	movwf	___wmul@multiplier
  1451  069A  3000               	movlw	0
  1452  069B  00F1               	movwf	___wmul@multiplier+1
  1453  069C  1283               	bcf	3,5	;RP0=0, select bank0
  1454  069D  1303               	bcf	3,6	;RP1=0, select bank0
  1455  069E  0831               	movf	sprintf@width+1,w
  1456  069F  00F3               	movwf	___wmul@multiplicand+1
  1457  06A0  0830               	movf	sprintf@width,w
  1458  06A1  00F2               	movwf	___wmul@multiplicand
  1459  06A2  120A  118A  23C8  120A  118A  	fcall	___wmul
  1460  06A7  0871               	movf	?___wmul+1,w
  1461  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1462  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1463  06AA  00B1               	movwf	sprintf@width+1
  1464  06AB  0870               	movf	?___wmul,w
  1465  06AC  00B0               	movwf	sprintf@width
  1466  06AD                     l1403:
  1467                           
  1468                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width += *f++ - '0'
      +                          ;
  1469  06AD  0820               	movf	sprintf@f,w
  1470  06AE  0084               	movwf	4
  1471  06AF  120A  118A  200D  120A  118A  	fcall	stringdir
  1472  06B4  3ED0               	addlw	208
  1473  06B5  00A7               	movwf	??_sprintf
  1474  06B6  30FF               	movlw	255
  1475  06B7  1803               	skipnc
  1476  06B8  3000               	movlw	0
  1477  06B9  00A8               	movwf	??_sprintf+1
  1478  06BA  0827               	movf	??_sprintf,w
  1479  06BB  07B0               	addwf	sprintf@width,f
  1480  06BC  1803               	skipnc
  1481  06BD  0AB1               	incf	sprintf@width+1,f
  1482  06BE  0828               	movf	??_sprintf+1,w
  1483  06BF  07B1               	addwf	sprintf@width+1,f
  1484  06C0                     l1405:
  1485  06C0  3001               	movlw	1
  1486  06C1  00A7               	movwf	??_sprintf
  1487  06C2  0827               	movf	??_sprintf,w
  1488  06C3  07A0               	addwf	sprintf@f,f
  1489  06C4                     l1407:
  1490                           
  1491                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(isdigit((unsign
      +                          ed)*f));
  1492  06C4  0820               	movf	sprintf@f,w
  1493  06C5  0084               	movwf	4
  1494  06C6  120A  118A  200D  120A  118A  	fcall	stringdir
  1495  06CB  120A  118A  2323  120A  118A  	fcall	_isdigit
  1496  06D0  1803               	btfsc	3,0
  1497  06D1  2ED3               	goto	u691
  1498  06D2  2ED4               	goto	u690
  1499  06D3                     u691:
  1500  06D3  2E98               	goto	l1401
  1501  06D4                     u690:
  1502  06D4                     l1411:
  1503  06D4  3001               	movlw	1
  1504  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  1505  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  1506  06D7  07A0               	addwf	sprintf@f,f
  1507  06D8  30FF               	movlw	-1
  1508  06D9  0720               	addwf	sprintf@f,w
  1509  06DA  0084               	movwf	4
  1510  06DB  120A  118A  200D  120A  118A  	fcall	stringdir
  1511  06E0  00B2               	movwf	sprintf@c
  1512  06E1  00A7               	movwf	??_sprintf
  1513  06E2  01A8               	clrf	??_sprintf+1
  1514                           
  1515                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1516                           ; Switch size 1, requested type "simple"
  1517                           ; Number of cases is 1, Range of values is 0 to 0
  1518                           ; switch strategies available:
  1519                           ; Name         Instructions Cycles
  1520                           ; simple_byte            4     3 (average)
  1521                           ; direct_byte           11     8 (fixed)
  1522                           ; jumptable            260     6 (fixed)
  1523                           ;	Chosen strategy is simple_byte
  1524  06E3  0828               	movf	??_sprintf+1,w
  1525  06E4  3A00               	xorlw	0	; case 0
  1526  06E5  1903               	skipnz
  1527  06E6  2EE8               	goto	l1593
  1528  06E7  2FD6               	goto	l1469
  1529  06E8                     l1593:
  1530                           
  1531                           ; Switch size 1, requested type "simple"
  1532                           ; Number of cases is 3, Range of values is 0 to 105
  1533                           ; switch strategies available:
  1534                           ; Name         Instructions Cycles
  1535                           ; simple_byte           10     6 (average)
  1536                           ; jumptable            260     6 (fixed)
  1537                           ;	Chosen strategy is simple_byte
  1538  06E8  0827               	movf	??_sprintf,w
  1539  06E9  3A00               	xorlw	0	; case 0
  1540  06EA  1903               	skipnz
  1541  06EB  2FE8               	goto	l1471
  1542  06EC  3A64               	xorlw	100	; case 100
  1543  06ED  1903               	skipnz
  1544  06EE  2EF3               	goto	l1413
  1545  06EF  3A0D               	xorlw	13	; case 105
  1546  06F0  1903               	skipnz
  1547  06F1  2EF3               	goto	l1413
  1548  06F2  2FD6               	goto	l1469
  1549  06F3                     l1413:
  1550                           
  1551                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned int)(*(int *)__va_arg((*(in
      +                          t **)ap), (int)0));
  1552  06F3  082A               	movf	sprintf@ap,w
  1553  06F4  0084               	movwf	4
  1554  06F5  1383               	bcf	3,7	;select IRP bank0
  1555  06F6  0800               	movf	0,w
  1556  06F7  00AD               	movwf	sprintf@val
  1557  06F8  0A84               	incf	4,f
  1558  06F9  0800               	movf	0,w
  1559  06FA  00AE               	movwf	sprintf@val+1
  1560  06FB                     l1415:
  1561  06FB  3002               	movlw	2
  1562  06FC  00A7               	movwf	??_sprintf
  1563  06FD  0827               	movf	??_sprintf,w
  1564  06FE  07AA               	addwf	sprintf@ap,f
  1565  06FF                     l1417:
  1566                           
  1567                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)val < 0) {
  1568  06FF  1FAE               	btfss	sprintf@val+1,7
  1569  0700  2F02               	goto	u701
  1570  0701  2F03               	goto	u700
  1571  0702                     u701:
  1572  0702  2F0C               	goto	l1423
  1573  0703                     u700:
  1574  0703                     l1419:
  1575                           
  1576                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
  1577  0703  3003               	movlw	3
  1578  0704  00A7               	movwf	??_sprintf
  1579  0705  0827               	movf	??_sprintf,w
  1580  0706  04AC               	iorwf	sprintf@flag,f
  1581  0707                     l1421:
  1582                           
  1583                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
  1584  0707  09AD               	comf	sprintf@val,f
  1585  0708  09AE               	comf	sprintf@val+1,f
  1586  0709  0AAD               	incf	sprintf@val,f
  1587  070A  1903               	skipnz
  1588  070B  0AAE               	incf	sprintf@val+1,f
  1589  070C                     l1423:
  1590                           
  1591                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
  1592  070C  01B2               	clrf	sprintf@c
  1593  070D  0AB2               	incf	sprintf@c,f
  1594  070E                     l1429:
  1595                           
  1596                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowers[c])
  1597  070E  0832               	movf	sprintf@c,w
  1598  070F  00A7               	movwf	??_sprintf
  1599  0710  0727               	addwf	??_sprintf,w
  1600  0711  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1601  0712  0084               	movwf	4
  1602  0713  120A  118A  200D  120A  118A  	fcall	stringdir
  1603  0718  00A8               	movwf	??_sprintf+1
  1604  0719  120A  118A  200D  120A  118A  	fcall	stringdir
  1605  071E  00A9               	movwf	??_sprintf+2
  1606  071F  0829               	movf	??_sprintf+2,w
  1607  0720  022E               	subwf	sprintf@val+1,w
  1608  0721  1D03               	skipz
  1609  0722  2F25               	goto	u715
  1610  0723  0828               	movf	??_sprintf+1,w
  1611  0724  022D               	subwf	sprintf@val,w
  1612  0725                     u715:
  1613  0725  1803               	skipnc
  1614  0726  2F28               	goto	u711
  1615  0727  2F29               	goto	u710
  1616  0728                     u711:
  1617  0728  2F2A               	goto	l1433
  1618  0729                     u710:
  1619  0729  2F34               	goto	l1435
  1620  072A                     l1433:
  1621  072A  3001               	movlw	1
  1622  072B  00A7               	movwf	??_sprintf
  1623  072C  0827               	movf	??_sprintf,w
  1624  072D  07B2               	addwf	sprintf@c,f
  1625  072E  3005               	movlw	5
  1626  072F  0632               	xorwf	sprintf@c,w
  1627  0730  1D03               	btfss	3,2
  1628  0731  2F33               	goto	u721
  1629  0732  2F34               	goto	u720
  1630  0733                     u721:
  1631  0733  2F0E               	goto	l1429
  1632  0734                     u720:
  1633  0734                     l1435:
  1634                           
  1635                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width && flag & 0x03
      +                          )
  1636  0734  0830               	movf	sprintf@width,w
  1637  0735  0431               	iorwf	sprintf@width+1,w
  1638  0736  1903               	btfsc	3,2
  1639  0737  2F39               	goto	u731
  1640  0738  2F3A               	goto	u730
  1641  0739                     u731:
  1642  0739  2F46               	goto	l303
  1643  073A                     u730:
  1644  073A                     l1437:
  1645  073A  082C               	movf	sprintf@flag,w
  1646  073B  3903               	andlw	3
  1647  073C  1903               	btfsc	3,2
  1648  073D  2F3F               	goto	u741
  1649  073E  2F40               	goto	u740
  1650  073F                     u741:
  1651  073F  2F46               	goto	l303
  1652  0740                     u740:
  1653  0740                     l1439:
  1654                           
  1655                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  1656  0740  30FF               	movlw	255
  1657  0741  07B0               	addwf	sprintf@width,f
  1658  0742  1803               	skipnc
  1659  0743  0AB1               	incf	sprintf@width+1,f
  1660  0744  30FF               	movlw	255
  1661  0745  07B1               	addwf	sprintf@width+1,f
  1662  0746                     l303:
  1663                           
  1664                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width > c)
  1665  0746  0831               	movf	sprintf@width+1,w
  1666  0747  3A80               	xorlw	128
  1667  0748  3C80               	sublw	128
  1668  0749  1D03               	skipz
  1669  074A  2F4D               	goto	u755
  1670  074B  0830               	movf	sprintf@width,w
  1671  074C  0232               	subwf	sprintf@c,w
  1672  074D                     u755:
  1673  074D  1803               	skipnc
  1674  074E  2F50               	goto	u751
  1675  074F  2F51               	goto	u750
  1676  0750                     u751:
  1677  0750  2F5D               	goto	l1443
  1678  0751                     u750:
  1679  0751                     l1441:
  1680                           
  1681                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -= c;
  1682  0751  1283               	bcf	3,5	;RP0=0, select bank0
  1683  0752  1303               	bcf	3,6	;RP1=0, select bank0
  1684  0753  0832               	movf	sprintf@c,w
  1685  0754  00A7               	movwf	??_sprintf
  1686  0755  01A8               	clrf	??_sprintf+1
  1687  0756  0827               	movf	??_sprintf,w
  1688  0757  02B0               	subwf	sprintf@width,f
  1689  0758  0828               	movf	??_sprintf+1,w
  1690  0759  1C03               	skipc
  1691  075A  03B1               	decf	sprintf@width+1,f
  1692  075B  02B1               	subwf	sprintf@width+1,f
  1693  075C  2F61               	goto	l1445
  1694  075D                     l1443:
  1695                           
  1696                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 0;
  1697  075D  1283               	bcf	3,5	;RP0=0, select bank0
  1698  075E  1303               	bcf	3,6	;RP1=0, select bank0
  1699  075F  01B0               	clrf	sprintf@width
  1700  0760  01B1               	clrf	sprintf@width+1
  1701  0761                     l1445:
  1702                           
  1703                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1704  0761  0830               	movf	sprintf@width,w
  1705  0762  0431               	iorwf	sprintf@width+1,w
  1706  0763  1903               	btfsc	3,2
  1707  0764  2F66               	goto	u761
  1708  0765  2F67               	goto	u760
  1709  0766                     u761:
  1710  0766  2F7E               	goto	l1453
  1711  0767                     u760:
  1712  0767                     l1447:
  1713                           
  1714                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp++ = (' ')));
  1715  0767  3020               	movlw	32
  1716  0768  00A7               	movwf	??_sprintf
  1717  0769  082F               	movf	sprintf@sp,w
  1718  076A  0084               	movwf	4
  1719  076B  0827               	movf	??_sprintf,w
  1720  076C  1383               	bcf	3,7	;select IRP bank0
  1721  076D  0080               	movwf	0
  1722  076E                     l1449:
  1723  076E  3001               	movlw	1
  1724  076F  00A7               	movwf	??_sprintf
  1725  0770  0827               	movf	??_sprintf,w
  1726  0771  07AF               	addwf	sprintf@sp,f
  1727  0772                     l1451:
  1728  0772  30FF               	movlw	255
  1729  0773  07B0               	addwf	sprintf@width,f
  1730  0774  1803               	skipnc
  1731  0775  0AB1               	incf	sprintf@width+1,f
  1732  0776  30FF               	movlw	255
  1733  0777  07B1               	addwf	sprintf@width+1,f
  1734  0778  0830               	movf	sprintf@width,w
  1735  0779  0431               	iorwf	sprintf@width+1,w
  1736  077A  1D03               	btfss	3,2
  1737  077B  2F7D               	goto	u771
  1738  077C  2F7E               	goto	u770
  1739  077D                     u771:
  1740  077D  2F67               	goto	l1447
  1741  077E                     u770:
  1742  077E                     l1453:
  1743                           
  1744                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1745  077E  082C               	movf	sprintf@flag,w
  1746  077F  3903               	andlw	3
  1747  0780  1903               	btfsc	3,2
  1748  0781  2F83               	goto	u781
  1749  0782  2F84               	goto	u780
  1750  0783                     u781:
  1751  0783  2F8F               	goto	l1459
  1752  0784                     u780:
  1753  0784                     l1455:
  1754                           
  1755                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
  1756  0784  302D               	movlw	45
  1757  0785  00A7               	movwf	??_sprintf
  1758  0786  082F               	movf	sprintf@sp,w
  1759  0787  0084               	movwf	4
  1760  0788  0827               	movf	??_sprintf,w
  1761  0789  1383               	bcf	3,7	;select IRP bank0
  1762  078A  0080               	movwf	0
  1763  078B                     l1457:
  1764  078B  3001               	movlw	1
  1765  078C  00A7               	movwf	??_sprintf
  1766  078D  0827               	movf	??_sprintf,w
  1767  078E  07AF               	addwf	sprintf@sp,f
  1768  078F                     l1459:
  1769                           
  1770                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1771  078F  0832               	movf	sprintf@c,w
  1772  0790  00A7               	movwf	??_sprintf
  1773  0791  0827               	movf	??_sprintf,w
  1774  0792  00AB               	movwf	sprintf@prec
  1775                           
  1776                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  1777  0793  2FCD               	goto	l1467
  1778  0794                     l1461:
  1779                           
  1780                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpowers[(unsigned char)prec]) %
      +                           10 + '0';
  1781  0794  300A               	movlw	10
  1782  0795  00F8               	movwf	___lwmod@divisor
  1783  0796  3000               	movlw	0
  1784  0797  00F9               	movwf	___lwmod@divisor+1
  1785  0798  082B               	movf	sprintf@prec,w
  1786  0799  00A7               	movwf	??_sprintf
  1787  079A  0727               	addwf	??_sprintf,w
  1788  079B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1789  079C  0084               	movwf	4
  1790  079D  120A  118A  200D  120A  118A  	fcall	stringdir
  1791  07A2  00F0               	movwf	___lwdiv@divisor
  1792  07A3  120A  118A  200D  120A  118A  	fcall	stringdir
  1793  07A8  00F1               	movwf	___lwdiv@divisor+1
  1794  07A9  082E               	movf	sprintf@val+1,w
  1795  07AA  00F3               	movwf	___lwdiv@dividend+1
  1796  07AB  082D               	movf	sprintf@val,w
  1797  07AC  00F2               	movwf	___lwdiv@dividend
  1798  07AD  120A  118A  2494  120A  118A  	fcall	___lwdiv
  1799  07B2  0871               	movf	?___lwdiv+1,w
  1800  07B3  00FB               	movwf	___lwmod@dividend+1
  1801  07B4  0870               	movf	?___lwdiv,w
  1802  07B5  00FA               	movwf	___lwmod@dividend
  1803  07B6  120A  118A  2418  120A  118A  	fcall	___lwmod
  1804  07BB  0878               	movf	?___lwmod,w
  1805  07BC  3E30               	addlw	48
  1806  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1807  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1808  07BF  00A8               	movwf	??_sprintf+1
  1809  07C0  0828               	movf	??_sprintf+1,w
  1810  07C1  00B2               	movwf	sprintf@c
  1811  07C2                     l1463:
  1812                           
  1813                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
  1814  07C2  0832               	movf	sprintf@c,w
  1815  07C3  00A7               	movwf	??_sprintf
  1816  07C4  082F               	movf	sprintf@sp,w
  1817  07C5  0084               	movwf	4
  1818  07C6  0827               	movf	??_sprintf,w
  1819  07C7  1383               	bcf	3,7	;select IRP bank0
  1820  07C8  0080               	movwf	0
  1821  07C9                     l1465:
  1822  07C9  3001               	movlw	1
  1823  07CA  00A7               	movwf	??_sprintf
  1824  07CB  0827               	movf	??_sprintf,w
  1825  07CC  07AF               	addwf	sprintf@sp,f
  1826  07CD                     l1467:
  1827                           
  1828                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  1829  07CD  30FF               	movlw	255
  1830  07CE  00A7               	movwf	??_sprintf
  1831  07CF  0827               	movf	??_sprintf,w
  1832  07D0  07AB               	addwf	sprintf@prec,f
  1833  07D1  0A2B               	incf	sprintf@prec,w
  1834  07D2  1D03               	btfss	3,2
  1835  07D3  2FD5               	goto	u791
  1836  07D4  2FD6               	goto	u790
  1837  07D5                     u791:
  1838  07D5  2F94               	goto	l1461
  1839  07D6                     u790:
  1840  07D6                     l1469:
  1841                           
  1842                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1843  07D6  3001               	movlw	1
  1844  07D7  07A0               	addwf	sprintf@f,f
  1845  07D8  30FF               	movlw	-1
  1846  07D9  0720               	addwf	sprintf@f,w
  1847  07DA  0084               	movwf	4
  1848  07DB  120A  118A  200D  120A  118A  	fcall	stringdir
  1849  07E0  00A7               	movwf	??_sprintf
  1850  07E1  0827               	movf	??_sprintf,w
  1851  07E2  00B2               	movwf	sprintf@c
  1852  07E3  0832               	movf	sprintf@c,w
  1853  07E4  1D03               	btfss	3,2
  1854  07E5  2FE7               	goto	u801
  1855  07E6  2FE8               	goto	u800
  1856  07E7                     u801:
  1857  07E7  2E6F               	goto	l1389
  1858  07E8                     u800:
  1859  07E8                     l1471:
  1860                           
  1861                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1862  07E8  082F               	movf	sprintf@sp,w
  1863  07E9  0084               	movwf	4
  1864  07EA  1383               	bcf	3,7	;select IRP bank0
  1865  07EB  0180               	clrf	0
  1866  07EC                     l314:
  1867  07EC  0008               	return
  1868  07ED                     __end_of_sprintf:
  1869                           
  1870                           	psect	text2
  1871  0323                     __ptext2:	
  1872 ;; *************** function _isdigit *****************
  1873 ;; Defined at:
  1874 ;;		line 8 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;  c               1    wreg     unsigned char 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  c               1    1[COMMON] unsigned char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;		None               void
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1888 ;;      Params:         0       0       0       0       0
  1889 ;;      Locals:         2       0       0       0       0
  1890 ;;      Temps:          0       0       0       0       0
  1891 ;;      Totals:         2       0       0       0       0
  1892 ;;Total ram usage:        2 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; This function calls:
  1895 ;;		Nothing
  1896 ;; This function is called by:
  1897 ;;		_sprintf
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           
  1902                           ;psect for function _isdigit
  1903  0323                     _isdigit:
  1904                           
  1905                           ;incstack = 0
  1906                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1907                           ;isdigit@c stored from wreg
  1908  0323  00F1               	movwf	isdigit@c
  1909  0324                     l1259:
  1910  0324  01F0               	clrf	_isdigit$995
  1911  0325                     l1261:
  1912  0325  303A               	movlw	58
  1913  0326  0271               	subwf	isdigit@c,w
  1914  0327  1803               	skipnc
  1915  0328  2B2A               	goto	u471
  1916  0329  2B2B               	goto	u470
  1917  032A                     u471:
  1918  032A  2B33               	goto	l1267
  1919  032B                     u470:
  1920  032B                     l1263:
  1921  032B  3030               	movlw	48
  1922  032C  0271               	subwf	isdigit@c,w
  1923  032D  1C03               	skipc
  1924  032E  2B30               	goto	u481
  1925  032F  2B31               	goto	u480
  1926  0330                     u481:
  1927  0330  2B33               	goto	l1267
  1928  0331                     u480:
  1929  0331                     l1265:
  1930  0331  01F0               	clrf	_isdigit$995
  1931  0332  0AF0               	incf	_isdigit$995,f
  1932  0333                     l1267:
  1933  0333  0C70               	rrf	_isdigit$995,w
  1934  0334                     l771:
  1935  0334  0008               	return
  1936  0335                     __end_of_isdigit:
  1937                           
  1938                           	psect	text3
  1939  03C8                     __ptext3:	
  1940 ;; *************** function ___wmul *****************
  1941 ;; Defined at:
  1942 ;;		line 15 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  multiplier      2    0[COMMON] unsigned int 
  1945 ;;  multiplicand    2    2[COMMON] unsigned int 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  product         2    4[COMMON] unsigned int 
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  2    0[COMMON] unsigned int 
  1950 ;; Registers used:
  1951 ;;		wreg, status,2, status,0
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1957 ;;      Params:         4       0       0       0       0
  1958 ;;      Locals:         2       0       0       0       0
  1959 ;;      Temps:          0       0       0       0       0
  1960 ;;      Totals:         6       0       0       0       0
  1961 ;;Total ram usage:        6 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; This function calls:
  1964 ;;		Nothing
  1965 ;; This function is called by:
  1966 ;;		_sprintf
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           
  1971                           ;psect for function ___wmul
  1972  03C8                     ___wmul:
  1973  03C8                     l1271:	
  1974                           ;incstack = 0
  1975                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1976                           
  1977  03C8  01F4               	clrf	___wmul@product
  1978  03C9  01F5               	clrf	___wmul@product+1
  1979  03CA                     l1273:
  1980  03CA  1C70               	btfss	___wmul@multiplier,0
  1981  03CB  2BCD               	goto	u491
  1982  03CC  2BCE               	goto	u490
  1983  03CD                     u491:
  1984  03CD  2BD4               	goto	l318
  1985  03CE                     u490:
  1986  03CE                     l1275:
  1987  03CE  0872               	movf	___wmul@multiplicand,w
  1988  03CF  07F4               	addwf	___wmul@product,f
  1989  03D0  1803               	skipnc
  1990  03D1  0AF5               	incf	___wmul@product+1,f
  1991  03D2  0873               	movf	___wmul@multiplicand+1,w
  1992  03D3  07F5               	addwf	___wmul@product+1,f
  1993  03D4                     l318:
  1994  03D4  3001               	movlw	1
  1995  03D5                     u505:
  1996  03D5  1003               	clrc
  1997  03D6  0DF2               	rlf	___wmul@multiplicand,f
  1998  03D7  0DF3               	rlf	___wmul@multiplicand+1,f
  1999  03D8  3EFF               	addlw	-1
  2000  03D9  1D03               	skipz
  2001  03DA  2BD5               	goto	u505
  2002  03DB                     l1277:
  2003  03DB  3001               	movlw	1
  2004  03DC                     u515:
  2005  03DC  1003               	clrc
  2006  03DD  0CF1               	rrf	___wmul@multiplier+1,f
  2007  03DE  0CF0               	rrf	___wmul@multiplier,f
  2008  03DF  3EFF               	addlw	-1
  2009  03E0  1D03               	skipz
  2010  03E1  2BDC               	goto	u515
  2011  03E2                     l1279:
  2012  03E2  0870               	movf	___wmul@multiplier,w
  2013  03E3  0471               	iorwf	___wmul@multiplier+1,w
  2014  03E4  1D03               	btfss	3,2
  2015  03E5  2BE7               	goto	u521
  2016  03E6  2BE8               	goto	u520
  2017  03E7                     u521:
  2018  03E7  2BCA               	goto	l1273
  2019  03E8                     u520:
  2020  03E8                     l1281:
  2021  03E8  0875               	movf	___wmul@product+1,w
  2022  03E9  00F1               	movwf	?___wmul+1
  2023  03EA  0874               	movf	___wmul@product,w
  2024  03EB  00F0               	movwf	?___wmul
  2025  03EC                     l320:
  2026  03EC  0008               	return
  2027  03ED                     __end_of___wmul:
  2028                           
  2029                           	psect	text4
  2030  0418                     __ptext4:	
  2031 ;; *************** function ___lwmod *****************
  2032 ;; Defined at:
  2033 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  divisor         2    8[COMMON] unsigned int 
  2036 ;;  dividend        2   10[COMMON] unsigned int 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  counter         1   13[COMMON] unsigned char 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  2    8[COMMON] unsigned int 
  2041 ;; Registers used:
  2042 ;;		wreg, status,2, status,0
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2048 ;;      Params:         4       0       0       0       0
  2049 ;;      Locals:         1       0       0       0       0
  2050 ;;      Temps:          1       0       0       0       0
  2051 ;;      Totals:         6       0       0       0       0
  2052 ;;Total ram usage:        6 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; This function calls:
  2055 ;;		Nothing
  2056 ;; This function is called by:
  2057 ;;		_sprintf
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           
  2062                           ;psect for function ___lwmod
  2063  0418                     ___lwmod:
  2064  0418                     l1311:	
  2065                           ;incstack = 0
  2066                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2067                           
  2068  0418  0878               	movf	___lwmod@divisor,w
  2069  0419  0479               	iorwf	___lwmod@divisor+1,w
  2070  041A  1903               	btfsc	3,2
  2071  041B  2C1D               	goto	u601
  2072  041C  2C1E               	goto	u600
  2073  041D                     u601:
  2074  041D  2C4D               	goto	l1329
  2075  041E                     u600:
  2076  041E                     l1313:
  2077  041E  01FD               	clrf	___lwmod@counter
  2078  041F  0AFD               	incf	___lwmod@counter,f
  2079  0420  2C2C               	goto	l1319
  2080  0421                     l1315:
  2081  0421  3001               	movlw	1
  2082  0422                     u615:
  2083  0422  1003               	clrc
  2084  0423  0DF8               	rlf	___lwmod@divisor,f
  2085  0424  0DF9               	rlf	___lwmod@divisor+1,f
  2086  0425  3EFF               	addlw	-1
  2087  0426  1D03               	skipz
  2088  0427  2C22               	goto	u615
  2089  0428                     l1317:
  2090  0428  3001               	movlw	1
  2091  0429  00FC               	movwf	??___lwmod
  2092  042A  087C               	movf	??___lwmod,w
  2093  042B  07FD               	addwf	___lwmod@counter,f
  2094  042C                     l1319:
  2095  042C  1FF9               	btfss	___lwmod@divisor+1,7
  2096  042D  2C2F               	goto	u621
  2097  042E  2C30               	goto	u620
  2098  042F                     u621:
  2099  042F  2C21               	goto	l1315
  2100  0430                     u620:
  2101  0430                     l1321:
  2102  0430  0879               	movf	___lwmod@divisor+1,w
  2103  0431  027B               	subwf	___lwmod@dividend+1,w
  2104  0432  1D03               	skipz
  2105  0433  2C36               	goto	u635
  2106  0434  0878               	movf	___lwmod@divisor,w
  2107  0435  027A               	subwf	___lwmod@dividend,w
  2108  0436                     u635:
  2109  0436  1C03               	skipc
  2110  0437  2C39               	goto	u631
  2111  0438  2C3A               	goto	u630
  2112  0439                     u631:
  2113  0439  2C40               	goto	l1325
  2114  043A                     u630:
  2115  043A                     l1323:
  2116  043A  0878               	movf	___lwmod@divisor,w
  2117  043B  02FA               	subwf	___lwmod@dividend,f
  2118  043C  0879               	movf	___lwmod@divisor+1,w
  2119  043D  1C03               	skipc
  2120  043E  03FB               	decf	___lwmod@dividend+1,f
  2121  043F  02FB               	subwf	___lwmod@dividend+1,f
  2122  0440                     l1325:
  2123  0440  3001               	movlw	1
  2124  0441                     u645:
  2125  0441  1003               	clrc
  2126  0442  0CF9               	rrf	___lwmod@divisor+1,f
  2127  0443  0CF8               	rrf	___lwmod@divisor,f
  2128  0444  3EFF               	addlw	-1
  2129  0445  1D03               	skipz
  2130  0446  2C41               	goto	u645
  2131  0447                     l1327:
  2132  0447  3001               	movlw	1
  2133  0448  02FD               	subwf	___lwmod@counter,f
  2134  0449  1D03               	btfss	3,2
  2135  044A  2C4C               	goto	u651
  2136  044B  2C4D               	goto	u650
  2137  044C                     u651:
  2138  044C  2C30               	goto	l1321
  2139  044D                     u650:
  2140  044D                     l1329:
  2141  044D  087B               	movf	___lwmod@dividend+1,w
  2142  044E  00F9               	movwf	?___lwmod+1
  2143  044F  087A               	movf	___lwmod@dividend,w
  2144  0450  00F8               	movwf	?___lwmod
  2145  0451                     l600:
  2146  0451  0008               	return
  2147  0452                     __end_of___lwmod:
  2148                           
  2149                           	psect	text5
  2150  0494                     __ptext5:	
  2151 ;; *************** function ___lwdiv *****************
  2152 ;; Defined at:
  2153 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  divisor         2    0[COMMON] unsigned int 
  2156 ;;  dividend        2    2[COMMON] unsigned int 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  quotient        2    5[COMMON] unsigned int 
  2159 ;;  counter         1    7[COMMON] unsigned char 
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  2    0[COMMON] unsigned int 
  2162 ;; Registers used:
  2163 ;;		wreg, status,2, status,0
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2169 ;;      Params:         4       0       0       0       0
  2170 ;;      Locals:         3       0       0       0       0
  2171 ;;      Temps:          1       0       0       0       0
  2172 ;;      Totals:         8       0       0       0       0
  2173 ;;Total ram usage:        8 bytes
  2174 ;; Hardware stack levels used:    1
  2175 ;; This function calls:
  2176 ;;		Nothing
  2177 ;; This function is called by:
  2178 ;;		_sprintf
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           
  2183                           ;psect for function ___lwdiv
  2184  0494                     ___lwdiv:
  2185  0494                     l1285:	
  2186                           ;incstack = 0
  2187                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2188                           
  2189  0494  01F5               	clrf	___lwdiv@quotient
  2190  0495  01F6               	clrf	___lwdiv@quotient+1
  2191  0496                     l1287:
  2192  0496  0870               	movf	___lwdiv@divisor,w
  2193  0497  0471               	iorwf	___lwdiv@divisor+1,w
  2194  0498  1903               	btfsc	3,2
  2195  0499  2C9B               	goto	u531
  2196  049A  2C9C               	goto	u530
  2197  049B                     u531:
  2198  049B  2CD3               	goto	l1307
  2199  049C                     u530:
  2200  049C                     l1289:
  2201  049C  01F7               	clrf	___lwdiv@counter
  2202  049D  0AF7               	incf	___lwdiv@counter,f
  2203  049E  2CAA               	goto	l1295
  2204  049F                     l1291:
  2205  049F  3001               	movlw	1
  2206  04A0                     u545:
  2207  04A0  1003               	clrc
  2208  04A1  0DF0               	rlf	___lwdiv@divisor,f
  2209  04A2  0DF1               	rlf	___lwdiv@divisor+1,f
  2210  04A3  3EFF               	addlw	-1
  2211  04A4  1D03               	skipz
  2212  04A5  2CA0               	goto	u545
  2213  04A6                     l1293:
  2214  04A6  3001               	movlw	1
  2215  04A7  00F4               	movwf	??___lwdiv
  2216  04A8  0874               	movf	??___lwdiv,w
  2217  04A9  07F7               	addwf	___lwdiv@counter,f
  2218  04AA                     l1295:
  2219  04AA  1FF1               	btfss	___lwdiv@divisor+1,7
  2220  04AB  2CAD               	goto	u551
  2221  04AC  2CAE               	goto	u550
  2222  04AD                     u551:
  2223  04AD  2C9F               	goto	l1291
  2224  04AE                     u550:
  2225  04AE                     l1297:
  2226  04AE  3001               	movlw	1
  2227  04AF                     u565:
  2228  04AF  1003               	clrc
  2229  04B0  0DF5               	rlf	___lwdiv@quotient,f
  2230  04B1  0DF6               	rlf	___lwdiv@quotient+1,f
  2231  04B2  3EFF               	addlw	-1
  2232  04B3  1D03               	skipz
  2233  04B4  2CAF               	goto	u565
  2234  04B5  0871               	movf	___lwdiv@divisor+1,w
  2235  04B6  0273               	subwf	___lwdiv@dividend+1,w
  2236  04B7  1D03               	skipz
  2237  04B8  2CBB               	goto	u575
  2238  04B9  0870               	movf	___lwdiv@divisor,w
  2239  04BA  0272               	subwf	___lwdiv@dividend,w
  2240  04BB                     u575:
  2241  04BB  1C03               	skipc
  2242  04BC  2CBE               	goto	u571
  2243  04BD  2CBF               	goto	u570
  2244  04BE                     u571:
  2245  04BE  2CC6               	goto	l1303
  2246  04BF                     u570:
  2247  04BF                     l1299:
  2248  04BF  0870               	movf	___lwdiv@divisor,w
  2249  04C0  02F2               	subwf	___lwdiv@dividend,f
  2250  04C1  0871               	movf	___lwdiv@divisor+1,w
  2251  04C2  1C03               	skipc
  2252  04C3  03F3               	decf	___lwdiv@dividend+1,f
  2253  04C4  02F3               	subwf	___lwdiv@dividend+1,f
  2254  04C5                     l1301:
  2255  04C5  1475               	bsf	___lwdiv@quotient,0
  2256  04C6                     l1303:
  2257  04C6  3001               	movlw	1
  2258  04C7                     u585:
  2259  04C7  1003               	clrc
  2260  04C8  0CF1               	rrf	___lwdiv@divisor+1,f
  2261  04C9  0CF0               	rrf	___lwdiv@divisor,f
  2262  04CA  3EFF               	addlw	-1
  2263  04CB  1D03               	skipz
  2264  04CC  2CC7               	goto	u585
  2265  04CD                     l1305:
  2266  04CD  3001               	movlw	1
  2267  04CE  02F7               	subwf	___lwdiv@counter,f
  2268  04CF  1D03               	btfss	3,2
  2269  04D0  2CD2               	goto	u591
  2270  04D1  2CD3               	goto	u590
  2271  04D2                     u591:
  2272  04D2  2CAE               	goto	l1297
  2273  04D3                     u590:
  2274  04D3                     l1307:
  2275  04D3  0876               	movf	___lwdiv@quotient+1,w
  2276  04D4  00F1               	movwf	?___lwdiv+1
  2277  04D5  0875               	movf	___lwdiv@quotient,w
  2278  04D6  00F0               	movwf	?___lwdiv
  2279  04D7                     l590:
  2280  04D7  0008               	return
  2281  04D8                     __end_of___lwdiv:
  2282                           
  2283                           	psect	text6
  2284  02D6                     __ptext6:	
  2285 ;; *************** function _spiWrite *****************
  2286 ;; Defined at:
  2287 ;;		line 34 in file "SPI.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  dat             1    wreg     unsigned char 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  dat             1    0[COMMON] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		wreg
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2301 ;;      Params:         0       0       0       0       0
  2302 ;;      Locals:         1       0       0       0       0
  2303 ;;      Temps:          0       0       0       0       0
  2304 ;;      Totals:         1       0       0       0       0
  2305 ;;Total ram usage:        1 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; This function calls:
  2308 ;;		Nothing
  2309 ;; This function is called by:
  2310 ;;		_main
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           
  2315                           ;psect for function _spiWrite
  2316  02D6                     _spiWrite:
  2317                           
  2318                           ;incstack = 0
  2319                           ; Regs used in _spiWrite: [wreg]
  2320                           ;spiWrite@dat stored from wreg
  2321  02D6  00F0               	movwf	spiWrite@dat
  2322  02D7                     l1333:
  2323                           
  2324                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  2325  02D7  0870               	movf	spiWrite@dat,w
  2326  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2327  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2328  02DA  0093               	movwf	19	;volatile
  2329  02DB                     l26:
  2330  02DB  0008               	return
  2331  02DC                     __end_of_spiWrite:
  2332                           
  2333                           	psect	text7
  2334  02F3                     __ptext7:	
  2335 ;; *************** function _spiRead *****************
  2336 ;; Defined at:
  2337 ;;		line 47 in file "SPI.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;		None
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;		None
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      unsigned char 
  2344 ;; Registers used:
  2345 ;;		wreg, status,2, status,0, pclath, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2351 ;;      Params:         0       0       0       0       0
  2352 ;;      Locals:         0       0       0       0       0
  2353 ;;      Temps:          0       0       0       0       0
  2354 ;;      Totals:         0       0       0       0       0
  2355 ;;Total ram usage:        0 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:    1
  2358 ;; This function calls:
  2359 ;;		_spiReceiveWait
  2360 ;; This function is called by:
  2361 ;;		_main
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           
  2366                           ;psect for function _spiRead
  2367  02F3                     _spiRead:
  2368  02F3                     l1335:	
  2369                           ;incstack = 0
  2370                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2371                           
  2372                           
  2373                           ;SPI.c: 49:     spiReceiveWait();
  2374  02F3  120A  118A  22DC  120A  118A  	fcall	_spiReceiveWait
  2375  02F8                     l1337:
  2376                           
  2377                           ;SPI.c: 50:     return(SSPBUF);
  2378  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2379  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2380  02FA  0813               	movf	19,w	;volatile
  2381  02FB                     l34:
  2382  02FB  0008               	return
  2383  02FC                     __end_of_spiRead:
  2384                           
  2385                           	psect	text8
  2386  02DC                     __ptext8:	
  2387 ;; *************** function _spiReceiveWait *****************
  2388 ;; Defined at:
  2389 ;;		line 29 in file "SPI.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		None
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2403 ;;      Params:         0       0       0       0       0
  2404 ;;      Locals:         0       0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0
  2406 ;;      Totals:         0       0       0       0       0
  2407 ;;Total ram usage:        0 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; This function calls:
  2410 ;;		Nothing
  2411 ;; This function is called by:
  2412 ;;		_spiRead
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           
  2417                           ;psect for function _spiReceiveWait
  2418  02DC                     _spiReceiveWait:
  2419  02DC                     l1229:	
  2420                           ;incstack = 0
  2421                           ; Regs used in _spiReceiveWait: []
  2422                           
  2423  02DC                     l20:	
  2424                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  2425                           
  2426  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  2427  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  2428  02DE  1C14               	btfss	20,0	;volatile
  2429  02DF  2AE1               	goto	u451
  2430  02E0  2AE2               	goto	u450
  2431  02E1                     u451:
  2432  02E1  2ADC               	goto	l20
  2433  02E2                     u450:
  2434  02E2                     l23:
  2435  02E2  0008               	return
  2436  02E3                     __end_of_spiReceiveWait:
  2437                           
  2438                           	psect	text9
  2439  0364                     __ptext9:	
  2440 ;; *************** function _setup *****************
  2441 ;; Defined at:
  2442 ;;		line 139 in file "main_master.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;		None
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;		None
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      void 
  2449 ;; Registers used:
  2450 ;;		wreg, status,2, status,0, pclath, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2456 ;;      Params:         0       0       0       0       0
  2457 ;;      Locals:         0       0       0       0       0
  2458 ;;      Temps:          0       0       0       0       0
  2459 ;;      Totals:         0       0       0       0       0
  2460 ;;Total ram usage:        0 bytes
  2461 ;; Hardware stack levels used:    1
  2462 ;; Hardware stack levels required when called:    1
  2463 ;; This function calls:
  2464 ;;		_spiInit
  2465 ;; This function is called by:
  2466 ;;		_main
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           
  2471                           ;psect for function _setup
  2472  0364                     _setup:
  2473  0364                     l1341:	
  2474                           ;incstack = 0
  2475                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2476                           
  2477                           
  2478                           ;main_master.c: 140:     ANSEL = 0;
  2479  0364  1683               	bsf	3,5	;RP0=1, select bank3
  2480  0365  1703               	bsf	3,6	;RP1=1, select bank3
  2481  0366  0188               	clrf	8	;volatile
  2482                           
  2483                           ;main_master.c: 141:     ANSELH = 0;
  2484  0367  0189               	clrf	9	;volatile
  2485  0368                     l1343:
  2486                           
  2487                           ;main_master.c: 143:     TRISC0 = 0;
  2488  0368  1683               	bsf	3,5	;RP0=1, select bank1
  2489  0369  1303               	bcf	3,6	;RP1=0, select bank1
  2490  036A  1007               	bcf	7,0	;volatile
  2491  036B                     l1345:
  2492                           
  2493                           ;main_master.c: 144:     TRISC1 = 0;
  2494  036B  1087               	bcf	7,1	;volatile
  2495  036C                     l1347:
  2496                           
  2497                           ;main_master.c: 145:     TRISC2 = 0;
  2498  036C  1107               	bcf	7,2	;volatile
  2499  036D                     l1349:
  2500                           
  2501                           ;main_master.c: 146:     TRISC7 = 1;
  2502  036D  1787               	bsf	7,7	;volatile
  2503                           
  2504                           ;main_master.c: 147:     TRISB = 0;
  2505  036E  0186               	clrf	6	;volatile
  2506                           
  2507                           ;main_master.c: 148:     TRISD = 0;
  2508  036F  0188               	clrf	8	;volatile
  2509                           
  2510                           ;main_master.c: 149:     PORTB = 0;
  2511  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2512  0371  1303               	bcf	3,6	;RP1=0, select bank0
  2513  0372  0186               	clrf	6	;volatile
  2514                           
  2515                           ;main_master.c: 150:     PORTD = 0;
  2516  0373  0188               	clrf	8	;volatile
  2517  0374                     l1351:
  2518                           
  2519                           ;main_master.c: 151:     PORTCbits.RC2 = 1;
  2520  0374  1507               	bsf	7,2	;volatile
  2521  0375                     l1353:
  2522                           
  2523                           ;main_master.c: 152:     PORTCbits.RC1 = 1;
  2524  0375  1487               	bsf	7,1	;volatile
  2525  0376                     l1355:
  2526                           
  2527                           ;main_master.c: 153:     PORTCbits.RC0 = 1;
  2528  0376  1407               	bsf	7,0	;volatile
  2529  0377                     l1357:
  2530                           
  2531                           ;main_master.c: 154:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_
      +                          IDLE_LOW, SPI_IDLE_2_ACTIVE);
  2532  0377  01F0               	clrf	spiInit@sDataSample
  2533  0378  01F1               	clrf	spiInit@sClockIdle
  2534  0379  01F2               	clrf	spiInit@sTransmitEdge
  2535  037A  3020               	movlw	32
  2536  037B  120A  118A  2335  120A  118A  	fcall	_spiInit
  2537  0380                     l107:
  2538  0380  0008               	return
  2539  0381                     __end_of_setup:
  2540                           
  2541                           	psect	text10
  2542  0335                     __ptext10:	
  2543 ;; *************** function _spiInit *****************
  2544 ;; Defined at:
  2545 ;;		line 12 in file "SPI.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  sType           1    wreg     enum E1264
  2548 ;;  sDataSample     1    0[COMMON] enum E1272
  2549 ;;  sClockIdle      1    1[COMMON] enum E1276
  2550 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  sType           1    3[COMMON] enum E1264
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		wreg, status,2, status,0
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2562 ;;      Params:         3       0       0       0       0
  2563 ;;      Locals:         1       0       0       0       0
  2564 ;;      Temps:          0       0       0       0       0
  2565 ;;      Totals:         4       0       0       0       0
  2566 ;;Total ram usage:        4 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_setup
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           
  2576                           ;psect for function _spiInit
  2577  0335                     _spiInit:
  2578                           
  2579                           ;incstack = 0
  2580                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2581                           ;spiInit@sType stored from wreg
  2582  0335  00F3               	movwf	spiInit@sType
  2583  0336                     l1219:
  2584                           
  2585                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  2586  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2587  0337  1303               	bcf	3,6	;RP1=0, select bank1
  2588  0338  1287               	bcf	7,5	;volatile
  2589                           
  2590                           ;SPI.c: 15:     if(sType & 0b00000100)
  2591  0339  1D73               	btfss	spiInit@sType,2
  2592  033A  2B3C               	goto	u441
  2593  033B  2B3D               	goto	u440
  2594  033C                     u441:
  2595  033C  2B41               	goto	l1225
  2596  033D                     u440:
  2597  033D                     l1221:
  2598                           
  2599                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  2600  033D  0872               	movf	spiInit@sTransmitEdge,w
  2601  033E  0094               	movwf	20	;volatile
  2602  033F                     l1223:
  2603                           
  2604                           ;SPI.c: 18:         TRISC3 = 1;
  2605  033F  1587               	bsf	7,3	;volatile
  2606                           
  2607                           ;SPI.c: 19:     }
  2608  0340  2B45               	goto	l16
  2609  0341                     l1225:
  2610                           
  2611                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2612  0341  0870               	movf	spiInit@sDataSample,w
  2613  0342  0472               	iorwf	spiInit@sTransmitEdge,w
  2614  0343  0094               	movwf	20	;volatile
  2615  0344                     l1227:
  2616                           
  2617                           ;SPI.c: 23:         TRISC3 = 0;
  2618  0344  1187               	bcf	7,3	;volatile
  2619  0345                     l16:	
  2620                           ;SPI.c: 24:     }
  2621                           
  2622                           
  2623                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  2624  0345  0873               	movf	spiInit@sType,w
  2625  0346  0471               	iorwf	spiInit@sClockIdle,w
  2626  0347  1283               	bcf	3,5	;RP0=0, select bank0
  2627  0348  1303               	bcf	3,6	;RP1=0, select bank0
  2628  0349  0094               	movwf	20	;volatile
  2629  034A                     l17:
  2630  034A  0008               	return
  2631  034B                     __end_of_spiInit:
  2632                           
  2633                           	psect	text11
  2634  03ED                     __ptext11:	
  2635 ;; *************** function _USART_Write_String *****************
  2636 ;; Defined at:
  2637 ;;		line 48 in file "USART.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  a               2    1[COMMON] PTR unsigned char 
  2640 ;;		 -> pantalla(20), STR_1(16), 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  i               1    4[COMMON] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2652 ;;      Params:         2       0       0       0       0
  2653 ;;      Locals:         1       0       0       0       0
  2654 ;;      Temps:          1       0       0       0       0
  2655 ;;      Totals:         4       0       0       0       0
  2656 ;;Total ram usage:        4 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    1
  2659 ;; This function calls:
  2660 ;;		_USART_Write
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           
  2667                           ;psect for function _USART_Write_String
  2668  03ED                     _USART_Write_String:
  2669  03ED                     l1379:	
  2670                           ;incstack = 0
  2671                           ; Regs used in _USART_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2672                           
  2673                           
  2674                           ;USART.c: 49:     uint8_t i;;USART.c: 50:     for(i=0;a[i]!='\0';i++){
  2675  03ED  01F4               	clrf	USART_Write_String@i
  2676  03EE  2C04               	goto	l1385
  2677  03EF                     l1381:
  2678                           
  2679                           ;USART.c: 51:         USART_Write(a[i]);
  2680  03EF  0874               	movf	USART_Write_String@i,w
  2681  03F0  0771               	addwf	USART_Write_String@a,w
  2682  03F1  0084               	movwf	4
  2683  03F2  0872               	movf	USART_Write_String@a+1,w
  2684  03F3  1803               	skipnc
  2685  03F4  0A72               	incf	USART_Write_String@a+1,w
  2686  03F5  00FF               	movwf	btemp+1
  2687  03F6  120A  118A  2003  120A  118A  	fcall	stringtab
  2688  03FB  120A  118A  22FC  120A  118A  	fcall	_USART_Write
  2689  0400                     l1383:
  2690                           
  2691                           ;USART.c: 52:     }
  2692  0400  3001               	movlw	1
  2693  0401  00F3               	movwf	??_USART_Write_String
  2694  0402  0873               	movf	??_USART_Write_String,w
  2695  0403  07F4               	addwf	USART_Write_String@i,f
  2696  0404                     l1385:
  2697  0404  0874               	movf	USART_Write_String@i,w
  2698  0405  0771               	addwf	USART_Write_String@a,w
  2699  0406  0084               	movwf	4
  2700  0407  0872               	movf	USART_Write_String@a+1,w
  2701  0408  1803               	skipnc
  2702  0409  0A72               	incf	USART_Write_String@a+1,w
  2703  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2704  040B  1303               	bcf	3,6	;RP1=0, select bank0
  2705  040C  00FF               	movwf	btemp+1
  2706  040D  120A  118A  2003  120A  118A  	fcall	stringtab
  2707  0412  3A00               	xorlw	0
  2708  0413  1D03               	skipz
  2709  0414  2C16               	goto	u661
  2710  0415  2C17               	goto	u660
  2711  0416                     u661:
  2712  0416  2BEF               	goto	l1381
  2713  0417                     u660:
  2714  0417                     l187:
  2715  0417  0008               	return
  2716  0418                     __end_of_USART_Write_String:
  2717                           
  2718                           	psect	text12
  2719  02FC                     __ptext12:	
  2720 ;; *************** function _USART_Write *****************
  2721 ;; Defined at:
  2722 ;;		line 43 in file "USART.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  a               1    wreg     unsigned char 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  a               1    0[COMMON] unsigned char 
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2736 ;;      Params:         0       0       0       0       0
  2737 ;;      Locals:         1       0       0       0       0
  2738 ;;      Temps:          0       0       0       0       0
  2739 ;;      Totals:         1       0       0       0       0
  2740 ;;Total ram usage:        1 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_main
  2746 ;;		_USART_Write_String
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           
  2751                           ;psect for function _USART_Write
  2752  02FC                     _USART_Write:
  2753                           
  2754                           ;incstack = 0
  2755                           ; Regs used in _USART_Write: [wreg]
  2756                           ;USART_Write@a stored from wreg
  2757  02FC  00F0               	movwf	USART_Write@a
  2758  02FD                     l1231:
  2759  02FD                     l178:	
  2760                           ;USART.c: 44:     while(!TRMT);
  2761                           
  2762  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  2763  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  2764  02FF  1C98               	btfss	24,1	;volatile
  2765  0300  2B02               	goto	u461
  2766  0301  2B03               	goto	u460
  2767  0302                     u461:
  2768  0302  2AFD               	goto	l178
  2769  0303                     u460:
  2770  0303                     l1233:
  2771                           
  2772                           ;USART.c: 45:     TXREG=a;
  2773  0303  0870               	movf	USART_Write@a,w
  2774  0304  1283               	bcf	3,5	;RP0=0, select bank0
  2775  0305  1303               	bcf	3,6	;RP1=0, select bank0
  2776  0306  0099               	movwf	25	;volatile
  2777  0307                     l181:
  2778  0307  0008               	return
  2779  0308                     __end_of_USART_Write:
  2780                           
  2781                           	psect	text13
  2782  02CB                     __ptext13:	
  2783 ;; *************** function _Set_Baud_Rate *****************
  2784 ;; Defined at:
  2785 ;;		line 11 in file "USART.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;		None
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      void 
  2792 ;; Registers used:
  2793 ;;		wreg
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2799 ;;      Params:         0       0       0       0       0
  2800 ;;      Locals:         0       0       0       0       0
  2801 ;;      Temps:          0       0       0       0       0
  2802 ;;      Totals:         0       0       0       0       0
  2803 ;;Total ram usage:        0 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_main
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           
  2813                           ;psect for function _Set_Baud_Rate
  2814  02CB                     _Set_Baud_Rate:
  2815  02CB                     l1373:	
  2816                           ;incstack = 0
  2817                           ; Regs used in _Set_Baud_Rate: [wreg]
  2818                           
  2819                           
  2820                           ;USART.c: 12:     SPBRG = 12;
  2821  02CB  300C               	movlw	12
  2822  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  2823  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  2824  02CE  0099               	movwf	25	;volatile
  2825  02CF                     l169:
  2826  02CF  0008               	return
  2827  02D0                     __end_of_Set_Baud_Rate:
  2828                           
  2829                           	psect	text14
  2830  0308                     __ptext14:	
  2831 ;; *************** function _LCD_clear *****************
  2832 ;; Defined at:
  2833 ;;		line 42 in file "LCD.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;		None
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;		None
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      void 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0, pclath, cstack
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2847 ;;      Params:         0       0       0       0       0
  2848 ;;      Locals:         0       0       0       0       0
  2849 ;;      Temps:          0       0       0       0       0
  2850 ;;      Totals:         0       0       0       0       0
  2851 ;;Total ram usage:        0 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; Hardware stack levels required when called:    2
  2854 ;; This function calls:
  2855 ;;		_LCD_Command
  2856 ;; This function is called by:
  2857 ;;		_main
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           
  2862                           ;psect for function _LCD_clear
  2863  0308                     _LCD_clear:
  2864  0308                     l1371:	
  2865                           ;incstack = 0
  2866                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  2867                           
  2868                           
  2869                           ;LCD.c: 43:     LCD_Command(0);
  2870  0308  3000               	movlw	0
  2871  0309  120A  118A  2381  120A  118A  	fcall	_LCD_Command
  2872                           
  2873                           ;LCD.c: 44:     LCD_Command(1);
  2874  030E  3001               	movlw	1
  2875  030F  120A  118A  2381  120A  118A  	fcall	_LCD_Command
  2876  0314                     l129:
  2877  0314  0008               	return
  2878  0315                     __end_of_LCD_clear:
  2879                           
  2880                           	psect	text15
  2881  0452                     __ptext15:	
  2882 ;; *************** function _LCD_Write_String *****************
  2883 ;; Defined at:
  2884 ;;		line 78 in file "LCD.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  a               2    3[COMMON] PTR unsigned char 
  2887 ;;		 -> STR_3(16), pantalla(20), 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  i               2    8[COMMON] int 
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  1    wreg      void 
  2892 ;; Registers used:
  2893 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2899 ;;      Params:         2       0       0       0       0
  2900 ;;      Locals:         2       0       0       0       0
  2901 ;;      Temps:          3       0       0       0       0
  2902 ;;      Totals:         7       0       0       0       0
  2903 ;;Total ram usage:        7 bytes
  2904 ;; Hardware stack levels used:    1
  2905 ;; Hardware stack levels required when called:    2
  2906 ;; This function calls:
  2907 ;;		_LCD_Write_Char
  2908 ;; This function is called by:
  2909 ;;		_main
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           
  2914                           ;psect for function _LCD_Write_String
  2915  0452                     _LCD_Write_String:
  2916  0452                     l1491:	
  2917                           ;incstack = 0
  2918                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2919                           
  2920                           
  2921                           ;LCD.c: 79:  int i;;LCD.c: 80:  for(i=0;a[i]!='\0';i++)
  2922  0452  01F8               	clrf	LCD_Write_String@i
  2923  0453  01F9               	clrf	LCD_Write_String@i+1
  2924  0454  2C77               	goto	l1497
  2925  0455                     l1493:
  2926                           
  2927                           ;LCD.c: 81:     LCD_Write_Char(a[i]);
  2928  0455  0878               	movf	LCD_Write_String@i,w
  2929  0456  0773               	addwf	LCD_Write_String@a,w
  2930  0457  00F6               	movwf	??_LCD_Write_String+1
  2931  0458  0874               	movf	LCD_Write_String@a+1,w
  2932  0459  00F5               	movwf	??_LCD_Write_String
  2933  045A  1803               	skipnc
  2934  045B  0AF5               	incf	??_LCD_Write_String,f
  2935  045C  1FF8               	btfss	LCD_Write_String@i,7
  2936  045D  2C5F               	goto	u830
  2937  045E  03F5               	decf	??_LCD_Write_String,f
  2938  045F                     u830:
  2939  045F  0875               	movf	??_LCD_Write_String,w
  2940  0460  00F7               	movwf	??_LCD_Write_String+2
  2941  0461  0877               	movf	??_LCD_Write_String+2,w
  2942  0462  1283               	bcf	3,5	;RP0=0, select bank0
  2943  0463  1303               	bcf	3,6	;RP1=0, select bank0
  2944  0464  00FF               	movwf	btemp+1
  2945  0465  0876               	movf	??_LCD_Write_String+1,w
  2946  0466  0084               	movwf	4
  2947  0467  120A  118A  2003  120A  118A  	fcall	stringtab
  2948  046C  120A  118A  234B  120A  118A  	fcall	_LCD_Write_Char
  2949  0471                     l1495:
  2950  0471  3001               	movlw	1
  2951  0472  07F8               	addwf	LCD_Write_String@i,f
  2952  0473  1803               	skipnc
  2953  0474  0AF9               	incf	LCD_Write_String@i+1,f
  2954  0475  3000               	movlw	0
  2955  0476  07F9               	addwf	LCD_Write_String@i+1,f
  2956  0477                     l1497:
  2957  0477  0878               	movf	LCD_Write_String@i,w
  2958  0478  0773               	addwf	LCD_Write_String@a,w
  2959  0479  00F6               	movwf	??_LCD_Write_String+1
  2960  047A  0874               	movf	LCD_Write_String@a+1,w
  2961  047B  00F5               	movwf	??_LCD_Write_String
  2962  047C  1803               	skipnc
  2963  047D  0AF5               	incf	??_LCD_Write_String,f
  2964  047E  1FF8               	btfss	LCD_Write_String@i,7
  2965  047F  2C81               	goto	u840
  2966  0480  03F5               	decf	??_LCD_Write_String,f
  2967  0481                     u840:
  2968  0481  0875               	movf	??_LCD_Write_String,w
  2969  0482  00F7               	movwf	??_LCD_Write_String+2
  2970  0483  0877               	movf	??_LCD_Write_String+2,w
  2971  0484  1283               	bcf	3,5	;RP0=0, select bank0
  2972  0485  1303               	bcf	3,6	;RP1=0, select bank0
  2973  0486  00FF               	movwf	btemp+1
  2974  0487  0876               	movf	??_LCD_Write_String+1,w
  2975  0488  0084               	movwf	4
  2976  0489  120A  118A  2003  120A  118A  	fcall	stringtab
  2977  048E  3A00               	xorlw	0
  2978  048F  1D03               	skipz
  2979  0490  2C92               	goto	u851
  2980  0491  2C93               	goto	u850
  2981  0492                     u851:
  2982  0492  2C55               	goto	l1493
  2983  0493                     u850:
  2984  0493                     l144:
  2985  0493  0008               	return
  2986  0494                     __end_of_LCD_Write_String:
  2987                           
  2988                           	psect	text16
  2989  034B                     __ptext16:	
  2990 ;; *************** function _LCD_Write_Char *****************
  2991 ;; Defined at:
  2992 ;;		line 10 in file "LCD.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;  a               1    wreg     unsigned char 
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;  a               1    2[COMMON] unsigned char 
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1    wreg      void 
  2999 ;; Registers used:
  3000 ;;		wreg, status,2, status,0, pclath, cstack
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3006 ;;      Params:         0       0       0       0       0
  3007 ;;      Locals:         1       0       0       0       0
  3008 ;;      Temps:          1       0       0       0       0
  3009 ;;      Totals:         2       0       0       0       0
  3010 ;;Total ram usage:        2 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; Hardware stack levels required when called:    1
  3013 ;; This function calls:
  3014 ;;		_LCD_Port
  3015 ;; This function is called by:
  3016 ;;		_LCD_Write_String
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           
  3021                           ;psect for function _LCD_Write_Char
  3022  034B                     _LCD_Write_Char:
  3023                           
  3024                           ;incstack = 0
  3025                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3026                           ;LCD_Write_Char@a stored from wreg
  3027  034B  00F2               	movwf	LCD_Write_Char@a
  3028  034C                     l1235:
  3029                           
  3030                           ;LCD.c: 11:     RE0 = 1;
  3031  034C  1283               	bcf	3,5	;RP0=0, select bank0
  3032  034D  1303               	bcf	3,6	;RP1=0, select bank0
  3033  034E  1409               	bsf	9,0	;volatile
  3034  034F                     l1237:
  3035                           
  3036                           ;LCD.c: 12:     LCD_Port(a);
  3037  034F  0872               	movf	LCD_Write_Char@a,w
  3038  0350  120A  118A  22D0  120A  118A  	fcall	_LCD_Port
  3039  0355                     l1239:
  3040                           
  3041                           ;LCD.c: 13:     RE1 = 1;
  3042  0355  1283               	bcf	3,5	;RP0=0, select bank0
  3043  0356  1303               	bcf	3,6	;RP1=0, select bank0
  3044  0357  1489               	bsf	9,1	;volatile
  3045  0358                     l1241:
  3046                           
  3047                           ;LCD.c: 14:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3048  0358  300D               	movlw	13
  3049  0359  00F1               	movwf	??_LCD_Write_Char
  3050  035A                     u967:
  3051  035A  0BF1               	decfsz	??_LCD_Write_Char,f
  3052  035B  2B5A               	goto	u967
  3053  035C                     l1243:
  3054                           
  3055                           ;LCD.c: 15:     RE1 = 0;
  3056  035C  1283               	bcf	3,5	;RP0=0, select bank0
  3057  035D  1303               	bcf	3,6	;RP1=0, select bank0
  3058  035E  1089               	bcf	9,1	;volatile
  3059  035F                     l1245:
  3060                           
  3061                           ;LCD.c: 16:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  3062  035F  3003               	movlw	3
  3063  0360  00F1               	movwf	??_LCD_Write_Char
  3064  0361                     u977:
  3065  0361  0BF1               	decfsz	??_LCD_Write_Char,f
  3066  0362  2B61               	goto	u977
  3067  0363                     l120:
  3068  0363  0008               	return
  3069  0364                     __end_of_LCD_Write_Char:
  3070                           
  3071                           	psect	text17
  3072  03A4                     __ptext17:	
  3073 ;; *************** function _LCD_Set_Cursor *****************
  3074 ;; Defined at:
  3075 ;;		line 64 in file "LCD.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  x               1    wreg     unsigned char 
  3078 ;;  y               1    4[COMMON] unsigned char 
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;  x               1    6[COMMON] unsigned char 
  3081 ;;  a               1    7[COMMON] unsigned char 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0, pclath, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3091 ;;      Params:         1       0       0       0       0
  3092 ;;      Locals:         2       0       0       0       0
  3093 ;;      Temps:          1       0       0       0       0
  3094 ;;      Totals:         4       0       0       0       0
  3095 ;;Total ram usage:        4 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:    2
  3098 ;; This function calls:
  3099 ;;		_LCD_Command
  3100 ;; This function is called by:
  3101 ;;		_main
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           
  3106                           ;psect for function _LCD_Set_Cursor
  3107  03A4                     _LCD_Set_Cursor:
  3108                           
  3109                           ;incstack = 0
  3110                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3111                           ;LCD_Set_Cursor@x stored from wreg
  3112  03A4  00F6               	movwf	LCD_Set_Cursor@x
  3113  03A5                     l1479:
  3114                           
  3115                           ;LCD.c: 65:  char a;;LCD.c: 66:  if(x == 1)
  3116  03A5  0376               	decf	LCD_Set_Cursor@x,w
  3117  03A6  1D03               	btfss	3,2
  3118  03A7  2BA9               	goto	u811
  3119  03A8  2BAA               	goto	u810
  3120  03A9                     u811:
  3121  03A9  2BB6               	goto	l1485
  3122  03AA                     u810:
  3123  03AA                     l1481:
  3124                           
  3125                           ;LCD.c: 67:  {;LCD.c: 68:         a = 0x80 + y;
  3126  03AA  0874               	movf	LCD_Set_Cursor@y,w
  3127  03AB  3E80               	addlw	128
  3128  03AC  00F5               	movwf	??_LCD_Set_Cursor
  3129  03AD  0875               	movf	??_LCD_Set_Cursor,w
  3130  03AE  00F7               	movwf	LCD_Set_Cursor@a
  3131  03AF                     l1483:
  3132                           
  3133                           ;LCD.c: 69:   LCD_Command(a);
  3134  03AF  0877               	movf	LCD_Set_Cursor@a,w
  3135  03B0  120A  118A  2381  120A  118A  	fcall	_LCD_Command
  3136                           
  3137                           ;LCD.c: 70:  }
  3138  03B5  2BC7               	goto	l138
  3139  03B6                     l1485:
  3140  03B6  3002               	movlw	2
  3141  03B7  0676               	xorwf	LCD_Set_Cursor@x,w
  3142  03B8  1D03               	btfss	3,2
  3143  03B9  2BBB               	goto	u821
  3144  03BA  2BBC               	goto	u820
  3145  03BB                     u821:
  3146  03BB  2BC7               	goto	l138
  3147  03BC                     u820:
  3148  03BC                     l1487:
  3149                           
  3150                           ;LCD.c: 72:  {;LCD.c: 73:   a = 0xC0 + y;
  3151  03BC  0874               	movf	LCD_Set_Cursor@y,w
  3152  03BD  3EC0               	addlw	192
  3153  03BE  00F5               	movwf	??_LCD_Set_Cursor
  3154  03BF  0875               	movf	??_LCD_Set_Cursor,w
  3155  03C0  00F7               	movwf	LCD_Set_Cursor@a
  3156  03C1                     l1489:
  3157                           
  3158                           ;LCD.c: 74:   LCD_Command(a);
  3159  03C1  0877               	movf	LCD_Set_Cursor@a,w
  3160  03C2  120A  118A  2381  120A  118A  	fcall	_LCD_Command
  3161  03C7                     l138:
  3162  03C7  0008               	return
  3163  03C8                     __end_of_LCD_Set_Cursor:
  3164                           
  3165                           	psect	text18
  3166  04D8                     __ptext18:	
  3167 ;; *************** function _LCD_Init *****************
  3168 ;; Defined at:
  3169 ;;		line 47 in file "LCD.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;		None
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0, pclath, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3183 ;;      Params:         0       0       0       0       0
  3184 ;;      Locals:         0       0       0       0       0
  3185 ;;      Temps:          2       0       0       0       0
  3186 ;;      Totals:         2       0       0       0       0
  3187 ;;Total ram usage:        2 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    2
  3190 ;; This function calls:
  3191 ;;		_LCD_Command
  3192 ;;		_LCD_Port
  3193 ;; This function is called by:
  3194 ;;		_main
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           
  3199                           ;psect for function _LCD_Init
  3200  04D8                     _LCD_Init:
  3201  04D8                     l1359:	
  3202                           ;incstack = 0
  3203                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3204                           
  3205                           
  3206                           ;LCD.c: 48:     RE0=0;
  3207  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  3208  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  3209  04DA  1009               	bcf	9,0	;volatile
  3210                           
  3211                           ;LCD.c: 49:     RE1=0;
  3212  04DB  1089               	bcf	9,1	;volatile
  3213  04DC                     l1361:
  3214                           
  3215                           ;LCD.c: 50:     LCD_Port(0x00);
  3216  04DC  3000               	movlw	0
  3217  04DD  120A  118A  22D0  120A  118A  	fcall	_LCD_Port
  3218  04E2                     l1363:
  3219                           
  3220                           ;LCD.c: 51:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3221  04E2  301A               	movlw	26
  3222  04E3  00F5               	movwf	??_LCD_Init+1
  3223  04E4  30F8               	movlw	248
  3224  04E5  00F4               	movwf	??_LCD_Init
  3225  04E6                     u987:
  3226  04E6  0BF4               	decfsz	??_LCD_Init,f
  3227  04E7  2CE6               	goto	u987
  3228  04E8  0BF5               	decfsz	??_LCD_Init+1,f
  3229  04E9  2CE6               	goto	u987
  3230  04EA  0000               	nop
  3231  04EB                     l1365:
  3232                           
  3233                           ;LCD.c: 52:     LCD_Command(0x30);
  3234  04EB  3030               	movlw	48
  3235  04EC  120A  118A  2381  120A  118A  	fcall	_LCD_Command
  3236                           
  3237                           ;LCD.c: 53:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3238  04F1  3007               	movlw	7
  3239  04F2  00F5               	movwf	??_LCD_Init+1
  3240  04F3  307D               	movlw	125
  3241  04F4  00F4               	movwf	??_LCD_Init
  3242  04F5                     u997:
  3243  04F5  0BF4               	decfsz	??_LCD_Init,f
  3244  04F6  2CF5               	goto	u997
  3245  04F7  0BF5               	decfsz	??_LCD_Init+1,f
  3246  04F8  2CF5               	goto	u997
  3247  04F9                     l1367:
  3248                           
  3249                           ;LCD.c: 54:     LCD_Command(0x30);
  3250  04F9  3030               	movlw	48
  3251  04FA  120A  118A  2381  120A  118A  	fcall	_LCD_Command
  3252  04FF                     l1369:
  3253                           
  3254                           ;LCD.c: 55:     _delay((unsigned long)((11)*(4000000/4000.0)));
  3255  04FF  300F               	movlw	15
  3256  0500  00F5               	movwf	??_LCD_Init+1
  3257  0501  3047               	movlw	71
  3258  0502  00F4               	movwf	??_LCD_Init
  3259  0503                     u1007:
  3260  0503  0BF4               	decfsz	??_LCD_Init,f
  3261  0504  2D03               	goto	u1007
  3262  0505  0BF5               	decfsz	??_LCD_Init+1,f
  3263  0506  2D03               	goto	u1007
  3264  0507  2D08               	nop2
  3265                           
  3266                           ;LCD.c: 56:     LCD_Command(0x30);
  3267  0508  3030               	movlw	48
  3268  0509  120A  118A  2381  120A  118A  	fcall	_LCD_Command
  3269                           
  3270                           ;LCD.c: 57:     LCD_Command(0x38);
  3271  050E  3038               	movlw	56
  3272  050F  120A  118A  2381  120A  118A  	fcall	_LCD_Command
  3273                           
  3274                           ;LCD.c: 58:     LCD_Command(0x0C);
  3275  0514  300C               	movlw	12
  3276  0515  120A  118A  2381  120A  118A  	fcall	_LCD_Command
  3277                           
  3278                           ;LCD.c: 59:     LCD_Command(0x01);
  3279  051A  3001               	movlw	1
  3280  051B  120A  118A  2381  120A  118A  	fcall	_LCD_Command
  3281                           
  3282                           ;LCD.c: 60:     LCD_Command(0x06);
  3283  0520  3006               	movlw	6
  3284  0521  120A  118A  2381  120A  118A  	fcall	_LCD_Command
  3285  0526                     l132:
  3286  0526  0008               	return
  3287  0527                     __end_of_LCD_Init:
  3288                           
  3289                           	psect	text19
  3290  0381                     __ptext19:	
  3291 ;; *************** function _LCD_Command *****************
  3292 ;; Defined at:
  3293 ;;		line 33 in file "LCD.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  a               1    wreg     unsigned char 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;  a               1    3[COMMON] unsigned char 
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      void 
  3300 ;; Registers used:
  3301 ;;		wreg, status,2, status,0, pclath, cstack
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3307 ;;      Params:         0       0       0       0       0
  3308 ;;      Locals:         1       0       0       0       0
  3309 ;;      Temps:          2       0       0       0       0
  3310 ;;      Totals:         3       0       0       0       0
  3311 ;;Total ram usage:        3 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; Hardware stack levels required when called:    1
  3314 ;; This function calls:
  3315 ;;		_LCD_Port
  3316 ;; This function is called by:
  3317 ;;		_LCD_clear
  3318 ;;		_LCD_Init
  3319 ;;		_LCD_Set_Cursor
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           
  3324                           ;psect for function _LCD_Command
  3325  0381                     _LCD_Command:
  3326                           
  3327                           ;incstack = 0
  3328                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  3329                           ;LCD_Command@a stored from wreg
  3330  0381  00F3               	movwf	LCD_Command@a
  3331  0382                     l1247:
  3332                           
  3333                           ;LCD.c: 34:     RE0=0;
  3334  0382  1283               	bcf	3,5	;RP0=0, select bank0
  3335  0383  1303               	bcf	3,6	;RP1=0, select bank0
  3336  0384  1009               	bcf	9,0	;volatile
  3337  0385                     l1249:
  3338                           
  3339                           ;LCD.c: 35:     LCD_Port(a);
  3340  0385  0873               	movf	LCD_Command@a,w
  3341  0386  120A  118A  22D0  120A  118A  	fcall	_LCD_Port
  3342  038B                     l1251:
  3343                           
  3344                           ;LCD.c: 36:     RE1=1;
  3345  038B  1283               	bcf	3,5	;RP0=0, select bank0
  3346  038C  1303               	bcf	3,6	;RP1=0, select bank0
  3347  038D  1489               	bsf	9,1	;volatile
  3348  038E                     l1253:
  3349                           
  3350                           ;LCD.c: 37:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3351  038E  3006               	movlw	6
  3352  038F  00F2               	movwf	??_LCD_Command+1
  3353  0390  3030               	movlw	48
  3354  0391  00F1               	movwf	??_LCD_Command
  3355  0392                     u1017:
  3356  0392  0BF1               	decfsz	??_LCD_Command,f
  3357  0393  2B92               	goto	u1017
  3358  0394  0BF2               	decfsz	??_LCD_Command+1,f
  3359  0395  2B92               	goto	u1017
  3360  0396  0000               	nop
  3361  0397                     l1255:
  3362                           
  3363                           ;LCD.c: 38:     RE1=0;
  3364  0397  1283               	bcf	3,5	;RP0=0, select bank0
  3365  0398  1303               	bcf	3,6	;RP1=0, select bank0
  3366  0399  1089               	bcf	9,1	;volatile
  3367  039A                     l1257:
  3368                           
  3369                           ;LCD.c: 39:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3370  039A  3003               	movlw	3
  3371  039B  00F2               	movwf	??_LCD_Command+1
  3372  039C  3097               	movlw	151
  3373  039D  00F1               	movwf	??_LCD_Command
  3374  039E                     u1027:
  3375  039E  0BF1               	decfsz	??_LCD_Command,f
  3376  039F  2B9E               	goto	u1027
  3377  03A0  0BF2               	decfsz	??_LCD_Command+1,f
  3378  03A1  2B9E               	goto	u1027
  3379  03A2  2BA3               	nop2
  3380  03A3                     l126:
  3381  03A3  0008               	return
  3382  03A4                     __end_of_LCD_Command:
  3383                           
  3384                           	psect	text20
  3385  02D0                     __ptext20:	
  3386 ;; *************** function _LCD_Port *****************
  3387 ;; Defined at:
  3388 ;;		line 19 in file "LCD.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  a               1    wreg     unsigned char 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  a               1    0[COMMON] unsigned char 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1    wreg      void 
  3395 ;; Registers used:
  3396 ;;		wreg
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3402 ;;      Params:         0       0       0       0       0
  3403 ;;      Locals:         1       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0
  3405 ;;      Totals:         1       0       0       0       0
  3406 ;;Total ram usage:        1 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_LCD_Write_Char
  3412 ;;		_LCD_Command
  3413 ;;		_LCD_Init
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           
  3418                           ;psect for function _LCD_Port
  3419  02D0                     _LCD_Port:
  3420                           
  3421                           ;incstack = 0
  3422                           ; Regs used in _LCD_Port: [wreg]
  3423                           ;LCD_Port@a stored from wreg
  3424  02D0  00F0               	movwf	LCD_Port@a
  3425  02D1                     l1217:
  3426                           
  3427                           ;LCD.c: 20:     PORTD = a;
  3428  02D1  0870               	movf	LCD_Port@a,w
  3429  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  3430  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  3431  02D4  0088               	movwf	8	;volatile
  3432  02D5                     l123:
  3433  02D5  0008               	return
  3434  02D6                     __end_of_LCD_Port:
  3435                           
  3436                           	psect	text21
  3437  0315                     __ptext21:	
  3438 ;; *************** function _Init_Transmit *****************
  3439 ;; Defined at:
  3440 ;;		line 15 in file "USART.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		None
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3454 ;;      Params:         0       0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0
  3457 ;;      Totals:         0       0       0       0       0
  3458 ;;Total ram usage:        0 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_main
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           
  3468                           ;psect for function _Init_Transmit
  3469  0315                     _Init_Transmit:
  3470  0315                     l1375:	
  3471                           ;incstack = 0
  3472                           ; Regs used in _Init_Transmit: []
  3473                           
  3474                           
  3475                           ;USART.c: 16:     TXSTAbits.TXEN = 1;
  3476  0315  1683               	bsf	3,5	;RP0=1, select bank1
  3477  0316  1303               	bcf	3,6	;RP1=0, select bank1
  3478  0317  1698               	bsf	24,5	;volatile
  3479                           
  3480                           ;USART.c: 19:     PIR1bits.TXIF = 0;
  3481  0318  1283               	bcf	3,5	;RP0=0, select bank0
  3482  0319  1303               	bcf	3,6	;RP1=0, select bank0
  3483  031A  120C               	bcf	12,4	;volatile
  3484                           
  3485                           ;USART.c: 20:     PIE1bits.TXIE = 0;
  3486  031B  1683               	bsf	3,5	;RP0=1, select bank1
  3487  031C  1303               	bcf	3,6	;RP1=0, select bank1
  3488  031D  120C               	bcf	12,4	;volatile
  3489                           
  3490                           ;USART.c: 21:     INTCONbits.GIE = 0;
  3491  031E  138B               	bcf	11,7	;volatile
  3492                           
  3493                           ;USART.c: 22:     INTCONbits.PEIE = 0;
  3494  031F  130B               	bcf	11,6	;volatile
  3495                           
  3496                           ;USART.c: 24:     TRISCbits.TRISC7 = 1;
  3497  0320  1787               	bsf	7,7	;volatile
  3498                           
  3499                           ;USART.c: 25:     TRISCbits.TRISC6 = 0;
  3500  0321  1307               	bcf	7,6	;volatile
  3501  0322                     l172:
  3502  0322  0008               	return
  3503  0323                     __end_of_Init_Transmit:
  3504                           
  3505                           	psect	text22
  3506  02E3                     __ptext22:	
  3507 ;; *************** function _Init_Receive *****************
  3508 ;; Defined at:
  3509 ;;		line 30 in file "USART.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;		None
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;		None
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1    wreg      void 
  3516 ;; Registers used:
  3517 ;;		None
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3523 ;;      Params:         0       0       0       0       0
  3524 ;;      Locals:         0       0       0       0       0
  3525 ;;      Temps:          0       0       0       0       0
  3526 ;;      Totals:         0       0       0       0       0
  3527 ;;Total ram usage:        0 bytes
  3528 ;; Hardware stack levels used:    1
  3529 ;; This function calls:
  3530 ;;		Nothing
  3531 ;; This function is called by:
  3532 ;;		_main
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           
  3537                           ;psect for function _Init_Receive
  3538  02E3                     _Init_Receive:
  3539  02E3                     l1377:	
  3540                           ;incstack = 0
  3541                           ; Regs used in _Init_Receive: []
  3542                           
  3543                           
  3544                           ;USART.c: 31:     TXSTAbits.SYNC = 0;
  3545  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  3546  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  3547  02E5  1218               	bcf	24,4	;volatile
  3548                           
  3549                           ;USART.c: 32:     RCSTAbits.SPEN = 1;
  3550  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  3551  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  3552  02E8  1798               	bsf	24,7	;volatile
  3553                           
  3554                           ;USART.c: 37:     RCSTAbits.CREN = 1;
  3555  02E9  1618               	bsf	24,4	;volatile
  3556  02EA                     l175:
  3557  02EA  0008               	return
  3558  02EB                     __end_of_Init_Receive:
  3559  007E                     btemp	set	126	;btemp
  3560  007E                     wtemp0	set	126
  3561                           
  3562                           	psect	config
  3563                           
  3564                           ;Config register CONFIG1 @ 0x2007
  3565                           ;	Oscillator Selection bits
  3566                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  3567                           ;	Watchdog Timer Enable bit
  3568                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3569                           ;	Power-up Timer Enable bit
  3570                           ;	PWRTE = OFF, PWRT disabled
  3571                           ;	RE3/MCLR pin function select bit
  3572                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3573                           ;	Code Protection bit
  3574                           ;	CP = OFF, Program memory code protection is disabled
  3575                           ;	Data Code Protection bit
  3576                           ;	CPD = OFF, Data memory code protection is disabled
  3577                           ;	Brown Out Reset Selection bits
  3578                           ;	BOREN = OFF, BOR disabled
  3579                           ;	Internal External Switchover bit
  3580                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3581                           ;	Fail-Safe Clock Monitor Enabled bit
  3582                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3583                           ;	Low Voltage Programming Enable bit
  3584                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3585                           ;	In-Circuit Debugger Mode bit
  3586                           ;	DEBUG = 0x1, unprogrammed default
  3587  2007                     	org	8199
  3588  2007  20D6               	dw	8406
  3589                           
  3590                           ;Config register CONFIG2 @ 0x2008
  3591                           ;	Brown-out Reset Selection bit
  3592                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3593                           ;	Flash Program Memory Self Write Enable bits
  3594                           ;	WRT = OFF, Write protection off
  3595  2008                     	org	8200
  3596  2008  3FFF               	dw	16383

Data Sizes:
    Strings     46
    Constant    10
    Data        1
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     26      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_2(CODE[14]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> pantalla(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    USART_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> pantalla(BANK0[20]), STR_1(CODE[16]), 

    LCD_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[16]), pantalla(BANK0[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_spiInit
    _USART_Write_String->_USART_Write
    _LCD_clear->_LCD_Command
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Command
    _LCD_Init->_LCD_Command
    _LCD_Command->_LCD_Port

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    3190
                                             19 BANK0      7     7      0
                       _Init_Receive
                      _Init_Transmit
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                          _LCD_clear
                      _Set_Baud_Rate
                        _USART_Write
                 _USART_Write_String
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    20      7    1796
                                              0 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _USART_Write_String                                   4     2      2     264
                                              1 COMMON     4     2      2
                        _USART_Write
 ---------------------------------------------------------------------------------
 (2) _USART_Write                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Set_Baud_Rate                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            0     0      0      44
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2     286
                                              3 COMMON     7     5      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     330
                                              4 COMMON     4     3      1
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                        _LCD_Command
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_Transmit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Receive                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Receive
   _Init_Transmit
   _LCD_Init
     _LCD_Command
       _LCD_Port
     _LCD_Port
   _LCD_Set_Cursor
     _LCD_Command
       _LCD_Port
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _LCD_clear
     _LCD_Command
       _LCD_Port
   _Set_Baud_Rate
   _USART_Write
   _USART_Write_String
     _USART_Write
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1A      32       5       62.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      40      12        0.0%
ABS                  0      0      40       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 10:13:14 2021

     __size_of_Init_Transmit 000E                            pc 0002                 ?_LCD_Command 0070  
                _SSPSTATbits 0094                           l20 02DC                           l23 02E2  
                         l16 0345                           l17 034A                           l34 02FB  
                         l26 02DB                           fsr 0004          ___wmul@multiplicand 0072  
                        l120 0363                          l123 02D5                          l107 0380  
                        l132 0526                          l126 03A3                          l303 0746  
                        l144 0493                          l320 03EC                          l129 0314  
                        l138 03C7                          l314 07EC                          l172 0322  
                        l181 0307                          l318 03D4                          l175 02EA  
                        _ADC 003C                          l600 0451                          l169 02CF  
                        l178 02FD                          l187 0417                          l590 04D7  
                        l771 0334                          _RE0 0048                          _RE1 0049  
                        u440 033D                          u600 041E                          u520 03E8  
                        u441 033C                          u601 041D                          u521 03E7  
                        u505 03D5                          u450 02E2                          u530 049C  
                        u451 02E1                          u531 049B                          u515 03DC  
                        u460 0303                          u620 0430                          u700 0703  
                        u461 0302                          u621 042F                          u701 0702  
                        u550 04AE                          u630 043A                          u470 032B  
                        u710 0729                          u551 04AD                          u631 0439  
                        u615 0422                          u471 032A                          u711 0728  
                        u480 0331                          u800 07E8                          u720 0734  
                        u545 04A0                          u481 0330                          u801 07E7  
                        u721 0733                          u810 03AA                          u570 04BF  
                        u650 044D                          u490 03CE                          u730 073A  
                        u811 03A9                          u571 04BE                          u651 044C  
                        u635 0436                          u491 03CD                          u731 0739  
                        u715 0725                          u820 03BC                          u660 0417  
                        u740 0740                          u821 03BB                          u661 0416  
                        u565 04AF                          u645 0441                          u741 073F  
                        u830 045F                          u590 04D3                          u750 0751  
                        u670 0675                          u591 04D2                          u575 04BB  
                        u751 0750                          u671 0674                          u840 0481  
                        u760 0767                          u680 0694                          u585 04C7  
                        u761 0766                          u681 0693                          u850 0493  
                        u770 077E                          u690 06D4                          u851 0492  
                        u771 077D                          u755 074D                          u691 06D3  
                        u907 0602                          u780 0784                          u781 0783  
                        u917 061C                          u790 07D6                          u791 07D5  
                        u927 0629                          u937 0636                          u947 0652  
                        u867 05BF                          u957 065F                          u877 05CE  
                        u967 035A                          u887 05E8                          u977 0361  
                        u897 05F5                          u987 04E6                          u997 04F5  
                        fsr0 0004                          indf 0000               _LCD_Set_Cursor 03A4  
                       l1221 033D                         l1301 04C5                         l1231 02FD  
                       l1223 033F                         l1303 04C6                         l1311 0418  
                       l1217 02D1                         l1241 0358                         l1233 0303  
                       l1225 0341                         l1305 04CD                         l1321 0430  
                       l1313 041E                         l1401 0698                         l1251 038B  
                       l1243 035C                         l1235 034C                         l1227 0344  
                       l1219 0336                         l1307 04D3                         l1323 043A  
                       l1315 0421                         l1403 06AD                         l1411 06D4  
                       l1253 038E                         l1245 035F                         l1237 034F  
                       l1341 0364                         l1229 02DC                         l1333 02D7  
                       l1325 0440                         l1317 0428                         l1261 0325  
                       l1421 0707                         l1413 06F3                         l1405 06C0  
                       l1501 053B                         l1255 0397                         l1247 0382  
                       l1239 0355                         l1351 0374                         l1343 0368  
                       l1335 02F3                         l1327 0447                         l1319 042C  
                       l1271 03C8                         l1263 032B                         l1423 070C  
                       l1415 06FB                         l1407 06C4                         l1511 055A  
                       l1503 0540                         l1257 039A                         l1249 0385  
                       l1361 04DC                         l1353 0375                         l1345 036B  
                       l1337 02F8                         l1329 044D                         l1281 03E8  
                       l1273 03CA                         l1265 0331                         l1441 0751  
                       l1433 072A                         l1417 06FF                         l1521 0595  
                       l1513 057B                         l1505 0545                         l1363 04E2  
                       l1371 0308                         l1355 0376                         l1347 036C  
                       l1291 049F                         l1275 03CE                         l1267 0333  
                       l1259 0324                         l1451 0772                         l1443 075D  
                       l1435 0734                         l1419 0703                         l1531 05C8  
                       l1523 059D                         l1515 0584                         l1507 054E  
                       l1365 04EB                         l1373 02CB                         l1381 03EF  
                       l1357 0377                         l1349 036D                         l1293 04A6  
                       l1285 0494                         l1277 03DB                         l1461 0794  
                       l1453 077E                         l1445 0761                         l1437 073A  
                       l1429 070E                         l1541 05EF                         l1533 05D2  
                       l1525 05AE                         l1517 058A                         l1509 0554  
                       l1375 0315                         l1367 04F9                         l1359 04D8  
                       l1383 0400                         l1295 04AA                         l1287 0496  
                       l1279 03E2                         l1463 07C2                         l1455 0784  
                       l1447 0767                         l1439 0740                         l1471 07E8  
                       l1391 0675                         l1551 0616                         l1543 05F9  
                       l1535 05D8                         l1527 05B7                         l1519 0590  
                       l1377 02E3                         l1369 04FF                         l1481 03AA  
                       l1385 0404                         l1297 04AE                         l1289 049C  
                       l1465 07C9                         l1457 078B                         l1449 076E  
                       l1393 067C                         l1561 063A                         l1553 0620  
                       l1545 05FC                         l1537 05E2                         l1529 05C5  
                       l1483 03AF                         l1491 0452                         l1379 03ED  
                       l1299 04BF                         l1467 07CD                         l1459 078F  
                       l1395 0681                         l1387 066A                         l1571 0659  
                       l1563 0640                         l1555 0623                         l1547 0606  
                       l1539 05EC                         l1485 03B6                         l1493 0455  
                       l1397 0684                         l1389 066F                         l1469 07D6  
                       l1565 064A                         l1557 062D                         l1549 060C  
                       l1487 03BC                         l1479 03A5                         l1495 0471  
                       l1399 0694                         l1567 064C                         l1559 0630  
                       l1489 03C1                         l1497 0477                         l1593 06E8  
                       l1569 0656                         l1499 0527                         STR_1 001D  
                       STR_2 003D                         STR_3 002D                         u1007 0503  
                       u1017 0392                         u1027 039E                         _CONT 003B  
                       _RCIF 0065                         _TEMP 0051                         _TRMT 04C1  
          ?_LCD_Write_String 0073  __size_of_USART_Write_String 002B                         _main 0527  
                       btemp 007E                         start 0000           ??_LCD_Write_String 0075  
         __size_of_LCD_clear 000D                ?_Init_Receive 0070             __end_of_LCD_Init 0527  
           __end_of_LCD_Port 02D6                        ?_main 0070                        _ANSEL 0188  
            __end_of___lwdiv 04D8              __end_of___lwmod 0452                        _RCREG 001A  
                      _SPBRG 0099                        _PORTB 0006                        _PORTD 0008  
                      _TRISB 0086                        _TRISD 0088                        _TXREG 0019  
     __end_of_LCD_Set_Cursor 03C8                _Init_Transmit 0315              __end_of_dpowers 001D  
            __end_of_isdigit 0335                        _setup 0364                 LCD_Command@a 0073  
                      pclath 000A              __end_of_spiInit 034B              __end_of_spiRead 02FC  
                      status 0003                        wtemp0 007E              __end_of_sprintf 07ED  
               USART_Write@a 0070               _LCD_Write_Char 034B              __initialization 07ED  
             ??_Init_Receive 0070                 __end_of_main 0667                       ??_main 0033  
          __end_of_LCD_clear 0315               ?_Init_Transmit 0070              ?_LCD_Set_Cursor 0074  
                     ?_setup 0070                       _ANSELH 0189                       _TRISC0 0438  
                     _TRISC1 0439                       _TRISC2 043A                       _TRISC3 043B  
                     _TRISC5 043D                       _TRISC7 043F                       _SSPCON 0014  
                     _SSPBUF 0013       __end_of_LCD_Write_Char 0364                       ___wmul 03C8  
                  ??___lwdiv 0074                    ??___lwmod 007C         __size_of_LCD_Command 0023  
                  ??_isdigit 0070             __end_of_spiWrite 02DC                    ??_spiInit 0073  
                  ??_spiRead 0070                    ??_sprintf 0027              LCD_Set_Cursor@a 0077  
            LCD_Set_Cursor@x 0076              LCD_Set_Cursor@y 0074      __end_of__initialization 07FC  
                  ?_LCD_Init 0070                    ?_LCD_Port 0070              ?_LCD_Write_Char 0070  
               ?_USART_Write 0070               __pcstackCOMMON 0070                    LCD_Port@a 0070  
               __pidataBANK0 02CA                __end_of_setup 0381       __size_of_Set_Baud_Rate 0005  
            ??_Init_Transmit 0070         __end_of_Init_Receive 02EB                 sprintf@width 0030  
                    ??_setup 0074                   __pbssBANK0 003A                   ??_LCD_Init 0074  
                 ??_LCD_Port 0070                   __pmaintext 0527                      ?___wmul 0070  
    __size_of_spiReceiveWait 0007    __size_of_LCD_Write_String 0042                      _SSPSTAT 0094  
 __end_of_USART_Write_String 0418                   __stringtab 0003                _Set_Baud_Rate 02CB  
                  ?_spiWrite 0070              __size_of___wmul 0025                      ___lwdiv 0494  
                    ___lwmod 0418             ??_LCD_Set_Cursor 0075                      __ptext1 0667  
                    __ptext2 0323                      __ptext3 03C8                      __ptext4 0418  
                    __ptext5 0494                      __ptext6 02D6                      __ptext7 02F3  
                    __ptext8 02DC                      __ptext9 0364                      _dpowers 0013  
                    _isdigit 0323                      _spiInit 0335                      _spiRead 02F3  
                    _sprintf 0667                      clrloop0 02EC                    _LCD_clear 0308  
       end_of_initialization 07FC               ?_Set_Baud_Rate 0070                    _RCSTAbits 0018  
                 ??_spiWrite 0070         __size_of_USART_Write 000C                    _PORTCbits 0007  
      __size_of_Init_Receive 0008                    _TRISCbits 0087                  spiWrite@dat 0070  
                 ?_LCD_clear 0070            LCD_Write_String@a 0073            LCD_Write_String@i 0078  
           ??_LCD_Write_Char 0071                    _TXSTAbits 0098            __size_of_LCD_Init 004F  
          __size_of_LCD_Port 0006                 _Init_Receive 02E3                ??_LCD_Command 0071  
             _spiReceiveWait 02DC               __end_of___wmul 03ED             _LCD_Write_String 0452  
        start_initialization 07ED              ??_Set_Baud_Rate 0070       __end_of_spiReceiveWait 02E3  
                   ??___wmul 0074                  __pdataBANK0 0051              LCD_Write_Char@a 0072  
        __end_of_LCD_Command 03A4        __end_of_Init_Transmit 0323                    ___latbits 0002  
              __pcstackBANK0 0020                  ??_LCD_clear 0074                  sprintf@flag 002C  
                sprintf@prec 002B             ___lwdiv@dividend 0072              ?_spiReceiveWait 0070  
         _USART_Write_String 03ED                     ?___lwdiv 0070                     ?___lwmod 0078  
          __size_of_spiWrite 0006                    __pstrings 0003          ?_USART_Write_String 0071  
                   ?_isdigit 0070                     ?_spiInit 0070                     ?_spiRead 0070  
           ___lwdiv@quotient 0075                     ?_sprintf 0020               __size_of_setup 001D  
       ??_USART_Write_String 0073         spiInit@sTransmitEdge 0072                     _LCD_Init 04D8  
             ___wmul@product 0074                     _LCD_Port 02D0                    clear_ram0 02EB  
                   _PIE1bits 008C           spiInit@sDataSample 0070                     _PIR1bits 000C  
                _LCD_Command 0381                  __stringbase 0012            ___wmul@multiplier 0070  
   __end_of_LCD_Write_String 0494                ??_USART_Write 0070             __size_of___lwdiv 0044  
           __size_of___lwmod 003A           __end_of__stringtab 0013                  _isdigit$995 0070  
                 sprintf@val 002D             __size_of_isdigit 0012              ___lwdiv@divisor 0070  
            ___lwdiv@counter 0077                     __ptext10 0335                     __ptext11 03ED  
                   __ptext20 02D0                     __ptext12 02FC                     __ptext21 0315  
                   __ptext13 02CB                     __ptext22 02E3                     __ptext14 0308  
                   __ptext15 0452                     __ptext16 034B                     __ptext17 03A4  
                   __ptext18 04D8                     __ptext19 0381             __size_of_spiInit 0016  
           __size_of_spiRead 0009      __size_of_LCD_Set_Cursor 0024             __size_of_sprintf 0186  
              __size_of_main 0140                     _recibido 003A                     _pantalla 003D  
                   _spiWrite 02D6                 spiInit@sType 0073          __end_of_USART_Write 0308  
          spiInit@sClockIdle 0071                   _INTCONbits 000B                     isdigit@c 0071  
      __end_of_Set_Baud_Rate 02D0                    sprintf@ap 002A                    sprintf@sp 002F  
           ___lwmod@dividend 007A             ??_spiReceiveWait 0070                    stringcode 000D  
    __size_of_LCD_Write_Char 0019                     sprintf@c 0032                     sprintf@f 0020  
        USART_Write_String@a 0071          USART_Write_String@i 0074              ___lwmod@divisor 0078  
            ___lwmod@counter 007D                     stringdir 000D                     stringtab 0003  
                _USART_Write 02FC  
