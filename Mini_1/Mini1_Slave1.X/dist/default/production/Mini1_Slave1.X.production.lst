

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 20 16:46:38 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  001F                     _ADCON0bits	set	31
   365  001F                     _ADCON0	set	31
   366  000B                     _INTCONbits	set	11
   367  0006                     _PORTB	set	6
   368  0005                     _PORTA	set	5
   369  0008                     _PORTD	set	8
   370  001E                     _ADRESH	set	30
   371  000C                     _PIR1bits	set	12
   372  0013                     _SSPBUF	set	19
   373  0014                     _SSPCON	set	20
   374  0063                     _SSPIF	set	99
   375  009F                     _ADCON1	set	159
   376  0085                     _TRISAbits	set	133
   377  008C                     _PIE1bits	set	140
   378  0088                     _TRISD	set	136
   379  0086                     _TRISB	set	134
   380  0085                     _TRISA	set	133
   381  0094                     _SSPSTATbits	set	148
   382  0094                     _SSPSTAT	set	148
   383  043B                     _TRISC3	set	1083
   384  043D                     _TRISC5	set	1085
   385  0189                     _ANSELH	set	393
   386  0188                     _ANSEL	set	392
   387                           
   388                           	psect	cinit
   389  000F                     start_initialization:	
   390                           ; #config settings
   391                           
   392  000F                     __initialization:
   393                           
   394                           ; Clear objects allocated to COMMON
   395  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   396  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   397  0011                     end_of_initialization:	
   398                           ;End of C runtime variable initialization code
   399                           
   400  0011                     __end_of__initialization:
   401  0011  0183               	clrf	3
   402  0012  120A  118A  2855   	ljmp	_main	;jump to C main() function
   403                           
   404                           	psect	bssCOMMON
   405  0078                     __pbssCOMMON:
   406  0078                     _valor_adc:
   407  0078                     	ds	1
   408  0079                     _contador:
   409  0079                     	ds	1
   410                           
   411                           	psect	cstackCOMMON
   412  0070                     __pcstackCOMMON:
   413  0070                     ?_setup:
   414  0070                     ?_initADC:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_adc:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_spiWrite:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ??_spiWrite:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_isr:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_main:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     spiWrite@dat:	
   433                           ; 1 bytes @ 0x0
   434                           
   435                           
   436                           ; 1 bytes @ 0x0
   437  0070                     	ds	1
   438  0071                     ??_isr:
   439                           
   440                           ; 1 bytes @ 0x1
   441  0071                     	ds	3
   442  0074                     ??_initADC:
   443  0074                     ??_adc:	
   444                           ; 1 bytes @ 0x4
   445                           
   446  0074                     ?_spiInit:	
   447                           ; 1 bytes @ 0x4
   448                           
   449  0074                     spiInit@sDataSample:	
   450                           ; 1 bytes @ 0x4
   451                           
   452                           
   453                           ; 1 bytes @ 0x4
   454  0074                     	ds	1
   455  0075                     spiInit@sClockIdle:
   456                           
   457                           ; 1 bytes @ 0x5
   458  0075                     	ds	1
   459  0076                     spiInit@sTransmitEdge:
   460                           
   461                           ; 1 bytes @ 0x6
   462  0076                     	ds	1
   463  0077                     ??_spiInit:
   464  0077                     spiInit@sType:	
   465                           ; 1 bytes @ 0x7
   466                           
   467                           
   468                           ; 1 bytes @ 0x7
   469  0077                     	ds	1
   470  0078                     ??_setup:
   471  0078                     ??_main:	
   472                           ; 1 bytes @ 0x8
   473                           
   474                           
   475                           	psect	maintext
   476  0055                     __pmaintext:	
   477                           ; 1 bytes @ 0x8
   478 ;;
   479 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   480 ;;
   481 ;; *************** function _main *****************
   482 ;; Defined at:
   483 ;;		line 71 in file "main_slave1.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, status,2, status,0, pclath, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : B00/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   497 ;;      Params:         0       0       0       0       0
   498 ;;      Locals:         0       0       0       0       0
   499 ;;      Temps:          0       0       0       0       0
   500 ;;      Totals:         0       0       0       0       0
   501 ;;Total ram usage:        0 bytes
   502 ;; Hardware stack levels required when called:    4
   503 ;; This function calls:
   504 ;;		_adc
   505 ;;		_initADC
   506 ;;		_setup
   507 ;; This function is called by:
   508 ;;		Startup code after reset
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           
   513                           ;psect for function _main
   514  0055                     _main:
   515  0055                     l804:	
   516                           ;incstack = 0
   517                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   518                           
   519                           
   520                           ;main_slave1.c: 72:     setup();
   521  0055  120A  118A  2015  120A  118A  	fcall	_setup
   522                           
   523                           ;main_slave1.c: 73:     initADC();
   524  005A  120A  118A  2082  120A  118A  	fcall	_initADC
   525  005F                     l88:	
   526                           ;main_slave1.c: 77:     while(1){
   527                           
   528                           
   529                           ;main_slave1.c: 78:         adc();
   530  005F  120A  118A  208F  120A  118A  	fcall	_adc
   531  0064                     l806:
   532                           
   533                           ;main_slave1.c: 79:         PORTD = valor_adc;
   534  0064  0878               	movf	_valor_adc,w
   535  0065  1283               	bcf	3,5	;RP0=0, select bank0
   536  0066  1303               	bcf	3,6	;RP1=0, select bank0
   537  0067  0088               	movwf	8	;volatile
   538  0068  285F               	goto	l88
   539  0069  120A  118A  280C   	ljmp	start
   540  006C                     __end_of_main:
   541                           
   542                           	psect	text1
   543  0015                     __ptext1:	
   544 ;; *************** function _setup *****************
   545 ;; Defined at:
   546 ;;		line 96 in file "main_slave1.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;		None
   549 ;; Auto vars:     Size  Location     Type
   550 ;;		None
   551 ;; Return value:  Size  Location     Type
   552 ;;                  1    wreg      void 
   553 ;; Registers used:
   554 ;;		wreg, status,2, status,0, pclath, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   560 ;;      Params:         0       0       0       0       0
   561 ;;      Locals:         0       0       0       0       0
   562 ;;      Temps:          0       0       0       0       0
   563 ;;      Totals:         0       0       0       0       0
   564 ;;Total ram usage:        0 bytes
   565 ;; Hardware stack levels used:    1
   566 ;; Hardware stack levels required when called:    3
   567 ;; This function calls:
   568 ;;		_spiInit
   569 ;; This function is called by:
   570 ;;		_main
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           
   575                           ;psect for function _setup
   576  0015                     _setup:
   577  0015                     l786:	
   578                           ;incstack = 0
   579                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   580                           
   581                           
   582                           ;main_slave1.c: 97:     ANSEL = 0b00000001;
   583  0015  3001               	movlw	1
   584  0016  1683               	bsf	3,5	;RP0=1, select bank3
   585  0017  1703               	bsf	3,6	;RP1=1, select bank3
   586  0018  0088               	movwf	8	;volatile
   587  0019                     l788:
   588                           
   589                           ;main_slave1.c: 98:     ANSELH = 0;
   590  0019  0189               	clrf	9	;volatile
   591  001A                     l790:
   592                           
   593                           ;main_slave1.c: 100:     TRISA = 0b00000001;
   594  001A  3001               	movlw	1
   595  001B  1683               	bsf	3,5	;RP0=1, select bank1
   596  001C  1303               	bcf	3,6	;RP1=0, select bank1
   597  001D  0085               	movwf	5	;volatile
   598                           
   599                           ;main_slave1.c: 101:     TRISB = 0;
   600  001E  0186               	clrf	6	;volatile
   601                           
   602                           ;main_slave1.c: 102:     TRISD = 0;
   603  001F  0188               	clrf	8	;volatile
   604                           
   605                           ;main_slave1.c: 104:     PORTA = 0;
   606  0020  1283               	bcf	3,5	;RP0=0, select bank0
   607  0021  1303               	bcf	3,6	;RP1=0, select bank0
   608  0022  0185               	clrf	5	;volatile
   609                           
   610                           ;main_slave1.c: 105:     PORTB = 0;
   611  0023  0186               	clrf	6	;volatile
   612                           
   613                           ;main_slave1.c: 106:     PORTD = 0;
   614  0024  0188               	clrf	8	;volatile
   615  0025                     l792:
   616                           
   617                           ;main_slave1.c: 108:     INTCONbits.GIE = 1;
   618  0025  178B               	bsf	11,7	;volatile
   619  0026                     l794:
   620                           
   621                           ;main_slave1.c: 109:     INTCONbits.PEIE = 1;
   622  0026  170B               	bsf	11,6	;volatile
   623  0027                     l796:
   624                           
   625                           ;main_slave1.c: 110:     PIR1bits.SSPIF = 0;
   626  0027  118C               	bcf	12,3	;volatile
   627  0028                     l798:
   628                           
   629                           ;main_slave1.c: 111:     PIE1bits.SSPIE = 1;
   630  0028  1683               	bsf	3,5	;RP0=1, select bank1
   631  0029  1303               	bcf	3,6	;RP1=0, select bank1
   632  002A  158C               	bsf	12,3	;volatile
   633  002B                     l800:
   634                           
   635                           ;main_slave1.c: 112:     TRISAbits.TRISA5 = 1;
   636  002B  1685               	bsf	5,5	;volatile
   637  002C                     l802:
   638                           
   639                           ;main_slave1.c: 114:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE
      +                          _LOW, SPI_IDLE_2_ACTIVE);
   640  002C  01F4               	clrf	spiInit@sDataSample
   641  002D  01F5               	clrf	spiInit@sClockIdle
   642  002E  01F6               	clrf	spiInit@sTransmitEdge
   643  002F  3024               	movlw	36
   644  0030  120A  118A  206C  120A  118A  	fcall	_spiInit
   645  0035                     l94:
   646  0035  0008               	return
   647  0036                     __end_of_setup:
   648                           
   649                           	psect	text2
   650  006C                     __ptext2:	
   651 ;; *************** function _spiInit *****************
   652 ;; Defined at:
   653 ;;		line 12 in file "SPI.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;  sType           1    wreg     enum E1264
   656 ;;  sDataSample     1    4[COMMON] enum E1272
   657 ;;  sClockIdle      1    5[COMMON] enum E1276
   658 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   659 ;; Auto vars:     Size  Location     Type
   660 ;;  sType           1    7[COMMON] enum E1264
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, status,2, status,0
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   670 ;;      Params:         3       0       0       0       0
   671 ;;      Locals:         1       0       0       0       0
   672 ;;      Temps:          0       0       0       0       0
   673 ;;      Totals:         4       0       0       0       0
   674 ;;Total ram usage:        4 bytes
   675 ;; Hardware stack levels used:    1
   676 ;; Hardware stack levels required when called:    2
   677 ;; This function calls:
   678 ;;		Nothing
   679 ;; This function is called by:
   680 ;;		_setup
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           
   685                           ;psect for function _spiInit
   686  006C                     _spiInit:
   687                           
   688                           ;incstack = 0
   689                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   690                           ;spiInit@sType stored from wreg
   691  006C  00F7               	movwf	spiInit@sType
   692  006D                     l776:
   693                           
   694                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   695  006D  1683               	bsf	3,5	;RP0=1, select bank1
   696  006E  1303               	bcf	3,6	;RP1=0, select bank1
   697  006F  1287               	bcf	7,5	;volatile
   698                           
   699                           ;SPI.c: 15:     if(sType & 0b00000100)
   700  0070  1D77               	btfss	spiInit@sType,2
   701  0071  2873               	goto	u51
   702  0072  2874               	goto	u50
   703  0073                     u51:
   704  0073  2878               	goto	l782
   705  0074                     u50:
   706  0074                     l778:
   707                           
   708                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   709  0074  0876               	movf	spiInit@sTransmitEdge,w
   710  0075  0094               	movwf	20	;volatile
   711  0076                     l780:
   712                           
   713                           ;SPI.c: 18:         TRISC3 = 1;
   714  0076  1587               	bsf	7,3	;volatile
   715                           
   716                           ;SPI.c: 19:     }
   717  0077  287C               	goto	l16
   718  0078                     l782:
   719                           
   720                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   721  0078  0874               	movf	spiInit@sDataSample,w
   722  0079  0476               	iorwf	spiInit@sTransmitEdge,w
   723  007A  0094               	movwf	20	;volatile
   724  007B                     l784:
   725                           
   726                           ;SPI.c: 23:         TRISC3 = 0;
   727  007B  1187               	bcf	7,3	;volatile
   728  007C                     l16:	
   729                           ;SPI.c: 24:     }
   730                           
   731                           
   732                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   733  007C  0877               	movf	spiInit@sType,w
   734  007D  0475               	iorwf	spiInit@sClockIdle,w
   735  007E  1283               	bcf	3,5	;RP0=0, select bank0
   736  007F  1303               	bcf	3,6	;RP1=0, select bank0
   737  0080  0094               	movwf	20	;volatile
   738  0081                     l17:
   739  0081  0008               	return
   740  0082                     __end_of_spiInit:
   741                           
   742                           	psect	text3
   743  0082                     __ptext3:	
   744 ;; *************** function _initADC *****************
   745 ;; Defined at:
   746 ;;		line 5 in file "ADC.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg, status,2
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   760 ;;      Params:         0       0       0       0       0
   761 ;;      Locals:         0       0       0       0       0
   762 ;;      Temps:          0       0       0       0       0
   763 ;;      Totals:         0       0       0       0       0
   764 ;;Total ram usage:        0 bytes
   765 ;; Hardware stack levels used:    1
   766 ;; Hardware stack levels required when called:    2
   767 ;; This function calls:
   768 ;;		Nothing
   769 ;; This function is called by:
   770 ;;		_main
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           
   775                           ;psect for function _initADC
   776  0082                     _initADC:
   777  0082                     l738:	
   778                           ;incstack = 0
   779                           ; Regs used in _initADC: [wreg+status,2]
   780                           
   781                           
   782                           ;ADC.c: 11:     INTCONbits.PEIE = 1;
   783  0082  170B               	bsf	11,6	;volatile
   784                           
   785                           ;ADC.c: 12:     PIE1bits.ADIE = 1;
   786  0083  1683               	bsf	3,5	;RP0=1, select bank1
   787  0084  1303               	bcf	3,6	;RP1=0, select bank1
   788  0085  170C               	bsf	12,6	;volatile
   789                           
   790                           ;ADC.c: 13:     PIR1bits.ADIF = 0;
   791  0086  1283               	bcf	3,5	;RP0=0, select bank0
   792  0087  1303               	bcf	3,6	;RP1=0, select bank0
   793  0088  130C               	bcf	12,6	;volatile
   794  0089                     l740:
   795                           
   796                           ;ADC.c: 14:     ADCON0 = 0b01000001;
   797  0089  3041               	movlw	65
   798  008A  009F               	movwf	31	;volatile
   799  008B                     l742:
   800                           
   801                           ;ADC.c: 15:     ADCON1 = 0b00000000;
   802  008B  1683               	bsf	3,5	;RP0=1, select bank1
   803  008C  1303               	bcf	3,6	;RP1=0, select bank1
   804  008D  019F               	clrf	31	;volatile
   805  008E                     l111:
   806  008E  0008               	return
   807  008F                     __end_of_initADC:
   808                           
   809                           	psect	text4
   810  008F                     __ptext4:	
   811 ;; *************** function _adc *****************
   812 ;; Defined at:
   813 ;;		line 18 in file "ADC.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   827 ;;      Params:         0       0       0       0       0
   828 ;;      Locals:         0       0       0       0       0
   829 ;;      Temps:          1       0       0       0       0
   830 ;;      Totals:         1       0       0       0       0
   831 ;;Total ram usage:        1 bytes
   832 ;; Hardware stack levels used:    1
   833 ;; Hardware stack levels required when called:    2
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_main
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           
   842                           ;psect for function _adc
   843  008F                     _adc:
   844  008F                     l744:	
   845                           ;incstack = 0
   846                           ; Regs used in _adc: [wreg]
   847                           
   848                           
   849                           ;ADC.c: 19:     _delay((unsigned long)((8)*(8000000/4000000.0)));
   850  008F  3005               	movlw	5
   851  0090  00F4               	movwf	??_adc
   852  0091                     u67:
   853  0091  0BF4               	decfsz	??_adc,f
   854  0092  2891               	goto	u67
   855  0093                     l746:
   856                           
   857                           ;ADC.c: 20:     ADCON0bits.GO_DONE = 1;
   858  0093  1283               	bcf	3,5	;RP0=0, select bank0
   859  0094  1303               	bcf	3,6	;RP1=0, select bank0
   860  0095  149F               	bsf	31,1	;volatile
   861  0096                     l114:
   862  0096  0008               	return
   863  0097                     __end_of_adc:
   864                           
   865                           	psect	text5
   866  0036                     __ptext5:	
   867 ;; *************** function _isr *****************
   868 ;; Defined at:
   869 ;;		line 55 in file "main_slave1.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;		None
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, status,2, status,0, pclath, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   883 ;;      Params:         0       0       0       0       0
   884 ;;      Locals:         0       0       0       0       0
   885 ;;      Temps:          3       0       0       0       0
   886 ;;      Totals:         3       0       0       0       0
   887 ;;Total ram usage:        3 bytes
   888 ;; Hardware stack levels used:    1
   889 ;; Hardware stack levels required when called:    1
   890 ;; This function calls:
   891 ;;		_spiWrite
   892 ;; This function is called by:
   893 ;;		Interrupt level 1
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           
   898                           ;psect for function _isr
   899  0036                     _isr:
   900  0036                     i1l760:
   901                           
   902                           ;main_slave1.c: 56:    if(SSPIF == 1){
   903  0036  1283               	bcf	3,5	;RP0=0, select bank0
   904  0037  1303               	bcf	3,6	;RP1=0, select bank0
   905  0038  1D8C               	btfss	12,3	;volatile
   906  0039  283B               	goto	u3_21
   907  003A  283C               	goto	u3_20
   908  003B                     u3_21:
   909  003B  2845               	goto	i1l766
   910  003C                     u3_20:
   911  003C                     i1l762:
   912                           
   913                           ;main_slave1.c: 58:         spiWrite(valor_adc);
   914  003C  0878               	movf	_valor_adc,w
   915  003D  120A  118A  2097  120A  118A  	fcall	_spiWrite
   916  0042                     i1l764:
   917                           
   918                           ;main_slave1.c: 59:         SSPIF = 0;
   919  0042  1283               	bcf	3,5	;RP0=0, select bank0
   920  0043  1303               	bcf	3,6	;RP1=0, select bank0
   921  0044  118C               	bcf	12,3	;volatile
   922  0045                     i1l766:
   923                           
   924                           ;main_slave1.c: 61:    if (PIR1bits.ADIF == 1) {
   925  0045  1F0C               	btfss	12,6	;volatile
   926  0046  2848               	goto	u4_21
   927  0047  2849               	goto	u4_20
   928  0048                     u4_21:
   929  0048  284E               	goto	i1l83
   930  0049                     u4_20:
   931  0049                     i1l768:
   932                           
   933                           ;main_slave1.c: 63:         valor_adc = ADRESH;
   934  0049  081E               	movf	30,w	;volatile
   935  004A  00F1               	movwf	??_isr
   936  004B  0871               	movf	??_isr,w
   937  004C  00F8               	movwf	_valor_adc
   938  004D                     i1l770:
   939                           
   940                           ;main_slave1.c: 65:         PIR1bits.ADIF = 0;
   941  004D  130C               	bcf	12,6	;volatile
   942  004E                     i1l83:
   943  004E  0873               	movf	??_isr+2,w
   944  004F  008A               	movwf	10
   945  0050  0E72               	swapf	??_isr+1,w
   946  0051  0083               	movwf	3
   947  0052  0EFE               	swapf	btemp,f
   948  0053  0E7E               	swapf	btemp,w
   949  0054  0009               	retfie
   950  0055                     __end_of_isr:
   951                           
   952                           	psect	intentry
   953  0004                     __pintentry:	
   954                           ;incstack = 0
   955                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   956                           
   957  0004                     interrupt_function:
   958  007E                     saved_w	set	btemp
   959  0004  00FE               	movwf	btemp
   960  0005  0E03               	swapf	3,w
   961  0006  00F2               	movwf	??_isr+1
   962  0007  080A               	movf	10,w
   963  0008  00F3               	movwf	??_isr+2
   964  0009  120A  118A  2836   	ljmp	_isr
   965                           
   966                           	psect	text6
   967  0097                     __ptext6:	
   968 ;; *************** function _spiWrite *****************
   969 ;; Defined at:
   970 ;;		line 34 in file "SPI.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;  dat             1    wreg     unsigned char 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  dat             1    0[COMMON] unsigned char 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   984 ;;      Params:         0       0       0       0       0
   985 ;;      Locals:         1       0       0       0       0
   986 ;;      Temps:          0       0       0       0       0
   987 ;;      Totals:         1       0       0       0       0
   988 ;;Total ram usage:        1 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; This function calls:
   991 ;;		Nothing
   992 ;; This function is called by:
   993 ;;		_isr
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           
   998                           ;psect for function _spiWrite
   999  0097                     _spiWrite:
  1000                           
  1001                           ;incstack = 0
  1002                           ; Regs used in _spiWrite: [wreg]
  1003                           ;spiWrite@dat stored from wreg
  1004  0097  00F0               	movwf	spiWrite@dat
  1005  0098                     i1l718:
  1006                           
  1007                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1008  0098  0870               	movf	spiWrite@dat,w
  1009  0099  1283               	bcf	3,5	;RP0=0, select bank0
  1010  009A  1303               	bcf	3,6	;RP1=0, select bank0
  1011  009B  0093               	movwf	19	;volatile
  1012  009C                     i1l26:
  1013  009C  0008               	return
  1014  009D                     __end_of_spiWrite:
  1015  007E                     btemp	set	126	;btemp
  1016  007E                     wtemp0	set	126
  1017                           
  1018                           	psect	config
  1019                           
  1020                           ;Config register CONFIG1 @ 0x2007
  1021                           ;	Oscillator Selection bits
  1022                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1023                           ;	Watchdog Timer Enable bit
  1024                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1025                           ;	Power-up Timer Enable bit
  1026                           ;	PWRTE = OFF, PWRT disabled
  1027                           ;	RE3/MCLR pin function select bit
  1028                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1029                           ;	Code Protection bit
  1030                           ;	CP = OFF, Program memory code protection is disabled
  1031                           ;	Data Code Protection bit
  1032                           ;	CPD = OFF, Data memory code protection is disabled
  1033                           ;	Brown Out Reset Selection bits
  1034                           ;	BOREN = OFF, BOR disabled
  1035                           ;	Internal External Switchover bit
  1036                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1037                           ;	Fail-Safe Clock Monitor Enabled bit
  1038                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1039                           ;	Low Voltage Programming Enable bit
  1040                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1041                           ;	In-Circuit Debugger Mode bit
  1042                           ;	DEBUG = 0x1, unprogrammed default
  1043  2007                     	org	8199
  1044  2007  20D6               	dw	8406
  1045                           
  1046                           ;Config register CONFIG2 @ 0x2008
  1047                           ;	Brown-out Reset Selection bit
  1048                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1049                           ;	Flash Program Memory Self Write Enable bits
  1050                           ;	WRT = OFF, Write protection off
  1051  2008                     	org	8200
  1052  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     360
                                _adc
                            _initADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc                                                  1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc
   _initADC
   _setup
     _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 20 16:46:38 2021

            _SSPSTATbits 0094                       l16 007C                       l17 0081  
                     l94 0035                       l88 005F                       u50 0074  
                     u51 0073                       u67 0091                      l111 008E  
                    l114 0096                      l800 002B                      l802 002C  
                    l740 0089                      l804 0055                      l742 008B  
                    l806 0064                      l744 008F                      l746 0093  
                    l738 0082                      l780 0076                      l782 0078  
                    l790 001A                      l784 007B                      l776 006D  
                    l792 0025                      l778 0074                      l794 0026  
                    l786 0015                      l796 0027                      l788 0019  
                    l798 0028                      _adc 008F                      _isr 0036  
                   ?_adc 0070                     ?_isr 0070                     i1l26 009C  
                   i1l83 004E                     u3_20 003C                     u3_21 003B  
                   u4_20 0049                     u4_21 0048                     _main 0055  
                   btemp 007E                     start 000C                    ??_adc 0074  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l718 0098                    i1l760 0036                    i1l770 004D  
                  i1l762 003C                    i1l764 0042                    i1l766 0045  
                  i1l768 0049                    _PORTA 0005                    _PORTB 0006  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _SSPIF 0063          __end_of_initADC 008F  
                  _setup 0015                    pclath 000A          __end_of_spiInit 0082  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 006C                   ??_main 0078                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                ??_initADC 0074  
                 saved_w 007E         __end_of_spiWrite 009D                ??_spiInit 0077  
__end_of__initialization 0011           __pcstackCOMMON 0070            __end_of_setup 0036  
                ??_setup 0078               __pmaintext 0055               __pintentry 0004  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 0015  
                __ptext2 006C                  __ptext3 0082                  __ptext4 008F  
                __ptext5 0036                  __ptext6 0097                  _initADC 0082  
           __size_of_adc 0008             __size_of_isr 001F                  _spiInit 006C  
   end_of_initialization 0011               ??_spiWrite 0070                _TRISAbits 0085  
            spiWrite@dat 0070      start_initialization 000F              __end_of_adc 0097  
            __end_of_isr 0055              __pbssCOMMON 0078                ___latbits 0002  
      __size_of_spiWrite 0006                 ?_initADC 0070                 ?_spiInit 0074  
         __size_of_setup 0021     spiInit@sTransmitEdge 0076        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0074                 _PIR1bits 000C  
              _valor_adc 0078               _ADCON0bits 001F         __size_of_initADC 000D  
       __size_of_spiInit 0016                 _contador 0079            __size_of_main 0017  
               _spiWrite 0097             spiInit@sType 0077        spiInit@sClockIdle 0075  
             _INTCONbits 000B                 intlevel1 0000  
