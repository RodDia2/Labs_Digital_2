

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 19:29:18 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  001F                     _ADCON0bits	set	31
   369  001F                     _ADCON0	set	31
   370  000B                     _INTCONbits	set	11
   371  0008                     _PORTD	set	8
   372  0007                     _PORTC	set	7
   373  0006                     _PORTB	set	6
   374  0005                     _PORTA	set	5
   375  0008                     _PORTDbits	set	8
   376  001E                     _ADRESH	set	30
   377  000C                     _PIR1bits	set	12
   378  0013                     _SSPBUF	set	19
   379  0014                     _SSPCON	set	20
   380  0063                     _SSPIF	set	99
   381  009F                     _ADCON1	set	159
   382  0085                     _TRISAbits	set	133
   383  008C                     _PIE1bits	set	140
   384  0088                     _TRISD	set	136
   385  0087                     _TRISC	set	135
   386  0086                     _TRISB	set	134
   387  0085                     _TRISA	set	133
   388  009F                     _ADCON1bits	set	159
   389  0094                     _SSPSTATbits	set	148
   390  0094                     _SSPSTAT	set	148
   391  043B                     _TRISC3	set	1083
   392  043D                     _TRISC5	set	1085
   393  0189                     _ANSELH	set	393
   394  0188                     _ANSEL	set	392
   395                           
   396                           	psect	cinit
   397  0011                     start_initialization:	
   398                           ; #config settings
   399                           
   400  0011                     __initialization:
   401                           
   402                           ; Clear objects allocated to COMMON
   403  0011  01FB               	clrf	__pbssCOMMON& (0+127)
   404  0012  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   405  0013                     end_of_initialization:	
   406                           ;End of C runtime variable initialization code
   407                           
   408  0013                     __end_of__initialization:
   409  0013  0183               	clrf	3
   410  0014  120A  118A  2900   	ljmp	_main	;jump to C main() function
   411                           
   412                           	psect	bssCOMMON
   413  007B                     __pbssCOMMON:
   414  007B                     _valor_adc:
   415  007B                     	ds	1
   416  007C                     _contador:
   417  007C                     	ds	1
   418                           
   419                           	psect	cstackCOMMON
   420  0070                     __pcstackCOMMON:
   421  0070                     ?_setup:
   422  0070                     ?_initADC:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_ADC_Select:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_adc:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_spiWrite:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ??_spiWrite:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_isr:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_main:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?___wmul:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     spiWrite@dat:	
   447                           ; 2 bytes @ 0x0
   448                           
   449  0070                     ___wmul@multiplier:	
   450                           ; 1 bytes @ 0x0
   451                           
   452                           
   453                           ; 2 bytes @ 0x0
   454  0070                     	ds	2
   455  0072                     ___wmul@multiplicand:
   456                           
   457                           ; 2 bytes @ 0x2
   458  0072                     	ds	2
   459  0074                     ??___wmul:
   460  0074                     ___wmul@product:	
   461                           ; 1 bytes @ 0x4
   462                           
   463                           
   464                           ; 2 bytes @ 0x4
   465  0074                     	ds	2
   466  0076                     ?___awdiv:
   467  0076                     ___awdiv@divisor:	
   468                           ; 2 bytes @ 0x6
   469                           
   470                           
   471                           ; 2 bytes @ 0x6
   472  0076                     	ds	2
   473  0078                     ___awdiv@dividend:
   474                           
   475                           ; 2 bytes @ 0x8
   476  0078                     	ds	2
   477  007A                     ??___awdiv:
   478                           
   479                           ; 1 bytes @ 0xA
   480  007A                     	ds	1
   481                           
   482                           	psect	cstackBANK0
   483  0020                     __pcstackBANK0:
   484  0020                     ___awdiv@counter:
   485                           
   486                           ; 1 bytes @ 0x0
   487  0020                     	ds	1
   488  0021                     ___awdiv@sign:
   489                           
   490                           ; 1 bytes @ 0x1
   491  0021                     	ds	1
   492  0022                     ___awdiv@quotient:
   493                           
   494                           ; 2 bytes @ 0x2
   495  0022                     	ds	2
   496  0024                     ??_isr:
   497                           
   498                           ; 1 bytes @ 0x4
   499  0024                     	ds	5
   500  0029                     ??_initADC:
   501  0029                     ??_ADC_Select:	
   502                           ; 1 bytes @ 0x9
   503                           
   504  0029                     ??_adc:	
   505                           ; 1 bytes @ 0x9
   506                           
   507  0029                     ?_spiInit:	
   508                           ; 1 bytes @ 0x9
   509                           
   510  0029                     spiInit@sDataSample:	
   511                           ; 1 bytes @ 0x9
   512                           
   513                           
   514                           ; 1 bytes @ 0x9
   515  0029                     	ds	1
   516  002A                     spiInit@sClockIdle:
   517                           
   518                           ; 1 bytes @ 0xA
   519  002A                     	ds	1
   520  002B                     spiInit@sTransmitEdge:
   521  002B                     ADC_Select@a:	
   522                           ; 1 bytes @ 0xB
   523                           
   524                           
   525                           ; 1 bytes @ 0xB
   526  002B                     	ds	1
   527  002C                     ??_spiInit:
   528  002C                     spiInit@sType:	
   529                           ; 1 bytes @ 0xC
   530                           
   531                           
   532                           ; 1 bytes @ 0xC
   533  002C                     	ds	1
   534  002D                     ??_setup:
   535  002D                     ??_main:	
   536                           ; 1 bytes @ 0xD
   537                           
   538                           
   539                           	psect	maintext
   540  0100                     __pmaintext:	
   541                           ; 1 bytes @ 0xD
   542 ;;
   543 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   544 ;;
   545 ;; *************** function _main *****************
   546 ;; Defined at:
   547 ;;		line 82 in file "main_slave3.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;		None
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   556 ;; Tracked objects:
   557 ;;		On entry : B00/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   561 ;;      Params:         0       0       0       0       0
   562 ;;      Locals:         0       0       0       0       0
   563 ;;      Temps:          0       0       0       0       0
   564 ;;      Totals:         0       0       0       0       0
   565 ;;Total ram usage:        0 bytes
   566 ;; Hardware stack levels required when called:    4
   567 ;; This function calls:
   568 ;;		_ADC_Select
   569 ;;		_adc
   570 ;;		_initADC
   571 ;;		_setup
   572 ;; This function is called by:
   573 ;;		Startup code after reset
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           
   578                           ;psect for function _main
   579  0100                     _main:
   580  0100                     l1109:	
   581                           ;incstack = 0
   582                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   583                           
   584                           
   585                           ;main_slave3.c: 84:     setup();
   586  0100  120A  118A  2182  120A  118A  	fcall	_setup
   587                           
   588                           ;main_slave3.c: 86:     initADC();
   589  0105  120A  118A  21EA  120A  118A  	fcall	_initADC
   590  010A                     l1111:
   591                           
   592                           ;main_slave3.c: 88:     ADC_Select(0);
   593  010A  3000               	movlw	0
   594  010B  120A  118A  2017  120A  118A  	fcall	_ADC_Select
   595  0110                     l1113:
   596                           
   597                           ;main_slave3.c: 91:     ADCON1bits.VCFG0 = 1;
   598  0110  1683               	bsf	3,5	;RP0=1, select bank1
   599  0111  1303               	bcf	3,6	;RP1=0, select bank1
   600  0112  161F               	bsf	31,4	;volatile
   601  0113                     l1115:
   602                           
   603                           ;main_slave3.c: 98:         adc();
   604  0113  120A  118A  21F7  120A  118A  	fcall	_adc
   605  0118                     l1117:
   606                           
   607                           ;main_slave3.c: 105:         if (valor_adc < 25) {
   608  0118  3019               	movlw	25
   609  0119  027B               	subwf	_valor_adc,w
   610  011A  1803               	skipnc
   611  011B  291D               	goto	u401
   612  011C  291E               	goto	u400
   613  011D                     u401:
   614  011D  2924               	goto	l1121
   615  011E                     u400:
   616  011E                     l1119:
   617                           
   618                           ;main_slave3.c: 106:             PORTDbits.RD2 = 1;
   619  011E  1283               	bcf	3,5	;RP0=0, select bank0
   620  011F  1303               	bcf	3,6	;RP1=0, select bank0
   621  0120  1508               	bsf	8,2	;volatile
   622                           
   623                           ;main_slave3.c: 107:             PORTDbits.RD1 = 0;
   624  0121  1088               	bcf	8,1	;volatile
   625                           
   626                           ;main_slave3.c: 108:             PORTDbits.RD0 = 0;
   627  0122  1008               	bcf	8,0	;volatile
   628                           
   629                           ;main_slave3.c: 110:         } else if (25 <= valor_adc && valor_adc < 36) {
   630  0123  2913               	goto	l1115
   631  0124                     l1121:
   632  0124  3019               	movlw	25
   633  0125  027B               	subwf	_valor_adc,w
   634  0126  1C03               	skipc
   635  0127  2929               	goto	u411
   636  0128  292A               	goto	u410
   637  0129                     u411:
   638  0129  2936               	goto	l1127
   639  012A                     u410:
   640  012A                     l1123:
   641  012A  3024               	movlw	36
   642  012B  027B               	subwf	_valor_adc,w
   643  012C  1803               	skipnc
   644  012D  292F               	goto	u421
   645  012E  2930               	goto	u420
   646  012F                     u421:
   647  012F  2936               	goto	l1127
   648  0130                     u420:
   649  0130                     l1125:
   650                           
   651                           ;main_slave3.c: 111:             PORTDbits.RD2 = 0;
   652  0130  1283               	bcf	3,5	;RP0=0, select bank0
   653  0131  1303               	bcf	3,6	;RP1=0, select bank0
   654  0132  1108               	bcf	8,2	;volatile
   655                           
   656                           ;main_slave3.c: 112:             PORTDbits.RD1 = 1;
   657  0133  1488               	bsf	8,1	;volatile
   658                           
   659                           ;main_slave3.c: 113:             PORTDbits.RD0 = 0;
   660  0134  1008               	bcf	8,0	;volatile
   661                           
   662                           ;main_slave3.c: 114:         } else if (valor_adc >= 36) {
   663  0135  2913               	goto	l1115
   664  0136                     l1127:
   665  0136  3024               	movlw	36
   666  0137  027B               	subwf	_valor_adc,w
   667  0138  1C03               	skipc
   668  0139  293B               	goto	u431
   669  013A  293C               	goto	u430
   670  013B                     u431:
   671  013B  2942               	goto	l100
   672  013C                     u430:
   673  013C                     l1129:
   674                           
   675                           ;main_slave3.c: 115:             PORTDbits.RD2 = 0;
   676  013C  1283               	bcf	3,5	;RP0=0, select bank0
   677  013D  1303               	bcf	3,6	;RP1=0, select bank0
   678  013E  1108               	bcf	8,2	;volatile
   679                           
   680                           ;main_slave3.c: 116:             PORTDbits.RD1 = 0;
   681  013F  1088               	bcf	8,1	;volatile
   682                           
   683                           ;main_slave3.c: 117:             PORTDbits.RD0 = 1;
   684  0140  1408               	bsf	8,0	;volatile
   685  0141  2913               	goto	l1115
   686  0142                     l100:
   687  0142  2913               	goto	l1115
   688  0143  120A  118A  280E   	ljmp	start
   689  0146                     __end_of_main:
   690                           
   691                           	psect	text1
   692  0182                     __ptext1:	
   693 ;; *************** function _setup *****************
   694 ;; Defined at:
   695 ;;		line 126 in file "main_slave3.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;		None
   698 ;; Auto vars:     Size  Location     Type
   699 ;;		None
   700 ;; Return value:  Size  Location     Type
   701 ;;                  1    wreg      void 
   702 ;; Registers used:
   703 ;;		wreg, status,2, status,0, pclath, cstack
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   709 ;;      Params:         0       0       0       0       0
   710 ;;      Locals:         0       0       0       0       0
   711 ;;      Temps:          0       0       0       0       0
   712 ;;      Totals:         0       0       0       0       0
   713 ;;Total ram usage:        0 bytes
   714 ;; Hardware stack levels used:    1
   715 ;; Hardware stack levels required when called:    3
   716 ;; This function calls:
   717 ;;		_spiInit
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           
   724                           ;psect for function _setup
   725  0182                     _setup:
   726  0182                     l969:	
   727                           ;incstack = 0
   728                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   729                           
   730                           
   731                           ;main_slave3.c: 130:     ANSEL = 0b00000001;
   732  0182  3001               	movlw	1
   733  0183  1683               	bsf	3,5	;RP0=1, select bank3
   734  0184  1703               	bsf	3,6	;RP1=1, select bank3
   735  0185  0088               	movwf	8	;volatile
   736  0186                     l971:
   737                           
   738                           ;main_slave3.c: 131:     ANSELH = 0;
   739  0186  0189               	clrf	9	;volatile
   740  0187                     l973:
   741                           
   742                           ;main_slave3.c: 133:     TRISA = 0b00000001;
   743  0187  3001               	movlw	1
   744  0188  1683               	bsf	3,5	;RP0=1, select bank1
   745  0189  1303               	bcf	3,6	;RP1=0, select bank1
   746  018A  0085               	movwf	5	;volatile
   747                           
   748                           ;main_slave3.c: 134:     TRISB = 0b00000000;
   749  018B  0186               	clrf	6	;volatile
   750                           
   751                           ;main_slave3.c: 135:     TRISC = 0;
   752  018C  0187               	clrf	7	;volatile
   753                           
   754                           ;main_slave3.c: 136:     TRISD = 0;
   755  018D  0188               	clrf	8	;volatile
   756                           
   757                           ;main_slave3.c: 138:     PORTA = 0;
   758  018E  1283               	bcf	3,5	;RP0=0, select bank0
   759  018F  1303               	bcf	3,6	;RP1=0, select bank0
   760  0190  0185               	clrf	5	;volatile
   761                           
   762                           ;main_slave3.c: 139:     PORTB = 0;
   763  0191  0186               	clrf	6	;volatile
   764                           
   765                           ;main_slave3.c: 140:     PORTC = 0;
   766  0192  0187               	clrf	7	;volatile
   767                           
   768                           ;main_slave3.c: 141:     PORTD = 0;
   769  0193  0188               	clrf	8	;volatile
   770  0194                     l975:
   771                           
   772                           ;main_slave3.c: 145:     INTCONbits.GIE = 1;
   773  0194  178B               	bsf	11,7	;volatile
   774  0195                     l977:
   775                           
   776                           ;main_slave3.c: 146:     INTCONbits.PEIE = 1;
   777  0195  170B               	bsf	11,6	;volatile
   778  0196                     l979:
   779                           
   780                           ;main_slave3.c: 147:     PIR1bits.SSPIF = 0;
   781  0196  118C               	bcf	12,3	;volatile
   782  0197                     l981:
   783                           
   784                           ;main_slave3.c: 148:     PIE1bits.SSPIE = 1;
   785  0197  1683               	bsf	3,5	;RP0=1, select bank1
   786  0198  1303               	bcf	3,6	;RP1=0, select bank1
   787  0199  158C               	bsf	12,3	;volatile
   788  019A                     l983:
   789                           
   790                           ;main_slave3.c: 149:     TRISAbits.TRISA5 = 1;
   791  019A  1685               	bsf	5,5	;volatile
   792  019B                     l985:
   793                           
   794                           ;main_slave3.c: 151:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE
      +                          _LOW, SPI_IDLE_2_ACTIVE);
   795  019B  1283               	bcf	3,5	;RP0=0, select bank0
   796  019C  1303               	bcf	3,6	;RP1=0, select bank0
   797  019D  01A9               	clrf	spiInit@sDataSample
   798  019E  01AA               	clrf	spiInit@sClockIdle
   799  019F  01AB               	clrf	spiInit@sTransmitEdge
   800  01A0  3024               	movlw	36
   801  01A1  120A  118A  21CC  120A  118A  	fcall	_spiInit
   802  01A6                     l109:
   803  01A6  0008               	return
   804  01A7                     __end_of_setup:
   805                           
   806                           	psect	text2
   807  01CC                     __ptext2:	
   808 ;; *************** function _spiInit *****************
   809 ;; Defined at:
   810 ;;		line 12 in file "SPI.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;  sType           1    wreg     enum E1264
   813 ;;  sDataSample     1    9[BANK0 ] enum E1272
   814 ;;  sClockIdle      1   10[BANK0 ] enum E1276
   815 ;;  sTransmitEdg    1   11[BANK0 ] enum E1280
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  sType           1   12[BANK0 ] enum E1264
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   827 ;;      Params:         0       3       0       0       0
   828 ;;      Locals:         0       1       0       0       0
   829 ;;      Temps:          0       0       0       0       0
   830 ;;      Totals:         0       4       0       0       0
   831 ;;Total ram usage:        4 bytes
   832 ;; Hardware stack levels used:    1
   833 ;; Hardware stack levels required when called:    2
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_setup
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           
   842                           ;psect for function _spiInit
   843  01CC                     _spiInit:
   844                           
   845                           ;incstack = 0
   846                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   847                           ;spiInit@sType stored from wreg
   848  01CC  1283               	bcf	3,5	;RP0=0, select bank0
   849  01CD  1303               	bcf	3,6	;RP1=0, select bank0
   850  01CE  00AC               	movwf	spiInit@sType
   851  01CF                     l959:
   852                           
   853                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   854  01CF  1683               	bsf	3,5	;RP0=1, select bank1
   855  01D0  1303               	bcf	3,6	;RP1=0, select bank1
   856  01D1  1287               	bcf	7,5	;volatile
   857                           
   858                           ;SPI.c: 15:     if(sType & 0b00000100)
   859  01D2  1283               	bcf	3,5	;RP0=0, select bank0
   860  01D3  1303               	bcf	3,6	;RP1=0, select bank0
   861  01D4  1D2C               	btfss	spiInit@sType,2
   862  01D5  29D7               	goto	u231
   863  01D6  29D8               	goto	u230
   864  01D7                     u231:
   865  01D7  29DE               	goto	l965
   866  01D8                     u230:
   867  01D8                     l961:
   868                           
   869                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   870  01D8  082B               	movf	spiInit@sTransmitEdge,w
   871  01D9  1683               	bsf	3,5	;RP0=1, select bank1
   872  01DA  1303               	bcf	3,6	;RP1=0, select bank1
   873  01DB  0094               	movwf	20	;volatile
   874  01DC                     l963:
   875                           
   876                           ;SPI.c: 18:         TRISC3 = 1;
   877  01DC  1587               	bsf	7,3	;volatile
   878                           
   879                           ;SPI.c: 19:     }
   880  01DD  29E4               	goto	l16
   881  01DE                     l965:
   882                           
   883                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   884  01DE  0829               	movf	spiInit@sDataSample,w
   885  01DF  042B               	iorwf	spiInit@sTransmitEdge,w
   886  01E0  1683               	bsf	3,5	;RP0=1, select bank1
   887  01E1  1303               	bcf	3,6	;RP1=0, select bank1
   888  01E2  0094               	movwf	20	;volatile
   889  01E3                     l967:
   890                           
   891                           ;SPI.c: 23:         TRISC3 = 0;
   892  01E3  1187               	bcf	7,3	;volatile
   893  01E4                     l16:	
   894                           ;SPI.c: 24:     }
   895                           
   896                           
   897                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   898  01E4  1283               	bcf	3,5	;RP0=0, select bank0
   899  01E5  1303               	bcf	3,6	;RP1=0, select bank0
   900  01E6  082C               	movf	spiInit@sType,w
   901  01E7  042A               	iorwf	spiInit@sClockIdle,w
   902  01E8  0094               	movwf	20	;volatile
   903  01E9                     l17:
   904  01E9  0008               	return
   905  01EA                     __end_of_spiInit:
   906                           
   907                           	psect	text3
   908  01EA                     __ptext3:	
   909 ;; *************** function _initADC *****************
   910 ;; Defined at:
   911 ;;		line 7 in file "ADC.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;		None
   914 ;; Auto vars:     Size  Location     Type
   915 ;;		None
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, status,2
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         0       0       0       0       0
   927 ;;      Temps:          0       0       0       0       0
   928 ;;      Totals:         0       0       0       0       0
   929 ;;Total ram usage:        0 bytes
   930 ;; Hardware stack levels used:    1
   931 ;; Hardware stack levels required when called:    2
   932 ;; This function calls:
   933 ;;		Nothing
   934 ;; This function is called by:
   935 ;;		_main
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           
   940                           ;psect for function _initADC
   941  01EA                     _initADC:
   942  01EA                     l987:	
   943                           ;incstack = 0
   944                           ; Regs used in _initADC: [wreg+status,2]
   945                           
   946                           
   947                           ;ADC.c: 13:     INTCONbits.PEIE = 1;
   948  01EA  170B               	bsf	11,6	;volatile
   949                           
   950                           ;ADC.c: 14:     PIE1bits.ADIE = 1;
   951  01EB  1683               	bsf	3,5	;RP0=1, select bank1
   952  01EC  1303               	bcf	3,6	;RP1=0, select bank1
   953  01ED  170C               	bsf	12,6	;volatile
   954                           
   955                           ;ADC.c: 15:     PIR1bits.ADIF = 0;
   956  01EE  1283               	bcf	3,5	;RP0=0, select bank0
   957  01EF  1303               	bcf	3,6	;RP1=0, select bank0
   958  01F0  130C               	bcf	12,6	;volatile
   959  01F1                     l989:
   960                           
   961                           ;ADC.c: 16:     ADCON0 = 0b01000001;
   962  01F1  3041               	movlw	65
   963  01F2  009F               	movwf	31	;volatile
   964  01F3                     l991:
   965                           
   966                           ;ADC.c: 17:     ADCON1 = 0b00000000;
   967  01F3  1683               	bsf	3,5	;RP0=1, select bank1
   968  01F4  1303               	bcf	3,6	;RP1=0, select bank1
   969  01F5  019F               	clrf	31	;volatile
   970  01F6                     l126:
   971  01F6  0008               	return
   972  01F7                     __end_of_initADC:
   973                           
   974                           	psect	text4
   975  01F7                     __ptext4:	
   976 ;; *************** function _adc *****************
   977 ;; Defined at:
   978 ;;		line 20 in file "ADC.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   992 ;;      Params:         0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0
   994 ;;      Temps:          0       1       0       0       0
   995 ;;      Totals:         0       1       0       0       0
   996 ;;Total ram usage:        1 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; Hardware stack levels required when called:    2
   999 ;; This function calls:
  1000 ;;		Nothing
  1001 ;; This function is called by:
  1002 ;;		_main
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           
  1007                           ;psect for function _adc
  1008  01F7                     _adc:
  1009  01F7                     l1035:	
  1010                           ;incstack = 0
  1011                           ; Regs used in _adc: [wreg]
  1012                           
  1013                           
  1014                           ;ADC.c: 21:     _delay((unsigned long)((8)*(8000000/4000000.0)));
  1015  01F7  3004               	movlw	4
  1016  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1017  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1018  01FA  00A9               	movwf	??_adc
  1019  01FB                     u447:
  1020  01FB  0BA9               	decfsz	??_adc,f
  1021  01FC  29FB               	goto	u447
  1022  01FD  0000               	nop
  1023  01FE                     l1037:
  1024                           
  1025                           ;ADC.c: 22:     ADCON0bits.GO_DONE = 1;
  1026  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1027  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0200  149F               	bsf	31,1	;volatile
  1029  0201                     l129:
  1030  0201  0008               	return
  1031  0202                     __end_of_adc:
  1032                           
  1033                           	psect	text5
  1034  0017                     __ptext5:	
  1035 ;; *************** function _ADC_Select *****************
  1036 ;; Defined at:
  1037 ;;		line 27 in file "ADC.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  a               1    wreg     unsigned char 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  a               1   11[BANK0 ] unsigned char 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1051 ;;      Params:         0       0       0       0       0
  1052 ;;      Locals:         0       1       0       0       0
  1053 ;;      Temps:          0       2       0       0       0
  1054 ;;      Totals:         0       3       0       0       0
  1055 ;;Total ram usage:        3 bytes
  1056 ;; Hardware stack levels used:    1
  1057 ;; Hardware stack levels required when called:    2
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_main
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           
  1066                           ;psect for function _ADC_Select
  1067  0017                     _ADC_Select:
  1068                           
  1069                           ;incstack = 0
  1070                           ; Regs used in _ADC_Select: [wreg-fsr0h+status,2+status,0]
  1071                           ;ADC_Select@a stored from wreg
  1072  0017  1283               	bcf	3,5	;RP0=0, select bank0
  1073  0018  1303               	bcf	3,6	;RP1=0, select bank0
  1074  0019  00AB               	movwf	ADC_Select@a
  1075  001A                     l993:
  1076                           
  1077                           ;ADC.c: 28:     switch(a){
  1078  001A  2862               	goto	l1027
  1079  001B                     l995:
  1080  001B  30C3               	movlw	-61
  1081  001C  059F               	andwf	31,f	;volatile
  1082  001D  2896               	goto	l149
  1083  001E                     l997:
  1084  001E  081F               	movf	31,w	;volatile
  1085  001F  39C3               	andlw	-61
  1086  0020  3804               	iorlw	4
  1087  0021  009F               	movwf	31	;volatile
  1088  0022  2896               	goto	l149
  1089  0023                     l999:
  1090  0023  081F               	movf	31,w	;volatile
  1091  0024  39C3               	andlw	-61
  1092  0025  3808               	iorlw	8
  1093  0026  009F               	movwf	31	;volatile
  1094  0027  2896               	goto	l149
  1095  0028                     l1001:
  1096  0028  081F               	movf	31,w	;volatile
  1097  0029  39C3               	andlw	-61
  1098  002A  380C               	iorlw	12
  1099  002B  009F               	movwf	31	;volatile
  1100  002C  2896               	goto	l149
  1101  002D                     l1003:
  1102  002D  081F               	movf	31,w	;volatile
  1103  002E  39C3               	andlw	-61
  1104  002F  3810               	iorlw	16
  1105  0030  009F               	movwf	31	;volatile
  1106  0031  2896               	goto	l149
  1107  0032                     l1005:
  1108  0032  081F               	movf	31,w	;volatile
  1109  0033  39C3               	andlw	-61
  1110  0034  3814               	iorlw	20
  1111  0035  009F               	movwf	31	;volatile
  1112  0036  2896               	goto	l149
  1113  0037                     l1007:
  1114  0037  081F               	movf	31,w	;volatile
  1115  0038  39C3               	andlw	-61
  1116  0039  3818               	iorlw	24
  1117  003A  009F               	movwf	31	;volatile
  1118  003B  2896               	goto	l149
  1119  003C                     l1009:
  1120  003C  081F               	movf	31,w	;volatile
  1121  003D  39C3               	andlw	-61
  1122  003E  381C               	iorlw	28
  1123  003F  009F               	movwf	31	;volatile
  1124  0040  2896               	goto	l149
  1125  0041                     l1011:
  1126  0041  081F               	movf	31,w	;volatile
  1127  0042  39C3               	andlw	-61
  1128  0043  3820               	iorlw	32
  1129  0044  009F               	movwf	31	;volatile
  1130  0045  2896               	goto	l149
  1131  0046                     l1013:
  1132  0046  081F               	movf	31,w	;volatile
  1133  0047  39C3               	andlw	-61
  1134  0048  3824               	iorlw	36
  1135  0049  009F               	movwf	31	;volatile
  1136  004A  2896               	goto	l149
  1137  004B                     l1015:
  1138  004B  081F               	movf	31,w	;volatile
  1139  004C  39C3               	andlw	-61
  1140  004D  3828               	iorlw	40
  1141  004E  009F               	movwf	31	;volatile
  1142  004F  2896               	goto	l149
  1143  0050                     l1017:
  1144  0050  081F               	movf	31,w	;volatile
  1145  0051  39C3               	andlw	-61
  1146  0052  382C               	iorlw	44
  1147  0053  009F               	movwf	31	;volatile
  1148  0054  2896               	goto	l149
  1149  0055                     l1019:
  1150  0055  081F               	movf	31,w	;volatile
  1151  0056  39C3               	andlw	-61
  1152  0057  3830               	iorlw	48
  1153  0058  009F               	movwf	31	;volatile
  1154  0059  2896               	goto	l149
  1155  005A                     l1021:
  1156  005A  081F               	movf	31,w	;volatile
  1157  005B  39C3               	andlw	-61
  1158  005C  3834               	iorlw	52
  1159  005D  009F               	movwf	31	;volatile
  1160  005E  2896               	goto	l149
  1161  005F                     l1023:
  1162  005F  30C3               	movlw	-61
  1163  0060  059F               	andwf	31,f	;volatile
  1164  0061  2896               	goto	l149
  1165  0062                     l1027:
  1166  0062  082B               	movf	ADC_Select@a,w
  1167  0063  00A9               	movwf	??_ADC_Select
  1168  0064  01AA               	clrf	??_ADC_Select+1
  1169                           
  1170                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1171                           ; Switch size 1, requested type "simple"
  1172                           ; Number of cases is 1, Range of values is 0 to 0
  1173                           ; switch strategies available:
  1174                           ; Name         Instructions Cycles
  1175                           ; simple_byte            4     3 (average)
  1176                           ; direct_byte           11     8 (fixed)
  1177                           ; jumptable            260     6 (fixed)
  1178                           ;	Chosen strategy is simple_byte
  1179  0065  082A               	movf	??_ADC_Select+1,w
  1180  0066  3A00               	xorlw	0	; case 0
  1181  0067  1903               	skipnz
  1182  0068  286A               	goto	l1161
  1183  0069  285F               	goto	l1023
  1184  006A                     l1161:
  1185                           
  1186                           ; Switch size 1, requested type "simple"
  1187                           ; Number of cases is 14, Range of values is 0 to 13
  1188                           ; switch strategies available:
  1189                           ; Name         Instructions Cycles
  1190                           ; simple_byte           43    22 (average)
  1191                           ; direct_byte           50     8 (fixed)
  1192                           ; jumptable            260     6 (fixed)
  1193                           ;	Chosen strategy is simple_byte
  1194  006A  0829               	movf	??_ADC_Select,w
  1195  006B  3A00               	xorlw	0	; case 0
  1196  006C  1903               	skipnz
  1197  006D  281B               	goto	l995
  1198  006E  3A01               	xorlw	1	; case 1
  1199  006F  1903               	skipnz
  1200  0070  281E               	goto	l997
  1201  0071  3A03               	xorlw	3	; case 2
  1202  0072  1903               	skipnz
  1203  0073  2823               	goto	l999
  1204  0074  3A01               	xorlw	1	; case 3
  1205  0075  1903               	skipnz
  1206  0076  2828               	goto	l1001
  1207  0077  3A07               	xorlw	7	; case 4
  1208  0078  1903               	skipnz
  1209  0079  282D               	goto	l1003
  1210  007A  3A01               	xorlw	1	; case 5
  1211  007B  1903               	skipnz
  1212  007C  2832               	goto	l1005
  1213  007D  3A03               	xorlw	3	; case 6
  1214  007E  1903               	skipnz
  1215  007F  2837               	goto	l1007
  1216  0080  3A01               	xorlw	1	; case 7
  1217  0081  1903               	skipnz
  1218  0082  283C               	goto	l1009
  1219  0083  3A0F               	xorlw	15	; case 8
  1220  0084  1903               	skipnz
  1221  0085  2841               	goto	l1011
  1222  0086  3A01               	xorlw	1	; case 9
  1223  0087  1903               	skipnz
  1224  0088  2846               	goto	l1013
  1225  0089  3A03               	xorlw	3	; case 10
  1226  008A  1903               	skipnz
  1227  008B  284B               	goto	l1015
  1228  008C  3A01               	xorlw	1	; case 11
  1229  008D  1903               	skipnz
  1230  008E  2850               	goto	l1017
  1231  008F  3A07               	xorlw	7	; case 12
  1232  0090  1903               	skipnz
  1233  0091  2855               	goto	l1019
  1234  0092  3A01               	xorlw	1	; case 13
  1235  0093  1903               	skipnz
  1236  0094  285A               	goto	l1021
  1237  0095  285F               	goto	l1023
  1238  0096                     l149:
  1239  0096  0008               	return
  1240  0097                     __end_of_ADC_Select:
  1241                           
  1242                           	psect	text6
  1243  0146                     __ptext6:	
  1244 ;; *************** function _isr *****************
  1245 ;; Defined at:
  1246 ;;		line 57 in file "main_slave3.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;		None
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;		None
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  1    wreg      void 
  1253 ;; Registers used:
  1254 ;;		wreg, status,2, status,0, pclath, cstack
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1260 ;;      Params:         0       0       0       0       0
  1261 ;;      Locals:         0       0       0       0       0
  1262 ;;      Temps:          0       5       0       0       0
  1263 ;;      Totals:         0       5       0       0       0
  1264 ;;Total ram usage:        5 bytes
  1265 ;; Hardware stack levels used:    1
  1266 ;; Hardware stack levels required when called:    1
  1267 ;; This function calls:
  1268 ;;		___awdiv
  1269 ;;		___wmul
  1270 ;;		_spiWrite
  1271 ;; This function is called by:
  1272 ;;		Interrupt level 1
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           
  1277                           ;psect for function _isr
  1278  0146                     _isr:
  1279  0146                     i1l1097:
  1280                           
  1281                           ;main_slave3.c: 59:    if(SSPIF == 1){
  1282  0146  1D8C               	btfss	12,3	;volatile
  1283  0147  2949               	goto	u38_21
  1284  0148  294A               	goto	u38_20
  1285  0149                     u38_21:
  1286  0149  2953               	goto	i1l1103
  1287  014A                     u38_20:
  1288  014A                     i1l1099:
  1289                           
  1290                           ;main_slave3.c: 62:         spiWrite(valor_adc);
  1291  014A  087B               	movf	_valor_adc,w
  1292  014B  120A  118A  2202  120A  118A  	fcall	_spiWrite
  1293  0150                     i1l1101:
  1294                           
  1295                           ;main_slave3.c: 64:         SSPIF = 0;
  1296  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0152  118C               	bcf	12,3	;volatile
  1299  0153                     i1l1103:
  1300                           
  1301                           ;main_slave3.c: 67:    if (PIR1bits.ADIF == 1) {
  1302  0153  1F0C               	btfss	12,6	;volatile
  1303  0154  2956               	goto	u39_21
  1304  0155  2957               	goto	u39_20
  1305  0156                     u39_21:
  1306  0156  297B               	goto	i1l93
  1307  0157                     u39_20:
  1308  0157                     i1l1105:
  1309                           
  1310                           ;main_slave3.c: 71:         valor_adc = ((ADRESH * 150)/255);
  1311  0157  30FF               	movlw	255
  1312  0158  00F6               	movwf	___awdiv@divisor
  1313  0159  3000               	movlw	0
  1314  015A  00F7               	movwf	___awdiv@divisor+1
  1315  015B  081E               	movf	30,w	;volatile
  1316  015C  00A4               	movwf	??_isr
  1317  015D  01A5               	clrf	??_isr+1
  1318  015E  0824               	movf	??_isr,w
  1319  015F  00F0               	movwf	___wmul@multiplier
  1320  0160  0825               	movf	??_isr+1,w
  1321  0161  00F1               	movwf	___wmul@multiplier+1
  1322  0162  3096               	movlw	150
  1323  0163  00F2               	movwf	___wmul@multiplicand
  1324  0164  3000               	movlw	0
  1325  0165  00F3               	movwf	___wmul@multiplicand+1
  1326  0166  120A  118A  21A7  120A  118A  	fcall	___wmul
  1327  016B  0871               	movf	?___wmul+1,w
  1328  016C  00F9               	movwf	___awdiv@dividend+1
  1329  016D  0870               	movf	?___wmul,w
  1330  016E  00F8               	movwf	___awdiv@dividend
  1331  016F  120A  118A  2097  120A  118A  	fcall	___awdiv
  1332  0174  0876               	movf	?___awdiv,w
  1333  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1334  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1335  0177  00A6               	movwf	??_isr+2
  1336  0178  0826               	movf	??_isr+2,w
  1337  0179  00FB               	movwf	_valor_adc
  1338  017A                     i1l1107:
  1339                           
  1340                           ;main_slave3.c: 73:         PIR1bits.ADIF = 0;
  1341  017A  130C               	bcf	12,6	;volatile
  1342  017B                     i1l93:
  1343  017B  0828               	movf	??_isr+4,w
  1344  017C  008A               	movwf	10
  1345  017D  0E27               	swapf	??_isr+3,w
  1346  017E  0083               	movwf	3
  1347  017F  0EFE               	swapf	btemp,f
  1348  0180  0E7E               	swapf	btemp,w
  1349  0181  0009               	retfie
  1350  0182                     __end_of_isr:
  1351                           
  1352                           	psect	intentry
  1353  0004                     __pintentry:	
  1354                           ;incstack = 0
  1355                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1356                           
  1357  0004                     interrupt_function:
  1358  007E                     saved_w	set	btemp
  1359  0004  00FE               	movwf	btemp
  1360  0005  0E03               	swapf	3,w
  1361  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0008  00A7               	movwf	??_isr+3
  1364  0009  080A               	movf	10,w
  1365  000A  00A8               	movwf	??_isr+4
  1366  000B  120A  118A  2946   	ljmp	_isr
  1367                           
  1368                           	psect	text7
  1369  0202                     __ptext7:	
  1370 ;; *************** function _spiWrite *****************
  1371 ;; Defined at:
  1372 ;;		line 34 in file "SPI.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;  dat             1    wreg     unsigned char 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;  dat             1    0[COMMON] unsigned char 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1386 ;;      Params:         0       0       0       0       0
  1387 ;;      Locals:         1       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0
  1389 ;;      Totals:         1       0       0       0       0
  1390 ;;Total ram usage:        1 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_isr
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           
  1400                           ;psect for function _spiWrite
  1401  0202                     _spiWrite:
  1402                           
  1403                           ;incstack = 0
  1404                           ; Regs used in _spiWrite: [wreg]
  1405                           ;spiWrite@dat stored from wreg
  1406  0202  00F0               	movwf	spiWrite@dat
  1407  0203                     i1l753:
  1408                           
  1409                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1410  0203  0870               	movf	spiWrite@dat,w
  1411  0204  1283               	bcf	3,5	;RP0=0, select bank0
  1412  0205  1303               	bcf	3,6	;RP1=0, select bank0
  1413  0206  0093               	movwf	19	;volatile
  1414  0207                     i1l26:
  1415  0207  0008               	return
  1416  0208                     __end_of_spiWrite:
  1417                           
  1418                           	psect	text8
  1419  01A7                     __ptext8:	
  1420 ;; *************** function ___wmul *****************
  1421 ;; Defined at:
  1422 ;;		line 15 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;  multiplier      2    0[COMMON] unsigned int 
  1425 ;;  multiplicand    2    2[COMMON] unsigned int 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  product         2    4[COMMON] unsigned int 
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  2    0[COMMON] unsigned int 
  1430 ;; Registers used:
  1431 ;;		wreg, status,2, status,0
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1437 ;;      Params:         4       0       0       0       0
  1438 ;;      Locals:         2       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0
  1440 ;;      Totals:         6       0       0       0       0
  1441 ;;Total ram usage:        6 bytes
  1442 ;; Hardware stack levels used:    1
  1443 ;; This function calls:
  1444 ;;		Nothing
  1445 ;; This function is called by:
  1446 ;;		_isr
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           
  1451                           ;psect for function ___wmul
  1452  01A7                     ___wmul:
  1453  01A7                     i1l1039:	
  1454                           ;incstack = 0
  1455                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1456                           
  1457  01A7  01F4               	clrf	___wmul@product
  1458  01A8  01F5               	clrf	___wmul@product+1
  1459  01A9                     i1l1041:
  1460  01A9  1C70               	btfss	___wmul@multiplier,0
  1461  01AA  29AC               	goto	u24_21
  1462  01AB  29AD               	goto	u24_20
  1463  01AC                     u24_21:
  1464  01AC  29B3               	goto	i1l235
  1465  01AD                     u24_20:
  1466  01AD                     i1l1043:
  1467  01AD  0872               	movf	___wmul@multiplicand,w
  1468  01AE  07F4               	addwf	___wmul@product,f
  1469  01AF  1803               	skipnc
  1470  01B0  0AF5               	incf	___wmul@product+1,f
  1471  01B1  0873               	movf	___wmul@multiplicand+1,w
  1472  01B2  07F5               	addwf	___wmul@product+1,f
  1473  01B3                     i1l235:
  1474  01B3  3001               	movlw	1
  1475  01B4                     u25_25:
  1476  01B4  1003               	clrc
  1477  01B5  0DF2               	rlf	___wmul@multiplicand,f
  1478  01B6  0DF3               	rlf	___wmul@multiplicand+1,f
  1479  01B7  3EFF               	addlw	-1
  1480  01B8  1D03               	skipz
  1481  01B9  29B4               	goto	u25_25
  1482  01BA                     i1l1045:
  1483  01BA  3001               	movlw	1
  1484  01BB                     u26_25:
  1485  01BB  1003               	clrc
  1486  01BC  0CF1               	rrf	___wmul@multiplier+1,f
  1487  01BD  0CF0               	rrf	___wmul@multiplier,f
  1488  01BE  3EFF               	addlw	-1
  1489  01BF  1D03               	skipz
  1490  01C0  29BB               	goto	u26_25
  1491  01C1                     i1l1047:
  1492  01C1  0870               	movf	___wmul@multiplier,w
  1493  01C2  0471               	iorwf	___wmul@multiplier+1,w
  1494  01C3  1D03               	btfss	3,2
  1495  01C4  29C6               	goto	u27_21
  1496  01C5  29C7               	goto	u27_20
  1497  01C6                     u27_21:
  1498  01C6  29A9               	goto	i1l1041
  1499  01C7                     u27_20:
  1500  01C7                     i1l1049:
  1501  01C7  0875               	movf	___wmul@product+1,w
  1502  01C8  00F1               	movwf	?___wmul+1
  1503  01C9  0874               	movf	___wmul@product,w
  1504  01CA  00F0               	movwf	?___wmul
  1505  01CB                     i1l237:
  1506  01CB  0008               	return
  1507  01CC                     __end_of___wmul:
  1508                           
  1509                           	psect	text9
  1510  0097                     __ptext9:	
  1511 ;; *************** function ___awdiv *****************
  1512 ;; Defined at:
  1513 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  divisor         2    6[COMMON] int 
  1516 ;;  dividend        2    8[COMMON] int 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  quotient        2    2[BANK0 ] int 
  1519 ;;  sign            1    1[BANK0 ] unsigned char 
  1520 ;;  counter         1    0[BANK0 ] unsigned char 
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  2    6[COMMON] int 
  1523 ;; Registers used:
  1524 ;;		wreg, status,2, status,0
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1530 ;;      Params:         4       0       0       0       0
  1531 ;;      Locals:         0       4       0       0       0
  1532 ;;      Temps:          1       0       0       0       0
  1533 ;;      Totals:         5       4       0       0       0
  1534 ;;Total ram usage:        9 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; This function calls:
  1537 ;;		Nothing
  1538 ;; This function is called by:
  1539 ;;		_isr
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           
  1544                           ;psect for function ___awdiv
  1545  0097                     ___awdiv:
  1546  0097                     i1l1053:	
  1547                           ;incstack = 0
  1548                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1549                           
  1550  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0099  01A1               	clrf	___awdiv@sign
  1553  009A                     i1l1055:
  1554  009A  1FF7               	btfss	___awdiv@divisor+1,7
  1555  009B  289D               	goto	u28_21
  1556  009C  289E               	goto	u28_20
  1557  009D                     u28_21:
  1558  009D  28A5               	goto	i1l1061
  1559  009E                     u28_20:
  1560  009E                     i1l1057:
  1561  009E  09F6               	comf	___awdiv@divisor,f
  1562  009F  09F7               	comf	___awdiv@divisor+1,f
  1563  00A0  0AF6               	incf	___awdiv@divisor,f
  1564  00A1  1903               	skipnz
  1565  00A2  0AF7               	incf	___awdiv@divisor+1,f
  1566  00A3                     i1l1059:
  1567  00A3  01A1               	clrf	___awdiv@sign
  1568  00A4  0AA1               	incf	___awdiv@sign,f
  1569  00A5                     i1l1061:
  1570  00A5  1FF9               	btfss	___awdiv@dividend+1,7
  1571  00A6  28A8               	goto	u29_21
  1572  00A7  28A9               	goto	u29_20
  1573  00A8                     u29_21:
  1574  00A8  28B2               	goto	i1l1067
  1575  00A9                     u29_20:
  1576  00A9                     i1l1063:
  1577  00A9  09F8               	comf	___awdiv@dividend,f
  1578  00AA  09F9               	comf	___awdiv@dividend+1,f
  1579  00AB  0AF8               	incf	___awdiv@dividend,f
  1580  00AC  1903               	skipnz
  1581  00AD  0AF9               	incf	___awdiv@dividend+1,f
  1582  00AE                     i1l1065:
  1583  00AE  3001               	movlw	1
  1584  00AF  00FA               	movwf	??___awdiv
  1585  00B0  087A               	movf	??___awdiv,w
  1586  00B1  06A1               	xorwf	___awdiv@sign,f
  1587  00B2                     i1l1067:
  1588  00B2  01A2               	clrf	___awdiv@quotient
  1589  00B3  01A3               	clrf	___awdiv@quotient+1
  1590  00B4                     i1l1069:
  1591  00B4  0876               	movf	___awdiv@divisor,w
  1592  00B5  0477               	iorwf	___awdiv@divisor+1,w
  1593  00B6  1903               	btfsc	3,2
  1594  00B7  28B9               	goto	u30_21
  1595  00B8  28BA               	goto	u30_20
  1596  00B9                     u30_21:
  1597  00B9  28F1               	goto	i1l1089
  1598  00BA                     u30_20:
  1599  00BA                     i1l1071:
  1600  00BA  01A0               	clrf	___awdiv@counter
  1601  00BB  0AA0               	incf	___awdiv@counter,f
  1602  00BC  28C8               	goto	i1l1077
  1603  00BD                     i1l1073:
  1604  00BD  3001               	movlw	1
  1605  00BE                     u31_25:
  1606  00BE  1003               	clrc
  1607  00BF  0DF6               	rlf	___awdiv@divisor,f
  1608  00C0  0DF7               	rlf	___awdiv@divisor+1,f
  1609  00C1  3EFF               	addlw	-1
  1610  00C2  1D03               	skipz
  1611  00C3  28BE               	goto	u31_25
  1612  00C4                     i1l1075:
  1613  00C4  3001               	movlw	1
  1614  00C5  00FA               	movwf	??___awdiv
  1615  00C6  087A               	movf	??___awdiv,w
  1616  00C7  07A0               	addwf	___awdiv@counter,f
  1617  00C8                     i1l1077:
  1618  00C8  1FF7               	btfss	___awdiv@divisor+1,7
  1619  00C9  28CB               	goto	u32_21
  1620  00CA  28CC               	goto	u32_20
  1621  00CB                     u32_21:
  1622  00CB  28BD               	goto	i1l1073
  1623  00CC                     u32_20:
  1624  00CC                     i1l1079:
  1625  00CC  3001               	movlw	1
  1626  00CD                     u33_25:
  1627  00CD  1003               	clrc
  1628  00CE  0DA2               	rlf	___awdiv@quotient,f
  1629  00CF  0DA3               	rlf	___awdiv@quotient+1,f
  1630  00D0  3EFF               	addlw	-1
  1631  00D1  1D03               	skipz
  1632  00D2  28CD               	goto	u33_25
  1633  00D3  0877               	movf	___awdiv@divisor+1,w
  1634  00D4  0279               	subwf	___awdiv@dividend+1,w
  1635  00D5  1D03               	skipz
  1636  00D6  28D9               	goto	u34_25
  1637  00D7  0876               	movf	___awdiv@divisor,w
  1638  00D8  0278               	subwf	___awdiv@dividend,w
  1639  00D9                     u34_25:
  1640  00D9  1C03               	skipc
  1641  00DA  28DC               	goto	u34_21
  1642  00DB  28DD               	goto	u34_20
  1643  00DC                     u34_21:
  1644  00DC  28E4               	goto	i1l1085
  1645  00DD                     u34_20:
  1646  00DD                     i1l1081:
  1647  00DD  0876               	movf	___awdiv@divisor,w
  1648  00DE  02F8               	subwf	___awdiv@dividend,f
  1649  00DF  0877               	movf	___awdiv@divisor+1,w
  1650  00E0  1C03               	skipc
  1651  00E1  03F9               	decf	___awdiv@dividend+1,f
  1652  00E2  02F9               	subwf	___awdiv@dividend+1,f
  1653  00E3                     i1l1083:
  1654  00E3  1422               	bsf	___awdiv@quotient,0
  1655  00E4                     i1l1085:
  1656  00E4  3001               	movlw	1
  1657  00E5                     u35_25:
  1658  00E5  1003               	clrc
  1659  00E6  0CF7               	rrf	___awdiv@divisor+1,f
  1660  00E7  0CF6               	rrf	___awdiv@divisor,f
  1661  00E8  3EFF               	addlw	-1
  1662  00E9  1D03               	skipz
  1663  00EA  28E5               	goto	u35_25
  1664  00EB                     i1l1087:
  1665  00EB  3001               	movlw	1
  1666  00EC  02A0               	subwf	___awdiv@counter,f
  1667  00ED  1D03               	btfss	3,2
  1668  00EE  28F0               	goto	u36_21
  1669  00EF  28F1               	goto	u36_20
  1670  00F0                     u36_21:
  1671  00F0  28CC               	goto	i1l1079
  1672  00F1                     u36_20:
  1673  00F1                     i1l1089:
  1674  00F1  0821               	movf	___awdiv@sign,w
  1675  00F2  1903               	btfsc	3,2
  1676  00F3  28F5               	goto	u37_21
  1677  00F4  28F6               	goto	u37_20
  1678  00F5                     u37_21:
  1679  00F5  28FB               	goto	i1l1093
  1680  00F6                     u37_20:
  1681  00F6                     i1l1091:
  1682  00F6  09A2               	comf	___awdiv@quotient,f
  1683  00F7  09A3               	comf	___awdiv@quotient+1,f
  1684  00F8  0AA2               	incf	___awdiv@quotient,f
  1685  00F9  1903               	skipnz
  1686  00FA  0AA3               	incf	___awdiv@quotient+1,f
  1687  00FB                     i1l1093:
  1688  00FB  0823               	movf	___awdiv@quotient+1,w
  1689  00FC  00F7               	movwf	?___awdiv+1
  1690  00FD  0822               	movf	___awdiv@quotient,w
  1691  00FE  00F6               	movwf	?___awdiv
  1692  00FF                     i1l388:
  1693  00FF  0008               	return
  1694  0100                     __end_of___awdiv:
  1695  007E                     btemp	set	126	;btemp
  1696  007E                     wtemp0	set	126
  1697                           
  1698                           	psect	config
  1699                           
  1700                           ;Config register CONFIG1 @ 0x2007
  1701                           ;	Oscillator Selection bits
  1702                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1703                           ;	Watchdog Timer Enable bit
  1704                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1705                           ;	Power-up Timer Enable bit
  1706                           ;	PWRTE = OFF, PWRT disabled
  1707                           ;	RE3/MCLR pin function select bit
  1708                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1709                           ;	Code Protection bit
  1710                           ;	CP = OFF, Program memory code protection is disabled
  1711                           ;	Data Code Protection bit
  1712                           ;	CPD = OFF, Data memory code protection is disabled
  1713                           ;	Brown Out Reset Selection bits
  1714                           ;	BOREN = OFF, BOR disabled
  1715                           ;	Internal External Switchover bit
  1716                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1717                           ;	Fail-Safe Clock Monitor Enabled bit
  1718                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1719                           ;	Low Voltage Programming Enable bit
  1720                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1721                           ;	In-Circuit Debugger Mode bit
  1722                           ;	DEBUG = 0x1, unprogrammed default
  1723  2007                     	org	8199
  1724  2007  20D6               	dw	8406
  1725                           
  1726                           ;Config register CONFIG2 @ 0x2008
  1727                           ;	Brown-out Reset Selection bit
  1728                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1729                           ;	Flash Program Memory Self Write Enable bits
  1730                           ;	WRT = OFF, Write protection off
  1731  2008                     	org	8200
  1732  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     13      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    _isr->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     382
                         _ADC_Select
                                _adc
                            _initADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              9 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc                                                  1     1      0       0
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Select                                           3     3      0      22
                                              9 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0     711
                                              4 BANK0      5     5      0
                            ___awdiv
                             ___wmul
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Select
   _adc
   _initADC
   _setup
     _spiInit

 _isr (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D       D       5       16.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 19:29:18 2021

            _SSPSTATbits 0094                       l16 01E4                       l17 01E9  
           ___awdiv@sign 0021      ___wmul@multiplicand 0072                      l100 0142  
                    l109 01A6                      l126 01F6                      l129 0201  
                    l149 0096                      l961 01D8                      l963 01DC  
                    l971 0186                      l965 01DE                      l981 0197  
                    l973 0187                      l991 01F3                      l967 01E3  
                    l959 01CF                      l983 019A                      l975 0194  
                    l993 001A                      l985 019B                      l977 0195  
                    l969 0182                      l995 001B                      l987 01EA  
                    l979 0196                      l997 001E                      l989 01F1  
                    l999 0023                      u230 01D8                      u231 01D7  
                    u400 011E                      u401 011D                      u410 012A  
                    u411 0129                      u420 0130                      u421 012F  
                    u430 013C                      u431 013B                      u447 01FB  
    __size_of_ADC_Select 0080                      _adc 01F7                      _isr 0146  
                   ?_adc 0070                     l1001 0028                     l1011 0041  
                   l1003 002D                     l1021 005A                     l1013 0046  
                   l1005 0032                     l1023 005F                     l1015 004B  
                   l1007 0037                     l1111 010A                     l1017 0050  
                   l1009 003C                     l1121 0124                     l1113 0110  
                   l1019 0055                     l1027 0062                     l1035 01F7  
                   l1123 012A                     l1115 0113                     l1037 01FE  
                   l1125 0130                     l1117 0118                     l1109 0100  
                   l1127 0136                     l1119 011E                     l1161 006A  
                   l1129 013C                     ?_isr 0070                     i1l26 0207  
                   i1l93 017B                     _main 0100                     btemp 007E  
                   start 000E                    ??_adc 0029                    ??_isr 0024  
                  ?_main 0070          __end_of___awdiv 0100                    _ANSEL 0188  
        ___awdiv@divisor 0076                    i1l235 01B3                    i1l237 01CB  
                  i1l388 00FF                    i1l753 0203          ___awdiv@counter 0020  
                  u30_20 00BA                    u30_21 00B9                    u31_25 00BE  
                  u32_20 00CC                    u24_20 01AD                    u32_21 00CB  
                  u24_21 01AC                    u33_25 00CD                    u25_25 01B4  
                  u34_20 00DD                    u34_21 00DC                    u34_25 00D9  
                  u26_25 01BB                    u27_20 01C7                    u27_21 01C6  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    u35_25 00E5                    u36_20 00F1  
                  u28_20 009E                    u36_21 00F0                    u28_21 009D  
                  u37_20 00F6                    u29_20 00A9                    u37_21 00F5  
                  u29_21 00A8                    u38_20 014A                    u38_21 0149  
                  u39_20 0157                    u39_21 0156                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _SSPIF 0063          __end_of_initADC 01F7                    _setup 0182  
                  pclath 000A          __end_of_spiInit 01EA                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 0146  
                 ??_main 002D                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E         ___awdiv@dividend 0078                   ?_setup 0070  
                 _ANSELH 0189                   i1l1101 0150                   i1l1103 0153  
                 i1l1041 01A9                   i1l1105 0157                   i1l1043 01AD  
                 i1l1107 017A                   i1l1061 00A5                   i1l1053 0097  
                 i1l1045 01BA                   i1l1071 00BA                   i1l1063 00A9  
                 i1l1055 009A                   i1l1047 01C1                   i1l1039 01A7  
                 i1l1081 00DD                   i1l1073 00BD                   i1l1065 00AE  
                 i1l1057 009E                   i1l1049 01C7                   i1l1091 00F6  
                 i1l1083 00E3                   i1l1075 00C4                   i1l1067 00B2  
                 i1l1059 00A3                   i1l1093 00FB                   i1l1085 00E4  
                 i1l1077 00C8                   i1l1069 00B4                   i1l1087 00EB  
                 i1l1079 00CC                   i1l1089 00F1                   i1l1097 0146  
                 i1l1099 014A             ??_ADC_Select 0029                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 ___wmul 01A7                ??___awdiv 007A         ___awdiv@quotient 0022  
              ??_initADC 0029       __end_of_ADC_Select 0097                   saved_w 007E  
       __end_of_spiWrite 0208                ??_spiInit 002C  __end_of__initialization 0013  
         __pcstackCOMMON 0070            __end_of_setup 01A7                  ??_setup 002D  
             __pmaintext 0100                  ?___wmul 0070               __pintentry 0004  
                _SSPSTAT 0094                ?_spiWrite 0070                  ___awdiv 0097  
        __size_of___wmul 0025                  __ptext1 0182                  __ptext2 01CC  
                __ptext3 01EA                  __ptext4 01F7                  __ptext5 0017  
                __ptext6 0146                  __ptext7 0202                  __ptext8 01A7  
                __ptext9 0097                  _initADC 01EA             __size_of_adc 000B  
           __size_of_isr 003C                  _spiInit 01CC     end_of_initialization 0013  
             ??_spiWrite 0070                _PORTDbits 0008                _TRISAbits 0085  
            spiWrite@dat 0070           __end_of___wmul 01CC      start_initialization 0011  
            __end_of_adc 0202              __end_of_isr 0182                 ??___wmul 0074  
            __pbssCOMMON 007B                ___latbits 0002            __pcstackBANK0 0020  
               ?___awdiv 0076        __size_of_spiWrite 0006                 ?_initADC 0070  
               ?_spiInit 0029           __size_of_setup 0025              ADC_Select@a 002B  
   spiInit@sTransmitEdge 002B        interrupt_function 0004           ___wmul@product 0074  
               _PIE1bits 008C       spiInit@sDataSample 0029                 _PIR1bits 000C  
              _valor_adc 007B               _ADCON0bits 001F               _ADCON1bits 009F  
      ___wmul@multiplier 0070               _ADC_Select 0017         __size_of___awdiv 0069  
       __size_of_initADC 000D         __size_of_spiInit 001E                 _contador 007C  
          __size_of_main 0046                 _spiWrite 0202             spiInit@sType 002C  
      spiInit@sClockIdle 002A               _INTCONbits 000B                 intlevel1 0000  
            ?_ADC_Select 0070  
