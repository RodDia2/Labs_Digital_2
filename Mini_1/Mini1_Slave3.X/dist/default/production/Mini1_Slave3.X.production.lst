

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 10:13:36 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  001F                     _ADCON0bits	set	31
   369  001F                     _ADCON0	set	31
   370  000B                     _INTCONbits	set	11
   371  0007                     _PORTC	set	7
   372  0006                     _PORTB	set	6
   373  0005                     _PORTA	set	5
   374  0008                     _PORTDbits	set	8
   375  0008                     _PORTD	set	8
   376  001E                     _ADRESH	set	30
   377  000C                     _PIR1bits	set	12
   378  0013                     _SSPBUF	set	19
   379  0014                     _SSPCON	set	20
   380  0063                     _SSPIF	set	99
   381  009F                     _ADCON1	set	159
   382  0085                     _TRISAbits	set	133
   383  008C                     _PIE1bits	set	140
   384  0088                     _TRISD	set	136
   385  0087                     _TRISC	set	135
   386  0086                     _TRISB	set	134
   387  0085                     _TRISA	set	133
   388  009F                     _ADCON1bits	set	159
   389  0094                     _SSPSTATbits	set	148
   390  0094                     _SSPSTAT	set	148
   391  043B                     _TRISC3	set	1083
   392  043D                     _TRISC5	set	1085
   393  0189                     _ANSELH	set	393
   394  0188                     _ANSEL	set	392
   395                           
   396                           	psect	cinit
   397  0011                     start_initialization:	
   398                           ; #config settings
   399                           
   400  0011                     __initialization:
   401                           
   402                           ; Clear objects allocated to COMMON
   403  0011  01FB               	clrf	__pbssCOMMON& (0+127)
   404  0012  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   405  0013                     end_of_initialization:	
   406                           ;End of C runtime variable initialization code
   407                           
   408  0013                     __end_of__initialization:
   409  0013  0183               	clrf	3
   410  0014  120A  118A  2900   	ljmp	_main	;jump to C main() function
   411                           
   412                           	psect	bssCOMMON
   413  007B                     __pbssCOMMON:
   414  007B                     _valor_adc:
   415  007B                     	ds	1
   416  007C                     _contador:
   417  007C                     	ds	1
   418                           
   419                           	psect	cstackCOMMON
   420  0070                     __pcstackCOMMON:
   421  0070                     ?_setup:
   422  0070                     ?_initADC:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_ADC_Select:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_adc:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_spiWrite:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ??_spiWrite:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_isr:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_main:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?___wmul:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     spiWrite@dat:	
   447                           ; 2 bytes @ 0x0
   448                           
   449  0070                     ___wmul@multiplier:	
   450                           ; 1 bytes @ 0x0
   451                           
   452                           
   453                           ; 2 bytes @ 0x0
   454  0070                     	ds	2
   455  0072                     ___wmul@multiplicand:
   456                           
   457                           ; 2 bytes @ 0x2
   458  0072                     	ds	2
   459  0074                     ??___wmul:
   460  0074                     ___wmul@product:	
   461                           ; 1 bytes @ 0x4
   462                           
   463                           
   464                           ; 2 bytes @ 0x4
   465  0074                     	ds	2
   466  0076                     ?___awdiv:
   467  0076                     ___awdiv@divisor:	
   468                           ; 2 bytes @ 0x6
   469                           
   470                           
   471                           ; 2 bytes @ 0x6
   472  0076                     	ds	2
   473  0078                     ___awdiv@dividend:
   474                           
   475                           ; 2 bytes @ 0x8
   476  0078                     	ds	2
   477  007A                     ??___awdiv:
   478                           
   479                           ; 1 bytes @ 0xA
   480  007A                     	ds	1
   481                           
   482                           	psect	cstackBANK0
   483  0020                     __pcstackBANK0:
   484  0020                     ___awdiv@counter:
   485                           
   486                           ; 1 bytes @ 0x0
   487  0020                     	ds	1
   488  0021                     ___awdiv@sign:
   489                           
   490                           ; 1 bytes @ 0x1
   491  0021                     	ds	1
   492  0022                     ___awdiv@quotient:
   493                           
   494                           ; 2 bytes @ 0x2
   495  0022                     	ds	2
   496  0024                     ??_isr:
   497                           
   498                           ; 1 bytes @ 0x4
   499  0024                     	ds	5
   500  0029                     ??_initADC:
   501  0029                     ??_ADC_Select:	
   502                           ; 1 bytes @ 0x9
   503                           
   504  0029                     ??_adc:	
   505                           ; 1 bytes @ 0x9
   506                           
   507  0029                     ?_spiInit:	
   508                           ; 1 bytes @ 0x9
   509                           
   510  0029                     spiInit@sDataSample:	
   511                           ; 1 bytes @ 0x9
   512                           
   513                           
   514                           ; 1 bytes @ 0x9
   515  0029                     	ds	1
   516  002A                     spiInit@sClockIdle:
   517                           
   518                           ; 1 bytes @ 0xA
   519  002A                     	ds	1
   520  002B                     spiInit@sTransmitEdge:
   521  002B                     ADC_Select@a:	
   522                           ; 1 bytes @ 0xB
   523                           
   524                           
   525                           ; 1 bytes @ 0xB
   526  002B                     	ds	1
   527  002C                     ??_spiInit:
   528  002C                     spiInit@sType:	
   529                           ; 1 bytes @ 0xC
   530                           
   531                           
   532                           ; 1 bytes @ 0xC
   533  002C                     	ds	1
   534  002D                     ??_setup:
   535  002D                     ??_main:	
   536                           ; 1 bytes @ 0xD
   537                           
   538                           
   539                           	psect	maintext
   540  0100                     __pmaintext:	
   541                           ; 1 bytes @ 0xD
   542 ;;
   543 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   544 ;;
   545 ;; *************** function _main *****************
   546 ;; Defined at:
   547 ;;		line 75 in file "main_slave3.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;		None
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   556 ;; Tracked objects:
   557 ;;		On entry : B00/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   561 ;;      Params:         0       0       0       0       0
   562 ;;      Locals:         0       0       0       0       0
   563 ;;      Temps:          0       0       0       0       0
   564 ;;      Totals:         0       0       0       0       0
   565 ;;Total ram usage:        0 bytes
   566 ;; Hardware stack levels required when called:    4
   567 ;; This function calls:
   568 ;;		_ADC_Select
   569 ;;		_adc
   570 ;;		_initADC
   571 ;;		_setup
   572 ;; This function is called by:
   573 ;;		Startup code after reset
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           
   578                           ;psect for function _main
   579  0100                     _main:
   580  0100                     l1111:	
   581                           ;incstack = 0
   582                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   583                           
   584                           
   585                           ;main_slave3.c: 76:     setup();
   586  0100  120A  118A  2180  120A  118A  	fcall	_setup
   587                           
   588                           ;main_slave3.c: 77:     initADC();
   589  0105  120A  118A  21E8  120A  118A  	fcall	_initADC
   590  010A                     l1113:
   591                           
   592                           ;main_slave3.c: 78:     ADC_Select(0);
   593  010A  3000               	movlw	0
   594  010B  120A  118A  2017  120A  118A  	fcall	_ADC_Select
   595  0110                     l1115:
   596                           
   597                           ;main_slave3.c: 79:     ADCON1bits.VCFG0 = 1;
   598  0110  1683               	bsf	3,5	;RP0=1, select bank1
   599  0111  1303               	bcf	3,6	;RP1=0, select bank1
   600  0112  161F               	bsf	31,4	;volatile
   601  0113                     l1117:
   602                           
   603                           ;main_slave3.c: 84:         adc();
   604  0113  120A  118A  21F5  120A  118A  	fcall	_adc
   605  0118                     l1119:
   606                           
   607                           ;main_slave3.c: 85:         PORTD = valor_adc;
   608  0118  087B               	movf	_valor_adc,w
   609  0119  1283               	bcf	3,5	;RP0=0, select bank0
   610  011A  1303               	bcf	3,6	;RP1=0, select bank0
   611  011B  0088               	movwf	8	;volatile
   612  011C                     l1121:
   613                           
   614                           ;main_slave3.c: 86:         if (valor_adc < 25) {
   615  011C  3019               	movlw	25
   616  011D  027B               	subwf	_valor_adc,w
   617  011E  1803               	skipnc
   618  011F  2921               	goto	u401
   619  0120  2922               	goto	u400
   620  0121                     u401:
   621  0121  2926               	goto	l1125
   622  0122                     u400:
   623  0122                     l1123:
   624                           
   625                           ;main_slave3.c: 87:             PORTDbits.RD2 = 1;
   626  0122  1508               	bsf	8,2	;volatile
   627                           
   628                           ;main_slave3.c: 88:             PORTDbits.RD1 = 0;
   629  0123  1088               	bcf	8,1	;volatile
   630                           
   631                           ;main_slave3.c: 89:             PORTDbits.RD0 = 0;
   632  0124  1008               	bcf	8,0	;volatile
   633                           
   634                           ;main_slave3.c: 91:         } else if (25 <= valor_adc && valor_adc < 36) {
   635  0125  2913               	goto	l1117
   636  0126                     l1125:
   637  0126  3019               	movlw	25
   638  0127  027B               	subwf	_valor_adc,w
   639  0128  1C03               	skipc
   640  0129  292B               	goto	u411
   641  012A  292C               	goto	u410
   642  012B                     u411:
   643  012B  2936               	goto	l1131
   644  012C                     u410:
   645  012C                     l1127:
   646  012C  3024               	movlw	36
   647  012D  027B               	subwf	_valor_adc,w
   648  012E  1803               	skipnc
   649  012F  2931               	goto	u421
   650  0130  2932               	goto	u420
   651  0131                     u421:
   652  0131  2936               	goto	l1131
   653  0132                     u420:
   654  0132                     l1129:
   655                           
   656                           ;main_slave3.c: 92:             PORTDbits.RD2 = 0;
   657  0132  1108               	bcf	8,2	;volatile
   658                           
   659                           ;main_slave3.c: 93:             PORTDbits.RD1 = 1;
   660  0133  1488               	bsf	8,1	;volatile
   661                           
   662                           ;main_slave3.c: 94:             PORTDbits.RD0 = 0;
   663  0134  1008               	bcf	8,0	;volatile
   664                           
   665                           ;main_slave3.c: 95:         } else if (valor_adc >= 36) {
   666  0135  2913               	goto	l1117
   667  0136                     l1131:
   668  0136  3024               	movlw	36
   669  0137  027B               	subwf	_valor_adc,w
   670  0138  1C03               	skipc
   671  0139  293B               	goto	u431
   672  013A  293C               	goto	u430
   673  013B                     u431:
   674  013B  2940               	goto	l100
   675  013C                     u430:
   676  013C                     l1133:
   677                           
   678                           ;main_slave3.c: 96:             PORTDbits.RD2 = 0;
   679  013C  1108               	bcf	8,2	;volatile
   680                           
   681                           ;main_slave3.c: 97:             PORTDbits.RD1 = 0;
   682  013D  1088               	bcf	8,1	;volatile
   683                           
   684                           ;main_slave3.c: 98:             PORTDbits.RD0 = 1;
   685  013E  1408               	bsf	8,0	;volatile
   686  013F  2913               	goto	l1117
   687  0140                     l100:
   688  0140  2913               	goto	l1117
   689  0141  120A  118A  280E   	ljmp	start
   690  0144                     __end_of_main:
   691                           
   692                           	psect	text1
   693  0180                     __ptext1:	
   694 ;; *************** function _setup *****************
   695 ;; Defined at:
   696 ;;		line 107 in file "main_slave3.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0, pclath, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   710 ;;      Params:         0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0
   712 ;;      Temps:          0       0       0       0       0
   713 ;;      Totals:         0       0       0       0       0
   714 ;;Total ram usage:        0 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; Hardware stack levels required when called:    3
   717 ;; This function calls:
   718 ;;		_spiInit
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           
   725                           ;psect for function _setup
   726  0180                     _setup:
   727  0180                     l971:	
   728                           ;incstack = 0
   729                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   730                           
   731                           
   732                           ;main_slave3.c: 108:     ANSEL = 0b00000001;
   733  0180  3001               	movlw	1
   734  0181  1683               	bsf	3,5	;RP0=1, select bank3
   735  0182  1703               	bsf	3,6	;RP1=1, select bank3
   736  0183  0088               	movwf	8	;volatile
   737  0184                     l973:
   738                           
   739                           ;main_slave3.c: 109:     ANSELH = 0;
   740  0184  0189               	clrf	9	;volatile
   741  0185                     l975:
   742                           
   743                           ;main_slave3.c: 111:     TRISA = 0b00000001;
   744  0185  3001               	movlw	1
   745  0186  1683               	bsf	3,5	;RP0=1, select bank1
   746  0187  1303               	bcf	3,6	;RP1=0, select bank1
   747  0188  0085               	movwf	5	;volatile
   748                           
   749                           ;main_slave3.c: 112:     TRISB = 0b00000000;
   750  0189  0186               	clrf	6	;volatile
   751                           
   752                           ;main_slave3.c: 113:     TRISC = 0;
   753  018A  0187               	clrf	7	;volatile
   754                           
   755                           ;main_slave3.c: 114:     TRISD = 0;
   756  018B  0188               	clrf	8	;volatile
   757                           
   758                           ;main_slave3.c: 116:     PORTA = 0;
   759  018C  1283               	bcf	3,5	;RP0=0, select bank0
   760  018D  1303               	bcf	3,6	;RP1=0, select bank0
   761  018E  0185               	clrf	5	;volatile
   762                           
   763                           ;main_slave3.c: 117:     PORTB = 0;
   764  018F  0186               	clrf	6	;volatile
   765                           
   766                           ;main_slave3.c: 118:     PORTC = 0;
   767  0190  0187               	clrf	7	;volatile
   768                           
   769                           ;main_slave3.c: 119:     PORTD = 0;
   770  0191  0188               	clrf	8	;volatile
   771  0192                     l977:
   772                           
   773                           ;main_slave3.c: 123:     INTCONbits.GIE = 1;
   774  0192  178B               	bsf	11,7	;volatile
   775  0193                     l979:
   776                           
   777                           ;main_slave3.c: 124:     INTCONbits.PEIE = 1;
   778  0193  170B               	bsf	11,6	;volatile
   779  0194                     l981:
   780                           
   781                           ;main_slave3.c: 125:     PIR1bits.SSPIF = 0;
   782  0194  118C               	bcf	12,3	;volatile
   783  0195                     l983:
   784                           
   785                           ;main_slave3.c: 126:     PIE1bits.SSPIE = 1;
   786  0195  1683               	bsf	3,5	;RP0=1, select bank1
   787  0196  1303               	bcf	3,6	;RP1=0, select bank1
   788  0197  158C               	bsf	12,3	;volatile
   789  0198                     l985:
   790                           
   791                           ;main_slave3.c: 127:     TRISAbits.TRISA5 = 1;
   792  0198  1685               	bsf	5,5	;volatile
   793  0199                     l987:
   794                           
   795                           ;main_slave3.c: 129:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE
      +                          _LOW, SPI_IDLE_2_ACTIVE);
   796  0199  1283               	bcf	3,5	;RP0=0, select bank0
   797  019A  1303               	bcf	3,6	;RP1=0, select bank0
   798  019B  01A9               	clrf	spiInit@sDataSample
   799  019C  01AA               	clrf	spiInit@sClockIdle
   800  019D  01AB               	clrf	spiInit@sTransmitEdge
   801  019E  3024               	movlw	36
   802  019F  120A  118A  21CA  120A  118A  	fcall	_spiInit
   803  01A4                     l109:
   804  01A4  0008               	return
   805  01A5                     __end_of_setup:
   806                           
   807                           	psect	text2
   808  01CA                     __ptext2:	
   809 ;; *************** function _spiInit *****************
   810 ;; Defined at:
   811 ;;		line 12 in file "SPI.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;  sType           1    wreg     enum E1264
   814 ;;  sDataSample     1    9[BANK0 ] enum E1272
   815 ;;  sClockIdle      1   10[BANK0 ] enum E1276
   816 ;;  sTransmitEdg    1   11[BANK0 ] enum E1280
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  sType           1   12[BANK0 ] enum E1264
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         0       3       0       0       0
   829 ;;      Locals:         0       1       0       0       0
   830 ;;      Temps:          0       0       0       0       0
   831 ;;      Totals:         0       4       0       0       0
   832 ;;Total ram usage:        4 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    2
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_setup
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           
   843                           ;psect for function _spiInit
   844  01CA                     _spiInit:
   845                           
   846                           ;incstack = 0
   847                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   848                           ;spiInit@sType stored from wreg
   849  01CA  1283               	bcf	3,5	;RP0=0, select bank0
   850  01CB  1303               	bcf	3,6	;RP1=0, select bank0
   851  01CC  00AC               	movwf	spiInit@sType
   852  01CD                     l961:
   853                           
   854                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   855  01CD  1683               	bsf	3,5	;RP0=1, select bank1
   856  01CE  1303               	bcf	3,6	;RP1=0, select bank1
   857  01CF  1287               	bcf	7,5	;volatile
   858                           
   859                           ;SPI.c: 15:     if(sType & 0b00000100)
   860  01D0  1283               	bcf	3,5	;RP0=0, select bank0
   861  01D1  1303               	bcf	3,6	;RP1=0, select bank0
   862  01D2  1D2C               	btfss	spiInit@sType,2
   863  01D3  29D5               	goto	u231
   864  01D4  29D6               	goto	u230
   865  01D5                     u231:
   866  01D5  29DC               	goto	l967
   867  01D6                     u230:
   868  01D6                     l963:
   869                           
   870                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   871  01D6  082B               	movf	spiInit@sTransmitEdge,w
   872  01D7  1683               	bsf	3,5	;RP0=1, select bank1
   873  01D8  1303               	bcf	3,6	;RP1=0, select bank1
   874  01D9  0094               	movwf	20	;volatile
   875  01DA                     l965:
   876                           
   877                           ;SPI.c: 18:         TRISC3 = 1;
   878  01DA  1587               	bsf	7,3	;volatile
   879                           
   880                           ;SPI.c: 19:     }
   881  01DB  29E2               	goto	l16
   882  01DC                     l967:
   883                           
   884                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   885  01DC  0829               	movf	spiInit@sDataSample,w
   886  01DD  042B               	iorwf	spiInit@sTransmitEdge,w
   887  01DE  1683               	bsf	3,5	;RP0=1, select bank1
   888  01DF  1303               	bcf	3,6	;RP1=0, select bank1
   889  01E0  0094               	movwf	20	;volatile
   890  01E1                     l969:
   891                           
   892                           ;SPI.c: 23:         TRISC3 = 0;
   893  01E1  1187               	bcf	7,3	;volatile
   894  01E2                     l16:	
   895                           ;SPI.c: 24:     }
   896                           
   897                           
   898                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   899  01E2  1283               	bcf	3,5	;RP0=0, select bank0
   900  01E3  1303               	bcf	3,6	;RP1=0, select bank0
   901  01E4  082C               	movf	spiInit@sType,w
   902  01E5  042A               	iorwf	spiInit@sClockIdle,w
   903  01E6  0094               	movwf	20	;volatile
   904  01E7                     l17:
   905  01E7  0008               	return
   906  01E8                     __end_of_spiInit:
   907                           
   908                           	psect	text3
   909  01E8                     __ptext3:	
   910 ;; *************** function _initADC *****************
   911 ;; Defined at:
   912 ;;		line 7 in file "ADC.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, status,2
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   926 ;;      Params:         0       0       0       0       0
   927 ;;      Locals:         0       0       0       0       0
   928 ;;      Temps:          0       0       0       0       0
   929 ;;      Totals:         0       0       0       0       0
   930 ;;Total ram usage:        0 bytes
   931 ;; Hardware stack levels used:    1
   932 ;; Hardware stack levels required when called:    2
   933 ;; This function calls:
   934 ;;		Nothing
   935 ;; This function is called by:
   936 ;;		_main
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940                           
   941                           ;psect for function _initADC
   942  01E8                     _initADC:
   943  01E8                     l989:	
   944                           ;incstack = 0
   945                           ; Regs used in _initADC: [wreg+status,2]
   946                           
   947                           
   948                           ;ADC.c: 13:     INTCONbits.PEIE = 1;
   949  01E8  170B               	bsf	11,6	;volatile
   950                           
   951                           ;ADC.c: 14:     PIE1bits.ADIE = 1;
   952  01E9  1683               	bsf	3,5	;RP0=1, select bank1
   953  01EA  1303               	bcf	3,6	;RP1=0, select bank1
   954  01EB  170C               	bsf	12,6	;volatile
   955                           
   956                           ;ADC.c: 15:     PIR1bits.ADIF = 0;
   957  01EC  1283               	bcf	3,5	;RP0=0, select bank0
   958  01ED  1303               	bcf	3,6	;RP1=0, select bank0
   959  01EE  130C               	bcf	12,6	;volatile
   960  01EF                     l991:
   961                           
   962                           ;ADC.c: 16:     ADCON0 = 0b01000001;
   963  01EF  3041               	movlw	65
   964  01F0  009F               	movwf	31	;volatile
   965  01F1                     l993:
   966                           
   967                           ;ADC.c: 17:     ADCON1 = 0b00000000;
   968  01F1  1683               	bsf	3,5	;RP0=1, select bank1
   969  01F2  1303               	bcf	3,6	;RP1=0, select bank1
   970  01F3  019F               	clrf	31	;volatile
   971  01F4                     l126:
   972  01F4  0008               	return
   973  01F5                     __end_of_initADC:
   974                           
   975                           	psect	text4
   976  01F5                     __ptext4:	
   977 ;; *************** function _adc *****************
   978 ;; Defined at:
   979 ;;		line 20 in file "ADC.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;		None
   982 ;; Auto vars:     Size  Location     Type
   983 ;;		None
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   993 ;;      Params:         0       0       0       0       0
   994 ;;      Locals:         0       0       0       0       0
   995 ;;      Temps:          0       1       0       0       0
   996 ;;      Totals:         0       1       0       0       0
   997 ;;Total ram usage:        1 bytes
   998 ;; Hardware stack levels used:    1
   999 ;; Hardware stack levels required when called:    2
  1000 ;; This function calls:
  1001 ;;		Nothing
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           
  1008                           ;psect for function _adc
  1009  01F5                     _adc:
  1010  01F5                     l1037:	
  1011                           ;incstack = 0
  1012                           ; Regs used in _adc: [wreg]
  1013                           
  1014                           
  1015                           ;ADC.c: 21:     _delay((unsigned long)((8)*(8000000/4000000.0)));
  1016  01F5  3004               	movlw	4
  1017  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1018  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1019  01F8  00A9               	movwf	??_adc
  1020  01F9                     u447:
  1021  01F9  0BA9               	decfsz	??_adc,f
  1022  01FA  29F9               	goto	u447
  1023  01FB  0000               	nop
  1024  01FC                     l1039:
  1025                           
  1026                           ;ADC.c: 22:     ADCON0bits.GO_DONE = 1;
  1027  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1028  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1029  01FE  149F               	bsf	31,1	;volatile
  1030  01FF                     l129:
  1031  01FF  0008               	return
  1032  0200                     __end_of_adc:
  1033                           
  1034                           	psect	text5
  1035  0017                     __ptext5:	
  1036 ;; *************** function _ADC_Select *****************
  1037 ;; Defined at:
  1038 ;;		line 27 in file "ADC.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  a               1    wreg     unsigned char 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  a               1   11[BANK0 ] unsigned char 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1052 ;;      Params:         0       0       0       0       0
  1053 ;;      Locals:         0       1       0       0       0
  1054 ;;      Temps:          0       2       0       0       0
  1055 ;;      Totals:         0       3       0       0       0
  1056 ;;Total ram usage:        3 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    2
  1059 ;; This function calls:
  1060 ;;		Nothing
  1061 ;; This function is called by:
  1062 ;;		_main
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           
  1067                           ;psect for function _ADC_Select
  1068  0017                     _ADC_Select:
  1069                           
  1070                           ;incstack = 0
  1071                           ; Regs used in _ADC_Select: [wreg-fsr0h+status,2+status,0]
  1072                           ;ADC_Select@a stored from wreg
  1073  0017  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0018  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0019  00AB               	movwf	ADC_Select@a
  1076  001A                     l995:
  1077                           
  1078                           ;ADC.c: 28:     switch(a){
  1079  001A  2862               	goto	l1029
  1080  001B                     l997:
  1081  001B  30C3               	movlw	-61
  1082  001C  059F               	andwf	31,f	;volatile
  1083  001D  2896               	goto	l149
  1084  001E                     l999:
  1085  001E  081F               	movf	31,w	;volatile
  1086  001F  39C3               	andlw	-61
  1087  0020  3804               	iorlw	4
  1088  0021  009F               	movwf	31	;volatile
  1089  0022  2896               	goto	l149
  1090  0023                     l1001:
  1091  0023  081F               	movf	31,w	;volatile
  1092  0024  39C3               	andlw	-61
  1093  0025  3808               	iorlw	8
  1094  0026  009F               	movwf	31	;volatile
  1095  0027  2896               	goto	l149
  1096  0028                     l1003:
  1097  0028  081F               	movf	31,w	;volatile
  1098  0029  39C3               	andlw	-61
  1099  002A  380C               	iorlw	12
  1100  002B  009F               	movwf	31	;volatile
  1101  002C  2896               	goto	l149
  1102  002D                     l1005:
  1103  002D  081F               	movf	31,w	;volatile
  1104  002E  39C3               	andlw	-61
  1105  002F  3810               	iorlw	16
  1106  0030  009F               	movwf	31	;volatile
  1107  0031  2896               	goto	l149
  1108  0032                     l1007:
  1109  0032  081F               	movf	31,w	;volatile
  1110  0033  39C3               	andlw	-61
  1111  0034  3814               	iorlw	20
  1112  0035  009F               	movwf	31	;volatile
  1113  0036  2896               	goto	l149
  1114  0037                     l1009:
  1115  0037  081F               	movf	31,w	;volatile
  1116  0038  39C3               	andlw	-61
  1117  0039  3818               	iorlw	24
  1118  003A  009F               	movwf	31	;volatile
  1119  003B  2896               	goto	l149
  1120  003C                     l1011:
  1121  003C  081F               	movf	31,w	;volatile
  1122  003D  39C3               	andlw	-61
  1123  003E  381C               	iorlw	28
  1124  003F  009F               	movwf	31	;volatile
  1125  0040  2896               	goto	l149
  1126  0041                     l1013:
  1127  0041  081F               	movf	31,w	;volatile
  1128  0042  39C3               	andlw	-61
  1129  0043  3820               	iorlw	32
  1130  0044  009F               	movwf	31	;volatile
  1131  0045  2896               	goto	l149
  1132  0046                     l1015:
  1133  0046  081F               	movf	31,w	;volatile
  1134  0047  39C3               	andlw	-61
  1135  0048  3824               	iorlw	36
  1136  0049  009F               	movwf	31	;volatile
  1137  004A  2896               	goto	l149
  1138  004B                     l1017:
  1139  004B  081F               	movf	31,w	;volatile
  1140  004C  39C3               	andlw	-61
  1141  004D  3828               	iorlw	40
  1142  004E  009F               	movwf	31	;volatile
  1143  004F  2896               	goto	l149
  1144  0050                     l1019:
  1145  0050  081F               	movf	31,w	;volatile
  1146  0051  39C3               	andlw	-61
  1147  0052  382C               	iorlw	44
  1148  0053  009F               	movwf	31	;volatile
  1149  0054  2896               	goto	l149
  1150  0055                     l1021:
  1151  0055  081F               	movf	31,w	;volatile
  1152  0056  39C3               	andlw	-61
  1153  0057  3830               	iorlw	48
  1154  0058  009F               	movwf	31	;volatile
  1155  0059  2896               	goto	l149
  1156  005A                     l1023:
  1157  005A  081F               	movf	31,w	;volatile
  1158  005B  39C3               	andlw	-61
  1159  005C  3834               	iorlw	52
  1160  005D  009F               	movwf	31	;volatile
  1161  005E  2896               	goto	l149
  1162  005F                     l1025:
  1163  005F  30C3               	movlw	-61
  1164  0060  059F               	andwf	31,f	;volatile
  1165  0061  2896               	goto	l149
  1166  0062                     l1029:
  1167  0062  082B               	movf	ADC_Select@a,w
  1168  0063  00A9               	movwf	??_ADC_Select
  1169  0064  01AA               	clrf	??_ADC_Select+1
  1170                           
  1171                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1172                           ; Switch size 1, requested type "simple"
  1173                           ; Number of cases is 1, Range of values is 0 to 0
  1174                           ; switch strategies available:
  1175                           ; Name         Instructions Cycles
  1176                           ; simple_byte            4     3 (average)
  1177                           ; direct_byte           11     8 (fixed)
  1178                           ; jumptable            260     6 (fixed)
  1179                           ;	Chosen strategy is simple_byte
  1180  0065  082A               	movf	??_ADC_Select+1,w
  1181  0066  3A00               	xorlw	0	; case 0
  1182  0067  1903               	skipnz
  1183  0068  286A               	goto	l1165
  1184  0069  285F               	goto	l1025
  1185  006A                     l1165:
  1186                           
  1187                           ; Switch size 1, requested type "simple"
  1188                           ; Number of cases is 14, Range of values is 0 to 13
  1189                           ; switch strategies available:
  1190                           ; Name         Instructions Cycles
  1191                           ; simple_byte           43    22 (average)
  1192                           ; direct_byte           50     8 (fixed)
  1193                           ; jumptable            260     6 (fixed)
  1194                           ;	Chosen strategy is simple_byte
  1195  006A  0829               	movf	??_ADC_Select,w
  1196  006B  3A00               	xorlw	0	; case 0
  1197  006C  1903               	skipnz
  1198  006D  281B               	goto	l997
  1199  006E  3A01               	xorlw	1	; case 1
  1200  006F  1903               	skipnz
  1201  0070  281E               	goto	l999
  1202  0071  3A03               	xorlw	3	; case 2
  1203  0072  1903               	skipnz
  1204  0073  2823               	goto	l1001
  1205  0074  3A01               	xorlw	1	; case 3
  1206  0075  1903               	skipnz
  1207  0076  2828               	goto	l1003
  1208  0077  3A07               	xorlw	7	; case 4
  1209  0078  1903               	skipnz
  1210  0079  282D               	goto	l1005
  1211  007A  3A01               	xorlw	1	; case 5
  1212  007B  1903               	skipnz
  1213  007C  2832               	goto	l1007
  1214  007D  3A03               	xorlw	3	; case 6
  1215  007E  1903               	skipnz
  1216  007F  2837               	goto	l1009
  1217  0080  3A01               	xorlw	1	; case 7
  1218  0081  1903               	skipnz
  1219  0082  283C               	goto	l1011
  1220  0083  3A0F               	xorlw	15	; case 8
  1221  0084  1903               	skipnz
  1222  0085  2841               	goto	l1013
  1223  0086  3A01               	xorlw	1	; case 9
  1224  0087  1903               	skipnz
  1225  0088  2846               	goto	l1015
  1226  0089  3A03               	xorlw	3	; case 10
  1227  008A  1903               	skipnz
  1228  008B  284B               	goto	l1017
  1229  008C  3A01               	xorlw	1	; case 11
  1230  008D  1903               	skipnz
  1231  008E  2850               	goto	l1019
  1232  008F  3A07               	xorlw	7	; case 12
  1233  0090  1903               	skipnz
  1234  0091  2855               	goto	l1021
  1235  0092  3A01               	xorlw	1	; case 13
  1236  0093  1903               	skipnz
  1237  0094  285A               	goto	l1023
  1238  0095  285F               	goto	l1025
  1239  0096                     l149:
  1240  0096  0008               	return
  1241  0097                     __end_of_ADC_Select:
  1242                           
  1243                           	psect	text6
  1244  0144                     __ptext6:	
  1245 ;; *************** function _isr *****************
  1246 ;; Defined at:
  1247 ;;		line 56 in file "main_slave3.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2, status,0, pclath, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1261 ;;      Params:         0       0       0       0       0
  1262 ;;      Locals:         0       0       0       0       0
  1263 ;;      Temps:          0       5       0       0       0
  1264 ;;      Totals:         0       5       0       0       0
  1265 ;;Total ram usage:        5 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:    1
  1268 ;; This function calls:
  1269 ;;		___awdiv
  1270 ;;		___wmul
  1271 ;;		_spiWrite
  1272 ;; This function is called by:
  1273 ;;		Interrupt level 1
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           
  1278                           ;psect for function _isr
  1279  0144                     _isr:
  1280  0144                     i1l1099:
  1281                           
  1282                           ;main_slave3.c: 57:    if(SSPIF == 1){
  1283  0144  1D8C               	btfss	12,3	;volatile
  1284  0145  2947               	goto	u38_21
  1285  0146  2948               	goto	u38_20
  1286  0147                     u38_21:
  1287  0147  2951               	goto	i1l1105
  1288  0148                     u38_20:
  1289  0148                     i1l1101:
  1290                           
  1291                           ;main_slave3.c: 59:         spiWrite(valor_adc);
  1292  0148  087B               	movf	_valor_adc,w
  1293  0149  120A  118A  2200  120A  118A  	fcall	_spiWrite
  1294  014E                     i1l1103:
  1295                           
  1296                           ;main_slave3.c: 60:         SSPIF = 0;
  1297  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1298  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1299  0150  118C               	bcf	12,3	;volatile
  1300  0151                     i1l1105:
  1301                           
  1302                           ;main_slave3.c: 62:    if (PIR1bits.ADIF == 1) {
  1303  0151  1F0C               	btfss	12,6	;volatile
  1304  0152  2954               	goto	u39_21
  1305  0153  2955               	goto	u39_20
  1306  0154                     u39_21:
  1307  0154  2979               	goto	i1l93
  1308  0155                     u39_20:
  1309  0155                     i1l1107:
  1310                           
  1311                           ;main_slave3.c: 64:         valor_adc = ((ADRESH * 150)/255);
  1312  0155  30FF               	movlw	255
  1313  0156  00F6               	movwf	___awdiv@divisor
  1314  0157  3000               	movlw	0
  1315  0158  00F7               	movwf	___awdiv@divisor+1
  1316  0159  081E               	movf	30,w	;volatile
  1317  015A  00A4               	movwf	??_isr
  1318  015B  01A5               	clrf	??_isr+1
  1319  015C  0824               	movf	??_isr,w
  1320  015D  00F0               	movwf	___wmul@multiplier
  1321  015E  0825               	movf	??_isr+1,w
  1322  015F  00F1               	movwf	___wmul@multiplier+1
  1323  0160  3096               	movlw	150
  1324  0161  00F2               	movwf	___wmul@multiplicand
  1325  0162  3000               	movlw	0
  1326  0163  00F3               	movwf	___wmul@multiplicand+1
  1327  0164  120A  118A  21A5  120A  118A  	fcall	___wmul
  1328  0169  0871               	movf	?___wmul+1,w
  1329  016A  00F9               	movwf	___awdiv@dividend+1
  1330  016B  0870               	movf	?___wmul,w
  1331  016C  00F8               	movwf	___awdiv@dividend
  1332  016D  120A  118A  2097  120A  118A  	fcall	___awdiv
  1333  0172  0876               	movf	?___awdiv,w
  1334  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1336  0175  00A6               	movwf	??_isr+2
  1337  0176  0826               	movf	??_isr+2,w
  1338  0177  00FB               	movwf	_valor_adc
  1339  0178                     i1l1109:
  1340                           
  1341                           ;main_slave3.c: 66:         PIR1bits.ADIF = 0;
  1342  0178  130C               	bcf	12,6	;volatile
  1343  0179                     i1l93:
  1344  0179  0828               	movf	??_isr+4,w
  1345  017A  008A               	movwf	10
  1346  017B  0E27               	swapf	??_isr+3,w
  1347  017C  0083               	movwf	3
  1348  017D  0EFE               	swapf	btemp,f
  1349  017E  0E7E               	swapf	btemp,w
  1350  017F  0009               	retfie
  1351  0180                     __end_of_isr:
  1352                           
  1353                           	psect	intentry
  1354  0004                     __pintentry:	
  1355                           ;incstack = 0
  1356                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1357                           
  1358  0004                     interrupt_function:
  1359  007E                     saved_w	set	btemp
  1360  0004  00FE               	movwf	btemp
  1361  0005  0E03               	swapf	3,w
  1362  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1363  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1364  0008  00A7               	movwf	??_isr+3
  1365  0009  080A               	movf	10,w
  1366  000A  00A8               	movwf	??_isr+4
  1367  000B  120A  118A  2944   	ljmp	_isr
  1368                           
  1369                           	psect	text7
  1370  0200                     __ptext7:	
  1371 ;; *************** function _spiWrite *****************
  1372 ;; Defined at:
  1373 ;;		line 34 in file "SPI.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  dat             1    wreg     unsigned char 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  dat             1    0[COMMON] unsigned char 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       0       0       0       0
  1388 ;;      Locals:         1       0       0       0       0
  1389 ;;      Temps:          0       0       0       0       0
  1390 ;;      Totals:         1       0       0       0       0
  1391 ;;Total ram usage:        1 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; This function calls:
  1394 ;;		Nothing
  1395 ;; This function is called by:
  1396 ;;		_isr
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           
  1401                           ;psect for function _spiWrite
  1402  0200                     _spiWrite:
  1403                           
  1404                           ;incstack = 0
  1405                           ; Regs used in _spiWrite: [wreg]
  1406                           ;spiWrite@dat stored from wreg
  1407  0200  00F0               	movwf	spiWrite@dat
  1408  0201                     i1l753:
  1409                           
  1410                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1411  0201  0870               	movf	spiWrite@dat,w
  1412  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1413  0203  1303               	bcf	3,6	;RP1=0, select bank0
  1414  0204  0093               	movwf	19	;volatile
  1415  0205                     i1l26:
  1416  0205  0008               	return
  1417  0206                     __end_of_spiWrite:
  1418                           
  1419                           	psect	text8
  1420  01A5                     __ptext8:	
  1421 ;; *************** function ___wmul *****************
  1422 ;; Defined at:
  1423 ;;		line 15 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;  multiplier      2    0[COMMON] unsigned int 
  1426 ;;  multiplicand    2    2[COMMON] unsigned int 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  product         2    4[COMMON] unsigned int 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  2    0[COMMON] unsigned int 
  1431 ;; Registers used:
  1432 ;;		wreg, status,2, status,0
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438 ;;      Params:         4       0       0       0       0
  1439 ;;      Locals:         2       0       0       0       0
  1440 ;;      Temps:          0       0       0       0       0
  1441 ;;      Totals:         6       0       0       0       0
  1442 ;;Total ram usage:        6 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_isr
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           
  1452                           ;psect for function ___wmul
  1453  01A5                     ___wmul:
  1454  01A5                     i1l1041:	
  1455                           ;incstack = 0
  1456                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1457                           
  1458  01A5  01F4               	clrf	___wmul@product
  1459  01A6  01F5               	clrf	___wmul@product+1
  1460  01A7                     i1l1043:
  1461  01A7  1C70               	btfss	___wmul@multiplier,0
  1462  01A8  29AA               	goto	u24_21
  1463  01A9  29AB               	goto	u24_20
  1464  01AA                     u24_21:
  1465  01AA  29B1               	goto	i1l235
  1466  01AB                     u24_20:
  1467  01AB                     i1l1045:
  1468  01AB  0872               	movf	___wmul@multiplicand,w
  1469  01AC  07F4               	addwf	___wmul@product,f
  1470  01AD  1803               	skipnc
  1471  01AE  0AF5               	incf	___wmul@product+1,f
  1472  01AF  0873               	movf	___wmul@multiplicand+1,w
  1473  01B0  07F5               	addwf	___wmul@product+1,f
  1474  01B1                     i1l235:
  1475  01B1  3001               	movlw	1
  1476  01B2                     u25_25:
  1477  01B2  1003               	clrc
  1478  01B3  0DF2               	rlf	___wmul@multiplicand,f
  1479  01B4  0DF3               	rlf	___wmul@multiplicand+1,f
  1480  01B5  3EFF               	addlw	-1
  1481  01B6  1D03               	skipz
  1482  01B7  29B2               	goto	u25_25
  1483  01B8                     i1l1047:
  1484  01B8  3001               	movlw	1
  1485  01B9                     u26_25:
  1486  01B9  1003               	clrc
  1487  01BA  0CF1               	rrf	___wmul@multiplier+1,f
  1488  01BB  0CF0               	rrf	___wmul@multiplier,f
  1489  01BC  3EFF               	addlw	-1
  1490  01BD  1D03               	skipz
  1491  01BE  29B9               	goto	u26_25
  1492  01BF                     i1l1049:
  1493  01BF  0870               	movf	___wmul@multiplier,w
  1494  01C0  0471               	iorwf	___wmul@multiplier+1,w
  1495  01C1  1D03               	btfss	3,2
  1496  01C2  29C4               	goto	u27_21
  1497  01C3  29C5               	goto	u27_20
  1498  01C4                     u27_21:
  1499  01C4  29A7               	goto	i1l1043
  1500  01C5                     u27_20:
  1501  01C5                     i1l1051:
  1502  01C5  0875               	movf	___wmul@product+1,w
  1503  01C6  00F1               	movwf	?___wmul+1
  1504  01C7  0874               	movf	___wmul@product,w
  1505  01C8  00F0               	movwf	?___wmul
  1506  01C9                     i1l237:
  1507  01C9  0008               	return
  1508  01CA                     __end_of___wmul:
  1509                           
  1510                           	psect	text9
  1511  0097                     __ptext9:	
  1512 ;; *************** function ___awdiv *****************
  1513 ;; Defined at:
  1514 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  divisor         2    6[COMMON] int 
  1517 ;;  dividend        2    8[COMMON] int 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;  quotient        2    2[BANK0 ] int 
  1520 ;;  sign            1    1[BANK0 ] unsigned char 
  1521 ;;  counter         1    0[BANK0 ] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  2    6[COMMON] int 
  1524 ;; Registers used:
  1525 ;;		wreg, status,2, status,0
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1531 ;;      Params:         4       0       0       0       0
  1532 ;;      Locals:         0       4       0       0       0
  1533 ;;      Temps:          1       0       0       0       0
  1534 ;;      Totals:         5       4       0       0       0
  1535 ;;Total ram usage:        9 bytes
  1536 ;; Hardware stack levels used:    1
  1537 ;; This function calls:
  1538 ;;		Nothing
  1539 ;; This function is called by:
  1540 ;;		_isr
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           
  1545                           ;psect for function ___awdiv
  1546  0097                     ___awdiv:
  1547  0097                     i1l1055:	
  1548                           ;incstack = 0
  1549                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1550                           
  1551  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1552  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1553  0099  01A1               	clrf	___awdiv@sign
  1554  009A                     i1l1057:
  1555  009A  1FF7               	btfss	___awdiv@divisor+1,7
  1556  009B  289D               	goto	u28_21
  1557  009C  289E               	goto	u28_20
  1558  009D                     u28_21:
  1559  009D  28A5               	goto	i1l1063
  1560  009E                     u28_20:
  1561  009E                     i1l1059:
  1562  009E  09F6               	comf	___awdiv@divisor,f
  1563  009F  09F7               	comf	___awdiv@divisor+1,f
  1564  00A0  0AF6               	incf	___awdiv@divisor,f
  1565  00A1  1903               	skipnz
  1566  00A2  0AF7               	incf	___awdiv@divisor+1,f
  1567  00A3                     i1l1061:
  1568  00A3  01A1               	clrf	___awdiv@sign
  1569  00A4  0AA1               	incf	___awdiv@sign,f
  1570  00A5                     i1l1063:
  1571  00A5  1FF9               	btfss	___awdiv@dividend+1,7
  1572  00A6  28A8               	goto	u29_21
  1573  00A7  28A9               	goto	u29_20
  1574  00A8                     u29_21:
  1575  00A8  28B2               	goto	i1l1069
  1576  00A9                     u29_20:
  1577  00A9                     i1l1065:
  1578  00A9  09F8               	comf	___awdiv@dividend,f
  1579  00AA  09F9               	comf	___awdiv@dividend+1,f
  1580  00AB  0AF8               	incf	___awdiv@dividend,f
  1581  00AC  1903               	skipnz
  1582  00AD  0AF9               	incf	___awdiv@dividend+1,f
  1583  00AE                     i1l1067:
  1584  00AE  3001               	movlw	1
  1585  00AF  00FA               	movwf	??___awdiv
  1586  00B0  087A               	movf	??___awdiv,w
  1587  00B1  06A1               	xorwf	___awdiv@sign,f
  1588  00B2                     i1l1069:
  1589  00B2  01A2               	clrf	___awdiv@quotient
  1590  00B3  01A3               	clrf	___awdiv@quotient+1
  1591  00B4                     i1l1071:
  1592  00B4  0876               	movf	___awdiv@divisor,w
  1593  00B5  0477               	iorwf	___awdiv@divisor+1,w
  1594  00B6  1903               	btfsc	3,2
  1595  00B7  28B9               	goto	u30_21
  1596  00B8  28BA               	goto	u30_20
  1597  00B9                     u30_21:
  1598  00B9  28F1               	goto	i1l1091
  1599  00BA                     u30_20:
  1600  00BA                     i1l1073:
  1601  00BA  01A0               	clrf	___awdiv@counter
  1602  00BB  0AA0               	incf	___awdiv@counter,f
  1603  00BC  28C8               	goto	i1l1079
  1604  00BD                     i1l1075:
  1605  00BD  3001               	movlw	1
  1606  00BE                     u31_25:
  1607  00BE  1003               	clrc
  1608  00BF  0DF6               	rlf	___awdiv@divisor,f
  1609  00C0  0DF7               	rlf	___awdiv@divisor+1,f
  1610  00C1  3EFF               	addlw	-1
  1611  00C2  1D03               	skipz
  1612  00C3  28BE               	goto	u31_25
  1613  00C4                     i1l1077:
  1614  00C4  3001               	movlw	1
  1615  00C5  00FA               	movwf	??___awdiv
  1616  00C6  087A               	movf	??___awdiv,w
  1617  00C7  07A0               	addwf	___awdiv@counter,f
  1618  00C8                     i1l1079:
  1619  00C8  1FF7               	btfss	___awdiv@divisor+1,7
  1620  00C9  28CB               	goto	u32_21
  1621  00CA  28CC               	goto	u32_20
  1622  00CB                     u32_21:
  1623  00CB  28BD               	goto	i1l1075
  1624  00CC                     u32_20:
  1625  00CC                     i1l1081:
  1626  00CC  3001               	movlw	1
  1627  00CD                     u33_25:
  1628  00CD  1003               	clrc
  1629  00CE  0DA2               	rlf	___awdiv@quotient,f
  1630  00CF  0DA3               	rlf	___awdiv@quotient+1,f
  1631  00D0  3EFF               	addlw	-1
  1632  00D1  1D03               	skipz
  1633  00D2  28CD               	goto	u33_25
  1634  00D3  0877               	movf	___awdiv@divisor+1,w
  1635  00D4  0279               	subwf	___awdiv@dividend+1,w
  1636  00D5  1D03               	skipz
  1637  00D6  28D9               	goto	u34_25
  1638  00D7  0876               	movf	___awdiv@divisor,w
  1639  00D8  0278               	subwf	___awdiv@dividend,w
  1640  00D9                     u34_25:
  1641  00D9  1C03               	skipc
  1642  00DA  28DC               	goto	u34_21
  1643  00DB  28DD               	goto	u34_20
  1644  00DC                     u34_21:
  1645  00DC  28E4               	goto	i1l1087
  1646  00DD                     u34_20:
  1647  00DD                     i1l1083:
  1648  00DD  0876               	movf	___awdiv@divisor,w
  1649  00DE  02F8               	subwf	___awdiv@dividend,f
  1650  00DF  0877               	movf	___awdiv@divisor+1,w
  1651  00E0  1C03               	skipc
  1652  00E1  03F9               	decf	___awdiv@dividend+1,f
  1653  00E2  02F9               	subwf	___awdiv@dividend+1,f
  1654  00E3                     i1l1085:
  1655  00E3  1422               	bsf	___awdiv@quotient,0
  1656  00E4                     i1l1087:
  1657  00E4  3001               	movlw	1
  1658  00E5                     u35_25:
  1659  00E5  1003               	clrc
  1660  00E6  0CF7               	rrf	___awdiv@divisor+1,f
  1661  00E7  0CF6               	rrf	___awdiv@divisor,f
  1662  00E8  3EFF               	addlw	-1
  1663  00E9  1D03               	skipz
  1664  00EA  28E5               	goto	u35_25
  1665  00EB                     i1l1089:
  1666  00EB  3001               	movlw	1
  1667  00EC  02A0               	subwf	___awdiv@counter,f
  1668  00ED  1D03               	btfss	3,2
  1669  00EE  28F0               	goto	u36_21
  1670  00EF  28F1               	goto	u36_20
  1671  00F0                     u36_21:
  1672  00F0  28CC               	goto	i1l1081
  1673  00F1                     u36_20:
  1674  00F1                     i1l1091:
  1675  00F1  0821               	movf	___awdiv@sign,w
  1676  00F2  1903               	btfsc	3,2
  1677  00F3  28F5               	goto	u37_21
  1678  00F4  28F6               	goto	u37_20
  1679  00F5                     u37_21:
  1680  00F5  28FB               	goto	i1l1095
  1681  00F6                     u37_20:
  1682  00F6                     i1l1093:
  1683  00F6  09A2               	comf	___awdiv@quotient,f
  1684  00F7  09A3               	comf	___awdiv@quotient+1,f
  1685  00F8  0AA2               	incf	___awdiv@quotient,f
  1686  00F9  1903               	skipnz
  1687  00FA  0AA3               	incf	___awdiv@quotient+1,f
  1688  00FB                     i1l1095:
  1689  00FB  0823               	movf	___awdiv@quotient+1,w
  1690  00FC  00F7               	movwf	?___awdiv+1
  1691  00FD  0822               	movf	___awdiv@quotient,w
  1692  00FE  00F6               	movwf	?___awdiv
  1693  00FF                     i1l388:
  1694  00FF  0008               	return
  1695  0100                     __end_of___awdiv:
  1696  007E                     btemp	set	126	;btemp
  1697  007E                     wtemp0	set	126
  1698                           
  1699                           	psect	config
  1700                           
  1701                           ;Config register CONFIG1 @ 0x2007
  1702                           ;	Oscillator Selection bits
  1703                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1704                           ;	Watchdog Timer Enable bit
  1705                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1706                           ;	Power-up Timer Enable bit
  1707                           ;	PWRTE = OFF, PWRT disabled
  1708                           ;	RE3/MCLR pin function select bit
  1709                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1710                           ;	Code Protection bit
  1711                           ;	CP = OFF, Program memory code protection is disabled
  1712                           ;	Data Code Protection bit
  1713                           ;	CPD = OFF, Data memory code protection is disabled
  1714                           ;	Brown Out Reset Selection bits
  1715                           ;	BOREN = OFF, BOR disabled
  1716                           ;	Internal External Switchover bit
  1717                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1718                           ;	Fail-Safe Clock Monitor Enabled bit
  1719                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1720                           ;	Low Voltage Programming Enable bit
  1721                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1722                           ;	In-Circuit Debugger Mode bit
  1723                           ;	DEBUG = 0x1, unprogrammed default
  1724  2007                     	org	8199
  1725  2007  20D6               	dw	8406
  1726                           
  1727                           ;Config register CONFIG2 @ 0x2008
  1728                           ;	Brown-out Reset Selection bit
  1729                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1730                           ;	Flash Program Memory Self Write Enable bits
  1731                           ;	WRT = OFF, Write protection off
  1732  2008                     	org	8200
  1733  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     13      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    _isr->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     382
                         _ADC_Select
                                _adc
                            _initADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              9 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc                                                  1     1      0       0
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Select                                           3     3      0      22
                                              9 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0     711
                                              4 BANK0      5     5      0
                            ___awdiv
                             ___wmul
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Select
   _adc
   _initADC
   _setup
     _spiInit

 _isr (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D       D       5       16.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 10:13:36 2021

            _SSPSTATbits 0094                       l16 01E2                       l17 01E7  
           ___awdiv@sign 0021      ___wmul@multiplicand 0072                      l100 0140  
                    l109 01A4                      l126 01F4                      l129 01FF  
                    l149 0096                      l961 01CD                      l963 01D6  
                    l971 0180                      l965 01DA                      l981 0194  
                    l973 0184                      l991 01EF                      l967 01DC  
                    l983 0195                      l975 0185                      l993 01F1  
                    l969 01E1                      l985 0198                      l977 0192  
                    l995 001A                      l987 0199                      l979 0193  
                    l997 001B                      l989 01E8                      l999 001E  
                    u230 01D6                      u231 01D5                      u400 0122  
                    u401 0121                      u410 012C                      u411 012B  
                    u420 0132                      u421 0131                      u430 013C  
                    u431 013B                      u447 01F9      __size_of_ADC_Select 0080  
                    _adc 01F5                      _isr 0144                     ?_adc 0070  
                   l1001 0023                     l1011 003C                     l1003 0028  
                   l1021 0055                     l1013 0041                     l1005 002D  
                   l1023 005A                     l1015 0046                     l1007 0032  
                   l1111 0100                     l1025 005F                     l1017 004B  
                   l1009 0037                     l1121 011C                     l1113 010A  
                   l1019 0050                     l1131 0136                     l1123 0122  
                   l1115 0110                     l1029 0062                     l1037 01F5  
                   l1133 013C                     l1125 0126                     l1117 0113  
                   l1039 01FC                     l1127 012C                     l1119 0118  
                   l1129 0132                     l1165 006A                     ?_isr 0070  
                   i1l26 0205                     i1l93 0179                     _main 0100  
                   btemp 007E                     start 000E                    ??_adc 0029  
                  ??_isr 0024                    ?_main 0070          __end_of___awdiv 0100  
                  _ANSEL 0188          ___awdiv@divisor 0076                    i1l235 01B1  
                  i1l237 01C9                    i1l388 00FF                    i1l753 0201  
        ___awdiv@counter 0020                    u30_20 00BA                    u30_21 00B9  
                  u31_25 00BE                    u32_20 00CC                    u24_20 01AB  
                  u32_21 00CB                    u24_21 01AA                    u33_25 00CD  
                  u25_25 01B2                    u34_20 00DD                    u34_21 00DC  
                  u34_25 00D9                    u26_25 01B9                    u27_20 01C5  
                  u27_21 01C4                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    u35_25 00E5  
                  u36_20 00F1                    u28_20 009E                    u36_21 00F0  
                  u28_21 009D                    u37_20 00F6                    u29_20 00A9  
                  u37_21 00F5                    u29_21 00A8                    u38_20 0148  
                  u38_21 0147                    u39_20 0155                    u39_21 0154  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _SSPIF 0063          __end_of_initADC 01F5  
                  _setup 0180                    pclath 000A          __end_of_spiInit 01E8  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 0144                   ??_main 002D                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E         ___awdiv@dividend 0078  
                 ?_setup 0070                   _ANSELH 0189                   i1l1101 0148  
                 i1l1103 014E                   i1l1041 01A5                   i1l1105 0151  
                 i1l1051 01C5                   i1l1043 01A7                   i1l1107 0155  
                 i1l1061 00A3                   i1l1045 01AB                   i1l1109 0178  
                 i1l1071 00B4                   i1l1063 00A5                   i1l1055 0097  
                 i1l1047 01B8                   i1l1081 00CC                   i1l1073 00BA  
                 i1l1065 00A9                   i1l1057 009A                   i1l1049 01BF  
                 i1l1083 00DD                   i1l1075 00BD                   i1l1091 00F1  
                 i1l1067 00AE                   i1l1059 009E                   i1l1093 00F6  
                 i1l1085 00E3                   i1l1077 00C4                   i1l1069 00B2  
                 i1l1095 00FB                   i1l1087 00E4                   i1l1079 00C8  
                 i1l1089 00EB                   i1l1099 0144             ??_ADC_Select 0029  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   ___wmul 01A5                ??___awdiv 007A  
       ___awdiv@quotient 0022                ??_initADC 0029       __end_of_ADC_Select 0097  
                 saved_w 007E         __end_of_spiWrite 0206                ??_spiInit 002C  
__end_of__initialization 0013           __pcstackCOMMON 0070            __end_of_setup 01A5  
                ??_setup 002D               __pmaintext 0100                  ?___wmul 0070  
             __pintentry 0004                  _SSPSTAT 0094                ?_spiWrite 0070  
                ___awdiv 0097          __size_of___wmul 0025                  __ptext1 0180  
                __ptext2 01CA                  __ptext3 01E8                  __ptext4 01F5  
                __ptext5 0017                  __ptext6 0144                  __ptext7 0200  
                __ptext8 01A5                  __ptext9 0097                  _initADC 01E8  
           __size_of_adc 000B             __size_of_isr 003C                  _spiInit 01CA  
   end_of_initialization 0013               ??_spiWrite 0070                _PORTDbits 0008  
              _TRISAbits 0085              spiWrite@dat 0070           __end_of___wmul 01CA  
    start_initialization 0011              __end_of_adc 0200              __end_of_isr 0180  
               ??___wmul 0074              __pbssCOMMON 007B                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0076        __size_of_spiWrite 0006  
               ?_initADC 0070                 ?_spiInit 0029           __size_of_setup 0025  
            ADC_Select@a 002B     spiInit@sTransmitEdge 002B        interrupt_function 0004  
         ___wmul@product 0074                 _PIE1bits 008C       spiInit@sDataSample 0029  
               _PIR1bits 000C                _valor_adc 007B               _ADCON0bits 001F  
             _ADCON1bits 009F        ___wmul@multiplier 0070               _ADC_Select 0017  
       __size_of___awdiv 0069         __size_of_initADC 000D         __size_of_spiInit 001E  
               _contador 007C            __size_of_main 0044                 _spiWrite 0200  
           spiInit@sType 002C        spiInit@sClockIdle 002A               _INTCONbits 000B  
               intlevel1 0000              ?_ADC_Select 0070  
