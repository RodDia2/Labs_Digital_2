

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 15:40:58 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F887 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0088                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0105                     	;# 
   156  0107                     	;# 
   157  0108                     	;# 
   158  0109                     	;# 
   159  010C                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0185                     	;# 
   165  0187                     	;# 
   166  0188                     	;# 
   167  0189                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  0105                     	;# 
   234  0107                     	;# 
   235  0108                     	;# 
   236  0109                     	;# 
   237  010C                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  0185                     	;# 
   243  0187                     	;# 
   244  0188                     	;# 
   245  0189                     	;# 
   246  018C                     	;# 
   247  018D                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  000E                     	;# 
   263  000E                     	;# 
   264  000F                     	;# 
   265  0010                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0013                     	;# 
   269  0014                     	;# 
   270  0015                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0017                     	;# 
   274  0018                     	;# 
   275  0019                     	;# 
   276  001A                     	;# 
   277  001B                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  001D                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  0081                     	;# 
   284  0085                     	;# 
   285  0086                     	;# 
   286  0087                     	;# 
   287  0088                     	;# 
   288  0089                     	;# 
   289  008C                     	;# 
   290  008D                     	;# 
   291  008E                     	;# 
   292  008F                     	;# 
   293  0090                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009E                     	;# 
   310  009F                     	;# 
   311  0105                     	;# 
   312  0107                     	;# 
   313  0108                     	;# 
   314  0109                     	;# 
   315  010C                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  010F                     	;# 
   320  0185                     	;# 
   321  0187                     	;# 
   322  0188                     	;# 
   323  0189                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  008F                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0094                     	;# 
   378  0095                     	;# 
   379  0096                     	;# 
   380  0097                     	;# 
   381  0098                     	;# 
   382  0099                     	;# 
   383  009A                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  0105                     	;# 
   390  0107                     	;# 
   391  0108                     	;# 
   392  0109                     	;# 
   393  010C                     	;# 
   394  010C                     	;# 
   395  010D                     	;# 
   396  010E                     	;# 
   397  010F                     	;# 
   398  0185                     	;# 
   399  0187                     	;# 
   400  0188                     	;# 
   401  0189                     	;# 
   402  018C                     	;# 
   403  018D                     	;# 
   404  0000                     	;# 
   405  0001                     	;# 
   406  0002                     	;# 
   407  0003                     	;# 
   408  0004                     	;# 
   409  0005                     	;# 
   410  0006                     	;# 
   411  0007                     	;# 
   412  0008                     	;# 
   413  0009                     	;# 
   414  000A                     	;# 
   415  000B                     	;# 
   416  000C                     	;# 
   417  000D                     	;# 
   418  000E                     	;# 
   419  000E                     	;# 
   420  000F                     	;# 
   421  0010                     	;# 
   422  0011                     	;# 
   423  0012                     	;# 
   424  0013                     	;# 
   425  0014                     	;# 
   426  0015                     	;# 
   427  0015                     	;# 
   428  0016                     	;# 
   429  0017                     	;# 
   430  0018                     	;# 
   431  0019                     	;# 
   432  001A                     	;# 
   433  001B                     	;# 
   434  001B                     	;# 
   435  001C                     	;# 
   436  001D                     	;# 
   437  001E                     	;# 
   438  001F                     	;# 
   439  0081                     	;# 
   440  0085                     	;# 
   441  0086                     	;# 
   442  0087                     	;# 
   443  0088                     	;# 
   444  0089                     	;# 
   445  008C                     	;# 
   446  008D                     	;# 
   447  008E                     	;# 
   448  008F                     	;# 
   449  0090                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0094                     	;# 
   456  0095                     	;# 
   457  0096                     	;# 
   458  0097                     	;# 
   459  0098                     	;# 
   460  0099                     	;# 
   461  009A                     	;# 
   462  009B                     	;# 
   463  009C                     	;# 
   464  009D                     	;# 
   465  009E                     	;# 
   466  009F                     	;# 
   467  0105                     	;# 
   468  0107                     	;# 
   469  0108                     	;# 
   470  0109                     	;# 
   471  010C                     	;# 
   472  010C                     	;# 
   473  010D                     	;# 
   474  010E                     	;# 
   475  010F                     	;# 
   476  0185                     	;# 
   477  0187                     	;# 
   478  0188                     	;# 
   479  0189                     	;# 
   480  018C                     	;# 
   481  018D                     	;# 
   482                           
   483                           	psect	strings
   484  0800                     __pstrings:
   485  0800                     stringtab:
   486  0800                     __stringtab:
   487                           
   488                           ;	String table - string pointers are 1 byte each
   489  0800  1BFF               	btfsc	btemp+1,7
   490  0801  280A               	ljmp	stringcode
   491  0802  1383               	bcf	3,7
   492  0803  187F               	btfsc	btemp+1,0
   493  0804  1783               	bsf	3,7
   494  0805  0800               	movf	0,w
   495  0806  0A84               	incf	4,f
   496  0807  1903               	skipnz
   497  0808  0AFF               	incf	btemp+1,f
   498  0809  0008               	return
   499  080A                     stringcode:
   500  080A                     stringdir:
   501  080A  3008               	movlw	high stringdir
   502  080B  008A               	movwf	10
   503  080C  0804               	movf	4,w
   504  080D  0A84               	incf	4,f
   505  080E  0782               	addwf	2,f
   506  080F                     __stringbase:
   507  080F  3400               	retlw	0
   508  0810                     __end_of__stringtab:
   509  0810                     __powers_:
   510  0810  3400               	retlw	0
   511  0811  3400               	retlw	0
   512  0812  3480               	retlw	128
   513  0813  343F               	retlw	63
   514  0814  3400               	retlw	0
   515  0815  3400               	retlw	0
   516  0816  3420               	retlw	32
   517  0817  3441               	retlw	65
   518  0818  3400               	retlw	0
   519  0819  3400               	retlw	0
   520  081A  34C8               	retlw	200
   521  081B  3442               	retlw	66
   522  081C  3400               	retlw	0
   523  081D  3400               	retlw	0
   524  081E  347A               	retlw	122
   525  081F  3444               	retlw	68
   526  0820  3400               	retlw	0
   527  0821  3440               	retlw	64
   528  0822  341C               	retlw	28
   529  0823  3446               	retlw	70
   530  0824  3400               	retlw	0
   531  0825  3450               	retlw	80
   532  0826  34C3               	retlw	195
   533  0827  3447               	retlw	71
   534  0828  3400               	retlw	0
   535  0829  3424               	retlw	36
   536  082A  3474               	retlw	116
   537  082B  3449               	retlw	73
   538  082C  3480               	retlw	128
   539  082D  3496               	retlw	150
   540  082E  3418               	retlw	24
   541  082F  344B               	retlw	75
   542  0830  3420               	retlw	32
   543  0831  34BC               	retlw	188
   544  0832  34BE               	retlw	190
   545  0833  344C               	retlw	76
   546  0834  3428               	retlw	40
   547  0835  346B               	retlw	107
   548  0836  346E               	retlw	110
   549  0837  344E               	retlw	78
   550  0838  34F9               	retlw	249
   551  0839  3402               	retlw	2
   552  083A  3415               	retlw	21
   553  083B  3450               	retlw	80
   554  083C  34EC               	retlw	236
   555  083D  3478               	retlw	120
   556  083E  34AD               	retlw	173
   557  083F  3460               	retlw	96
   558  0840  34CA               	retlw	202
   559  0841  34F2               	retlw	242
   560  0842  3449               	retlw	73
   561  0843  3471               	retlw	113
   562  0844                     __end_of__powers_:
   563  0844                     __npowers_:
   564  0844  3400               	retlw	0
   565  0845  3400               	retlw	0
   566  0846  3480               	retlw	128
   567  0847  343F               	retlw	63
   568  0848  34CD               	retlw	205
   569  0849  34CC               	retlw	204
   570  084A  34CC               	retlw	204
   571  084B  343D               	retlw	61
   572  084C  340A               	retlw	10
   573  084D  34D7               	retlw	215
   574  084E  3423               	retlw	35
   575  084F  343C               	retlw	60
   576  0850  346F               	retlw	111
   577  0851  3412               	retlw	18
   578  0852  3483               	retlw	131
   579  0853  343A               	retlw	58
   580  0854  3417               	retlw	23
   581  0855  34B7               	retlw	183
   582  0856  34D1               	retlw	209
   583  0857  3438               	retlw	56
   584  0858  34AC               	retlw	172
   585  0859  34C5               	retlw	197
   586  085A  3427               	retlw	39
   587  085B  3437               	retlw	55
   588  085C  34BD               	retlw	189
   589  085D  3437               	retlw	55
   590  085E  3486               	retlw	134
   591  085F  3435               	retlw	53
   592  0860  3495               	retlw	149
   593  0861  34BF               	retlw	191
   594  0862  34D6               	retlw	214
   595  0863  3433               	retlw	51
   596  0864  3477               	retlw	119
   597  0865  34CC               	retlw	204
   598  0866  342B               	retlw	43
   599  0867  3432               	retlw	50
   600  0868  345F               	retlw	95
   601  0869  3470               	retlw	112
   602  086A  3489               	retlw	137
   603  086B  3430               	retlw	48
   604  086C  34FF               	retlw	255
   605  086D  34E6               	retlw	230
   606  086E  34DB               	retlw	219
   607  086F  342E               	retlw	46
   608  0870  3408               	retlw	8
   609  0871  34E5               	retlw	229
   610  0872  343C               	retlw	60
   611  0873  341E               	retlw	30
   612  0874  3460               	retlw	96
   613  0875  3442               	retlw	66
   614  0876  34A2               	retlw	162
   615  0877  340D               	retlw	13
   616  0878                     __end_of__npowers_:
   617  0878                     _dpowers:
   618  0878  3401               	retlw	1
   619  0879  3400               	retlw	0
   620  087A  3400               	retlw	0
   621  087B  3400               	retlw	0
   622  087C  340A               	retlw	10
   623  087D  3400               	retlw	0
   624  087E  3400               	retlw	0
   625  087F  3400               	retlw	0
   626  0880  3464               	retlw	100
   627  0881  3400               	retlw	0
   628  0882  3400               	retlw	0
   629  0883  3400               	retlw	0
   630  0884  34E8               	retlw	232
   631  0885  3403               	retlw	3
   632  0886  3400               	retlw	0
   633  0887  3400               	retlw	0
   634  0888  3410               	retlw	16
   635  0889  3427               	retlw	39
   636  088A  3400               	retlw	0
   637  088B  3400               	retlw	0
   638  088C  34A0               	retlw	160
   639  088D  3486               	retlw	134
   640  088E  3401               	retlw	1
   641  088F  3400               	retlw	0
   642  0890  3440               	retlw	64
   643  0891  3442               	retlw	66
   644  0892  340F               	retlw	15
   645  0893  3400               	retlw	0
   646  0894  3480               	retlw	128
   647  0895  3496               	retlw	150
   648  0896  3498               	retlw	152
   649  0897  3400               	retlw	0
   650  0898  3400               	retlw	0
   651  0899  34E1               	retlw	225
   652  089A  34F5               	retlw	245
   653  089B  3405               	retlw	5
   654  089C  3400               	retlw	0
   655  089D  34CA               	retlw	202
   656  089E  349A               	retlw	154
   657  089F  343B               	retlw	59
   658  08A0                     __end_of_dpowers:
   659  001A                     _RCREG	set	26
   660  0019                     _TXREG	set	25
   661  0018                     _RCSTAbits	set	24
   662  001F                     _ADCON0	set	31
   663  001E                     _ADRESH	set	30
   664  001F                     _ADCON0bits	set	31
   665  000C                     _PIR1bits	set	12
   666  000B                     _INTCONbits	set	11
   667  0005                     _PORTA	set	5
   668  0008                     _PORTD	set	8
   669  0007                     _PORTC	set	7
   670  0006                     _PORTB	set	6
   671  0009                     _PORTE	set	9
   672  00C4                     _CREN	set	196
   673  00C7                     _SPEN	set	199
   674  0049                     _RE1	set	73
   675  0048                     _RE0	set	72
   676  0065                     _RCIF	set	101
   677  0087                     _TRISCbits	set	135
   678  0098                     _TXSTAbits	set	152
   679  0099                     _SPBRG	set	153
   680  009F                     _ADCON1	set	159
   681  008C                     _PIE1bits	set	140
   682  0085                     _TRISA	set	133
   683  0088                     _TRISD	set	136
   684  0087                     _TRISC	set	135
   685  0086                     _TRISB	set	134
   686  0089                     _TRISE	set	137
   687  04C5                     _TXEN	set	1221
   688  043E                     _TRISC6	set	1086
   689  043F                     _TRISC7	set	1087
   690  04C4                     _SYNC	set	1220
   691  04C2                     _BRGH	set	1218
   692  04C1                     _TRMT	set	1217
   693  0189                     _ANSELH	set	393
   694  0188                     _ANSEL	set	392
   695  08A0                     STR_1:
   696  08A0  3456               	retlw	86	;'V'
   697  08A1  3431               	retlw	49	;'1'
   698  08A2  3420               	retlw	32	;' '
   699  08A3  3420               	retlw	32	;' '
   700  08A4  3420               	retlw	32	;' '
   701  08A5  3420               	retlw	32	;' '
   702  08A6  3420               	retlw	32	;' '
   703  08A7  3456               	retlw	86	;'V'
   704  08A8  3432               	retlw	50	;'2'
   705  08A9  3420               	retlw	32	;' '
   706  08AA  3420               	retlw	32	;' '
   707  08AB  3420               	retlw	32	;' '
   708  08AC  3420               	retlw	32	;' '
   709  08AD  3420               	retlw	32	;' '
   710  08AE  3443               	retlw	67	;'C'
   711  08AF  344F               	retlw	79	;'O'
   712  08B0  344E               	retlw	78	;'N'
   713  08B1  3454               	retlw	84	;'T'
   714  08B2  3420               	retlw	32	;' '
   715  08B3  340A               	retlw	10
   716  08B4  3400               	retlw	0
   717  08B5                     STR_2:
   718  08B5  3425               	retlw	37	;'%'
   719  08B6  3431               	retlw	49	;'1'
   720  08B7  342E               	retlw	46	;'.'
   721  08B8  3432               	retlw	50	;'2'
   722  08B9  3466               	retlw	102	;'f'
   723  08BA  3420               	retlw	32	;' '
   724  08BB  3420               	retlw	32	;' '
   725  08BC  3420               	retlw	32	;' '
   726  08BD  3425               	retlw	37	;'%'
   727  08BE  3431               	retlw	49	;'1'
   728  08BF  342E               	retlw	46	;'.'
   729  08C0  3432               	retlw	50	;'2'
   730  08C1  3466               	retlw	102	;'f'
   731  08C2  3420               	retlw	32	;' '
   732  08C3  3420               	retlw	32	;' '
   733  08C4  3420               	retlw	32	;' '
   734  08C5  3425               	retlw	37	;'%'
   735  08C6  3464               	retlw	100	;'d'
   736  08C7  3400               	retlw	0
   737  08C8                     STR_3:
   738  08C8  3456               	retlw	86	;'V'
   739  08C9  3431               	retlw	49	;'1'
   740  08CA  3420               	retlw	32	;' '
   741  08CB  3420               	retlw	32	;' '
   742  08CC  3420               	retlw	32	;' '
   743  08CD  3456               	retlw	86	;'V'
   744  08CE  3432               	retlw	50	;'2'
   745  08CF  3420               	retlw	32	;' '
   746  08D0  3420               	retlw	32	;' '
   747  08D1  3420               	retlw	32	;' '
   748  08D2  3443               	retlw	67	;'C'
   749  08D3  344F               	retlw	79	;'O'
   750  08D4  344E               	retlw	78	;'N'
   751  08D5  3454               	retlw	84	;'T'
   752  08D6  3400               	retlw	0
   753                           
   754                           	psect	cinit
   755  000F                     start_initialization:	
   756                           ; #config settings
   757                           
   758  000F                     __initialization:
   759                           
   760                           ; Clear objects allocated to COMMON
   761  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   762  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   763                           
   764                           ; Clear objects allocated to BANK1
   765  0011  1383               	bcf	3,7	;select IRP bank0
   766  0012  30D3               	movlw	low __pbssBANK1
   767  0013  0084               	movwf	4
   768  0014  30F0               	movlw	low (__pbssBANK1+29)
   769  0015  120A  118A  27F8  120A  118A  	fcall	clear_ram0
   770  001A                     end_of_initialization:	
   771                           ;End of C runtime variable initialization code
   772                           
   773  001A                     __end_of__initialization:
   774  001A  0183               	clrf	3
   775  001B  120A  118A  2EA0   	ljmp	_main	;jump to C main() function
   776                           
   777                           	psect	bssCOMMON
   778  0079                     __pbssCOMMON:
   779  0079                     _recibido:
   780  0079                     	ds	1
   781  007A                     _valor_adc:
   782  007A                     	ds	1
   783                           
   784                           	psect	bssBANK1
   785  00D3                     __pbssBANK1:
   786  00D3                     _V2:
   787  00D3                     	ds	4
   788  00D7                     _V1:
   789  00D7                     	ds	4
   790  00DB                     _contador:
   791  00DB                     	ds	1
   792  00DC                     _pantalla:
   793  00DC                     	ds	20
   794                           
   795                           	psect	clrtext
   796  07F8                     clear_ram0:	
   797                           ;	Called with FSR containing the base address, and
   798                           ;	W with the last address+1
   799                           
   800  07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   801  07F9                     clrloop0:
   802  07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   803  07FA  0A84               	incf	4,f	;increment pointer
   804  07FB  0604               	xorwf	4,w	;XOR with final address
   805  07FC  1903               	btfsc	3,2	;have we reached the end yet?
   806  07FD  3400               	retlw	0	;all done for this memory range, return
   807  07FE  0604               	xorwf	4,w	;XOR again to restore value
   808  07FF  2FF9               	goto	clrloop0	;do the next byte
   809                           
   810                           	psect	cstackBANK1
   811  00A0                     __pcstackBANK1:
   812  00A0                     ?___flsub:
   813  00A0                     ___flsub@a:	
   814                           ; 4 bytes @ 0x0
   815                           
   816                           
   817                           ; 4 bytes @ 0x0
   818  00A0                     	ds	4
   819  00A4                     ___flsub@b:
   820                           
   821                           ; 4 bytes @ 0x4
   822  00A4                     	ds	4
   823  00A8                     ?_sprintf:
   824  00A8                     sprintf@f:	
   825                           ; 2 bytes @ 0x8
   826                           
   827                           
   828                           ; 1 bytes @ 0x8
   829  00A8                     	ds	11
   830  00B3                     ??_sprintf:
   831                           
   832                           ; 1 bytes @ 0x13
   833  00B3                     	ds	5
   834  00B8                     _sprintf$1241:
   835                           
   836                           ; 4 bytes @ 0x18
   837  00B8                     	ds	4
   838  00BC                     sprintf@ap:
   839                           
   840                           ; 1 bytes @ 0x1C
   841  00BC                     	ds	1
   842  00BD                     sprintf@flag:
   843                           
   844                           ; 2 bytes @ 0x1D
   845  00BD                     	ds	2
   846  00BF                     sprintf@width:
   847                           
   848                           ; 2 bytes @ 0x1F
   849  00BF                     	ds	2
   850  00C1                     sprintf@tmpval:
   851                           
   852                           ; 4 bytes @ 0x21
   853  00C1                     	ds	4
   854  00C5                     sprintf@val:
   855                           
   856                           ; 4 bytes @ 0x25
   857  00C5                     	ds	4
   858  00C9                     sprintf@eexp:
   859                           
   860                           ; 2 bytes @ 0x29
   861  00C9                     	ds	2
   862  00CB                     sprintf@fval:
   863                           
   864                           ; 4 bytes @ 0x2B
   865  00CB                     	ds	4
   866  00CF                     sprintf@sp:
   867                           
   868                           ; 1 bytes @ 0x2F
   869  00CF                     	ds	1
   870  00D0                     sprintf@prec:
   871                           
   872                           ; 2 bytes @ 0x30
   873  00D0                     	ds	2
   874  00D2                     sprintf@c:
   875                           
   876                           ; 1 bytes @ 0x32
   877  00D2                     	ds	1
   878                           
   879                           	psect	cstackCOMMON
   880  0070                     __pcstackCOMMON:
   881  0070                     ?_isdigit:
   882  0070                     ?_USART_Read:	
   883                           ; 1 bit 
   884                           
   885  0070                     ??_USART_Read:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0070                     ?_setup:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0070                     ?_initADC:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0070                     ?_LCD_Init:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  0070                     ?_LCD_clear:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  0070                     ?_Set_Baud_Rate:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0070                     ?_Init_Transmit:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0070                     ?_Init_Receive:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0070                     ?_USART_Write:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0070                     ?_ADC_Select:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0070                     ?_LCD_Port:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     ?_ISR:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0070                     ??_ISR:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0070                     ?_main:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0070                     ?_LCD_Write_Char:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0070                     ?_LCD_Command:	
   931                           ; 1 bytes @ 0x0
   932                           
   933                           
   934                           ; 1 bytes @ 0x0
   935  0070                     	ds	3
   936  0073                     ??_setup:
   937  0073                     ??_initADC:	
   938                           ; 1 bytes @ 0x3
   939                           
   940  0073                     ??_Set_Baud_Rate:	
   941                           ; 1 bytes @ 0x3
   942                           
   943  0073                     ??_Init_Transmit:	
   944                           ; 1 bytes @ 0x3
   945                           
   946  0073                     ??_Init_Receive:	
   947                           ; 1 bytes @ 0x3
   948                           
   949  0073                     ??_USART_Write:	
   950                           ; 1 bytes @ 0x3
   951                           
   952  0073                     ??_ADC_Select:	
   953                           ; 1 bytes @ 0x3
   954                           
   955  0073                     ??_LCD_Port:	
   956                           ; 1 bytes @ 0x3
   957                           
   958  0073                     ??_isdigit:	
   959                           ; 1 bytes @ 0x3
   960                           
   961  0073                     ??__tdiv_to_l_:	
   962                           ; 1 bytes @ 0x3
   963                           
   964  0073                     ??__div_to_l_:	
   965                           ; 1 bytes @ 0x3
   966                           
   967  0073                     ??___lldiv:	
   968                           ; 1 bytes @ 0x3
   969                           
   970  0073                     ??___fleq:	
   971                           ; 1 bytes @ 0x3
   972                           
   973  0073                     ??___flge:	
   974                           ; 1 bytes @ 0x3
   975                           
   976  0073                     ?__Umul8_16:	
   977                           ; 1 bytes @ 0x3
   978                           
   979  0073                     ?___wmul:	
   980                           ; 2 bytes @ 0x3
   981                           
   982  0073                     ?___awmod:	
   983                           ; 2 bytes @ 0x3
   984                           
   985  0073                     ?___lwmod:	
   986                           ; 2 bytes @ 0x3
   987                           
   988  0073                     ?___flneg:	
   989                           ; 2 bytes @ 0x3
   990                           
   991  0073                     ?___xxtofl:	
   992                           ; 4 bytes @ 0x3
   993                           
   994  0073                     LCD_Port@a:	
   995                           ; 4 bytes @ 0x3
   996                           
   997  0073                     USART_Write@a:	
   998                           ; 1 bytes @ 0x3
   999                           
  1000  0073                     __Umul8_16@multiplicand:	
  1001                           ; 1 bytes @ 0x3
  1002                           
  1003  0073                     _isdigit$1062:	
  1004                           ; 1 bytes @ 0x3
  1005                           
  1006  0073                     ___wmul@multiplier:	
  1007                           ; 1 bytes @ 0x3
  1008                           
  1009  0073                     ___awmod@divisor:	
  1010                           ; 2 bytes @ 0x3
  1011                           
  1012  0073                     ___lwmod@divisor:	
  1013                           ; 2 bytes @ 0x3
  1014                           
  1015  0073                     ___flneg@f1:	
  1016                           ; 2 bytes @ 0x3
  1017                           
  1018  0073                     ___xxtofl@val:	
  1019                           ; 4 bytes @ 0x3
  1020                           
  1021                           
  1022                           ; 4 bytes @ 0x3
  1023  0073                     	ds	1
  1024  0074                     ?_USART_Write_String:
  1025  0074                     ??_LCD_Write_Char:	
  1026                           ; 1 bytes @ 0x4
  1027                           
  1028  0074                     ??_LCD_Command:	
  1029                           ; 1 bytes @ 0x4
  1030                           
  1031  0074                     isdigit@c:	
  1032                           ; 1 bytes @ 0x4
  1033                           
  1034  0074                     USART_Write_String@a:	
  1035                           ; 1 bytes @ 0x4
  1036                           
  1037  0074                     ___lldiv@quotient:	
  1038                           ; 2 bytes @ 0x4
  1039                           
  1040                           
  1041                           ; 4 bytes @ 0x4
  1042  0074                     	ds	1
  1043  0075                     ??__Umul8_16:
  1044  0075                     LCD_Write_Char@a:	
  1045                           ; 1 bytes @ 0x5
  1046                           
  1047  0075                     ADC_Select@a:	
  1048                           ; 1 bytes @ 0x5
  1049                           
  1050  0075                     ___wmul@multiplicand:	
  1051                           ; 1 bytes @ 0x5
  1052                           
  1053  0075                     ___awmod@dividend:	
  1054                           ; 2 bytes @ 0x5
  1055                           
  1056  0075                     ___lwmod@dividend:	
  1057                           ; 2 bytes @ 0x5
  1058                           
  1059                           
  1060                           ; 2 bytes @ 0x5
  1061  0075                     	ds	1
  1062  0076                     ??_USART_Write_String:
  1063  0076                     ?_LCD_Write_String:	
  1064                           ; 1 bytes @ 0x6
  1065                           
  1066  0076                     LCD_Command@a:	
  1067                           ; 1 bytes @ 0x6
  1068                           
  1069  0076                     LCD_Write_String@a:	
  1070                           ; 1 bytes @ 0x6
  1071                           
  1072                           
  1073                           ; 2 bytes @ 0x6
  1074  0076                     	ds	1
  1075  0077                     ??_LCD_Init:
  1076  0077                     ??_LCD_clear:	
  1077                           ; 1 bytes @ 0x7
  1078                           
  1079  0077                     ?_LCD_Set_Cursor:	
  1080                           ; 1 bytes @ 0x7
  1081                           
  1082  0077                     ??___wmul:	
  1083                           ; 1 bytes @ 0x7
  1084                           
  1085  0077                     ??___awmod:	
  1086                           ; 1 bytes @ 0x7
  1087                           
  1088  0077                     ??___flneg:	
  1089                           ; 1 bytes @ 0x7
  1090                           
  1091  0077                     ??___lwmod:	
  1092                           ; 1 bytes @ 0x7
  1093                           
  1094  0077                     LCD_Set_Cursor@y:	
  1095                           ; 1 bytes @ 0x7
  1096                           
  1097  0077                     USART_Write_String@i:	
  1098                           ; 1 bytes @ 0x7
  1099                           
  1100  0077                     ___wmul@product:	
  1101                           ; 1 bytes @ 0x7
  1102                           
  1103                           
  1104                           ; 2 bytes @ 0x7
  1105  0077                     	ds	1
  1106  0078                     ??_LCD_Set_Cursor:
  1107  0078                     ??___awdiv:	
  1108                           ; 1 bytes @ 0x8
  1109                           
  1110  0078                     ___lldiv@counter:	
  1111                           ; 1 bytes @ 0x8
  1112                           
  1113  0078                     ___lwmod@counter:	
  1114                           ; 1 bytes @ 0x8
  1115                           
  1116                           
  1117                           ; 1 bytes @ 0x8
  1118  0078                     	ds	1
  1119  0079                     ??___flsub:
  1120                           
  1121                           	psect	cstackBANK0
  1122  0020                     __pcstackBANK0:	
  1123                           ; 1 bytes @ 0x9
  1124                           
  1125  0020                     ?___fleq:
  1126  0020                     ?___flge:	
  1127                           ; 1 bit 
  1128                           
  1129  0020                     ??_LCD_Write_String:	
  1130                           ; 1 bit 
  1131                           
  1132  0020                     ??___xxtofl:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135  0020                     ?___lwdiv:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  0020                     ?__tdiv_to_l_:	
  1139                           ; 2 bytes @ 0x0
  1140                           
  1141  0020                     ?__div_to_l_:	
  1142                           ; 4 bytes @ 0x0
  1143                           
  1144  0020                     ?___lldiv:	
  1145                           ; 4 bytes @ 0x0
  1146                           
  1147  0020                     LCD_Set_Cursor@x:	
  1148                           ; 4 bytes @ 0x0
  1149                           
  1150  0020                     ___awmod@counter:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0020                     ___lwdiv@divisor:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0020                     __Umul8_16@product:	
  1157                           ; 2 bytes @ 0x0
  1158                           
  1159  0020                     ___lldiv@divisor:	
  1160                           ; 2 bytes @ 0x0
  1161                           
  1162  0020                     __div_to_l_@f1:	
  1163                           ; 4 bytes @ 0x0
  1164                           
  1165  0020                     ___fleq@ff1:	
  1166                           ; 4 bytes @ 0x0
  1167                           
  1168  0020                     ___flge@ff1:	
  1169                           ; 4 bytes @ 0x0
  1170                           
  1171  0020                     __tdiv_to_l_@f1:	
  1172                           ; 4 bytes @ 0x0
  1173                           
  1174                           
  1175                           ; 4 bytes @ 0x0
  1176  0020                     	ds	1
  1177  0021                     LCD_Set_Cursor@a:
  1178  0021                     ___awmod@sign:	
  1179                           ; 1 bytes @ 0x1
  1180                           
  1181                           
  1182                           ; 1 bytes @ 0x1
  1183  0021                     	ds	1
  1184  0022                     ?___awdiv:
  1185  0022                     ___awdiv@divisor:	
  1186                           ; 2 bytes @ 0x2
  1187                           
  1188  0022                     ___lwdiv@dividend:	
  1189                           ; 2 bytes @ 0x2
  1190                           
  1191  0022                     __Umul8_16@word_mpld:	
  1192                           ; 2 bytes @ 0x2
  1193                           
  1194                           
  1195                           ; 2 bytes @ 0x2
  1196  0022                     	ds	1
  1197  0023                     LCD_Write_String@i:
  1198                           
  1199                           ; 2 bytes @ 0x3
  1200  0023                     	ds	1
  1201  0024                     ??___lwdiv:
  1202  0024                     __Umul8_16@multiplier:	
  1203                           ; 1 bytes @ 0x4
  1204                           
  1205  0024                     ___xxtofl@sign:	
  1206                           ; 1 bytes @ 0x4
  1207                           
  1208  0024                     ___awdiv@dividend:	
  1209                           ; 1 bytes @ 0x4
  1210                           
  1211  0024                     ___lldiv@dividend:	
  1212                           ; 2 bytes @ 0x4
  1213                           
  1214  0024                     __div_to_l_@f2:	
  1215                           ; 4 bytes @ 0x4
  1216                           
  1217  0024                     ___fleq@ff2:	
  1218                           ; 4 bytes @ 0x4
  1219                           
  1220  0024                     ___flge@ff2:	
  1221                           ; 4 bytes @ 0x4
  1222                           
  1223  0024                     __tdiv_to_l_@f2:	
  1224                           ; 4 bytes @ 0x4
  1225                           
  1226                           
  1227                           ; 4 bytes @ 0x4
  1228  0024                     	ds	1
  1229  0025                     ___lwdiv@counter:
  1230  0025                     ___xxtofl@exp:	
  1231                           ; 1 bytes @ 0x5
  1232                           
  1233                           
  1234                           ; 1 bytes @ 0x5
  1235  0025                     	ds	1
  1236  0026                     ___awdiv@counter:
  1237  0026                     ___lwdiv@quotient:	
  1238                           ; 1 bytes @ 0x6
  1239                           
  1240  0026                     ___xxtofl@arg:	
  1241                           ; 2 bytes @ 0x6
  1242                           
  1243                           
  1244                           ; 4 bytes @ 0x6
  1245  0026                     	ds	1
  1246  0027                     ___awdiv@sign:
  1247                           
  1248                           ; 1 bytes @ 0x7
  1249  0027                     	ds	1
  1250  0028                     ?___llmod:
  1251  0028                     ___awdiv@quotient:	
  1252                           ; 4 bytes @ 0x8
  1253                           
  1254  0028                     __div_to_l_@quot:	
  1255                           ; 2 bytes @ 0x8
  1256                           
  1257  0028                     __tdiv_to_l_@quot:	
  1258                           ; 4 bytes @ 0x8
  1259                           
  1260  0028                     ___llmod@divisor:	
  1261                           ; 4 bytes @ 0x8
  1262                           
  1263                           
  1264                           ; 4 bytes @ 0x8
  1265  0028                     	ds	2
  1266  002A                     ?___flmul:
  1267  002A                     ___flmul@b:	
  1268                           ; 4 bytes @ 0xA
  1269                           
  1270                           
  1271                           ; 4 bytes @ 0xA
  1272  002A                     	ds	2
  1273  002C                     __div_to_l_@cntr:
  1274  002C                     __tdiv_to_l_@cntr:	
  1275                           ; 1 bytes @ 0xC
  1276                           
  1277  002C                     ___llmod@dividend:	
  1278                           ; 1 bytes @ 0xC
  1279                           
  1280                           
  1281                           ; 4 bytes @ 0xC
  1282  002C                     	ds	1
  1283  002D                     __div_to_l_@exp1:
  1284  002D                     __tdiv_to_l_@exp1:	
  1285                           ; 1 bytes @ 0xD
  1286                           
  1287                           
  1288                           ; 1 bytes @ 0xD
  1289  002D                     	ds	1
  1290  002E                     ___flmul@a:
  1291                           
  1292                           ; 4 bytes @ 0xE
  1293  002E                     	ds	2
  1294  0030                     ??___llmod:
  1295                           
  1296                           ; 1 bytes @ 0x10
  1297  0030                     	ds	1
  1298  0031                     ___llmod@counter:
  1299                           
  1300                           ; 1 bytes @ 0x11
  1301  0031                     	ds	1
  1302  0032                     ??___flmul:
  1303                           
  1304                           ; 1 bytes @ 0x12
  1305  0032                     	ds	5
  1306  0037                     ___flmul@sign:
  1307                           
  1308                           ; 1 bytes @ 0x17
  1309  0037                     	ds	1
  1310  0038                     ___flmul@grs:
  1311                           
  1312                           ; 4 bytes @ 0x18
  1313  0038                     	ds	4
  1314  003C                     ___flmul@aexp:
  1315                           
  1316                           ; 1 bytes @ 0x1C
  1317  003C                     	ds	1
  1318  003D                     ___flmul@bexp:
  1319                           
  1320                           ; 1 bytes @ 0x1D
  1321  003D                     	ds	1
  1322  003E                     ___flmul@prod:
  1323                           
  1324                           ; 4 bytes @ 0x1E
  1325  003E                     	ds	4
  1326  0042                     ___flmul@temp:
  1327                           
  1328                           ; 2 bytes @ 0x22
  1329  0042                     	ds	2
  1330  0044                     ?_LeerADC:
  1331  0044                     ?_fround:	
  1332                           ; 4 bytes @ 0x24
  1333                           
  1334  0044                     ?_scale:	
  1335                           ; 4 bytes @ 0x24
  1336                           
  1337                           
  1338                           ; 4 bytes @ 0x24
  1339  0044                     	ds	4
  1340  0048                     ??_LeerADC:
  1341  0048                     ??_fround:	
  1342                           ; 1 bytes @ 0x28
  1343                           
  1344  0048                     ??_scale:	
  1345                           ; 1 bytes @ 0x28
  1346                           
  1347                           
  1348                           ; 1 bytes @ 0x28
  1349  0048                     	ds	4
  1350  004C                     LeerADC@x:
  1351                           
  1352                           ; 1 bytes @ 0x2C
  1353  004C                     	ds	1
  1354  004D                     LeerADC@a:
  1355                           
  1356                           ; 4 bytes @ 0x2D
  1357  004D                     	ds	2
  1358  004F                     _fround$1239:
  1359                           
  1360                           ; 4 bytes @ 0x2F
  1361  004F                     	ds	3
  1362  0052                     _scale$1240:
  1363                           
  1364                           ; 4 bytes @ 0x32
  1365  0052                     	ds	1
  1366  0053                     _fround$1238:
  1367                           
  1368                           ; 4 bytes @ 0x33
  1369  0053                     	ds	3
  1370  0056                     scale@scl:
  1371                           
  1372                           ; 1 bytes @ 0x36
  1373  0056                     	ds	1
  1374  0057                     ?___fltol:
  1375  0057                     fround@prec:	
  1376                           ; 4 bytes @ 0x37
  1377                           
  1378  0057                     ___fltol@f1:	
  1379                           ; 1 bytes @ 0x37
  1380                           
  1381                           
  1382                           ; 4 bytes @ 0x37
  1383  0057                     	ds	1
  1384  0058                     ?___fladd:
  1385  0058                     ___fladd@b:	
  1386                           ; 4 bytes @ 0x38
  1387                           
  1388                           
  1389                           ; 4 bytes @ 0x38
  1390  0058                     	ds	3
  1391  005B                     ??___fltol:
  1392                           
  1393                           ; 1 bytes @ 0x3B
  1394  005B                     	ds	1
  1395  005C                     ___fladd@a:
  1396                           
  1397                           ; 4 bytes @ 0x3C
  1398  005C                     	ds	4
  1399  0060                     ??___fladd:
  1400  0060                     ___fltol@sign1:	
  1401                           ; 1 bytes @ 0x40
  1402                           
  1403                           
  1404                           ; 1 bytes @ 0x40
  1405  0060                     	ds	1
  1406  0061                     ___fltol@exp1:
  1407                           
  1408                           ; 1 bytes @ 0x41
  1409  0061                     	ds	7
  1410  0068                     ___fladd@signs:
  1411                           
  1412                           ; 1 bytes @ 0x48
  1413  0068                     	ds	1
  1414  0069                     ___fladd@aexp:
  1415                           
  1416                           ; 1 bytes @ 0x49
  1417  0069                     	ds	1
  1418  006A                     ___fladd@bexp:
  1419                           
  1420                           ; 1 bytes @ 0x4A
  1421  006A                     	ds	1
  1422  006B                     ___fladd@grs:
  1423                           
  1424                           ; 1 bytes @ 0x4B
  1425  006B                     	ds	1
  1426  006C                     ??_main:
  1427                           
  1428                           ; 1 bytes @ 0x4C
  1429  006C                     	ds	3
  1430                           
  1431                           	psect	maintext
  1432  06A0                     __pmaintext:	
  1433 ;;
  1434 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1435 ;;
  1436 ;; *************** function _main *****************
  1437 ;; Defined at:
  1438 ;;		line 87 in file "lab3_main.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : B00/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1452 ;;      Params:         0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0
  1454 ;;      Temps:          0       3       0       0       0
  1455 ;;      Totals:         0       3       0       0       0
  1456 ;;Total ram usage:        3 bytes
  1457 ;; Hardware stack levels required when called:    6
  1458 ;; This function calls:
  1459 ;;		_Init_Receive
  1460 ;;		_Init_Transmit
  1461 ;;		_LCD_Init
  1462 ;;		_LCD_Set_Cursor
  1463 ;;		_LCD_Write_String
  1464 ;;		_LCD_clear
  1465 ;;		_LeerADC
  1466 ;;		_Set_Baud_Rate
  1467 ;;		_USART_Write
  1468 ;;		_USART_Write_String
  1469 ;;		_initADC
  1470 ;;		_setup
  1471 ;;		_sprintf
  1472 ;; This function is called by:
  1473 ;;		Startup code after reset
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           
  1478                           ;psect for function _main
  1479  06A0                     _main:
  1480  06A0                     l4562:	
  1481                           ;incstack = 0
  1482                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1483                           
  1484                           
  1485                           ;lab3_main.c: 90:     setup();
  1486  06A0  160A  158A  2118  120A  118A  	fcall	_setup
  1487                           
  1488                           ;lab3_main.c: 91:     initADC();
  1489  06A5  160A  158A  203B  120A  118A  	fcall	_initADC
  1490                           
  1491                           ;lab3_main.c: 92:     LCD_Init();
  1492  06AA  160A  158A  2260  120A  118A  	fcall	_LCD_Init
  1493                           
  1494                           ;lab3_main.c: 93:     LCD_clear();
  1495  06AF  160A  158A  202E  120A  118A  	fcall	_LCD_clear
  1496                           
  1497                           ;lab3_main.c: 95:     Set_Baud_Rate();
  1498  06B4  160A  158A  200C  120A  118A  	fcall	_Set_Baud_Rate
  1499  06B9                     l4564:
  1500                           
  1501                           ;lab3_main.c: 97:     Init_Transmit();
  1502  06B9  160A  158A  2048  120A  118A  	fcall	_Init_Transmit
  1503  06BE                     l4566:
  1504                           
  1505                           ;lab3_main.c: 99:     Init_Receive();
  1506  06BE  120A  158A  20D9  120A  118A  	fcall	_Init_Receive
  1507  06C3                     l4568:
  1508                           
  1509                           ;lab3_main.c: 109:         V1 = LeerADC(0);
  1510  06C3  3000               	movlw	0
  1511  06C4  160A  118A  200A  120A  118A  	fcall	_LeerADC
  1512  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1513  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1514  06CB  0847               	movf	?_LeerADC+3,w
  1515  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  1516  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  1517  06CE  00DA               	movwf	(_V1+3)^(0+128)
  1518  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1519  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1520  06D1  0846               	movf	?_LeerADC+2,w
  1521  06D2  1683               	bsf	3,5	;RP0=1, select bank1
  1522  06D3  1303               	bcf	3,6	;RP1=0, select bank1
  1523  06D4  00D9               	movwf	(_V1+2)^(0+128)
  1524  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  1525  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  1526  06D7  0845               	movf	?_LeerADC+1,w
  1527  06D8  1683               	bsf	3,5	;RP0=1, select bank1
  1528  06D9  1303               	bcf	3,6	;RP1=0, select bank1
  1529  06DA  00D8               	movwf	(_V1+1)^(0+128)
  1530  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  1531  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  1532  06DD  0844               	movf	?_LeerADC,w
  1533  06DE  1683               	bsf	3,5	;RP0=1, select bank1
  1534  06DF  1303               	bcf	3,6	;RP1=0, select bank1
  1535  06E0  00D7               	movwf	_V1^(0+128)
  1536  06E1                     l4570:
  1537                           
  1538                           ;lab3_main.c: 110:         V2 = LeerADC(1);
  1539  06E1  3001               	movlw	1
  1540  06E2  160A  118A  200A  120A  118A  	fcall	_LeerADC
  1541  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1542  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1543  06E9  0847               	movf	?_LeerADC+3,w
  1544  06EA  1683               	bsf	3,5	;RP0=1, select bank1
  1545  06EB  1303               	bcf	3,6	;RP1=0, select bank1
  1546  06EC  00D6               	movwf	(_V2+3)^(0+128)
  1547  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  1548  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  1549  06EF  0846               	movf	?_LeerADC+2,w
  1550  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  1551  06F1  1303               	bcf	3,6	;RP1=0, select bank1
  1552  06F2  00D5               	movwf	(_V2+2)^(0+128)
  1553  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  1554  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  1555  06F5  0845               	movf	?_LeerADC+1,w
  1556  06F6  1683               	bsf	3,5	;RP0=1, select bank1
  1557  06F7  1303               	bcf	3,6	;RP1=0, select bank1
  1558  06F8  00D4               	movwf	(_V2+1)^(0+128)
  1559  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  1560  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  1561  06FB  0844               	movf	?_LeerADC,w
  1562  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  1563  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  1564  06FE  00D3               	movwf	_V2^(0+128)
  1565  06FF                     l4572:
  1566                           
  1567                           ;lab3_main.c: 115:         USART_Write_String("V1     V2     CONT \n");
  1568  06FF  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1569  0700  00F4               	movwf	USART_Write_String@a
  1570  0701  3080               	movlw	128
  1571  0702  00F5               	movwf	USART_Write_String@a+1
  1572  0703  160A  158A  2142  120A  118A  	fcall	_USART_Write_String
  1573  0708                     l4574:
  1574                           
  1575                           ;lab3_main.c: 116:         USART_Write(13);
  1576  0708  300D               	movlw	13
  1577  0709  160A  158A  2022  120A  118A  	fcall	_USART_Write
  1578  070E                     l4576:
  1579                           
  1580                           ;lab3_main.c: 117:         USART_Write(10);
  1581  070E  300A               	movlw	10
  1582  070F  160A  158A  2022  120A  118A  	fcall	_USART_Write
  1583  0714                     l4578:
  1584                           
  1585                           ;lab3_main.c: 118:         sprintf(pantalla, "%1.2f   %1.2f   %d", V1,V2,contador);
  1586  0714  30A6               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1587  0715  1283               	bcf	3,5	;RP0=0, select bank0
  1588  0716  1303               	bcf	3,6	;RP1=0, select bank0
  1589  0717  00EC               	movwf	??_main
  1590  0718  086C               	movf	??_main,w
  1591  0719  1683               	bsf	3,5	;RP0=1, select bank1
  1592  071A  1303               	bcf	3,6	;RP1=0, select bank1
  1593  071B  00A8               	movwf	sprintf@f^(0+128)
  1594  071C  085A               	movf	(_V1+3)^(0+128),w
  1595  071D  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1596  071E  0859               	movf	(_V1+2)^(0+128),w
  1597  071F  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1598  0720  0858               	movf	(_V1+1)^(0+128),w
  1599  0721  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1600  0722  0857               	movf	_V1^(0+128),w
  1601  0723  00A9               	movwf	(?_sprintf^(0+128)+1)
  1602  0724  0856               	movf	(_V2+3)^(0+128),w
  1603  0725  00B0               	movwf	((?_sprintf+3)^(0+128)+5)
  1604  0726  0855               	movf	(_V2+2)^(0+128),w
  1605  0727  00AF               	movwf	((?_sprintf+2)^(0+128)+5)
  1606  0728  0854               	movf	(_V2+1)^(0+128),w
  1607  0729  00AE               	movwf	((?_sprintf+1)^(0+128)+5)
  1608  072A  0853               	movf	_V2^(0+128),w
  1609  072B  00AD               	movwf	(?_sprintf^(0+128)+5)
  1610  072C  085B               	movf	_contador^(0+128),w
  1611  072D  1283               	bcf	3,5	;RP0=0, select bank0
  1612  072E  1303               	bcf	3,6	;RP1=0, select bank0
  1613  072F  00ED               	movwf	??_main+1
  1614  0730  01EE               	clrf	??_main+2
  1615  0731  086D               	movf	??_main+1,w
  1616  0732  1683               	bsf	3,5	;RP0=1, select bank1
  1617  0733  1303               	bcf	3,6	;RP1=0, select bank1
  1618  0734  00B1               	movwf	(?_sprintf^(0+128)+9)
  1619  0735  1283               	bcf	3,5	;RP0=0, select bank0
  1620  0736  1303               	bcf	3,6	;RP1=0, select bank0
  1621  0737  086E               	movf	??_main+2,w
  1622  0738  1683               	bsf	3,5	;RP0=1, select bank1
  1623  0739  1303               	bcf	3,6	;RP1=0, select bank1
  1624  073A  00B2               	movwf	((?_sprintf+1)^(0+128)+9)
  1625  073B  30DC               	movlw	(low (_pantalla| 0))& (0+255)
  1626  073C  160A  118A  24F6  120A  118A  	fcall	_sprintf
  1627  0741                     l4580:
  1628                           
  1629                           ;lab3_main.c: 120:         USART_Write_String(pantalla);
  1630  0741  30DC               	movlw	(low (_pantalla| 0))& (0+255)
  1631  0742  00F4               	movwf	USART_Write_String@a
  1632  0743  3000               	movlw	0
  1633  0744  00F5               	movwf	USART_Write_String@a+1
  1634  0745  160A  158A  2142  120A  118A  	fcall	_USART_Write_String
  1635  074A                     l4582:
  1636                           
  1637                           ;lab3_main.c: 123:         USART_Write(13);
  1638  074A  300D               	movlw	13
  1639  074B  160A  158A  2022  120A  118A  	fcall	_USART_Write
  1640  0750                     l4584:
  1641                           
  1642                           ;lab3_main.c: 124:         USART_Write(10);
  1643  0750  300A               	movlw	10
  1644  0751  160A  158A  2022  120A  118A  	fcall	_USART_Write
  1645  0756                     l4586:
  1646                           
  1647                           ;lab3_main.c: 126:         LCD_clear();
  1648  0756  160A  158A  202E  120A  118A  	fcall	_LCD_clear
  1649  075B                     l4588:
  1650                           
  1651                           ;lab3_main.c: 127:         LCD_Set_Cursor(1,1);
  1652  075B  01F7               	clrf	LCD_Set_Cursor@y
  1653  075C  0AF7               	incf	LCD_Set_Cursor@y,f
  1654  075D  3001               	movlw	1
  1655  075E  160A  158A  20C9  120A  118A  	fcall	_LCD_Set_Cursor
  1656  0763                     l4590:
  1657                           
  1658                           ;lab3_main.c: 128:         LCD_Write_String("V1   V2   CONT");
  1659  0763  30B9               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1660  0764  00F6               	movwf	LCD_Write_String@a
  1661  0765  3080               	movlw	128
  1662  0766  00F7               	movwf	LCD_Write_String@a+1
  1663  0767  160A  158A  21D4  120A  118A  	fcall	_LCD_Write_String
  1664                           
  1665                           ;lab3_main.c: 129:         LCD_Set_Cursor(2,1);
  1666  076C  01F7               	clrf	LCD_Set_Cursor@y
  1667  076D  0AF7               	incf	LCD_Set_Cursor@y,f
  1668  076E  3002               	movlw	2
  1669  076F  160A  158A  20C9  120A  118A  	fcall	_LCD_Set_Cursor
  1670  0774                     l4592:
  1671                           
  1672                           ;lab3_main.c: 130:         LCD_Write_String(pantalla);
  1673  0774  30DC               	movlw	(low (_pantalla| 0))& (0+255)
  1674  0775  00F6               	movwf	LCD_Write_String@a
  1675  0776  3000               	movlw	0
  1676  0777  00F7               	movwf	LCD_Write_String@a+1
  1677  0778  160A  158A  21D4  120A  118A  	fcall	_LCD_Write_String
  1678  077D                     l4594:
  1679                           
  1680                           ;lab3_main.c: 132:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1681  077D  3006               	movlw	6
  1682  077E  1283               	bcf	3,5	;RP0=0, select bank0
  1683  077F  1303               	bcf	3,6	;RP1=0, select bank0
  1684  0780  00EE               	movwf	??_main+2
  1685  0781  3013               	movlw	19
  1686  0782  00ED               	movwf	??_main+1
  1687  0783  30AD               	movlw	173
  1688  0784  00EC               	movwf	??_main
  1689  0785                     u7427:
  1690  0785  0BEC               	decfsz	??_main,f
  1691  0786  2F85               	goto	u7427
  1692  0787  0BED               	decfsz	??_main+1,f
  1693  0788  2F85               	goto	u7427
  1694  0789  0BEE               	decfsz	??_main+2,f
  1695  078A  2F85               	goto	u7427
  1696  078B  2EC3               	goto	l4568
  1697  078C  120A  118A  280C   	ljmp	start
  1698  078F                     __end_of_main:
  1699                           
  1700                           	psect	text1
  1701  14F6                     __ptext1:	
  1702 ;; *************** function _sprintf *****************
  1703 ;; Defined at:
  1704 ;;		line 505 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  sp              1    wreg     PTR unsigned char 
  1707 ;;		 -> pantalla(20), 
  1708 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1709 ;;		 -> STR_2(19), 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  sp              1   47[BANK1 ] PTR unsigned char 
  1712 ;;		 -> pantalla(20), 
  1713 ;;  fval            4   43[BANK1 ] PTR unsigned char 
  1714 ;;  val             4   37[BANK1 ] unsigned long 
  1715 ;;  tmpval          4   33[BANK1 ] struct .
  1716 ;;  prec            2   48[BANK1 ] int 
  1717 ;;  eexp            2   41[BANK1 ] int 
  1718 ;;  width           2   31[BANK1 ] int 
  1719 ;;  flag            2   29[BANK1 ] unsigned short 
  1720 ;;  cp              2    0        PTR const unsigned char 
  1721 ;;  len             2    0        unsigned int 
  1722 ;;  c               1   50[BANK1 ] unsigned char 
  1723 ;;  ap              1   28[BANK1 ] PTR void [1]
  1724 ;;		 -> ?_sprintf(2), 
  1725 ;;  d               1    0        unsigned char 
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  2    8[BANK1 ] int 
  1728 ;; Registers used:
  1729 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1735 ;;      Params:         0       0      11       0       0
  1736 ;;      Locals:         0       0      27       0       0
  1737 ;;      Temps:          0       0       5       0       0
  1738 ;;      Totals:         0       0      43       0       0
  1739 ;;Total ram usage:       43 bytes
  1740 ;; Hardware stack levels used:    1
  1741 ;; Hardware stack levels required when called:    5
  1742 ;; This function calls:
  1743 ;;		___awdiv
  1744 ;;		___fladd
  1745 ;;		___fleq
  1746 ;;		___flge
  1747 ;;		___flmul
  1748 ;;		___flneg
  1749 ;;		___flsub
  1750 ;;		___fltol
  1751 ;;		___lldiv
  1752 ;;		___llmod
  1753 ;;		___wmul
  1754 ;;		___xxtofl
  1755 ;;		__div_to_l_
  1756 ;;		__tdiv_to_l_
  1757 ;;		_fround
  1758 ;;		_isdigit
  1759 ;;		_scale
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function _sprintf
  1767  14F6                     _sprintf:
  1768                           
  1769                           ;incstack = 0
  1770                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1771                           ;sprintf@sp stored from wreg
  1772  14F6  1683               	bsf	3,5	;RP0=1, select bank1
  1773  14F7  1303               	bcf	3,6	;RP1=0, select bank1
  1774  14F8  00CF               	movwf	sprintf@sp^(0+128)
  1775  14F9                     l4248:
  1776                           
  1777                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const c
      +                          har * f, ...);D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 506: {;D:\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\Microchip\xc8\v2.31\pi
      +                          c\sources\c90\common\doprnt.c: 512:  char c;;D:\Microchip\xc8\v2.31\pic\sources\c90\comm
      +                          on\doprnt.c: 514:  int width;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 51
      +                          7:  int prec;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsigned sho
      +                          rt flag;
  1778  14F9  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1779  14FA  00B3               	movwf	??_sprintf^(0+128)
  1780  14FB  0833               	movf	??_sprintf^(0+128),w
  1781  14FC  00BC               	movwf	sprintf@ap^(0+128)
  1782  14FD                     L1:
  1783                           
  1784                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1785  14FD  120A  118A  2E87   	goto	l4530
  1786  1500                     l4250:
  1787                           
  1788                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  1789  1500  3025               	movlw	37
  1790  1501  0652               	xorwf	sprintf@c^(0+128),w
  1791  1502  1903               	btfsc	3,2
  1792  1503  2D05               	goto	u6841
  1793  1504  2D06               	goto	u6840
  1794  1505                     u6841:
  1795  1505  2D12               	goto	l4256
  1796  1506                     u6840:
  1797  1506                     l4252:
  1798                           
  1799                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;D:\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1800  1506  0852               	movf	sprintf@c^(0+128),w
  1801  1507  00B3               	movwf	??_sprintf^(0+128)
  1802  1508  084F               	movf	sprintf@sp^(0+128),w
  1803  1509  0084               	movwf	4
  1804  150A  0833               	movf	??_sprintf^(0+128),w
  1805  150B  1383               	bcf	3,7	;select IRP bank0
  1806  150C  0080               	movwf	0
  1807  150D                     l4254:
  1808  150D  3001               	movlw	1
  1809  150E  00B3               	movwf	??_sprintf^(0+128)
  1810  150F  0833               	movf	??_sprintf^(0+128),w
  1811  1510  07CF               	addwf	sprintf@sp^(0+128),f
  1812                           
  1813                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1814  1511  2CFD               	goto	L1
  1815  1512                     l4256:
  1816                           
  1817                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1818  1512  01BF               	clrf	sprintf@width^(0+128)
  1819  1513  01C0               	clrf	(sprintf@width+1)^(0+128)
  1820                           
  1821                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1822  1514  01BD               	clrf	sprintf@flag^(0+128)
  1823  1515  01BE               	clrf	(sprintf@flag+1)^(0+128)
  1824  1516                     l4258:
  1825                           
  1826                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit((unsigned)*f)
      +                          ) {
  1827  1516  0828               	movf	sprintf@f^(0+128),w
  1828  1517  0084               	movwf	4
  1829  1518  120A  158A  200A  160A  118A  	fcall	stringdir
  1830  151D  160A  158A  2056  160A  118A  	fcall	_isdigit
  1831  1522  1C03               	btfss	3,0
  1832  1523  2D25               	goto	u6851
  1833  1524  2D26               	goto	u6850
  1834  1525                     u6851:
  1835  1525  2D66               	goto	l4270
  1836  1526                     u6850:
  1837  1526                     l4260:
  1838                           
  1839                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0;
  1840  1526  1683               	bsf	3,5	;RP0=1, select bank1
  1841  1527  1303               	bcf	3,6	;RP1=0, select bank1
  1842  1528  01BF               	clrf	sprintf@width^(0+128)
  1843  1529  01C0               	clrf	(sprintf@width+1)^(0+128)
  1844  152A                     l4262:
  1845                           
  1846                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *= 10;
  1847  152A  300A               	movlw	10
  1848  152B  00F3               	movwf	___wmul@multiplier
  1849  152C  3000               	movlw	0
  1850  152D  00F4               	movwf	___wmul@multiplier+1
  1851  152E  1683               	bsf	3,5	;RP0=1, select bank1
  1852  152F  1303               	bcf	3,6	;RP1=0, select bank1
  1853  1530  0840               	movf	(sprintf@width+1)^(0+128),w
  1854  1531  00F6               	movwf	___wmul@multiplicand+1
  1855  1532  083F               	movf	sprintf@width^(0+128),w
  1856  1533  00F5               	movwf	___wmul@multiplicand
  1857  1534  160A  158A  20A4  160A  118A  	fcall	___wmul
  1858  1539  0874               	movf	?___wmul+1,w
  1859  153A  1683               	bsf	3,5	;RP0=1, select bank1
  1860  153B  1303               	bcf	3,6	;RP1=0, select bank1
  1861  153C  00C0               	movwf	(sprintf@width+1)^(0+128)
  1862  153D  0873               	movf	?___wmul,w
  1863  153E  00BF               	movwf	sprintf@width^(0+128)
  1864  153F                     l4264:
  1865                           
  1866                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width += *f++ - '0'
      +                          ;
  1867  153F  0828               	movf	sprintf@f^(0+128),w
  1868  1540  0084               	movwf	4
  1869  1541  120A  158A  200A  160A  118A  	fcall	stringdir
  1870  1546  3ED0               	addlw	208
  1871  1547  00B3               	movwf	??_sprintf^(0+128)
  1872  1548  30FF               	movlw	255
  1873  1549  1803               	skipnc
  1874  154A  3000               	movlw	0
  1875  154B  00B4               	movwf	(??_sprintf^(0+128)+1)
  1876  154C  0833               	movf	??_sprintf^(0+128),w
  1877  154D  07BF               	addwf	sprintf@width^(0+128),f
  1878  154E  1803               	skipnc
  1879  154F  0AC0               	incf	(sprintf@width+1)^(0+128),f
  1880  1550  0834               	movf	(??_sprintf+1)^(0+128),w
  1881  1551  07C0               	addwf	(sprintf@width+1)^(0+128),f
  1882  1552                     l4266:
  1883  1552  3001               	movlw	1
  1884  1553  00B3               	movwf	??_sprintf^(0+128)
  1885  1554  0833               	movf	??_sprintf^(0+128),w
  1886  1555  07A8               	addwf	sprintf@f^(0+128),f
  1887  1556                     l4268:
  1888                           
  1889                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(isdigit((unsign
      +                          ed)*f));
  1890  1556  0828               	movf	sprintf@f^(0+128),w
  1891  1557  0084               	movwf	4
  1892  1558  120A  158A  200A  160A  118A  	fcall	stringdir
  1893  155D  160A  158A  2056  160A  118A  	fcall	_isdigit
  1894  1562  1803               	btfsc	3,0
  1895  1563  2D65               	goto	u6861
  1896  1564  2D66               	goto	u6860
  1897  1565                     u6861:
  1898  1565  2D2A               	goto	l4262
  1899  1566                     u6860:
  1900  1566                     l4270:
  1901                           
  1902                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '.') {
  1903  1566  1683               	bsf	3,5	;RP0=1, select bank1
  1904  1567  1303               	bcf	3,6	;RP1=0, select bank1
  1905  1568  0828               	movf	sprintf@f^(0+128),w
  1906  1569  0084               	movwf	4
  1907  156A  120A  158A  200A  160A  118A  	fcall	stringdir
  1908  156F  3A2E               	xorlw	46
  1909  1570  1D03               	skipz
  1910  1571  2D73               	goto	u6871
  1911  1572  2D74               	goto	u6870
  1912  1573                     u6871:
  1913  1573  2DB9               	goto	l4286
  1914  1574                     u6870:
  1915  1574                     l4272:
  1916                           
  1917                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0x4000;
  1918  1574  173E               	bsf	(sprintf@flag^(0+128)+1),6
  1919  1575                     l4274:
  1920                           
  1921                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1922  1575  3001               	movlw	1
  1923  1576  00B3               	movwf	??_sprintf^(0+128)
  1924  1577  0833               	movf	??_sprintf^(0+128),w
  1925  1578  07A8               	addwf	sprintf@f^(0+128),f
  1926  1579                     l4276:
  1927                           
  1928                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1929  1579  01D0               	clrf	sprintf@prec^(0+128)
  1930  157A  01D1               	clrf	(sprintf@prec+1)^(0+128)
  1931                           
  1932                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigne
      +                          d)*f)) {
  1933  157B  2DA8               	goto	l4284
  1934  157C                     l4278:
  1935                           
  1936                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *= 10;
  1937  157C  300A               	movlw	10
  1938  157D  00F3               	movwf	___wmul@multiplier
  1939  157E  3000               	movlw	0
  1940  157F  00F4               	movwf	___wmul@multiplier+1
  1941  1580  1683               	bsf	3,5	;RP0=1, select bank1
  1942  1581  1303               	bcf	3,6	;RP1=0, select bank1
  1943  1582  0851               	movf	(sprintf@prec+1)^(0+128),w
  1944  1583  00F6               	movwf	___wmul@multiplicand+1
  1945  1584  0850               	movf	sprintf@prec^(0+128),w
  1946  1585  00F5               	movwf	___wmul@multiplicand
  1947  1586  160A  158A  20A4  160A  118A  	fcall	___wmul
  1948  158B  0874               	movf	?___wmul+1,w
  1949  158C  1683               	bsf	3,5	;RP0=1, select bank1
  1950  158D  1303               	bcf	3,6	;RP1=0, select bank1
  1951  158E  00D1               	movwf	(sprintf@prec+1)^(0+128)
  1952  158F  0873               	movf	?___wmul,w
  1953  1590  00D0               	movwf	sprintf@prec^(0+128)
  1954  1591                     l4280:
  1955                           
  1956                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec += *f++ - '0'
      +                          ;
  1957  1591  0828               	movf	sprintf@f^(0+128),w
  1958  1592  0084               	movwf	4
  1959  1593  120A  158A  200A  160A  118A  	fcall	stringdir
  1960  1598  3ED0               	addlw	208
  1961  1599  00B3               	movwf	??_sprintf^(0+128)
  1962  159A  30FF               	movlw	255
  1963  159B  1803               	skipnc
  1964  159C  3000               	movlw	0
  1965  159D  00B4               	movwf	(??_sprintf^(0+128)+1)
  1966  159E  0833               	movf	??_sprintf^(0+128),w
  1967  159F  07D0               	addwf	sprintf@prec^(0+128),f
  1968  15A0  1803               	skipnc
  1969  15A1  0AD1               	incf	(sprintf@prec+1)^(0+128),f
  1970  15A2  0834               	movf	(??_sprintf+1)^(0+128),w
  1971  15A3  07D1               	addwf	(sprintf@prec+1)^(0+128),f
  1972  15A4                     l4282:
  1973  15A4  3001               	movlw	1
  1974  15A5  00B3               	movwf	??_sprintf^(0+128)
  1975  15A6  0833               	movf	??_sprintf^(0+128),w
  1976  15A7  07A8               	addwf	sprintf@f^(0+128),f
  1977  15A8                     l4284:
  1978                           
  1979                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigne
      +                          d)*f)) {
  1980  15A8  0828               	movf	sprintf@f^(0+128),w
  1981  15A9  0084               	movwf	4
  1982  15AA  120A  158A  200A  160A  118A  	fcall	stringdir
  1983  15AF  160A  158A  2056  160A  118A  	fcall	_isdigit
  1984  15B4  1803               	btfsc	3,0
  1985  15B5  2DB7               	goto	u6881
  1986  15B6  2DB8               	goto	u6880
  1987  15B7                     u6881:
  1988  15B7  2D7C               	goto	l4278
  1989  15B8                     u6880:
  1990  15B8  2DBF               	goto	l4292
  1991  15B9                     l4286:
  1992                           
  1993                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1994  15B9  01D0               	clrf	sprintf@prec^(0+128)
  1995  15BA  01D1               	clrf	(sprintf@prec+1)^(0+128)
  1996  15BB                     l4288:
  1997                           
  1998                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0x1000;
  1999  15BB  163E               	bsf	(sprintf@flag^(0+128)+1),4
  2000  15BC  2DBF               	goto	l4292
  2001  15BD                     l377:	
  2002                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2003                           
  2004                           
  2005                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0x400;
  2006  15BD  153E               	bsf	(sprintf@flag^(0+128)+1),2
  2007                           
  2008                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2009  15BE  2DE1               	goto	l4294
  2010  15BF                     l4292:
  2011  15BF  3001               	movlw	1
  2012  15C0  1683               	bsf	3,5	;RP0=1, select bank1
  2013  15C1  1303               	bcf	3,6	;RP1=0, select bank1
  2014  15C2  07A8               	addwf	sprintf@f^(0+128),f
  2015  15C3  30FF               	movlw	-1
  2016  15C4  0728               	addwf	sprintf@f^(0+128),w
  2017  15C5  0084               	movwf	4
  2018  15C6  120A  158A  200A  160A  118A  	fcall	stringdir
  2019  15CB  00D2               	movwf	sprintf@c^(0+128)
  2020  15CC  00B3               	movwf	??_sprintf^(0+128)
  2021  15CD  01B4               	clrf	(??_sprintf^(0+128)+1)
  2022                           
  2023                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2024                           ; Switch size 1, requested type "simple"
  2025                           ; Number of cases is 1, Range of values is 0 to 0
  2026                           ; switch strategies available:
  2027                           ; Name         Instructions Cycles
  2028                           ; simple_byte            4     3 (average)
  2029                           ; direct_byte           11     8 (fixed)
  2030                           ; jumptable            260     6 (fixed)
  2031                           ;	Chosen strategy is simple_byte
  2032  15CE  0834               	movf	(??_sprintf+1)^(0+128),w
  2033  15CF  3A00               	xorlw	0	; case 0
  2034  15D0  1903               	skipnz
  2035  15D1  2DD3               	goto	l4646
  2036  15D2  2CFD               	goto	L1
  2037  15D3                     l4646:
  2038                           
  2039                           ; Switch size 1, requested type "simple"
  2040                           ; Number of cases is 4, Range of values is 0 to 105
  2041                           ; switch strategies available:
  2042                           ; Name         Instructions Cycles
  2043                           ; simple_byte           13     7 (average)
  2044                           ; jumptable            260     6 (fixed)
  2045                           ;	Chosen strategy is simple_byte
  2046  15D3  0833               	movf	??_sprintf^(0+128),w
  2047  15D4  3A00               	xorlw	0	; case 0
  2048  15D5  1903               	skipnz
  2049  15D6  2FFD               	goto	L3
  2050  15D7  3A64               	xorlw	100	; case 100
  2051  15D8  1903               	skipnz
  2052  15D9  2DE1               	goto	l4294
  2053  15DA  3A02               	xorlw	2	; case 102
  2054  15DB  1903               	skipnz
  2055  15DC  2DBD               	goto	l377
  2056  15DD  3A0F               	xorlw	15	; case 105
  2057  15DE  1903               	skipnz
  2058  15DF  2DE1               	goto	l4294
  2059  15E0  2CFD               	goto	L1
  2060  15E1                     l4294:
  2061                           
  2062                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & (0x700)) {
  2063  15E1  3000               	movlw	0
  2064  15E2  053D               	andwf	sprintf@flag^(0+128),w
  2065  15E3  00B3               	movwf	??_sprintf^(0+128)
  2066  15E4  3007               	movlw	7
  2067  15E5  053E               	andwf	(sprintf@flag+1)^(0+128),w
  2068  15E6  00B4               	movwf	(??_sprintf+1)^(0+128)
  2069  15E7  0833               	movf	??_sprintf^(0+128),w
  2070  15E8  0434               	iorwf	(??_sprintf^(0+128)+1),w
  2071  15E9  1903               	btfsc	3,2
  2072  15EA  2DEC               	goto	u6891
  2073  15EB  2DEF               	goto	u6890
  2074  15EC                     u6891:
  2075  15EC  120A  118A  2CD8   	goto	l4452
  2076  15EF                     u6890:
  2077  15EF                     l4296:
  2078                           
  2079                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag & 0x1000)
  2080  15EF  1E3E               	btfss	(sprintf@flag+1)^(0+128),4
  2081  15F0  2DF2               	goto	u6901
  2082  15F1  2DF3               	goto	u6900
  2083  15F2                     u6901:
  2084  15F2  2DF7               	goto	l4300
  2085  15F3                     u6900:
  2086  15F3                     l4298:
  2087                           
  2088                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6;
  2089  15F3  3006               	movlw	6
  2090  15F4  00D0               	movwf	sprintf@prec^(0+128)
  2091  15F5  3000               	movlw	0
  2092  15F6  00D1               	movwf	(sprintf@prec^(0+128)+1)
  2093  15F7                     l4300:
  2094                           
  2095                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*(double *)__va
      +                          _arg((*(double **)ap), (double)0));
  2096  15F7  083C               	movf	sprintf@ap^(0+128),w
  2097  15F8  0084               	movwf	4
  2098  15F9  1383               	bcf	3,7	;select IRP bank0
  2099  15FA  0800               	movf	0,w
  2100  15FB  00CB               	movwf	sprintf@fval^(0+128)
  2101  15FC  0A84               	incf	4,f
  2102  15FD  0800               	movf	0,w
  2103  15FE  00CC               	movwf	(sprintf@fval+1)^(0+128)
  2104  15FF  0A84               	incf	4,f
  2105  1600  0800               	movf	0,w
  2106  1601  00CD               	movwf	(sprintf@fval+2)^(0+128)
  2107  1602  0A84               	incf	4,f
  2108  1603  0800               	movf	0,w
  2109  1604  00CE               	movwf	(sprintf@fval+3)^(0+128)
  2110  1605                     l4302:
  2111  1605  3004               	movlw	4
  2112  1606  00B3               	movwf	??_sprintf^(0+128)
  2113  1607  0833               	movf	??_sprintf^(0+128),w
  2114  1608  07BC               	addwf	sprintf@ap^(0+128),f
  2115  1609                     l4304:
  2116                           
  2117                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval < 0.0) {
  2118  1609  084E               	movf	(sprintf@fval+3)^(0+128),w
  2119  160A  1283               	bcf	3,5	;RP0=0, select bank0
  2120  160B  1303               	bcf	3,6	;RP1=0, select bank0
  2121  160C  00A3               	movwf	___flge@ff1+3
  2122  160D  1683               	bsf	3,5	;RP0=1, select bank1
  2123  160E  1303               	bcf	3,6	;RP1=0, select bank1
  2124  160F  084D               	movf	(sprintf@fval+2)^(0+128),w
  2125  1610  1283               	bcf	3,5	;RP0=0, select bank0
  2126  1611  1303               	bcf	3,6	;RP1=0, select bank0
  2127  1612  00A2               	movwf	___flge@ff1+2
  2128  1613  1683               	bsf	3,5	;RP0=1, select bank1
  2129  1614  1303               	bcf	3,6	;RP1=0, select bank1
  2130  1615  084C               	movf	(sprintf@fval+1)^(0+128),w
  2131  1616  1283               	bcf	3,5	;RP0=0, select bank0
  2132  1617  1303               	bcf	3,6	;RP1=0, select bank0
  2133  1618  00A1               	movwf	___flge@ff1+1
  2134  1619  1683               	bsf	3,5	;RP0=1, select bank1
  2135  161A  1303               	bcf	3,6	;RP1=0, select bank1
  2136  161B  084B               	movf	sprintf@fval^(0+128),w
  2137  161C  1283               	bcf	3,5	;RP0=0, select bank0
  2138  161D  1303               	bcf	3,6	;RP1=0, select bank0
  2139  161E  00A0               	movwf	___flge@ff1
  2140  161F  3000               	movlw	0
  2141  1620  00A7               	movwf	___flge@ff2+3
  2142  1621  3000               	movlw	0
  2143  1622  00A6               	movwf	___flge@ff2+2
  2144  1623  3000               	movlw	0
  2145  1624  00A5               	movwf	___flge@ff2+1
  2146  1625  3000               	movlw	0
  2147  1626  00A4               	movwf	___flge@ff2
  2148  1627  160A  158A  2525  160A  118A  	fcall	___flge
  2149  162C  1803               	btfsc	3,0
  2150  162D  2E2F               	goto	u6911
  2151  162E  2E30               	goto	u6910
  2152  162F                     u6911:
  2153  162F  2E4D               	goto	l4310
  2154  1630                     u6910:
  2155  1630                     l4306:
  2156                           
  2157                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -fval;
  2158  1630  1683               	bsf	3,5	;RP0=1, select bank1
  2159  1631  1303               	bcf	3,6	;RP1=0, select bank1
  2160  1632  084E               	movf	(sprintf@fval+3)^(0+128),w
  2161  1633  00F6               	movwf	___flneg@f1+3
  2162  1634  084D               	movf	(sprintf@fval+2)^(0+128),w
  2163  1635  00F5               	movwf	___flneg@f1+2
  2164  1636  084C               	movf	(sprintf@fval+1)^(0+128),w
  2165  1637  00F4               	movwf	___flneg@f1+1
  2166  1638  084B               	movf	sprintf@fval^(0+128),w
  2167  1639  00F3               	movwf	___flneg@f1
  2168  163A  160A  158A  2017  160A  118A  	fcall	___flneg
  2169  163F  0876               	movf	?___flneg+3,w
  2170  1640  1683               	bsf	3,5	;RP0=1, select bank1
  2171  1641  1303               	bcf	3,6	;RP1=0, select bank1
  2172  1642  00CE               	movwf	(sprintf@fval+3)^(0+128)
  2173  1643  0875               	movf	?___flneg+2,w
  2174  1644  00CD               	movwf	(sprintf@fval+2)^(0+128)
  2175  1645  0874               	movf	?___flneg+1,w
  2176  1646  00CC               	movwf	(sprintf@fval+1)^(0+128)
  2177  1647  0873               	movf	?___flneg,w
  2178  1648  00CB               	movwf	sprintf@fval^(0+128)
  2179  1649                     l4308:
  2180                           
  2181                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 0x03;
  2182  1649  3003               	movlw	3
  2183  164A  04BD               	iorwf	sprintf@flag^(0+128),f
  2184  164B  3000               	movlw	0
  2185  164C  04BE               	iorwf	(sprintf@flag+1)^(0+128),f
  2186  164D                     l4310:
  2187                           
  2188                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2189  164D  1683               	bsf	3,5	;RP0=1, select bank1
  2190  164E  1303               	bcf	3,6	;RP1=0, select bank1
  2191  164F  01C9               	clrf	sprintf@eexp^(0+128)
  2192  1650  01CA               	clrf	(sprintf@eexp+1)^(0+128)
  2193  1651                     l4312:
  2194                           
  2195                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!=0) {
  2196  1651  084E               	movf	(sprintf@fval+3)^(0+128),w
  2197  1652  1283               	bcf	3,5	;RP0=0, select bank0
  2198  1653  1303               	bcf	3,6	;RP1=0, select bank0
  2199  1654  00A3               	movwf	___fleq@ff1+3
  2200  1655  1683               	bsf	3,5	;RP0=1, select bank1
  2201  1656  1303               	bcf	3,6	;RP1=0, select bank1
  2202  1657  084D               	movf	(sprintf@fval+2)^(0+128),w
  2203  1658  1283               	bcf	3,5	;RP0=0, select bank0
  2204  1659  1303               	bcf	3,6	;RP1=0, select bank0
  2205  165A  00A2               	movwf	___fleq@ff1+2
  2206  165B  1683               	bsf	3,5	;RP0=1, select bank1
  2207  165C  1303               	bcf	3,6	;RP1=0, select bank1
  2208  165D  084C               	movf	(sprintf@fval+1)^(0+128),w
  2209  165E  1283               	bcf	3,5	;RP0=0, select bank0
  2210  165F  1303               	bcf	3,6	;RP1=0, select bank0
  2211  1660  00A1               	movwf	___fleq@ff1+1
  2212  1661  1683               	bsf	3,5	;RP0=1, select bank1
  2213  1662  1303               	bcf	3,6	;RP1=0, select bank1
  2214  1663  084B               	movf	sprintf@fval^(0+128),w
  2215  1664  1283               	bcf	3,5	;RP0=0, select bank0
  2216  1665  1303               	bcf	3,6	;RP1=0, select bank0
  2217  1666  00A0               	movwf	___fleq@ff1
  2218  1667  3000               	movlw	0
  2219  1668  00A7               	movwf	___fleq@ff2+3
  2220  1669  3000               	movlw	0
  2221  166A  00A6               	movwf	___fleq@ff2+2
  2222  166B  3000               	movlw	0
  2223  166C  00A5               	movwf	___fleq@ff2+1
  2224  166D  3000               	movlw	0
  2225  166E  00A4               	movwf	___fleq@ff2
  2226  166F  160A  158A  22AF  160A  118A  	fcall	___fleq
  2227  1674  1803               	btfsc	3,0
  2228  1675  2E77               	goto	u6921
  2229  1676  2E78               	goto	u6920
  2230  1677                     u6921:
  2231  1677  2F94               	goto	l4338
  2232  1678                     u6920:
  2233  1678                     l4314:
  2234                           
  2235                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*(&eexp) = (uns
      +                          igned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2236  1678  1003               	clrc
  2237  1679  1683               	bsf	3,5	;RP0=1, select bank1
  2238  167A  1303               	bcf	3,6	;RP1=0, select bank1
  2239  167B  0D4D               	rlf	(sprintf@fval+2)^(0+128),w
  2240  167C  0D4E               	rlf	(sprintf@fval+3)^(0+128),w
  2241  167D  3E82               	addlw	130
  2242  167E  00C9               	movwf	sprintf@eexp^(0+128)
  2243  167F  30FF               	movlw	255
  2244  1680  1803               	skipnc
  2245  1681  3000               	movlw	0
  2246  1682  00CA               	movwf	(sprintf@eexp^(0+128)+1)
  2247  1683                     l4316:
  2248                           
  2249                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2250  1683  30FF               	movlw	255
  2251  1684  07C9               	addwf	sprintf@eexp^(0+128),f
  2252  1685  1803               	skipnc
  2253  1686  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  2254  1687  30FF               	movlw	255
  2255  1688  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  2256  1689                     l4318:
  2257                           
  2258                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 3;
  2259  1689  3003               	movlw	3
  2260  168A  00F3               	movwf	___wmul@multiplier
  2261  168B  3000               	movlw	0
  2262  168C  00F4               	movwf	___wmul@multiplier+1
  2263  168D  084A               	movf	(sprintf@eexp+1)^(0+128),w
  2264  168E  00F6               	movwf	___wmul@multiplicand+1
  2265  168F  0849               	movf	sprintf@eexp^(0+128),w
  2266  1690  00F5               	movwf	___wmul@multiplicand
  2267  1691  160A  158A  20A4  160A  118A  	fcall	___wmul
  2268  1696  0874               	movf	?___wmul+1,w
  2269  1697  1683               	bsf	3,5	;RP0=1, select bank1
  2270  1698  1303               	bcf	3,6	;RP1=0, select bank1
  2271  1699  00CA               	movwf	(sprintf@eexp+1)^(0+128)
  2272  169A  0873               	movf	?___wmul,w
  2273  169B  00C9               	movwf	sprintf@eexp^(0+128)
  2274  169C                     l4320:
  2275                           
  2276                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 10;
  2277  169C  300A               	movlw	10
  2278  169D  1283               	bcf	3,5	;RP0=0, select bank0
  2279  169E  1303               	bcf	3,6	;RP1=0, select bank0
  2280  169F  00A2               	movwf	___awdiv@divisor
  2281  16A0  3000               	movlw	0
  2282  16A1  00A3               	movwf	___awdiv@divisor+1
  2283  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  2284  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  2285  16A4  084A               	movf	(sprintf@eexp+1)^(0+128),w
  2286  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  2287  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  2288  16A7  00A5               	movwf	___awdiv@dividend+1
  2289  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  2290  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  2291  16AA  0849               	movf	sprintf@eexp^(0+128),w
  2292  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  2293  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  2294  16AD  00A4               	movwf	___awdiv@dividend
  2295  16AE  120A  118A  278F  160A  118A  	fcall	___awdiv
  2296  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  2297  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  2298  16B5  0823               	movf	?___awdiv+1,w
  2299  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  2300  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  2301  16B8  00CA               	movwf	(sprintf@eexp+1)^(0+128)
  2302  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2303  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2304  16BB  0822               	movf	?___awdiv,w
  2305  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  2306  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  2307  16BE  00C9               	movwf	sprintf@eexp^(0+128)
  2308  16BF                     l4322:
  2309                           
  2310                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp < 0)
  2311  16BF  1FCA               	btfss	(sprintf@eexp+1)^(0+128),7
  2312  16C0  2EC2               	goto	u6931
  2313  16C1  2EC3               	goto	u6930
  2314  16C2                     u6931:
  2315  16C2  2EC9               	goto	l4326
  2316  16C3                     u6930:
  2317  16C3                     l4324:
  2318                           
  2319                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2320  16C3  30FF               	movlw	255
  2321  16C4  07C9               	addwf	sprintf@eexp^(0+128),f
  2322  16C5  1803               	skipnc
  2323  16C6  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  2324  16C7  30FF               	movlw	255
  2325  16C8  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  2326  16C9                     l4326:
  2327                           
  2328                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.integ = scale(-
      +                          eexp);
  2329  16C9  0349               	decf	sprintf@eexp^(0+128),w
  2330  16CA  3AFF               	xorlw	255
  2331  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  2332  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  2333  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  2334  16D2  0847               	movf	?_scale+3,w
  2335  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  2336  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  2337  16D5  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  2338  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  2339  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  2340  16D8  0846               	movf	?_scale+2,w
  2341  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  2342  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  2343  16DB  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  2344  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  2345  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  2346  16DE  0845               	movf	?_scale+1,w
  2347  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  2348  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  2349  16E1  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  2350  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  2351  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  2352  16E4  0844               	movf	?_scale,w
  2353  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  2354  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  2355  16E7  00C1               	movwf	sprintf@tmpval^(0+128)
  2356  16E8                     l4328:
  2357                           
  2358                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.integ *= fval;
  2359  16E8  084E               	movf	(sprintf@fval+3)^(0+128),w
  2360  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  2361  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  2362  16EB  00AD               	movwf	___flmul@b+3
  2363  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  2364  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  2365  16EE  084D               	movf	(sprintf@fval+2)^(0+128),w
  2366  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2367  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2368  16F1  00AC               	movwf	___flmul@b+2
  2369  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  2370  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  2371  16F4  084C               	movf	(sprintf@fval+1)^(0+128),w
  2372  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  2373  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  2374  16F7  00AB               	movwf	___flmul@b+1
  2375  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  2376  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  2377  16FA  084B               	movf	sprintf@fval^(0+128),w
  2378  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  2379  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  2380  16FD  00AA               	movwf	___flmul@b
  2381  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  2382  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  2383  1700  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  2384  1701  1283               	bcf	3,5	;RP0=0, select bank0
  2385  1702  1303               	bcf	3,6	;RP1=0, select bank0
  2386  1703  00B1               	movwf	___flmul@a+3
  2387  1704  1683               	bsf	3,5	;RP0=1, select bank1
  2388  1705  1303               	bcf	3,6	;RP1=0, select bank1
  2389  1706  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  2390  1707  1283               	bcf	3,5	;RP0=0, select bank0
  2391  1708  1303               	bcf	3,6	;RP1=0, select bank0
  2392  1709  00B0               	movwf	___flmul@a+2
  2393  170A  1683               	bsf	3,5	;RP0=1, select bank1
  2394  170B  1303               	bcf	3,6	;RP1=0, select bank1
  2395  170C  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  2396  170D  1283               	bcf	3,5	;RP0=0, select bank0
  2397  170E  1303               	bcf	3,6	;RP1=0, select bank0
  2398  170F  00AF               	movwf	___flmul@a+1
  2399  1710  1683               	bsf	3,5	;RP0=1, select bank1
  2400  1711  1303               	bcf	3,6	;RP1=0, select bank1
  2401  1712  0841               	movf	sprintf@tmpval^(0+128),w
  2402  1713  1283               	bcf	3,5	;RP0=0, select bank0
  2403  1714  1303               	bcf	3,6	;RP1=0, select bank0
  2404  1715  00AE               	movwf	___flmul@a
  2405  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  2406  171B  1283               	bcf	3,5	;RP0=0, select bank0
  2407  171C  1303               	bcf	3,6	;RP1=0, select bank0
  2408  171D  082D               	movf	?___flmul+3,w
  2409  171E  1683               	bsf	3,5	;RP0=1, select bank1
  2410  171F  1303               	bcf	3,6	;RP1=0, select bank1
  2411  1720  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  2412  1721  1283               	bcf	3,5	;RP0=0, select bank0
  2413  1722  1303               	bcf	3,6	;RP1=0, select bank0
  2414  1723  082C               	movf	?___flmul+2,w
  2415  1724  1683               	bsf	3,5	;RP0=1, select bank1
  2416  1725  1303               	bcf	3,6	;RP1=0, select bank1
  2417  1726  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  2418  1727  1283               	bcf	3,5	;RP0=0, select bank0
  2419  1728  1303               	bcf	3,6	;RP1=0, select bank0
  2420  1729  082B               	movf	?___flmul+1,w
  2421  172A  1683               	bsf	3,5	;RP0=1, select bank1
  2422  172B  1303               	bcf	3,6	;RP1=0, select bank1
  2423  172C  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  2424  172D  1283               	bcf	3,5	;RP0=0, select bank0
  2425  172E  1303               	bcf	3,6	;RP1=0, select bank0
  2426  172F  082A               	movf	?___flmul,w
  2427  1730  1683               	bsf	3,5	;RP0=1, select bank1
  2428  1731  1303               	bcf	3,6	;RP1=0, select bank1
  2429  1732  00C1               	movwf	sprintf@tmpval^(0+128)
  2430  1733                     l4330:
  2431                           
  2432                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpval.integ < 1.0)
  2433  1733  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  2434  1734  1283               	bcf	3,5	;RP0=0, select bank0
  2435  1735  1303               	bcf	3,6	;RP1=0, select bank0
  2436  1736  00A3               	movwf	___flge@ff1+3
  2437  1737  1683               	bsf	3,5	;RP0=1, select bank1
  2438  1738  1303               	bcf	3,6	;RP1=0, select bank1
  2439  1739  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  2440  173A  1283               	bcf	3,5	;RP0=0, select bank0
  2441  173B  1303               	bcf	3,6	;RP1=0, select bank0
  2442  173C  00A2               	movwf	___flge@ff1+2
  2443  173D  1683               	bsf	3,5	;RP0=1, select bank1
  2444  173E  1303               	bcf	3,6	;RP1=0, select bank1
  2445  173F  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  2446  1740  1283               	bcf	3,5	;RP0=0, select bank0
  2447  1741  1303               	bcf	3,6	;RP1=0, select bank0
  2448  1742  00A1               	movwf	___flge@ff1+1
  2449  1743  1683               	bsf	3,5	;RP0=1, select bank1
  2450  1744  1303               	bcf	3,6	;RP1=0, select bank1
  2451  1745  0841               	movf	sprintf@tmpval^(0+128),w
  2452  1746  1283               	bcf	3,5	;RP0=0, select bank0
  2453  1747  1303               	bcf	3,6	;RP1=0, select bank0
  2454  1748  00A0               	movwf	___flge@ff1
  2455  1749  303F               	movlw	63
  2456  174A  00A7               	movwf	___flge@ff2+3
  2457  174B  3080               	movlw	128
  2458  174C  00A6               	movwf	___flge@ff2+2
  2459  174D  3000               	movlw	0
  2460  174E  00A5               	movwf	___flge@ff2+1
  2461  174F  3000               	movlw	0
  2462  1750  00A4               	movwf	___flge@ff2
  2463  1751  160A  158A  2525  160A  118A  	fcall	___flge
  2464  1756  1803               	btfsc	3,0
  2465  1757  2F59               	goto	u6941
  2466  1758  2F5A               	goto	u6940
  2467  1759                     u6941:
  2468  1759  2F63               	goto	l4334
  2469  175A                     u6940:
  2470  175A                     l4332:
  2471                           
  2472                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2473  175A  30FF               	movlw	255
  2474  175B  1683               	bsf	3,5	;RP0=1, select bank1
  2475  175C  1303               	bcf	3,6	;RP1=0, select bank1
  2476  175D  07C9               	addwf	sprintf@eexp^(0+128),f
  2477  175E  1803               	skipnc
  2478  175F  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  2479  1760  30FF               	movlw	255
  2480  1761  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  2481  1762  2F94               	goto	l4338
  2482  1763                     l4334:
  2483  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2484  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2485  1765  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  2486  1766  1283               	bcf	3,5	;RP0=0, select bank0
  2487  1767  1303               	bcf	3,6	;RP1=0, select bank0
  2488  1768  00A3               	movwf	___flge@ff1+3
  2489  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2490  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2491  176B  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  2492  176C  1283               	bcf	3,5	;RP0=0, select bank0
  2493  176D  1303               	bcf	3,6	;RP1=0, select bank0
  2494  176E  00A2               	movwf	___flge@ff1+2
  2495  176F  1683               	bsf	3,5	;RP0=1, select bank1
  2496  1770  1303               	bcf	3,6	;RP1=0, select bank1
  2497  1771  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  2498  1772  1283               	bcf	3,5	;RP0=0, select bank0
  2499  1773  1303               	bcf	3,6	;RP1=0, select bank0
  2500  1774  00A1               	movwf	___flge@ff1+1
  2501  1775  1683               	bsf	3,5	;RP0=1, select bank1
  2502  1776  1303               	bcf	3,6	;RP1=0, select bank1
  2503  1777  0841               	movf	sprintf@tmpval^(0+128),w
  2504  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2505  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2506  177A  00A0               	movwf	___flge@ff1
  2507  177B  3041               	movlw	65
  2508  177C  00A7               	movwf	___flge@ff2+3
  2509  177D  3020               	movlw	32
  2510  177E  00A6               	movwf	___flge@ff2+2
  2511  177F  3000               	movlw	0
  2512  1780  00A5               	movwf	___flge@ff2+1
  2513  1781  3000               	movlw	0
  2514  1782  00A4               	movwf	___flge@ff2
  2515  1783  160A  158A  2525  160A  118A  	fcall	___flge
  2516  1788  1C03               	btfss	3,0
  2517  1789  2F8B               	goto	u6951
  2518  178A  2F8C               	goto	u6950
  2519  178B                     u6951:
  2520  178B  2F94               	goto	l4338
  2521  178C                     u6950:
  2522  178C                     l4336:
  2523                           
  2524                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2525  178C  3001               	movlw	1
  2526  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2527  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2528  178F  07C9               	addwf	sprintf@eexp^(0+128),f
  2529  1790  1803               	skipnc
  2530  1791  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  2531  1792  3000               	movlw	0
  2532  1793  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  2533  1794                     l4338:
  2534                           
  2535                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(prec <= 12)
  2536  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2537  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2538  1796  0851               	movf	(sprintf@prec+1)^(0+128),w
  2539  1797  3A80               	xorlw	128
  2540  1798  00FF               	movwf	btemp+1
  2541  1799  3080               	movlw	128
  2542  179A  027F               	subwf	btemp+1,w
  2543  179B  1D03               	skipz
  2544  179C  2F9F               	goto	u6965
  2545  179D  300D               	movlw	13
  2546  179E  0250               	subwf	sprintf@prec^(0+128),w
  2547  179F                     u6965:
  2548  179F  1803               	skipnc
  2549  17A0  2FA2               	goto	u6961
  2550  17A1  2FA3               	goto	u6960
  2551  17A2                     u6961:
  2552  17A2  2FEA               	goto	l4342
  2553  17A3                     u6960:
  2554  17A3                     l4340:
  2555                           
  2556                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval += fround((uns
      +                          igned int)prec);
  2557  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2558  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2559  17A5  0850               	movf	sprintf@prec^(0+128),w
  2560  17A6  160A  118A  2061  160A  118A  	fcall	_fround
  2561  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2562  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2563  17AD  0847               	movf	?_fround+3,w
  2564  17AE  00DB               	movwf	___fladd@b+3
  2565  17AF  0846               	movf	?_fround+2,w
  2566  17B0  00DA               	movwf	___fladd@b+2
  2567  17B1  0845               	movf	?_fround+1,w
  2568  17B2  00D9               	movwf	___fladd@b+1
  2569  17B3  0844               	movf	?_fround,w
  2570  17B4  00D8               	movwf	___fladd@b
  2571  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2572  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2573  17B7  084E               	movf	(sprintf@fval+3)^(0+128),w
  2574  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2575  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2576  17BA  00DF               	movwf	___fladd@a+3
  2577  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2578  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2579  17BD  084D               	movf	(sprintf@fval+2)^(0+128),w
  2580  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2581  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2582  17C0  00DE               	movwf	___fladd@a+2
  2583  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2584  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2585  17C3  084C               	movf	(sprintf@fval+1)^(0+128),w
  2586  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2587  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2588  17C6  00DD               	movwf	___fladd@a+1
  2589  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2590  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2591  17C9  084B               	movf	sprintf@fval^(0+128),w
  2592  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2593  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2594  17CC  00DC               	movwf	___fladd@a
  2595  17CD  160A  118A  226E  160A  118A  	fcall	___fladd
  2596  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2597  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2598  17D4  085B               	movf	?___fladd+3,w
  2599  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2600  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2601  17D7  00CE               	movwf	(sprintf@fval+3)^(0+128)
  2602  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2603  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2604  17DA  085A               	movf	?___fladd+2,w
  2605  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2606  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2607  17DD  00CD               	movwf	(sprintf@fval+2)^(0+128)
  2608  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2609  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2610  17E0  0859               	movf	?___fladd+1,w
  2611  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2612  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2613  17E3  00CC               	movwf	(sprintf@fval+1)^(0+128)
  2614  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2615  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2616  17E6  0858               	movf	?___fladd,w
  2617  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2618  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2619  17E9  00CB               	movwf	sprintf@fval^(0+128)
  2620  17EA                     l4342:
  2621                           
  2622                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eexp > 9)||(fval 
      +                          != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2623  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2624  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2625  17EC  084A               	movf	(sprintf@eexp+1)^(0+128),w
  2626  17ED  3A80               	xorlw	128
  2627  17EE  00FF               	movwf	btemp+1
  2628  17EF  3080               	movlw	128
  2629  17F0  027F               	subwf	btemp+1,w
  2630  17F1  1D03               	skipz
  2631  17F2  2FF5               	goto	u6975
  2632  17F3  300A               	movlw	10
  2633  17F4  0249               	subwf	sprintf@eexp^(0+128),w
  2634  17F5                     u6975:
  2635  17F5  1803               	skipnc
  2636  17F6  2FFA               	goto	u6971
  2637  17F7  120A  118A  281E   	goto	u6970
  2638  17FA                     u6971:
  2639  17FA  120A  118A  287D   	goto	l4350
  2640  17FD                     L3:
  2641  17FD                     L2:
  2642  17FD  120A  118A  2E9B   	ljmp	l4532
  2643                           
  2644                           	psect	text2
  2645  0C9D                     __ptext2:	
  2646 ;; *************** function _scale *****************
  2647 ;; Defined at:
  2648 ;;		line 433 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  scl             1    wreg     char 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  scl             1   54[BANK0 ] char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  4   36[BANK0 ] char 
  2655 ;; Registers used:
  2656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2662 ;;      Params:         0       4       0       0       0
  2663 ;;      Locals:         0       5       0       0       0
  2664 ;;      Temps:          0      10       0       0       0
  2665 ;;      Totals:         0      19       0       0       0
  2666 ;;Total ram usage:       19 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:    4
  2669 ;; This function calls:
  2670 ;;		___awdiv
  2671 ;;		___awmod
  2672 ;;		___flmul
  2673 ;; This function is called by:
  2674 ;;		_sprintf
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           
  2679                           ;psect for function _scale
  2680  0C9D                     _scale:
  2681                           
  2682                           ;incstack = 0
  2683                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2684                           ;scale@scl stored from wreg
  2685  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2686  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2687  0C9F  00D6               	movwf	scale@scl
  2688  0CA0                     l3974:
  2689                           
  2690                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed char scl);D:\
      +                          Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;D:\Microchip\xc8\v2.31\pic\s
      +                          ources\c90\common\doprnt.c: 436:  if(scl < 0) {
  2691  0CA0  1FD6               	btfss	scale@scl,7
  2692  0CA1  2CA3               	goto	u6091
  2693  0CA2  2CA4               	goto	u6090
  2694  0CA3                     u6091:
  2695  0CA3  2E53               	goto	l3996
  2696  0CA4                     u6090:
  2697  0CA4                     l3976:
  2698                           
  2699                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl;
  2700  0CA4  09D6               	comf	scale@scl,f
  2701  0CA5  0AD6               	incf	scale@scl,f
  2702  0CA6                     l3978:
  2703                           
  2704                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=110)
  2705  0CA6  0856               	movf	scale@scl,w
  2706  0CA7  3A80               	xorlw	128
  2707  0CA8  3E12               	addlw	-238
  2708  0CA9  1C03               	skipc
  2709  0CAA  2CAC               	goto	u6101
  2710  0CAB  2CAD               	goto	u6100
  2711  0CAC                     u6101:
  2712  0CAC  2D97               	goto	l3986
  2713  0CAD                     u6100:
  2714  0CAD                     l3980:
  2715                           
  2716                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsig
      +                          ned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigne
      +                          d char)(scl%10)];
  2717  0CAD  300A               	movlw	10
  2718  0CAE  00A2               	movwf	___awdiv@divisor
  2719  0CAF  3000               	movlw	0
  2720  0CB0  00A3               	movwf	___awdiv@divisor+1
  2721  0CB1  0856               	movf	scale@scl,w
  2722  0CB2  00F5               	movwf	___awmod@dividend
  2723  0CB3  01F6               	clrf	___awmod@dividend+1
  2724  0CB4  1BF5               	btfsc	___awmod@dividend,7
  2725  0CB5  03F6               	decf	___awmod@dividend+1,f
  2726  0CB6  3064               	movlw	100
  2727  0CB7  00F3               	movwf	___awmod@divisor
  2728  0CB8  3000               	movlw	0
  2729  0CB9  00F4               	movwf	___awmod@divisor+1
  2730  0CBA  120A  158A  20E1  120A  158A  	fcall	___awmod
  2731  0CBF  0874               	movf	?___awmod+1,w
  2732  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2733  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2734  0CC2  00A5               	movwf	___awdiv@dividend+1
  2735  0CC3  0873               	movf	?___awmod,w
  2736  0CC4  00A4               	movwf	___awdiv@dividend
  2737  0CC5  120A  118A  278F  120A  158A  	fcall	___awdiv
  2738  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2739  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2740  0CCC  0822               	movf	?___awdiv,w
  2741  0CCD  00C8               	movwf	??_scale
  2742  0CCE  3001               	movlw	1
  2743  0CCF                     u6115:
  2744  0CCF  1003               	clrc
  2745  0CD0  0DC8               	rlf	??_scale,f
  2746  0CD1  3EFF               	addlw	-1
  2747  0CD2  1D03               	skipz
  2748  0CD3  2CCF               	goto	u6115
  2749  0CD4  1003               	clrc
  2750  0CD5  0D48               	rlf	??_scale,w
  2751  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2752  0CD7  0084               	movwf	4
  2753  0CD8  120A  158A  200A  120A  158A  	fcall	stringdir
  2754  0CDD  00C9               	movwf	??_scale+1
  2755  0CDE  120A  158A  200A  120A  158A  	fcall	stringdir
  2756  0CE3  00CA               	movwf	??_scale+2
  2757  0CE4  120A  158A  200A  120A  158A  	fcall	stringdir
  2758  0CE9  00CB               	movwf	??_scale+3
  2759  0CEA  120A  158A  200A  120A  158A  	fcall	stringdir
  2760  0CEF  00CC               	movwf	??_scale+4
  2761  0CF0  084C               	movf	??_scale+4,w
  2762  0CF1  00AD               	movwf	___flmul@b+3
  2763  0CF2  084B               	movf	??_scale+3,w
  2764  0CF3  00AC               	movwf	___flmul@b+2
  2765  0CF4  084A               	movf	??_scale+2,w
  2766  0CF5  00AB               	movwf	___flmul@b+1
  2767  0CF6  0849               	movf	??_scale+1,w
  2768  0CF7  00AA               	movwf	___flmul@b
  2769  0CF8  3064               	movlw	100
  2770  0CF9  00A2               	movwf	___awdiv@divisor
  2771  0CFA  3000               	movlw	0
  2772  0CFB  00A3               	movwf	___awdiv@divisor+1
  2773  0CFC  0856               	movf	scale@scl,w
  2774  0CFD  00A4               	movwf	___awdiv@dividend
  2775  0CFE  01A5               	clrf	___awdiv@dividend+1
  2776  0CFF  1BA4               	btfsc	___awdiv@dividend,7
  2777  0D00  03A5               	decf	___awdiv@dividend+1,f
  2778  0D01  120A  118A  278F  120A  158A  	fcall	___awdiv
  2779  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2780  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2781  0D08  0822               	movf	?___awdiv,w
  2782  0D09  00CD               	movwf	??_scale+5
  2783  0D0A  3001               	movlw	1
  2784  0D0B                     u6125:
  2785  0D0B  1003               	clrc
  2786  0D0C  0DCD               	rlf	??_scale+5,f
  2787  0D0D  3EFF               	addlw	-1
  2788  0D0E  1D03               	skipz
  2789  0D0F  2D0B               	goto	u6125
  2790  0D10  1003               	clrc
  2791  0D11  0D4D               	rlf	??_scale+5,w
  2792  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2793  0D13  0084               	movwf	4
  2794  0D14  120A  158A  200A  120A  158A  	fcall	stringdir
  2795  0D19  00CE               	movwf	??_scale+6
  2796  0D1A  120A  158A  200A  120A  158A  	fcall	stringdir
  2797  0D1F  00CF               	movwf	??_scale+7
  2798  0D20  120A  158A  200A  120A  158A  	fcall	stringdir
  2799  0D25  00D0               	movwf	??_scale+8
  2800  0D26  120A  158A  200A  120A  158A  	fcall	stringdir
  2801  0D2B  00D1               	movwf	??_scale+9
  2802  0D2C  0851               	movf	??_scale+9,w
  2803  0D2D  00B1               	movwf	___flmul@a+3
  2804  0D2E  0850               	movf	??_scale+8,w
  2805  0D2F  00B0               	movwf	___flmul@a+2
  2806  0D30  084F               	movf	??_scale+7,w
  2807  0D31  00AF               	movwf	___flmul@a+1
  2808  0D32  084E               	movf	??_scale+6,w
  2809  0D33  00AE               	movwf	___flmul@a
  2810  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2811  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2812  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2813  0D3B  082D               	movf	?___flmul+3,w
  2814  0D3C  00D5               	movwf	_scale$1240+3
  2815  0D3D  082C               	movf	?___flmul+2,w
  2816  0D3E  00D4               	movwf	_scale$1240+2
  2817  0D3F  082B               	movf	?___flmul+1,w
  2818  0D40  00D3               	movwf	_scale$1240+1
  2819  0D41  082A               	movf	?___flmul,w
  2820  0D42  00D2               	movwf	_scale$1240
  2821                           
  2822                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsig
      +                          ned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigne
      +                          d char)(scl%10)];
  2823  0D43  300A               	movlw	10
  2824  0D44  00F3               	movwf	___awmod@divisor
  2825  0D45  3000               	movlw	0
  2826  0D46  00F4               	movwf	___awmod@divisor+1
  2827  0D47  0856               	movf	scale@scl,w
  2828  0D48  00F5               	movwf	___awmod@dividend
  2829  0D49  01F6               	clrf	___awmod@dividend+1
  2830  0D4A  1BF5               	btfsc	___awmod@dividend,7
  2831  0D4B  03F6               	decf	___awmod@dividend+1,f
  2832  0D4C  120A  158A  20E1  120A  158A  	fcall	___awmod
  2833  0D51  0873               	movf	?___awmod,w
  2834  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2835  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2836  0D54  00C8               	movwf	??_scale
  2837  0D55  3001               	movlw	1
  2838  0D56                     u6135:
  2839  0D56  1003               	clrc
  2840  0D57  0DC8               	rlf	??_scale,f
  2841  0D58  3EFF               	addlw	-1
  2842  0D59  1D03               	skipz
  2843  0D5A  2D56               	goto	u6135
  2844  0D5B  1003               	clrc
  2845  0D5C  0D48               	rlf	??_scale,w
  2846  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2847  0D5E  0084               	movwf	4
  2848  0D5F  120A  158A  200A  120A  158A  	fcall	stringdir
  2849  0D64  00C9               	movwf	??_scale+1
  2850  0D65  120A  158A  200A  120A  158A  	fcall	stringdir
  2851  0D6A  00CA               	movwf	??_scale+2
  2852  0D6B  120A  158A  200A  120A  158A  	fcall	stringdir
  2853  0D70  00CB               	movwf	??_scale+3
  2854  0D71  120A  158A  200A  120A  158A  	fcall	stringdir
  2855  0D76  00CC               	movwf	??_scale+4
  2856  0D77  084C               	movf	??_scale+4,w
  2857  0D78  00AD               	movwf	___flmul@b+3
  2858  0D79  084B               	movf	??_scale+3,w
  2859  0D7A  00AC               	movwf	___flmul@b+2
  2860  0D7B  084A               	movf	??_scale+2,w
  2861  0D7C  00AB               	movwf	___flmul@b+1
  2862  0D7D  0849               	movf	??_scale+1,w
  2863  0D7E  00AA               	movwf	___flmul@b
  2864  0D7F  0855               	movf	_scale$1240+3,w
  2865  0D80  00B1               	movwf	___flmul@a+3
  2866  0D81  0854               	movf	_scale$1240+2,w
  2867  0D82  00B0               	movwf	___flmul@a+2
  2868  0D83  0853               	movf	_scale$1240+1,w
  2869  0D84  00AF               	movwf	___flmul@a+1
  2870  0D85  0852               	movf	_scale$1240,w
  2871  0D86  00AE               	movwf	___flmul@a
  2872  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2873  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2874  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2875  0D8E  082D               	movf	?___flmul+3,w
  2876  0D8F  00C7               	movwf	?_scale+3
  2877  0D90  082C               	movf	?___flmul+2,w
  2878  0D91  00C6               	movwf	?_scale+2
  2879  0D92  082B               	movf	?___flmul+1,w
  2880  0D93  00C5               	movwf	?_scale+1
  2881  0D94  082A               	movf	?___flmul,w
  2882  0D95  00C4               	movwf	?_scale
  2883  0D96  2FFF               	goto	l355
  2884  0D97                     l3986:
  2885  0D97  0856               	movf	scale@scl,w
  2886  0D98  3A80               	xorlw	128
  2887  0D99  3E75               	addlw	-139
  2888  0D9A  1C03               	skipc
  2889  0D9B  2D9D               	goto	u6141
  2890  0D9C  2D9E               	goto	u6140
  2891  0D9D                     u6141:
  2892  0D9D  2E26               	goto	l3992
  2893  0D9E                     u6140:
  2894  0D9E                     l3988:
  2895                           
  2896                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _npowers_[(unsig
      +                          ned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2897  0D9E  300A               	movlw	10
  2898  0D9F  00F3               	movwf	___awmod@divisor
  2899  0DA0  3000               	movlw	0
  2900  0DA1  00F4               	movwf	___awmod@divisor+1
  2901  0DA2  0856               	movf	scale@scl,w
  2902  0DA3  00F5               	movwf	___awmod@dividend
  2903  0DA4  01F6               	clrf	___awmod@dividend+1
  2904  0DA5  1BF5               	btfsc	___awmod@dividend,7
  2905  0DA6  03F6               	decf	___awmod@dividend+1,f
  2906  0DA7  120A  158A  20E1  120A  158A  	fcall	___awmod
  2907  0DAC  0873               	movf	?___awmod,w
  2908  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2909  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2910  0DAF  00C8               	movwf	??_scale
  2911  0DB0  3001               	movlw	1
  2912  0DB1                     u6155:
  2913  0DB1  1003               	clrc
  2914  0DB2  0DC8               	rlf	??_scale,f
  2915  0DB3  3EFF               	addlw	-1
  2916  0DB4  1D03               	skipz
  2917  0DB5  2DB1               	goto	u6155
  2918  0DB6  1003               	clrc
  2919  0DB7  0D48               	rlf	??_scale,w
  2920  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2921  0DB9  0084               	movwf	4
  2922  0DBA  120A  158A  200A  120A  158A  	fcall	stringdir
  2923  0DBF  00C9               	movwf	??_scale+1
  2924  0DC0  120A  158A  200A  120A  158A  	fcall	stringdir
  2925  0DC5  00CA               	movwf	??_scale+2
  2926  0DC6  120A  158A  200A  120A  158A  	fcall	stringdir
  2927  0DCB  00CB               	movwf	??_scale+3
  2928  0DCC  120A  158A  200A  120A  158A  	fcall	stringdir
  2929  0DD1  00CC               	movwf	??_scale+4
  2930  0DD2  084C               	movf	??_scale+4,w
  2931  0DD3  00AD               	movwf	___flmul@b+3
  2932  0DD4  084B               	movf	??_scale+3,w
  2933  0DD5  00AC               	movwf	___flmul@b+2
  2934  0DD6  084A               	movf	??_scale+2,w
  2935  0DD7  00AB               	movwf	___flmul@b+1
  2936  0DD8  0849               	movf	??_scale+1,w
  2937  0DD9  00AA               	movwf	___flmul@b
  2938  0DDA  300A               	movlw	10
  2939  0DDB  00A2               	movwf	___awdiv@divisor
  2940  0DDC  3000               	movlw	0
  2941  0DDD  00A3               	movwf	___awdiv@divisor+1
  2942  0DDE  0856               	movf	scale@scl,w
  2943  0DDF  00A4               	movwf	___awdiv@dividend
  2944  0DE0  01A5               	clrf	___awdiv@dividend+1
  2945  0DE1  1BA4               	btfsc	___awdiv@dividend,7
  2946  0DE2  03A5               	decf	___awdiv@dividend+1,f
  2947  0DE3  120A  118A  278F  120A  158A  	fcall	___awdiv
  2948  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2949  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2950  0DEA  0822               	movf	?___awdiv,w
  2951  0DEB  00CD               	movwf	??_scale+5
  2952  0DEC  3001               	movlw	1
  2953  0DED                     u6165:
  2954  0DED  1003               	clrc
  2955  0DEE  0DCD               	rlf	??_scale+5,f
  2956  0DEF  3EFF               	addlw	-1
  2957  0DF0  1D03               	skipz
  2958  0DF1  2DED               	goto	u6165
  2959  0DF2  1003               	clrc
  2960  0DF3  0D4D               	rlf	??_scale+5,w
  2961  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2962  0DF5  0084               	movwf	4
  2963  0DF6  120A  158A  200A  120A  158A  	fcall	stringdir
  2964  0DFB  00CE               	movwf	??_scale+6
  2965  0DFC  120A  158A  200A  120A  158A  	fcall	stringdir
  2966  0E01  00CF               	movwf	??_scale+7
  2967  0E02  120A  158A  200A  120A  158A  	fcall	stringdir
  2968  0E07  00D0               	movwf	??_scale+8
  2969  0E08  120A  158A  200A  120A  158A  	fcall	stringdir
  2970  0E0D  00D1               	movwf	??_scale+9
  2971  0E0E  0851               	movf	??_scale+9,w
  2972  0E0F  00B1               	movwf	___flmul@a+3
  2973  0E10  0850               	movf	??_scale+8,w
  2974  0E11  00B0               	movwf	___flmul@a+2
  2975  0E12  084F               	movf	??_scale+7,w
  2976  0E13  00AF               	movwf	___flmul@a+1
  2977  0E14  084E               	movf	??_scale+6,w
  2978  0E15  00AE               	movwf	___flmul@a
  2979  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2980  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2981  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2982  0E1D  082D               	movf	?___flmul+3,w
  2983  0E1E  00C7               	movwf	?_scale+3
  2984  0E1F  082C               	movf	?___flmul+2,w
  2985  0E20  00C6               	movwf	?_scale+2
  2986  0E21  082B               	movf	?___flmul+1,w
  2987  0E22  00C5               	movwf	?_scale+1
  2988  0E23  082A               	movf	?___flmul,w
  2989  0E24  00C4               	movwf	?_scale
  2990  0E25  2FFF               	goto	l355
  2991  0E26                     l3992:
  2992                           
  2993                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _npowers_[(unsign
      +                          ed char)scl];
  2994  0E26  0856               	movf	scale@scl,w
  2995  0E27  00C8               	movwf	??_scale
  2996  0E28  3001               	movlw	1
  2997  0E29                     u6175:
  2998  0E29  1003               	clrc
  2999  0E2A  0DC8               	rlf	??_scale,f
  3000  0E2B  3EFF               	addlw	-1
  3001  0E2C  1D03               	skipz
  3002  0E2D  2E29               	goto	u6175
  3003  0E2E  1003               	clrc
  3004  0E2F  0D48               	rlf	??_scale,w
  3005  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3006  0E31  0084               	movwf	4
  3007  0E32  120A  158A  200A  120A  158A  	fcall	stringdir
  3008  0E37  00C9               	movwf	??_scale+1
  3009  0E38  120A  158A  200A  120A  158A  	fcall	stringdir
  3010  0E3D  00CA               	movwf	??_scale+2
  3011  0E3E  120A  158A  200A  120A  158A  	fcall	stringdir
  3012  0E43  00CB               	movwf	??_scale+3
  3013  0E44  120A  158A  200A  120A  158A  	fcall	stringdir
  3014  0E49  00CC               	movwf	??_scale+4
  3015  0E4A  084C               	movf	??_scale+4,w
  3016  0E4B  00C7               	movwf	?_scale+3
  3017  0E4C  084B               	movf	??_scale+3,w
  3018  0E4D  00C6               	movwf	?_scale+2
  3019  0E4E  084A               	movf	??_scale+2,w
  3020  0E4F  00C5               	movwf	?_scale+1
  3021  0E50  0849               	movf	??_scale+1,w
  3022  0E51  00C4               	movwf	?_scale
  3023  0E52  2FFF               	goto	l355
  3024  0E53                     l3996:
  3025                           
  3026                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110)
  3027  0E53  0856               	movf	scale@scl,w
  3028  0E54  3A80               	xorlw	128
  3029  0E55  3E12               	addlw	-238
  3030  0E56  1C03               	skipc
  3031  0E57  2E59               	goto	u6181
  3032  0E58  2E5A               	goto	u6180
  3033  0E59                     u6181:
  3034  0E59  2F44               	goto	l4004
  3035  0E5A                     u6180:
  3036  0E5A                     l3998:
  3037                           
  3038                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigne
      +                          d char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned ch
      +                          ar)(scl%10)];
  3039  0E5A  300A               	movlw	10
  3040  0E5B  00A2               	movwf	___awdiv@divisor
  3041  0E5C  3000               	movlw	0
  3042  0E5D  00A3               	movwf	___awdiv@divisor+1
  3043  0E5E  0856               	movf	scale@scl,w
  3044  0E5F  00F5               	movwf	___awmod@dividend
  3045  0E60  01F6               	clrf	___awmod@dividend+1
  3046  0E61  1BF5               	btfsc	___awmod@dividend,7
  3047  0E62  03F6               	decf	___awmod@dividend+1,f
  3048  0E63  3064               	movlw	100
  3049  0E64  00F3               	movwf	___awmod@divisor
  3050  0E65  3000               	movlw	0
  3051  0E66  00F4               	movwf	___awmod@divisor+1
  3052  0E67  120A  158A  20E1  120A  158A  	fcall	___awmod
  3053  0E6C  0874               	movf	?___awmod+1,w
  3054  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0E6F  00A5               	movwf	___awdiv@dividend+1
  3057  0E70  0873               	movf	?___awmod,w
  3058  0E71  00A4               	movwf	___awdiv@dividend
  3059  0E72  120A  118A  278F  120A  158A  	fcall	___awdiv
  3060  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3061  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3062  0E79  0822               	movf	?___awdiv,w
  3063  0E7A  00C8               	movwf	??_scale
  3064  0E7B  3001               	movlw	1
  3065  0E7C                     u6195:
  3066  0E7C  1003               	clrc
  3067  0E7D  0DC8               	rlf	??_scale,f
  3068  0E7E  3EFF               	addlw	-1
  3069  0E7F  1D03               	skipz
  3070  0E80  2E7C               	goto	u6195
  3071  0E81  1003               	clrc
  3072  0E82  0D48               	rlf	??_scale,w
  3073  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3074  0E84  0084               	movwf	4
  3075  0E85  120A  158A  200A  120A  158A  	fcall	stringdir
  3076  0E8A  00C9               	movwf	??_scale+1
  3077  0E8B  120A  158A  200A  120A  158A  	fcall	stringdir
  3078  0E90  00CA               	movwf	??_scale+2
  3079  0E91  120A  158A  200A  120A  158A  	fcall	stringdir
  3080  0E96  00CB               	movwf	??_scale+3
  3081  0E97  120A  158A  200A  120A  158A  	fcall	stringdir
  3082  0E9C  00CC               	movwf	??_scale+4
  3083  0E9D  084C               	movf	??_scale+4,w
  3084  0E9E  00AD               	movwf	___flmul@b+3
  3085  0E9F  084B               	movf	??_scale+3,w
  3086  0EA0  00AC               	movwf	___flmul@b+2
  3087  0EA1  084A               	movf	??_scale+2,w
  3088  0EA2  00AB               	movwf	___flmul@b+1
  3089  0EA3  0849               	movf	??_scale+1,w
  3090  0EA4  00AA               	movwf	___flmul@b
  3091  0EA5  3064               	movlw	100
  3092  0EA6  00A2               	movwf	___awdiv@divisor
  3093  0EA7  3000               	movlw	0
  3094  0EA8  00A3               	movwf	___awdiv@divisor+1
  3095  0EA9  0856               	movf	scale@scl,w
  3096  0EAA  00A4               	movwf	___awdiv@dividend
  3097  0EAB  01A5               	clrf	___awdiv@dividend+1
  3098  0EAC  1BA4               	btfsc	___awdiv@dividend,7
  3099  0EAD  03A5               	decf	___awdiv@dividend+1,f
  3100  0EAE  120A  118A  278F  120A  158A  	fcall	___awdiv
  3101  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3103  0EB5  0822               	movf	?___awdiv,w
  3104  0EB6  00CD               	movwf	??_scale+5
  3105  0EB7  3001               	movlw	1
  3106  0EB8                     u6205:
  3107  0EB8  1003               	clrc
  3108  0EB9  0DCD               	rlf	??_scale+5,f
  3109  0EBA  3EFF               	addlw	-1
  3110  0EBB  1D03               	skipz
  3111  0EBC  2EB8               	goto	u6205
  3112  0EBD  1003               	clrc
  3113  0EBE  0D4D               	rlf	??_scale+5,w
  3114  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3115  0EC0  0084               	movwf	4
  3116  0EC1  120A  158A  200A  120A  158A  	fcall	stringdir
  3117  0EC6  00CE               	movwf	??_scale+6
  3118  0EC7  120A  158A  200A  120A  158A  	fcall	stringdir
  3119  0ECC  00CF               	movwf	??_scale+7
  3120  0ECD  120A  158A  200A  120A  158A  	fcall	stringdir
  3121  0ED2  00D0               	movwf	??_scale+8
  3122  0ED3  120A  158A  200A  120A  158A  	fcall	stringdir
  3123  0ED8  00D1               	movwf	??_scale+9
  3124  0ED9  0851               	movf	??_scale+9,w
  3125  0EDA  00B1               	movwf	___flmul@a+3
  3126  0EDB  0850               	movf	??_scale+8,w
  3127  0EDC  00B0               	movwf	___flmul@a+2
  3128  0EDD  084F               	movf	??_scale+7,w
  3129  0EDE  00AF               	movwf	___flmul@a+1
  3130  0EDF  084E               	movf	??_scale+6,w
  3131  0EE0  00AE               	movwf	___flmul@a
  3132  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3133  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3134  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3135  0EE8  082D               	movf	?___flmul+3,w
  3136  0EE9  00D5               	movwf	_scale$1240+3
  3137  0EEA  082C               	movf	?___flmul+2,w
  3138  0EEB  00D4               	movwf	_scale$1240+2
  3139  0EEC  082B               	movf	?___flmul+1,w
  3140  0EED  00D3               	movwf	_scale$1240+1
  3141  0EEE  082A               	movf	?___flmul,w
  3142  0EEF  00D2               	movwf	_scale$1240
  3143                           
  3144                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigne
      +                          d char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned ch
      +                          ar)(scl%10)];
  3145  0EF0  300A               	movlw	10
  3146  0EF1  00F3               	movwf	___awmod@divisor
  3147  0EF2  3000               	movlw	0
  3148  0EF3  00F4               	movwf	___awmod@divisor+1
  3149  0EF4  0856               	movf	scale@scl,w
  3150  0EF5  00F5               	movwf	___awmod@dividend
  3151  0EF6  01F6               	clrf	___awmod@dividend+1
  3152  0EF7  1BF5               	btfsc	___awmod@dividend,7
  3153  0EF8  03F6               	decf	___awmod@dividend+1,f
  3154  0EF9  120A  158A  20E1  120A  158A  	fcall	___awmod
  3155  0EFE  0873               	movf	?___awmod,w
  3156  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3157  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3158  0F01  00C8               	movwf	??_scale
  3159  0F02  3001               	movlw	1
  3160  0F03                     u6215:
  3161  0F03  1003               	clrc
  3162  0F04  0DC8               	rlf	??_scale,f
  3163  0F05  3EFF               	addlw	-1
  3164  0F06  1D03               	skipz
  3165  0F07  2F03               	goto	u6215
  3166  0F08  1003               	clrc
  3167  0F09  0D48               	rlf	??_scale,w
  3168  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3169  0F0B  0084               	movwf	4
  3170  0F0C  120A  158A  200A  120A  158A  	fcall	stringdir
  3171  0F11  00C9               	movwf	??_scale+1
  3172  0F12  120A  158A  200A  120A  158A  	fcall	stringdir
  3173  0F17  00CA               	movwf	??_scale+2
  3174  0F18  120A  158A  200A  120A  158A  	fcall	stringdir
  3175  0F1D  00CB               	movwf	??_scale+3
  3176  0F1E  120A  158A  200A  120A  158A  	fcall	stringdir
  3177  0F23  00CC               	movwf	??_scale+4
  3178  0F24  084C               	movf	??_scale+4,w
  3179  0F25  00AD               	movwf	___flmul@b+3
  3180  0F26  084B               	movf	??_scale+3,w
  3181  0F27  00AC               	movwf	___flmul@b+2
  3182  0F28  084A               	movf	??_scale+2,w
  3183  0F29  00AB               	movwf	___flmul@b+1
  3184  0F2A  0849               	movf	??_scale+1,w
  3185  0F2B  00AA               	movwf	___flmul@b
  3186  0F2C  0855               	movf	_scale$1240+3,w
  3187  0F2D  00B1               	movwf	___flmul@a+3
  3188  0F2E  0854               	movf	_scale$1240+2,w
  3189  0F2F  00B0               	movwf	___flmul@a+2
  3190  0F30  0853               	movf	_scale$1240+1,w
  3191  0F31  00AF               	movwf	___flmul@a+1
  3192  0F32  0852               	movf	_scale$1240,w
  3193  0F33  00AE               	movwf	___flmul@a
  3194  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3195  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3196  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3197  0F3B  082D               	movf	?___flmul+3,w
  3198  0F3C  00C7               	movwf	?_scale+3
  3199  0F3D  082C               	movf	?___flmul+2,w
  3200  0F3E  00C6               	movwf	?_scale+2
  3201  0F3F  082B               	movf	?___flmul+1,w
  3202  0F40  00C5               	movwf	?_scale+1
  3203  0F41  082A               	movf	?___flmul,w
  3204  0F42  00C4               	movwf	?_scale
  3205  0F43  2FFF               	goto	l355
  3206  0F44                     l4004:
  3207  0F44  0856               	movf	scale@scl,w
  3208  0F45  3A80               	xorlw	128
  3209  0F46  3E75               	addlw	-139
  3210  0F47  1C03               	skipc
  3211  0F48  2F4A               	goto	u6221
  3212  0F49  2F4B               	goto	u6220
  3213  0F4A                     u6221:
  3214  0F4A  2FD3               	goto	l4010
  3215  0F4B                     u6220:
  3216  0F4B                     l4006:
  3217                           
  3218                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _powers_[(unsigne
      +                          d char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3219  0F4B  300A               	movlw	10
  3220  0F4C  00F3               	movwf	___awmod@divisor
  3221  0F4D  3000               	movlw	0
  3222  0F4E  00F4               	movwf	___awmod@divisor+1
  3223  0F4F  0856               	movf	scale@scl,w
  3224  0F50  00F5               	movwf	___awmod@dividend
  3225  0F51  01F6               	clrf	___awmod@dividend+1
  3226  0F52  1BF5               	btfsc	___awmod@dividend,7
  3227  0F53  03F6               	decf	___awmod@dividend+1,f
  3228  0F54  120A  158A  20E1  120A  158A  	fcall	___awmod
  3229  0F59  0873               	movf	?___awmod,w
  3230  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3231  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3232  0F5C  00C8               	movwf	??_scale
  3233  0F5D  3001               	movlw	1
  3234  0F5E                     u6235:
  3235  0F5E  1003               	clrc
  3236  0F5F  0DC8               	rlf	??_scale,f
  3237  0F60  3EFF               	addlw	-1
  3238  0F61  1D03               	skipz
  3239  0F62  2F5E               	goto	u6235
  3240  0F63  1003               	clrc
  3241  0F64  0D48               	rlf	??_scale,w
  3242  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3243  0F66  0084               	movwf	4
  3244  0F67  120A  158A  200A  120A  158A  	fcall	stringdir
  3245  0F6C  00C9               	movwf	??_scale+1
  3246  0F6D  120A  158A  200A  120A  158A  	fcall	stringdir
  3247  0F72  00CA               	movwf	??_scale+2
  3248  0F73  120A  158A  200A  120A  158A  	fcall	stringdir
  3249  0F78  00CB               	movwf	??_scale+3
  3250  0F79  120A  158A  200A  120A  158A  	fcall	stringdir
  3251  0F7E  00CC               	movwf	??_scale+4
  3252  0F7F  084C               	movf	??_scale+4,w
  3253  0F80  00AD               	movwf	___flmul@b+3
  3254  0F81  084B               	movf	??_scale+3,w
  3255  0F82  00AC               	movwf	___flmul@b+2
  3256  0F83  084A               	movf	??_scale+2,w
  3257  0F84  00AB               	movwf	___flmul@b+1
  3258  0F85  0849               	movf	??_scale+1,w
  3259  0F86  00AA               	movwf	___flmul@b
  3260  0F87  300A               	movlw	10
  3261  0F88  00A2               	movwf	___awdiv@divisor
  3262  0F89  3000               	movlw	0
  3263  0F8A  00A3               	movwf	___awdiv@divisor+1
  3264  0F8B  0856               	movf	scale@scl,w
  3265  0F8C  00A4               	movwf	___awdiv@dividend
  3266  0F8D  01A5               	clrf	___awdiv@dividend+1
  3267  0F8E  1BA4               	btfsc	___awdiv@dividend,7
  3268  0F8F  03A5               	decf	___awdiv@dividend+1,f
  3269  0F90  120A  118A  278F  120A  158A  	fcall	___awdiv
  3270  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3272  0F97  0822               	movf	?___awdiv,w
  3273  0F98  00CD               	movwf	??_scale+5
  3274  0F99  3001               	movlw	1
  3275  0F9A                     u6245:
  3276  0F9A  1003               	clrc
  3277  0F9B  0DCD               	rlf	??_scale+5,f
  3278  0F9C  3EFF               	addlw	-1
  3279  0F9D  1D03               	skipz
  3280  0F9E  2F9A               	goto	u6245
  3281  0F9F  1003               	clrc
  3282  0FA0  0D4D               	rlf	??_scale+5,w
  3283  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3284  0FA2  0084               	movwf	4
  3285  0FA3  120A  158A  200A  120A  158A  	fcall	stringdir
  3286  0FA8  00CE               	movwf	??_scale+6
  3287  0FA9  120A  158A  200A  120A  158A  	fcall	stringdir
  3288  0FAE  00CF               	movwf	??_scale+7
  3289  0FAF  120A  158A  200A  120A  158A  	fcall	stringdir
  3290  0FB4  00D0               	movwf	??_scale+8
  3291  0FB5  120A  158A  200A  120A  158A  	fcall	stringdir
  3292  0FBA  00D1               	movwf	??_scale+9
  3293  0FBB  0851               	movf	??_scale+9,w
  3294  0FBC  00B1               	movwf	___flmul@a+3
  3295  0FBD  0850               	movf	??_scale+8,w
  3296  0FBE  00B0               	movwf	___flmul@a+2
  3297  0FBF  084F               	movf	??_scale+7,w
  3298  0FC0  00AF               	movwf	___flmul@a+1
  3299  0FC1  084E               	movf	??_scale+6,w
  3300  0FC2  00AE               	movwf	___flmul@a
  3301  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3302  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3303  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3304  0FCA  082D               	movf	?___flmul+3,w
  3305  0FCB  00C7               	movwf	?_scale+3
  3306  0FCC  082C               	movf	?___flmul+2,w
  3307  0FCD  00C6               	movwf	?_scale+2
  3308  0FCE  082B               	movf	?___flmul+1,w
  3309  0FCF  00C5               	movwf	?_scale+1
  3310  0FD0  082A               	movf	?___flmul,w
  3311  0FD1  00C4               	movwf	?_scale
  3312  0FD2  2FFF               	goto	l355
  3313  0FD3                     l4010:
  3314                           
  3315                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _powers_[(unsigned
      +                           char)scl];
  3316  0FD3  0856               	movf	scale@scl,w
  3317  0FD4  00C8               	movwf	??_scale
  3318  0FD5  3001               	movlw	1
  3319  0FD6                     u6255:
  3320  0FD6  1003               	clrc
  3321  0FD7  0DC8               	rlf	??_scale,f
  3322  0FD8  3EFF               	addlw	-1
  3323  0FD9  1D03               	skipz
  3324  0FDA  2FD6               	goto	u6255
  3325  0FDB  1003               	clrc
  3326  0FDC  0D48               	rlf	??_scale,w
  3327  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3328  0FDE  0084               	movwf	4
  3329  0FDF  120A  158A  200A  120A  158A  	fcall	stringdir
  3330  0FE4  00C9               	movwf	??_scale+1
  3331  0FE5  120A  158A  200A  120A  158A  	fcall	stringdir
  3332  0FEA  00CA               	movwf	??_scale+2
  3333  0FEB  120A  158A  200A  120A  158A  	fcall	stringdir
  3334  0FF0  00CB               	movwf	??_scale+3
  3335  0FF1  120A  158A  200A  120A  158A  	fcall	stringdir
  3336  0FF6  00CC               	movwf	??_scale+4
  3337  0FF7  084C               	movf	??_scale+4,w
  3338  0FF8  00C7               	movwf	?_scale+3
  3339  0FF9  084B               	movf	??_scale+3,w
  3340  0FFA  00C6               	movwf	?_scale+2
  3341  0FFB  084A               	movf	??_scale+2,w
  3342  0FFC  00C5               	movwf	?_scale+1
  3343  0FFD  0849               	movf	??_scale+1,w
  3344  0FFE  00C4               	movwf	?_scale
  3345  0FFF                     l355:
  3346  0FFF  0008               	return
  3347  1000                     __end_of_scale:
  3348                           
  3349                           	psect	text3
  3350  08E1                     __ptext3:	
  3351 ;; *************** function ___awmod *****************
  3352 ;; Defined at:
  3353 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  divisor         2    3[COMMON] int 
  3356 ;;  dividend        2    5[COMMON] int 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  sign            1    1[BANK0 ] unsigned char 
  3359 ;;  counter         1    0[BANK0 ] unsigned char 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  2    3[COMMON] int 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2, status,0
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3369 ;;      Params:         4       0       0       0       0
  3370 ;;      Locals:         0       2       0       0       0
  3371 ;;      Temps:          1       0       0       0       0
  3372 ;;      Totals:         5       2       0       0       0
  3373 ;;Total ram usage:        7 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; Hardware stack levels required when called:    2
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_scale
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           
  3384                           ;psect for function ___awmod
  3385  08E1                     ___awmod:
  3386  08E1                     l3868:	
  3387                           ;incstack = 0
  3388                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3389                           
  3390  08E1  1283               	bcf	3,5	;RP0=0, select bank0
  3391  08E2  1303               	bcf	3,6	;RP1=0, select bank0
  3392  08E3  01A1               	clrf	___awmod@sign
  3393  08E4                     l3870:
  3394  08E4  1FF6               	btfss	___awmod@dividend+1,7
  3395  08E5  28E7               	goto	u5851
  3396  08E6  28E8               	goto	u5850
  3397  08E7                     u5851:
  3398  08E7  28EF               	goto	l3876
  3399  08E8                     u5850:
  3400  08E8                     l3872:
  3401  08E8  09F5               	comf	___awmod@dividend,f
  3402  08E9  09F6               	comf	___awmod@dividend+1,f
  3403  08EA  0AF5               	incf	___awmod@dividend,f
  3404  08EB  1903               	skipnz
  3405  08EC  0AF6               	incf	___awmod@dividend+1,f
  3406  08ED                     l3874:
  3407  08ED  01A1               	clrf	___awmod@sign
  3408  08EE  0AA1               	incf	___awmod@sign,f
  3409  08EF                     l3876:
  3410  08EF  1FF4               	btfss	___awmod@divisor+1,7
  3411  08F0  28F2               	goto	u5861
  3412  08F1  28F3               	goto	u5860
  3413  08F2                     u5861:
  3414  08F2  28F8               	goto	l3880
  3415  08F3                     u5860:
  3416  08F3                     l3878:
  3417  08F3  09F3               	comf	___awmod@divisor,f
  3418  08F4  09F4               	comf	___awmod@divisor+1,f
  3419  08F5  0AF3               	incf	___awmod@divisor,f
  3420  08F6  1903               	skipnz
  3421  08F7  0AF4               	incf	___awmod@divisor+1,f
  3422  08F8                     l3880:
  3423  08F8  0873               	movf	___awmod@divisor,w
  3424  08F9  0474               	iorwf	___awmod@divisor+1,w
  3425  08FA  1903               	btfsc	3,2
  3426  08FB  28FD               	goto	u5871
  3427  08FC  28FE               	goto	u5870
  3428  08FD                     u5871:
  3429  08FD  292D               	goto	l3898
  3430  08FE                     u5870:
  3431  08FE                     l3882:
  3432  08FE  01A0               	clrf	___awmod@counter
  3433  08FF  0AA0               	incf	___awmod@counter,f
  3434  0900  290C               	goto	l3888
  3435  0901                     l3884:
  3436  0901  3001               	movlw	1
  3437  0902                     u5885:
  3438  0902  1003               	clrc
  3439  0903  0DF3               	rlf	___awmod@divisor,f
  3440  0904  0DF4               	rlf	___awmod@divisor+1,f
  3441  0905  3EFF               	addlw	-1
  3442  0906  1D03               	skipz
  3443  0907  2902               	goto	u5885
  3444  0908                     l3886:
  3445  0908  3001               	movlw	1
  3446  0909  00F7               	movwf	??___awmod
  3447  090A  0877               	movf	??___awmod,w
  3448  090B  07A0               	addwf	___awmod@counter,f
  3449  090C                     l3888:
  3450  090C  1FF4               	btfss	___awmod@divisor+1,7
  3451  090D  290F               	goto	u5891
  3452  090E  2910               	goto	u5890
  3453  090F                     u5891:
  3454  090F  2901               	goto	l3884
  3455  0910                     u5890:
  3456  0910                     l3890:
  3457  0910  0874               	movf	___awmod@divisor+1,w
  3458  0911  0276               	subwf	___awmod@dividend+1,w
  3459  0912  1D03               	skipz
  3460  0913  2916               	goto	u5905
  3461  0914  0873               	movf	___awmod@divisor,w
  3462  0915  0275               	subwf	___awmod@dividend,w
  3463  0916                     u5905:
  3464  0916  1C03               	skipc
  3465  0917  2919               	goto	u5901
  3466  0918  291A               	goto	u5900
  3467  0919                     u5901:
  3468  0919  2920               	goto	l3894
  3469  091A                     u5900:
  3470  091A                     l3892:
  3471  091A  0873               	movf	___awmod@divisor,w
  3472  091B  02F5               	subwf	___awmod@dividend,f
  3473  091C  0874               	movf	___awmod@divisor+1,w
  3474  091D  1C03               	skipc
  3475  091E  03F6               	decf	___awmod@dividend+1,f
  3476  091F  02F6               	subwf	___awmod@dividend+1,f
  3477  0920                     l3894:
  3478  0920  3001               	movlw	1
  3479  0921                     u5915:
  3480  0921  1003               	clrc
  3481  0922  0CF4               	rrf	___awmod@divisor+1,f
  3482  0923  0CF3               	rrf	___awmod@divisor,f
  3483  0924  3EFF               	addlw	-1
  3484  0925  1D03               	skipz
  3485  0926  2921               	goto	u5915
  3486  0927                     l3896:
  3487  0927  3001               	movlw	1
  3488  0928  02A0               	subwf	___awmod@counter,f
  3489  0929  1D03               	btfss	3,2
  3490  092A  292C               	goto	u5921
  3491  092B  292D               	goto	u5920
  3492  092C                     u5921:
  3493  092C  2910               	goto	l3890
  3494  092D                     u5920:
  3495  092D                     l3898:
  3496  092D  0821               	movf	___awmod@sign,w
  3497  092E  1903               	btfsc	3,2
  3498  092F  2931               	goto	u5931
  3499  0930  2932               	goto	u5930
  3500  0931                     u5931:
  3501  0931  2937               	goto	l3902
  3502  0932                     u5930:
  3503  0932                     l3900:
  3504  0932  09F5               	comf	___awmod@dividend,f
  3505  0933  09F6               	comf	___awmod@dividend+1,f
  3506  0934  0AF5               	incf	___awmod@dividend,f
  3507  0935  1903               	skipnz
  3508  0936  0AF6               	incf	___awmod@dividend+1,f
  3509  0937                     l3902:
  3510  0937  0876               	movf	___awmod@dividend+1,w
  3511  0938  00F4               	movwf	?___awmod+1
  3512  0939  0875               	movf	___awmod@dividend,w
  3513  093A  00F3               	movwf	?___awmod
  3514  093B                     l617:
  3515  093B  0008               	return
  3516  093C                     __end_of___awmod:
  3517                           
  3518                           	psect	text4
  3519  078F                     __ptext4:	
  3520 ;; *************** function ___awdiv *****************
  3521 ;; Defined at:
  3522 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  divisor         2    2[BANK0 ] int 
  3525 ;;  dividend        2    4[BANK0 ] int 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  quotient        2    8[BANK0 ] int 
  3528 ;;  sign            1    7[BANK0 ] unsigned char 
  3529 ;;  counter         1    6[BANK0 ] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  2    2[BANK0 ] int 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3539 ;;      Params:         0       4       0       0       0
  3540 ;;      Locals:         0       4       0       0       0
  3541 ;;      Temps:          1       0       0       0       0
  3542 ;;      Totals:         1       8       0       0       0
  3543 ;;Total ram usage:        9 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    2
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_scale
  3550 ;;		_sprintf
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           
  3555                           ;psect for function ___awdiv
  3556  078F                     ___awdiv:
  3557  078F                     l2474:	
  3558                           ;incstack = 0
  3559                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3560                           
  3561  078F  1283               	bcf	3,5	;RP0=0, select bank0
  3562  0790  1303               	bcf	3,6	;RP1=0, select bank0
  3563  0791  01A7               	clrf	___awdiv@sign
  3564  0792                     l2476:
  3565  0792  1FA3               	btfss	___awdiv@divisor+1,7
  3566  0793  2F95               	goto	u3001
  3567  0794  2F96               	goto	u3000
  3568  0795                     u3001:
  3569  0795  2F9D               	goto	l2482
  3570  0796                     u3000:
  3571  0796                     l2478:
  3572  0796  09A2               	comf	___awdiv@divisor,f
  3573  0797  09A3               	comf	___awdiv@divisor+1,f
  3574  0798  0AA2               	incf	___awdiv@divisor,f
  3575  0799  1903               	skipnz
  3576  079A  0AA3               	incf	___awdiv@divisor+1,f
  3577  079B                     l2480:
  3578  079B  01A7               	clrf	___awdiv@sign
  3579  079C  0AA7               	incf	___awdiv@sign,f
  3580  079D                     l2482:
  3581  079D  1FA5               	btfss	___awdiv@dividend+1,7
  3582  079E  2FA0               	goto	u3011
  3583  079F  2FA1               	goto	u3010
  3584  07A0                     u3011:
  3585  07A0  2FAA               	goto	l2488
  3586  07A1                     u3010:
  3587  07A1                     l2484:
  3588  07A1  09A4               	comf	___awdiv@dividend,f
  3589  07A2  09A5               	comf	___awdiv@dividend+1,f
  3590  07A3  0AA4               	incf	___awdiv@dividend,f
  3591  07A4  1903               	skipnz
  3592  07A5  0AA5               	incf	___awdiv@dividend+1,f
  3593  07A6                     l2486:
  3594  07A6  3001               	movlw	1
  3595  07A7  00F8               	movwf	??___awdiv
  3596  07A8  0878               	movf	??___awdiv,w
  3597  07A9  06A7               	xorwf	___awdiv@sign,f
  3598  07AA                     l2488:
  3599  07AA  01A8               	clrf	___awdiv@quotient
  3600  07AB  01A9               	clrf	___awdiv@quotient+1
  3601  07AC                     l2490:
  3602  07AC  0822               	movf	___awdiv@divisor,w
  3603  07AD  0423               	iorwf	___awdiv@divisor+1,w
  3604  07AE  1903               	btfsc	3,2
  3605  07AF  2FB1               	goto	u3021
  3606  07B0  2FB2               	goto	u3020
  3607  07B1                     u3021:
  3608  07B1  2FE9               	goto	l2510
  3609  07B2                     u3020:
  3610  07B2                     l2492:
  3611  07B2  01A6               	clrf	___awdiv@counter
  3612  07B3  0AA6               	incf	___awdiv@counter,f
  3613  07B4  2FC0               	goto	l2498
  3614  07B5                     l2494:
  3615  07B5  3001               	movlw	1
  3616  07B6                     u3035:
  3617  07B6  1003               	clrc
  3618  07B7  0DA2               	rlf	___awdiv@divisor,f
  3619  07B8  0DA3               	rlf	___awdiv@divisor+1,f
  3620  07B9  3EFF               	addlw	-1
  3621  07BA  1D03               	skipz
  3622  07BB  2FB6               	goto	u3035
  3623  07BC                     l2496:
  3624  07BC  3001               	movlw	1
  3625  07BD  00F8               	movwf	??___awdiv
  3626  07BE  0878               	movf	??___awdiv,w
  3627  07BF  07A6               	addwf	___awdiv@counter,f
  3628  07C0                     l2498:
  3629  07C0  1FA3               	btfss	___awdiv@divisor+1,7
  3630  07C1  2FC3               	goto	u3041
  3631  07C2  2FC4               	goto	u3040
  3632  07C3                     u3041:
  3633  07C3  2FB5               	goto	l2494
  3634  07C4                     u3040:
  3635  07C4                     l2500:
  3636  07C4  3001               	movlw	1
  3637  07C5                     u3055:
  3638  07C5  1003               	clrc
  3639  07C6  0DA8               	rlf	___awdiv@quotient,f
  3640  07C7  0DA9               	rlf	___awdiv@quotient+1,f
  3641  07C8  3EFF               	addlw	-1
  3642  07C9  1D03               	skipz
  3643  07CA  2FC5               	goto	u3055
  3644  07CB  0823               	movf	___awdiv@divisor+1,w
  3645  07CC  0225               	subwf	___awdiv@dividend+1,w
  3646  07CD  1D03               	skipz
  3647  07CE  2FD1               	goto	u3065
  3648  07CF  0822               	movf	___awdiv@divisor,w
  3649  07D0  0224               	subwf	___awdiv@dividend,w
  3650  07D1                     u3065:
  3651  07D1  1C03               	skipc
  3652  07D2  2FD4               	goto	u3061
  3653  07D3  2FD5               	goto	u3060
  3654  07D4                     u3061:
  3655  07D4  2FDC               	goto	l2506
  3656  07D5                     u3060:
  3657  07D5                     l2502:
  3658  07D5  0822               	movf	___awdiv@divisor,w
  3659  07D6  02A4               	subwf	___awdiv@dividend,f
  3660  07D7  0823               	movf	___awdiv@divisor+1,w
  3661  07D8  1C03               	skipc
  3662  07D9  03A5               	decf	___awdiv@dividend+1,f
  3663  07DA  02A5               	subwf	___awdiv@dividend+1,f
  3664  07DB                     l2504:
  3665  07DB  1428               	bsf	___awdiv@quotient,0
  3666  07DC                     l2506:
  3667  07DC  3001               	movlw	1
  3668  07DD                     u3075:
  3669  07DD  1003               	clrc
  3670  07DE  0CA3               	rrf	___awdiv@divisor+1,f
  3671  07DF  0CA2               	rrf	___awdiv@divisor,f
  3672  07E0  3EFF               	addlw	-1
  3673  07E1  1D03               	skipz
  3674  07E2  2FDD               	goto	u3075
  3675  07E3                     l2508:
  3676  07E3  3001               	movlw	1
  3677  07E4  02A6               	subwf	___awdiv@counter,f
  3678  07E5  1D03               	btfss	3,2
  3679  07E6  2FE8               	goto	u3081
  3680  07E7  2FE9               	goto	u3080
  3681  07E8                     u3081:
  3682  07E8  2FC4               	goto	l2500
  3683  07E9                     u3080:
  3684  07E9                     l2510:
  3685  07E9  0827               	movf	___awdiv@sign,w
  3686  07EA  1903               	btfsc	3,2
  3687  07EB  2FED               	goto	u3091
  3688  07EC  2FEE               	goto	u3090
  3689  07ED                     u3091:
  3690  07ED  2FF3               	goto	l2514
  3691  07EE                     u3090:
  3692  07EE                     l2512:
  3693  07EE  09A8               	comf	___awdiv@quotient,f
  3694  07EF  09A9               	comf	___awdiv@quotient+1,f
  3695  07F0  0AA8               	incf	___awdiv@quotient,f
  3696  07F1  1903               	skipnz
  3697  07F2  0AA9               	incf	___awdiv@quotient+1,f
  3698  07F3                     l2514:
  3699  07F3  0829               	movf	___awdiv@quotient+1,w
  3700  07F4  00A3               	movwf	?___awdiv+1
  3701  07F5  0828               	movf	___awdiv@quotient,w
  3702  07F6  00A2               	movwf	?___awdiv
  3703  07F7                     l604:
  3704  07F7  0008               	return
  3705  07F8                     __end_of___awdiv:
  3706                           
  3707                           	psect	text5
  3708  1856                     __ptext5:	
  3709 ;; *************** function _isdigit *****************
  3710 ;; Defined at:
  3711 ;;		line 8 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  c               1    wreg     unsigned char 
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;  c               1    4[COMMON] unsigned char 
  3716 ;; Return value:  Size  Location     Type
  3717 ;;		None               void
  3718 ;; Registers used:
  3719 ;;		wreg, status,2, status,0
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3725 ;;      Params:         0       0       0       0       0
  3726 ;;      Locals:         2       0       0       0       0
  3727 ;;      Temps:          0       0       0       0       0
  3728 ;;      Totals:         2       0       0       0       0
  3729 ;;Total ram usage:        2 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; Hardware stack levels required when called:    2
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_sprintf
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           
  3740                           ;psect for function _isdigit
  3741  1856                     _isdigit:
  3742                           
  3743                           ;incstack = 0
  3744                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3745                           ;isdigit@c stored from wreg
  3746  1856  00F4               	movwf	isdigit@c
  3747  1857                     l3064:
  3748  1857  01F3               	clrf	_isdigit$1062
  3749  1858                     l3066:
  3750  1858  303A               	movlw	58
  3751  1859  0274               	subwf	isdigit@c,w
  3752  185A  1803               	skipnc
  3753  185B  285D               	goto	u4411
  3754  185C  285E               	goto	u4410
  3755  185D                     u4411:
  3756  185D  2866               	goto	l3072
  3757  185E                     u4410:
  3758  185E                     l3068:
  3759  185E  3030               	movlw	48
  3760  185F  0274               	subwf	isdigit@c,w
  3761  1860  1C03               	skipc
  3762  1861  2863               	goto	u4421
  3763  1862  2864               	goto	u4420
  3764  1863                     u4421:
  3765  1863  2866               	goto	l3072
  3766  1864                     u4420:
  3767  1864                     l3070:
  3768  1864  01F3               	clrf	_isdigit$1062
  3769  1865  0AF3               	incf	_isdigit$1062,f
  3770  1866                     l3072:
  3771  1866  0C73               	rrf	_isdigit$1062,w
  3772  1867                     l938:
  3773  1867  0008               	return
  3774  1868                     __end_of_isdigit:
  3775                           
  3776                           	psect	text6
  3777  1061                     __ptext6:	
  3778 ;; *************** function _fround *****************
  3779 ;; Defined at:
  3780 ;;		line 417 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  prec            1    wreg     unsigned char 
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  prec            1   55[BANK0 ] unsigned char 
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  4   36[BANK0 ] unsigned char 
  3787 ;; Registers used:
  3788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3794 ;;      Params:         0       4       0       0       0
  3795 ;;      Locals:         0       9       0       0       0
  3796 ;;      Temps:          0       7       0       0       0
  3797 ;;      Totals:         0      20       0       0       0
  3798 ;;Total ram usage:       20 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; Hardware stack levels required when called:    4
  3801 ;; This function calls:
  3802 ;;		___flmul
  3803 ;;		___lwdiv
  3804 ;;		___lwmod
  3805 ;; This function is called by:
  3806 ;;		_sprintf
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           
  3811                           ;psect for function _fround
  3812  1061                     _fround:
  3813                           
  3814                           ;incstack = 0
  3815                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3816                           ;fround@prec stored from wreg
  3817  1061  1283               	bcf	3,5	;RP0=0, select bank0
  3818  1062  1303               	bcf	3,6	;RP1=0, select bank0
  3819  1063  00D7               	movwf	fround@prec
  3820  1064                     l3956:
  3821                           
  3822                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsigned char prec)
      +                          ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418: {;D:\Microchip\xc8\v2.31\p
      +                          ic\sources\c90\common\doprnt.c: 421:  if(prec>=110)
  3823  1064  306E               	movlw	110
  3824  1065  0257               	subwf	fround@prec,w
  3825  1066  1C03               	skipc
  3826  1067  2869               	goto	u6011
  3827  1068  286A               	goto	u6010
  3828  1069                     u6011:
  3829  1069  2979               	goto	l3964
  3830  106A                     u6010:
  3831  106A                     l3958:
  3832                           
  3833                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[p
      +                          rec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3834  106A  303F               	movlw	63
  3835  106B  00AD               	movwf	___flmul@b+3
  3836  106C  3000               	movlw	0
  3837  106D  00AC               	movwf	___flmul@b+2
  3838  106E  3000               	movlw	0
  3839  106F  00AB               	movwf	___flmul@b+1
  3840  1070  3000               	movlw	0
  3841  1071  00AA               	movwf	___flmul@b
  3842  1072  3064               	movlw	100
  3843  1073  00A0               	movwf	___lwdiv@divisor
  3844  1074  3000               	movlw	0
  3845  1075  00A1               	movwf	___lwdiv@divisor+1
  3846  1076  0857               	movf	fround@prec,w
  3847  1077  00C8               	movwf	??_fround
  3848  1078  01C9               	clrf	??_fround+1
  3849  1079  0848               	movf	??_fround,w
  3850  107A  00A2               	movwf	___lwdiv@dividend
  3851  107B  0849               	movf	??_fround+1,w
  3852  107C  00A3               	movwf	___lwdiv@dividend+1
  3853  107D  160A  158A  221A  160A  118A  	fcall	___lwdiv
  3854  1082  1283               	bcf	3,5	;RP0=0, select bank0
  3855  1083  1303               	bcf	3,6	;RP1=0, select bank0
  3856  1084  0820               	movf	?___lwdiv,w
  3857  1085  00CA               	movwf	??_fround+2
  3858  1086  3001               	movlw	1
  3859  1087                     u6025:
  3860  1087  1003               	clrc
  3861  1088  0DCA               	rlf	??_fround+2,f
  3862  1089  3EFF               	addlw	-1
  3863  108A  1D03               	skipz
  3864  108B  2887               	goto	u6025
  3865  108C  1003               	clrc
  3866  108D  0D4A               	rlf	??_fround+2,w
  3867  108E  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3868  108F  0084               	movwf	4
  3869  1090  120A  158A  200A  160A  118A  	fcall	stringdir
  3870  1095  00CB               	movwf	??_fround+3
  3871  1096  120A  158A  200A  160A  118A  	fcall	stringdir
  3872  109B  00CC               	movwf	??_fround+4
  3873  109C  120A  158A  200A  160A  118A  	fcall	stringdir
  3874  10A1  00CD               	movwf	??_fround+5
  3875  10A2  120A  158A  200A  160A  118A  	fcall	stringdir
  3876  10A7  00CE               	movwf	??_fround+6
  3877  10A8  084E               	movf	??_fround+6,w
  3878  10A9  00B1               	movwf	___flmul@a+3
  3879  10AA  084D               	movf	??_fround+5,w
  3880  10AB  00B0               	movwf	___flmul@a+2
  3881  10AC  084C               	movf	??_fround+4,w
  3882  10AD  00AF               	movwf	___flmul@a+1
  3883  10AE  084B               	movf	??_fround+3,w
  3884  10AF  00AE               	movwf	___flmul@a
  3885  10B0  120A  158A  213C  160A  118A  	fcall	___flmul
  3886  10B5  1283               	bcf	3,5	;RP0=0, select bank0
  3887  10B6  1303               	bcf	3,6	;RP1=0, select bank0
  3888  10B7  082D               	movf	?___flmul+3,w
  3889  10B8  00D6               	movwf	_fround$1238+3
  3890  10B9  082C               	movf	?___flmul+2,w
  3891  10BA  00D5               	movwf	_fround$1238+2
  3892  10BB  082B               	movf	?___flmul+1,w
  3893  10BC  00D4               	movwf	_fround$1238+1
  3894  10BD  082A               	movf	?___flmul,w
  3895  10BE  00D3               	movwf	_fround$1238
  3896                           
  3897                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[p
      +                          rec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3898  10BF  300A               	movlw	10
  3899  10C0  00A0               	movwf	___lwdiv@divisor
  3900  10C1  3000               	movlw	0
  3901  10C2  00A1               	movwf	___lwdiv@divisor+1
  3902  10C3  0857               	movf	fround@prec,w
  3903  10C4  00C8               	movwf	??_fround
  3904  10C5  01C9               	clrf	??_fround+1
  3905  10C6  0848               	movf	??_fround,w
  3906  10C7  00F5               	movwf	___lwmod@dividend
  3907  10C8  0849               	movf	??_fround+1,w
  3908  10C9  00F6               	movwf	___lwmod@dividend+1
  3909  10CA  3064               	movlw	100
  3910  10CB  00F3               	movwf	___lwmod@divisor
  3911  10CC  3000               	movlw	0
  3912  10CD  00F4               	movwf	___lwmod@divisor+1
  3913  10CE  160A  158A  219A  160A  118A  	fcall	___lwmod
  3914  10D3  0874               	movf	?___lwmod+1,w
  3915  10D4  1283               	bcf	3,5	;RP0=0, select bank0
  3916  10D5  1303               	bcf	3,6	;RP1=0, select bank0
  3917  10D6  00A3               	movwf	___lwdiv@dividend+1
  3918  10D7  0873               	movf	?___lwmod,w
  3919  10D8  00A2               	movwf	___lwdiv@dividend
  3920  10D9  160A  158A  221A  160A  118A  	fcall	___lwdiv
  3921  10DE  1283               	bcf	3,5	;RP0=0, select bank0
  3922  10DF  1303               	bcf	3,6	;RP1=0, select bank0
  3923  10E0  0820               	movf	?___lwdiv,w
  3924  10E1  00CA               	movwf	??_fround+2
  3925  10E2  3001               	movlw	1
  3926  10E3                     u6035:
  3927  10E3  1003               	clrc
  3928  10E4  0DCA               	rlf	??_fround+2,f
  3929  10E5  3EFF               	addlw	-1
  3930  10E6  1D03               	skipz
  3931  10E7  28E3               	goto	u6035
  3932  10E8  1003               	clrc
  3933  10E9  0D4A               	rlf	??_fround+2,w
  3934  10EA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3935  10EB  0084               	movwf	4
  3936  10EC  120A  158A  200A  160A  118A  	fcall	stringdir
  3937  10F1  00CB               	movwf	??_fround+3
  3938  10F2  120A  158A  200A  160A  118A  	fcall	stringdir
  3939  10F7  00CC               	movwf	??_fround+4
  3940  10F8  120A  158A  200A  160A  118A  	fcall	stringdir
  3941  10FD  00CD               	movwf	??_fround+5
  3942  10FE  120A  158A  200A  160A  118A  	fcall	stringdir
  3943  1103  00CE               	movwf	??_fround+6
  3944  1104  084E               	movf	??_fround+6,w
  3945  1105  00AD               	movwf	___flmul@b+3
  3946  1106  084D               	movf	??_fround+5,w
  3947  1107  00AC               	movwf	___flmul@b+2
  3948  1108  084C               	movf	??_fround+4,w
  3949  1109  00AB               	movwf	___flmul@b+1
  3950  110A  084B               	movf	??_fround+3,w
  3951  110B  00AA               	movwf	___flmul@b
  3952  110C  0856               	movf	_fround$1238+3,w
  3953  110D  00B1               	movwf	___flmul@a+3
  3954  110E  0855               	movf	_fround$1238+2,w
  3955  110F  00B0               	movwf	___flmul@a+2
  3956  1110  0854               	movf	_fround$1238+1,w
  3957  1111  00AF               	movwf	___flmul@a+1
  3958  1112  0853               	movf	_fround$1238,w
  3959  1113  00AE               	movwf	___flmul@a
  3960  1114  120A  158A  213C  160A  118A  	fcall	___flmul
  3961  1119  1283               	bcf	3,5	;RP0=0, select bank0
  3962  111A  1303               	bcf	3,6	;RP1=0, select bank0
  3963  111B  082D               	movf	?___flmul+3,w
  3964  111C  00D2               	movwf	_fround$1239+3
  3965  111D  082C               	movf	?___flmul+2,w
  3966  111E  00D1               	movwf	_fround$1239+2
  3967  111F  082B               	movf	?___flmul+1,w
  3968  1120  00D0               	movwf	_fround$1239+1
  3969  1121  082A               	movf	?___flmul,w
  3970  1122  00CF               	movwf	_fround$1239
  3971                           
  3972                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[p
      +                          rec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3973  1123  300A               	movlw	10
  3974  1124  00F3               	movwf	___lwmod@divisor
  3975  1125  3000               	movlw	0
  3976  1126  00F4               	movwf	___lwmod@divisor+1
  3977  1127  0857               	movf	fround@prec,w
  3978  1128  00C8               	movwf	??_fround
  3979  1129  01C9               	clrf	??_fround+1
  3980  112A  0848               	movf	??_fround,w
  3981  112B  00F5               	movwf	___lwmod@dividend
  3982  112C  0849               	movf	??_fround+1,w
  3983  112D  00F6               	movwf	___lwmod@dividend+1
  3984  112E  160A  158A  219A  160A  118A  	fcall	___lwmod
  3985  1133  0873               	movf	?___lwmod,w
  3986  1134  1283               	bcf	3,5	;RP0=0, select bank0
  3987  1135  1303               	bcf	3,6	;RP1=0, select bank0
  3988  1136  00CA               	movwf	??_fround+2
  3989  1137  3001               	movlw	1
  3990  1138                     u6045:
  3991  1138  1003               	clrc
  3992  1139  0DCA               	rlf	??_fround+2,f
  3993  113A  3EFF               	addlw	-1
  3994  113B  1D03               	skipz
  3995  113C  2938               	goto	u6045
  3996  113D  1003               	clrc
  3997  113E  0D4A               	rlf	??_fround+2,w
  3998  113F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3999  1140  0084               	movwf	4
  4000  1141  120A  158A  200A  160A  118A  	fcall	stringdir
  4001  1146  00CB               	movwf	??_fround+3
  4002  1147  120A  158A  200A  160A  118A  	fcall	stringdir
  4003  114C  00CC               	movwf	??_fround+4
  4004  114D  120A  158A  200A  160A  118A  	fcall	stringdir
  4005  1152  00CD               	movwf	??_fround+5
  4006  1153  120A  158A  200A  160A  118A  	fcall	stringdir
  4007  1158  00CE               	movwf	??_fround+6
  4008  1159  084E               	movf	??_fround+6,w
  4009  115A  00AD               	movwf	___flmul@b+3
  4010  115B  084D               	movf	??_fround+5,w
  4011  115C  00AC               	movwf	___flmul@b+2
  4012  115D  084C               	movf	??_fround+4,w
  4013  115E  00AB               	movwf	___flmul@b+1
  4014  115F  084B               	movf	??_fround+3,w
  4015  1160  00AA               	movwf	___flmul@b
  4016  1161  0852               	movf	_fround$1239+3,w
  4017  1162  00B1               	movwf	___flmul@a+3
  4018  1163  0851               	movf	_fround$1239+2,w
  4019  1164  00B0               	movwf	___flmul@a+2
  4020  1165  0850               	movf	_fround$1239+1,w
  4021  1166  00AF               	movwf	___flmul@a+1
  4022  1167  084F               	movf	_fround$1239,w
  4023  1168  00AE               	movwf	___flmul@a
  4024  1169  120A  158A  213C  160A  118A  	fcall	___flmul
  4025  116E  1283               	bcf	3,5	;RP0=0, select bank0
  4026  116F  1303               	bcf	3,6	;RP1=0, select bank0
  4027  1170  082D               	movf	?___flmul+3,w
  4028  1171  00C7               	movwf	?_fround+3
  4029  1172  082C               	movf	?___flmul+2,w
  4030  1173  00C6               	movwf	?_fround+2
  4031  1174  082B               	movf	?___flmul+1,w
  4032  1175  00C5               	movwf	?_fround+1
  4033  1176  082A               	movf	?___flmul,w
  4034  1177  00C4               	movwf	?_fround
  4035  1178  2A6D               	goto	l348
  4036  1179                     l3964:
  4037  1179  300B               	movlw	11
  4038  117A  0257               	subwf	fround@prec,w
  4039  117B  1C03               	skipc
  4040  117C  297E               	goto	u6051
  4041  117D  297F               	goto	u6050
  4042  117E                     u6051:
  4043  117E  2A2A               	goto	l3970
  4044  117F                     u6050:
  4045  117F                     l3966:
  4046                           
  4047                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[p
      +                          rec/10U+9U] * _npowers_[prec%10U];
  4048  117F  303F               	movlw	63
  4049  1180  00AD               	movwf	___flmul@b+3
  4050  1181  3000               	movlw	0
  4051  1182  00AC               	movwf	___flmul@b+2
  4052  1183  3000               	movlw	0
  4053  1184  00AB               	movwf	___flmul@b+1
  4054  1185  3000               	movlw	0
  4055  1186  00AA               	movwf	___flmul@b
  4056  1187  300A               	movlw	10
  4057  1188  00A0               	movwf	___lwdiv@divisor
  4058  1189  3000               	movlw	0
  4059  118A  00A1               	movwf	___lwdiv@divisor+1
  4060  118B  0857               	movf	fround@prec,w
  4061  118C  00C8               	movwf	??_fround
  4062  118D  01C9               	clrf	??_fround+1
  4063  118E  0848               	movf	??_fround,w
  4064  118F  00A2               	movwf	___lwdiv@dividend
  4065  1190  0849               	movf	??_fround+1,w
  4066  1191  00A3               	movwf	___lwdiv@dividend+1
  4067  1192  160A  158A  221A  160A  118A  	fcall	___lwdiv
  4068  1197  1283               	bcf	3,5	;RP0=0, select bank0
  4069  1198  1303               	bcf	3,6	;RP1=0, select bank0
  4070  1199  0820               	movf	?___lwdiv,w
  4071  119A  00CA               	movwf	??_fround+2
  4072  119B  3001               	movlw	1
  4073  119C                     u6065:
  4074  119C  1003               	clrc
  4075  119D  0DCA               	rlf	??_fround+2,f
  4076  119E  3EFF               	addlw	-1
  4077  119F  1D03               	skipz
  4078  11A0  299C               	goto	u6065
  4079  11A1  1003               	clrc
  4080  11A2  0D4A               	rlf	??_fround+2,w
  4081  11A3  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4082  11A4  0084               	movwf	4
  4083  11A5  120A  158A  200A  160A  118A  	fcall	stringdir
  4084  11AA  00CB               	movwf	??_fround+3
  4085  11AB  120A  158A  200A  160A  118A  	fcall	stringdir
  4086  11B0  00CC               	movwf	??_fround+4
  4087  11B1  120A  158A  200A  160A  118A  	fcall	stringdir
  4088  11B6  00CD               	movwf	??_fround+5
  4089  11B7  120A  158A  200A  160A  118A  	fcall	stringdir
  4090  11BC  00CE               	movwf	??_fround+6
  4091  11BD  084E               	movf	??_fround+6,w
  4092  11BE  00B1               	movwf	___flmul@a+3
  4093  11BF  084D               	movf	??_fround+5,w
  4094  11C0  00B0               	movwf	___flmul@a+2
  4095  11C1  084C               	movf	??_fround+4,w
  4096  11C2  00AF               	movwf	___flmul@a+1
  4097  11C3  084B               	movf	??_fround+3,w
  4098  11C4  00AE               	movwf	___flmul@a
  4099  11C5  120A  158A  213C  160A  118A  	fcall	___flmul
  4100  11CA  1283               	bcf	3,5	;RP0=0, select bank0
  4101  11CB  1303               	bcf	3,6	;RP1=0, select bank0
  4102  11CC  082D               	movf	?___flmul+3,w
  4103  11CD  00D6               	movwf	_fround$1238+3
  4104  11CE  082C               	movf	?___flmul+2,w
  4105  11CF  00D5               	movwf	_fround$1238+2
  4106  11D0  082B               	movf	?___flmul+1,w
  4107  11D1  00D4               	movwf	_fround$1238+1
  4108  11D2  082A               	movf	?___flmul,w
  4109  11D3  00D3               	movwf	_fround$1238
  4110                           
  4111                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[p
      +                          rec/10U+9U] * _npowers_[prec%10U];
  4112  11D4  300A               	movlw	10
  4113  11D5  00F3               	movwf	___lwmod@divisor
  4114  11D6  3000               	movlw	0
  4115  11D7  00F4               	movwf	___lwmod@divisor+1
  4116  11D8  0857               	movf	fround@prec,w
  4117  11D9  00C8               	movwf	??_fround
  4118  11DA  01C9               	clrf	??_fround+1
  4119  11DB  0848               	movf	??_fround,w
  4120  11DC  00F5               	movwf	___lwmod@dividend
  4121  11DD  0849               	movf	??_fround+1,w
  4122  11DE  00F6               	movwf	___lwmod@dividend+1
  4123  11DF  160A  158A  219A  160A  118A  	fcall	___lwmod
  4124  11E4  0873               	movf	?___lwmod,w
  4125  11E5  1283               	bcf	3,5	;RP0=0, select bank0
  4126  11E6  1303               	bcf	3,6	;RP1=0, select bank0
  4127  11E7  00CA               	movwf	??_fround+2
  4128  11E8  3001               	movlw	1
  4129  11E9                     u6075:
  4130  11E9  1003               	clrc
  4131  11EA  0DCA               	rlf	??_fround+2,f
  4132  11EB  3EFF               	addlw	-1
  4133  11EC  1D03               	skipz
  4134  11ED  29E9               	goto	u6075
  4135  11EE  1003               	clrc
  4136  11EF  0D4A               	rlf	??_fround+2,w
  4137  11F0  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4138  11F1  0084               	movwf	4
  4139  11F2  120A  158A  200A  160A  118A  	fcall	stringdir
  4140  11F7  00CB               	movwf	??_fround+3
  4141  11F8  120A  158A  200A  160A  118A  	fcall	stringdir
  4142  11FD  00CC               	movwf	??_fround+4
  4143  11FE  120A  158A  200A  160A  118A  	fcall	stringdir
  4144  1203  00CD               	movwf	??_fround+5
  4145  1204  120A  158A  200A  160A  118A  	fcall	stringdir
  4146  1209  00CE               	movwf	??_fround+6
  4147  120A  084E               	movf	??_fround+6,w
  4148  120B  00AD               	movwf	___flmul@b+3
  4149  120C  084D               	movf	??_fround+5,w
  4150  120D  00AC               	movwf	___flmul@b+2
  4151  120E  084C               	movf	??_fround+4,w
  4152  120F  00AB               	movwf	___flmul@b+1
  4153  1210  084B               	movf	??_fround+3,w
  4154  1211  00AA               	movwf	___flmul@b
  4155  1212  0856               	movf	_fround$1238+3,w
  4156  1213  00B1               	movwf	___flmul@a+3
  4157  1214  0855               	movf	_fround$1238+2,w
  4158  1215  00B0               	movwf	___flmul@a+2
  4159  1216  0854               	movf	_fround$1238+1,w
  4160  1217  00AF               	movwf	___flmul@a+1
  4161  1218  0853               	movf	_fround$1238,w
  4162  1219  00AE               	movwf	___flmul@a
  4163  121A  120A  158A  213C  160A  118A  	fcall	___flmul
  4164  121F  1283               	bcf	3,5	;RP0=0, select bank0
  4165  1220  1303               	bcf	3,6	;RP1=0, select bank0
  4166  1221  082D               	movf	?___flmul+3,w
  4167  1222  00C7               	movwf	?_fround+3
  4168  1223  082C               	movf	?___flmul+2,w
  4169  1224  00C6               	movwf	?_fround+2
  4170  1225  082B               	movf	?___flmul+1,w
  4171  1226  00C5               	movwf	?_fround+1
  4172  1227  082A               	movf	?___flmul,w
  4173  1228  00C4               	movwf	?_fround
  4174  1229  2A6D               	goto	l348
  4175  122A                     l3970:
  4176                           
  4177                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 * _npowers_[pr
      +                          ec];
  4178  122A  303F               	movlw	63
  4179  122B  00AD               	movwf	___flmul@b+3
  4180  122C  3000               	movlw	0
  4181  122D  00AC               	movwf	___flmul@b+2
  4182  122E  3000               	movlw	0
  4183  122F  00AB               	movwf	___flmul@b+1
  4184  1230  3000               	movlw	0
  4185  1231  00AA               	movwf	___flmul@b
  4186  1232  0857               	movf	fround@prec,w
  4187  1233  00C8               	movwf	??_fround
  4188  1234  3001               	movlw	1
  4189  1235                     u6085:
  4190  1235  1003               	clrc
  4191  1236  0DC8               	rlf	??_fround,f
  4192  1237  3EFF               	addlw	-1
  4193  1238  1D03               	skipz
  4194  1239  2A35               	goto	u6085
  4195  123A  1003               	clrc
  4196  123B  0D48               	rlf	??_fround,w
  4197  123C  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4198  123D  0084               	movwf	4
  4199  123E  120A  158A  200A  160A  118A  	fcall	stringdir
  4200  1243  00C9               	movwf	??_fround+1
  4201  1244  120A  158A  200A  160A  118A  	fcall	stringdir
  4202  1249  00CA               	movwf	??_fround+2
  4203  124A  120A  158A  200A  160A  118A  	fcall	stringdir
  4204  124F  00CB               	movwf	??_fround+3
  4205  1250  120A  158A  200A  160A  118A  	fcall	stringdir
  4206  1255  00CC               	movwf	??_fround+4
  4207  1256  084C               	movf	??_fround+4,w
  4208  1257  00B1               	movwf	___flmul@a+3
  4209  1258  084B               	movf	??_fround+3,w
  4210  1259  00B0               	movwf	___flmul@a+2
  4211  125A  084A               	movf	??_fround+2,w
  4212  125B  00AF               	movwf	___flmul@a+1
  4213  125C  0849               	movf	??_fround+1,w
  4214  125D  00AE               	movwf	___flmul@a
  4215  125E  120A  158A  213C  160A  118A  	fcall	___flmul
  4216  1263  1283               	bcf	3,5	;RP0=0, select bank0
  4217  1264  1303               	bcf	3,6	;RP1=0, select bank0
  4218  1265  082D               	movf	?___flmul+3,w
  4219  1266  00C7               	movwf	?_fround+3
  4220  1267  082C               	movf	?___flmul+2,w
  4221  1268  00C6               	movwf	?_fround+2
  4222  1269  082B               	movf	?___flmul+1,w
  4223  126A  00C5               	movwf	?_fround+1
  4224  126B  082A               	movf	?___flmul,w
  4225  126C  00C4               	movwf	?_fround
  4226  126D                     l348:
  4227  126D  0008               	return
  4228  126E                     __end_of_fround:
  4229                           
  4230                           	psect	text7
  4231  199A                     __ptext7:	
  4232 ;; *************** function ___lwmod *****************
  4233 ;; Defined at:
  4234 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  divisor         2    3[COMMON] unsigned int 
  4237 ;;  dividend        2    5[COMMON] unsigned int 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;  counter         1    8[COMMON] unsigned char 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  2    3[COMMON] unsigned int 
  4242 ;; Registers used:
  4243 ;;		wreg, status,2, status,0
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4249 ;;      Params:         4       0       0       0       0
  4250 ;;      Locals:         1       0       0       0       0
  4251 ;;      Temps:          1       0       0       0       0
  4252 ;;      Totals:         6       0       0       0       0
  4253 ;;Total ram usage:        6 bytes
  4254 ;; Hardware stack levels used:    1
  4255 ;; Hardware stack levels required when called:    2
  4256 ;; This function calls:
  4257 ;;		Nothing
  4258 ;; This function is called by:
  4259 ;;		_fround
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           
  4264                           ;psect for function ___lwmod
  4265  199A                     ___lwmod:
  4266  199A                     l2582:	
  4267                           ;incstack = 0
  4268                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4269                           
  4270  199A  0873               	movf	___lwmod@divisor,w
  4271  199B  0474               	iorwf	___lwmod@divisor+1,w
  4272  199C  1903               	btfsc	3,2
  4273  199D  299F               	goto	u3261
  4274  199E  29A0               	goto	u3260
  4275  199F                     u3261:
  4276  199F  29CF               	goto	l2600
  4277  19A0                     u3260:
  4278  19A0                     l2584:
  4279  19A0  01F8               	clrf	___lwmod@counter
  4280  19A1  0AF8               	incf	___lwmod@counter,f
  4281  19A2  29AE               	goto	l2590
  4282  19A3                     l2586:
  4283  19A3  3001               	movlw	1
  4284  19A4                     u3275:
  4285  19A4  1003               	clrc
  4286  19A5  0DF3               	rlf	___lwmod@divisor,f
  4287  19A6  0DF4               	rlf	___lwmod@divisor+1,f
  4288  19A7  3EFF               	addlw	-1
  4289  19A8  1D03               	skipz
  4290  19A9  29A4               	goto	u3275
  4291  19AA                     l2588:
  4292  19AA  3001               	movlw	1
  4293  19AB  00F7               	movwf	??___lwmod
  4294  19AC  0877               	movf	??___lwmod,w
  4295  19AD  07F8               	addwf	___lwmod@counter,f
  4296  19AE                     l2590:
  4297  19AE  1FF4               	btfss	___lwmod@divisor+1,7
  4298  19AF  29B1               	goto	u3281
  4299  19B0  29B2               	goto	u3280
  4300  19B1                     u3281:
  4301  19B1  29A3               	goto	l2586
  4302  19B2                     u3280:
  4303  19B2                     l2592:
  4304  19B2  0874               	movf	___lwmod@divisor+1,w
  4305  19B3  0276               	subwf	___lwmod@dividend+1,w
  4306  19B4  1D03               	skipz
  4307  19B5  29B8               	goto	u3295
  4308  19B6  0873               	movf	___lwmod@divisor,w
  4309  19B7  0275               	subwf	___lwmod@dividend,w
  4310  19B8                     u3295:
  4311  19B8  1C03               	skipc
  4312  19B9  29BB               	goto	u3291
  4313  19BA  29BC               	goto	u3290
  4314  19BB                     u3291:
  4315  19BB  29C2               	goto	l2596
  4316  19BC                     u3290:
  4317  19BC                     l2594:
  4318  19BC  0873               	movf	___lwmod@divisor,w
  4319  19BD  02F5               	subwf	___lwmod@dividend,f
  4320  19BE  0874               	movf	___lwmod@divisor+1,w
  4321  19BF  1C03               	skipc
  4322  19C0  03F6               	decf	___lwmod@dividend+1,f
  4323  19C1  02F6               	subwf	___lwmod@dividend+1,f
  4324  19C2                     l2596:
  4325  19C2  3001               	movlw	1
  4326  19C3                     u3305:
  4327  19C3  1003               	clrc
  4328  19C4  0CF4               	rrf	___lwmod@divisor+1,f
  4329  19C5  0CF3               	rrf	___lwmod@divisor,f
  4330  19C6  3EFF               	addlw	-1
  4331  19C7  1D03               	skipz
  4332  19C8  29C3               	goto	u3305
  4333  19C9                     l2598:
  4334  19C9  3001               	movlw	1
  4335  19CA  02F8               	subwf	___lwmod@counter,f
  4336  19CB  1D03               	btfss	3,2
  4337  19CC  29CE               	goto	u3311
  4338  19CD  29CF               	goto	u3310
  4339  19CE                     u3311:
  4340  19CE  29B2               	goto	l2592
  4341  19CF                     u3310:
  4342  19CF                     l2600:
  4343  19CF  0876               	movf	___lwmod@dividend+1,w
  4344  19D0  00F4               	movwf	?___lwmod+1
  4345  19D1  0875               	movf	___lwmod@dividend,w
  4346  19D2  00F3               	movwf	?___lwmod
  4347  19D3                     l767:
  4348  19D3  0008               	return
  4349  19D4                     __end_of___lwmod:
  4350                           
  4351                           	psect	text8
  4352  1A1A                     __ptext8:	
  4353 ;; *************** function ___lwdiv *****************
  4354 ;; Defined at:
  4355 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  divisor         2    0[BANK0 ] unsigned int 
  4358 ;;  dividend        2    2[BANK0 ] unsigned int 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  quotient        2    6[BANK0 ] unsigned int 
  4361 ;;  counter         1    5[BANK0 ] unsigned char 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  2    0[BANK0 ] unsigned int 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4371 ;;      Params:         0       4       0       0       0
  4372 ;;      Locals:         0       3       0       0       0
  4373 ;;      Temps:          0       1       0       0       0
  4374 ;;      Totals:         0       8       0       0       0
  4375 ;;Total ram usage:        8 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; Hardware stack levels required when called:    2
  4378 ;; This function calls:
  4379 ;;		Nothing
  4380 ;; This function is called by:
  4381 ;;		_fround
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           
  4386                           ;psect for function ___lwdiv
  4387  1A1A                     ___lwdiv:
  4388  1A1A                     l3906:	
  4389                           ;incstack = 0
  4390                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4391                           
  4392  1A1A  1283               	bcf	3,5	;RP0=0, select bank0
  4393  1A1B  1303               	bcf	3,6	;RP1=0, select bank0
  4394  1A1C  01A6               	clrf	___lwdiv@quotient
  4395  1A1D  01A7               	clrf	___lwdiv@quotient+1
  4396  1A1E                     l3908:
  4397  1A1E  0820               	movf	___lwdiv@divisor,w
  4398  1A1F  0421               	iorwf	___lwdiv@divisor+1,w
  4399  1A20  1903               	btfsc	3,2
  4400  1A21  2A23               	goto	u5941
  4401  1A22  2A24               	goto	u5940
  4402  1A23                     u5941:
  4403  1A23  2A5B               	goto	l3928
  4404  1A24                     u5940:
  4405  1A24                     l3910:
  4406  1A24  01A5               	clrf	___lwdiv@counter
  4407  1A25  0AA5               	incf	___lwdiv@counter,f
  4408  1A26  2A32               	goto	l3916
  4409  1A27                     l3912:
  4410  1A27  3001               	movlw	1
  4411  1A28                     u5955:
  4412  1A28  1003               	clrc
  4413  1A29  0DA0               	rlf	___lwdiv@divisor,f
  4414  1A2A  0DA1               	rlf	___lwdiv@divisor+1,f
  4415  1A2B  3EFF               	addlw	-1
  4416  1A2C  1D03               	skipz
  4417  1A2D  2A28               	goto	u5955
  4418  1A2E                     l3914:
  4419  1A2E  3001               	movlw	1
  4420  1A2F  00A4               	movwf	??___lwdiv
  4421  1A30  0824               	movf	??___lwdiv,w
  4422  1A31  07A5               	addwf	___lwdiv@counter,f
  4423  1A32                     l3916:
  4424  1A32  1FA1               	btfss	___lwdiv@divisor+1,7
  4425  1A33  2A35               	goto	u5961
  4426  1A34  2A36               	goto	u5960
  4427  1A35                     u5961:
  4428  1A35  2A27               	goto	l3912
  4429  1A36                     u5960:
  4430  1A36                     l3918:
  4431  1A36  3001               	movlw	1
  4432  1A37                     u5975:
  4433  1A37  1003               	clrc
  4434  1A38  0DA6               	rlf	___lwdiv@quotient,f
  4435  1A39  0DA7               	rlf	___lwdiv@quotient+1,f
  4436  1A3A  3EFF               	addlw	-1
  4437  1A3B  1D03               	skipz
  4438  1A3C  2A37               	goto	u5975
  4439  1A3D  0821               	movf	___lwdiv@divisor+1,w
  4440  1A3E  0223               	subwf	___lwdiv@dividend+1,w
  4441  1A3F  1D03               	skipz
  4442  1A40  2A43               	goto	u5985
  4443  1A41  0820               	movf	___lwdiv@divisor,w
  4444  1A42  0222               	subwf	___lwdiv@dividend,w
  4445  1A43                     u5985:
  4446  1A43  1C03               	skipc
  4447  1A44  2A46               	goto	u5981
  4448  1A45  2A47               	goto	u5980
  4449  1A46                     u5981:
  4450  1A46  2A4E               	goto	l3924
  4451  1A47                     u5980:
  4452  1A47                     l3920:
  4453  1A47  0820               	movf	___lwdiv@divisor,w
  4454  1A48  02A2               	subwf	___lwdiv@dividend,f
  4455  1A49  0821               	movf	___lwdiv@divisor+1,w
  4456  1A4A  1C03               	skipc
  4457  1A4B  03A3               	decf	___lwdiv@dividend+1,f
  4458  1A4C  02A3               	subwf	___lwdiv@dividend+1,f
  4459  1A4D                     l3922:
  4460  1A4D  1426               	bsf	___lwdiv@quotient,0
  4461  1A4E                     l3924:
  4462  1A4E  3001               	movlw	1
  4463  1A4F                     u5995:
  4464  1A4F  1003               	clrc
  4465  1A50  0CA1               	rrf	___lwdiv@divisor+1,f
  4466  1A51  0CA0               	rrf	___lwdiv@divisor,f
  4467  1A52  3EFF               	addlw	-1
  4468  1A53  1D03               	skipz
  4469  1A54  2A4F               	goto	u5995
  4470  1A55                     l3926:
  4471  1A55  3001               	movlw	1
  4472  1A56  02A5               	subwf	___lwdiv@counter,f
  4473  1A57  1D03               	btfss	3,2
  4474  1A58  2A5A               	goto	u6001
  4475  1A59  2A5B               	goto	u6000
  4476  1A5A                     u6001:
  4477  1A5A  2A36               	goto	l3918
  4478  1A5B                     u6000:
  4479  1A5B                     l3928:
  4480  1A5B  0827               	movf	___lwdiv@quotient+1,w
  4481  1A5C  00A1               	movwf	?___lwdiv+1
  4482  1A5D  0826               	movf	___lwdiv@quotient,w
  4483  1A5E  00A0               	movwf	?___lwdiv
  4484  1A5F                     l757:
  4485  1A5F  0008               	return
  4486  1A60                     __end_of___lwdiv:
  4487                           
  4488                           	psect	text9
  4489  1E85                     __ptext9:	
  4490 ;; *************** function __tdiv_to_l_ *****************
  4491 ;; Defined at:
  4492 ;;		line 60 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  f1              4    0[BANK0 ] float 
  4495 ;;  f2              4    4[BANK0 ] float 
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;  quot            4    8[BANK0 ] unsigned long 
  4498 ;;  exp1            1   13[BANK0 ] unsigned char 
  4499 ;;  cntr            1   12[BANK0 ] unsigned char 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  4    0[BANK0 ] unsigned long 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4509 ;;      Params:         0       8       0       0       0
  4510 ;;      Locals:         0       6       0       0       0
  4511 ;;      Temps:          4       0       0       0       0
  4512 ;;      Totals:         4      14       0       0       0
  4513 ;;Total ram usage:       18 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    2
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_sprintf
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           
  4524                           ;psect for function __tdiv_to_l_
  4525  1E85                     __tdiv_to_l_:
  4526  1E85                     l4014:	
  4527                           ;incstack = 0
  4528                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4529                           
  4530  1E85  1283               	bcf	3,5	;RP0=0, select bank0
  4531  1E86  1303               	bcf	3,6	;RP1=0, select bank0
  4532  1E87  0820               	movf	__tdiv_to_l_@f1,w
  4533  1E88  00F3               	movwf	??__tdiv_to_l_
  4534  1E89  0821               	movf	__tdiv_to_l_@f1+1,w
  4535  1E8A  00F4               	movwf	??__tdiv_to_l_+1
  4536  1E8B  0822               	movf	__tdiv_to_l_@f1+2,w
  4537  1E8C  00F5               	movwf	??__tdiv_to_l_+2
  4538  1E8D  1003               	clrc
  4539  1E8E  0D74               	rlf	??__tdiv_to_l_+1,w
  4540  1E8F  0D75               	rlf	??__tdiv_to_l_+2,w
  4541  1E90  00F6               	movwf	??__tdiv_to_l_+3
  4542  1E91  0876               	movf	??__tdiv_to_l_+3,w
  4543  1E92  00AD               	movwf	__tdiv_to_l_@exp1
  4544  1E93  082D               	movf	__tdiv_to_l_@exp1,w
  4545  1E94  1D03               	btfss	3,2
  4546  1E95  2E97               	goto	u6261
  4547  1E96  2E98               	goto	u6260
  4548  1E97                     u6261:
  4549  1E97  2EA1               	goto	l4020
  4550  1E98                     u6260:
  4551  1E98                     l4016:
  4552  1E98  3000               	movlw	0
  4553  1E99  00A3               	movwf	?__tdiv_to_l_+3
  4554  1E9A  3000               	movlw	0
  4555  1E9B  00A2               	movwf	?__tdiv_to_l_+2
  4556  1E9C  3000               	movlw	0
  4557  1E9D  00A1               	movwf	?__tdiv_to_l_+1
  4558  1E9E  3000               	movlw	0
  4559  1E9F  00A0               	movwf	?__tdiv_to_l_
  4560  1EA0  2F41               	goto	l668
  4561  1EA1                     l4020:
  4562  1EA1  0824               	movf	__tdiv_to_l_@f2,w
  4563  1EA2  00F3               	movwf	??__tdiv_to_l_
  4564  1EA3  0825               	movf	__tdiv_to_l_@f2+1,w
  4565  1EA4  00F4               	movwf	??__tdiv_to_l_+1
  4566  1EA5  0826               	movf	__tdiv_to_l_@f2+2,w
  4567  1EA6  00F5               	movwf	??__tdiv_to_l_+2
  4568  1EA7  1003               	clrc
  4569  1EA8  0D74               	rlf	??__tdiv_to_l_+1,w
  4570  1EA9  0D75               	rlf	??__tdiv_to_l_+2,w
  4571  1EAA  00F6               	movwf	??__tdiv_to_l_+3
  4572  1EAB  0876               	movf	??__tdiv_to_l_+3,w
  4573  1EAC  00AC               	movwf	__tdiv_to_l_@cntr
  4574  1EAD  082C               	movf	__tdiv_to_l_@cntr,w
  4575  1EAE  1D03               	btfss	3,2
  4576  1EAF  2EB1               	goto	u6271
  4577  1EB0  2EB2               	goto	u6270
  4578  1EB1                     u6271:
  4579  1EB1  2EB3               	goto	l669
  4580  1EB2                     u6270:
  4581  1EB2  2E98               	goto	l4016
  4582  1EB3                     l669:
  4583  1EB3  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4584  1EB4                     l4026:
  4585  1EB4  30FF               	movlw	255
  4586  1EB5  05A0               	andwf	__tdiv_to_l_@f1,f
  4587  1EB6  30FF               	movlw	255
  4588  1EB7  05A1               	andwf	__tdiv_to_l_@f1+1,f
  4589  1EB8  3000               	movlw	0
  4590  1EB9  05A2               	andwf	__tdiv_to_l_@f1+2,f
  4591  1EBA                     l4028:
  4592  1EBA  17A5               	bsf	__tdiv_to_l_@f2+1,7
  4593  1EBB  30FF               	movlw	255
  4594  1EBC  05A4               	andwf	__tdiv_to_l_@f2,f
  4595  1EBD  30FF               	movlw	255
  4596  1EBE  05A5               	andwf	__tdiv_to_l_@f2+1,f
  4597  1EBF  3000               	movlw	0
  4598  1EC0  05A6               	andwf	__tdiv_to_l_@f2+2,f
  4599  1EC1  3000               	movlw	0
  4600  1EC2  00AB               	movwf	__tdiv_to_l_@quot+3
  4601  1EC3  3000               	movlw	0
  4602  1EC4  00AA               	movwf	__tdiv_to_l_@quot+2
  4603  1EC5  3000               	movlw	0
  4604  1EC6  00A9               	movwf	__tdiv_to_l_@quot+1
  4605  1EC7  3000               	movlw	0
  4606  1EC8  00A8               	movwf	__tdiv_to_l_@quot
  4607  1EC9                     l4030:
  4608  1EC9  307F               	movlw	127
  4609  1ECA  02AD               	subwf	__tdiv_to_l_@exp1,f
  4610  1ECB                     l4032:
  4611  1ECB  3098               	movlw	152
  4612  1ECC  072C               	addwf	__tdiv_to_l_@cntr,w
  4613  1ECD  00F3               	movwf	??__tdiv_to_l_
  4614  1ECE  0873               	movf	??__tdiv_to_l_,w
  4615  1ECF  02AD               	subwf	__tdiv_to_l_@exp1,f
  4616  1ED0  3018               	movlw	24
  4617  1ED1  00F3               	movwf	??__tdiv_to_l_
  4618  1ED2  0873               	movf	??__tdiv_to_l_,w
  4619  1ED3  00AC               	movwf	__tdiv_to_l_@cntr
  4620  1ED4                     l4034:
  4621  1ED4  3001               	movlw	1
  4622  1ED5  00F3               	movwf	??__tdiv_to_l_
  4623  1ED6                     u6285:
  4624  1ED6  1003               	clrc
  4625  1ED7  0DA8               	rlf	__tdiv_to_l_@quot,f
  4626  1ED8  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  4627  1ED9  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  4628  1EDA  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  4629  1EDB  0BF3               	decfsz	??__tdiv_to_l_,f
  4630  1EDC  2ED6               	goto	u6285
  4631  1EDD                     l4036:
  4632  1EDD  0826               	movf	__tdiv_to_l_@f2+2,w
  4633  1EDE  0222               	subwf	__tdiv_to_l_@f1+2,w
  4634  1EDF  1D03               	skipz
  4635  1EE0  2EE7               	goto	u6295
  4636  1EE1  0825               	movf	__tdiv_to_l_@f2+1,w
  4637  1EE2  0221               	subwf	__tdiv_to_l_@f1+1,w
  4638  1EE3  1D03               	skipz
  4639  1EE4  2EE7               	goto	u6295
  4640  1EE5  0824               	movf	__tdiv_to_l_@f2,w
  4641  1EE6  0220               	subwf	__tdiv_to_l_@f1,w
  4642  1EE7                     u6295:
  4643  1EE7  1C03               	skipc
  4644  1EE8  2EEA               	goto	u6291
  4645  1EE9  2EEB               	goto	u6290
  4646  1EEA                     u6291:
  4647  1EEA  2EF6               	goto	l4042
  4648  1EEB                     u6290:
  4649  1EEB                     l4038:
  4650  1EEB  0824               	movf	__tdiv_to_l_@f2,w
  4651  1EEC  02A0               	subwf	__tdiv_to_l_@f1,f
  4652  1EED  0825               	movf	__tdiv_to_l_@f2+1,w
  4653  1EEE  1C03               	skipc
  4654  1EEF  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  4655  1EF0  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4656  1EF1  0826               	movf	__tdiv_to_l_@f2+2,w
  4657  1EF2  1C03               	skipc
  4658  1EF3  0A26               	incf	__tdiv_to_l_@f2+2,w
  4659  1EF4  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4660  1EF5                     l4040:
  4661  1EF5  1428               	bsf	__tdiv_to_l_@quot,0
  4662  1EF6                     l4042:
  4663  1EF6  3001               	movlw	1
  4664  1EF7                     u6305:
  4665  1EF7  1003               	clrc
  4666  1EF8  0DA0               	rlf	__tdiv_to_l_@f1,f
  4667  1EF9  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  4668  1EFA  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  4669  1EFB  3EFF               	addlw	-1
  4670  1EFC  1D03               	skipz
  4671  1EFD  2EF7               	goto	u6305
  4672  1EFE                     l4044:
  4673  1EFE  3001               	movlw	1
  4674  1EFF  02AC               	subwf	__tdiv_to_l_@cntr,f
  4675  1F00  1D03               	btfss	3,2
  4676  1F01  2F03               	goto	u6311
  4677  1F02  2F04               	goto	u6310
  4678  1F03                     u6311:
  4679  1F03  2ED4               	goto	l4034
  4680  1F04                     u6310:
  4681  1F04                     l672:
  4682  1F04  1FAD               	btfss	__tdiv_to_l_@exp1,7
  4683  1F05  2F07               	goto	u6321
  4684  1F06  2F08               	goto	u6320
  4685  1F07                     u6321:
  4686  1F07  2F22               	goto	l4054
  4687  1F08                     u6320:
  4688  1F08                     l4046:
  4689  1F08  082D               	movf	__tdiv_to_l_@exp1,w
  4690  1F09  3A80               	xorlw	128
  4691  1F0A  3E97               	addlw	151
  4692  1F0B  1803               	skipnc
  4693  1F0C  2F0E               	goto	u6331
  4694  1F0D  2F0F               	goto	u6330
  4695  1F0E                     u6331:
  4696  1F0E  2F10               	goto	l4052
  4697  1F0F                     u6330:
  4698  1F0F  2E98               	goto	l4016
  4699  1F10                     l4052:
  4700  1F10  3001               	movlw	1
  4701  1F11                     u6345:
  4702  1F11  1003               	clrc
  4703  1F12  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  4704  1F13  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  4705  1F14  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  4706  1F15  0CA8               	rrf	__tdiv_to_l_@quot,f
  4707  1F16  3EFF               	addlw	-1
  4708  1F17  1D03               	skipz
  4709  1F18  2F11               	goto	u6345
  4710  1F19  3001               	movlw	1
  4711  1F1A  00F3               	movwf	??__tdiv_to_l_
  4712  1F1B  0873               	movf	??__tdiv_to_l_,w
  4713  1F1C  07AD               	addwf	__tdiv_to_l_@exp1,f
  4714  1F1D  1D03               	btfss	3,2
  4715  1F1E  2F20               	goto	u6351
  4716  1F1F  2F21               	goto	u6350
  4717  1F20                     u6351:
  4718  1F20  2F10               	goto	l4052
  4719  1F21                     u6350:
  4720  1F21  2F39               	goto	l4062
  4721  1F22                     l4054:
  4722  1F22  3018               	movlw	24
  4723  1F23  022D               	subwf	__tdiv_to_l_@exp1,w
  4724  1F24  1C03               	skipc
  4725  1F25  2F27               	goto	u6361
  4726  1F26  2F28               	goto	u6360
  4727  1F27                     u6361:
  4728  1F27  2F34               	goto	l679
  4729  1F28                     u6360:
  4730  1F28  2E98               	goto	l4016
  4731  1F29                     l4060:
  4732  1F29  3001               	movlw	1
  4733  1F2A  00F3               	movwf	??__tdiv_to_l_
  4734  1F2B                     u6375:
  4735  1F2B  1003               	clrc
  4736  1F2C  0DA8               	rlf	__tdiv_to_l_@quot,f
  4737  1F2D  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  4738  1F2E  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  4739  1F2F  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  4740  1F30  0BF3               	decfsz	??__tdiv_to_l_,f
  4741  1F31  2F2B               	goto	u6375
  4742  1F32  3001               	movlw	1
  4743  1F33  02AD               	subwf	__tdiv_to_l_@exp1,f
  4744  1F34                     l679:
  4745  1F34  082D               	movf	__tdiv_to_l_@exp1,w
  4746  1F35  1D03               	btfss	3,2
  4747  1F36  2F38               	goto	u6381
  4748  1F37  2F39               	goto	u6380
  4749  1F38                     u6381:
  4750  1F38  2F29               	goto	l4060
  4751  1F39                     u6380:
  4752  1F39                     l4062:
  4753  1F39  082B               	movf	__tdiv_to_l_@quot+3,w
  4754  1F3A  00A3               	movwf	?__tdiv_to_l_+3
  4755  1F3B  082A               	movf	__tdiv_to_l_@quot+2,w
  4756  1F3C  00A2               	movwf	?__tdiv_to_l_+2
  4757  1F3D  0829               	movf	__tdiv_to_l_@quot+1,w
  4758  1F3E  00A1               	movwf	?__tdiv_to_l_+1
  4759  1F3F  0828               	movf	__tdiv_to_l_@quot,w
  4760  1F40  00A0               	movwf	?__tdiv_to_l_
  4761  1F41                     l668:
  4762  1F41  0008               	return
  4763  1F42                     __end_of__tdiv_to_l_:
  4764                           
  4765                           	psect	text10
  4766  1F42                     __ptext10:	
  4767 ;; *************** function __div_to_l_ *****************
  4768 ;; Defined at:
  4769 ;;		line 60 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;  f1              4    0[BANK0 ] unsigned long 
  4772 ;;  f2              4    4[BANK0 ] unsigned long 
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;  quot            4    8[BANK0 ] unsigned long 
  4775 ;;  exp1            1   13[BANK0 ] unsigned char 
  4776 ;;  cntr            1   12[BANK0 ] unsigned char 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  4    0[BANK0 ] unsigned long 
  4779 ;; Registers used:
  4780 ;;		wreg, status,2, status,0
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4786 ;;      Params:         0       8       0       0       0
  4787 ;;      Locals:         0       6       0       0       0
  4788 ;;      Temps:          1       0       0       0       0
  4789 ;;      Totals:         1      14       0       0       0
  4790 ;;Total ram usage:       15 bytes
  4791 ;; Hardware stack levels used:    1
  4792 ;; Hardware stack levels required when called:    2
  4793 ;; This function calls:
  4794 ;;		Nothing
  4795 ;; This function is called by:
  4796 ;;		_sprintf
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           
  4801                           ;psect for function __div_to_l_
  4802  1F42                     __div_to_l_:
  4803  1F42                     l4066:	
  4804                           ;incstack = 0
  4805                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  4806                           
  4807  1F42  1003               	clrc
  4808  1F43  1283               	bcf	3,5	;RP0=0, select bank0
  4809  1F44  1303               	bcf	3,6	;RP1=0, select bank0
  4810  1F45  0D22               	rlf	__div_to_l_@f1+2,w
  4811  1F46  0D23               	rlf	__div_to_l_@f1+3,w
  4812  1F47  00F3               	movwf	??__div_to_l_
  4813  1F48  0873               	movf	??__div_to_l_,w
  4814  1F49  00AD               	movwf	__div_to_l_@exp1
  4815  1F4A  082D               	movf	__div_to_l_@exp1,w
  4816  1F4B  1D03               	btfss	3,2
  4817  1F4C  2F4E               	goto	u6391
  4818  1F4D  2F4F               	goto	u6390
  4819  1F4E                     u6391:
  4820  1F4E  2F58               	goto	l4072
  4821  1F4F                     u6390:
  4822  1F4F                     l4068:
  4823  1F4F  3000               	movlw	0
  4824  1F50  00A3               	movwf	?__div_to_l_+3
  4825  1F51  3000               	movlw	0
  4826  1F52  00A2               	movwf	?__div_to_l_+2
  4827  1F53  3000               	movlw	0
  4828  1F54  00A1               	movwf	?__div_to_l_+1
  4829  1F55  3000               	movlw	0
  4830  1F56  00A0               	movwf	?__div_to_l_
  4831  1F57  2FFF               	goto	l621
  4832  1F58                     l4072:
  4833  1F58  1003               	clrc
  4834  1F59  0D26               	rlf	__div_to_l_@f2+2,w
  4835  1F5A  0D27               	rlf	__div_to_l_@f2+3,w
  4836  1F5B  00F3               	movwf	??__div_to_l_
  4837  1F5C  0873               	movf	??__div_to_l_,w
  4838  1F5D  00AC               	movwf	__div_to_l_@cntr
  4839  1F5E  082C               	movf	__div_to_l_@cntr,w
  4840  1F5F  1D03               	btfss	3,2
  4841  1F60  2F62               	goto	u6401
  4842  1F61  2F63               	goto	u6400
  4843  1F62                     u6401:
  4844  1F62  2F64               	goto	l622
  4845  1F63                     u6400:
  4846  1F63  2F4F               	goto	l4068
  4847  1F64                     l622:
  4848  1F64  17A2               	bsf	__div_to_l_@f1+2,7
  4849  1F65                     l4078:
  4850  1F65  30FF               	movlw	255
  4851  1F66  05A0               	andwf	__div_to_l_@f1,f
  4852  1F67  30FF               	movlw	255
  4853  1F68  05A1               	andwf	__div_to_l_@f1+1,f
  4854  1F69  30FF               	movlw	255
  4855  1F6A  05A2               	andwf	__div_to_l_@f1+2,f
  4856  1F6B  3000               	movlw	0
  4857  1F6C  05A3               	andwf	__div_to_l_@f1+3,f
  4858  1F6D                     l4080:
  4859  1F6D  17A6               	bsf	__div_to_l_@f2+2,7
  4860  1F6E  30FF               	movlw	255
  4861  1F6F  05A4               	andwf	__div_to_l_@f2,f
  4862  1F70  30FF               	movlw	255
  4863  1F71  05A5               	andwf	__div_to_l_@f2+1,f
  4864  1F72  30FF               	movlw	255
  4865  1F73  05A6               	andwf	__div_to_l_@f2+2,f
  4866  1F74  3000               	movlw	0
  4867  1F75  05A7               	andwf	__div_to_l_@f2+3,f
  4868  1F76  3000               	movlw	0
  4869  1F77  00AB               	movwf	__div_to_l_@quot+3
  4870  1F78  3000               	movlw	0
  4871  1F79  00AA               	movwf	__div_to_l_@quot+2
  4872  1F7A  3000               	movlw	0
  4873  1F7B  00A9               	movwf	__div_to_l_@quot+1
  4874  1F7C  3000               	movlw	0
  4875  1F7D  00A8               	movwf	__div_to_l_@quot
  4876  1F7E                     l4082:
  4877  1F7E  307F               	movlw	127
  4878  1F7F  02AD               	subwf	__div_to_l_@exp1,f
  4879  1F80                     l4084:
  4880  1F80  30A0               	movlw	160
  4881  1F81  072C               	addwf	__div_to_l_@cntr,w
  4882  1F82  00F3               	movwf	??__div_to_l_
  4883  1F83  0873               	movf	??__div_to_l_,w
  4884  1F84  02AD               	subwf	__div_to_l_@exp1,f
  4885  1F85  3020               	movlw	32
  4886  1F86  00F3               	movwf	??__div_to_l_
  4887  1F87  0873               	movf	??__div_to_l_,w
  4888  1F88  00AC               	movwf	__div_to_l_@cntr
  4889  1F89                     l4086:
  4890  1F89  3001               	movlw	1
  4891  1F8A  00F3               	movwf	??__div_to_l_
  4892  1F8B                     u6415:
  4893  1F8B  1003               	clrc
  4894  1F8C  0DA8               	rlf	__div_to_l_@quot,f
  4895  1F8D  0DA9               	rlf	__div_to_l_@quot+1,f
  4896  1F8E  0DAA               	rlf	__div_to_l_@quot+2,f
  4897  1F8F  0DAB               	rlf	__div_to_l_@quot+3,f
  4898  1F90  0BF3               	decfsz	??__div_to_l_,f
  4899  1F91  2F8B               	goto	u6415
  4900  1F92                     l4088:
  4901  1F92  0827               	movf	__div_to_l_@f2+3,w
  4902  1F93  0223               	subwf	__div_to_l_@f1+3,w
  4903  1F94  1D03               	skipz
  4904  1F95  2FA0               	goto	u6425
  4905  1F96  0826               	movf	__div_to_l_@f2+2,w
  4906  1F97  0222               	subwf	__div_to_l_@f1+2,w
  4907  1F98  1D03               	skipz
  4908  1F99  2FA0               	goto	u6425
  4909  1F9A  0825               	movf	__div_to_l_@f2+1,w
  4910  1F9B  0221               	subwf	__div_to_l_@f1+1,w
  4911  1F9C  1D03               	skipz
  4912  1F9D  2FA0               	goto	u6425
  4913  1F9E  0824               	movf	__div_to_l_@f2,w
  4914  1F9F  0220               	subwf	__div_to_l_@f1,w
  4915  1FA0                     u6425:
  4916  1FA0  1C03               	skipc
  4917  1FA1  2FA3               	goto	u6421
  4918  1FA2  2FA4               	goto	u6420
  4919  1FA3                     u6421:
  4920  1FA3  2FB3               	goto	l4094
  4921  1FA4                     u6420:
  4922  1FA4                     l4090:
  4923  1FA4  0824               	movf	__div_to_l_@f2,w
  4924  1FA5  02A0               	subwf	__div_to_l_@f1,f
  4925  1FA6  0825               	movf	__div_to_l_@f2+1,w
  4926  1FA7  1C03               	skipc
  4927  1FA8  0F25               	incfsz	__div_to_l_@f2+1,w
  4928  1FA9  02A1               	subwf	__div_to_l_@f1+1,f
  4929  1FAA  0826               	movf	__div_to_l_@f2+2,w
  4930  1FAB  1C03               	skipc
  4931  1FAC  0F26               	incfsz	__div_to_l_@f2+2,w
  4932  1FAD  02A2               	subwf	__div_to_l_@f1+2,f
  4933  1FAE  0827               	movf	__div_to_l_@f2+3,w
  4934  1FAF  1C03               	skipc
  4935  1FB0  0F27               	incfsz	__div_to_l_@f2+3,w
  4936  1FB1  02A3               	subwf	__div_to_l_@f1+3,f
  4937  1FB2                     l4092:
  4938  1FB2  1428               	bsf	__div_to_l_@quot,0
  4939  1FB3                     l4094:
  4940  1FB3  3001               	movlw	1
  4941  1FB4  00F3               	movwf	??__div_to_l_
  4942  1FB5                     u6435:
  4943  1FB5  1003               	clrc
  4944  1FB6  0DA0               	rlf	__div_to_l_@f1,f
  4945  1FB7  0DA1               	rlf	__div_to_l_@f1+1,f
  4946  1FB8  0DA2               	rlf	__div_to_l_@f1+2,f
  4947  1FB9  0DA3               	rlf	__div_to_l_@f1+3,f
  4948  1FBA  0BF3               	decfsz	??__div_to_l_,f
  4949  1FBB  2FB5               	goto	u6435
  4950  1FBC                     l4096:
  4951  1FBC  3001               	movlw	1
  4952  1FBD  02AC               	subwf	__div_to_l_@cntr,f
  4953  1FBE  1D03               	btfss	3,2
  4954  1FBF  2FC1               	goto	u6441
  4955  1FC0  2FC2               	goto	u6440
  4956  1FC1                     u6441:
  4957  1FC1  2F89               	goto	l4086
  4958  1FC2                     u6440:
  4959  1FC2                     l625:
  4960  1FC2  1FAD               	btfss	__div_to_l_@exp1,7
  4961  1FC3  2FC5               	goto	u6451
  4962  1FC4  2FC6               	goto	u6450
  4963  1FC5                     u6451:
  4964  1FC5  2FE0               	goto	l4106
  4965  1FC6                     u6450:
  4966  1FC6                     l4098:
  4967  1FC6  082D               	movf	__div_to_l_@exp1,w
  4968  1FC7  3A80               	xorlw	128
  4969  1FC8  3E9F               	addlw	159
  4970  1FC9  1803               	skipnc
  4971  1FCA  2FCC               	goto	u6461
  4972  1FCB  2FCD               	goto	u6460
  4973  1FCC                     u6461:
  4974  1FCC  2FCE               	goto	l4104
  4975  1FCD                     u6460:
  4976  1FCD  2F4F               	goto	l4068
  4977  1FCE                     l4104:
  4978  1FCE  3001               	movlw	1
  4979  1FCF                     u6475:
  4980  1FCF  1003               	clrc
  4981  1FD0  0CAB               	rrf	__div_to_l_@quot+3,f
  4982  1FD1  0CAA               	rrf	__div_to_l_@quot+2,f
  4983  1FD2  0CA9               	rrf	__div_to_l_@quot+1,f
  4984  1FD3  0CA8               	rrf	__div_to_l_@quot,f
  4985  1FD4  3EFF               	addlw	-1
  4986  1FD5  1D03               	skipz
  4987  1FD6  2FCF               	goto	u6475
  4988  1FD7  3001               	movlw	1
  4989  1FD8  00F3               	movwf	??__div_to_l_
  4990  1FD9  0873               	movf	??__div_to_l_,w
  4991  1FDA  07AD               	addwf	__div_to_l_@exp1,f
  4992  1FDB  1D03               	btfss	3,2
  4993  1FDC  2FDE               	goto	u6481
  4994  1FDD  2FDF               	goto	u6480
  4995  1FDE                     u6481:
  4996  1FDE  2FCE               	goto	l4104
  4997  1FDF                     u6480:
  4998  1FDF  2FF7               	goto	l4114
  4999  1FE0                     l4106:
  5000  1FE0  3020               	movlw	32
  5001  1FE1  022D               	subwf	__div_to_l_@exp1,w
  5002  1FE2  1C03               	skipc
  5003  1FE3  2FE5               	goto	u6491
  5004  1FE4  2FE6               	goto	u6490
  5005  1FE5                     u6491:
  5006  1FE5  2FF2               	goto	l632
  5007  1FE6                     u6490:
  5008  1FE6  2F4F               	goto	l4068
  5009  1FE7                     l4112:
  5010  1FE7  3001               	movlw	1
  5011  1FE8  00F3               	movwf	??__div_to_l_
  5012  1FE9                     u6505:
  5013  1FE9  1003               	clrc
  5014  1FEA  0DA8               	rlf	__div_to_l_@quot,f
  5015  1FEB  0DA9               	rlf	__div_to_l_@quot+1,f
  5016  1FEC  0DAA               	rlf	__div_to_l_@quot+2,f
  5017  1FED  0DAB               	rlf	__div_to_l_@quot+3,f
  5018  1FEE  0BF3               	decfsz	??__div_to_l_,f
  5019  1FEF  2FE9               	goto	u6505
  5020  1FF0  3001               	movlw	1
  5021  1FF1  02AD               	subwf	__div_to_l_@exp1,f
  5022  1FF2                     l632:
  5023  1FF2  082D               	movf	__div_to_l_@exp1,w
  5024  1FF3  1D03               	btfss	3,2
  5025  1FF4  2FF6               	goto	u6511
  5026  1FF5  2FF7               	goto	u6510
  5027  1FF6                     u6511:
  5028  1FF6  2FE7               	goto	l4112
  5029  1FF7                     u6510:
  5030  1FF7                     l4114:
  5031  1FF7  082B               	movf	__div_to_l_@quot+3,w
  5032  1FF8  00A3               	movwf	?__div_to_l_+3
  5033  1FF9  082A               	movf	__div_to_l_@quot+2,w
  5034  1FFA  00A2               	movwf	?__div_to_l_+2
  5035  1FFB  0829               	movf	__div_to_l_@quot+1,w
  5036  1FFC  00A1               	movwf	?__div_to_l_+1
  5037  1FFD  0828               	movf	__div_to_l_@quot,w
  5038  1FFE  00A0               	movwf	?__div_to_l_
  5039  1FFF                     l621:
  5040  1FFF  0008               	return
  5041  2000                     __end_of__div_to_l_:
  5042                           
  5043                           	psect	text11
  5044  18A4                     __ptext11:	
  5045 ;; *************** function ___wmul *****************
  5046 ;; Defined at:
  5047 ;;		line 15 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5048 ;; Parameters:    Size  Location     Type
  5049 ;;  multiplier      2    3[COMMON] unsigned int 
  5050 ;;  multiplicand    2    5[COMMON] unsigned int 
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;  product         2    7[COMMON] unsigned int 
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  2    3[COMMON] unsigned int 
  5055 ;; Registers used:
  5056 ;;		wreg, status,2, status,0
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5062 ;;      Params:         4       0       0       0       0
  5063 ;;      Locals:         2       0       0       0       0
  5064 ;;      Temps:          0       0       0       0       0
  5065 ;;      Totals:         6       0       0       0       0
  5066 ;;Total ram usage:        6 bytes
  5067 ;; Hardware stack levels used:    1
  5068 ;; Hardware stack levels required when called:    2
  5069 ;; This function calls:
  5070 ;;		Nothing
  5071 ;; This function is called by:
  5072 ;;		_sprintf
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           
  5076                           
  5077                           ;psect for function ___wmul
  5078  18A4                     ___wmul:
  5079  18A4                     l3180:	
  5080                           ;incstack = 0
  5081                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5082                           
  5083  18A4  01F7               	clrf	___wmul@product
  5084  18A5  01F8               	clrf	___wmul@product+1
  5085  18A6                     l3182:
  5086  18A6  1C73               	btfss	___wmul@multiplier,0
  5087  18A7  28A9               	goto	u4691
  5088  18A8  28AA               	goto	u4690
  5089  18A9                     u4691:
  5090  18A9  28B0               	goto	l451
  5091  18AA                     u4690:
  5092  18AA                     l3184:
  5093  18AA  0875               	movf	___wmul@multiplicand,w
  5094  18AB  07F7               	addwf	___wmul@product,f
  5095  18AC  1803               	skipnc
  5096  18AD  0AF8               	incf	___wmul@product+1,f
  5097  18AE  0876               	movf	___wmul@multiplicand+1,w
  5098  18AF  07F8               	addwf	___wmul@product+1,f
  5099  18B0                     l451:
  5100  18B0  3001               	movlw	1
  5101  18B1                     u4705:
  5102  18B1  1003               	clrc
  5103  18B2  0DF5               	rlf	___wmul@multiplicand,f
  5104  18B3  0DF6               	rlf	___wmul@multiplicand+1,f
  5105  18B4  3EFF               	addlw	-1
  5106  18B5  1D03               	skipz
  5107  18B6  28B1               	goto	u4705
  5108  18B7                     l3186:
  5109  18B7  3001               	movlw	1
  5110  18B8                     u4715:
  5111  18B8  1003               	clrc
  5112  18B9  0CF4               	rrf	___wmul@multiplier+1,f
  5113  18BA  0CF3               	rrf	___wmul@multiplier,f
  5114  18BB  3EFF               	addlw	-1
  5115  18BC  1D03               	skipz
  5116  18BD  28B8               	goto	u4715
  5117  18BE                     l3188:
  5118  18BE  0873               	movf	___wmul@multiplier,w
  5119  18BF  0474               	iorwf	___wmul@multiplier+1,w
  5120  18C0  1D03               	btfss	3,2
  5121  18C1  28C3               	goto	u4721
  5122  18C2  28C4               	goto	u4720
  5123  18C3                     u4721:
  5124  18C3  28A6               	goto	l3182
  5125  18C4                     u4720:
  5126  18C4                     l3190:
  5127  18C4  0878               	movf	___wmul@product+1,w
  5128  18C5  00F4               	movwf	?___wmul+1
  5129  18C6  0877               	movf	___wmul@product,w
  5130  18C7  00F3               	movwf	?___wmul
  5131  18C8                     l453:
  5132  18C8  0008               	return
  5133  18C9                     __end_of___wmul:
  5134                           
  5135                           	psect	text12
  5136  1B4F                     __ptext12:	
  5137 ;; *************** function ___llmod *****************
  5138 ;; Defined at:
  5139 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;  divisor         4    8[BANK0 ] unsigned long 
  5142 ;;  dividend        4   12[BANK0 ] unsigned long 
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;  counter         1   17[BANK0 ] unsigned char 
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  4    8[BANK0 ] unsigned long 
  5147 ;; Registers used:
  5148 ;;		wreg, status,2, status,0
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5154 ;;      Params:         0       8       0       0       0
  5155 ;;      Locals:         0       1       0       0       0
  5156 ;;      Temps:          0       1       0       0       0
  5157 ;;      Totals:         0      10       0       0       0
  5158 ;;Total ram usage:       10 bytes
  5159 ;; Hardware stack levels used:    1
  5160 ;; Hardware stack levels required when called:    2
  5161 ;; This function calls:
  5162 ;;		Nothing
  5163 ;; This function is called by:
  5164 ;;		_sprintf
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           
  5169                           ;psect for function ___llmod
  5170  1B4F                     ___llmod:
  5171  1B4F                     l3294:	
  5172                           ;incstack = 0
  5173                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5174                           
  5175  1B4F  1283               	bcf	3,5	;RP0=0, select bank0
  5176  1B50  1303               	bcf	3,6	;RP1=0, select bank0
  5177  1B51  082B               	movf	___llmod@divisor+3,w
  5178  1B52  042A               	iorwf	___llmod@divisor+2,w
  5179  1B53  0429               	iorwf	___llmod@divisor+1,w
  5180  1B54  0428               	iorwf	___llmod@divisor,w
  5181  1B55  1903               	skipnz
  5182  1B56  2B58               	goto	u5011
  5183  1B57  2B59               	goto	u5010
  5184  1B58                     u5011:
  5185  1B58  2B9C               	goto	l3310
  5186  1B59                     u5010:
  5187  1B59                     l3296:
  5188  1B59  01B1               	clrf	___llmod@counter
  5189  1B5A  0AB1               	incf	___llmod@counter,f
  5190  1B5B  2B69               	goto	l3300
  5191  1B5C                     l3298:
  5192  1B5C  3001               	movlw	1
  5193  1B5D  00B0               	movwf	??___llmod
  5194  1B5E                     u5025:
  5195  1B5E  1003               	clrc
  5196  1B5F  0DA8               	rlf	___llmod@divisor,f
  5197  1B60  0DA9               	rlf	___llmod@divisor+1,f
  5198  1B61  0DAA               	rlf	___llmod@divisor+2,f
  5199  1B62  0DAB               	rlf	___llmod@divisor+3,f
  5200  1B63  0BB0               	decfsz	??___llmod,f
  5201  1B64  2B5E               	goto	u5025
  5202  1B65  3001               	movlw	1
  5203  1B66  00B0               	movwf	??___llmod
  5204  1B67  0830               	movf	??___llmod,w
  5205  1B68  07B1               	addwf	___llmod@counter,f
  5206  1B69                     l3300:
  5207  1B69  1FAB               	btfss	___llmod@divisor+3,7
  5208  1B6A  2B6C               	goto	u5031
  5209  1B6B  2B6D               	goto	u5030
  5210  1B6C                     u5031:
  5211  1B6C  2B5C               	goto	l3298
  5212  1B6D                     u5030:
  5213  1B6D                     l3302:
  5214  1B6D  082B               	movf	___llmod@divisor+3,w
  5215  1B6E  022F               	subwf	___llmod@dividend+3,w
  5216  1B6F  1D03               	skipz
  5217  1B70  2B7B               	goto	u5045
  5218  1B71  082A               	movf	___llmod@divisor+2,w
  5219  1B72  022E               	subwf	___llmod@dividend+2,w
  5220  1B73  1D03               	skipz
  5221  1B74  2B7B               	goto	u5045
  5222  1B75  0829               	movf	___llmod@divisor+1,w
  5223  1B76  022D               	subwf	___llmod@dividend+1,w
  5224  1B77  1D03               	skipz
  5225  1B78  2B7B               	goto	u5045
  5226  1B79  0828               	movf	___llmod@divisor,w
  5227  1B7A  022C               	subwf	___llmod@dividend,w
  5228  1B7B                     u5045:
  5229  1B7B  1C03               	skipc
  5230  1B7C  2B7E               	goto	u5041
  5231  1B7D  2B7F               	goto	u5040
  5232  1B7E                     u5041:
  5233  1B7E  2B8D               	goto	l3306
  5234  1B7F                     u5040:
  5235  1B7F                     l3304:
  5236  1B7F  0828               	movf	___llmod@divisor,w
  5237  1B80  02AC               	subwf	___llmod@dividend,f
  5238  1B81  0829               	movf	___llmod@divisor+1,w
  5239  1B82  1C03               	skipc
  5240  1B83  0F29               	incfsz	___llmod@divisor+1,w
  5241  1B84  02AD               	subwf	___llmod@dividend+1,f
  5242  1B85  082A               	movf	___llmod@divisor+2,w
  5243  1B86  1C03               	skipc
  5244  1B87  0F2A               	incfsz	___llmod@divisor+2,w
  5245  1B88  02AE               	subwf	___llmod@dividend+2,f
  5246  1B89  082B               	movf	___llmod@divisor+3,w
  5247  1B8A  1C03               	skipc
  5248  1B8B  0F2B               	incfsz	___llmod@divisor+3,w
  5249  1B8C  02AF               	subwf	___llmod@dividend+3,f
  5250  1B8D                     l3306:
  5251  1B8D  3001               	movlw	1
  5252  1B8E                     u5055:
  5253  1B8E  1003               	clrc
  5254  1B8F  0CAB               	rrf	___llmod@divisor+3,f
  5255  1B90  0CAA               	rrf	___llmod@divisor+2,f
  5256  1B91  0CA9               	rrf	___llmod@divisor+1,f
  5257  1B92  0CA8               	rrf	___llmod@divisor,f
  5258  1B93  3EFF               	addlw	-1
  5259  1B94  1D03               	skipz
  5260  1B95  2B8E               	goto	u5055
  5261  1B96                     l3308:
  5262  1B96  3001               	movlw	1
  5263  1B97  02B1               	subwf	___llmod@counter,f
  5264  1B98  1D03               	btfss	3,2
  5265  1B99  2B9B               	goto	u5061
  5266  1B9A  2B9C               	goto	u5060
  5267  1B9B                     u5061:
  5268  1B9B  2B6D               	goto	l3302
  5269  1B9C                     u5060:
  5270  1B9C                     l3310:
  5271  1B9C  082F               	movf	___llmod@dividend+3,w
  5272  1B9D  00AB               	movwf	?___llmod+3
  5273  1B9E  082E               	movf	___llmod@dividend+2,w
  5274  1B9F  00AA               	movwf	?___llmod+2
  5275  1BA0  082D               	movf	___llmod@dividend+1,w
  5276  1BA1  00A9               	movwf	?___llmod+1
  5277  1BA2  082C               	movf	___llmod@dividend,w
  5278  1BA3  00A8               	movwf	?___llmod
  5279  1BA4                     l707:
  5280  1BA4  0008               	return
  5281  1BA5                     __end_of___llmod:
  5282                           
  5283                           	psect	text13
  5284  1BA5                     __ptext13:	
  5285 ;; *************** function ___lldiv *****************
  5286 ;; Defined at:
  5287 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;  divisor         4    0[BANK0 ] unsigned long 
  5290 ;;  dividend        4    4[BANK0 ] unsigned long 
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;  quotient        4    4[COMMON] unsigned long 
  5293 ;;  counter         1    8[COMMON] unsigned char 
  5294 ;; Return value:  Size  Location     Type
  5295 ;;                  4    0[BANK0 ] unsigned long 
  5296 ;; Registers used:
  5297 ;;		wreg, status,2, status,0
  5298 ;; Tracked objects:
  5299 ;;		On entry : 0/0
  5300 ;;		On exit  : 0/0
  5301 ;;		Unchanged: 0/0
  5302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5303 ;;      Params:         0       8       0       0       0
  5304 ;;      Locals:         5       0       0       0       0
  5305 ;;      Temps:          1       0       0       0       0
  5306 ;;      Totals:         6       8       0       0       0
  5307 ;;Total ram usage:       14 bytes
  5308 ;; Hardware stack levels used:    1
  5309 ;; Hardware stack levels required when called:    2
  5310 ;; This function calls:
  5311 ;;		Nothing
  5312 ;; This function is called by:
  5313 ;;		_sprintf
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           
  5318                           ;psect for function ___lldiv
  5319  1BA5                     ___lldiv:
  5320  1BA5                     l4118:	
  5321                           ;incstack = 0
  5322                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5323                           
  5324  1BA5  3000               	movlw	0
  5325  1BA6  00F7               	movwf	___lldiv@quotient+3
  5326  1BA7  3000               	movlw	0
  5327  1BA8  00F6               	movwf	___lldiv@quotient+2
  5328  1BA9  3000               	movlw	0
  5329  1BAA  00F5               	movwf	___lldiv@quotient+1
  5330  1BAB  3000               	movlw	0
  5331  1BAC  00F4               	movwf	___lldiv@quotient
  5332  1BAD  1283               	bcf	3,5	;RP0=0, select bank0
  5333  1BAE  1303               	bcf	3,6	;RP1=0, select bank0
  5334  1BAF  0823               	movf	___lldiv@divisor+3,w
  5335  1BB0  0422               	iorwf	___lldiv@divisor+2,w
  5336  1BB1  0421               	iorwf	___lldiv@divisor+1,w
  5337  1BB2  0420               	iorwf	___lldiv@divisor,w
  5338  1BB3  1903               	skipnz
  5339  1BB4  2BB6               	goto	u6521
  5340  1BB5  2BB7               	goto	u6520
  5341  1BB6                     u6521:
  5342  1BB6  2C04               	goto	l4138
  5343  1BB7                     u6520:
  5344  1BB7                     l4120:
  5345  1BB7  01F8               	clrf	___lldiv@counter
  5346  1BB8  0AF8               	incf	___lldiv@counter,f
  5347  1BB9  2BC7               	goto	l4124
  5348  1BBA                     l4122:
  5349  1BBA  3001               	movlw	1
  5350  1BBB  00F3               	movwf	??___lldiv
  5351  1BBC                     u6535:
  5352  1BBC  1003               	clrc
  5353  1BBD  0DA0               	rlf	___lldiv@divisor,f
  5354  1BBE  0DA1               	rlf	___lldiv@divisor+1,f
  5355  1BBF  0DA2               	rlf	___lldiv@divisor+2,f
  5356  1BC0  0DA3               	rlf	___lldiv@divisor+3,f
  5357  1BC1  0BF3               	decfsz	??___lldiv,f
  5358  1BC2  2BBC               	goto	u6535
  5359  1BC3  3001               	movlw	1
  5360  1BC4  00F3               	movwf	??___lldiv
  5361  1BC5  0873               	movf	??___lldiv,w
  5362  1BC6  07F8               	addwf	___lldiv@counter,f
  5363  1BC7                     l4124:
  5364  1BC7  1FA3               	btfss	___lldiv@divisor+3,7
  5365  1BC8  2BCA               	goto	u6541
  5366  1BC9  2BCB               	goto	u6540
  5367  1BCA                     u6541:
  5368  1BCA  2BBA               	goto	l4122
  5369  1BCB                     u6540:
  5370  1BCB                     l4126:
  5371  1BCB  3001               	movlw	1
  5372  1BCC  00F3               	movwf	??___lldiv
  5373  1BCD                     u6555:
  5374  1BCD  1003               	clrc
  5375  1BCE  0DF4               	rlf	___lldiv@quotient,f
  5376  1BCF  0DF5               	rlf	___lldiv@quotient+1,f
  5377  1BD0  0DF6               	rlf	___lldiv@quotient+2,f
  5378  1BD1  0DF7               	rlf	___lldiv@quotient+3,f
  5379  1BD2  0BF3               	decfsz	??___lldiv,f
  5380  1BD3  2BCD               	goto	u6555
  5381  1BD4                     l4128:
  5382  1BD4  0823               	movf	___lldiv@divisor+3,w
  5383  1BD5  0227               	subwf	___lldiv@dividend+3,w
  5384  1BD6  1D03               	skipz
  5385  1BD7  2BE2               	goto	u6565
  5386  1BD8  0822               	movf	___lldiv@divisor+2,w
  5387  1BD9  0226               	subwf	___lldiv@dividend+2,w
  5388  1BDA  1D03               	skipz
  5389  1BDB  2BE2               	goto	u6565
  5390  1BDC  0821               	movf	___lldiv@divisor+1,w
  5391  1BDD  0225               	subwf	___lldiv@dividend+1,w
  5392  1BDE  1D03               	skipz
  5393  1BDF  2BE2               	goto	u6565
  5394  1BE0  0820               	movf	___lldiv@divisor,w
  5395  1BE1  0224               	subwf	___lldiv@dividend,w
  5396  1BE2                     u6565:
  5397  1BE2  1C03               	skipc
  5398  1BE3  2BE5               	goto	u6561
  5399  1BE4  2BE6               	goto	u6560
  5400  1BE5                     u6561:
  5401  1BE5  2BF5               	goto	l4134
  5402  1BE6                     u6560:
  5403  1BE6                     l4130:
  5404  1BE6  0820               	movf	___lldiv@divisor,w
  5405  1BE7  02A4               	subwf	___lldiv@dividend,f
  5406  1BE8  0821               	movf	___lldiv@divisor+1,w
  5407  1BE9  1C03               	skipc
  5408  1BEA  0F21               	incfsz	___lldiv@divisor+1,w
  5409  1BEB  02A5               	subwf	___lldiv@dividend+1,f
  5410  1BEC  0822               	movf	___lldiv@divisor+2,w
  5411  1BED  1C03               	skipc
  5412  1BEE  0F22               	incfsz	___lldiv@divisor+2,w
  5413  1BEF  02A6               	subwf	___lldiv@dividend+2,f
  5414  1BF0  0823               	movf	___lldiv@divisor+3,w
  5415  1BF1  1C03               	skipc
  5416  1BF2  0F23               	incfsz	___lldiv@divisor+3,w
  5417  1BF3  02A7               	subwf	___lldiv@dividend+3,f
  5418  1BF4                     l4132:
  5419  1BF4  1474               	bsf	___lldiv@quotient,0
  5420  1BF5                     l4134:
  5421  1BF5  3001               	movlw	1
  5422  1BF6                     u6575:
  5423  1BF6  1003               	clrc
  5424  1BF7  0CA3               	rrf	___lldiv@divisor+3,f
  5425  1BF8  0CA2               	rrf	___lldiv@divisor+2,f
  5426  1BF9  0CA1               	rrf	___lldiv@divisor+1,f
  5427  1BFA  0CA0               	rrf	___lldiv@divisor,f
  5428  1BFB  3EFF               	addlw	-1
  5429  1BFC  1D03               	skipz
  5430  1BFD  2BF6               	goto	u6575
  5431  1BFE                     l4136:
  5432  1BFE  3001               	movlw	1
  5433  1BFF  02F8               	subwf	___lldiv@counter,f
  5434  1C00  1D03               	btfss	3,2
  5435  1C01  2C03               	goto	u6581
  5436  1C02  2C04               	goto	u6580
  5437  1C03                     u6581:
  5438  1C03  2BCB               	goto	l4126
  5439  1C04                     u6580:
  5440  1C04                     l4138:
  5441  1C04  0877               	movf	___lldiv@quotient+3,w
  5442  1C05  00A3               	movwf	?___lldiv+3
  5443  1C06  0876               	movf	___lldiv@quotient+2,w
  5444  1C07  00A2               	movwf	?___lldiv+2
  5445  1C08  0875               	movf	___lldiv@quotient+1,w
  5446  1C09  00A1               	movwf	?___lldiv+1
  5447  1C0A  0874               	movf	___lldiv@quotient,w
  5448  1C0B  00A0               	movwf	?___lldiv
  5449  1C0C                     l487:
  5450  1C0C  0008               	return
  5451  1C0D                     __end_of___lldiv:
  5452                           
  5453                           	psect	text14
  5454  1C0D                     __ptext14:	
  5455 ;; *************** function ___fltol *****************
  5456 ;; Defined at:
  5457 ;;		line 43 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  f1              4   55[BANK0 ] unsigned long 
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;  exp1            1   65[BANK0 ] unsigned char 
  5462 ;;  sign1           1   64[BANK0 ] unsigned char 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  4   55[BANK0 ] long 
  5465 ;; Registers used:
  5466 ;;		wreg, status,2, status,0
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5472 ;;      Params:         0       4       0       0       0
  5473 ;;      Locals:         0       2       0       0       0
  5474 ;;      Temps:          0       5       0       0       0
  5475 ;;      Totals:         0      11       0       0       0
  5476 ;;Total ram usage:       11 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; Hardware stack levels required when called:    2
  5479 ;; This function calls:
  5480 ;;		Nothing
  5481 ;; This function is called by:
  5482 ;;		_sprintf
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486                           
  5487                           ;psect for function ___fltol
  5488  1C0D                     ___fltol:
  5489  1C0D                     l3258:	
  5490                           ;incstack = 0
  5491                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5492                           
  5493  1C0D  1003               	clrc
  5494  1C0E  1283               	bcf	3,5	;RP0=0, select bank0
  5495  1C0F  1303               	bcf	3,6	;RP1=0, select bank0
  5496  1C10  0D59               	rlf	___fltol@f1+2,w
  5497  1C11  0D5A               	rlf	___fltol@f1+3,w
  5498  1C12  00DB               	movwf	??___fltol
  5499  1C13  085B               	movf	??___fltol,w
  5500  1C14  00E1               	movwf	___fltol@exp1
  5501  1C15  0861               	movf	___fltol@exp1,w
  5502  1C16  1D03               	btfss	3,2
  5503  1C17  2C19               	goto	u4911
  5504  1C18  2C1A               	goto	u4910
  5505  1C19                     u4911:
  5506  1C19  2C23               	goto	l3264
  5507  1C1A                     u4910:
  5508  1C1A                     l3260:
  5509  1C1A  3000               	movlw	0
  5510  1C1B  00DA               	movwf	?___fltol+3
  5511  1C1C  3000               	movlw	0
  5512  1C1D  00D9               	movwf	?___fltol+2
  5513  1C1E  3000               	movlw	0
  5514  1C1F  00D8               	movwf	?___fltol+1
  5515  1C20  3000               	movlw	0
  5516  1C21  00D7               	movwf	?___fltol
  5517  1C22  2C88               	goto	l654
  5518  1C23                     l3264:
  5519  1C23  0857               	movf	___fltol@f1,w
  5520  1C24  00DB               	movwf	??___fltol
  5521  1C25  0858               	movf	___fltol@f1+1,w
  5522  1C26  00DC               	movwf	??___fltol+1
  5523  1C27  0859               	movf	___fltol@f1+2,w
  5524  1C28  00DD               	movwf	??___fltol+2
  5525  1C29  085A               	movf	___fltol@f1+3,w
  5526  1C2A  00DE               	movwf	??___fltol+3
  5527  1C2B  301F               	movlw	31
  5528  1C2C                     u4925:
  5529  1C2C  1003               	clrc
  5530  1C2D  0CDE               	rrf	??___fltol+3,f
  5531  1C2E  0CDD               	rrf	??___fltol+2,f
  5532  1C2F  0CDC               	rrf	??___fltol+1,f
  5533  1C30  0CDB               	rrf	??___fltol,f
  5534  1C31                     u4920:
  5535  1C31  3EFF               	addlw	-1
  5536  1C32  1D03               	skipz
  5537  1C33  2C2C               	goto	u4925
  5538  1C34  085B               	movf	??___fltol,w
  5539  1C35  00DF               	movwf	??___fltol+4
  5540  1C36  085F               	movf	??___fltol+4,w
  5541  1C37  00E0               	movwf	___fltol@sign1
  5542  1C38                     l3266:
  5543  1C38  17D9               	bsf	___fltol@f1+2,7
  5544  1C39                     l3268:
  5545  1C39  30FF               	movlw	255
  5546  1C3A  05D7               	andwf	___fltol@f1,f
  5547  1C3B  30FF               	movlw	255
  5548  1C3C  05D8               	andwf	___fltol@f1+1,f
  5549  1C3D  30FF               	movlw	255
  5550  1C3E  05D9               	andwf	___fltol@f1+2,f
  5551  1C3F  3000               	movlw	0
  5552  1C40  05DA               	andwf	___fltol@f1+3,f
  5553  1C41                     l3270:
  5554  1C41  3096               	movlw	150
  5555  1C42  02E1               	subwf	___fltol@exp1,f
  5556  1C43                     l3272:
  5557  1C43  1FE1               	btfss	___fltol@exp1,7
  5558  1C44  2C46               	goto	u4931
  5559  1C45  2C47               	goto	u4930
  5560  1C46                     u4931:
  5561  1C46  2C61               	goto	l3282
  5562  1C47                     u4930:
  5563  1C47                     l3274:
  5564  1C47  0861               	movf	___fltol@exp1,w
  5565  1C48  3A80               	xorlw	128
  5566  1C49  3E97               	addlw	151
  5567  1C4A  1803               	skipnc
  5568  1C4B  2C4D               	goto	u4941
  5569  1C4C  2C4E               	goto	u4940
  5570  1C4D                     u4941:
  5571  1C4D  2C4F               	goto	l3280
  5572  1C4E                     u4940:
  5573  1C4E  2C1A               	goto	l3260
  5574  1C4F                     l3280:
  5575  1C4F  3001               	movlw	1
  5576  1C50                     u4955:
  5577  1C50  1003               	clrc
  5578  1C51  0CDA               	rrf	___fltol@f1+3,f
  5579  1C52  0CD9               	rrf	___fltol@f1+2,f
  5580  1C53  0CD8               	rrf	___fltol@f1+1,f
  5581  1C54  0CD7               	rrf	___fltol@f1,f
  5582  1C55  3EFF               	addlw	-1
  5583  1C56  1D03               	skipz
  5584  1C57  2C50               	goto	u4955
  5585  1C58  3001               	movlw	1
  5586  1C59  00DB               	movwf	??___fltol
  5587  1C5A  085B               	movf	??___fltol,w
  5588  1C5B  07E1               	addwf	___fltol@exp1,f
  5589  1C5C  1D03               	btfss	3,2
  5590  1C5D  2C5F               	goto	u4961
  5591  1C5E  2C60               	goto	u4960
  5592  1C5F                     u4961:
  5593  1C5F  2C4F               	goto	l3280
  5594  1C60                     u4960:
  5595  1C60  2C78               	goto	l3290
  5596  1C61                     l3282:
  5597  1C61  3020               	movlw	32
  5598  1C62  0261               	subwf	___fltol@exp1,w
  5599  1C63  1C03               	skipc
  5600  1C64  2C66               	goto	u4971
  5601  1C65  2C67               	goto	u4970
  5602  1C66                     u4971:
  5603  1C66  2C73               	goto	l661
  5604  1C67                     u4970:
  5605  1C67  2C1A               	goto	l3260
  5606  1C68                     l3288:
  5607  1C68  3001               	movlw	1
  5608  1C69  00DB               	movwf	??___fltol
  5609  1C6A                     u4985:
  5610  1C6A  1003               	clrc
  5611  1C6B  0DD7               	rlf	___fltol@f1,f
  5612  1C6C  0DD8               	rlf	___fltol@f1+1,f
  5613  1C6D  0DD9               	rlf	___fltol@f1+2,f
  5614  1C6E  0DDA               	rlf	___fltol@f1+3,f
  5615  1C6F  0BDB               	decfsz	??___fltol,f
  5616  1C70  2C6A               	goto	u4985
  5617  1C71  3001               	movlw	1
  5618  1C72  02E1               	subwf	___fltol@exp1,f
  5619  1C73                     l661:
  5620  1C73  0861               	movf	___fltol@exp1,w
  5621  1C74  1D03               	btfss	3,2
  5622  1C75  2C77               	goto	u4991
  5623  1C76  2C78               	goto	u4990
  5624  1C77                     u4991:
  5625  1C77  2C68               	goto	l3288
  5626  1C78                     u4990:
  5627  1C78                     l3290:
  5628  1C78  0860               	movf	___fltol@sign1,w
  5629  1C79  1903               	btfsc	3,2
  5630  1C7A  2C7C               	goto	u5001
  5631  1C7B  2C7D               	goto	u5000
  5632  1C7C                     u5001:
  5633  1C7C  2C88               	goto	l664
  5634  1C7D                     u5000:
  5635  1C7D                     l3292:
  5636  1C7D  09D7               	comf	___fltol@f1,f
  5637  1C7E  09D8               	comf	___fltol@f1+1,f
  5638  1C7F  09D9               	comf	___fltol@f1+2,f
  5639  1C80  09DA               	comf	___fltol@f1+3,f
  5640  1C81  0AD7               	incf	___fltol@f1,f
  5641  1C82  1903               	skipnz
  5642  1C83  0AD8               	incf	___fltol@f1+1,f
  5643  1C84  1903               	skipnz
  5644  1C85  0AD9               	incf	___fltol@f1+2,f
  5645  1C86  1903               	skipnz
  5646  1C87  0ADA               	incf	___fltol@f1+3,f
  5647  1C88                     l664:
  5648  1C88                     l654:
  5649  1C88  0008               	return
  5650  1C89                     __end_of___fltol:
  5651                           
  5652                           	psect	text15
  5653  1AFF                     __ptext15:	
  5654 ;; *************** function ___flsub *****************
  5655 ;; Defined at:
  5656 ;;		line 242 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  a               4    0[BANK1 ] long 
  5659 ;;  b               4    4[BANK1 ] long 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;		None
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  4    0[BANK1 ] long 
  5664 ;; Registers used:
  5665 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5671 ;;      Params:         0       0       8       0       0
  5672 ;;      Locals:         0       0       0       0       0
  5673 ;;      Temps:          0       0       0       0       0
  5674 ;;      Totals:         0       0       8       0       0
  5675 ;;Total ram usage:        8 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:    3
  5678 ;; This function calls:
  5679 ;;		___fladd
  5680 ;; This function is called by:
  5681 ;;		_sprintf
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           
  5686                           ;psect for function ___flsub
  5687  1AFF                     ___flsub:
  5688  1AFF                     l3314:	
  5689                           ;incstack = 0
  5690                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5691                           
  5692  1AFF  3080               	movlw	128
  5693  1B00  1683               	bsf	3,5	;RP0=1, select bank1
  5694  1B01  1303               	bcf	3,6	;RP1=0, select bank1
  5695  1B02  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5696  1B03                     l3316:
  5697  1B03  0827               	movf	(___flsub@b+3)^(0+128),w
  5698  1B04  1283               	bcf	3,5	;RP0=0, select bank0
  5699  1B05  1303               	bcf	3,6	;RP1=0, select bank0
  5700  1B06  00DB               	movwf	___fladd@b+3
  5701  1B07  1683               	bsf	3,5	;RP0=1, select bank1
  5702  1B08  1303               	bcf	3,6	;RP1=0, select bank1
  5703  1B09  0826               	movf	(___flsub@b+2)^(0+128),w
  5704  1B0A  1283               	bcf	3,5	;RP0=0, select bank0
  5705  1B0B  1303               	bcf	3,6	;RP1=0, select bank0
  5706  1B0C  00DA               	movwf	___fladd@b+2
  5707  1B0D  1683               	bsf	3,5	;RP0=1, select bank1
  5708  1B0E  1303               	bcf	3,6	;RP1=0, select bank1
  5709  1B0F  0825               	movf	(___flsub@b+1)^(0+128),w
  5710  1B10  1283               	bcf	3,5	;RP0=0, select bank0
  5711  1B11  1303               	bcf	3,6	;RP1=0, select bank0
  5712  1B12  00D9               	movwf	___fladd@b+1
  5713  1B13  1683               	bsf	3,5	;RP0=1, select bank1
  5714  1B14  1303               	bcf	3,6	;RP1=0, select bank1
  5715  1B15  0824               	movf	___flsub@b^(0+128),w
  5716  1B16  1283               	bcf	3,5	;RP0=0, select bank0
  5717  1B17  1303               	bcf	3,6	;RP1=0, select bank0
  5718  1B18  00D8               	movwf	___fladd@b
  5719  1B19  1683               	bsf	3,5	;RP0=1, select bank1
  5720  1B1A  1303               	bcf	3,6	;RP1=0, select bank1
  5721  1B1B  0823               	movf	(___flsub@a+3)^(0+128),w
  5722  1B1C  1283               	bcf	3,5	;RP0=0, select bank0
  5723  1B1D  1303               	bcf	3,6	;RP1=0, select bank0
  5724  1B1E  00DF               	movwf	___fladd@a+3
  5725  1B1F  1683               	bsf	3,5	;RP0=1, select bank1
  5726  1B20  1303               	bcf	3,6	;RP1=0, select bank1
  5727  1B21  0822               	movf	(___flsub@a+2)^(0+128),w
  5728  1B22  1283               	bcf	3,5	;RP0=0, select bank0
  5729  1B23  1303               	bcf	3,6	;RP1=0, select bank0
  5730  1B24  00DE               	movwf	___fladd@a+2
  5731  1B25  1683               	bsf	3,5	;RP0=1, select bank1
  5732  1B26  1303               	bcf	3,6	;RP1=0, select bank1
  5733  1B27  0821               	movf	(___flsub@a+1)^(0+128),w
  5734  1B28  1283               	bcf	3,5	;RP0=0, select bank0
  5735  1B29  1303               	bcf	3,6	;RP1=0, select bank0
  5736  1B2A  00DD               	movwf	___fladd@a+1
  5737  1B2B  1683               	bsf	3,5	;RP0=1, select bank1
  5738  1B2C  1303               	bcf	3,6	;RP1=0, select bank1
  5739  1B2D  0820               	movf	___flsub@a^(0+128),w
  5740  1B2E  1283               	bcf	3,5	;RP0=0, select bank0
  5741  1B2F  1303               	bcf	3,6	;RP1=0, select bank0
  5742  1B30  00DC               	movwf	___fladd@a
  5743  1B31  160A  118A  226E  160A  158A  	fcall	___fladd
  5744  1B36  1283               	bcf	3,5	;RP0=0, select bank0
  5745  1B37  1303               	bcf	3,6	;RP1=0, select bank0
  5746  1B38  085B               	movf	?___fladd+3,w
  5747  1B39  1683               	bsf	3,5	;RP0=1, select bank1
  5748  1B3A  1303               	bcf	3,6	;RP1=0, select bank1
  5749  1B3B  00A3               	movwf	(?___flsub+3)^(0+128)
  5750  1B3C  1283               	bcf	3,5	;RP0=0, select bank0
  5751  1B3D  1303               	bcf	3,6	;RP1=0, select bank0
  5752  1B3E  085A               	movf	?___fladd+2,w
  5753  1B3F  1683               	bsf	3,5	;RP0=1, select bank1
  5754  1B40  1303               	bcf	3,6	;RP1=0, select bank1
  5755  1B41  00A2               	movwf	(?___flsub+2)^(0+128)
  5756  1B42  1283               	bcf	3,5	;RP0=0, select bank0
  5757  1B43  1303               	bcf	3,6	;RP1=0, select bank0
  5758  1B44  0859               	movf	?___fladd+1,w
  5759  1B45  1683               	bsf	3,5	;RP0=1, select bank1
  5760  1B46  1303               	bcf	3,6	;RP1=0, select bank1
  5761  1B47  00A1               	movwf	(?___flsub+1)^(0+128)
  5762  1B48  1283               	bcf	3,5	;RP0=0, select bank0
  5763  1B49  1303               	bcf	3,6	;RP1=0, select bank0
  5764  1B4A  0858               	movf	?___fladd,w
  5765  1B4B  1683               	bsf	3,5	;RP0=1, select bank1
  5766  1B4C  1303               	bcf	3,6	;RP1=0, select bank1
  5767  1B4D  00A0               	movwf	?___flsub^(0+128)
  5768  1B4E                     l824:
  5769  1B4E  0008               	return
  5770  1B4F                     __end_of___flsub:
  5771                           
  5772                           	psect	text16
  5773  126E                     __ptext16:	
  5774 ;; *************** function ___fladd *****************
  5775 ;; Defined at:
  5776 ;;		line 10 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  b               4   56[BANK0 ] long 
  5779 ;;  a               4   60[BANK0 ] long 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  grs             1   75[BANK0 ] unsigned char 
  5782 ;;  bexp            1   74[BANK0 ] unsigned char 
  5783 ;;  aexp            1   73[BANK0 ] unsigned char 
  5784 ;;  signs           1   72[BANK0 ] unsigned char 
  5785 ;; Return value:  Size  Location     Type
  5786 ;;                  4   56[BANK0 ] unsigned char 
  5787 ;; Registers used:
  5788 ;;		wreg, status,2, status,0, btemp+1
  5789 ;; Tracked objects:
  5790 ;;		On entry : 0/0
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5794 ;;      Params:         0       8       0       0       0
  5795 ;;      Locals:         0       4       0       0       0
  5796 ;;      Temps:          0       8       0       0       0
  5797 ;;      Totals:         0      20       0       0       0
  5798 ;;Total ram usage:       20 bytes
  5799 ;; Hardware stack levels used:    1
  5800 ;; Hardware stack levels required when called:    2
  5801 ;; This function calls:
  5802 ;;		Nothing
  5803 ;; This function is called by:
  5804 ;;		_sprintf
  5805 ;;		___flsub
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809                           
  5810                           ;psect for function ___fladd
  5811  126E                     ___fladd:
  5812  126E                     l2604:	
  5813                           ;incstack = 0
  5814                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5815                           
  5816  126E  1283               	bcf	3,5	;RP0=0, select bank0
  5817  126F  1303               	bcf	3,6	;RP1=0, select bank0
  5818  1270  085B               	movf	___fladd@b+3,w
  5819  1271  3980               	andlw	128
  5820  1272  00E0               	movwf	??___fladd
  5821  1273  0860               	movf	??___fladd,w
  5822  1274  00E8               	movwf	___fladd@signs
  5823  1275                     l2606:
  5824  1275  085B               	movf	___fladd@b+3,w
  5825  1276  00E0               	movwf	??___fladd
  5826  1277  0760               	addwf	??___fladd,w
  5827  1278  00E1               	movwf	??___fladd+1
  5828  1279  0861               	movf	??___fladd+1,w
  5829  127A  00EA               	movwf	___fladd@bexp
  5830  127B                     l2608:
  5831  127B  1FDA               	btfss	___fladd@b+2,7
  5832  127C  2A7E               	goto	u3321
  5833  127D  2A7F               	goto	u3320
  5834  127E                     u3321:
  5835  127E  2A80               	goto	l2612
  5836  127F                     u3320:
  5837  127F                     l2610:
  5838  127F  146A               	bsf	___fladd@bexp,0
  5839  1280                     l2612:
  5840  1280  086A               	movf	___fladd@bexp,w
  5841  1281  1903               	btfsc	3,2
  5842  1282  2A84               	goto	u3331
  5843  1283  2A85               	goto	u3330
  5844  1284                     u3331:
  5845  1284  2A95               	goto	l2622
  5846  1285                     u3330:
  5847  1285                     l2614:
  5848  1285  0A6A               	incf	___fladd@bexp,w
  5849  1286  1D03               	btfss	3,2
  5850  1287  2A89               	goto	u3341
  5851  1288  2A8A               	goto	u3340
  5852  1289                     u3341:
  5853  1289  2A92               	goto	l2618
  5854  128A                     u3340:
  5855  128A                     l2616:
  5856  128A  3000               	movlw	0
  5857  128B  00DB               	movwf	___fladd@b+3
  5858  128C  3000               	movlw	0
  5859  128D  00DA               	movwf	___fladd@b+2
  5860  128E  3000               	movlw	0
  5861  128F  00D9               	movwf	___fladd@b+1
  5862  1290  3000               	movlw	0
  5863  1291  00D8               	movwf	___fladd@b
  5864  1292                     l2618:
  5865  1292  17DA               	bsf	___fladd@b+2,7
  5866  1293                     l2620:
  5867  1293  01DB               	clrf	___fladd@b+3
  5868  1294  2A9D               	goto	l2624
  5869  1295                     l2622:
  5870  1295  3000               	movlw	0
  5871  1296  00DB               	movwf	___fladd@b+3
  5872  1297  3000               	movlw	0
  5873  1298  00DA               	movwf	___fladd@b+2
  5874  1299  3000               	movlw	0
  5875  129A  00D9               	movwf	___fladd@b+1
  5876  129B  3000               	movlw	0
  5877  129C  00D8               	movwf	___fladd@b
  5878  129D                     l2624:
  5879  129D  085F               	movf	___fladd@a+3,w
  5880  129E  3980               	andlw	128
  5881  129F  00E0               	movwf	??___fladd
  5882  12A0  0860               	movf	??___fladd,w
  5883  12A1  00E9               	movwf	___fladd@aexp
  5884  12A2                     l2626:
  5885  12A2  0869               	movf	___fladd@aexp,w
  5886  12A3  0668               	xorwf	___fladd@signs,w
  5887  12A4  1903               	skipnz
  5888  12A5  2AA7               	goto	u3351
  5889  12A6  2AA8               	goto	u3350
  5890  12A7                     u3351:
  5891  12A7  2AA9               	goto	l2630
  5892  12A8                     u3350:
  5893  12A8                     l2628:
  5894  12A8  1768               	bsf	___fladd@signs,6
  5895  12A9                     l2630:
  5896  12A9  085F               	movf	___fladd@a+3,w
  5897  12AA  00E0               	movwf	??___fladd
  5898  12AB  0760               	addwf	??___fladd,w
  5899  12AC  00E1               	movwf	??___fladd+1
  5900  12AD  0861               	movf	??___fladd+1,w
  5901  12AE  00E9               	movwf	___fladd@aexp
  5902  12AF                     l2632:
  5903  12AF  1FDE               	btfss	___fladd@a+2,7
  5904  12B0  2AB2               	goto	u3361
  5905  12B1  2AB3               	goto	u3360
  5906  12B2                     u3361:
  5907  12B2  2AB4               	goto	l2636
  5908  12B3                     u3360:
  5909  12B3                     l2634:
  5910  12B3  1469               	bsf	___fladd@aexp,0
  5911  12B4                     l2636:
  5912  12B4  0869               	movf	___fladd@aexp,w
  5913  12B5  1903               	btfsc	3,2
  5914  12B6  2AB8               	goto	u3371
  5915  12B7  2AB9               	goto	u3370
  5916  12B8                     u3371:
  5917  12B8  2AC9               	goto	l2646
  5918  12B9                     u3370:
  5919  12B9                     l2638:
  5920  12B9  0A69               	incf	___fladd@aexp,w
  5921  12BA  1D03               	btfss	3,2
  5922  12BB  2ABD               	goto	u3381
  5923  12BC  2ABE               	goto	u3380
  5924  12BD                     u3381:
  5925  12BD  2AC6               	goto	l2642
  5926  12BE                     u3380:
  5927  12BE                     l2640:
  5928  12BE  3000               	movlw	0
  5929  12BF  00DF               	movwf	___fladd@a+3
  5930  12C0  3000               	movlw	0
  5931  12C1  00DE               	movwf	___fladd@a+2
  5932  12C2  3000               	movlw	0
  5933  12C3  00DD               	movwf	___fladd@a+1
  5934  12C4  3000               	movlw	0
  5935  12C5  00DC               	movwf	___fladd@a
  5936  12C6                     l2642:
  5937  12C6  17DE               	bsf	___fladd@a+2,7
  5938  12C7                     l2644:
  5939  12C7  01DF               	clrf	___fladd@a+3
  5940  12C8  2AD1               	goto	l778
  5941  12C9                     l2646:
  5942  12C9  3000               	movlw	0
  5943  12CA  00DF               	movwf	___fladd@a+3
  5944  12CB  3000               	movlw	0
  5945  12CC  00DE               	movwf	___fladd@a+2
  5946  12CD  3000               	movlw	0
  5947  12CE  00DD               	movwf	___fladd@a+1
  5948  12CF  3000               	movlw	0
  5949  12D0  00DC               	movwf	___fladd@a
  5950  12D1                     l778:
  5951  12D1  086A               	movf	___fladd@bexp,w
  5952  12D2  0269               	subwf	___fladd@aexp,w
  5953  12D3  1803               	skipnc
  5954  12D4  2AD6               	goto	u3391
  5955  12D5  2AD7               	goto	u3390
  5956  12D6                     u3391:
  5957  12D6  2B1B               	goto	l2682
  5958  12D7                     u3390:
  5959  12D7                     l2648:
  5960  12D7  1F68               	btfss	___fladd@signs,6
  5961  12D8  2ADA               	goto	u3401
  5962  12D9  2ADB               	goto	u3400
  5963  12DA                     u3401:
  5964  12DA  2ADF               	goto	l2652
  5965  12DB                     u3400:
  5966  12DB                     l2650:
  5967  12DB  3080               	movlw	128
  5968  12DC  00E0               	movwf	??___fladd
  5969  12DD  0860               	movf	??___fladd,w
  5970  12DE  06E8               	xorwf	___fladd@signs,f
  5971  12DF                     l2652:
  5972  12DF  086A               	movf	___fladd@bexp,w
  5973  12E0  00E0               	movwf	??___fladd
  5974  12E1  0860               	movf	??___fladd,w
  5975  12E2  00EB               	movwf	___fladd@grs
  5976  12E3                     l2654:
  5977  12E3  0869               	movf	___fladd@aexp,w
  5978  12E4  00E0               	movwf	??___fladd
  5979  12E5  0860               	movf	??___fladd,w
  5980  12E6  00EA               	movwf	___fladd@bexp
  5981  12E7                     l2656:
  5982  12E7  086B               	movf	___fladd@grs,w
  5983  12E8  00E0               	movwf	??___fladd
  5984  12E9  0860               	movf	??___fladd,w
  5985  12EA  00E9               	movwf	___fladd@aexp
  5986  12EB                     l2658:
  5987  12EB  0858               	movf	___fladd@b,w
  5988  12EC  00E0               	movwf	??___fladd
  5989  12ED  0860               	movf	??___fladd,w
  5990  12EE  00EB               	movwf	___fladd@grs
  5991  12EF                     l2660:
  5992  12EF  085C               	movf	___fladd@a,w
  5993  12F0  00E0               	movwf	??___fladd
  5994  12F1  0860               	movf	??___fladd,w
  5995  12F2  00D8               	movwf	___fladd@b
  5996  12F3                     l2662:
  5997  12F3  086B               	movf	___fladd@grs,w
  5998  12F4  00E0               	movwf	??___fladd
  5999  12F5  0860               	movf	??___fladd,w
  6000  12F6  00DC               	movwf	___fladd@a
  6001  12F7                     l2664:
  6002  12F7  0859               	movf	___fladd@b+1,w
  6003  12F8  00E0               	movwf	??___fladd
  6004  12F9  0860               	movf	??___fladd,w
  6005  12FA  00EB               	movwf	___fladd@grs
  6006  12FB                     l2666:
  6007  12FB  085D               	movf	___fladd@a+1,w
  6008  12FC  00E0               	movwf	??___fladd
  6009  12FD  0860               	movf	??___fladd,w
  6010  12FE  00D9               	movwf	___fladd@b+1
  6011  12FF                     l2668:
  6012  12FF  086B               	movf	___fladd@grs,w
  6013  1300  00E0               	movwf	??___fladd
  6014  1301  0860               	movf	??___fladd,w
  6015  1302  00DD               	movwf	___fladd@a+1
  6016  1303                     l2670:
  6017  1303  085A               	movf	___fladd@b+2,w
  6018  1304  00E0               	movwf	??___fladd
  6019  1305  0860               	movf	??___fladd,w
  6020  1306  00EB               	movwf	___fladd@grs
  6021  1307                     l2672:
  6022  1307  085E               	movf	___fladd@a+2,w
  6023  1308  00E0               	movwf	??___fladd
  6024  1309  0860               	movf	??___fladd,w
  6025  130A  00DA               	movwf	___fladd@b+2
  6026  130B                     l2674:
  6027  130B  086B               	movf	___fladd@grs,w
  6028  130C  00E0               	movwf	??___fladd
  6029  130D  0860               	movf	??___fladd,w
  6030  130E  00DE               	movwf	___fladd@a+2
  6031  130F                     l2676:
  6032  130F  085B               	movf	___fladd@b+3,w
  6033  1310  00E0               	movwf	??___fladd
  6034  1311  0860               	movf	??___fladd,w
  6035  1312  00EB               	movwf	___fladd@grs
  6036  1313                     l2678:
  6037  1313  085F               	movf	___fladd@a+3,w
  6038  1314  00E0               	movwf	??___fladd
  6039  1315  0860               	movf	??___fladd,w
  6040  1316  00DB               	movwf	___fladd@b+3
  6041  1317                     l2680:
  6042  1317  086B               	movf	___fladd@grs,w
  6043  1318  00E0               	movwf	??___fladd
  6044  1319  0860               	movf	??___fladd,w
  6045  131A  00DF               	movwf	___fladd@a+3
  6046  131B                     l2682:
  6047  131B  01EB               	clrf	___fladd@grs
  6048  131C                     l2684:
  6049  131C  0869               	movf	___fladd@aexp,w
  6050  131D  00E0               	movwf	??___fladd
  6051  131E  01E1               	clrf	??___fladd+1
  6052  131F  0861               	movf	??___fladd+1,w
  6053  1320  00E3               	movwf	??___fladd+3
  6054  1321  086A               	movf	___fladd@bexp,w
  6055  1322  0260               	subwf	??___fladd,w
  6056  1323  00E2               	movwf	??___fladd+2
  6057  1324  1C03               	skipc
  6058  1325  03E3               	decf	??___fladd+3,f
  6059  1326  0863               	movf	??___fladd+3,w
  6060  1327  3A80               	xorlw	128
  6061  1328  00FF               	movwf	btemp+1
  6062  1329  3080               	movlw	128
  6063  132A  027F               	subwf	btemp+1,w
  6064  132B  1D03               	skipz
  6065  132C  2B2F               	goto	u3415
  6066  132D  301A               	movlw	26
  6067  132E  0262               	subwf	??___fladd+2,w
  6068  132F                     u3415:
  6069  132F  1C03               	skipc
  6070  1330  2B32               	goto	u3411
  6071  1331  2B33               	goto	u3410
  6072  1332                     u3411:
  6073  1332  2B70               	goto	l2700
  6074  1333                     u3410:
  6075  1333                     l2686:
  6076  1333  1283               	bcf	3,5	;RP0=0, select bank0
  6077  1334  1303               	bcf	3,6	;RP1=0, select bank0
  6078  1335  085B               	movf	___fladd@b+3,w
  6079  1336  045A               	iorwf	___fladd@b+2,w
  6080  1337  0459               	iorwf	___fladd@b+1,w
  6081  1338  0458               	iorwf	___fladd@b,w
  6082  1339  1D03               	skipz
  6083  133A  2B3C               	goto	u3421
  6084  133B  2B3E               	goto	u3420
  6085  133C                     u3421:
  6086  133C  3001               	movlw	1
  6087  133D  2B3F               	goto	u3430
  6088  133E                     u3420:
  6089  133E  3000               	movlw	0
  6090  133F                     u3430:
  6091  133F  00E0               	movwf	??___fladd
  6092  1340  0860               	movf	??___fladd,w
  6093  1341  00EB               	movwf	___fladd@grs
  6094  1342  3000               	movlw	0
  6095  1343  00DB               	movwf	___fladd@b+3
  6096  1344  3000               	movlw	0
  6097  1345  00DA               	movwf	___fladd@b+2
  6098  1346  3000               	movlw	0
  6099  1347  00D9               	movwf	___fladd@b+1
  6100  1348  3000               	movlw	0
  6101  1349  00D8               	movwf	___fladd@b
  6102  134A  0869               	movf	___fladd@aexp,w
  6103  134B  00E0               	movwf	??___fladd
  6104  134C  0860               	movf	??___fladd,w
  6105  134D  00EA               	movwf	___fladd@bexp
  6106  134E  2B78               	goto	l782
  6107  134F                     l784:
  6108  134F  1C6B               	btfss	___fladd@grs,0
  6109  1350  2B52               	goto	u3441
  6110  1351  2B53               	goto	u3440
  6111  1352                     u3441:
  6112  1352  2B5C               	goto	l2690
  6113  1353                     u3440:
  6114  1353                     l2688:
  6115  1353  086B               	movf	___fladd@grs,w
  6116  1354  00E0               	movwf	??___fladd
  6117  1355  1003               	clrc
  6118  1356  0C60               	rrf	??___fladd,w
  6119  1357  3801               	iorlw	1
  6120  1358  00E1               	movwf	??___fladd+1
  6121  1359  0861               	movf	??___fladd+1,w
  6122  135A  00EB               	movwf	___fladd@grs
  6123  135B  2B5E               	goto	l2692
  6124  135C                     l2690:
  6125  135C  1003               	clrc
  6126  135D  0CEB               	rrf	___fladd@grs,f
  6127  135E                     l2692:
  6128  135E  1C58               	btfss	___fladd@b,0
  6129  135F  2B61               	goto	u3451
  6130  1360  2B62               	goto	u3450
  6131  1361                     u3451:
  6132  1361  2B63               	goto	l2696
  6133  1362                     u3450:
  6134  1362                     l2694:
  6135  1362  17EB               	bsf	___fladd@grs,7
  6136  1363                     l2696:
  6137  1363  3001               	movlw	1
  6138  1364  00E0               	movwf	??___fladd
  6139  1365                     u3465:
  6140  1365  0D5B               	rlf	___fladd@b+3,w
  6141  1366  0CDB               	rrf	___fladd@b+3,f
  6142  1367  0CDA               	rrf	___fladd@b+2,f
  6143  1368  0CD9               	rrf	___fladd@b+1,f
  6144  1369  0CD8               	rrf	___fladd@b,f
  6145  136A  0BE0               	decfsz	??___fladd& (0+127),f
  6146  136B  2B65               	goto	u3465
  6147  136C                     l2698:
  6148  136C  3001               	movlw	1
  6149  136D  00E0               	movwf	??___fladd
  6150  136E  0860               	movf	??___fladd,w
  6151  136F  07EA               	addwf	___fladd@bexp,f
  6152  1370                     l2700:
  6153  1370  1283               	bcf	3,5	;RP0=0, select bank0
  6154  1371  1303               	bcf	3,6	;RP1=0, select bank0
  6155  1372  0869               	movf	___fladd@aexp,w
  6156  1373  026A               	subwf	___fladd@bexp,w
  6157  1374  1C03               	skipc
  6158  1375  2B77               	goto	u3471
  6159  1376  2B78               	goto	u3470
  6160  1377                     u3471:
  6161  1377  2B4F               	goto	l784
  6162  1378                     u3470:
  6163  1378                     l782:
  6164  1378  1B68               	btfsc	___fladd@signs,6
  6165  1379  2B7B               	goto	u3481
  6166  137A  2B7C               	goto	u3480
  6167  137B                     u3481:
  6168  137B  2BC7               	goto	l2726
  6169  137C                     u3480:
  6170  137C                     l2702:
  6171  137C  086A               	movf	___fladd@bexp,w
  6172  137D  1D03               	btfss	3,2
  6173  137E  2B80               	goto	u3491
  6174  137F  2B81               	goto	u3490
  6175  1380                     u3491:
  6176  1380  2B8A               	goto	l2708
  6177  1381                     u3490:
  6178  1381                     l2704:
  6179  1381  3000               	movlw	0
  6180  1382  00DB               	movwf	?___fladd+3
  6181  1383  3000               	movlw	0
  6182  1384  00DA               	movwf	?___fladd+2
  6183  1385  3000               	movlw	0
  6184  1386  00D9               	movwf	?___fladd+1
  6185  1387  3000               	movlw	0
  6186  1388  00D8               	movwf	?___fladd
  6187  1389  2CF5               	goto	l791
  6188  138A                     l2708:
  6189  138A  085C               	movf	___fladd@a,w
  6190  138B  07D8               	addwf	___fladd@b,f
  6191  138C  085D               	movf	___fladd@a+1,w
  6192  138D  1103               	clrz
  6193  138E  1803               	skipnc
  6194  138F  3E01               	addlw	1
  6195  1390  1903               	skipnz
  6196  1391  2B93               	goto	u3501
  6197  1392  07D9               	addwf	___fladd@b+1,f
  6198  1393                     u3501:
  6199  1393  085E               	movf	___fladd@a+2,w
  6200  1394  1103               	clrz
  6201  1395  1803               	skipnc
  6202  1396  3E01               	addlw	1
  6203  1397  1903               	skipnz
  6204  1398  2B9A               	goto	u3502
  6205  1399  07DA               	addwf	___fladd@b+2,f
  6206  139A                     u3502:
  6207  139A  085F               	movf	___fladd@a+3,w
  6208  139B  1103               	clrz
  6209  139C  1803               	skipnc
  6210  139D  3E01               	addlw	1
  6211  139E  1903               	skipnz
  6212  139F  2BA1               	goto	u3503
  6213  13A0  07DB               	addwf	___fladd@b+3,f
  6214  13A1                     u3503:
  6215  13A1                     l2710:
  6216  13A1  1C5B               	btfss	___fladd@b+3,0
  6217  13A2  2BA4               	goto	u3511
  6218  13A3  2BA5               	goto	u3510
  6219  13A4                     u3511:
  6220  13A4  2C7B               	goto	l2760
  6221  13A5                     u3510:
  6222  13A5                     l2712:
  6223  13A5  1C6B               	btfss	___fladd@grs,0
  6224  13A6  2BA8               	goto	u3521
  6225  13A7  2BA9               	goto	u3520
  6226  13A8                     u3521:
  6227  13A8  2BB2               	goto	l2716
  6228  13A9                     u3520:
  6229  13A9                     l2714:
  6230  13A9  086B               	movf	___fladd@grs,w
  6231  13AA  00E0               	movwf	??___fladd
  6232  13AB  1003               	clrc
  6233  13AC  0C60               	rrf	??___fladd,w
  6234  13AD  3801               	iorlw	1
  6235  13AE  00E1               	movwf	??___fladd+1
  6236  13AF  0861               	movf	??___fladd+1,w
  6237  13B0  00EB               	movwf	___fladd@grs
  6238  13B1  2BB4               	goto	l2718
  6239  13B2                     l2716:
  6240  13B2  1003               	clrc
  6241  13B3  0CEB               	rrf	___fladd@grs,f
  6242  13B4                     l2718:
  6243  13B4  1C58               	btfss	___fladd@b,0
  6244  13B5  2BB7               	goto	u3531
  6245  13B6  2BB8               	goto	u3530
  6246  13B7                     u3531:
  6247  13B7  2BB9               	goto	l2722
  6248  13B8                     u3530:
  6249  13B8                     l2720:
  6250  13B8  17EB               	bsf	___fladd@grs,7
  6251  13B9                     l2722:
  6252  13B9  3001               	movlw	1
  6253  13BA  00E0               	movwf	??___fladd
  6254  13BB                     u3545:
  6255  13BB  0D5B               	rlf	___fladd@b+3,w
  6256  13BC  0CDB               	rrf	___fladd@b+3,f
  6257  13BD  0CDA               	rrf	___fladd@b+2,f
  6258  13BE  0CD9               	rrf	___fladd@b+1,f
  6259  13BF  0CD8               	rrf	___fladd@b,f
  6260  13C0  0BE0               	decfsz	??___fladd& (0+127),f
  6261  13C1  2BBB               	goto	u3545
  6262  13C2                     l2724:
  6263  13C2  3001               	movlw	1
  6264  13C3  00E0               	movwf	??___fladd
  6265  13C4  0860               	movf	??___fladd,w
  6266  13C5  07EA               	addwf	___fladd@bexp,f
  6267  13C6  2C7B               	goto	l2760
  6268  13C7                     l2726:
  6269  13C7  085B               	movf	___fladd@b+3,w
  6270  13C8  3A80               	xorlw	128
  6271  13C9  00FF               	movwf	btemp+1
  6272  13CA  085F               	movf	___fladd@a+3,w
  6273  13CB  3A80               	xorlw	128
  6274  13CC  027F               	subwf	btemp+1,w
  6275  13CD  1D03               	skipz
  6276  13CE  2BD9               	goto	u3553
  6277  13CF  085E               	movf	___fladd@a+2,w
  6278  13D0  025A               	subwf	___fladd@b+2,w
  6279  13D1  1D03               	skipz
  6280  13D2  2BD9               	goto	u3553
  6281  13D3  085D               	movf	___fladd@a+1,w
  6282  13D4  0259               	subwf	___fladd@b+1,w
  6283  13D5  1D03               	skipz
  6284  13D6  2BD9               	goto	u3553
  6285  13D7  085C               	movf	___fladd@a,w
  6286  13D8  0258               	subwf	___fladd@b,w
  6287  13D9                     u3553:
  6288  13D9  1803               	skipnc
  6289  13DA  2BDC               	goto	u3551
  6290  13DB  2BDD               	goto	u3550
  6291  13DC                     u3551:
  6292  13DC  2C35               	goto	l2736
  6293  13DD                     u3550:
  6294  13DD                     l2728:
  6295  13DD  30FF               	movlw	255
  6296  13DE  00E0               	movwf	??___fladd
  6297  13DF  30FF               	movlw	255
  6298  13E0  00E1               	movwf	??___fladd+1
  6299  13E1  30FF               	movlw	255
  6300  13E2  00E2               	movwf	??___fladd+2
  6301  13E3  30FF               	movlw	255
  6302  13E4  00E3               	movwf	??___fladd+3
  6303  13E5  085C               	movf	___fladd@a,w
  6304  13E6  00E4               	movwf	??___fladd+4
  6305  13E7  085D               	movf	___fladd@a+1,w
  6306  13E8  00E5               	movwf	??___fladd+5
  6307  13E9  085E               	movf	___fladd@a+2,w
  6308  13EA  00E6               	movwf	??___fladd+6
  6309  13EB  085F               	movf	___fladd@a+3,w
  6310  13EC  00E7               	movwf	??___fladd+7
  6311  13ED  0858               	movf	___fladd@b,w
  6312  13EE  02E4               	subwf	??___fladd+4,f
  6313  13EF  0859               	movf	___fladd@b+1,w
  6314  13F0  1C03               	skipc
  6315  13F1  0F59               	incfsz	___fladd@b+1,w
  6316  13F2  2BF4               	goto	u3561
  6317  13F3  2BF5               	goto	u3562
  6318  13F4                     u3561:
  6319  13F4  02E5               	subwf	??___fladd+5,f
  6320  13F5                     u3562:
  6321  13F5  085A               	movf	___fladd@b+2,w
  6322  13F6  1C03               	skipc
  6323  13F7  0F5A               	incfsz	___fladd@b+2,w
  6324  13F8  2BFA               	goto	u3563
  6325  13F9  2BFB               	goto	u3564
  6326  13FA                     u3563:
  6327  13FA  02E6               	subwf	??___fladd+6,f
  6328  13FB                     u3564:
  6329  13FB  085B               	movf	___fladd@b+3,w
  6330  13FC  1C03               	skipc
  6331  13FD  0F5B               	incfsz	___fladd@b+3,w
  6332  13FE  2C00               	goto	u3565
  6333  13FF  2C01               	goto	u3566
  6334  1400                     u3565:
  6335  1400  02E7               	subwf	??___fladd+7,f
  6336  1401                     u3566:
  6337  1401  0864               	movf	??___fladd+4,w
  6338  1402  07E0               	addwf	??___fladd,f
  6339  1403  0865               	movf	??___fladd+5,w
  6340  1404  1803               	skipnc
  6341  1405  0F65               	incfsz	??___fladd+5,w
  6342  1406  2C08               	goto	u3570
  6343  1407  2C09               	goto	u3571
  6344  1408                     u3570:
  6345  1408  07E1               	addwf	??___fladd+1,f
  6346  1409                     u3571:
  6347  1409  0866               	movf	??___fladd+6,w
  6348  140A  1803               	skipnc
  6349  140B  0F66               	incfsz	??___fladd+6,w
  6350  140C  2C0E               	goto	u3572
  6351  140D  2C0F               	goto	u3573
  6352  140E                     u3572:
  6353  140E  07E2               	addwf	??___fladd+2,f
  6354  140F                     u3573:
  6355  140F  0867               	movf	??___fladd+7,w
  6356  1410  1803               	skipnc
  6357  1411  0A67               	incf	??___fladd+7,w
  6358  1412  07E3               	addwf	??___fladd+3,f
  6359  1413  0863               	movf	??___fladd+3,w
  6360  1414  00DB               	movwf	___fladd@b+3
  6361  1415  0862               	movf	??___fladd+2,w
  6362  1416  00DA               	movwf	___fladd@b+2
  6363  1417  0861               	movf	??___fladd+1,w
  6364  1418  00D9               	movwf	___fladd@b+1
  6365  1419  0860               	movf	??___fladd,w
  6366  141A  00D8               	movwf	___fladd@b
  6367  141B                     l2730:
  6368  141B  3080               	movlw	128
  6369  141C  00E0               	movwf	??___fladd
  6370  141D  0860               	movf	??___fladd,w
  6371  141E  06E8               	xorwf	___fladd@signs,f
  6372  141F  09EB               	comf	___fladd@grs,f
  6373  1420  0AEB               	incf	___fladd@grs,f
  6374  1421                     l2732:
  6375  1421  086B               	movf	___fladd@grs,w
  6376  1422  1D03               	btfss	3,2
  6377  1423  2C25               	goto	u3581
  6378  1424  2C26               	goto	u3580
  6379  1425                     u3581:
  6380  1425  2C43               	goto	l799
  6381  1426                     u3580:
  6382  1426                     l2734:
  6383  1426  3001               	movlw	1
  6384  1427  07D8               	addwf	___fladd@b,f
  6385  1428  3000               	movlw	0
  6386  1429  1803               	skipnc
  6387  142A  3001               	movlw	1
  6388  142B  07D9               	addwf	___fladd@b+1,f
  6389  142C  3000               	movlw	0
  6390  142D  1803               	skipnc
  6391  142E  3001               	movlw	1
  6392  142F  07DA               	addwf	___fladd@b+2,f
  6393  1430  3000               	movlw	0
  6394  1431  1803               	skipnc
  6395  1432  3001               	movlw	1
  6396  1433  07DB               	addwf	___fladd@b+3,f
  6397  1434  2C43               	goto	l799
  6398  1435                     l2736:
  6399  1435  085C               	movf	___fladd@a,w
  6400  1436  02D8               	subwf	___fladd@b,f
  6401  1437  085D               	movf	___fladd@a+1,w
  6402  1438  1C03               	skipc
  6403  1439  0F5D               	incfsz	___fladd@a+1,w
  6404  143A  02D9               	subwf	___fladd@b+1,f
  6405  143B  085E               	movf	___fladd@a+2,w
  6406  143C  1C03               	skipc
  6407  143D  0F5E               	incfsz	___fladd@a+2,w
  6408  143E  02DA               	subwf	___fladd@b+2,f
  6409  143F  085F               	movf	___fladd@a+3,w
  6410  1440  1C03               	skipc
  6411  1441  0F5F               	incfsz	___fladd@a+3,w
  6412  1442  02DB               	subwf	___fladd@b+3,f
  6413  1443                     l799:
  6414  1443  085B               	movf	___fladd@b+3,w
  6415  1444  045A               	iorwf	___fladd@b+2,w
  6416  1445  0459               	iorwf	___fladd@b+1,w
  6417  1446  0458               	iorwf	___fladd@b,w
  6418  1447  1D03               	skipz
  6419  1448  2C4A               	goto	u3591
  6420  1449  2C4B               	goto	u3590
  6421  144A                     u3591:
  6422  144A  2C77               	goto	l2758
  6423  144B                     u3590:
  6424  144B                     l2738:
  6425  144B  086B               	movf	___fladd@grs,w
  6426  144C  1D03               	btfss	3,2
  6427  144D  2C4F               	goto	u3601
  6428  144E  2C50               	goto	u3600
  6429  144F                     u3601:
  6430  144F  2C77               	goto	l2758
  6431  1450                     u3600:
  6432  1450                     l2740:
  6433  1450  3000               	movlw	0
  6434  1451  00DB               	movwf	?___fladd+3
  6435  1452  3000               	movlw	0
  6436  1453  00DA               	movwf	?___fladd+2
  6437  1454  3000               	movlw	0
  6438  1455  00D9               	movwf	?___fladd+1
  6439  1456  3000               	movlw	0
  6440  1457  00D8               	movwf	?___fladd
  6441  1458  2CF5               	goto	l791
  6442  1459                     l2744:
  6443  1459  3001               	movlw	1
  6444  145A  00E0               	movwf	??___fladd
  6445  145B                     u3615:
  6446  145B  1003               	clrc
  6447  145C  0DD8               	rlf	___fladd@b,f
  6448  145D  0DD9               	rlf	___fladd@b+1,f
  6449  145E  0DDA               	rlf	___fladd@b+2,f
  6450  145F  0DDB               	rlf	___fladd@b+3,f
  6451  1460  0BE0               	decfsz	??___fladd,f
  6452  1461  2C5B               	goto	u3615
  6453  1462                     l2746:
  6454  1462  1FEB               	btfss	___fladd@grs,7
  6455  1463  2C65               	goto	u3621
  6456  1464  2C66               	goto	u3620
  6457  1465                     u3621:
  6458  1465  2C67               	goto	l803
  6459  1466                     u3620:
  6460  1466                     l2748:
  6461  1466  1458               	bsf	___fladd@b,0
  6462  1467                     l803:
  6463  1467  1C6B               	btfss	___fladd@grs,0
  6464  1468  2C6A               	goto	u3631
  6465  1469  2C6B               	goto	u3630
  6466  146A                     u3631:
  6467  146A  2C6E               	goto	l2752
  6468  146B                     u3630:
  6469  146B                     l2750:
  6470  146B  1403               	setc
  6471  146C  0DEB               	rlf	___fladd@grs,f
  6472  146D  2C70               	goto	l2754
  6473  146E                     l2752:
  6474  146E  1003               	clrc
  6475  146F  0DEB               	rlf	___fladd@grs,f
  6476  1470                     l2754:
  6477  1470  086A               	movf	___fladd@bexp,w
  6478  1471  1903               	btfsc	3,2
  6479  1472  2C74               	goto	u3641
  6480  1473  2C75               	goto	u3640
  6481  1474                     u3641:
  6482  1474  2C77               	goto	l2758
  6483  1475                     u3640:
  6484  1475                     l2756:
  6485  1475  3001               	movlw	1
  6486  1476  02EA               	subwf	___fladd@bexp,f
  6487  1477                     l2758:
  6488  1477  1FDA               	btfss	___fladd@b+2,7
  6489  1478  2C7A               	goto	u3651
  6490  1479  2C7B               	goto	u3650
  6491  147A                     u3651:
  6492  147A  2C59               	goto	l2744
  6493  147B                     u3650:
  6494  147B                     l2760:
  6495  147B  01E9               	clrf	___fladd@aexp
  6496  147C                     l2762:
  6497  147C  1FEB               	btfss	___fladd@grs,7
  6498  147D  2C7F               	goto	u3661
  6499  147E  2C80               	goto	u3660
  6500  147F                     u3661:
  6501  147F  2C8E               	goto	l2770
  6502  1480                     u3660:
  6503  1480                     l2764:
  6504  1480  086B               	movf	___fladd@grs,w
  6505  1481  397F               	andlw	127
  6506  1482  1903               	btfsc	3,2
  6507  1483  2C85               	goto	u3671
  6508  1484  2C86               	goto	u3670
  6509  1485                     u3671:
  6510  1485  2C89               	goto	l809
  6511  1486                     u3670:
  6512  1486                     l2766:
  6513  1486  01E9               	clrf	___fladd@aexp
  6514  1487  0AE9               	incf	___fladd@aexp,f
  6515  1488  2C8E               	goto	l2770
  6516  1489                     l809:
  6517  1489  1C58               	btfss	___fladd@b,0
  6518  148A  2C8C               	goto	u3681
  6519  148B  2C8D               	goto	u3680
  6520  148C                     u3681:
  6521  148C  2C8E               	goto	l2770
  6522  148D                     u3680:
  6523  148D  2C86               	goto	l2766
  6524  148E                     l2770:
  6525  148E  0869               	movf	___fladd@aexp,w
  6526  148F  1903               	btfsc	3,2
  6527  1490  2C92               	goto	u3691
  6528  1491  2C93               	goto	u3690
  6529  1492                     u3691:
  6530  1492  2CC7               	goto	l812
  6531  1493                     u3690:
  6532  1493                     l2772:
  6533  1493  3001               	movlw	1
  6534  1494  07D8               	addwf	___fladd@b,f
  6535  1495  3000               	movlw	0
  6536  1496  1803               	skipnc
  6537  1497  3001               	movlw	1
  6538  1498  07D9               	addwf	___fladd@b+1,f
  6539  1499  3000               	movlw	0
  6540  149A  1803               	skipnc
  6541  149B  3001               	movlw	1
  6542  149C  07DA               	addwf	___fladd@b+2,f
  6543  149D  3000               	movlw	0
  6544  149E  1803               	skipnc
  6545  149F  3001               	movlw	1
  6546  14A0  07DB               	addwf	___fladd@b+3,f
  6547  14A1                     l2774:
  6548  14A1  1C5B               	btfss	___fladd@b+3,0
  6549  14A2  2CA4               	goto	u3701
  6550  14A3  2CA5               	goto	u3700
  6551  14A4                     u3701:
  6552  14A4  2CC7               	goto	l812
  6553  14A5                     u3700:
  6554  14A5                     l2776:
  6555  14A5  0858               	movf	___fladd@b,w
  6556  14A6  00E0               	movwf	??___fladd
  6557  14A7  0859               	movf	___fladd@b+1,w
  6558  14A8  00E1               	movwf	??___fladd+1
  6559  14A9  085A               	movf	___fladd@b+2,w
  6560  14AA  00E2               	movwf	??___fladd+2
  6561  14AB  085B               	movf	___fladd@b+3,w
  6562  14AC  00E3               	movwf	??___fladd+3
  6563  14AD  3001               	movlw	1
  6564  14AE  00E4               	movwf	??___fladd+4
  6565  14AF                     u3715:
  6566  14AF  0D63               	rlf	??___fladd+3,w
  6567  14B0  0CE3               	rrf	??___fladd+3,f
  6568  14B1  0CE2               	rrf	??___fladd+2,f
  6569  14B2  0CE1               	rrf	??___fladd+1,f
  6570  14B3  0CE0               	rrf	??___fladd,f
  6571  14B4                     u3710:
  6572  14B4  0BE4               	decfsz	??___fladd+4,f
  6573  14B5  2CAF               	goto	u3715
  6574  14B6  0863               	movf	??___fladd+3,w
  6575  14B7  00DB               	movwf	___fladd@b+3
  6576  14B8  0862               	movf	??___fladd+2,w
  6577  14B9  00DA               	movwf	___fladd@b+2
  6578  14BA  0861               	movf	??___fladd+1,w
  6579  14BB  00D9               	movwf	___fladd@b+1
  6580  14BC  0860               	movf	??___fladd,w
  6581  14BD  00D8               	movwf	___fladd@b
  6582  14BE  0A6A               	incf	___fladd@bexp,w
  6583  14BF  1903               	btfsc	3,2
  6584  14C0  2CC2               	goto	u3721
  6585  14C1  2CC3               	goto	u3720
  6586  14C2                     u3721:
  6587  14C2  2CC7               	goto	l812
  6588  14C3                     u3720:
  6589  14C3                     l2778:
  6590  14C3  3001               	movlw	1
  6591  14C4  00E0               	movwf	??___fladd
  6592  14C5  0860               	movf	??___fladd,w
  6593  14C6  07EA               	addwf	___fladd@bexp,f
  6594  14C7                     l812:
  6595  14C7  0A6A               	incf	___fladd@bexp,w
  6596  14C8  1903               	btfsc	3,2
  6597  14C9  2CCB               	goto	u3731
  6598  14CA  2CCC               	goto	u3730
  6599  14CB                     u3731:
  6600  14CB  2CD1               	goto	l2782
  6601  14CC                     u3730:
  6602  14CC                     l2780:
  6603  14CC  086A               	movf	___fladd@bexp,w
  6604  14CD  1D03               	btfss	3,2
  6605  14CE  2CD0               	goto	u3741
  6606  14CF  2CD1               	goto	u3740
  6607  14D0                     u3741:
  6608  14D0  2CDF               	goto	l2788
  6609  14D1                     u3740:
  6610  14D1                     l2782:
  6611  14D1  3000               	movlw	0
  6612  14D2  00DB               	movwf	___fladd@b+3
  6613  14D3  3000               	movlw	0
  6614  14D4  00DA               	movwf	___fladd@b+2
  6615  14D5  3000               	movlw	0
  6616  14D6  00D9               	movwf	___fladd@b+1
  6617  14D7  3000               	movlw	0
  6618  14D8  00D8               	movwf	___fladd@b
  6619  14D9                     l2784:
  6620  14D9  086A               	movf	___fladd@bexp,w
  6621  14DA  1D03               	btfss	3,2
  6622  14DB  2CDD               	goto	u3751
  6623  14DC  2CDE               	goto	u3750
  6624  14DD                     u3751:
  6625  14DD  2CDF               	goto	l2788
  6626  14DE                     u3750:
  6627  14DE                     l2786:
  6628  14DE  01E8               	clrf	___fladd@signs
  6629  14DF                     l2788:
  6630  14DF  1C6A               	btfss	___fladd@bexp,0
  6631  14E0  2CE2               	goto	u3761
  6632  14E1  2CE3               	goto	u3760
  6633  14E2                     u3761:
  6634  14E2  2CE5               	goto	l2792
  6635  14E3                     u3760:
  6636  14E3                     l2790:
  6637  14E3  17DA               	bsf	___fladd@b+2,7
  6638  14E4  2CE9               	goto	l820
  6639  14E5                     l2792:
  6640  14E5  307F               	movlw	127
  6641  14E6  00E0               	movwf	??___fladd
  6642  14E7  0860               	movf	??___fladd,w
  6643  14E8  05DA               	andwf	___fladd@b+2,f
  6644  14E9                     l820:
  6645  14E9  086A               	movf	___fladd@bexp,w
  6646  14EA  00E0               	movwf	??___fladd
  6647  14EB  1003               	clrc
  6648  14EC  0C60               	rrf	??___fladd,w
  6649  14ED  00E1               	movwf	??___fladd+1
  6650  14EE  0861               	movf	??___fladd+1,w
  6651  14EF  00DB               	movwf	___fladd@b+3
  6652  14F0                     l2794:
  6653  14F0  1FE8               	btfss	___fladd@signs,7
  6654  14F1  2CF3               	goto	u3771
  6655  14F2  2CF4               	goto	u3770
  6656  14F3                     u3771:
  6657  14F3  2CF5               	goto	l821
  6658  14F4                     u3770:
  6659  14F4                     l2796:
  6660  14F4  17DB               	bsf	___fladd@b+3,7
  6661  14F5                     l821:
  6662  14F5                     l791:
  6663  14F5  0008               	return
  6664  14F6                     __end_of___fladd:
  6665                           
  6666                           	psect	text17
  6667  1817                     __ptext17:	
  6668 ;; *************** function ___flneg *****************
  6669 ;; Defined at:
  6670 ;;		line 15 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;  f1              4    3[COMMON] unsigned char 
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;		None
  6675 ;; Return value:  Size  Location     Type
  6676 ;;                  4    3[COMMON] unsigned char 
  6677 ;; Registers used:
  6678 ;;		wreg
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6684 ;;      Params:         4       0       0       0       0
  6685 ;;      Locals:         0       0       0       0       0
  6686 ;;      Temps:          0       0       0       0       0
  6687 ;;      Totals:         4       0       0       0       0
  6688 ;;Total ram usage:        4 bytes
  6689 ;; Hardware stack levels used:    1
  6690 ;; Hardware stack levels required when called:    2
  6691 ;; This function calls:
  6692 ;;		Nothing
  6693 ;; This function is called by:
  6694 ;;		_sprintf
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           
  6699                           ;psect for function ___flneg
  6700  1817                     ___flneg:
  6701  1817                     l3250:	
  6702                           ;incstack = 0
  6703                           ; Regs used in ___flneg: [wreg]
  6704                           
  6705  1817  0876               	movf	___flneg@f1+3,w
  6706  1818  0475               	iorwf	___flneg@f1+2,w
  6707  1819  0474               	iorwf	___flneg@f1+1,w
  6708  181A  0473               	iorwf	___flneg@f1,w
  6709  181B  1903               	skipnz
  6710  181C  281E               	goto	u4901
  6711  181D  281F               	goto	u4900
  6712  181E                     u4901:
  6713  181E  2821               	goto	l3254
  6714  181F                     u4900:
  6715  181F                     l3252:
  6716  181F  3080               	movlw	128
  6717  1820  06F6               	xorwf	___flneg@f1+3,f
  6718  1821                     l3254:
  6719  1821                     l650:
  6720  1821  0008               	return
  6721  1822                     __end_of___flneg:
  6722                           
  6723                           	psect	text18
  6724  1D25                     __ptext18:	
  6725 ;; *************** function ___flge *****************
  6726 ;; Defined at:
  6727 ;;		line 4 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6728 ;; Parameters:    Size  Location     Type
  6729 ;;  ff1             4    0[BANK0 ] unsigned char 
  6730 ;;  ff2             4    4[BANK0 ] unsigned char 
  6731 ;; Auto vars:     Size  Location     Type
  6732 ;;		None
  6733 ;; Return value:  Size  Location     Type
  6734 ;;		None               void
  6735 ;; Registers used:
  6736 ;;		wreg, status,2, status,0
  6737 ;; Tracked objects:
  6738 ;;		On entry : 0/0
  6739 ;;		On exit  : 0/0
  6740 ;;		Unchanged: 0/0
  6741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6742 ;;      Params:         0       8       0       0       0
  6743 ;;      Locals:         0       0       0       0       0
  6744 ;;      Temps:          4       0       0       0       0
  6745 ;;      Totals:         4       8       0       0       0
  6746 ;;Total ram usage:       12 bytes
  6747 ;; Hardware stack levels used:    1
  6748 ;; Hardware stack levels required when called:    2
  6749 ;; This function calls:
  6750 ;;		Nothing
  6751 ;; This function is called by:
  6752 ;;		_sprintf
  6753 ;; This function uses a non-reentrant model
  6754 ;;
  6755                           
  6756                           
  6757                           ;psect for function ___flge
  6758  1D25                     ___flge:
  6759  1D25                     l4154:	
  6760                           ;incstack = 0
  6761                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6762                           
  6763  1D25  3000               	movlw	0
  6764  1D26  1283               	bcf	3,5	;RP0=0, select bank0
  6765  1D27  1303               	bcf	3,6	;RP1=0, select bank0
  6766  1D28  0520               	andwf	___flge@ff1,w
  6767  1D29  00F3               	movwf	??___flge
  6768  1D2A  3000               	movlw	0
  6769  1D2B  0521               	andwf	___flge@ff1+1,w
  6770  1D2C  00F4               	movwf	??___flge+1
  6771  1D2D  3080               	movlw	128
  6772  1D2E  0522               	andwf	___flge@ff1+2,w
  6773  1D2F  00F5               	movwf	??___flge+2
  6774  1D30  307F               	movlw	127
  6775  1D31  0523               	andwf	___flge@ff1+3,w
  6776  1D32  00F6               	movwf	??___flge+3
  6777  1D33  0876               	movf	??___flge+3,w
  6778  1D34  0475               	iorwf	??___flge+2,w
  6779  1D35  0474               	iorwf	??___flge+1,w
  6780  1D36  0473               	iorwf	??___flge,w
  6781  1D37  1D03               	skipz
  6782  1D38  2D3A               	goto	u6621
  6783  1D39  2D3B               	goto	u6620
  6784  1D3A                     u6621:
  6785  1D3A  2D43               	goto	l642
  6786  1D3B                     u6620:
  6787  1D3B                     l4156:
  6788  1D3B  3000               	movlw	0
  6789  1D3C  00A3               	movwf	___flge@ff1+3
  6790  1D3D  3000               	movlw	0
  6791  1D3E  00A2               	movwf	___flge@ff1+2
  6792  1D3F  3000               	movlw	0
  6793  1D40  00A1               	movwf	___flge@ff1+1
  6794  1D41  3000               	movlw	0
  6795  1D42  00A0               	movwf	___flge@ff1
  6796  1D43                     l642:
  6797  1D43  3000               	movlw	0
  6798  1D44  0524               	andwf	___flge@ff2,w
  6799  1D45  00F3               	movwf	??___flge
  6800  1D46  3000               	movlw	0
  6801  1D47  0525               	andwf	___flge@ff2+1,w
  6802  1D48  00F4               	movwf	??___flge+1
  6803  1D49  3080               	movlw	128
  6804  1D4A  0526               	andwf	___flge@ff2+2,w
  6805  1D4B  00F5               	movwf	??___flge+2
  6806  1D4C  307F               	movlw	127
  6807  1D4D  0527               	andwf	___flge@ff2+3,w
  6808  1D4E  00F6               	movwf	??___flge+3
  6809  1D4F  0876               	movf	??___flge+3,w
  6810  1D50  0475               	iorwf	??___flge+2,w
  6811  1D51  0474               	iorwf	??___flge+1,w
  6812  1D52  0473               	iorwf	??___flge,w
  6813  1D53  1D03               	skipz
  6814  1D54  2D56               	goto	u6631
  6815  1D55  2D57               	goto	u6630
  6816  1D56                     u6631:
  6817  1D56  2D5F               	goto	l4160
  6818  1D57                     u6630:
  6819  1D57                     l4158:
  6820  1D57  3000               	movlw	0
  6821  1D58  00A7               	movwf	___flge@ff2+3
  6822  1D59  3000               	movlw	0
  6823  1D5A  00A6               	movwf	___flge@ff2+2
  6824  1D5B  3000               	movlw	0
  6825  1D5C  00A5               	movwf	___flge@ff2+1
  6826  1D5D  3000               	movlw	0
  6827  1D5E  00A4               	movwf	___flge@ff2
  6828  1D5F                     l4160:
  6829  1D5F  1FA3               	btfss	___flge@ff1+3,7
  6830  1D60  2D62               	goto	u6641
  6831  1D61  2D63               	goto	u6640
  6832  1D62                     u6641:
  6833  1D62  2D87               	goto	l4164
  6834  1D63                     u6640:
  6835  1D63                     l4162:
  6836  1D63  3000               	movlw	0
  6837  1D64  00F3               	movwf	??___flge
  6838  1D65  3000               	movlw	0
  6839  1D66  00F4               	movwf	??___flge+1
  6840  1D67  3000               	movlw	0
  6841  1D68  00F5               	movwf	??___flge+2
  6842  1D69  3080               	movlw	128
  6843  1D6A  00F6               	movwf	??___flge+3
  6844  1D6B  0820               	movf	___flge@ff1,w
  6845  1D6C  02F3               	subwf	??___flge,f
  6846  1D6D  0821               	movf	___flge@ff1+1,w
  6847  1D6E  1C03               	skipc
  6848  1D6F  0F21               	incfsz	___flge@ff1+1,w
  6849  1D70  2D72               	goto	u6651
  6850  1D71  2D73               	goto	u6652
  6851  1D72                     u6651:
  6852  1D72  02F4               	subwf	??___flge+1,f
  6853  1D73                     u6652:
  6854  1D73  0822               	movf	___flge@ff1+2,w
  6855  1D74  1C03               	skipc
  6856  1D75  0F22               	incfsz	___flge@ff1+2,w
  6857  1D76  2D78               	goto	u6653
  6858  1D77  2D79               	goto	u6654
  6859  1D78                     u6653:
  6860  1D78  02F5               	subwf	??___flge+2,f
  6861  1D79                     u6654:
  6862  1D79  0823               	movf	___flge@ff1+3,w
  6863  1D7A  1C03               	skipc
  6864  1D7B  0F23               	incfsz	___flge@ff1+3,w
  6865  1D7C  2D7E               	goto	u6655
  6866  1D7D  2D7F               	goto	u6656
  6867  1D7E                     u6655:
  6868  1D7E  02F6               	subwf	??___flge+3,f
  6869  1D7F                     u6656:
  6870  1D7F  0876               	movf	??___flge+3,w
  6871  1D80  00A3               	movwf	___flge@ff1+3
  6872  1D81  0875               	movf	??___flge+2,w
  6873  1D82  00A2               	movwf	___flge@ff1+2
  6874  1D83  0874               	movf	??___flge+1,w
  6875  1D84  00A1               	movwf	___flge@ff1+1
  6876  1D85  0873               	movf	??___flge,w
  6877  1D86  00A0               	movwf	___flge@ff1
  6878  1D87                     l4164:
  6879  1D87  1FA7               	btfss	___flge@ff2+3,7
  6880  1D88  2D8A               	goto	u6661
  6881  1D89  2D8B               	goto	u6660
  6882  1D8A                     u6661:
  6883  1D8A  2DAF               	goto	l645
  6884  1D8B                     u6660:
  6885  1D8B                     l4166:
  6886  1D8B  3000               	movlw	0
  6887  1D8C  00F3               	movwf	??___flge
  6888  1D8D  3000               	movlw	0
  6889  1D8E  00F4               	movwf	??___flge+1
  6890  1D8F  3000               	movlw	0
  6891  1D90  00F5               	movwf	??___flge+2
  6892  1D91  3080               	movlw	128
  6893  1D92  00F6               	movwf	??___flge+3
  6894  1D93  0824               	movf	___flge@ff2,w
  6895  1D94  02F3               	subwf	??___flge,f
  6896  1D95  0825               	movf	___flge@ff2+1,w
  6897  1D96  1C03               	skipc
  6898  1D97  0F25               	incfsz	___flge@ff2+1,w
  6899  1D98  2D9A               	goto	u6671
  6900  1D99  2D9B               	goto	u6672
  6901  1D9A                     u6671:
  6902  1D9A  02F4               	subwf	??___flge+1,f
  6903  1D9B                     u6672:
  6904  1D9B  0826               	movf	___flge@ff2+2,w
  6905  1D9C  1C03               	skipc
  6906  1D9D  0F26               	incfsz	___flge@ff2+2,w
  6907  1D9E  2DA0               	goto	u6673
  6908  1D9F  2DA1               	goto	u6674
  6909  1DA0                     u6673:
  6910  1DA0  02F5               	subwf	??___flge+2,f
  6911  1DA1                     u6674:
  6912  1DA1  0827               	movf	___flge@ff2+3,w
  6913  1DA2  1C03               	skipc
  6914  1DA3  0F27               	incfsz	___flge@ff2+3,w
  6915  1DA4  2DA6               	goto	u6675
  6916  1DA5  2DA7               	goto	u6676
  6917  1DA6                     u6675:
  6918  1DA6  02F6               	subwf	??___flge+3,f
  6919  1DA7                     u6676:
  6920  1DA7  0876               	movf	??___flge+3,w
  6921  1DA8  00A7               	movwf	___flge@ff2+3
  6922  1DA9  0875               	movf	??___flge+2,w
  6923  1DAA  00A6               	movwf	___flge@ff2+2
  6924  1DAB  0874               	movf	??___flge+1,w
  6925  1DAC  00A5               	movwf	___flge@ff2+1
  6926  1DAD  0873               	movf	??___flge,w
  6927  1DAE  00A4               	movwf	___flge@ff2
  6928  1DAF                     l645:
  6929  1DAF  3080               	movlw	128
  6930  1DB0  06A3               	xorwf	___flge@ff1+3,f
  6931  1DB1  3080               	movlw	128
  6932  1DB2  06A7               	xorwf	___flge@ff2+3,f
  6933  1DB3  0827               	movf	___flge@ff2+3,w
  6934  1DB4  0223               	subwf	___flge@ff1+3,w
  6935  1DB5  1D03               	skipz
  6936  1DB6  2DC1               	goto	u6685
  6937  1DB7  0826               	movf	___flge@ff2+2,w
  6938  1DB8  0222               	subwf	___flge@ff1+2,w
  6939  1DB9  1D03               	skipz
  6940  1DBA  2DC1               	goto	u6685
  6941  1DBB  0825               	movf	___flge@ff2+1,w
  6942  1DBC  0221               	subwf	___flge@ff1+1,w
  6943  1DBD  1D03               	skipz
  6944  1DBE  2DC1               	goto	u6685
  6945  1DBF  0824               	movf	___flge@ff2,w
  6946  1DC0  0220               	subwf	___flge@ff1,w
  6947  1DC1                     u6685:
  6948  1DC1  1803               	skipnc
  6949  1DC2  2DC4               	goto	u6681
  6950  1DC3  2DC5               	goto	u6680
  6951  1DC4                     u6681:
  6952  1DC4  2DC7               	goto	l4170
  6953  1DC5                     u6680:
  6954  1DC5                     l4168:
  6955  1DC5  1003               	clrc
  6956  1DC6  2DC8               	goto	l646
  6957  1DC7                     l4170:
  6958  1DC7  1403               	setc
  6959  1DC8                     l646:
  6960  1DC8  0008               	return
  6961  1DC9                     __end_of___flge:
  6962                           
  6963                           	psect	text19
  6964  1AAF                     __ptext19:	
  6965 ;; *************** function ___fleq *****************
  6966 ;; Defined at:
  6967 ;;		line 4 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;  ff1             4    0[BANK0 ] unsigned char 
  6970 ;;  ff2             4    4[BANK0 ] unsigned char 
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;		None
  6973 ;; Return value:  Size  Location     Type
  6974 ;;		None               void
  6975 ;; Registers used:
  6976 ;;		wreg, status,2, status,0
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6982 ;;      Params:         0       8       0       0       0
  6983 ;;      Locals:         0       0       0       0       0
  6984 ;;      Temps:          4       0       0       0       0
  6985 ;;      Totals:         4       8       0       0       0
  6986 ;;Total ram usage:       12 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; Hardware stack levels required when called:    2
  6989 ;; This function calls:
  6990 ;;		Nothing
  6991 ;; This function is called by:
  6992 ;;		_sprintf
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           
  6997                           ;psect for function ___fleq
  6998  1AAF                     ___fleq:
  6999  1AAF                     l4142:	
  7000                           ;incstack = 0
  7001                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7002                           
  7003  1AAF  3000               	movlw	0
  7004  1AB0  1283               	bcf	3,5	;RP0=0, select bank0
  7005  1AB1  1303               	bcf	3,6	;RP1=0, select bank0
  7006  1AB2  0520               	andwf	___fleq@ff1,w
  7007  1AB3  00F3               	movwf	??___fleq
  7008  1AB4  3000               	movlw	0
  7009  1AB5  0521               	andwf	___fleq@ff1+1,w
  7010  1AB6  00F4               	movwf	??___fleq+1
  7011  1AB7  3080               	movlw	128
  7012  1AB8  0522               	andwf	___fleq@ff1+2,w
  7013  1AB9  00F5               	movwf	??___fleq+2
  7014  1ABA  307F               	movlw	127
  7015  1ABB  0523               	andwf	___fleq@ff1+3,w
  7016  1ABC  00F6               	movwf	??___fleq+3
  7017  1ABD  0876               	movf	??___fleq+3,w
  7018  1ABE  0475               	iorwf	??___fleq+2,w
  7019  1ABF  0474               	iorwf	??___fleq+1,w
  7020  1AC0  0473               	iorwf	??___fleq,w
  7021  1AC1  1D03               	skipz
  7022  1AC2  2AC4               	goto	u6591
  7023  1AC3  2AC5               	goto	u6590
  7024  1AC4                     u6591:
  7025  1AC4  2ACD               	goto	l637
  7026  1AC5                     u6590:
  7027  1AC5                     l4144:
  7028  1AC5  3000               	movlw	0
  7029  1AC6  00A3               	movwf	___fleq@ff1+3
  7030  1AC7  3000               	movlw	0
  7031  1AC8  00A2               	movwf	___fleq@ff1+2
  7032  1AC9  3000               	movlw	0
  7033  1ACA  00A1               	movwf	___fleq@ff1+1
  7034  1ACB  3000               	movlw	0
  7035  1ACC  00A0               	movwf	___fleq@ff1
  7036  1ACD                     l637:
  7037  1ACD  3000               	movlw	0
  7038  1ACE  0524               	andwf	___fleq@ff2,w
  7039  1ACF  00F3               	movwf	??___fleq
  7040  1AD0  3000               	movlw	0
  7041  1AD1  0525               	andwf	___fleq@ff2+1,w
  7042  1AD2  00F4               	movwf	??___fleq+1
  7043  1AD3  3080               	movlw	128
  7044  1AD4  0526               	andwf	___fleq@ff2+2,w
  7045  1AD5  00F5               	movwf	??___fleq+2
  7046  1AD6  307F               	movlw	127
  7047  1AD7  0527               	andwf	___fleq@ff2+3,w
  7048  1AD8  00F6               	movwf	??___fleq+3
  7049  1AD9  0876               	movf	??___fleq+3,w
  7050  1ADA  0475               	iorwf	??___fleq+2,w
  7051  1ADB  0474               	iorwf	??___fleq+1,w
  7052  1ADC  0473               	iorwf	??___fleq,w
  7053  1ADD  1D03               	skipz
  7054  1ADE  2AE0               	goto	u6601
  7055  1ADF  2AE1               	goto	u6600
  7056  1AE0                     u6601:
  7057  1AE0  2AE9               	goto	l638
  7058  1AE1                     u6600:
  7059  1AE1                     l4146:
  7060  1AE1  3000               	movlw	0
  7061  1AE2  00A7               	movwf	___fleq@ff2+3
  7062  1AE3  3000               	movlw	0
  7063  1AE4  00A6               	movwf	___fleq@ff2+2
  7064  1AE5  3000               	movlw	0
  7065  1AE6  00A5               	movwf	___fleq@ff2+1
  7066  1AE7  3000               	movlw	0
  7067  1AE8  00A4               	movwf	___fleq@ff2
  7068  1AE9                     l638:
  7069  1AE9  0827               	movf	___fleq@ff2+3,w
  7070  1AEA  0623               	xorwf	___fleq@ff1+3,w
  7071  1AEB  1D03               	skipz
  7072  1AEC  2AF7               	goto	u6615
  7073  1AED  0826               	movf	___fleq@ff2+2,w
  7074  1AEE  0622               	xorwf	___fleq@ff1+2,w
  7075  1AEF  1D03               	skipz
  7076  1AF0  2AF7               	goto	u6615
  7077  1AF1  0825               	movf	___fleq@ff2+1,w
  7078  1AF2  0621               	xorwf	___fleq@ff1+1,w
  7079  1AF3  1D03               	skipz
  7080  1AF4  2AF7               	goto	u6615
  7081  1AF5  0824               	movf	___fleq@ff2,w
  7082  1AF6  0620               	xorwf	___fleq@ff1,w
  7083  1AF7                     u6615:
  7084  1AF7  1903               	skipnz
  7085  1AF8  2AFA               	goto	u6611
  7086  1AF9  2AFB               	goto	u6610
  7087  1AFA                     u6611:
  7088  1AFA  2AFD               	goto	l4150
  7089  1AFB                     u6610:
  7090  1AFB                     l4148:
  7091  1AFB  1003               	clrc
  7092  1AFC  2AFE               	goto	l639
  7093  1AFD                     l4150:
  7094  1AFD  1403               	setc
  7095  1AFE                     l639:
  7096  1AFE  0008               	return
  7097  1AFF                     __end_of___fleq:
  7098                           
  7099                           	psect	text20
  7100  1918                     __ptext20:	
  7101 ;; *************** function _setup *****************
  7102 ;; Defined at:
  7103 ;;		line 144 in file "lab3_main.c"
  7104 ;; Parameters:    Size  Location     Type
  7105 ;;		None
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;		None
  7108 ;; Return value:  Size  Location     Type
  7109 ;;                  1    wreg      void 
  7110 ;; Registers used:
  7111 ;;		wreg, status,2
  7112 ;; Tracked objects:
  7113 ;;		On entry : 0/0
  7114 ;;		On exit  : 0/0
  7115 ;;		Unchanged: 0/0
  7116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7117 ;;      Params:         0       0       0       0       0
  7118 ;;      Locals:         0       0       0       0       0
  7119 ;;      Temps:          0       0       0       0       0
  7120 ;;      Totals:         0       0       0       0       0
  7121 ;;Total ram usage:        0 bytes
  7122 ;; Hardware stack levels used:    1
  7123 ;; Hardware stack levels required when called:    2
  7124 ;; This function calls:
  7125 ;;		Nothing
  7126 ;; This function is called by:
  7127 ;;		_main
  7128 ;; This function uses a non-reentrant model
  7129 ;;
  7130                           
  7131                           
  7132                           ;psect for function _setup
  7133  1918                     _setup:
  7134  1918                     l3370:	
  7135                           ;incstack = 0
  7136                           ; Regs used in _setup: [wreg+status,2]
  7137                           
  7138                           
  7139                           ;lab3_main.c: 148:     TRISE = 0;
  7140  1918  1683               	bsf	3,5	;RP0=1, select bank1
  7141  1919  1303               	bcf	3,6	;RP1=0, select bank1
  7142  191A  0189               	clrf	9	;volatile
  7143                           
  7144                           ;lab3_main.c: 149:     PORTE = 0;
  7145  191B  1283               	bcf	3,5	;RP0=0, select bank0
  7146  191C  1303               	bcf	3,6	;RP1=0, select bank0
  7147  191D  0189               	clrf	9	;volatile
  7148  191E                     l3372:
  7149                           
  7150                           ;lab3_main.c: 150:     ANSEL = 0b00000011;
  7151  191E  3003               	movlw	3
  7152  191F  1683               	bsf	3,5	;RP0=1, select bank3
  7153  1920  1703               	bsf	3,6	;RP1=1, select bank3
  7154  1921  0088               	movwf	8	;volatile
  7155  1922                     l3374:
  7156                           
  7157                           ;lab3_main.c: 151:     ANSELH = 0;
  7158  1922  0189               	clrf	9	;volatile
  7159  1923                     l3376:
  7160                           
  7161                           ;lab3_main.c: 152:     TRISB = 0;
  7162  1923  1683               	bsf	3,5	;RP0=1, select bank1
  7163  1924  1303               	bcf	3,6	;RP1=0, select bank1
  7164  1925  0186               	clrf	6	;volatile
  7165  1926                     l3378:
  7166                           
  7167                           ;lab3_main.c: 153:     PORTB = 0;
  7168  1926  1283               	bcf	3,5	;RP0=0, select bank0
  7169  1927  1303               	bcf	3,6	;RP1=0, select bank0
  7170  1928  0186               	clrf	6	;volatile
  7171                           
  7172                           ;lab3_main.c: 154:     TRISC = 0b10000000;
  7173  1929  3080               	movlw	128
  7174  192A  1683               	bsf	3,5	;RP0=1, select bank1
  7175  192B  1303               	bcf	3,6	;RP1=0, select bank1
  7176  192C  0087               	movwf	7	;volatile
  7177  192D                     l3380:
  7178                           
  7179                           ;lab3_main.c: 155:     PORTC = 0;
  7180  192D  1283               	bcf	3,5	;RP0=0, select bank0
  7181  192E  1303               	bcf	3,6	;RP1=0, select bank0
  7182  192F  0187               	clrf	7	;volatile
  7183  1930                     l3382:
  7184                           
  7185                           ;lab3_main.c: 156:     TRISD = 0;
  7186  1930  1683               	bsf	3,5	;RP0=1, select bank1
  7187  1931  1303               	bcf	3,6	;RP1=0, select bank1
  7188  1932  0188               	clrf	8	;volatile
  7189  1933                     l3384:
  7190                           
  7191                           ;lab3_main.c: 157:     PORTD = 0;
  7192  1933  1283               	bcf	3,5	;RP0=0, select bank0
  7193  1934  1303               	bcf	3,6	;RP1=0, select bank0
  7194  1935  0188               	clrf	8	;volatile
  7195  1936                     l3386:
  7196                           
  7197                           ;lab3_main.c: 158:     PORTA = 0;
  7198  1936  0185               	clrf	5	;volatile
  7199                           
  7200                           ;lab3_main.c: 159:     TRISA = 0b00000011;
  7201  1937  3003               	movlw	3
  7202  1938  1683               	bsf	3,5	;RP0=1, select bank1
  7203  1939  1303               	bcf	3,6	;RP1=0, select bank1
  7204  193A  0085               	movwf	5	;volatile
  7205  193B                     l3388:
  7206                           
  7207                           ;lab3_main.c: 161:     INTCONbits.PEIE=1;
  7208  193B  170B               	bsf	11,6	;volatile
  7209  193C                     l3390:
  7210                           
  7211                           ;lab3_main.c: 162:     PIE1bits.RCIE=1;
  7212  193C  168C               	bsf	12,5	;volatile
  7213  193D                     l3392:
  7214                           
  7215                           ;lab3_main.c: 163:     PIR1bits.RCIF=0;
  7216  193D  1283               	bcf	3,5	;RP0=0, select bank0
  7217  193E  1303               	bcf	3,6	;RP1=0, select bank0
  7218  193F  128C               	bcf	12,5	;volatile
  7219  1940                     l3394:
  7220                           
  7221                           ;lab3_main.c: 164:     INTCONbits.GIE=1;
  7222  1940  178B               	bsf	11,7	;volatile
  7223  1941                     l100:
  7224  1941  0008               	return
  7225  1942                     __end_of_setup:
  7226                           
  7227                           	psect	text21
  7228  183B                     __ptext21:	
  7229 ;; *************** function _initADC *****************
  7230 ;; Defined at:
  7231 ;;		line 6 in file "ADC.c"
  7232 ;; Parameters:    Size  Location     Type
  7233 ;;		None
  7234 ;; Auto vars:     Size  Location     Type
  7235 ;;		None
  7236 ;; Return value:  Size  Location     Type
  7237 ;;                  1    wreg      void 
  7238 ;; Registers used:
  7239 ;;		wreg, status,2
  7240 ;; Tracked objects:
  7241 ;;		On entry : 0/0
  7242 ;;		On exit  : 0/0
  7243 ;;		Unchanged: 0/0
  7244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7245 ;;      Params:         0       0       0       0       0
  7246 ;;      Locals:         0       0       0       0       0
  7247 ;;      Temps:          0       0       0       0       0
  7248 ;;      Totals:         0       0       0       0       0
  7249 ;;Total ram usage:        0 bytes
  7250 ;; Hardware stack levels used:    1
  7251 ;; Hardware stack levels required when called:    2
  7252 ;; This function calls:
  7253 ;;		Nothing
  7254 ;; This function is called by:
  7255 ;;		_main
  7256 ;; This function uses a non-reentrant model
  7257 ;;
  7258                           
  7259                           
  7260                           ;psect for function _initADC
  7261  183B                     _initADC:
  7262  183B                     l3396:	
  7263                           ;incstack = 0
  7264                           ; Regs used in _initADC: [wreg+status,2]
  7265                           
  7266                           
  7267                           ;ADC.c: 12:     INTCONbits.PEIE = 1;
  7268  183B  170B               	bsf	11,6	;volatile
  7269                           
  7270                           ;ADC.c: 13:     PIE1bits.ADIE = 1;
  7271  183C  1683               	bsf	3,5	;RP0=1, select bank1
  7272  183D  1303               	bcf	3,6	;RP1=0, select bank1
  7273  183E  170C               	bsf	12,6	;volatile
  7274                           
  7275                           ;ADC.c: 14:     PIR1bits.ADIF = 0;
  7276  183F  1283               	bcf	3,5	;RP0=0, select bank0
  7277  1840  1303               	bcf	3,6	;RP1=0, select bank0
  7278  1841  130C               	bcf	12,6	;volatile
  7279  1842                     l3398:
  7280                           
  7281                           ;ADC.c: 15:     ADCON0 = 0b01000001;
  7282  1842  3041               	movlw	65
  7283  1843  009F               	movwf	31	;volatile
  7284  1844                     l3400:
  7285                           
  7286                           ;ADC.c: 16:     ADCON1 = 0b00000000;
  7287  1844  1683               	bsf	3,5	;RP0=1, select bank1
  7288  1845  1303               	bcf	3,6	;RP1=0, select bank1
  7289  1846  019F               	clrf	31	;volatile
  7290  1847                     l158:
  7291  1847  0008               	return
  7292  1848                     __end_of_initADC:
  7293                           
  7294                           	psect	text22
  7295  1942                     __ptext22:	
  7296 ;; *************** function _USART_Write_String *****************
  7297 ;; Defined at:
  7298 ;;		line 43 in file "USART.c"
  7299 ;; Parameters:    Size  Location     Type
  7300 ;;  a               2    4[COMMON] PTR unsigned char 
  7301 ;;		 -> pantalla(20), STR_1(21), 
  7302 ;; Auto vars:     Size  Location     Type
  7303 ;;  i               1    7[COMMON] unsigned char 
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  1    wreg      void 
  7306 ;; Registers used:
  7307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7313 ;;      Params:         2       0       0       0       0
  7314 ;;      Locals:         1       0       0       0       0
  7315 ;;      Temps:          1       0       0       0       0
  7316 ;;      Totals:         4       0       0       0       0
  7317 ;;Total ram usage:        4 bytes
  7318 ;; Hardware stack levels used:    1
  7319 ;; Hardware stack levels required when called:    3
  7320 ;; This function calls:
  7321 ;;		_USART_Write
  7322 ;; This function is called by:
  7323 ;;		_main
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           
  7328                           ;psect for function _USART_Write_String
  7329  1942                     _USART_Write_String:
  7330  1942                     l3438:	
  7331                           ;incstack = 0
  7332                           ; Regs used in _USART_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7333                           
  7334                           
  7335                           ;USART.c: 44:     uint8_t i;;USART.c: 45:     for(i=0;a[i]!='\0';i++){
  7336  1942  01F7               	clrf	USART_Write_String@i
  7337  1943  2959               	goto	l3444
  7338  1944                     l3440:
  7339                           
  7340                           ;USART.c: 46:         USART_Write(a[i]);
  7341  1944  0877               	movf	USART_Write_String@i,w
  7342  1945  0774               	addwf	USART_Write_String@a,w
  7343  1946  0084               	movwf	4
  7344  1947  0875               	movf	USART_Write_String@a+1,w
  7345  1948  1803               	skipnc
  7346  1949  0A75               	incf	USART_Write_String@a+1,w
  7347  194A  00FF               	movwf	btemp+1
  7348  194B  120A  158A  2000  160A  158A  	fcall	stringtab
  7349  1950  160A  158A  2022  160A  158A  	fcall	_USART_Write
  7350  1955                     l3442:
  7351                           
  7352                           ;USART.c: 47:     }
  7353  1955  3001               	movlw	1
  7354  1956  00F6               	movwf	??_USART_Write_String
  7355  1957  0876               	movf	??_USART_Write_String,w
  7356  1958  07F7               	addwf	USART_Write_String@i,f
  7357  1959                     l3444:
  7358  1959  0877               	movf	USART_Write_String@i,w
  7359  195A  0774               	addwf	USART_Write_String@a,w
  7360  195B  0084               	movwf	4
  7361  195C  0875               	movf	USART_Write_String@a+1,w
  7362  195D  1803               	skipnc
  7363  195E  0A75               	incf	USART_Write_String@a+1,w
  7364  195F  1283               	bcf	3,5	;RP0=0, select bank0
  7365  1960  1303               	bcf	3,6	;RP1=0, select bank0
  7366  1961  00FF               	movwf	btemp+1
  7367  1962  120A  158A  2000  160A  158A  	fcall	stringtab
  7368  1967  3A00               	xorlw	0
  7369  1968  1D03               	skipz
  7370  1969  296B               	goto	u5231
  7371  196A  296C               	goto	u5230
  7372  196B                     u5231:
  7373  196B  2944               	goto	l3440
  7374  196C                     u5230:
  7375  196C                     l235:
  7376  196C  0008               	return
  7377  196D                     __end_of_USART_Write_String:
  7378                           
  7379                           	psect	text23
  7380  1822                     __ptext23:	
  7381 ;; *************** function _USART_Write *****************
  7382 ;; Defined at:
  7383 ;;		line 39 in file "USART.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;  a               1    wreg     unsigned char 
  7386 ;; Auto vars:     Size  Location     Type
  7387 ;;  a               1    3[COMMON] unsigned char 
  7388 ;; Return value:  Size  Location     Type
  7389 ;;                  1    wreg      void 
  7390 ;; Registers used:
  7391 ;;		wreg
  7392 ;; Tracked objects:
  7393 ;;		On entry : 0/0
  7394 ;;		On exit  : 0/0
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7397 ;;      Params:         0       0       0       0       0
  7398 ;;      Locals:         1       0       0       0       0
  7399 ;;      Temps:          0       0       0       0       0
  7400 ;;      Totals:         1       0       0       0       0
  7401 ;;Total ram usage:        1 bytes
  7402 ;; Hardware stack levels used:    1
  7403 ;; Hardware stack levels required when called:    2
  7404 ;; This function calls:
  7405 ;;		Nothing
  7406 ;; This function is called by:
  7407 ;;		_main
  7408 ;;		_USART_Write_String
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412                           
  7413                           ;psect for function _USART_Write
  7414  1822                     _USART_Write:
  7415                           
  7416                           ;incstack = 0
  7417                           ; Regs used in _USART_Write: [wreg]
  7418                           ;USART_Write@a stored from wreg
  7419  1822  00F3               	movwf	USART_Write@a
  7420  1823                     l2938:
  7421  1823                     l226:	
  7422                           ;USART.c: 40:     while(!TRMT);
  7423                           
  7424  1823  1683               	bsf	3,5	;RP0=1, select bank1
  7425  1824  1303               	bcf	3,6	;RP1=0, select bank1
  7426  1825  1C98               	btfss	24,1	;volatile
  7427  1826  2828               	goto	u4151
  7428  1827  2829               	goto	u4150
  7429  1828                     u4151:
  7430  1828  2823               	goto	l226
  7431  1829                     u4150:
  7432  1829                     l2940:
  7433                           
  7434                           ;USART.c: 41:     TXREG=a;
  7435  1829  0873               	movf	USART_Write@a,w
  7436  182A  1283               	bcf	3,5	;RP0=0, select bank0
  7437  182B  1303               	bcf	3,6	;RP1=0, select bank0
  7438  182C  0099               	movwf	25	;volatile
  7439  182D                     l229:
  7440  182D  0008               	return
  7441  182E                     __end_of_USART_Write:
  7442                           
  7443                           	psect	text24
  7444  180C                     __ptext24:	
  7445 ;; *************** function _Set_Baud_Rate *****************
  7446 ;; Defined at:
  7447 ;;		line 10 in file "USART.c"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;		None
  7450 ;; Auto vars:     Size  Location     Type
  7451 ;;		None
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  1    wreg      void 
  7454 ;; Registers used:
  7455 ;;		wreg
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7461 ;;      Params:         0       0       0       0       0
  7462 ;;      Locals:         0       0       0       0       0
  7463 ;;      Temps:          0       0       0       0       0
  7464 ;;      Totals:         0       0       0       0       0
  7465 ;;Total ram usage:        0 bytes
  7466 ;; Hardware stack levels used:    1
  7467 ;; Hardware stack levels required when called:    2
  7468 ;; This function calls:
  7469 ;;		Nothing
  7470 ;; This function is called by:
  7471 ;;		_main
  7472 ;; This function uses a non-reentrant model
  7473 ;;
  7474                           
  7475                           
  7476                           ;psect for function _Set_Baud_Rate
  7477  180C                     _Set_Baud_Rate:
  7478  180C                     l3416:	
  7479                           ;incstack = 0
  7480                           ; Regs used in _Set_Baud_Rate: [wreg]
  7481                           
  7482                           
  7483                           ;USART.c: 11:     SPBRG = 12;
  7484  180C  300C               	movlw	12
  7485  180D  1683               	bsf	3,5	;RP0=1, select bank1
  7486  180E  1303               	bcf	3,6	;RP1=0, select bank1
  7487  180F  0099               	movwf	25	;volatile
  7488  1810                     l217:
  7489  1810  0008               	return
  7490  1811                     __end_of_Set_Baud_Rate:
  7491                           
  7492                           	psect	text25
  7493  100A                     __ptext25:	
  7494 ;; *************** function _LeerADC *****************
  7495 ;; Defined at:
  7496 ;;		line 177 in file "lab3_main.c"
  7497 ;; Parameters:    Size  Location     Type
  7498 ;;  x               1    wreg     unsigned char 
  7499 ;; Auto vars:     Size  Location     Type
  7500 ;;  x               1   44[BANK0 ] unsigned char 
  7501 ;;  a               4   45[BANK0 ] float 
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  4   36[BANK0 ] float 
  7504 ;; Registers used:
  7505 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7511 ;;      Params:         0       4       0       0       0
  7512 ;;      Locals:         0       5       0       0       0
  7513 ;;      Temps:          0       4       0       0       0
  7514 ;;      Totals:         0      13       0       0       0
  7515 ;;Total ram usage:       13 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; Hardware stack levels required when called:    4
  7518 ;; This function calls:
  7519 ;;		_ADC_Select
  7520 ;;		___flmul
  7521 ;;		___xxtofl
  7522 ;; This function is called by:
  7523 ;;		_main
  7524 ;; This function uses a non-reentrant model
  7525 ;;
  7526                           
  7527                           
  7528                           ;psect for function _LeerADC
  7529  100A                     _LeerADC:
  7530                           
  7531                           ;incstack = 0
  7532                           ; Regs used in _LeerADC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7533                           ;LeerADC@x stored from wreg
  7534  100A  1283               	bcf	3,5	;RP0=0, select bank0
  7535  100B  1303               	bcf	3,6	;RP1=0, select bank0
  7536  100C  00CC               	movwf	LeerADC@x
  7537  100D                     l4232:
  7538  100D                     l4234:
  7539                           
  7540                           ;lab3_main.c: 179:     ADC_Select(x);
  7541  100D  084C               	movf	LeerADC@x,w
  7542  100E  160A  158A  2489  160A  118A  	fcall	_ADC_Select
  7543  1013                     l4236:
  7544                           
  7545                           ;lab3_main.c: 180:     ADCON0bits.ADON=1;
  7546  1013  1283               	bcf	3,5	;RP0=0, select bank0
  7547  1014  1303               	bcf	3,6	;RP1=0, select bank0
  7548  1015  141F               	bsf	31,0	;volatile
  7549  1016                     l4238:
  7550                           
  7551                           ;lab3_main.c: 181:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  7552  1016  300C               	movlw	12
  7553  1017  1283               	bcf	3,5	;RP0=0, select bank0
  7554  1018  1303               	bcf	3,6	;RP1=0, select bank0
  7555  1019  00C8               	movwf	??_LeerADC
  7556  101A                     u7437:
  7557  101A  0BC8               	decfsz	??_LeerADC,f
  7558  101B  281A               	goto	u7437
  7559  101C  0000               	nop
  7560  101D                     l4240:
  7561                           
  7562                           ;lab3_main.c: 182:     ADCON0bits.GO=1;
  7563  101D  1283               	bcf	3,5	;RP0=0, select bank0
  7564  101E  1303               	bcf	3,6	;RP1=0, select bank0
  7565  101F  149F               	bsf	31,1	;volatile
  7566  1020                     l103:	
  7567                           ;lab3_main.c: 183:     while(ADCON0bits.GO_DONE==1){};
  7568                           
  7569  1020  189F               	btfsc	31,1	;volatile
  7570  1021  2823               	goto	u6831
  7571  1022  2824               	goto	u6830
  7572  1023                     u6831:
  7573  1023  2820               	goto	l103
  7574  1024                     u6830:
  7575  1024                     l4242:
  7576                           
  7577                           ;lab3_main.c: 185:     a = ADRESH * 0.0196;
  7578  1024  303C               	movlw	60
  7579  1025  00AD               	movwf	___flmul@b+3
  7580  1026  30A0               	movlw	160
  7581  1027  00AC               	movwf	___flmul@b+2
  7582  1028  3090               	movlw	144
  7583  1029  00AB               	movwf	___flmul@b+1
  7584  102A  302E               	movlw	46
  7585  102B  00AA               	movwf	___flmul@b
  7586  102C  081E               	movf	30,w	;volatile
  7587  102D  00C8               	movwf	??_LeerADC
  7588  102E  01C9               	clrf	??_LeerADC+1
  7589  102F  01CA               	clrf	??_LeerADC+2
  7590  1030  01CB               	clrf	??_LeerADC+3
  7591  1031  084B               	movf	??_LeerADC+3,w
  7592  1032  00F6               	movwf	___xxtofl@val+3
  7593  1033  084A               	movf	??_LeerADC+2,w
  7594  1034  00F5               	movwf	___xxtofl@val+2
  7595  1035  0849               	movf	??_LeerADC+1,w
  7596  1036  00F4               	movwf	___xxtofl@val+1
  7597  1037  0848               	movf	??_LeerADC,w
  7598  1038  00F3               	movwf	___xxtofl@val
  7599  1039  3001               	movlw	1
  7600  103A  160A  158A  25C9  160A  118A  	fcall	___xxtofl
  7601  103F  0876               	movf	?___xxtofl+3,w
  7602  1040  1283               	bcf	3,5	;RP0=0, select bank0
  7603  1041  1303               	bcf	3,6	;RP1=0, select bank0
  7604  1042  00B1               	movwf	___flmul@a+3
  7605  1043  0875               	movf	?___xxtofl+2,w
  7606  1044  00B0               	movwf	___flmul@a+2
  7607  1045  0874               	movf	?___xxtofl+1,w
  7608  1046  00AF               	movwf	___flmul@a+1
  7609  1047  0873               	movf	?___xxtofl,w
  7610  1048  00AE               	movwf	___flmul@a
  7611  1049  120A  158A  213C  160A  118A  	fcall	___flmul
  7612  104E  1283               	bcf	3,5	;RP0=0, select bank0
  7613  104F  1303               	bcf	3,6	;RP1=0, select bank0
  7614  1050  082D               	movf	?___flmul+3,w
  7615  1051  00D0               	movwf	LeerADC@a+3
  7616  1052  082C               	movf	?___flmul+2,w
  7617  1053  00CF               	movwf	LeerADC@a+2
  7618  1054  082B               	movf	?___flmul+1,w
  7619  1055  00CE               	movwf	LeerADC@a+1
  7620  1056  082A               	movf	?___flmul,w
  7621  1057  00CD               	movwf	LeerADC@a
  7622  1058                     l4244:
  7623                           
  7624                           ;lab3_main.c: 186:     return a;
  7625  1058  0850               	movf	LeerADC@a+3,w
  7626  1059  00C7               	movwf	?_LeerADC+3
  7627  105A  084F               	movf	LeerADC@a+2,w
  7628  105B  00C6               	movwf	?_LeerADC+2
  7629  105C  084E               	movf	LeerADC@a+1,w
  7630  105D  00C5               	movwf	?_LeerADC+1
  7631  105E  084D               	movf	LeerADC@a,w
  7632  105F  00C4               	movwf	?_LeerADC
  7633  1060                     l106:
  7634  1060  0008               	return
  7635  1061                     __end_of_LeerADC:
  7636                           
  7637                           	psect	text26
  7638  1DC9                     __ptext26:	
  7639 ;; *************** function ___xxtofl *****************
  7640 ;; Defined at:
  7641 ;;		line 10 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7642 ;; Parameters:    Size  Location     Type
  7643 ;;  sign            1    wreg     unsigned char 
  7644 ;;  val             4    3[COMMON] long 
  7645 ;; Auto vars:     Size  Location     Type
  7646 ;;  sign            1    4[BANK0 ] unsigned char 
  7647 ;;  arg             4    6[BANK0 ] unsigned long 
  7648 ;;  exp             1    5[BANK0 ] unsigned char 
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  4    3[COMMON] unsigned char 
  7651 ;; Registers used:
  7652 ;;		wreg, status,2, status,0
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7658 ;;      Params:         4       0       0       0       0
  7659 ;;      Locals:         0       6       0       0       0
  7660 ;;      Temps:          0       4       0       0       0
  7661 ;;      Totals:         4      10       0       0       0
  7662 ;;Total ram usage:       14 bytes
  7663 ;; Hardware stack levels used:    1
  7664 ;; Hardware stack levels required when called:    2
  7665 ;; This function calls:
  7666 ;;		Nothing
  7667 ;; This function is called by:
  7668 ;;		_LeerADC
  7669 ;;		_sprintf
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           
  7674                           ;psect for function ___xxtofl
  7675  1DC9                     ___xxtofl:
  7676                           
  7677                           ;incstack = 0
  7678                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7679                           ;___xxtofl@sign stored from wreg
  7680  1DC9  1283               	bcf	3,5	;RP0=0, select bank0
  7681  1DCA  1303               	bcf	3,6	;RP1=0, select bank0
  7682  1DCB  00A4               	movwf	___xxtofl@sign
  7683  1DCC                     l4174:
  7684  1DCC  0824               	movf	___xxtofl@sign,w
  7685  1DCD  1903               	btfsc	3,2
  7686  1DCE  2DD0               	goto	u6691
  7687  1DCF  2DD1               	goto	u6690
  7688  1DD0                     u6691:
  7689  1DD0  2DE5               	goto	l4180
  7690  1DD1                     u6690:
  7691  1DD1                     l4176:
  7692  1DD1  1FF6               	btfss	___xxtofl@val+3,7
  7693  1DD2  2DD4               	goto	u6701
  7694  1DD3  2DD5               	goto	u6700
  7695  1DD4                     u6701:
  7696  1DD4  2DE5               	goto	l4180
  7697  1DD5                     u6700:
  7698  1DD5                     l4178:
  7699  1DD5  0973               	comf	___xxtofl@val,w
  7700  1DD6  00A6               	movwf	___xxtofl@arg
  7701  1DD7  0974               	comf	___xxtofl@val+1,w
  7702  1DD8  00A7               	movwf	___xxtofl@arg+1
  7703  1DD9  0975               	comf	___xxtofl@val+2,w
  7704  1DDA  00A8               	movwf	___xxtofl@arg+2
  7705  1DDB  0976               	comf	___xxtofl@val+3,w
  7706  1DDC  00A9               	movwf	___xxtofl@arg+3
  7707  1DDD  0AA6               	incf	___xxtofl@arg,f
  7708  1DDE  1903               	skipnz
  7709  1DDF  0AA7               	incf	___xxtofl@arg+1,f
  7710  1DE0  1903               	skipnz
  7711  1DE1  0AA8               	incf	___xxtofl@arg+2,f
  7712  1DE2  1903               	skipnz
  7713  1DE3  0AA9               	incf	___xxtofl@arg+3,f
  7714  1DE4  2DED               	goto	l918
  7715  1DE5                     l4180:
  7716  1DE5  0876               	movf	___xxtofl@val+3,w
  7717  1DE6  00A9               	movwf	___xxtofl@arg+3
  7718  1DE7  0875               	movf	___xxtofl@val+2,w
  7719  1DE8  00A8               	movwf	___xxtofl@arg+2
  7720  1DE9  0874               	movf	___xxtofl@val+1,w
  7721  1DEA  00A7               	movwf	___xxtofl@arg+1
  7722  1DEB  0873               	movf	___xxtofl@val,w
  7723  1DEC  00A6               	movwf	___xxtofl@arg
  7724  1DED                     l918:
  7725  1DED  0876               	movf	___xxtofl@val+3,w
  7726  1DEE  0475               	iorwf	___xxtofl@val+2,w
  7727  1DEF  0474               	iorwf	___xxtofl@val+1,w
  7728  1DF0  0473               	iorwf	___xxtofl@val,w
  7729  1DF1  1D03               	skipz
  7730  1DF2  2DF4               	goto	u6711
  7731  1DF3  2DF5               	goto	u6710
  7732  1DF4                     u6711:
  7733  1DF4  2DFE               	goto	l4186
  7734  1DF5                     u6710:
  7735  1DF5                     l4182:
  7736  1DF5  3000               	movlw	0
  7737  1DF6  00F6               	movwf	?___xxtofl+3
  7738  1DF7  3000               	movlw	0
  7739  1DF8  00F5               	movwf	?___xxtofl+2
  7740  1DF9  3000               	movlw	0
  7741  1DFA  00F4               	movwf	?___xxtofl+1
  7742  1DFB  3000               	movlw	0
  7743  1DFC  00F3               	movwf	?___xxtofl
  7744  1DFD  2E84               	goto	l920
  7745  1DFE                     l4186:
  7746  1DFE  3096               	movlw	150
  7747  1DFF  00A0               	movwf	??___xxtofl
  7748  1E00  0820               	movf	??___xxtofl,w
  7749  1E01  00A5               	movwf	___xxtofl@exp
  7750  1E02  2E10               	goto	l4190
  7751  1E03                     l4188:
  7752  1E03  3001               	movlw	1
  7753  1E04  00A0               	movwf	??___xxtofl
  7754  1E05  0820               	movf	??___xxtofl,w
  7755  1E06  07A5               	addwf	___xxtofl@exp,f
  7756  1E07  3001               	movlw	1
  7757  1E08                     u6725:
  7758  1E08  1003               	clrc
  7759  1E09  0CA9               	rrf	___xxtofl@arg+3,f
  7760  1E0A  0CA8               	rrf	___xxtofl@arg+2,f
  7761  1E0B  0CA7               	rrf	___xxtofl@arg+1,f
  7762  1E0C  0CA6               	rrf	___xxtofl@arg,f
  7763  1E0D  3EFF               	addlw	-1
  7764  1E0E  1D03               	skipz
  7765  1E0F  2E08               	goto	u6725
  7766  1E10                     l4190:
  7767  1E10  30FE               	movlw	254
  7768  1E11  0529               	andwf	___xxtofl@arg+3,w
  7769  1E12  1D03               	btfss	3,2
  7770  1E13  2E15               	goto	u6731
  7771  1E14  2E16               	goto	u6730
  7772  1E15                     u6731:
  7773  1E15  2E03               	goto	l4188
  7774  1E16                     u6730:
  7775  1E16  2E32               	goto	l924
  7776  1E17                     l4192:
  7777  1E17  3001               	movlw	1
  7778  1E18  00A0               	movwf	??___xxtofl
  7779  1E19  0820               	movf	??___xxtofl,w
  7780  1E1A  07A5               	addwf	___xxtofl@exp,f
  7781  1E1B                     l4194:
  7782  1E1B  3001               	movlw	1
  7783  1E1C  07A6               	addwf	___xxtofl@arg,f
  7784  1E1D  3000               	movlw	0
  7785  1E1E  1803               	skipnc
  7786  1E1F  3001               	movlw	1
  7787  1E20  07A7               	addwf	___xxtofl@arg+1,f
  7788  1E21  3000               	movlw	0
  7789  1E22  1803               	skipnc
  7790  1E23  3001               	movlw	1
  7791  1E24  07A8               	addwf	___xxtofl@arg+2,f
  7792  1E25  3000               	movlw	0
  7793  1E26  1803               	skipnc
  7794  1E27  3001               	movlw	1
  7795  1E28  07A9               	addwf	___xxtofl@arg+3,f
  7796  1E29                     l4196:
  7797  1E29  3001               	movlw	1
  7798  1E2A                     u6745:
  7799  1E2A  1003               	clrc
  7800  1E2B  0CA9               	rrf	___xxtofl@arg+3,f
  7801  1E2C  0CA8               	rrf	___xxtofl@arg+2,f
  7802  1E2D  0CA7               	rrf	___xxtofl@arg+1,f
  7803  1E2E  0CA6               	rrf	___xxtofl@arg,f
  7804  1E2F  3EFF               	addlw	-1
  7805  1E30  1D03               	skipz
  7806  1E31  2E2A               	goto	u6745
  7807  1E32                     l924:
  7808  1E32  30FF               	movlw	255
  7809  1E33  0529               	andwf	___xxtofl@arg+3,w
  7810  1E34  1D03               	btfss	3,2
  7811  1E35  2E37               	goto	u6751
  7812  1E36  2E38               	goto	u6750
  7813  1E37                     u6751:
  7814  1E37  2E17               	goto	l4192
  7815  1E38                     u6750:
  7816  1E38  2E44               	goto	l4200
  7817  1E39                     l4198:
  7818  1E39  3001               	movlw	1
  7819  1E3A  02A5               	subwf	___xxtofl@exp,f
  7820  1E3B  3001               	movlw	1
  7821  1E3C  00A0               	movwf	??___xxtofl
  7822  1E3D                     u6765:
  7823  1E3D  1003               	clrc
  7824  1E3E  0DA6               	rlf	___xxtofl@arg,f
  7825  1E3F  0DA7               	rlf	___xxtofl@arg+1,f
  7826  1E40  0DA8               	rlf	___xxtofl@arg+2,f
  7827  1E41  0DA9               	rlf	___xxtofl@arg+3,f
  7828  1E42  0BA0               	decfsz	??___xxtofl,f
  7829  1E43  2E3D               	goto	u6765
  7830  1E44                     l4200:
  7831  1E44  1BA8               	btfsc	___xxtofl@arg+2,7
  7832  1E45  2E47               	goto	u6771
  7833  1E46  2E48               	goto	u6770
  7834  1E47                     u6771:
  7835  1E47  2E4E               	goto	l931
  7836  1E48                     u6770:
  7837  1E48                     l4202:
  7838  1E48  3002               	movlw	2
  7839  1E49  0225               	subwf	___xxtofl@exp,w
  7840  1E4A  1803               	skipnc
  7841  1E4B  2E4D               	goto	u6781
  7842  1E4C  2E4E               	goto	u6780
  7843  1E4D                     u6781:
  7844  1E4D  2E39               	goto	l4198
  7845  1E4E                     u6780:
  7846  1E4E                     l931:
  7847  1E4E  1825               	btfsc	___xxtofl@exp,0
  7848  1E4F  2E51               	goto	u6791
  7849  1E50  2E52               	goto	u6790
  7850  1E51                     u6791:
  7851  1E51  2E5A               	goto	l932
  7852  1E52                     u6790:
  7853  1E52                     l4204:
  7854  1E52  30FF               	movlw	255
  7855  1E53  05A6               	andwf	___xxtofl@arg,f
  7856  1E54  30FF               	movlw	255
  7857  1E55  05A7               	andwf	___xxtofl@arg+1,f
  7858  1E56  307F               	movlw	127
  7859  1E57  05A8               	andwf	___xxtofl@arg+2,f
  7860  1E58  30FF               	movlw	255
  7861  1E59  05A9               	andwf	___xxtofl@arg+3,f
  7862  1E5A                     l932:
  7863  1E5A  1003               	clrc
  7864  1E5B  0CA5               	rrf	___xxtofl@exp,f
  7865  1E5C                     l4206:
  7866  1E5C  0825               	movf	___xxtofl@exp,w
  7867  1E5D  00A0               	movwf	??___xxtofl
  7868  1E5E  01A1               	clrf	??___xxtofl+1
  7869  1E5F  01A2               	clrf	??___xxtofl+2
  7870  1E60  01A3               	clrf	??___xxtofl+3
  7871  1E61  3018               	movlw	24
  7872  1E62                     u6805:
  7873  1E62  1003               	clrc
  7874  1E63  0DA0               	rlf	??___xxtofl,f
  7875  1E64  0DA1               	rlf	??___xxtofl+1,f
  7876  1E65  0DA2               	rlf	??___xxtofl+2,f
  7877  1E66  0DA3               	rlf	??___xxtofl+3,f
  7878  1E67                     u6800:
  7879  1E67  3EFF               	addlw	-1
  7880  1E68  1D03               	skipz
  7881  1E69  2E62               	goto	u6805
  7882  1E6A  0820               	movf	??___xxtofl,w
  7883  1E6B  04A6               	iorwf	___xxtofl@arg,f
  7884  1E6C  0821               	movf	??___xxtofl+1,w
  7885  1E6D  04A7               	iorwf	___xxtofl@arg+1,f
  7886  1E6E  0822               	movf	??___xxtofl+2,w
  7887  1E6F  04A8               	iorwf	___xxtofl@arg+2,f
  7888  1E70  0823               	movf	??___xxtofl+3,w
  7889  1E71  04A9               	iorwf	___xxtofl@arg+3,f
  7890  1E72                     l4208:
  7891  1E72  0824               	movf	___xxtofl@sign,w
  7892  1E73  1903               	btfsc	3,2
  7893  1E74  2E76               	goto	u6811
  7894  1E75  2E77               	goto	u6810
  7895  1E76                     u6811:
  7896  1E76  2E7C               	goto	l4214
  7897  1E77                     u6810:
  7898  1E77                     l4210:
  7899  1E77  1FF6               	btfss	___xxtofl@val+3,7
  7900  1E78  2E7A               	goto	u6821
  7901  1E79  2E7B               	goto	u6820
  7902  1E7A                     u6821:
  7903  1E7A  2E7C               	goto	l4214
  7904  1E7B                     u6820:
  7905  1E7B                     l4212:
  7906  1E7B  17A9               	bsf	___xxtofl@arg+3,7
  7907  1E7C                     l4214:
  7908  1E7C  0829               	movf	___xxtofl@arg+3,w
  7909  1E7D  00F6               	movwf	?___xxtofl+3
  7910  1E7E  0828               	movf	___xxtofl@arg+2,w
  7911  1E7F  00F5               	movwf	?___xxtofl+2
  7912  1E80  0827               	movf	___xxtofl@arg+1,w
  7913  1E81  00F4               	movwf	?___xxtofl+1
  7914  1E82  0826               	movf	___xxtofl@arg,w
  7915  1E83  00F3               	movwf	?___xxtofl
  7916  1E84                     l920:
  7917  1E84  0008               	return
  7918  1E85                     __end_of___xxtofl:
  7919                           
  7920                           	psect	text27
  7921  093C                     __ptext27:	
  7922 ;; *************** function ___flmul *****************
  7923 ;; Defined at:
  7924 ;;		line 8 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;  b               4   10[BANK0 ] unsigned char 
  7927 ;;  a               4   14[BANK0 ] unsigned char 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;  prod            4   30[BANK0 ] struct .
  7930 ;;  grs             4   24[BANK0 ] unsigned long 
  7931 ;;  temp            2   34[BANK0 ] struct .
  7932 ;;  bexp            1   29[BANK0 ] unsigned char 
  7933 ;;  aexp            1   28[BANK0 ] unsigned char 
  7934 ;;  sign            1   23[BANK0 ] unsigned char 
  7935 ;; Return value:  Size  Location     Type
  7936 ;;                  4   10[BANK0 ] unsigned char 
  7937 ;; Registers used:
  7938 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7939 ;; Tracked objects:
  7940 ;;		On entry : 0/0
  7941 ;;		On exit  : 0/0
  7942 ;;		Unchanged: 0/0
  7943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7944 ;;      Params:         0       8       0       0       0
  7945 ;;      Locals:         0      13       0       0       0
  7946 ;;      Temps:          0       5       0       0       0
  7947 ;;      Totals:         0      26       0       0       0
  7948 ;;Total ram usage:       26 bytes
  7949 ;; Hardware stack levels used:    1
  7950 ;; Hardware stack levels required when called:    3
  7951 ;; This function calls:
  7952 ;;		__Umul8_16
  7953 ;; This function is called by:
  7954 ;;		_LeerADC
  7955 ;;		_fround
  7956 ;;		_scale
  7957 ;;		_sprintf
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           
  7962                           ;psect for function ___flmul
  7963  093C                     ___flmul:
  7964  093C                     l2798:	
  7965                           ;incstack = 0
  7966                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7967                           
  7968  093C  1283               	bcf	3,5	;RP0=0, select bank0
  7969  093D  1303               	bcf	3,6	;RP1=0, select bank0
  7970  093E  082D               	movf	___flmul@b+3,w
  7971  093F  3980               	andlw	128
  7972  0940  00B2               	movwf	??___flmul
  7973  0941  0832               	movf	??___flmul,w
  7974  0942  00B7               	movwf	___flmul@sign
  7975  0943                     l2800:
  7976  0943  082D               	movf	___flmul@b+3,w
  7977  0944  00B2               	movwf	??___flmul
  7978  0945  0732               	addwf	??___flmul,w
  7979  0946  00B3               	movwf	??___flmul+1
  7980  0947  0833               	movf	??___flmul+1,w
  7981  0948  00BD               	movwf	___flmul@bexp
  7982  0949                     l2802:
  7983  0949  1FAC               	btfss	___flmul@b+2,7
  7984  094A  294C               	goto	u3781
  7985  094B  294D               	goto	u3780
  7986  094C                     u3781:
  7987  094C  294E               	goto	l2806
  7988  094D                     u3780:
  7989  094D                     l2804:
  7990  094D  143D               	bsf	___flmul@bexp,0
  7991  094E                     l2806:
  7992  094E  083D               	movf	___flmul@bexp,w
  7993  094F  1903               	btfsc	3,2
  7994  0950  2952               	goto	u3791
  7995  0951  2953               	goto	u3790
  7996  0952                     u3791:
  7997  0952  2962               	goto	l2814
  7998  0953                     u3790:
  7999  0953                     l2808:
  8000  0953  0A3D               	incf	___flmul@bexp,w
  8001  0954  1D03               	btfss	3,2
  8002  0955  2957               	goto	u3801
  8003  0956  2958               	goto	u3800
  8004  0957                     u3801:
  8005  0957  2960               	goto	l2812
  8006  0958                     u3800:
  8007  0958                     l2810:
  8008  0958  3000               	movlw	0
  8009  0959  00AD               	movwf	___flmul@b+3
  8010  095A  3000               	movlw	0
  8011  095B  00AC               	movwf	___flmul@b+2
  8012  095C  3000               	movlw	0
  8013  095D  00AB               	movwf	___flmul@b+1
  8014  095E  3000               	movlw	0
  8015  095F  00AA               	movwf	___flmul@b
  8016  0960                     l2812:
  8017  0960  17AC               	bsf	___flmul@b+2,7
  8018  0961  296A               	goto	l2816
  8019  0962                     l2814:
  8020  0962  3000               	movlw	0
  8021  0963  00AD               	movwf	___flmul@b+3
  8022  0964  3000               	movlw	0
  8023  0965  00AC               	movwf	___flmul@b+2
  8024  0966  3000               	movlw	0
  8025  0967  00AB               	movwf	___flmul@b+1
  8026  0968  3000               	movlw	0
  8027  0969  00AA               	movwf	___flmul@b
  8028  096A                     l2816:
  8029  096A  0831               	movf	___flmul@a+3,w
  8030  096B  3980               	andlw	128
  8031  096C  00B2               	movwf	??___flmul
  8032  096D  0832               	movf	??___flmul,w
  8033  096E  06B7               	xorwf	___flmul@sign,f
  8034  096F                     l2818:
  8035  096F  0831               	movf	___flmul@a+3,w
  8036  0970  00B2               	movwf	??___flmul
  8037  0971  0732               	addwf	??___flmul,w
  8038  0972  00B3               	movwf	??___flmul+1
  8039  0973  0833               	movf	??___flmul+1,w
  8040  0974  00BC               	movwf	___flmul@aexp
  8041  0975                     l2820:
  8042  0975  1FB0               	btfss	___flmul@a+2,7
  8043  0976  2978               	goto	u3811
  8044  0977  2979               	goto	u3810
  8045  0978                     u3811:
  8046  0978  297A               	goto	l2824
  8047  0979                     u3810:
  8048  0979                     l2822:
  8049  0979  143C               	bsf	___flmul@aexp,0
  8050  097A                     l2824:
  8051  097A  083C               	movf	___flmul@aexp,w
  8052  097B  1903               	btfsc	3,2
  8053  097C  297E               	goto	u3821
  8054  097D  297F               	goto	u3820
  8055  097E                     u3821:
  8056  097E  298E               	goto	l2832
  8057  097F                     u3820:
  8058  097F                     l2826:
  8059  097F  0A3C               	incf	___flmul@aexp,w
  8060  0980  1D03               	btfss	3,2
  8061  0981  2983               	goto	u3831
  8062  0982  2984               	goto	u3830
  8063  0983                     u3831:
  8064  0983  298C               	goto	l2830
  8065  0984                     u3830:
  8066  0984                     l2828:
  8067  0984  3000               	movlw	0
  8068  0985  00B1               	movwf	___flmul@a+3
  8069  0986  3000               	movlw	0
  8070  0987  00B0               	movwf	___flmul@a+2
  8071  0988  3000               	movlw	0
  8072  0989  00AF               	movwf	___flmul@a+1
  8073  098A  3000               	movlw	0
  8074  098B  00AE               	movwf	___flmul@a
  8075  098C                     l2830:
  8076  098C  17B0               	bsf	___flmul@a+2,7
  8077  098D  2996               	goto	l2834
  8078  098E                     l2832:
  8079  098E  3000               	movlw	0
  8080  098F  00B1               	movwf	___flmul@a+3
  8081  0990  3000               	movlw	0
  8082  0991  00B0               	movwf	___flmul@a+2
  8083  0992  3000               	movlw	0
  8084  0993  00AF               	movwf	___flmul@a+1
  8085  0994  3000               	movlw	0
  8086  0995  00AE               	movwf	___flmul@a
  8087  0996                     l2834:
  8088  0996  083C               	movf	___flmul@aexp,w
  8089  0997  1903               	btfsc	3,2
  8090  0998  299A               	goto	u3841
  8091  0999  299B               	goto	u3840
  8092  099A                     u3841:
  8093  099A  29A0               	goto	l2838
  8094  099B                     u3840:
  8095  099B                     l2836:
  8096  099B  083D               	movf	___flmul@bexp,w
  8097  099C  1D03               	btfss	3,2
  8098  099D  299F               	goto	u3851
  8099  099E  29A0               	goto	u3850
  8100  099F                     u3851:
  8101  099F  29A9               	goto	l2842
  8102  09A0                     u3850:
  8103  09A0                     l2838:
  8104  09A0  3000               	movlw	0
  8105  09A1  00AD               	movwf	?___flmul+3
  8106  09A2  3000               	movlw	0
  8107  09A3  00AC               	movwf	?___flmul+2
  8108  09A4  3000               	movlw	0
  8109  09A5  00AB               	movwf	?___flmul+1
  8110  09A6  3000               	movlw	0
  8111  09A7  00AA               	movwf	?___flmul
  8112  09A8  2C9C               	goto	l874
  8113  09A9                     l2842:
  8114  09A9  082A               	movf	___flmul@b,w
  8115  09AA  00B2               	movwf	??___flmul
  8116  09AB  0832               	movf	??___flmul,w
  8117  09AC  00F3               	movwf	__Umul8_16@multiplicand
  8118  09AD  0830               	movf	___flmul@a+2,w
  8119  09AE  160A  158A  20EF  120A  158A  	fcall	__Umul8_16
  8120  09B3  0874               	movf	?__Umul8_16+1,w
  8121  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  8122  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  8123  09B6  00C3               	movwf	___flmul@temp+1
  8124  09B7  0873               	movf	?__Umul8_16,w
  8125  09B8  00C2               	movwf	___flmul@temp
  8126  09B9                     l2844:
  8127  09B9  0842               	movf	___flmul@temp,w
  8128  09BA  00B2               	movwf	??___flmul
  8129  09BB  01B3               	clrf	??___flmul+1
  8130  09BC  01B4               	clrf	??___flmul+2
  8131  09BD  01B5               	clrf	??___flmul+3
  8132  09BE  0835               	movf	??___flmul+3,w
  8133  09BF  00BB               	movwf	___flmul@grs+3
  8134  09C0  0834               	movf	??___flmul+2,w
  8135  09C1  00BA               	movwf	___flmul@grs+2
  8136  09C2  0833               	movf	??___flmul+1,w
  8137  09C3  00B9               	movwf	___flmul@grs+1
  8138  09C4  0832               	movf	??___flmul,w
  8139  09C5  00B8               	movwf	___flmul@grs
  8140  09C6                     l2846:
  8141  09C6  0843               	movf	___flmul@temp+1,w
  8142  09C7  00B2               	movwf	??___flmul
  8143  09C8  01B3               	clrf	??___flmul+1
  8144  09C9  01B4               	clrf	??___flmul+2
  8145  09CA  01B5               	clrf	??___flmul+3
  8146  09CB  0835               	movf	??___flmul+3,w
  8147  09CC  00C1               	movwf	___flmul@prod+3
  8148  09CD  0834               	movf	??___flmul+2,w
  8149  09CE  00C0               	movwf	___flmul@prod+2
  8150  09CF  0833               	movf	??___flmul+1,w
  8151  09D0  00BF               	movwf	___flmul@prod+1
  8152  09D1  0832               	movf	??___flmul,w
  8153  09D2  00BE               	movwf	___flmul@prod
  8154  09D3  082B               	movf	___flmul@b+1,w
  8155  09D4  00B2               	movwf	??___flmul
  8156  09D5  0832               	movf	??___flmul,w
  8157  09D6  00F3               	movwf	__Umul8_16@multiplicand
  8158  09D7  082F               	movf	___flmul@a+1,w
  8159  09D8  160A  158A  20EF  120A  158A  	fcall	__Umul8_16
  8160  09DD  0874               	movf	?__Umul8_16+1,w
  8161  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  8162  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  8163  09E0  00C3               	movwf	___flmul@temp+1
  8164  09E1  0873               	movf	?__Umul8_16,w
  8165  09E2  00C2               	movwf	___flmul@temp
  8166  09E3                     l2848:
  8167  09E3  0842               	movf	___flmul@temp,w
  8168  09E4  00B2               	movwf	??___flmul
  8169  09E5  01B3               	clrf	??___flmul+1
  8170  09E6  01B4               	clrf	??___flmul+2
  8171  09E7  01B5               	clrf	??___flmul+3
  8172  09E8  0832               	movf	??___flmul,w
  8173  09E9  07B8               	addwf	___flmul@grs,f
  8174  09EA  0833               	movf	??___flmul+1,w
  8175  09EB  1103               	clrz
  8176  09EC  1803               	skipnc
  8177  09ED  3E01               	addlw	1
  8178  09EE  1903               	skipnz
  8179  09EF  29F1               	goto	u3861
  8180  09F0  07B9               	addwf	___flmul@grs+1,f
  8181  09F1                     u3861:
  8182  09F1  0834               	movf	??___flmul+2,w
  8183  09F2  1103               	clrz
  8184  09F3  1803               	skipnc
  8185  09F4  3E01               	addlw	1
  8186  09F5  1903               	skipnz
  8187  09F6  29F8               	goto	u3862
  8188  09F7  07BA               	addwf	___flmul@grs+2,f
  8189  09F8                     u3862:
  8190  09F8  0835               	movf	??___flmul+3,w
  8191  09F9  1103               	clrz
  8192  09FA  1803               	skipnc
  8193  09FB  3E01               	addlw	1
  8194  09FC  1903               	skipnz
  8195  09FD  29FF               	goto	u3863
  8196  09FE  07BB               	addwf	___flmul@grs+3,f
  8197  09FF                     u3863:
  8198  09FF                     l2850:
  8199  09FF  0843               	movf	___flmul@temp+1,w
  8200  0A00  00B2               	movwf	??___flmul
  8201  0A01  01B3               	clrf	??___flmul+1
  8202  0A02  01B4               	clrf	??___flmul+2
  8203  0A03  01B5               	clrf	??___flmul+3
  8204  0A04  0832               	movf	??___flmul,w
  8205  0A05  07BE               	addwf	___flmul@prod,f
  8206  0A06  0833               	movf	??___flmul+1,w
  8207  0A07  1103               	clrz
  8208  0A08  1803               	skipnc
  8209  0A09  3E01               	addlw	1
  8210  0A0A  1903               	skipnz
  8211  0A0B  2A0D               	goto	u3871
  8212  0A0C  07BF               	addwf	___flmul@prod+1,f
  8213  0A0D                     u3871:
  8214  0A0D  0834               	movf	??___flmul+2,w
  8215  0A0E  1103               	clrz
  8216  0A0F  1803               	skipnc
  8217  0A10  3E01               	addlw	1
  8218  0A11  1903               	skipnz
  8219  0A12  2A14               	goto	u3872
  8220  0A13  07C0               	addwf	___flmul@prod+2,f
  8221  0A14                     u3872:
  8222  0A14  0835               	movf	??___flmul+3,w
  8223  0A15  1103               	clrz
  8224  0A16  1803               	skipnc
  8225  0A17  3E01               	addlw	1
  8226  0A18  1903               	skipnz
  8227  0A19  2A1B               	goto	u3873
  8228  0A1A  07C1               	addwf	___flmul@prod+3,f
  8229  0A1B                     u3873:
  8230  0A1B  082C               	movf	___flmul@b+2,w
  8231  0A1C  00B2               	movwf	??___flmul
  8232  0A1D  0832               	movf	??___flmul,w
  8233  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  8234  0A1F  082E               	movf	___flmul@a,w
  8235  0A20  160A  158A  20EF  120A  158A  	fcall	__Umul8_16
  8236  0A25  0874               	movf	?__Umul8_16+1,w
  8237  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  8238  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  8239  0A28  00C3               	movwf	___flmul@temp+1
  8240  0A29  0873               	movf	?__Umul8_16,w
  8241  0A2A  00C2               	movwf	___flmul@temp
  8242  0A2B                     l2852:
  8243  0A2B  0842               	movf	___flmul@temp,w
  8244  0A2C  00B2               	movwf	??___flmul
  8245  0A2D  01B3               	clrf	??___flmul+1
  8246  0A2E  01B4               	clrf	??___flmul+2
  8247  0A2F  01B5               	clrf	??___flmul+3
  8248  0A30  0832               	movf	??___flmul,w
  8249  0A31  07B8               	addwf	___flmul@grs,f
  8250  0A32  0833               	movf	??___flmul+1,w
  8251  0A33  1103               	clrz
  8252  0A34  1803               	skipnc
  8253  0A35  3E01               	addlw	1
  8254  0A36  1903               	skipnz
  8255  0A37  2A39               	goto	u3881
  8256  0A38  07B9               	addwf	___flmul@grs+1,f
  8257  0A39                     u3881:
  8258  0A39  0834               	movf	??___flmul+2,w
  8259  0A3A  1103               	clrz
  8260  0A3B  1803               	skipnc
  8261  0A3C  3E01               	addlw	1
  8262  0A3D  1903               	skipnz
  8263  0A3E  2A40               	goto	u3882
  8264  0A3F  07BA               	addwf	___flmul@grs+2,f
  8265  0A40                     u3882:
  8266  0A40  0835               	movf	??___flmul+3,w
  8267  0A41  1103               	clrz
  8268  0A42  1803               	skipnc
  8269  0A43  3E01               	addlw	1
  8270  0A44  1903               	skipnz
  8271  0A45  2A47               	goto	u3883
  8272  0A46  07BB               	addwf	___flmul@grs+3,f
  8273  0A47                     u3883:
  8274  0A47                     l2854:
  8275  0A47  0843               	movf	___flmul@temp+1,w
  8276  0A48  00B2               	movwf	??___flmul
  8277  0A49  01B3               	clrf	??___flmul+1
  8278  0A4A  01B4               	clrf	??___flmul+2
  8279  0A4B  01B5               	clrf	??___flmul+3
  8280  0A4C  0832               	movf	??___flmul,w
  8281  0A4D  07BE               	addwf	___flmul@prod,f
  8282  0A4E  0833               	movf	??___flmul+1,w
  8283  0A4F  1103               	clrz
  8284  0A50  1803               	skipnc
  8285  0A51  3E01               	addlw	1
  8286  0A52  1903               	skipnz
  8287  0A53  2A55               	goto	u3891
  8288  0A54  07BF               	addwf	___flmul@prod+1,f
  8289  0A55                     u3891:
  8290  0A55  0834               	movf	??___flmul+2,w
  8291  0A56  1103               	clrz
  8292  0A57  1803               	skipnc
  8293  0A58  3E01               	addlw	1
  8294  0A59  1903               	skipnz
  8295  0A5A  2A5C               	goto	u3892
  8296  0A5B  07C0               	addwf	___flmul@prod+2,f
  8297  0A5C                     u3892:
  8298  0A5C  0835               	movf	??___flmul+3,w
  8299  0A5D  1103               	clrz
  8300  0A5E  1803               	skipnc
  8301  0A5F  3E01               	addlw	1
  8302  0A60  1903               	skipnz
  8303  0A61  2A63               	goto	u3893
  8304  0A62  07C1               	addwf	___flmul@prod+3,f
  8305  0A63                     u3893:
  8306  0A63                     l2856:
  8307  0A63  3008               	movlw	8
  8308  0A64  00B2               	movwf	??___flmul
  8309  0A65                     u3905:
  8310  0A65  1003               	clrc
  8311  0A66  0DB8               	rlf	___flmul@grs,f
  8312  0A67  0DB9               	rlf	___flmul@grs+1,f
  8313  0A68  0DBA               	rlf	___flmul@grs+2,f
  8314  0A69  0DBB               	rlf	___flmul@grs+3,f
  8315  0A6A  0BB2               	decfsz	??___flmul,f
  8316  0A6B  2A65               	goto	u3905
  8317  0A6C                     l2858:
  8318  0A6C  082B               	movf	___flmul@b+1,w
  8319  0A6D  00B2               	movwf	??___flmul
  8320  0A6E  0832               	movf	??___flmul,w
  8321  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  8322  0A70  082E               	movf	___flmul@a,w
  8323  0A71  160A  158A  20EF  120A  158A  	fcall	__Umul8_16
  8324  0A76  0874               	movf	?__Umul8_16+1,w
  8325  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  8326  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  8327  0A79  00C3               	movwf	___flmul@temp+1
  8328  0A7A  0873               	movf	?__Umul8_16,w
  8329  0A7B  00C2               	movwf	___flmul@temp
  8330  0A7C                     l2860:
  8331  0A7C  0842               	movf	___flmul@temp,w
  8332  0A7D  00B2               	movwf	??___flmul
  8333  0A7E  0843               	movf	___flmul@temp+1,w
  8334  0A7F  00B3               	movwf	??___flmul+1
  8335  0A80  01B4               	clrf	??___flmul+2
  8336  0A81  01B5               	clrf	??___flmul+3
  8337  0A82  0832               	movf	??___flmul,w
  8338  0A83  07B8               	addwf	___flmul@grs,f
  8339  0A84  0833               	movf	??___flmul+1,w
  8340  0A85  1103               	clrz
  8341  0A86  1803               	skipnc
  8342  0A87  3E01               	addlw	1
  8343  0A88  1903               	skipnz
  8344  0A89  2A8B               	goto	u3911
  8345  0A8A  07B9               	addwf	___flmul@grs+1,f
  8346  0A8B                     u3911:
  8347  0A8B  0834               	movf	??___flmul+2,w
  8348  0A8C  1103               	clrz
  8349  0A8D  1803               	skipnc
  8350  0A8E  3E01               	addlw	1
  8351  0A8F  1903               	skipnz
  8352  0A90  2A92               	goto	u3912
  8353  0A91  07BA               	addwf	___flmul@grs+2,f
  8354  0A92                     u3912:
  8355  0A92  0835               	movf	??___flmul+3,w
  8356  0A93  1103               	clrz
  8357  0A94  1803               	skipnc
  8358  0A95  3E01               	addlw	1
  8359  0A96  1903               	skipnz
  8360  0A97  2A99               	goto	u3913
  8361  0A98  07BB               	addwf	___flmul@grs+3,f
  8362  0A99                     u3913:
  8363  0A99                     l2862:
  8364  0A99  082A               	movf	___flmul@b,w
  8365  0A9A  00B2               	movwf	??___flmul
  8366  0A9B  0832               	movf	??___flmul,w
  8367  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  8368  0A9D  082F               	movf	___flmul@a+1,w
  8369  0A9E  160A  158A  20EF  120A  158A  	fcall	__Umul8_16
  8370  0AA3  0874               	movf	?__Umul8_16+1,w
  8371  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  8372  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  8373  0AA6  00C3               	movwf	___flmul@temp+1
  8374  0AA7  0873               	movf	?__Umul8_16,w
  8375  0AA8  00C2               	movwf	___flmul@temp
  8376  0AA9                     l2864:
  8377  0AA9  0842               	movf	___flmul@temp,w
  8378  0AAA  00B2               	movwf	??___flmul
  8379  0AAB  0843               	movf	___flmul@temp+1,w
  8380  0AAC  00B3               	movwf	??___flmul+1
  8381  0AAD  01B4               	clrf	??___flmul+2
  8382  0AAE  01B5               	clrf	??___flmul+3
  8383  0AAF  0832               	movf	??___flmul,w
  8384  0AB0  07B8               	addwf	___flmul@grs,f
  8385  0AB1  0833               	movf	??___flmul+1,w
  8386  0AB2  1103               	clrz
  8387  0AB3  1803               	skipnc
  8388  0AB4  3E01               	addlw	1
  8389  0AB5  1903               	skipnz
  8390  0AB6  2AB8               	goto	u3921
  8391  0AB7  07B9               	addwf	___flmul@grs+1,f
  8392  0AB8                     u3921:
  8393  0AB8  0834               	movf	??___flmul+2,w
  8394  0AB9  1103               	clrz
  8395  0ABA  1803               	skipnc
  8396  0ABB  3E01               	addlw	1
  8397  0ABC  1903               	skipnz
  8398  0ABD  2ABF               	goto	u3922
  8399  0ABE  07BA               	addwf	___flmul@grs+2,f
  8400  0ABF                     u3922:
  8401  0ABF  0835               	movf	??___flmul+3,w
  8402  0AC0  1103               	clrz
  8403  0AC1  1803               	skipnc
  8404  0AC2  3E01               	addlw	1
  8405  0AC3  1903               	skipnz
  8406  0AC4  2AC6               	goto	u3923
  8407  0AC5  07BB               	addwf	___flmul@grs+3,f
  8408  0AC6                     u3923:
  8409  0AC6                     l2866:
  8410  0AC6  3008               	movlw	8
  8411  0AC7  00B2               	movwf	??___flmul
  8412  0AC8                     u3935:
  8413  0AC8  1003               	clrc
  8414  0AC9  0DB8               	rlf	___flmul@grs,f
  8415  0ACA  0DB9               	rlf	___flmul@grs+1,f
  8416  0ACB  0DBA               	rlf	___flmul@grs+2,f
  8417  0ACC  0DBB               	rlf	___flmul@grs+3,f
  8418  0ACD  0BB2               	decfsz	??___flmul,f
  8419  0ACE  2AC8               	goto	u3935
  8420  0ACF  082A               	movf	___flmul@b,w
  8421  0AD0  00B2               	movwf	??___flmul
  8422  0AD1  0832               	movf	??___flmul,w
  8423  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  8424  0AD3  082E               	movf	___flmul@a,w
  8425  0AD4  160A  158A  20EF  120A  158A  	fcall	__Umul8_16
  8426  0AD9  0874               	movf	?__Umul8_16+1,w
  8427  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  8428  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  8429  0ADC  00C3               	movwf	___flmul@temp+1
  8430  0ADD  0873               	movf	?__Umul8_16,w
  8431  0ADE  00C2               	movwf	___flmul@temp
  8432  0ADF                     l2868:
  8433  0ADF  0842               	movf	___flmul@temp,w
  8434  0AE0  00B2               	movwf	??___flmul
  8435  0AE1  0843               	movf	___flmul@temp+1,w
  8436  0AE2  00B3               	movwf	??___flmul+1
  8437  0AE3  01B4               	clrf	??___flmul+2
  8438  0AE4  01B5               	clrf	??___flmul+3
  8439  0AE5  0832               	movf	??___flmul,w
  8440  0AE6  07B8               	addwf	___flmul@grs,f
  8441  0AE7  0833               	movf	??___flmul+1,w
  8442  0AE8  1103               	clrz
  8443  0AE9  1803               	skipnc
  8444  0AEA  3E01               	addlw	1
  8445  0AEB  1903               	skipnz
  8446  0AEC  2AEE               	goto	u3941
  8447  0AED  07B9               	addwf	___flmul@grs+1,f
  8448  0AEE                     u3941:
  8449  0AEE  0834               	movf	??___flmul+2,w
  8450  0AEF  1103               	clrz
  8451  0AF0  1803               	skipnc
  8452  0AF1  3E01               	addlw	1
  8453  0AF2  1903               	skipnz
  8454  0AF3  2AF5               	goto	u3942
  8455  0AF4  07BA               	addwf	___flmul@grs+2,f
  8456  0AF5                     u3942:
  8457  0AF5  0835               	movf	??___flmul+3,w
  8458  0AF6  1103               	clrz
  8459  0AF7  1803               	skipnc
  8460  0AF8  3E01               	addlw	1
  8461  0AF9  1903               	skipnz
  8462  0AFA  2AFC               	goto	u3943
  8463  0AFB  07BB               	addwf	___flmul@grs+3,f
  8464  0AFC                     u3943:
  8465  0AFC                     l2870:
  8466  0AFC  082B               	movf	___flmul@b+1,w
  8467  0AFD  00B2               	movwf	??___flmul
  8468  0AFE  0832               	movf	??___flmul,w
  8469  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  8470  0B00  0830               	movf	___flmul@a+2,w
  8471  0B01  160A  158A  20EF  120A  158A  	fcall	__Umul8_16
  8472  0B06  0874               	movf	?__Umul8_16+1,w
  8473  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  8474  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  8475  0B09  00C3               	movwf	___flmul@temp+1
  8476  0B0A  0873               	movf	?__Umul8_16,w
  8477  0B0B  00C2               	movwf	___flmul@temp
  8478  0B0C  0842               	movf	___flmul@temp,w
  8479  0B0D  00B2               	movwf	??___flmul
  8480  0B0E  0843               	movf	___flmul@temp+1,w
  8481  0B0F  00B3               	movwf	??___flmul+1
  8482  0B10  01B4               	clrf	??___flmul+2
  8483  0B11  01B5               	clrf	??___flmul+3
  8484  0B12  0832               	movf	??___flmul,w
  8485  0B13  07BE               	addwf	___flmul@prod,f
  8486  0B14  0833               	movf	??___flmul+1,w
  8487  0B15  1103               	clrz
  8488  0B16  1803               	skipnc
  8489  0B17  3E01               	addlw	1
  8490  0B18  1903               	skipnz
  8491  0B19  2B1B               	goto	u3951
  8492  0B1A  07BF               	addwf	___flmul@prod+1,f
  8493  0B1B                     u3951:
  8494  0B1B  0834               	movf	??___flmul+2,w
  8495  0B1C  1103               	clrz
  8496  0B1D  1803               	skipnc
  8497  0B1E  3E01               	addlw	1
  8498  0B1F  1903               	skipnz
  8499  0B20  2B22               	goto	u3952
  8500  0B21  07C0               	addwf	___flmul@prod+2,f
  8501  0B22                     u3952:
  8502  0B22  0835               	movf	??___flmul+3,w
  8503  0B23  1103               	clrz
  8504  0B24  1803               	skipnc
  8505  0B25  3E01               	addlw	1
  8506  0B26  1903               	skipnz
  8507  0B27  2B29               	goto	u3953
  8508  0B28  07C1               	addwf	___flmul@prod+3,f
  8509  0B29                     u3953:
  8510  0B29                     l2872:
  8511  0B29  082C               	movf	___flmul@b+2,w
  8512  0B2A  00B2               	movwf	??___flmul
  8513  0B2B  0832               	movf	??___flmul,w
  8514  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  8515  0B2D  082F               	movf	___flmul@a+1,w
  8516  0B2E  160A  158A  20EF  120A  158A  	fcall	__Umul8_16
  8517  0B33  0874               	movf	?__Umul8_16+1,w
  8518  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  8519  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  8520  0B36  00C3               	movwf	___flmul@temp+1
  8521  0B37  0873               	movf	?__Umul8_16,w
  8522  0B38  00C2               	movwf	___flmul@temp
  8523  0B39                     l2874:
  8524  0B39  0842               	movf	___flmul@temp,w
  8525  0B3A  00B2               	movwf	??___flmul
  8526  0B3B  0843               	movf	___flmul@temp+1,w
  8527  0B3C  00B3               	movwf	??___flmul+1
  8528  0B3D  01B4               	clrf	??___flmul+2
  8529  0B3E  01B5               	clrf	??___flmul+3
  8530  0B3F  0832               	movf	??___flmul,w
  8531  0B40  07BE               	addwf	___flmul@prod,f
  8532  0B41  0833               	movf	??___flmul+1,w
  8533  0B42  1103               	clrz
  8534  0B43  1803               	skipnc
  8535  0B44  3E01               	addlw	1
  8536  0B45  1903               	skipnz
  8537  0B46  2B48               	goto	u3961
  8538  0B47  07BF               	addwf	___flmul@prod+1,f
  8539  0B48                     u3961:
  8540  0B48  0834               	movf	??___flmul+2,w
  8541  0B49  1103               	clrz
  8542  0B4A  1803               	skipnc
  8543  0B4B  3E01               	addlw	1
  8544  0B4C  1903               	skipnz
  8545  0B4D  2B4F               	goto	u3962
  8546  0B4E  07C0               	addwf	___flmul@prod+2,f
  8547  0B4F                     u3962:
  8548  0B4F  0835               	movf	??___flmul+3,w
  8549  0B50  1103               	clrz
  8550  0B51  1803               	skipnc
  8551  0B52  3E01               	addlw	1
  8552  0B53  1903               	skipnz
  8553  0B54  2B56               	goto	u3963
  8554  0B55  07C1               	addwf	___flmul@prod+3,f
  8555  0B56                     u3963:
  8556  0B56  082C               	movf	___flmul@b+2,w
  8557  0B57  00B2               	movwf	??___flmul
  8558  0B58  0832               	movf	??___flmul,w
  8559  0B59  00F3               	movwf	__Umul8_16@multiplicand
  8560  0B5A  0830               	movf	___flmul@a+2,w
  8561  0B5B  160A  158A  20EF  120A  158A  	fcall	__Umul8_16
  8562  0B60  0874               	movf	?__Umul8_16+1,w
  8563  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8564  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8565  0B63  00C3               	movwf	___flmul@temp+1
  8566  0B64  0873               	movf	?__Umul8_16,w
  8567  0B65  00C2               	movwf	___flmul@temp
  8568  0B66                     l2876:
  8569  0B66  0842               	movf	___flmul@temp,w
  8570  0B67  00B2               	movwf	??___flmul
  8571  0B68  0843               	movf	___flmul@temp+1,w
  8572  0B69  00B3               	movwf	??___flmul+1
  8573  0B6A  01B4               	clrf	??___flmul+2
  8574  0B6B  01B5               	clrf	??___flmul+3
  8575  0B6C  3008               	movlw	8
  8576  0B6D                     u3975:
  8577  0B6D  1003               	clrc
  8578  0B6E  0DB2               	rlf	??___flmul,f
  8579  0B6F  0DB3               	rlf	??___flmul+1,f
  8580  0B70  0DB4               	rlf	??___flmul+2,f
  8581  0B71  0DB5               	rlf	??___flmul+3,f
  8582  0B72                     u3970:
  8583  0B72  3EFF               	addlw	-1
  8584  0B73  1D03               	skipz
  8585  0B74  2B6D               	goto	u3975
  8586  0B75  0832               	movf	??___flmul,w
  8587  0B76  07BE               	addwf	___flmul@prod,f
  8588  0B77  0833               	movf	??___flmul+1,w
  8589  0B78  1103               	clrz
  8590  0B79  1803               	skipnc
  8591  0B7A  3E01               	addlw	1
  8592  0B7B  1903               	skipnz
  8593  0B7C  2B7E               	goto	u3981
  8594  0B7D  07BF               	addwf	___flmul@prod+1,f
  8595  0B7E                     u3981:
  8596  0B7E  0834               	movf	??___flmul+2,w
  8597  0B7F  1103               	clrz
  8598  0B80  1803               	skipnc
  8599  0B81  3E01               	addlw	1
  8600  0B82  1903               	skipnz
  8601  0B83  2B85               	goto	u3982
  8602  0B84  07C0               	addwf	___flmul@prod+2,f
  8603  0B85                     u3982:
  8604  0B85  0835               	movf	??___flmul+3,w
  8605  0B86  1103               	clrz
  8606  0B87  1803               	skipnc
  8607  0B88  3E01               	addlw	1
  8608  0B89  1903               	skipnz
  8609  0B8A  2B8C               	goto	u3983
  8610  0B8B  07C1               	addwf	___flmul@prod+3,f
  8611  0B8C                     u3983:
  8612  0B8C                     l2878:
  8613  0B8C  0838               	movf	___flmul@grs,w
  8614  0B8D  00B2               	movwf	??___flmul
  8615  0B8E  0839               	movf	___flmul@grs+1,w
  8616  0B8F  00B3               	movwf	??___flmul+1
  8617  0B90  083A               	movf	___flmul@grs+2,w
  8618  0B91  00B4               	movwf	??___flmul+2
  8619  0B92  083B               	movf	___flmul@grs+3,w
  8620  0B93  00B5               	movwf	??___flmul+3
  8621  0B94  3018               	movlw	24
  8622  0B95                     u3995:
  8623  0B95  1003               	clrc
  8624  0B96  0CB5               	rrf	??___flmul+3,f
  8625  0B97  0CB4               	rrf	??___flmul+2,f
  8626  0B98  0CB3               	rrf	??___flmul+1,f
  8627  0B99  0CB2               	rrf	??___flmul,f
  8628  0B9A                     u3990:
  8629  0B9A  3EFF               	addlw	-1
  8630  0B9B  1D03               	skipz
  8631  0B9C  2B95               	goto	u3995
  8632  0B9D  0832               	movf	??___flmul,w
  8633  0B9E  07BE               	addwf	___flmul@prod,f
  8634  0B9F  0833               	movf	??___flmul+1,w
  8635  0BA0  1103               	clrz
  8636  0BA1  1803               	skipnc
  8637  0BA2  3E01               	addlw	1
  8638  0BA3  1903               	skipnz
  8639  0BA4  2BA6               	goto	u4001
  8640  0BA5  07BF               	addwf	___flmul@prod+1,f
  8641  0BA6                     u4001:
  8642  0BA6  0834               	movf	??___flmul+2,w
  8643  0BA7  1103               	clrz
  8644  0BA8  1803               	skipnc
  8645  0BA9  3E01               	addlw	1
  8646  0BAA  1903               	skipnz
  8647  0BAB  2BAD               	goto	u4002
  8648  0BAC  07C0               	addwf	___flmul@prod+2,f
  8649  0BAD                     u4002:
  8650  0BAD  0835               	movf	??___flmul+3,w
  8651  0BAE  1103               	clrz
  8652  0BAF  1803               	skipnc
  8653  0BB0  3E01               	addlw	1
  8654  0BB1  1903               	skipnz
  8655  0BB2  2BB4               	goto	u4003
  8656  0BB3  07C1               	addwf	___flmul@prod+3,f
  8657  0BB4                     u4003:
  8658  0BB4                     l2880:
  8659  0BB4  3008               	movlw	8
  8660  0BB5  00B2               	movwf	??___flmul
  8661  0BB6                     u4015:
  8662  0BB6  1003               	clrc
  8663  0BB7  0DB8               	rlf	___flmul@grs,f
  8664  0BB8  0DB9               	rlf	___flmul@grs+1,f
  8665  0BB9  0DBA               	rlf	___flmul@grs+2,f
  8666  0BBA  0DBB               	rlf	___flmul@grs+3,f
  8667  0BBB  0BB2               	decfsz	??___flmul,f
  8668  0BBC  2BB6               	goto	u4015
  8669  0BBD                     l2882:
  8670  0BBD  083D               	movf	___flmul@bexp,w
  8671  0BBE  073C               	addwf	___flmul@aexp,w
  8672  0BBF  00B2               	movwf	??___flmul
  8673  0BC0  01B3               	clrf	??___flmul+1
  8674  0BC1  0DB3               	rlf	??___flmul+1,f
  8675  0BC2  0832               	movf	??___flmul,w
  8676  0BC3  3E82               	addlw	130
  8677  0BC4  00C2               	movwf	___flmul@temp
  8678  0BC5  0833               	movf	??___flmul+1,w
  8679  0BC6  1803               	skipnc
  8680  0BC7  3E01               	addlw	1
  8681  0BC8  3EFF               	addlw	255
  8682  0BC9  00C3               	movwf	___flmul@temp+1
  8683  0BCA  2BE8               	goto	l2894
  8684  0BCB                     l2884:
  8685  0BCB  3001               	movlw	1
  8686  0BCC  00B2               	movwf	??___flmul
  8687  0BCD                     u4025:
  8688  0BCD  1003               	clrc
  8689  0BCE  0DBE               	rlf	___flmul@prod,f
  8690  0BCF  0DBF               	rlf	___flmul@prod+1,f
  8691  0BD0  0DC0               	rlf	___flmul@prod+2,f
  8692  0BD1  0DC1               	rlf	___flmul@prod+3,f
  8693  0BD2  0BB2               	decfsz	??___flmul,f
  8694  0BD3  2BCD               	goto	u4025
  8695  0BD4                     l2886:
  8696  0BD4  1FBB               	btfss	___flmul@grs+3,7
  8697  0BD5  2BD7               	goto	u4031
  8698  0BD6  2BD8               	goto	u4030
  8699  0BD7                     u4031:
  8700  0BD7  2BD9               	goto	l2890
  8701  0BD8                     u4030:
  8702  0BD8                     l2888:
  8703  0BD8  143E               	bsf	___flmul@prod,0
  8704  0BD9                     l2890:
  8705  0BD9  3001               	movlw	1
  8706  0BDA  00B2               	movwf	??___flmul
  8707  0BDB                     u4045:
  8708  0BDB  1003               	clrc
  8709  0BDC  0DB8               	rlf	___flmul@grs,f
  8710  0BDD  0DB9               	rlf	___flmul@grs+1,f
  8711  0BDE  0DBA               	rlf	___flmul@grs+2,f
  8712  0BDF  0DBB               	rlf	___flmul@grs+3,f
  8713  0BE0  0BB2               	decfsz	??___flmul,f
  8714  0BE1  2BDB               	goto	u4045
  8715  0BE2                     l2892:
  8716  0BE2  30FF               	movlw	255
  8717  0BE3  07C2               	addwf	___flmul@temp,f
  8718  0BE4  1803               	skipnc
  8719  0BE5  0AC3               	incf	___flmul@temp+1,f
  8720  0BE6  30FF               	movlw	255
  8721  0BE7  07C3               	addwf	___flmul@temp+1,f
  8722  0BE8                     l2894:
  8723  0BE8  1FC0               	btfss	___flmul@prod+2,7
  8724  0BE9  2BEB               	goto	u4051
  8725  0BEA  2BEC               	goto	u4050
  8726  0BEB                     u4051:
  8727  0BEB  2BCB               	goto	l2884
  8728  0BEC                     u4050:
  8729  0BEC                     l2896:
  8730  0BEC  01BC               	clrf	___flmul@aexp
  8731  0BED                     l2898:
  8732  0BED  1FBB               	btfss	___flmul@grs+3,7
  8733  0BEE  2BF0               	goto	u4061
  8734  0BEF  2BF1               	goto	u4060
  8735  0BF0                     u4061:
  8736  0BF0  2C0D               	goto	l2906
  8737  0BF1                     u4060:
  8738  0BF1                     l2900:
  8739  0BF1  30FF               	movlw	255
  8740  0BF2  0538               	andwf	___flmul@grs,w
  8741  0BF3  00B2               	movwf	??___flmul
  8742  0BF4  30FF               	movlw	255
  8743  0BF5  0539               	andwf	___flmul@grs+1,w
  8744  0BF6  00B3               	movwf	??___flmul+1
  8745  0BF7  30FF               	movlw	255
  8746  0BF8  053A               	andwf	___flmul@grs+2,w
  8747  0BF9  00B4               	movwf	??___flmul+2
  8748  0BFA  307F               	movlw	127
  8749  0BFB  053B               	andwf	___flmul@grs+3,w
  8750  0BFC  00B5               	movwf	??___flmul+3
  8751  0BFD  0835               	movf	??___flmul+3,w
  8752  0BFE  0434               	iorwf	??___flmul+2,w
  8753  0BFF  0433               	iorwf	??___flmul+1,w
  8754  0C00  0432               	iorwf	??___flmul,w
  8755  0C01  1903               	skipnz
  8756  0C02  2C04               	goto	u4071
  8757  0C03  2C05               	goto	u4070
  8758  0C04                     u4071:
  8759  0C04  2C08               	goto	l880
  8760  0C05                     u4070:
  8761  0C05                     l2902:
  8762  0C05  01BC               	clrf	___flmul@aexp
  8763  0C06  0ABC               	incf	___flmul@aexp,f
  8764  0C07  2C0D               	goto	l2906
  8765  0C08                     l880:
  8766  0C08  1C3E               	btfss	___flmul@prod,0
  8767  0C09  2C0B               	goto	u4081
  8768  0C0A  2C0C               	goto	u4080
  8769  0C0B                     u4081:
  8770  0C0B  2C0D               	goto	l2906
  8771  0C0C                     u4080:
  8772  0C0C  2C05               	goto	l2902
  8773  0C0D                     l2906:
  8774  0C0D  083C               	movf	___flmul@aexp,w
  8775  0C0E  1903               	btfsc	3,2
  8776  0C0F  2C11               	goto	u4091
  8777  0C10  2C12               	goto	u4090
  8778  0C11                     u4091:
  8779  0C11  2C43               	goto	l2916
  8780  0C12                     u4090:
  8781  0C12                     l2908:
  8782  0C12  3001               	movlw	1
  8783  0C13  07BE               	addwf	___flmul@prod,f
  8784  0C14  3000               	movlw	0
  8785  0C15  1803               	skipnc
  8786  0C16  3001               	movlw	1
  8787  0C17  07BF               	addwf	___flmul@prod+1,f
  8788  0C18  3000               	movlw	0
  8789  0C19  1803               	skipnc
  8790  0C1A  3001               	movlw	1
  8791  0C1B  07C0               	addwf	___flmul@prod+2,f
  8792  0C1C  3000               	movlw	0
  8793  0C1D  1803               	skipnc
  8794  0C1E  3001               	movlw	1
  8795  0C1F  07C1               	addwf	___flmul@prod+3,f
  8796  0C20                     l2910:
  8797  0C20  1C41               	btfss	___flmul@prod+3,0
  8798  0C21  2C23               	goto	u4101
  8799  0C22  2C24               	goto	u4100
  8800  0C23                     u4101:
  8801  0C23  2C43               	goto	l2916
  8802  0C24                     u4100:
  8803  0C24                     l2912:
  8804  0C24  083E               	movf	___flmul@prod,w
  8805  0C25  00B2               	movwf	??___flmul
  8806  0C26  083F               	movf	___flmul@prod+1,w
  8807  0C27  00B3               	movwf	??___flmul+1
  8808  0C28  0840               	movf	___flmul@prod+2,w
  8809  0C29  00B4               	movwf	??___flmul+2
  8810  0C2A  0841               	movf	___flmul@prod+3,w
  8811  0C2B  00B5               	movwf	??___flmul+3
  8812  0C2C  3001               	movlw	1
  8813  0C2D  00B6               	movwf	??___flmul+4
  8814  0C2E                     u4115:
  8815  0C2E  0D35               	rlf	??___flmul+3,w
  8816  0C2F  0CB5               	rrf	??___flmul+3,f
  8817  0C30  0CB4               	rrf	??___flmul+2,f
  8818  0C31  0CB3               	rrf	??___flmul+1,f
  8819  0C32  0CB2               	rrf	??___flmul,f
  8820  0C33                     u4110:
  8821  0C33  0BB6               	decfsz	??___flmul+4,f
  8822  0C34  2C2E               	goto	u4115
  8823  0C35  0835               	movf	??___flmul+3,w
  8824  0C36  00C1               	movwf	___flmul@prod+3
  8825  0C37  0834               	movf	??___flmul+2,w
  8826  0C38  00C0               	movwf	___flmul@prod+2
  8827  0C39  0833               	movf	??___flmul+1,w
  8828  0C3A  00BF               	movwf	___flmul@prod+1
  8829  0C3B  0832               	movf	??___flmul,w
  8830  0C3C  00BE               	movwf	___flmul@prod
  8831  0C3D                     l2914:
  8832  0C3D  3001               	movlw	1
  8833  0C3E  07C2               	addwf	___flmul@temp,f
  8834  0C3F  1803               	skipnc
  8835  0C40  0AC3               	incf	___flmul@temp+1,f
  8836  0C41  3000               	movlw	0
  8837  0C42  07C3               	addwf	___flmul@temp+1,f
  8838  0C43                     l2916:
  8839  0C43  0843               	movf	___flmul@temp+1,w
  8840  0C44  3A80               	xorlw	128
  8841  0C45  00FF               	movwf	btemp+1
  8842  0C46  3080               	movlw	128
  8843  0C47  027F               	subwf	btemp+1,w
  8844  0C48  1D03               	skipz
  8845  0C49  2C4C               	goto	u4125
  8846  0C4A  30FF               	movlw	255
  8847  0C4B  0242               	subwf	___flmul@temp,w
  8848  0C4C                     u4125:
  8849  0C4C  1C03               	skipc
  8850  0C4D  2C4F               	goto	u4121
  8851  0C4E  2C50               	goto	u4120
  8852  0C4F                     u4121:
  8853  0C4F  2C5B               	goto	l2920
  8854  0C50                     u4120:
  8855  0C50                     l2918:
  8856  0C50  307F               	movlw	127
  8857  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  8858  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  8859  0C53  00C1               	movwf	___flmul@prod+3
  8860  0C54  3080               	movlw	128
  8861  0C55  00C0               	movwf	___flmul@prod+2
  8862  0C56  3000               	movlw	0
  8863  0C57  00BF               	movwf	___flmul@prod+1
  8864  0C58  3000               	movlw	0
  8865  0C59  00BE               	movwf	___flmul@prod
  8866  0C5A  2C90               	goto	l886
  8867  0C5B                     l2920:
  8868  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  8869  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  8870  0C5D  0843               	movf	___flmul@temp+1,w
  8871  0C5E  3A80               	xorlw	128
  8872  0C5F  00FF               	movwf	btemp+1
  8873  0C60  3080               	movlw	128
  8874  0C61  027F               	subwf	btemp+1,w
  8875  0C62  1D03               	skipz
  8876  0C63  2C66               	goto	u4135
  8877  0C64  3001               	movlw	1
  8878  0C65  0242               	subwf	___flmul@temp,w
  8879  0C66                     u4135:
  8880  0C66  1803               	skipnc
  8881  0C67  2C69               	goto	u4131
  8882  0C68  2C6A               	goto	u4130
  8883  0C69                     u4131:
  8884  0C69  2C76               	goto	l2926
  8885  0C6A                     u4130:
  8886  0C6A                     l2922:
  8887  0C6A  3000               	movlw	0
  8888  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  8889  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  8890  0C6D  00C1               	movwf	___flmul@prod+3
  8891  0C6E  3000               	movlw	0
  8892  0C6F  00C0               	movwf	___flmul@prod+2
  8893  0C70  3000               	movlw	0
  8894  0C71  00BF               	movwf	___flmul@prod+1
  8895  0C72  3000               	movlw	0
  8896  0C73  00BE               	movwf	___flmul@prod
  8897  0C74                     l2924:
  8898  0C74  01B7               	clrf	___flmul@sign
  8899  0C75  2C90               	goto	l886
  8900  0C76                     l2926:
  8901  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  8902  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  8903  0C78  0842               	movf	___flmul@temp,w
  8904  0C79  00B2               	movwf	??___flmul
  8905  0C7A  0832               	movf	??___flmul,w
  8906  0C7B  00BD               	movwf	___flmul@bexp
  8907  0C7C  30FF               	movlw	255
  8908  0C7D  05BE               	andwf	___flmul@prod,f
  8909  0C7E  30FF               	movlw	255
  8910  0C7F  05BF               	andwf	___flmul@prod+1,f
  8911  0C80  307F               	movlw	127
  8912  0C81  05C0               	andwf	___flmul@prod+2,f
  8913  0C82  3000               	movlw	0
  8914  0C83  05C1               	andwf	___flmul@prod+3,f
  8915  0C84                     l2928:
  8916  0C84  1C3D               	btfss	___flmul@bexp,0
  8917  0C85  2C87               	goto	u4141
  8918  0C86  2C88               	goto	u4140
  8919  0C87                     u4141:
  8920  0C87  2C89               	goto	l2932
  8921  0C88                     u4140:
  8922  0C88                     l2930:
  8923  0C88  17C0               	bsf	___flmul@prod+2,7
  8924  0C89                     l2932:
  8925  0C89  083D               	movf	___flmul@bexp,w
  8926  0C8A  00B2               	movwf	??___flmul
  8927  0C8B  1003               	clrc
  8928  0C8C  0C32               	rrf	??___flmul,w
  8929  0C8D  00B3               	movwf	??___flmul+1
  8930  0C8E  0833               	movf	??___flmul+1,w
  8931  0C8F  00C1               	movwf	___flmul@prod+3
  8932  0C90                     l886:
  8933  0C90  0837               	movf	___flmul@sign,w
  8934  0C91  00B2               	movwf	??___flmul
  8935  0C92  0832               	movf	??___flmul,w
  8936  0C93  04C1               	iorwf	___flmul@prod+3,f
  8937  0C94                     l2934:
  8938  0C94  0841               	movf	___flmul@prod+3,w
  8939  0C95  00AD               	movwf	?___flmul+3
  8940  0C96  0840               	movf	___flmul@prod+2,w
  8941  0C97  00AC               	movwf	?___flmul+2
  8942  0C98  083F               	movf	___flmul@prod+1,w
  8943  0C99  00AB               	movwf	?___flmul+1
  8944  0C9A  083E               	movf	___flmul@prod,w
  8945  0C9B  00AA               	movwf	?___flmul
  8946  0C9C                     l874:
  8947  0C9C  0008               	return
  8948  0C9D                     __end_of___flmul:
  8949                           
  8950                           	psect	text28
  8951  18EF                     __ptext28:	
  8952 ;; *************** function __Umul8_16 *****************
  8953 ;; Defined at:
  8954 ;;		line 4 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;  multiplier      1    wreg     unsigned char 
  8957 ;;  multiplicand    1    3[COMMON] unsigned char 
  8958 ;; Auto vars:     Size  Location     Type
  8959 ;;  multiplier      1    4[BANK0 ] unsigned char 
  8960 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  8961 ;;  product         2    0[BANK0 ] unsigned int 
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  2    3[COMMON] unsigned int 
  8964 ;; Registers used:
  8965 ;;		wreg, status,2, status,0
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8971 ;;      Params:         2       0       0       0       0
  8972 ;;      Locals:         0       5       0       0       0
  8973 ;;      Temps:          2       0       0       0       0
  8974 ;;      Totals:         4       5       0       0       0
  8975 ;;Total ram usage:        9 bytes
  8976 ;; Hardware stack levels used:    1
  8977 ;; Hardware stack levels required when called:    2
  8978 ;; This function calls:
  8979 ;;		Nothing
  8980 ;; This function is called by:
  8981 ;;		___flmul
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           
  8985                           
  8986                           ;psect for function __Umul8_16
  8987  18EF                     __Umul8_16:
  8988                           
  8989                           ;incstack = 0
  8990                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8991                           ;__Umul8_16@multiplier stored from wreg
  8992  18EF  1283               	bcf	3,5	;RP0=0, select bank0
  8993  18F0  1303               	bcf	3,6	;RP1=0, select bank0
  8994  18F1  00A4               	movwf	__Umul8_16@multiplier
  8995  18F2                     l2458:
  8996  18F2  01A0               	clrf	__Umul8_16@product
  8997  18F3  01A1               	clrf	__Umul8_16@product+1
  8998  18F4                     l2460:
  8999  18F4  0873               	movf	__Umul8_16@multiplicand,w
  9000  18F5  00F5               	movwf	??__Umul8_16
  9001  18F6  01F6               	clrf	??__Umul8_16+1
  9002  18F7  0875               	movf	??__Umul8_16,w
  9003  18F8  00A2               	movwf	__Umul8_16@word_mpld
  9004  18F9  0876               	movf	??__Umul8_16+1,w
  9005  18FA  00A3               	movwf	__Umul8_16@word_mpld+1
  9006  18FB                     l2462:
  9007  18FB  1C24               	btfss	__Umul8_16@multiplier,0
  9008  18FC  28FE               	goto	u2971
  9009  18FD  28FF               	goto	u2970
  9010  18FE                     u2971:
  9011  18FE  2905               	goto	l893
  9012  18FF                     u2970:
  9013  18FF                     l2464:
  9014  18FF  0822               	movf	__Umul8_16@word_mpld,w
  9015  1900  07A0               	addwf	__Umul8_16@product,f
  9016  1901  1803               	skipnc
  9017  1902  0AA1               	incf	__Umul8_16@product+1,f
  9018  1903  0823               	movf	__Umul8_16@word_mpld+1,w
  9019  1904  07A1               	addwf	__Umul8_16@product+1,f
  9020  1905                     l893:
  9021  1905  3001               	movlw	1
  9022  1906                     u2985:
  9023  1906  1003               	clrc
  9024  1907  0DA2               	rlf	__Umul8_16@word_mpld,f
  9025  1908  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  9026  1909  3EFF               	addlw	-1
  9027  190A  1D03               	skipz
  9028  190B  2906               	goto	u2985
  9029  190C  1003               	clrc
  9030  190D  0CA4               	rrf	__Umul8_16@multiplier,f
  9031  190E                     l2466:
  9032  190E  0824               	movf	__Umul8_16@multiplier,w
  9033  190F  1D03               	btfss	3,2
  9034  1910  2912               	goto	u2991
  9035  1911  2913               	goto	u2990
  9036  1912                     u2991:
  9037  1912  28FB               	goto	l2462
  9038  1913                     u2990:
  9039  1913                     l2468:
  9040  1913  0821               	movf	__Umul8_16@product+1,w
  9041  1914  00F4               	movwf	?__Umul8_16+1
  9042  1915  0820               	movf	__Umul8_16@product,w
  9043  1916  00F3               	movwf	?__Umul8_16
  9044  1917                     l895:
  9045  1917  0008               	return
  9046  1918                     __end_of__Umul8_16:
  9047                           
  9048                           	psect	text29
  9049  1C89                     __ptext29:	
  9050 ;; *************** function _ADC_Select *****************
  9051 ;; Defined at:
  9052 ;;		line 19 in file "ADC.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;  a               1    wreg     unsigned char 
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;  a               1    5[COMMON] unsigned char 
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  1    wreg      void 
  9059 ;; Registers used:
  9060 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9061 ;; Tracked objects:
  9062 ;;		On entry : 0/0
  9063 ;;		On exit  : 0/0
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9066 ;;      Params:         0       0       0       0       0
  9067 ;;      Locals:         1       0       0       0       0
  9068 ;;      Temps:          2       0       0       0       0
  9069 ;;      Totals:         3       0       0       0       0
  9070 ;;Total ram usage:        3 bytes
  9071 ;; Hardware stack levels used:    1
  9072 ;; Hardware stack levels required when called:    2
  9073 ;; This function calls:
  9074 ;;		Nothing
  9075 ;; This function is called by:
  9076 ;;		_LeerADC
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           
  9081                           ;psect for function _ADC_Select
  9082  1C89                     _ADC_Select:
  9083                           
  9084                           ;incstack = 0
  9085                           ; Regs used in _ADC_Select: [wreg-fsr0h+status,2+status,0]
  9086                           ;ADC_Select@a stored from wreg
  9087  1C89  00F5               	movwf	ADC_Select@a
  9088  1C8A                     l2942:
  9089                           
  9090                           ;ADC.c: 20:     switch(a){
  9091  1C8A  2CF0               	goto	l2976
  9092  1C8B                     l2944:
  9093  1C8B  30C3               	movlw	-61
  9094  1C8C  1283               	bcf	3,5	;RP0=0, select bank0
  9095  1C8D  1303               	bcf	3,6	;RP1=0, select bank0
  9096  1C8E  059F               	andwf	31,f	;volatile
  9097  1C8F  2D24               	goto	l178
  9098  1C90                     l2946:
  9099  1C90  1283               	bcf	3,5	;RP0=0, select bank0
  9100  1C91  1303               	bcf	3,6	;RP1=0, select bank0
  9101  1C92  081F               	movf	31,w	;volatile
  9102  1C93  39C3               	andlw	-61
  9103  1C94  3804               	iorlw	4
  9104  1C95  009F               	movwf	31	;volatile
  9105  1C96  2D24               	goto	l178
  9106  1C97                     l2948:
  9107  1C97  1283               	bcf	3,5	;RP0=0, select bank0
  9108  1C98  1303               	bcf	3,6	;RP1=0, select bank0
  9109  1C99  081F               	movf	31,w	;volatile
  9110  1C9A  39C3               	andlw	-61
  9111  1C9B  3808               	iorlw	8
  9112  1C9C  009F               	movwf	31	;volatile
  9113  1C9D  2D24               	goto	l178
  9114  1C9E                     l2950:
  9115  1C9E  1283               	bcf	3,5	;RP0=0, select bank0
  9116  1C9F  1303               	bcf	3,6	;RP1=0, select bank0
  9117  1CA0  081F               	movf	31,w	;volatile
  9118  1CA1  39C3               	andlw	-61
  9119  1CA2  380C               	iorlw	12
  9120  1CA3  009F               	movwf	31	;volatile
  9121  1CA4  2D24               	goto	l178
  9122  1CA5                     l2952:
  9123  1CA5  1283               	bcf	3,5	;RP0=0, select bank0
  9124  1CA6  1303               	bcf	3,6	;RP1=0, select bank0
  9125  1CA7  081F               	movf	31,w	;volatile
  9126  1CA8  39C3               	andlw	-61
  9127  1CA9  3810               	iorlw	16
  9128  1CAA  009F               	movwf	31	;volatile
  9129  1CAB  2D24               	goto	l178
  9130  1CAC                     l2954:
  9131  1CAC  1283               	bcf	3,5	;RP0=0, select bank0
  9132  1CAD  1303               	bcf	3,6	;RP1=0, select bank0
  9133  1CAE  081F               	movf	31,w	;volatile
  9134  1CAF  39C3               	andlw	-61
  9135  1CB0  3814               	iorlw	20
  9136  1CB1  009F               	movwf	31	;volatile
  9137  1CB2  2D24               	goto	l178
  9138  1CB3                     l2956:
  9139  1CB3  1283               	bcf	3,5	;RP0=0, select bank0
  9140  1CB4  1303               	bcf	3,6	;RP1=0, select bank0
  9141  1CB5  081F               	movf	31,w	;volatile
  9142  1CB6  39C3               	andlw	-61
  9143  1CB7  3818               	iorlw	24
  9144  1CB8  009F               	movwf	31	;volatile
  9145  1CB9  2D24               	goto	l178
  9146  1CBA                     l2958:
  9147  1CBA  1283               	bcf	3,5	;RP0=0, select bank0
  9148  1CBB  1303               	bcf	3,6	;RP1=0, select bank0
  9149  1CBC  081F               	movf	31,w	;volatile
  9150  1CBD  39C3               	andlw	-61
  9151  1CBE  381C               	iorlw	28
  9152  1CBF  009F               	movwf	31	;volatile
  9153  1CC0  2D24               	goto	l178
  9154  1CC1                     l2960:
  9155  1CC1  1283               	bcf	3,5	;RP0=0, select bank0
  9156  1CC2  1303               	bcf	3,6	;RP1=0, select bank0
  9157  1CC3  081F               	movf	31,w	;volatile
  9158  1CC4  39C3               	andlw	-61
  9159  1CC5  3820               	iorlw	32
  9160  1CC6  009F               	movwf	31	;volatile
  9161  1CC7  2D24               	goto	l178
  9162  1CC8                     l2962:
  9163  1CC8  1283               	bcf	3,5	;RP0=0, select bank0
  9164  1CC9  1303               	bcf	3,6	;RP1=0, select bank0
  9165  1CCA  081F               	movf	31,w	;volatile
  9166  1CCB  39C3               	andlw	-61
  9167  1CCC  3824               	iorlw	36
  9168  1CCD  009F               	movwf	31	;volatile
  9169  1CCE  2D24               	goto	l178
  9170  1CCF                     l2964:
  9171  1CCF  1283               	bcf	3,5	;RP0=0, select bank0
  9172  1CD0  1303               	bcf	3,6	;RP1=0, select bank0
  9173  1CD1  081F               	movf	31,w	;volatile
  9174  1CD2  39C3               	andlw	-61
  9175  1CD3  3828               	iorlw	40
  9176  1CD4  009F               	movwf	31	;volatile
  9177  1CD5  2D24               	goto	l178
  9178  1CD6                     l2966:
  9179  1CD6  1283               	bcf	3,5	;RP0=0, select bank0
  9180  1CD7  1303               	bcf	3,6	;RP1=0, select bank0
  9181  1CD8  081F               	movf	31,w	;volatile
  9182  1CD9  39C3               	andlw	-61
  9183  1CDA  382C               	iorlw	44
  9184  1CDB  009F               	movwf	31	;volatile
  9185  1CDC  2D24               	goto	l178
  9186  1CDD                     l2968:
  9187  1CDD  1283               	bcf	3,5	;RP0=0, select bank0
  9188  1CDE  1303               	bcf	3,6	;RP1=0, select bank0
  9189  1CDF  081F               	movf	31,w	;volatile
  9190  1CE0  39C3               	andlw	-61
  9191  1CE1  3830               	iorlw	48
  9192  1CE2  009F               	movwf	31	;volatile
  9193  1CE3  2D24               	goto	l178
  9194  1CE4                     l2970:
  9195  1CE4  1283               	bcf	3,5	;RP0=0, select bank0
  9196  1CE5  1303               	bcf	3,6	;RP1=0, select bank0
  9197  1CE6  081F               	movf	31,w	;volatile
  9198  1CE7  39C3               	andlw	-61
  9199  1CE8  3834               	iorlw	52
  9200  1CE9  009F               	movwf	31	;volatile
  9201  1CEA  2D24               	goto	l178
  9202  1CEB                     l2972:
  9203  1CEB  30C3               	movlw	-61
  9204  1CEC  1283               	bcf	3,5	;RP0=0, select bank0
  9205  1CED  1303               	bcf	3,6	;RP1=0, select bank0
  9206  1CEE  059F               	andwf	31,f	;volatile
  9207  1CEF  2D24               	goto	l178
  9208  1CF0                     l2976:
  9209  1CF0  0875               	movf	ADC_Select@a,w
  9210  1CF1  00F3               	movwf	??_ADC_Select
  9211  1CF2  01F4               	clrf	??_ADC_Select+1
  9212                           
  9213                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9214                           ; Switch size 1, requested type "simple"
  9215                           ; Number of cases is 1, Range of values is 0 to 0
  9216                           ; switch strategies available:
  9217                           ; Name         Instructions Cycles
  9218                           ; simple_byte            4     3 (average)
  9219                           ; direct_byte           11     8 (fixed)
  9220                           ; jumptable            260     6 (fixed)
  9221                           ;	Chosen strategy is simple_byte
  9222  1CF3  0874               	movf	??_ADC_Select+1,w
  9223  1CF4  3A00               	xorlw	0	; case 0
  9224  1CF5  1903               	skipnz
  9225  1CF6  2CF8               	goto	l4648
  9226  1CF7  2CEB               	goto	l2972
  9227  1CF8                     l4648:
  9228                           
  9229                           ; Switch size 1, requested type "simple"
  9230                           ; Number of cases is 14, Range of values is 0 to 13
  9231                           ; switch strategies available:
  9232                           ; Name         Instructions Cycles
  9233                           ; simple_byte           43    22 (average)
  9234                           ; direct_byte           50     8 (fixed)
  9235                           ; jumptable            260     6 (fixed)
  9236                           ;	Chosen strategy is simple_byte
  9237  1CF8  0873               	movf	??_ADC_Select,w
  9238  1CF9  3A00               	xorlw	0	; case 0
  9239  1CFA  1903               	skipnz
  9240  1CFB  2C8B               	goto	l2944
  9241  1CFC  3A01               	xorlw	1	; case 1
  9242  1CFD  1903               	skipnz
  9243  1CFE  2C90               	goto	l2946
  9244  1CFF  3A03               	xorlw	3	; case 2
  9245  1D00  1903               	skipnz
  9246  1D01  2C97               	goto	l2948
  9247  1D02  3A01               	xorlw	1	; case 3
  9248  1D03  1903               	skipnz
  9249  1D04  2C9E               	goto	l2950
  9250  1D05  3A07               	xorlw	7	; case 4
  9251  1D06  1903               	skipnz
  9252  1D07  2CA5               	goto	l2952
  9253  1D08  3A01               	xorlw	1	; case 5
  9254  1D09  1903               	skipnz
  9255  1D0A  2CAC               	goto	l2954
  9256  1D0B  3A03               	xorlw	3	; case 6
  9257  1D0C  1903               	skipnz
  9258  1D0D  2CB3               	goto	l2956
  9259  1D0E  3A01               	xorlw	1	; case 7
  9260  1D0F  1903               	skipnz
  9261  1D10  2CBA               	goto	l2958
  9262  1D11  3A0F               	xorlw	15	; case 8
  9263  1D12  1903               	skipnz
  9264  1D13  2CC1               	goto	l2960
  9265  1D14  3A01               	xorlw	1	; case 9
  9266  1D15  1903               	skipnz
  9267  1D16  2CC8               	goto	l2962
  9268  1D17  3A03               	xorlw	3	; case 10
  9269  1D18  1903               	skipnz
  9270  1D19  2CCF               	goto	l2964
  9271  1D1A  3A01               	xorlw	1	; case 11
  9272  1D1B  1903               	skipnz
  9273  1D1C  2CD6               	goto	l2966
  9274  1D1D  3A07               	xorlw	7	; case 12
  9275  1D1E  1903               	skipnz
  9276  1D1F  2CDD               	goto	l2968
  9277  1D20  3A01               	xorlw	1	; case 13
  9278  1D21  1903               	skipnz
  9279  1D22  2CE4               	goto	l2970
  9280  1D23  2CEB               	goto	l2972
  9281  1D24                     l178:
  9282  1D24  0008               	return
  9283  1D25                     __end_of_ADC_Select:
  9284                           
  9285                           	psect	text30
  9286  182E                     __ptext30:	
  9287 ;; *************** function _LCD_clear *****************
  9288 ;; Defined at:
  9289 ;;		line 40 in file "LCD.c"
  9290 ;; Parameters:    Size  Location     Type
  9291 ;;		None
  9292 ;; Auto vars:     Size  Location     Type
  9293 ;;		None
  9294 ;; Return value:  Size  Location     Type
  9295 ;;                  1    wreg      void 
  9296 ;; Registers used:
  9297 ;;		wreg, status,2, status,0, pclath, cstack
  9298 ;; Tracked objects:
  9299 ;;		On entry : 0/0
  9300 ;;		On exit  : 0/0
  9301 ;;		Unchanged: 0/0
  9302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9303 ;;      Params:         0       0       0       0       0
  9304 ;;      Locals:         0       0       0       0       0
  9305 ;;      Temps:          0       0       0       0       0
  9306 ;;      Totals:         0       0       0       0       0
  9307 ;;Total ram usage:        0 bytes
  9308 ;; Hardware stack levels used:    1
  9309 ;; Hardware stack levels required when called:    4
  9310 ;; This function calls:
  9311 ;;		_LCD_Command
  9312 ;; This function is called by:
  9313 ;;		_main
  9314 ;; This function uses a non-reentrant model
  9315 ;;
  9316                           
  9317                           
  9318                           ;psect for function _LCD_clear
  9319  182E                     _LCD_clear:
  9320  182E                     l4230:	
  9321                           ;incstack = 0
  9322                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  9323                           
  9324                           
  9325                           ;LCD.c: 41:     LCD_Command(0);
  9326  182E  3000               	movlw	0
  9327  182F  160A  158A  2081  160A  158A  	fcall	_LCD_Command
  9328                           
  9329                           ;LCD.c: 42:     LCD_Command(1);
  9330  1834  3001               	movlw	1
  9331  1835  160A  158A  2081  160A  158A  	fcall	_LCD_Command
  9332  183A                     l128:
  9333  183A  0008               	return
  9334  183B                     __end_of_LCD_clear:
  9335                           
  9336                           	psect	text31
  9337  19D4                     __ptext31:	
  9338 ;; *************** function _LCD_Write_String *****************
  9339 ;; Defined at:
  9340 ;;		line 76 in file "LCD.c"
  9341 ;; Parameters:    Size  Location     Type
  9342 ;;  a               2    6[COMMON] PTR unsigned char 
  9343 ;;		 -> STR_3(15), pantalla(20), 
  9344 ;; Auto vars:     Size  Location     Type
  9345 ;;  i               2    3[BANK0 ] int 
  9346 ;; Return value:  Size  Location     Type
  9347 ;;                  1    wreg      void 
  9348 ;; Registers used:
  9349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9350 ;; Tracked objects:
  9351 ;;		On entry : 0/0
  9352 ;;		On exit  : 0/0
  9353 ;;		Unchanged: 0/0
  9354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9355 ;;      Params:         2       0       0       0       0
  9356 ;;      Locals:         0       2       0       0       0
  9357 ;;      Temps:          0       3       0       0       0
  9358 ;;      Totals:         2       5       0       0       0
  9359 ;;Total ram usage:        7 bytes
  9360 ;; Hardware stack levels used:    1
  9361 ;; Hardware stack levels required when called:    4
  9362 ;; This function calls:
  9363 ;;		_LCD_Write_Char
  9364 ;; This function is called by:
  9365 ;;		_main
  9366 ;; This function uses a non-reentrant model
  9367 ;;
  9368                           
  9369                           
  9370                           ;psect for function _LCD_Write_String
  9371  19D4                     _LCD_Write_String:
  9372  19D4                     l4554:	
  9373                           ;incstack = 0
  9374                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9375                           
  9376                           
  9377                           ;LCD.c: 77:  int i;;LCD.c: 78:  for(i=0;a[i]!='\0';i++)
  9378  19D4  1283               	bcf	3,5	;RP0=0, select bank0
  9379  19D5  1303               	bcf	3,6	;RP1=0, select bank0
  9380  19D6  01A3               	clrf	LCD_Write_String@i
  9381  19D7  01A4               	clrf	LCD_Write_String@i+1
  9382  19D8  29FD               	goto	l4560
  9383  19D9                     l4556:
  9384                           
  9385                           ;LCD.c: 79:     LCD_Write_Char(a[i]);
  9386  19D9  0823               	movf	LCD_Write_String@i,w
  9387  19DA  0776               	addwf	LCD_Write_String@a,w
  9388  19DB  00A1               	movwf	??_LCD_Write_String+1
  9389  19DC  0877               	movf	LCD_Write_String@a+1,w
  9390  19DD  00A0               	movwf	??_LCD_Write_String
  9391  19DE  1803               	skipnc
  9392  19DF  0AA0               	incf	??_LCD_Write_String,f
  9393  19E0  1FA3               	btfss	LCD_Write_String@i,7
  9394  19E1  29E3               	goto	u7390
  9395  19E2  03A0               	decf	??_LCD_Write_String,f
  9396  19E3                     u7390:
  9397  19E3  1283               	bcf	3,5	;RP0=0, select bank0
  9398  19E4  1303               	bcf	3,6	;RP1=0, select bank0
  9399  19E5  0820               	movf	??_LCD_Write_String,w
  9400  19E6  00A2               	movwf	??_LCD_Write_String+2
  9401  19E7  0822               	movf	??_LCD_Write_String+2,w
  9402  19E8  00FF               	movwf	btemp+1
  9403  19E9  0821               	movf	??_LCD_Write_String+1,w
  9404  19EA  0084               	movwf	4
  9405  19EB  120A  158A  2000  160A  158A  	fcall	stringtab
  9406  19F0  160A  158A  2068  160A  158A  	fcall	_LCD_Write_Char
  9407  19F5                     l4558:
  9408  19F5  3001               	movlw	1
  9409  19F6  1283               	bcf	3,5	;RP0=0, select bank0
  9410  19F7  1303               	bcf	3,6	;RP1=0, select bank0
  9411  19F8  07A3               	addwf	LCD_Write_String@i,f
  9412  19F9  1803               	skipnc
  9413  19FA  0AA4               	incf	LCD_Write_String@i+1,f
  9414  19FB  3000               	movlw	0
  9415  19FC  07A4               	addwf	LCD_Write_String@i+1,f
  9416  19FD                     l4560:
  9417  19FD  0823               	movf	LCD_Write_String@i,w
  9418  19FE  0776               	addwf	LCD_Write_String@a,w
  9419  19FF  00A1               	movwf	??_LCD_Write_String+1
  9420  1A00  0877               	movf	LCD_Write_String@a+1,w
  9421  1A01  00A0               	movwf	??_LCD_Write_String
  9422  1A02  1803               	skipnc
  9423  1A03  0AA0               	incf	??_LCD_Write_String,f
  9424  1A04  1FA3               	btfss	LCD_Write_String@i,7
  9425  1A05  2A07               	goto	u7400
  9426  1A06  03A0               	decf	??_LCD_Write_String,f
  9427  1A07                     u7400:
  9428  1A07  1283               	bcf	3,5	;RP0=0, select bank0
  9429  1A08  1303               	bcf	3,6	;RP1=0, select bank0
  9430  1A09  0820               	movf	??_LCD_Write_String,w
  9431  1A0A  00A2               	movwf	??_LCD_Write_String+2
  9432  1A0B  0822               	movf	??_LCD_Write_String+2,w
  9433  1A0C  00FF               	movwf	btemp+1
  9434  1A0D  0821               	movf	??_LCD_Write_String+1,w
  9435  1A0E  0084               	movwf	4
  9436  1A0F  120A  158A  2000  160A  158A  	fcall	stringtab
  9437  1A14  3A00               	xorlw	0
  9438  1A15  1D03               	skipz
  9439  1A16  2A18               	goto	u7411
  9440  1A17  2A19               	goto	u7410
  9441  1A18                     u7411:
  9442  1A18  29D9               	goto	l4556
  9443  1A19                     u7410:
  9444  1A19                     l143:
  9445  1A19  0008               	return
  9446  1A1A                     __end_of_LCD_Write_String:
  9447                           
  9448                           	psect	text32
  9449  1868                     __ptext32:	
  9450 ;; *************** function _LCD_Write_Char *****************
  9451 ;; Defined at:
  9452 ;;		line 9 in file "LCD.c"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;  a               1    wreg     unsigned char 
  9455 ;; Auto vars:     Size  Location     Type
  9456 ;;  a               1    5[COMMON] unsigned char 
  9457 ;; Return value:  Size  Location     Type
  9458 ;;                  1    wreg      void 
  9459 ;; Registers used:
  9460 ;;		wreg, status,2, status,0, pclath, cstack
  9461 ;; Tracked objects:
  9462 ;;		On entry : 0/0
  9463 ;;		On exit  : 0/0
  9464 ;;		Unchanged: 0/0
  9465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9466 ;;      Params:         0       0       0       0       0
  9467 ;;      Locals:         1       0       0       0       0
  9468 ;;      Temps:          1       0       0       0       0
  9469 ;;      Totals:         2       0       0       0       0
  9470 ;;Total ram usage:        2 bytes
  9471 ;; Hardware stack levels used:    1
  9472 ;; Hardware stack levels required when called:    3
  9473 ;; This function calls:
  9474 ;;		_LCD_Port
  9475 ;; This function is called by:
  9476 ;;		_LCD_Write_String
  9477 ;; This function uses a non-reentrant model
  9478 ;;
  9479                           
  9480                           
  9481                           ;psect for function _LCD_Write_Char
  9482  1868                     _LCD_Write_Char:
  9483                           
  9484                           ;incstack = 0
  9485                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9486                           ;LCD_Write_Char@a stored from wreg
  9487  1868  00F5               	movwf	LCD_Write_Char@a
  9488  1869                     l3932:
  9489                           
  9490                           ;LCD.c: 10:     RE0 = 1;
  9491  1869  1283               	bcf	3,5	;RP0=0, select bank0
  9492  186A  1303               	bcf	3,6	;RP1=0, select bank0
  9493  186B  1409               	bsf	9,0	;volatile
  9494  186C                     l3934:
  9495                           
  9496                           ;LCD.c: 11:     LCD_Port(a);
  9497  186C  0875               	movf	LCD_Write_Char@a,w
  9498  186D  160A  158A  2011  160A  158A  	fcall	_LCD_Port
  9499  1872                     l3936:
  9500                           
  9501                           ;LCD.c: 12:     RE1 = 1;
  9502  1872  1283               	bcf	3,5	;RP0=0, select bank0
  9503  1873  1303               	bcf	3,6	;RP1=0, select bank0
  9504  1874  1489               	bsf	9,1	;volatile
  9505  1875                     l3938:
  9506                           
  9507                           ;LCD.c: 13:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  9508  1875  300D               	movlw	13
  9509  1876  00F4               	movwf	??_LCD_Write_Char
  9510  1877                     u7447:
  9511  1877  0BF4               	decfsz	??_LCD_Write_Char,f
  9512  1878  2877               	goto	u7447
  9513  1879                     l3940:
  9514                           
  9515                           ;LCD.c: 14:     RE1 = 0;
  9516  1879  1283               	bcf	3,5	;RP0=0, select bank0
  9517  187A  1303               	bcf	3,6	;RP1=0, select bank0
  9518  187B  1089               	bcf	9,1	;volatile
  9519  187C                     l3942:
  9520                           
  9521                           ;LCD.c: 15:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  9522  187C  3003               	movlw	3
  9523  187D  00F4               	movwf	??_LCD_Write_Char
  9524  187E                     u7457:
  9525  187E  0BF4               	decfsz	??_LCD_Write_Char,f
  9526  187F  287E               	goto	u7457
  9527  1880                     l119:
  9528  1880  0008               	return
  9529  1881                     __end_of_LCD_Write_Char:
  9530                           
  9531                           	psect	text33
  9532  18C9                     __ptext33:	
  9533 ;; *************** function _LCD_Set_Cursor *****************
  9534 ;; Defined at:
  9535 ;;		line 62 in file "LCD.c"
  9536 ;; Parameters:    Size  Location     Type
  9537 ;;  x               1    wreg     unsigned char 
  9538 ;;  y               1    7[COMMON] unsigned char 
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;  x               1    0[BANK0 ] unsigned char 
  9541 ;;  a               1    1[BANK0 ] unsigned char 
  9542 ;; Return value:  Size  Location     Type
  9543 ;;                  1    wreg      void 
  9544 ;; Registers used:
  9545 ;;		wreg, status,2, status,0, pclath, cstack
  9546 ;; Tracked objects:
  9547 ;;		On entry : 0/0
  9548 ;;		On exit  : 0/0
  9549 ;;		Unchanged: 0/0
  9550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9551 ;;      Params:         1       0       0       0       0
  9552 ;;      Locals:         0       2       0       0       0
  9553 ;;      Temps:          1       0       0       0       0
  9554 ;;      Totals:         2       2       0       0       0
  9555 ;;Total ram usage:        4 bytes
  9556 ;; Hardware stack levels used:    1
  9557 ;; Hardware stack levels required when called:    4
  9558 ;; This function calls:
  9559 ;;		_LCD_Command
  9560 ;; This function is called by:
  9561 ;;		_main
  9562 ;; This function uses a non-reentrant model
  9563 ;;
  9564                           
  9565                           
  9566                           ;psect for function _LCD_Set_Cursor
  9567  18C9                     _LCD_Set_Cursor:
  9568                           
  9569                           ;incstack = 0
  9570                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9571                           ;LCD_Set_Cursor@x stored from wreg
  9572  18C9  1283               	bcf	3,5	;RP0=0, select bank0
  9573  18CA  1303               	bcf	3,6	;RP1=0, select bank0
  9574  18CB  00A0               	movwf	LCD_Set_Cursor@x
  9575  18CC                     l4542:
  9576                           
  9577                           ;LCD.c: 63:  char a;;LCD.c: 64:  if(x == 1)
  9578  18CC  0320               	decf	LCD_Set_Cursor@x,w
  9579  18CD  1D03               	btfss	3,2
  9580  18CE  28D0               	goto	u7371
  9581  18CF  28D1               	goto	u7370
  9582  18D0                     u7371:
  9583  18D0  28DD               	goto	l4548
  9584  18D1                     u7370:
  9585  18D1                     l4544:
  9586                           
  9587                           ;LCD.c: 65:  {;LCD.c: 66:         a = 0x80 + y;
  9588  18D1  0877               	movf	LCD_Set_Cursor@y,w
  9589  18D2  3E80               	addlw	128
  9590  18D3  00F8               	movwf	??_LCD_Set_Cursor
  9591  18D4  0878               	movf	??_LCD_Set_Cursor,w
  9592  18D5  00A1               	movwf	LCD_Set_Cursor@a
  9593  18D6                     l4546:
  9594                           
  9595                           ;LCD.c: 67:   LCD_Command(a);
  9596  18D6  0821               	movf	LCD_Set_Cursor@a,w
  9597  18D7  160A  158A  2081  160A  158A  	fcall	_LCD_Command
  9598                           
  9599                           ;LCD.c: 68:  }
  9600  18DC  28EE               	goto	l137
  9601  18DD                     l4548:
  9602  18DD  3002               	movlw	2
  9603  18DE  0620               	xorwf	LCD_Set_Cursor@x,w
  9604  18DF  1D03               	btfss	3,2
  9605  18E0  28E2               	goto	u7381
  9606  18E1  28E3               	goto	u7380
  9607  18E2                     u7381:
  9608  18E2  28EE               	goto	l137
  9609  18E3                     u7380:
  9610  18E3                     l4550:
  9611                           
  9612                           ;LCD.c: 70:  {;LCD.c: 71:   a = 0xC0 + y;
  9613  18E3  0877               	movf	LCD_Set_Cursor@y,w
  9614  18E4  3EC0               	addlw	192
  9615  18E5  00F8               	movwf	??_LCD_Set_Cursor
  9616  18E6  0878               	movf	??_LCD_Set_Cursor,w
  9617  18E7  00A1               	movwf	LCD_Set_Cursor@a
  9618  18E8                     l4552:
  9619                           
  9620                           ;LCD.c: 72:   LCD_Command(a);
  9621  18E8  0821               	movf	LCD_Set_Cursor@a,w
  9622  18E9  160A  158A  2081  160A  158A  	fcall	_LCD_Command
  9623  18EE                     l137:
  9624  18EE  0008               	return
  9625  18EF                     __end_of_LCD_Set_Cursor:
  9626                           
  9627                           	psect	text34
  9628  1A60                     __ptext34:	
  9629 ;; *************** function _LCD_Init *****************
  9630 ;; Defined at:
  9631 ;;		line 45 in file "LCD.c"
  9632 ;; Parameters:    Size  Location     Type
  9633 ;;		None
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;		None
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  1    wreg      void 
  9638 ;; Registers used:
  9639 ;;		wreg, status,2, status,0, pclath, cstack
  9640 ;; Tracked objects:
  9641 ;;		On entry : 0/0
  9642 ;;		On exit  : 0/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9645 ;;      Params:         0       0       0       0       0
  9646 ;;      Locals:         0       0       0       0       0
  9647 ;;      Temps:          2       0       0       0       0
  9648 ;;      Totals:         2       0       0       0       0
  9649 ;;Total ram usage:        2 bytes
  9650 ;; Hardware stack levels used:    1
  9651 ;; Hardware stack levels required when called:    4
  9652 ;; This function calls:
  9653 ;;		_LCD_Command
  9654 ;;		_LCD_Port
  9655 ;; This function is called by:
  9656 ;;		_main
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           
  9660                           
  9661                           ;psect for function _LCD_Init
  9662  1A60                     _LCD_Init:
  9663  1A60                     l4218:	
  9664                           ;incstack = 0
  9665                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9666                           
  9667                           
  9668                           ;LCD.c: 46:     RE0=0;
  9669  1A60  1283               	bcf	3,5	;RP0=0, select bank0
  9670  1A61  1303               	bcf	3,6	;RP1=0, select bank0
  9671  1A62  1009               	bcf	9,0	;volatile
  9672                           
  9673                           ;LCD.c: 47:     RE1=0;
  9674  1A63  1089               	bcf	9,1	;volatile
  9675  1A64                     l4220:
  9676                           
  9677                           ;LCD.c: 48:     LCD_Port(0x00);
  9678  1A64  3000               	movlw	0
  9679  1A65  160A  158A  2011  160A  158A  	fcall	_LCD_Port
  9680  1A6A                     l4222:
  9681                           
  9682                           ;LCD.c: 49:     _delay((unsigned long)((20)*(4000000/4000.0)));
  9683  1A6A  301A               	movlw	26
  9684  1A6B  00F8               	movwf	??_LCD_Init+1
  9685  1A6C  30F8               	movlw	248
  9686  1A6D  00F7               	movwf	??_LCD_Init
  9687  1A6E                     u7467:
  9688  1A6E  0BF7               	decfsz	??_LCD_Init,f
  9689  1A6F  2A6E               	goto	u7467
  9690  1A70  0BF8               	decfsz	??_LCD_Init+1,f
  9691  1A71  2A6E               	goto	u7467
  9692  1A72  0000               	nop
  9693  1A73                     l4224:
  9694                           
  9695                           ;LCD.c: 50:     LCD_Command(0x30);
  9696  1A73  3030               	movlw	48
  9697  1A74  160A  158A  2081  160A  158A  	fcall	_LCD_Command
  9698                           
  9699                           ;LCD.c: 51:     _delay((unsigned long)((5)*(4000000/4000.0)));
  9700  1A79  3007               	movlw	7
  9701  1A7A  00F8               	movwf	??_LCD_Init+1
  9702  1A7B  307D               	movlw	125
  9703  1A7C  00F7               	movwf	??_LCD_Init
  9704  1A7D                     u7477:
  9705  1A7D  0BF7               	decfsz	??_LCD_Init,f
  9706  1A7E  2A7D               	goto	u7477
  9707  1A7F  0BF8               	decfsz	??_LCD_Init+1,f
  9708  1A80  2A7D               	goto	u7477
  9709  1A81                     l4226:
  9710                           
  9711                           ;LCD.c: 52:     LCD_Command(0x30);
  9712  1A81  3030               	movlw	48
  9713  1A82  160A  158A  2081  160A  158A  	fcall	_LCD_Command
  9714  1A87                     l4228:
  9715                           
  9716                           ;LCD.c: 53:     _delay((unsigned long)((11)*(4000000/4000.0)));
  9717  1A87  300F               	movlw	15
  9718  1A88  00F8               	movwf	??_LCD_Init+1
  9719  1A89  3047               	movlw	71
  9720  1A8A  00F7               	movwf	??_LCD_Init
  9721  1A8B                     u7487:
  9722  1A8B  0BF7               	decfsz	??_LCD_Init,f
  9723  1A8C  2A8B               	goto	u7487
  9724  1A8D  0BF8               	decfsz	??_LCD_Init+1,f
  9725  1A8E  2A8B               	goto	u7487
  9726  1A8F  2A90               	nop2
  9727                           
  9728                           ;LCD.c: 54:     LCD_Command(0x30);
  9729  1A90  3030               	movlw	48
  9730  1A91  160A  158A  2081  160A  158A  	fcall	_LCD_Command
  9731                           
  9732                           ;LCD.c: 55:     LCD_Command(0x38);
  9733  1A96  3038               	movlw	56
  9734  1A97  160A  158A  2081  160A  158A  	fcall	_LCD_Command
  9735                           
  9736                           ;LCD.c: 56:     LCD_Command(0x0C);
  9737  1A9C  300C               	movlw	12
  9738  1A9D  160A  158A  2081  160A  158A  	fcall	_LCD_Command
  9739                           
  9740                           ;LCD.c: 57:     LCD_Command(0x01);
  9741  1AA2  3001               	movlw	1
  9742  1AA3  160A  158A  2081  160A  158A  	fcall	_LCD_Command
  9743                           
  9744                           ;LCD.c: 58:     LCD_Command(0x06);
  9745  1AA8  3006               	movlw	6
  9746  1AA9  160A  158A  2081  160A  158A  	fcall	_LCD_Command
  9747  1AAE                     l131:
  9748  1AAE  0008               	return
  9749  1AAF                     __end_of_LCD_Init:
  9750                           
  9751                           	psect	text35
  9752  1881                     __ptext35:	
  9753 ;; *************** function _LCD_Command *****************
  9754 ;; Defined at:
  9755 ;;		line 31 in file "LCD.c"
  9756 ;; Parameters:    Size  Location     Type
  9757 ;;  a               1    wreg     unsigned char 
  9758 ;; Auto vars:     Size  Location     Type
  9759 ;;  a               1    6[COMMON] unsigned char 
  9760 ;; Return value:  Size  Location     Type
  9761 ;;                  1    wreg      void 
  9762 ;; Registers used:
  9763 ;;		wreg, status,2, status,0, pclath, cstack
  9764 ;; Tracked objects:
  9765 ;;		On entry : 0/0
  9766 ;;		On exit  : 0/0
  9767 ;;		Unchanged: 0/0
  9768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9769 ;;      Params:         0       0       0       0       0
  9770 ;;      Locals:         1       0       0       0       0
  9771 ;;      Temps:          2       0       0       0       0
  9772 ;;      Totals:         3       0       0       0       0
  9773 ;;Total ram usage:        3 bytes
  9774 ;; Hardware stack levels used:    1
  9775 ;; Hardware stack levels required when called:    3
  9776 ;; This function calls:
  9777 ;;		_LCD_Port
  9778 ;; This function is called by:
  9779 ;;		_LCD_clear
  9780 ;;		_LCD_Init
  9781 ;;		_LCD_Set_Cursor
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785                           
  9786                           ;psect for function _LCD_Command
  9787  1881                     _LCD_Command:
  9788                           
  9789                           ;incstack = 0
  9790                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  9791                           ;LCD_Command@a stored from wreg
  9792  1881  00F6               	movwf	LCD_Command@a
  9793  1882                     l3944:
  9794                           
  9795                           ;LCD.c: 32:     RE0=0;
  9796  1882  1283               	bcf	3,5	;RP0=0, select bank0
  9797  1883  1303               	bcf	3,6	;RP1=0, select bank0
  9798  1884  1009               	bcf	9,0	;volatile
  9799  1885                     l3946:
  9800                           
  9801                           ;LCD.c: 33:     LCD_Port(a);
  9802  1885  0876               	movf	LCD_Command@a,w
  9803  1886  160A  158A  2011  160A  158A  	fcall	_LCD_Port
  9804  188B                     l3948:
  9805                           
  9806                           ;LCD.c: 34:     RE1=1;
  9807  188B  1283               	bcf	3,5	;RP0=0, select bank0
  9808  188C  1303               	bcf	3,6	;RP1=0, select bank0
  9809  188D  1489               	bsf	9,1	;volatile
  9810  188E                     l3950:
  9811                           
  9812                           ;LCD.c: 35:     _delay((unsigned long)((4)*(4000000/4000.0)));
  9813  188E  3006               	movlw	6
  9814  188F  00F5               	movwf	??_LCD_Command+1
  9815  1890  3030               	movlw	48
  9816  1891  00F4               	movwf	??_LCD_Command
  9817  1892                     u7497:
  9818  1892  0BF4               	decfsz	??_LCD_Command,f
  9819  1893  2892               	goto	u7497
  9820  1894  0BF5               	decfsz	??_LCD_Command+1,f
  9821  1895  2892               	goto	u7497
  9822  1896  0000               	nop
  9823  1897                     l3952:
  9824                           
  9825                           ;LCD.c: 36:     RE1=0;
  9826  1897  1283               	bcf	3,5	;RP0=0, select bank0
  9827  1898  1303               	bcf	3,6	;RP1=0, select bank0
  9828  1899  1089               	bcf	9,1	;volatile
  9829  189A                     l3954:
  9830                           
  9831                           ;LCD.c: 37:     _delay((unsigned long)((2)*(4000000/4000.0)));
  9832  189A  3003               	movlw	3
  9833  189B  00F5               	movwf	??_LCD_Command+1
  9834  189C  3097               	movlw	151
  9835  189D  00F4               	movwf	??_LCD_Command
  9836  189E                     u7507:
  9837  189E  0BF4               	decfsz	??_LCD_Command,f
  9838  189F  289E               	goto	u7507
  9839  18A0  0BF5               	decfsz	??_LCD_Command+1,f
  9840  18A1  289E               	goto	u7507
  9841  18A2  28A3               	nop2
  9842  18A3                     l125:
  9843  18A3  0008               	return
  9844  18A4                     __end_of_LCD_Command:
  9845                           
  9846                           	psect	text36
  9847  1811                     __ptext36:	
  9848 ;; *************** function _LCD_Port *****************
  9849 ;; Defined at:
  9850 ;;		line 18 in file "LCD.c"
  9851 ;; Parameters:    Size  Location     Type
  9852 ;;  a               1    wreg     unsigned char 
  9853 ;; Auto vars:     Size  Location     Type
  9854 ;;  a               1    3[COMMON] unsigned char 
  9855 ;; Return value:  Size  Location     Type
  9856 ;;                  1    wreg      void 
  9857 ;; Registers used:
  9858 ;;		wreg
  9859 ;; Tracked objects:
  9860 ;;		On entry : 0/0
  9861 ;;		On exit  : 0/0
  9862 ;;		Unchanged: 0/0
  9863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9864 ;;      Params:         0       0       0       0       0
  9865 ;;      Locals:         1       0       0       0       0
  9866 ;;      Temps:          0       0       0       0       0
  9867 ;;      Totals:         1       0       0       0       0
  9868 ;;Total ram usage:        1 bytes
  9869 ;; Hardware stack levels used:    1
  9870 ;; Hardware stack levels required when called:    2
  9871 ;; This function calls:
  9872 ;;		Nothing
  9873 ;; This function is called by:
  9874 ;;		_LCD_Write_Char
  9875 ;;		_LCD_Command
  9876 ;;		_LCD_Init
  9877 ;; This function uses a non-reentrant model
  9878 ;;
  9879                           
  9880                           
  9881                           ;psect for function _LCD_Port
  9882  1811                     _LCD_Port:
  9883                           
  9884                           ;incstack = 0
  9885                           ; Regs used in _LCD_Port: [wreg]
  9886                           ;LCD_Port@a stored from wreg
  9887  1811  00F3               	movwf	LCD_Port@a
  9888  1812                     l3866:
  9889                           
  9890                           ;LCD.c: 19:     PORTD = a;
  9891  1812  0873               	movf	LCD_Port@a,w
  9892  1813  1283               	bcf	3,5	;RP0=0, select bank0
  9893  1814  1303               	bcf	3,6	;RP1=0, select bank0
  9894  1815  0088               	movwf	8	;volatile
  9895  1816                     l122:
  9896  1816  0008               	return
  9897  1817                     __end_of_LCD_Port:
  9898                           
  9899                           	psect	text37
  9900  1848                     __ptext37:	
  9901 ;; *************** function _Init_Transmit *****************
  9902 ;; Defined at:
  9903 ;;		line 14 in file "USART.c"
  9904 ;; Parameters:    Size  Location     Type
  9905 ;;		None
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;		None
  9908 ;; Return value:  Size  Location     Type
  9909 ;;                  1    wreg      void 
  9910 ;; Registers used:
  9911 ;;		None
  9912 ;; Tracked objects:
  9913 ;;		On entry : 0/0
  9914 ;;		On exit  : 0/0
  9915 ;;		Unchanged: 0/0
  9916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9917 ;;      Params:         0       0       0       0       0
  9918 ;;      Locals:         0       0       0       0       0
  9919 ;;      Temps:          0       0       0       0       0
  9920 ;;      Totals:         0       0       0       0       0
  9921 ;;Total ram usage:        0 bytes
  9922 ;; Hardware stack levels used:    1
  9923 ;; Hardware stack levels required when called:    2
  9924 ;; This function calls:
  9925 ;;		Nothing
  9926 ;; This function is called by:
  9927 ;;		_main
  9928 ;; This function uses a non-reentrant model
  9929 ;;
  9930                           
  9931                           
  9932                           ;psect for function _Init_Transmit
  9933  1848                     _Init_Transmit:
  9934  1848                     l3418:	
  9935                           ;incstack = 0
  9936                           ; Regs used in _Init_Transmit: []
  9937                           
  9938                           
  9939                           ;USART.c: 15:     TXSTAbits.TXEN = 1;
  9940  1848  1683               	bsf	3,5	;RP0=1, select bank1
  9941  1849  1303               	bcf	3,6	;RP1=0, select bank1
  9942  184A  1698               	bsf	24,5	;volatile
  9943                           
  9944                           ;USART.c: 18:     PIR1bits.TXIF = 0;
  9945  184B  1283               	bcf	3,5	;RP0=0, select bank0
  9946  184C  1303               	bcf	3,6	;RP1=0, select bank0
  9947  184D  120C               	bcf	12,4	;volatile
  9948                           
  9949                           ;USART.c: 19:     PIE1bits.TXIE = 0;
  9950  184E  1683               	bsf	3,5	;RP0=1, select bank1
  9951  184F  1303               	bcf	3,6	;RP1=0, select bank1
  9952  1850  120C               	bcf	12,4	;volatile
  9953                           
  9954                           ;USART.c: 20:     INTCONbits.GIE = 0;
  9955  1851  138B               	bcf	11,7	;volatile
  9956                           
  9957                           ;USART.c: 21:     INTCONbits.PEIE = 0;
  9958  1852  130B               	bcf	11,6	;volatile
  9959                           
  9960                           ;USART.c: 22:     TRISCbits.TRISC7 = 1;
  9961  1853  1787               	bsf	7,7	;volatile
  9962                           
  9963                           ;USART.c: 23:     TRISCbits.TRISC6 = 0;
  9964  1854  1307               	bcf	7,6	;volatile
  9965  1855                     l220:
  9966  1855  0008               	return
  9967  1856                     __end_of_Init_Transmit:
  9968                           
  9969                           	psect	text38
  9970  08D9                     __ptext38:	
  9971 ;; *************** function _Init_Receive *****************
  9972 ;; Defined at:
  9973 ;;		line 28 in file "USART.c"
  9974 ;; Parameters:    Size  Location     Type
  9975 ;;		None
  9976 ;; Auto vars:     Size  Location     Type
  9977 ;;		None
  9978 ;; Return value:  Size  Location     Type
  9979 ;;                  1    wreg      void 
  9980 ;; Registers used:
  9981 ;;		None
  9982 ;; Tracked objects:
  9983 ;;		On entry : 0/0
  9984 ;;		On exit  : 0/0
  9985 ;;		Unchanged: 0/0
  9986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9987 ;;      Params:         0       0       0       0       0
  9988 ;;      Locals:         0       0       0       0       0
  9989 ;;      Temps:          0       0       0       0       0
  9990 ;;      Totals:         0       0       0       0       0
  9991 ;;Total ram usage:        0 bytes
  9992 ;; Hardware stack levels used:    1
  9993 ;; Hardware stack levels required when called:    2
  9994 ;; This function calls:
  9995 ;;		Nothing
  9996 ;; This function is called by:
  9997 ;;		_main
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           
 10002                           ;psect for function _Init_Receive
 10003  08D9                     _Init_Receive:
 10004  08D9                     l3420:	
 10005                           ;incstack = 0
 10006                           ; Regs used in _Init_Receive: []
 10007                           
 10008                           
 10009                           ;USART.c: 29:     TXSTAbits.SYNC = 0;
 10010  08D9  1683               	bsf	3,5	;RP0=1, select bank1
 10011  08DA  1303               	bcf	3,6	;RP1=0, select bank1
 10012  08DB  1218               	bcf	24,4	;volatile
 10013                           
 10014                           ;USART.c: 30:     RCSTAbits.SPEN = 1;
 10015  08DC  1283               	bcf	3,5	;RP0=0, select bank0
 10016  08DD  1303               	bcf	3,6	;RP1=0, select bank0
 10017  08DE  1798               	bsf	24,7	;volatile
 10018                           
 10019                           ;USART.c: 35:     RCSTAbits.CREN = 1;
 10020  08DF  1618               	bsf	24,4	;volatile
 10021  08E0                     l223:
 10022  08E0  0008               	return
 10023  08E1                     __end_of_Init_Receive:
 10024                           
 10025                           	psect	text39
 10026  196D                     __ptext39:	
 10027 ;; *************** function _ISR *****************
 10028 ;; Defined at:
 10029 ;;		line 63 in file "lab3_main.c"
 10030 ;; Parameters:    Size  Location     Type
 10031 ;;		None
 10032 ;; Auto vars:     Size  Location     Type
 10033 ;;		None
 10034 ;; Return value:  Size  Location     Type
 10035 ;;                  1    wreg      void 
 10036 ;; Registers used:
 10037 ;;		wreg, status,2, status,0, pclath, cstack
 10038 ;; Tracked objects:
 10039 ;;		On entry : 0/0
 10040 ;;		On exit  : 0/0
 10041 ;;		Unchanged: 0/0
 10042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10043 ;;      Params:         0       0       0       0       0
 10044 ;;      Locals:         0       0       0       0       0
 10045 ;;      Temps:          3       0       0       0       0
 10046 ;;      Totals:         3       0       0       0       0
 10047 ;;Total ram usage:        3 bytes
 10048 ;; Hardware stack levels used:    1
 10049 ;; Hardware stack levels required when called:    1
 10050 ;; This function calls:
 10051 ;;		_USART_Read
 10052 ;; This function is called by:
 10053 ;;		Interrupt level 1
 10054 ;; This function uses a non-reentrant model
 10055 ;;
 10056                           
 10057                           
 10058                           ;psect for function _ISR
 10059  196D                     _ISR:
 10060  196D                     i1l3760:
 10061                           
 10062                           ;lab3_main.c: 65:     if(RCIF==1){
 10063  196D  1283               	bcf	3,5	;RP0=0, select bank0
 10064  196E  1303               	bcf	3,6	;RP1=0, select bank0
 10065  196F  1E8C               	btfss	12,5	;volatile
 10066  1970  2972               	goto	u582_21
 10067  1971  2973               	goto	u582_20
 10068  1972                     u582_21:
 10069  1972  2993               	goto	i1l89
 10070  1973                     u582_20:
 10071  1973                     i1l3762:
 10072                           
 10073                           ;lab3_main.c: 66:         RCIF=0;
 10074  1973  128C               	bcf	12,5	;volatile
 10075  1974                     i1l3764:
 10076                           
 10077                           ;lab3_main.c: 67:         recibido = USART_Read();
 10078  1974  160A  118A  2002  160A  158A  	fcall	_USART_Read
 10079  1979  00F0               	movwf	??_ISR
 10080  197A  0870               	movf	??_ISR,w
 10081  197B  00F9               	movwf	_recibido
 10082  197C                     i1l3766:
 10083                           
 10084                           ;lab3_main.c: 68:         if(recibido == '+'){
 10085  197C  302B               	movlw	43
 10086  197D  0679               	xorwf	_recibido,w
 10087  197E  1D03               	btfss	3,2
 10088  197F  2981               	goto	u583_21
 10089  1980  2982               	goto	u583_20
 10090  1981                     u583_21:
 10091  1981  2989               	goto	i1l3770
 10092  1982                     u583_20:
 10093  1982                     i1l3768:
 10094                           
 10095                           ;lab3_main.c: 69:             contador++;
 10096  1982  3001               	movlw	1
 10097  1983  00F0               	movwf	??_ISR
 10098  1984  0870               	movf	??_ISR,w
 10099  1985  1683               	bsf	3,5	;RP0=1, select bank1
 10100  1986  1303               	bcf	3,6	;RP1=0, select bank1
 10101  1987  07DB               	addwf	_contador^(0+128),f
 10102                           
 10103                           ;lab3_main.c: 70:         }
 10104  1988  2993               	goto	i1l89
 10105  1989                     i1l3770:
 10106  1989  302D               	movlw	45
 10107  198A  0679               	xorwf	_recibido,w
 10108  198B  1D03               	btfss	3,2
 10109  198C  298E               	goto	u584_21
 10110  198D  298F               	goto	u584_20
 10111  198E                     u584_21:
 10112  198E  2993               	goto	i1l89
 10113  198F                     u584_20:
 10114  198F                     i1l3772:
 10115                           
 10116                           ;lab3_main.c: 72:             contador--;
 10117  198F  3001               	movlw	1
 10118  1990  1683               	bsf	3,5	;RP0=1, select bank1
 10119  1991  1303               	bcf	3,6	;RP1=0, select bank1
 10120  1992  02DB               	subwf	_contador^(0+128),f
 10121  1993                     i1l89:
 10122  1993  0872               	movf	??_ISR+2,w
 10123  1994  008A               	movwf	10
 10124  1995  0E71               	swapf	??_ISR+1,w
 10125  1996  0083               	movwf	3
 10126  1997  0EFE               	swapf	btemp,f
 10127  1998  0E7E               	swapf	btemp,w
 10128  1999  0009               	retfie
 10129  199A                     __end_of_ISR:
 10130                           
 10131                           	psect	intentry
 10132  0004                     __pintentry:	
 10133                           ;incstack = 0
 10134                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
 10135                           
 10136  0004                     interrupt_function:
 10137  007E                     saved_w	set	btemp
 10138  0004  00FE               	movwf	btemp
 10139  0005  0E03               	swapf	3,w
 10140  0006  00F1               	movwf	??_ISR+1
 10141  0007  080A               	movf	10,w
 10142  0008  00F2               	movwf	??_ISR+2
 10143  0009  160A  158A  296D   	ljmp	_ISR
 10144                           
 10145                           	psect	text40
 10146  1002                     __ptext40:	
 10147 ;; *************** function _USART_Read *****************
 10148 ;; Defined at:
 10149 ;;		line 49 in file "USART.c"
 10150 ;; Parameters:    Size  Location     Type
 10151 ;;		None
 10152 ;; Auto vars:     Size  Location     Type
 10153 ;;		None
 10154 ;; Return value:  Size  Location     Type
 10155 ;;                  1    wreg      unsigned char 
 10156 ;; Registers used:
 10157 ;;		wreg
 10158 ;; Tracked objects:
 10159 ;;		On entry : 0/0
 10160 ;;		On exit  : 0/0
 10161 ;;		Unchanged: 0/0
 10162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10163 ;;      Params:         0       0       0       0       0
 10164 ;;      Locals:         0       0       0       0       0
 10165 ;;      Temps:          0       0       0       0       0
 10166 ;;      Totals:         0       0       0       0       0
 10167 ;;Total ram usage:        0 bytes
 10168 ;; Hardware stack levels used:    1
 10169 ;; This function calls:
 10170 ;;		Nothing
 10171 ;; This function is called by:
 10172 ;;		_ISR
 10173 ;; This function uses a non-reentrant model
 10174 ;;
 10175                           
 10176                           
 10177                           ;psect for function _USART_Read
 10178  1002                     _USART_Read:
 10179  1002                     i1l3364:	
 10180                           ;incstack = 0
 10181                           ; Regs used in _USART_Read: [wreg]
 10182                           
 10183  1002                     i1l238:	
 10184                           ;USART.c: 50:   while(!RCIF);
 10185                           
 10186  1002  1283               	bcf	3,5	;RP0=0, select bank0
 10187  1003  1303               	bcf	3,6	;RP1=0, select bank0
 10188  1004  1E8C               	btfss	12,5	;volatile
 10189  1005  2807               	goto	u521_21
 10190  1006  2808               	goto	u521_20
 10191  1007                     u521_21:
 10192  1007  2802               	goto	i1l238
 10193  1008                     u521_20:
 10194  1008                     i1l3366:
 10195                           
 10196                           ;USART.c: 51:   return RCREG;
 10197  1008  081A               	movf	26,w	;volatile
 10198  1009                     i1l241:
 10199  1009  0008               	return
 10200  100A                     __end_of_USART_Read:
 10201  007E                     btemp	set	126	;btemp
 10202  007E                     wtemp0	set	126
 10203                           
 10204                           	psect	config
 10205                           
 10206                           ;Config register CONFIG1 @ 0x2007
 10207                           ;	Oscillator Selection bits
 10208                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
 10209                           ;	Watchdog Timer Enable bit
 10210                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10211                           ;	Power-up Timer Enable bit
 10212                           ;	PWRTE = OFF, PWRT disabled
 10213                           ;	RE3/MCLR pin function select bit
 10214                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10215                           ;	Code Protection bit
 10216                           ;	CP = OFF, Program memory code protection is disabled
 10217                           ;	Data Code Protection bit
 10218                           ;	CPD = OFF, Data memory code protection is disabled
 10219                           ;	Brown Out Reset Selection bits
 10220                           ;	BOREN = OFF, BOR disabled
 10221                           ;	Internal External Switchover bit
 10222                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10223                           ;	Fail-Safe Clock Monitor Enabled bit
 10224                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10225                           ;	Low Voltage Programming Enable bit
 10226                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10227                           ;	In-Circuit Debugger Mode bit
 10228                           ;	DEBUG = 0x1, unprogrammed default
 10229  2007                     	org	8199
 10230  2007  20D1               	dw	8401
 10231                           
 10232                           ;Config register CONFIG2 @ 0x2008
 10233                           ;	Brown-out Reset Selection bit
 10234                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10235                           ;	Flash Program Memory Self Write Enable bits
 10236                           ;	WRT = OFF, Write protection off
 10237  2008                     	org	8200
 10238  2008  3FFF               	dw	16383
 10239                           
 10240                           	psect	text1_split_1
 10241  001E                     u6970:
 10242  001E                     l4344:
 10243  001E  1683               	bsf	3,5	;RP0=1, select bank1
 10244  001F  1303               	bcf	3,6	;RP1=0, select bank1
 10245  0020  084E               	movf	(sprintf@fval+3)^(0+128),w
 10246  0021  1283               	bcf	3,5	;RP0=0, select bank0
 10247  0022  1303               	bcf	3,6	;RP1=0, select bank0
 10248  0023  00A3               	movwf	___fleq@ff1+3
 10249  0024  1683               	bsf	3,5	;RP0=1, select bank1
 10250  0025  1303               	bcf	3,6	;RP1=0, select bank1
 10251  0026  084D               	movf	(sprintf@fval+2)^(0+128),w
 10252  0027  1283               	bcf	3,5	;RP0=0, select bank0
 10253  0028  1303               	bcf	3,6	;RP1=0, select bank0
 10254  0029  00A2               	movwf	___fleq@ff1+2
 10255  002A  1683               	bsf	3,5	;RP0=1, select bank1
 10256  002B  1303               	bcf	3,6	;RP1=0, select bank1
 10257  002C  084C               	movf	(sprintf@fval+1)^(0+128),w
 10258  002D  1283               	bcf	3,5	;RP0=0, select bank0
 10259  002E  1303               	bcf	3,6	;RP1=0, select bank0
 10260  002F  00A1               	movwf	___fleq@ff1+1
 10261  0030  1683               	bsf	3,5	;RP0=1, select bank1
 10262  0031  1303               	bcf	3,6	;RP1=0, select bank1
 10263  0032  084B               	movf	sprintf@fval^(0+128),w
 10264  0033  1283               	bcf	3,5	;RP0=0, select bank0
 10265  0034  1303               	bcf	3,6	;RP1=0, select bank0
 10266  0035  00A0               	movwf	___fleq@ff1
 10267  0036  3000               	movlw	0
 10268  0037  00A7               	movwf	___fleq@ff2+3
 10269  0038  3000               	movlw	0
 10270  0039  00A6               	movwf	___fleq@ff2+2
 10271  003A  3000               	movlw	0
 10272  003B  00A5               	movwf	___fleq@ff2+1
 10273  003C  3000               	movlw	0
 10274  003D  00A4               	movwf	___fleq@ff2
 10275  003E  160A  158A  22AF  120A  118A  	fcall	___fleq
 10276  0043  1803               	btfsc	3,0
 10277  0044  2846               	goto	u6981
 10278  0045  2847               	goto	u6980
 10279  0046                     u6981:
 10280  0046  2929               	goto	l4364
 10281  0047                     u6980:
 10282  0047                     l4346:
 10283  0047  1683               	bsf	3,5	;RP0=1, select bank1
 10284  0048  1303               	bcf	3,6	;RP1=0, select bank1
 10285  0049  084E               	movf	(sprintf@fval+3)^(0+128),w
 10286  004A  1283               	bcf	3,5	;RP0=0, select bank0
 10287  004B  1303               	bcf	3,6	;RP1=0, select bank0
 10288  004C  00DA               	movwf	___fltol@f1+3
 10289  004D  1683               	bsf	3,5	;RP0=1, select bank1
 10290  004E  1303               	bcf	3,6	;RP1=0, select bank1
 10291  004F  084D               	movf	(sprintf@fval+2)^(0+128),w
 10292  0050  1283               	bcf	3,5	;RP0=0, select bank0
 10293  0051  1303               	bcf	3,6	;RP1=0, select bank0
 10294  0052  00D9               	movwf	___fltol@f1+2
 10295  0053  1683               	bsf	3,5	;RP0=1, select bank1
 10296  0054  1303               	bcf	3,6	;RP1=0, select bank1
 10297  0055  084C               	movf	(sprintf@fval+1)^(0+128),w
 10298  0056  1283               	bcf	3,5	;RP0=0, select bank0
 10299  0057  1303               	bcf	3,6	;RP1=0, select bank0
 10300  0058  00D8               	movwf	___fltol@f1+1
 10301  0059  1683               	bsf	3,5	;RP0=1, select bank1
 10302  005A  1303               	bcf	3,6	;RP1=0, select bank1
 10303  005B  084B               	movf	sprintf@fval^(0+128),w
 10304  005C  1283               	bcf	3,5	;RP0=0, select bank0
 10305  005D  1303               	bcf	3,6	;RP1=0, select bank0
 10306  005E  00D7               	movwf	___fltol@f1
 10307  005F  160A  158A  240D  120A  118A  	fcall	___fltol
 10308  0064  1283               	bcf	3,5	;RP0=0, select bank0
 10309  0065  1303               	bcf	3,6	;RP1=0, select bank0
 10310  0066  085A               	movf	?___fltol+3,w
 10311  0067  0459               	iorwf	?___fltol+2,w
 10312  0068  0458               	iorwf	?___fltol+1,w
 10313  0069  0457               	iorwf	?___fltol,w
 10314  006A  1D03               	skipz
 10315  006B  286D               	goto	u6991
 10316  006C  286E               	goto	u6990
 10317  006D                     u6991:
 10318  006D  2929               	goto	l4364
 10319  006E                     u6990:
 10320  006E                     l4348:
 10321  006E  1683               	bsf	3,5	;RP0=1, select bank1
 10322  006F  1303               	bcf	3,6	;RP1=0, select bank1
 10323  0070  084A               	movf	(sprintf@eexp+1)^(0+128),w
 10324  0071  3A80               	xorlw	128
 10325  0072  00FF               	movwf	btemp+1
 10326  0073  3080               	movlw	128
 10327  0074  027F               	subwf	btemp+1,w
 10328  0075  1D03               	skipz
 10329  0076  2879               	goto	u7005
 10330  0077  3002               	movlw	2
 10331  0078  0249               	subwf	sprintf@eexp^(0+128),w
 10332  0079                     u7005:
 10333  0079  1C03               	skipc
 10334  007A  287C               	goto	u7001
 10335  007B  287D               	goto	u7000
 10336  007C                     u7001:
 10337  007C  2929               	goto	l4364
 10338  007D                     u7000:
 10339  007D                     l4350:
 10340                           
 10341                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmpval.integ < 4.
      +                          294967296){
 10342  007D  1683               	bsf	3,5	;RP0=1, select bank1
 10343  007E  1303               	bcf	3,6	;RP1=0, select bank1
 10344  007F  0844               	movf	(sprintf@tmpval+3)^(0+128),w
 10345  0080  1283               	bcf	3,5	;RP0=0, select bank0
 10346  0081  1303               	bcf	3,6	;RP1=0, select bank0
 10347  0082  00A3               	movwf	___flge@ff1+3
 10348  0083  1683               	bsf	3,5	;RP0=1, select bank1
 10349  0084  1303               	bcf	3,6	;RP1=0, select bank1
 10350  0085  0843               	movf	(sprintf@tmpval+2)^(0+128),w
 10351  0086  1283               	bcf	3,5	;RP0=0, select bank0
 10352  0087  1303               	bcf	3,6	;RP1=0, select bank0
 10353  0088  00A2               	movwf	___flge@ff1+2
 10354  0089  1683               	bsf	3,5	;RP0=1, select bank1
 10355  008A  1303               	bcf	3,6	;RP1=0, select bank1
 10356  008B  0842               	movf	(sprintf@tmpval+1)^(0+128),w
 10357  008C  1283               	bcf	3,5	;RP0=0, select bank0
 10358  008D  1303               	bcf	3,6	;RP1=0, select bank0
 10359  008E  00A1               	movwf	___flge@ff1+1
 10360  008F  1683               	bsf	3,5	;RP0=1, select bank1
 10361  0090  1303               	bcf	3,6	;RP1=0, select bank1
 10362  0091  0841               	movf	sprintf@tmpval^(0+128),w
 10363  0092  1283               	bcf	3,5	;RP0=0, select bank0
 10364  0093  1303               	bcf	3,6	;RP1=0, select bank0
 10365  0094  00A0               	movwf	___flge@ff1
 10366  0095  3040               	movlw	64
 10367  0096  00A7               	movwf	___flge@ff2+3
 10368  0097  3089               	movlw	137
 10369  0098  00A6               	movwf	___flge@ff2+2
 10370  0099  3070               	movlw	112
 10371  009A  00A5               	movwf	___flge@ff2+1
 10372  009B  305F               	movlw	95
 10373  009C  00A4               	movwf	___flge@ff2
 10374  009D  160A  158A  2525  120A  118A  	fcall	___flge
 10375  00A2  1803               	btfsc	3,0
 10376  00A3  28A5               	goto	u7011
 10377  00A4  28A6               	goto	u7010
 10378  00A5                     u7011:
 10379  00A5  28AF               	goto	l4354
 10380  00A6                     u7010:
 10381  00A6                     l4352:
 10382                           
 10383                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp -= (sizeof dpo
      +                          wers/sizeof dpowers[0])-1;
 10384  00A6  30F7               	movlw	247
 10385  00A7  1683               	bsf	3,5	;RP0=1, select bank1
 10386  00A8  1303               	bcf	3,6	;RP1=0, select bank1
 10387  00A9  07C9               	addwf	sprintf@eexp^(0+128),f
 10388  00AA  1803               	skipnc
 10389  00AB  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
 10390  00AC  30FF               	movlw	255
 10391  00AD  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
 10392                           
 10393                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10394  00AE  28B7               	goto	l4356
 10395  00AF                     l4354:
 10396                           
 10397                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp -= (sizeof dpo
      +                          wers/sizeof dpowers[0])-2;
 10398  00AF  30F8               	movlw	248
 10399  00B0  1683               	bsf	3,5	;RP0=1, select bank1
 10400  00B1  1303               	bcf	3,6	;RP1=0, select bank1
 10401  00B2  07C9               	addwf	sprintf@eexp^(0+128),f
 10402  00B3  1803               	skipnc
 10403  00B4  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
 10404  00B5  30FF               	movlw	255
 10405  00B6  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
 10406  00B7                     l4356:
 10407                           
 10408                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = ((sizeof(doubl
      +                          e)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10409  00B7  0849               	movf	sprintf@eexp^(0+128),w
 10410  00B8  120A  158A  249D  120A  118A  	fcall	_scale
 10411  00BD  1283               	bcf	3,5	;RP0=0, select bank0
 10412  00BE  1303               	bcf	3,6	;RP1=0, select bank0
 10413  00BF  0847               	movf	?_scale+3,w
 10414  00C0  1683               	bsf	3,5	;RP0=1, select bank1
 10415  00C1  1303               	bcf	3,6	;RP1=0, select bank1
 10416  00C2  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 10417  00C3  1283               	bcf	3,5	;RP0=0, select bank0
 10418  00C4  1303               	bcf	3,6	;RP1=0, select bank0
 10419  00C5  0846               	movf	?_scale+2,w
 10420  00C6  1683               	bsf	3,5	;RP0=1, select bank1
 10421  00C7  1303               	bcf	3,6	;RP1=0, select bank1
 10422  00C8  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 10423  00C9  1283               	bcf	3,5	;RP0=0, select bank0
 10424  00CA  1303               	bcf	3,6	;RP1=0, select bank0
 10425  00CB  0845               	movf	?_scale+1,w
 10426  00CC  1683               	bsf	3,5	;RP0=1, select bank1
 10427  00CD  1303               	bcf	3,6	;RP1=0, select bank1
 10428  00CE  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 10429  00CF  1283               	bcf	3,5	;RP0=0, select bank0
 10430  00D0  1303               	bcf	3,6	;RP1=0, select bank0
 10431  00D1  0844               	movf	?_scale,w
 10432  00D2  1683               	bsf	3,5	;RP0=1, select bank1
 10433  00D3  1303               	bcf	3,6	;RP1=0, select bank1
 10434  00D4  00C1               	movwf	sprintf@tmpval^(0+128)
 10435  00D5                     l4358:
 10436  00D5  084E               	movf	(sprintf@fval+3)^(0+128),w
 10437  00D6  1283               	bcf	3,5	;RP0=0, select bank0
 10438  00D7  1303               	bcf	3,6	;RP1=0, select bank0
 10439  00D8  00A3               	movwf	__div_to_l_@f1+3
 10440  00D9  1683               	bsf	3,5	;RP0=1, select bank1
 10441  00DA  1303               	bcf	3,6	;RP1=0, select bank1
 10442  00DB  084D               	movf	(sprintf@fval+2)^(0+128),w
 10443  00DC  1283               	bcf	3,5	;RP0=0, select bank0
 10444  00DD  1303               	bcf	3,6	;RP1=0, select bank0
 10445  00DE  00A2               	movwf	__div_to_l_@f1+2
 10446  00DF  1683               	bsf	3,5	;RP0=1, select bank1
 10447  00E0  1303               	bcf	3,6	;RP1=0, select bank1
 10448  00E1  084C               	movf	(sprintf@fval+1)^(0+128),w
 10449  00E2  1283               	bcf	3,5	;RP0=0, select bank0
 10450  00E3  1303               	bcf	3,6	;RP1=0, select bank0
 10451  00E4  00A1               	movwf	__div_to_l_@f1+1
 10452  00E5  1683               	bsf	3,5	;RP0=1, select bank1
 10453  00E6  1303               	bcf	3,6	;RP1=0, select bank1
 10454  00E7  084B               	movf	sprintf@fval^(0+128),w
 10455  00E8  1283               	bcf	3,5	;RP0=0, select bank0
 10456  00E9  1303               	bcf	3,6	;RP1=0, select bank0
 10457  00EA  00A0               	movwf	__div_to_l_@f1
 10458  00EB  1683               	bsf	3,5	;RP0=1, select bank1
 10459  00EC  1303               	bcf	3,6	;RP1=0, select bank1
 10460  00ED  0844               	movf	(sprintf@tmpval+3)^(0+128),w
 10461  00EE  1283               	bcf	3,5	;RP0=0, select bank0
 10462  00EF  1303               	bcf	3,6	;RP1=0, select bank0
 10463  00F0  00A7               	movwf	__div_to_l_@f2+3
 10464  00F1  1683               	bsf	3,5	;RP0=1, select bank1
 10465  00F2  1303               	bcf	3,6	;RP1=0, select bank1
 10466  00F3  0843               	movf	(sprintf@tmpval+2)^(0+128),w
 10467  00F4  1283               	bcf	3,5	;RP0=0, select bank0
 10468  00F5  1303               	bcf	3,6	;RP1=0, select bank0
 10469  00F6  00A6               	movwf	__div_to_l_@f2+2
 10470  00F7  1683               	bsf	3,5	;RP0=1, select bank1
 10471  00F8  1303               	bcf	3,6	;RP1=0, select bank1
 10472  00F9  0842               	movf	(sprintf@tmpval+1)^(0+128),w
 10473  00FA  1283               	bcf	3,5	;RP0=0, select bank0
 10474  00FB  1303               	bcf	3,6	;RP1=0, select bank0
 10475  00FC  00A5               	movwf	__div_to_l_@f2+1
 10476  00FD  1683               	bsf	3,5	;RP0=1, select bank1
 10477  00FE  1303               	bcf	3,6	;RP1=0, select bank1
 10478  00FF  0841               	movf	sprintf@tmpval^(0+128),w
 10479  0100  1283               	bcf	3,5	;RP0=0, select bank0
 10480  0101  1303               	bcf	3,6	;RP1=0, select bank0
 10481  0102  00A4               	movwf	__div_to_l_@f2
 10482  0103  160A  158A  2742  120A  118A  	fcall	__div_to_l_
 10483  0108  1283               	bcf	3,5	;RP0=0, select bank0
 10484  0109  1303               	bcf	3,6	;RP1=0, select bank0
 10485  010A  0823               	movf	?__div_to_l_+3,w
 10486  010B  1683               	bsf	3,5	;RP0=1, select bank1
 10487  010C  1303               	bcf	3,6	;RP1=0, select bank1
 10488  010D  00C8               	movwf	(sprintf@val+3)^(0+128)
 10489  010E  1283               	bcf	3,5	;RP0=0, select bank0
 10490  010F  1303               	bcf	3,6	;RP1=0, select bank0
 10491  0110  0822               	movf	?__div_to_l_+2,w
 10492  0111  1683               	bsf	3,5	;RP0=1, select bank1
 10493  0112  1303               	bcf	3,6	;RP1=0, select bank1
 10494  0113  00C7               	movwf	(sprintf@val+2)^(0+128)
 10495  0114  1283               	bcf	3,5	;RP0=0, select bank0
 10496  0115  1303               	bcf	3,6	;RP1=0, select bank0
 10497  0116  0821               	movf	?__div_to_l_+1,w
 10498  0117  1683               	bsf	3,5	;RP0=1, select bank1
 10499  0118  1303               	bcf	3,6	;RP1=0, select bank1
 10500  0119  00C6               	movwf	(sprintf@val+1)^(0+128)
 10501  011A  1283               	bcf	3,5	;RP0=0, select bank0
 10502  011B  1303               	bcf	3,6	;RP1=0, select bank0
 10503  011C  0820               	movf	?__div_to_l_,w
 10504  011D  1683               	bsf	3,5	;RP0=1, select bank1
 10505  011E  1303               	bcf	3,6	;RP1=0, select bank1
 10506  011F  00C5               	movwf	sprintf@val^(0+128)
 10507  0120                     l4362:
 10508                           
 10509                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval = 0.0;
 10510  0120  3000               	movlw	0
 10511  0121  00CE               	movwf	(sprintf@fval+3)^(0+128)
 10512  0122  3000               	movlw	0
 10513  0123  00CD               	movwf	(sprintf@fval+2)^(0+128)
 10514  0124  3000               	movlw	0
 10515  0125  00CC               	movwf	(sprintf@fval+1)^(0+128)
 10516  0126  3000               	movlw	0
 10517  0127  00CB               	movwf	sprintf@fval^(0+128)
 10518                           
 10519                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else {
 10520  0128  298F               	goto	l4370
 10521  0129                     l4364:
 10522                           
 10523                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = (unsigned long
      +                          )fval;
 10524  0129  1683               	bsf	3,5	;RP0=1, select bank1
 10525  012A  1303               	bcf	3,6	;RP1=0, select bank1
 10526  012B  084E               	movf	(sprintf@fval+3)^(0+128),w
 10527  012C  1283               	bcf	3,5	;RP0=0, select bank0
 10528  012D  1303               	bcf	3,6	;RP1=0, select bank0
 10529  012E  00DA               	movwf	___fltol@f1+3
 10530  012F  1683               	bsf	3,5	;RP0=1, select bank1
 10531  0130  1303               	bcf	3,6	;RP1=0, select bank1
 10532  0131  084D               	movf	(sprintf@fval+2)^(0+128),w
 10533  0132  1283               	bcf	3,5	;RP0=0, select bank0
 10534  0133  1303               	bcf	3,6	;RP1=0, select bank0
 10535  0134  00D9               	movwf	___fltol@f1+2
 10536  0135  1683               	bsf	3,5	;RP0=1, select bank1
 10537  0136  1303               	bcf	3,6	;RP1=0, select bank1
 10538  0137  084C               	movf	(sprintf@fval+1)^(0+128),w
 10539  0138  1283               	bcf	3,5	;RP0=0, select bank0
 10540  0139  1303               	bcf	3,6	;RP1=0, select bank0
 10541  013A  00D8               	movwf	___fltol@f1+1
 10542  013B  1683               	bsf	3,5	;RP0=1, select bank1
 10543  013C  1303               	bcf	3,6	;RP1=0, select bank1
 10544  013D  084B               	movf	sprintf@fval^(0+128),w
 10545  013E  1283               	bcf	3,5	;RP0=0, select bank0
 10546  013F  1303               	bcf	3,6	;RP1=0, select bank0
 10547  0140  00D7               	movwf	___fltol@f1
 10548  0141  160A  158A  240D  120A  118A  	fcall	___fltol
 10549  0146  1283               	bcf	3,5	;RP0=0, select bank0
 10550  0147  1303               	bcf	3,6	;RP1=0, select bank0
 10551  0148  085A               	movf	?___fltol+3,w
 10552  0149  1683               	bsf	3,5	;RP0=1, select bank1
 10553  014A  1303               	bcf	3,6	;RP1=0, select bank1
 10554  014B  00C8               	movwf	(sprintf@val+3)^(0+128)
 10555  014C  1283               	bcf	3,5	;RP0=0, select bank0
 10556  014D  1303               	bcf	3,6	;RP1=0, select bank0
 10557  014E  0859               	movf	?___fltol+2,w
 10558  014F  1683               	bsf	3,5	;RP0=1, select bank1
 10559  0150  1303               	bcf	3,6	;RP1=0, select bank1
 10560  0151  00C7               	movwf	(sprintf@val+2)^(0+128)
 10561  0152  1283               	bcf	3,5	;RP0=0, select bank0
 10562  0153  1303               	bcf	3,6	;RP1=0, select bank0
 10563  0154  0858               	movf	?___fltol+1,w
 10564  0155  1683               	bsf	3,5	;RP0=1, select bank1
 10565  0156  1303               	bcf	3,6	;RP1=0, select bank1
 10566  0157  00C6               	movwf	(sprintf@val+1)^(0+128)
 10567  0158  1283               	bcf	3,5	;RP0=0, select bank0
 10568  0159  1303               	bcf	3,6	;RP1=0, select bank0
 10569  015A  0857               	movf	?___fltol,w
 10570  015B  1683               	bsf	3,5	;RP0=1, select bank1
 10571  015C  1303               	bcf	3,6	;RP1=0, select bank1
 10572  015D  00C5               	movwf	sprintf@val^(0+128)
 10573  015E                     l4366:
 10574                           
 10575                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -= (double)val;
 10576  015E  0848               	movf	(sprintf@val+3)^(0+128),w
 10577  015F  00F6               	movwf	___xxtofl@val+3
 10578  0160  0847               	movf	(sprintf@val+2)^(0+128),w
 10579  0161  00F5               	movwf	___xxtofl@val+2
 10580  0162  0846               	movf	(sprintf@val+1)^(0+128),w
 10581  0163  00F4               	movwf	___xxtofl@val+1
 10582  0164  0845               	movf	sprintf@val^(0+128),w
 10583  0165  00F3               	movwf	___xxtofl@val
 10584  0166  3000               	movlw	0
 10585  0167  160A  158A  25C9  120A  118A  	fcall	___xxtofl
 10586  016C  0876               	movf	?___xxtofl+3,w
 10587  016D  1683               	bsf	3,5	;RP0=1, select bank1
 10588  016E  1303               	bcf	3,6	;RP1=0, select bank1
 10589  016F  00A3               	movwf	(___flsub@a+3)^(0+128)
 10590  0170  0875               	movf	?___xxtofl+2,w
 10591  0171  00A2               	movwf	(___flsub@a+2)^(0+128)
 10592  0172  0874               	movf	?___xxtofl+1,w
 10593  0173  00A1               	movwf	(___flsub@a+1)^(0+128)
 10594  0174  0873               	movf	?___xxtofl,w
 10595  0175  00A0               	movwf	___flsub@a^(0+128)
 10596  0176  084E               	movf	(sprintf@fval+3)^(0+128),w
 10597  0177  00A7               	movwf	(___flsub@b+3)^(0+128)
 10598  0178  084D               	movf	(sprintf@fval+2)^(0+128),w
 10599  0179  00A6               	movwf	(___flsub@b+2)^(0+128)
 10600  017A  084C               	movf	(sprintf@fval+1)^(0+128),w
 10601  017B  00A5               	movwf	(___flsub@b+1)^(0+128)
 10602  017C  084B               	movf	sprintf@fval^(0+128),w
 10603  017D  00A4               	movwf	___flsub@b^(0+128)
 10604  017E  160A  158A  22FF  120A  118A  	fcall	___flsub
 10605  0183  1683               	bsf	3,5	;RP0=1, select bank1
 10606  0184  1303               	bcf	3,6	;RP1=0, select bank1
 10607  0185  0823               	movf	(?___flsub+3)^(0+128),w
 10608  0186  00CE               	movwf	(sprintf@fval+3)^(0+128)
 10609  0187  0822               	movf	(?___flsub+2)^(0+128),w
 10610  0188  00CD               	movwf	(sprintf@fval+2)^(0+128)
 10611  0189  0821               	movf	(?___flsub+1)^(0+128),w
 10612  018A  00CC               	movwf	(sprintf@fval+1)^(0+128)
 10613  018B  0820               	movf	?___flsub^(0+128),w
 10614  018C  00CB               	movwf	sprintf@fval^(0+128)
 10615  018D                     l4368:
 10616                           
 10617                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp = 0;
 10618  018D  01C9               	clrf	sprintf@eexp^(0+128)
 10619  018E  01CA               	clrf	(sprintf@eexp+1)^(0+128)
 10620  018F                     l4370:
 10621                           
 10622                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c = 1 ; c != (siz
      +                          eof dpowers/sizeof dpowers[0]) ; c++)
 10623  018F  01D2               	clrf	sprintf@c^(0+128)
 10624  0190  0AD2               	incf	sprintf@c^(0+128),f
 10625  0191                     l4376:
 10626                           
 10627                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val < dpowers[c])
 10628  0191  0852               	movf	sprintf@c^(0+128),w
 10629  0192  00B3               	movwf	??_sprintf^(0+128)
 10630  0193  3001               	movlw	1
 10631  0194                     u7025:
 10632  0194  1003               	clrc
 10633  0195  0DB3               	rlf	??_sprintf^(0+128),f
 10634  0196  3EFF               	addlw	-1
 10635  0197  1D03               	skipz
 10636  0198  2994               	goto	u7025
 10637  0199  1003               	clrc
 10638  019A  0D33               	rlf	??_sprintf^(0+128),w
 10639  019B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10640  019C  0084               	movwf	4
 10641  019D  120A  158A  200A  120A  118A  	fcall	stringdir
 10642  01A2  00B4               	movwf	(??_sprintf+1)^(0+128)
 10643  01A3  120A  158A  200A  120A  118A  	fcall	stringdir
 10644  01A8  00B5               	movwf	((??_sprintf+1)^(0+128)+1)
 10645  01A9  120A  158A  200A  120A  118A  	fcall	stringdir
 10646  01AE  00B6               	movwf	((??_sprintf+1)^(0+128)+2)
 10647  01AF  120A  158A  200A  120A  118A  	fcall	stringdir
 10648  01B4  00B7               	movwf	((??_sprintf+1)^(0+128)+3)
 10649  01B5  0837               	movf	(??_sprintf+4)^(0+128),w
 10650  01B6  0248               	subwf	(sprintf@val+3)^(0+128),w
 10651  01B7  1D03               	skipz
 10652  01B8  29C3               	goto	u7035
 10653  01B9  0836               	movf	(??_sprintf+3)^(0+128),w
 10654  01BA  0247               	subwf	(sprintf@val+2)^(0+128),w
 10655  01BB  1D03               	skipz
 10656  01BC  29C3               	goto	u7035
 10657  01BD  0835               	movf	(??_sprintf+2)^(0+128),w
 10658  01BE  0246               	subwf	(sprintf@val+1)^(0+128),w
 10659  01BF  1D03               	skipz
 10660  01C0  29C3               	goto	u7035
 10661  01C1  0834               	movf	(??_sprintf+1)^(0+128),w
 10662  01C2  0245               	subwf	sprintf@val^(0+128),w
 10663  01C3                     u7035:
 10664  01C3  1803               	skipnc
 10665  01C4  29C6               	goto	u7031
 10666  01C5  29C7               	goto	u7030
 10667  01C6                     u7031:
 10668  01C6  29C8               	goto	l4380
 10669  01C7                     u7030:
 10670  01C7  29D2               	goto	l4382
 10671  01C8                     l4380:
 10672  01C8  3001               	movlw	1
 10673  01C9  00B3               	movwf	??_sprintf^(0+128)
 10674  01CA  0833               	movf	??_sprintf^(0+128),w
 10675  01CB  07D2               	addwf	sprintf@c^(0+128),f
 10676  01CC  300A               	movlw	10
 10677  01CD  0652               	xorwf	sprintf@c^(0+128),w
 10678  01CE  1D03               	btfss	3,2
 10679  01CF  29D1               	goto	u7041
 10680  01D0  29D2               	goto	u7040
 10681  01D1                     u7041:
 10682  01D1  2991               	goto	l4376
 10683  01D2                     u7040:
 10684  01D2                     l4382:
 10685                           
 10686                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -= prec + c + e
      +                          exp;
 10687  01D2  0852               	movf	sprintf@c^(0+128),w
 10688  01D3  0750               	addwf	sprintf@prec^(0+128),w
 10689  01D4  00B3               	movwf	??_sprintf^(0+128)
 10690  01D5  0851               	movf	(sprintf@prec+1)^(0+128),w
 10691  01D6  1803               	skipnc
 10692  01D7  0A51               	incf	(sprintf@prec+1)^(0+128),w
 10693  01D8  00B4               	movwf	(??_sprintf^(0+128)+1)
 10694  01D9  0849               	movf	sprintf@eexp^(0+128),w
 10695  01DA  0733               	addwf	??_sprintf^(0+128),w
 10696  01DB  00B5               	movwf	(??_sprintf+2)^(0+128)
 10697  01DC  084A               	movf	(sprintf@eexp+1)^(0+128),w
 10698  01DD  1803               	skipnc
 10699  01DE  0A4A               	incf	(sprintf@eexp+1)^(0+128),w
 10700  01DF  0734               	addwf	(??_sprintf+1)^(0+128),w
 10701  01E0  00B6               	movwf	(??_sprintf+3)^(0+128)
 10702  01E1  0835               	movf	(??_sprintf+2)^(0+128),w
 10703  01E2  02BF               	subwf	sprintf@width^(0+128),f
 10704  01E3  0836               	movf	(??_sprintf+3)^(0+128),w
 10705  01E4  1C03               	skipc
 10706  01E5  03C0               	decf	(sprintf@width+1)^(0+128),f
 10707  01E6  02C0               	subwf	(sprintf@width+1)^(0+128),f
 10708                           
 10709                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10710  01E7  0850               	movf	sprintf@prec^(0+128),w
 10711  01E8  0451               	iorwf	(sprintf@prec+1)^(0+128),w
 10712  01E9  1903               	btfsc	3,2
 10713  01EA  29EC               	goto	u7051
 10714  01EB  29ED               	goto	u7050
 10715  01EC                     u7051:
 10716  01EC  29F3               	goto	l4386
 10717  01ED                     u7050:
 10718  01ED                     l4384:
 10719                           
 10720                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width--;
 10721  01ED  30FF               	movlw	255
 10722  01EE  07BF               	addwf	sprintf@width^(0+128),f
 10723  01EF  1803               	skipnc
 10724  01F0  0AC0               	incf	(sprintf@width+1)^(0+128),f
 10725  01F1  30FF               	movlw	255
 10726  01F2  07C0               	addwf	(sprintf@width+1)^(0+128),f
 10727  01F3                     l4386:
 10728                           
 10729                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag & 0x03)
 10730  01F3  3003               	movlw	3
 10731  01F4  053D               	andwf	sprintf@flag^(0+128),w
 10732  01F5  00B3               	movwf	??_sprintf^(0+128)
 10733  01F6  3000               	movlw	0
 10734  01F7  053E               	andwf	(sprintf@flag+1)^(0+128),w
 10735  01F8  00B4               	movwf	(??_sprintf+1)^(0+128)
 10736  01F9  0833               	movf	??_sprintf^(0+128),w
 10737  01FA  0434               	iorwf	(??_sprintf^(0+128)+1),w
 10738  01FB  1903               	btfsc	3,2
 10739  01FC  29FE               	goto	u7061
 10740  01FD  29FF               	goto	u7060
 10741  01FE                     u7061:
 10742  01FE  2A14               	goto	l4396
 10743  01FF                     u7060:
 10744  01FF                     l4388:
 10745                           
 10746                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width--;
 10747  01FF  30FF               	movlw	255
 10748  0200  07BF               	addwf	sprintf@width^(0+128),f
 10749  0201  1803               	skipnc
 10750  0202  0AC0               	incf	(sprintf@width+1)^(0+128),f
 10751  0203  30FF               	movlw	255
 10752  0204  07C0               	addwf	(sprintf@width+1)^(0+128),f
 10753  0205  2A14               	goto	l4396
 10754  0206                     l4390:
 10755                           
 10756                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp++ = (' ')));
 10757  0206  3020               	movlw	32
 10758  0207  1683               	bsf	3,5	;RP0=1, select bank1
 10759  0208  1303               	bcf	3,6	;RP1=0, select bank1
 10760  0209  00B3               	movwf	??_sprintf^(0+128)
 10761  020A  084F               	movf	sprintf@sp^(0+128),w
 10762  020B  0084               	movwf	4
 10763  020C  0833               	movf	??_sprintf^(0+128),w
 10764  020D  1383               	bcf	3,7	;select IRP bank0
 10765  020E  0080               	movwf	0
 10766  020F                     l4392:
 10767  020F  3001               	movlw	1
 10768  0210  00B3               	movwf	??_sprintf^(0+128)
 10769  0211  0833               	movf	??_sprintf^(0+128),w
 10770  0212  07CF               	addwf	sprintf@sp^(0+128),f
 10771  0213  29FF               	goto	l4388
 10772  0214                     l4396:
 10773                           
 10774                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(width > 0) {
 10775  0214  0840               	movf	(sprintf@width+1)^(0+128),w
 10776  0215  3A80               	xorlw	128
 10777  0216  00FF               	movwf	btemp+1
 10778  0217  3080               	movlw	128
 10779  0218  027F               	subwf	btemp+1,w
 10780  0219  1D03               	skipz
 10781  021A  2A1D               	goto	u7075
 10782  021B  3001               	movlw	1
 10783  021C  023F               	subwf	sprintf@width^(0+128),w
 10784  021D                     u7075:
 10785  021D  1803               	skipnc
 10786  021E  2A20               	goto	u7071
 10787  021F  2A21               	goto	u7070
 10788  0220                     u7071:
 10789  0220  2A06               	goto	l4390
 10790  0221                     u7070:
 10791  0221                     l4398:
 10792                           
 10793                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x03)
 10794  0221  3003               	movlw	3
 10795  0222  1683               	bsf	3,5	;RP0=1, select bank1
 10796  0223  1303               	bcf	3,6	;RP1=0, select bank1
 10797  0224  053D               	andwf	sprintf@flag^(0+128),w
 10798  0225  00B3               	movwf	??_sprintf^(0+128)
 10799  0226  3000               	movlw	0
 10800  0227  053E               	andwf	(sprintf@flag+1)^(0+128),w
 10801  0228  00B4               	movwf	(??_sprintf+1)^(0+128)
 10802  0229  0833               	movf	??_sprintf^(0+128),w
 10803  022A  0434               	iorwf	(??_sprintf^(0+128)+1),w
 10804  022B  1903               	btfsc	3,2
 10805  022C  2A2E               	goto	u7081
 10806  022D  2A2F               	goto	u7080
 10807  022E                     u7081:
 10808  022E  2AE1               	goto	l410
 10809  022F                     u7080:
 10810  022F                     l4400:
 10811                           
 10812                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp++ = ('-')));
 10813  022F  302D               	movlw	45
 10814  0230  00B3               	movwf	??_sprintf^(0+128)
 10815  0231  084F               	movf	sprintf@sp^(0+128),w
 10816  0232  0084               	movwf	4
 10817  0233  0833               	movf	??_sprintf^(0+128),w
 10818  0234  1383               	bcf	3,7	;select IRP bank0
 10819  0235  0080               	movwf	0
 10820  0236                     l4402:
 10821  0236  3001               	movlw	1
 10822  0237  00B3               	movwf	??_sprintf^(0+128)
 10823  0238  0833               	movf	??_sprintf^(0+128),w
 10824  0239  07CF               	addwf	sprintf@sp^(0+128),f
 10825  023A  2AE1               	goto	l410
 10826  023B                     l4404:
 10827                           
 10828                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;D:\Microchip\xc8\v2
      +                          .31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = val/dpowers[c];
 10829  023B  0852               	movf	sprintf@c^(0+128),w
 10830  023C  00B3               	movwf	??_sprintf^(0+128)
 10831  023D  3001               	movlw	1
 10832  023E                     u7095:
 10833  023E  1003               	clrc
 10834  023F  0DB3               	rlf	??_sprintf^(0+128),f
 10835  0240  3EFF               	addlw	-1
 10836  0241  1D03               	skipz
 10837  0242  2A3E               	goto	u7095
 10838  0243  1003               	clrc
 10839  0244  0D33               	rlf	??_sprintf^(0+128),w
 10840  0245  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10841  0246  0084               	movwf	4
 10842  0247  120A  158A  200A  120A  118A  	fcall	stringdir
 10843  024C  1283               	bcf	3,5	;RP0=0, select bank0
 10844  024D  1303               	bcf	3,6	;RP1=0, select bank0
 10845  024E  00A0               	movwf	___lldiv@divisor
 10846  024F  120A  158A  200A  120A  118A  	fcall	stringdir
 10847  0254  00A1               	movwf	___lldiv@divisor+1
 10848  0255  120A  158A  200A  120A  118A  	fcall	stringdir
 10849  025A  00A2               	movwf	___lldiv@divisor+2
 10850  025B  120A  158A  200A  120A  118A  	fcall	stringdir
 10851  0260  00A3               	movwf	___lldiv@divisor+3
 10852  0261  1683               	bsf	3,5	;RP0=1, select bank1
 10853  0262  1303               	bcf	3,6	;RP1=0, select bank1
 10854  0263  0848               	movf	(sprintf@val+3)^(0+128),w
 10855  0264  1283               	bcf	3,5	;RP0=0, select bank0
 10856  0265  1303               	bcf	3,6	;RP1=0, select bank0
 10857  0266  00A7               	movwf	___lldiv@dividend+3
 10858  0267  1683               	bsf	3,5	;RP0=1, select bank1
 10859  0268  1303               	bcf	3,6	;RP1=0, select bank1
 10860  0269  0847               	movf	(sprintf@val+2)^(0+128),w
 10861  026A  1283               	bcf	3,5	;RP0=0, select bank0
 10862  026B  1303               	bcf	3,6	;RP1=0, select bank0
 10863  026C  00A6               	movwf	___lldiv@dividend+2
 10864  026D  1683               	bsf	3,5	;RP0=1, select bank1
 10865  026E  1303               	bcf	3,6	;RP1=0, select bank1
 10866  026F  0846               	movf	(sprintf@val+1)^(0+128),w
 10867  0270  1283               	bcf	3,5	;RP0=0, select bank0
 10868  0271  1303               	bcf	3,6	;RP1=0, select bank0
 10869  0272  00A5               	movwf	___lldiv@dividend+1
 10870  0273  1683               	bsf	3,5	;RP0=1, select bank1
 10871  0274  1303               	bcf	3,6	;RP1=0, select bank1
 10872  0275  0845               	movf	sprintf@val^(0+128),w
 10873  0276  1283               	bcf	3,5	;RP0=0, select bank0
 10874  0277  1303               	bcf	3,6	;RP1=0, select bank0
 10875  0278  00A4               	movwf	___lldiv@dividend
 10876  0279  160A  158A  23A5  120A  118A  	fcall	___lldiv
 10877  027E  1283               	bcf	3,5	;RP0=0, select bank0
 10878  027F  1303               	bcf	3,6	;RP1=0, select bank0
 10879  0280  0823               	movf	?___lldiv+3,w
 10880  0281  1683               	bsf	3,5	;RP0=1, select bank1
 10881  0282  1303               	bcf	3,6	;RP1=0, select bank1
 10882  0283  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 10883  0284  1283               	bcf	3,5	;RP0=0, select bank0
 10884  0285  1303               	bcf	3,6	;RP1=0, select bank0
 10885  0286  0822               	movf	?___lldiv+2,w
 10886  0287  1683               	bsf	3,5	;RP0=1, select bank1
 10887  0288  1303               	bcf	3,6	;RP1=0, select bank1
 10888  0289  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 10889  028A  1283               	bcf	3,5	;RP0=0, select bank0
 10890  028B  1303               	bcf	3,6	;RP1=0, select bank0
 10891  028C  0821               	movf	?___lldiv+1,w
 10892  028D  1683               	bsf	3,5	;RP0=1, select bank1
 10893  028E  1303               	bcf	3,6	;RP1=0, select bank1
 10894  028F  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 10895  0290  1283               	bcf	3,5	;RP0=0, select bank0
 10896  0291  1303               	bcf	3,6	;RP1=0, select bank0
 10897  0292  0820               	movf	?___lldiv,w
 10898  0293  1683               	bsf	3,5	;RP0=1, select bank1
 10899  0294  1303               	bcf	3,6	;RP1=0, select bank1
 10900  0295  00C1               	movwf	sprintf@tmpval^(0+128)
 10901  0296                     l4406:
 10902                           
 10903                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval.vd %= 10;
 10904  0296  3000               	movlw	0
 10905  0297  1283               	bcf	3,5	;RP0=0, select bank0
 10906  0298  1303               	bcf	3,6	;RP1=0, select bank0
 10907  0299  00AB               	movwf	___llmod@divisor+3
 10908  029A  3000               	movlw	0
 10909  029B  00AA               	movwf	___llmod@divisor+2
 10910  029C  3000               	movlw	0
 10911  029D  00A9               	movwf	___llmod@divisor+1
 10912  029E  300A               	movlw	10
 10913  029F  00A8               	movwf	___llmod@divisor
 10914  02A0  1683               	bsf	3,5	;RP0=1, select bank1
 10915  02A1  1303               	bcf	3,6	;RP1=0, select bank1
 10916  02A2  0844               	movf	(sprintf@tmpval+3)^(0+128),w
 10917  02A3  1283               	bcf	3,5	;RP0=0, select bank0
 10918  02A4  1303               	bcf	3,6	;RP1=0, select bank0
 10919  02A5  00AF               	movwf	___llmod@dividend+3
 10920  02A6  1683               	bsf	3,5	;RP0=1, select bank1
 10921  02A7  1303               	bcf	3,6	;RP1=0, select bank1
 10922  02A8  0843               	movf	(sprintf@tmpval+2)^(0+128),w
 10923  02A9  1283               	bcf	3,5	;RP0=0, select bank0
 10924  02AA  1303               	bcf	3,6	;RP1=0, select bank0
 10925  02AB  00AE               	movwf	___llmod@dividend+2
 10926  02AC  1683               	bsf	3,5	;RP0=1, select bank1
 10927  02AD  1303               	bcf	3,6	;RP1=0, select bank1
 10928  02AE  0842               	movf	(sprintf@tmpval+1)^(0+128),w
 10929  02AF  1283               	bcf	3,5	;RP0=0, select bank0
 10930  02B0  1303               	bcf	3,6	;RP1=0, select bank0
 10931  02B1  00AD               	movwf	___llmod@dividend+1
 10932  02B2  1683               	bsf	3,5	;RP0=1, select bank1
 10933  02B3  1303               	bcf	3,6	;RP1=0, select bank1
 10934  02B4  0841               	movf	sprintf@tmpval^(0+128),w
 10935  02B5  1283               	bcf	3,5	;RP0=0, select bank0
 10936  02B6  1303               	bcf	3,6	;RP1=0, select bank0
 10937  02B7  00AC               	movwf	___llmod@dividend
 10938  02B8  160A  158A  234F  120A  118A  	fcall	___llmod
 10939  02BD  1283               	bcf	3,5	;RP0=0, select bank0
 10940  02BE  1303               	bcf	3,6	;RP1=0, select bank0
 10941  02BF  082B               	movf	?___llmod+3,w
 10942  02C0  1683               	bsf	3,5	;RP0=1, select bank1
 10943  02C1  1303               	bcf	3,6	;RP1=0, select bank1
 10944  02C2  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 10945  02C3  1283               	bcf	3,5	;RP0=0, select bank0
 10946  02C4  1303               	bcf	3,6	;RP1=0, select bank0
 10947  02C5  082A               	movf	?___llmod+2,w
 10948  02C6  1683               	bsf	3,5	;RP0=1, select bank1
 10949  02C7  1303               	bcf	3,6	;RP1=0, select bank1
 10950  02C8  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 10951  02C9  1283               	bcf	3,5	;RP0=0, select bank0
 10952  02CA  1303               	bcf	3,6	;RP1=0, select bank0
 10953  02CB  0829               	movf	?___llmod+1,w
 10954  02CC  1683               	bsf	3,5	;RP0=1, select bank1
 10955  02CD  1303               	bcf	3,6	;RP1=0, select bank1
 10956  02CE  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 10957  02CF  1283               	bcf	3,5	;RP0=0, select bank0
 10958  02D0  1303               	bcf	3,6	;RP1=0, select bank0
 10959  02D1  0828               	movf	?___llmod,w
 10960  02D2  1683               	bsf	3,5	;RP0=1, select bank1
 10961  02D3  1303               	bcf	3,6	;RP1=0, select bank1
 10962  02D4  00C1               	movwf	sprintf@tmpval^(0+128)
 10963  02D5                     l4408:
 10964                           
 10965                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp++ = ('0' + tmp
      +                          val.vd)));
 10966  02D5  0841               	movf	sprintf@tmpval^(0+128),w
 10967  02D6  3E30               	addlw	48
 10968  02D7  00B3               	movwf	??_sprintf^(0+128)
 10969  02D8  084F               	movf	sprintf@sp^(0+128),w
 10970  02D9  0084               	movwf	4
 10971  02DA  0833               	movf	??_sprintf^(0+128),w
 10972  02DB  1383               	bcf	3,7	;select IRP bank0
 10973  02DC  0080               	movwf	0
 10974  02DD  3001               	movlw	1
 10975  02DE  00B3               	movwf	??_sprintf^(0+128)
 10976  02DF  0833               	movf	??_sprintf^(0+128),w
 10977  02E0  07CF               	addwf	sprintf@sp^(0+128),f
 10978  02E1                     l410:	
 10979                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };D:\Microchip\xc8\v2
      +                          .31\pic\sources\c90\common\doprnt.c: 1232:    }
 10980                           
 10981                           
 10982                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c--) {
 10983  02E1  3001               	movlw	1
 10984  02E2  02D2               	subwf	sprintf@c^(0+128),f
 10985  02E3  0A52               	incf	sprintf@c^(0+128),w
 10986  02E4  1D03               	btfss	3,2
 10987  02E5  2AE7               	goto	u7101
 10988  02E6  2AE8               	goto	u7100
 10989  02E7                     u7101:
 10990  02E7  2A3B               	goto	l4404
 10991  02E8                     u7100:
 10992  02E8  2AFC               	goto	l4416
 10993  02E9                     l4410:
 10994                           
 10995                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++ = ('0')));
 10996  02E9  3030               	movlw	48
 10997  02EA  1683               	bsf	3,5	;RP0=1, select bank1
 10998  02EB  1303               	bcf	3,6	;RP1=0, select bank1
 10999  02EC  00B3               	movwf	??_sprintf^(0+128)
 11000  02ED  084F               	movf	sprintf@sp^(0+128),w
 11001  02EE  0084               	movwf	4
 11002  02EF  0833               	movf	??_sprintf^(0+128),w
 11003  02F0  1383               	bcf	3,7	;select IRP bank0
 11004  02F1  0080               	movwf	0
 11005  02F2                     l4412:
 11006  02F2  3001               	movlw	1
 11007  02F3  00B3               	movwf	??_sprintf^(0+128)
 11008  02F4  0833               	movf	??_sprintf^(0+128),w
 11009  02F5  07CF               	addwf	sprintf@sp^(0+128),f
 11010  02F6                     l4414:
 11011                           
 11012                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 11013  02F6  30FF               	movlw	255
 11014  02F7  07C9               	addwf	sprintf@eexp^(0+128),f
 11015  02F8  1803               	skipnc
 11016  02F9  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
 11017  02FA  30FF               	movlw	255
 11018  02FB  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
 11019  02FC                     l4416:
 11020                           
 11021                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(eexp > 0) {
 11022  02FC  084A               	movf	(sprintf@eexp+1)^(0+128),w
 11023  02FD  3A80               	xorlw	128
 11024  02FE  00FF               	movwf	btemp+1
 11025  02FF  3080               	movlw	128
 11026  0300  027F               	subwf	btemp+1,w
 11027  0301  1D03               	skipz
 11028  0302  2B05               	goto	u7115
 11029  0303  3001               	movlw	1
 11030  0304  0249               	subwf	sprintf@eexp^(0+128),w
 11031  0305                     u7115:
 11032  0305  1803               	skipnc
 11033  0306  2B08               	goto	u7111
 11034  0307  2B09               	goto	u7110
 11035  0308                     u7111:
 11036  0308  2AE9               	goto	l4410
 11037  0309                     u7110:
 11038  0309                     l4418:
 11039                           
 11040                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec > (int)((sizeo
      +                          f dpowers/sizeof dpowers[0])-2))
 11041  0309  1683               	bsf	3,5	;RP0=1, select bank1
 11042  030A  1303               	bcf	3,6	;RP1=0, select bank1
 11043  030B  0851               	movf	(sprintf@prec+1)^(0+128),w
 11044  030C  3A80               	xorlw	128
 11045  030D  00FF               	movwf	btemp+1
 11046  030E  3080               	movlw	128
 11047  030F  027F               	subwf	btemp+1,w
 11048  0310  1D03               	skipz
 11049  0311  2B14               	goto	u7125
 11050  0312  3009               	movlw	9
 11051  0313  0250               	subwf	sprintf@prec^(0+128),w
 11052  0314                     u7125:
 11053  0314  1C03               	skipc
 11054  0315  2B17               	goto	u7121
 11055  0316  2B18               	goto	u7120
 11056  0317                     u7121:
 11057  0317  2B1F               	goto	l4422
 11058  0318                     u7120:
 11059  0318                     l4420:
 11060                           
 11061                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (sizeof dpowers/s
      +                          izeof dpowers[0])-2;
 11062  0318  3008               	movlw	8
 11063  0319  1683               	bsf	3,5	;RP0=1, select bank1
 11064  031A  1303               	bcf	3,6	;RP1=0, select bank1
 11065  031B  00B3               	movwf	??_sprintf^(0+128)
 11066  031C  0833               	movf	??_sprintf^(0+128),w
 11067  031D  00D2               	movwf	sprintf@c^(0+128)
 11068  031E  2B25               	goto	l417
 11069  031F                     l4422:
 11070                           
 11071                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (char)prec;
 11072  031F  1683               	bsf	3,5	;RP0=1, select bank1
 11073  0320  1303               	bcf	3,6	;RP1=0, select bank1
 11074  0321  0850               	movf	sprintf@prec^(0+128),w
 11075  0322  00B3               	movwf	??_sprintf^(0+128)
 11076  0323  0833               	movf	??_sprintf^(0+128),w
 11077  0324  00D2               	movwf	sprintf@c^(0+128)
 11078  0325                     l417:
 11079                           
 11080                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= (int)c;
 11081  0325  0852               	movf	sprintf@c^(0+128),w
 11082  0326  00B3               	movwf	??_sprintf^(0+128)
 11083  0327  01B4               	clrf	(??_sprintf^(0+128)+1)
 11084  0328  0833               	movf	??_sprintf^(0+128),w
 11085  0329  02D0               	subwf	sprintf@prec^(0+128),f
 11086  032A  0834               	movf	(??_sprintf+1)^(0+128),w
 11087  032B  1C03               	skipc
 11088  032C  03D1               	decf	(sprintf@prec+1)^(0+128),f
 11089  032D  02D1               	subwf	(sprintf@prec+1)^(0+128),f
 11090  032E                     l4424:
 11091                           
 11092                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 11093  032E  0852               	movf	sprintf@c^(0+128),w
 11094  032F  1903               	btfsc	3,2
 11095  0330  2B32               	goto	u7131
 11096  0331  2B33               	goto	u7130
 11097  0332                     u7131:
 11098  0332  2B3E               	goto	l4430
 11099  0333                     u7130:
 11100  0333                     l4426:
 11101                           
 11102                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++ = ('.')));
 11103  0333  302E               	movlw	46
 11104  0334  00B3               	movwf	??_sprintf^(0+128)
 11105  0335  084F               	movf	sprintf@sp^(0+128),w
 11106  0336  0084               	movwf	4
 11107  0337  0833               	movf	??_sprintf^(0+128),w
 11108  0338  1383               	bcf	3,7	;select IRP bank0
 11109  0339  0080               	movwf	0
 11110  033A                     l4428:
 11111  033A  3001               	movlw	1
 11112  033B  00B3               	movwf	??_sprintf^(0+128)
 11113  033C  0833               	movf	??_sprintf^(0+128),w
 11114  033D  07CF               	addwf	sprintf@sp^(0+128),f
 11115  033E                     l4430:
 11116                           
 11117                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(
      +                          fval * scale((signed char)c));
 11118  033E  0852               	movf	sprintf@c^(0+128),w
 11119  033F  120A  158A  249D  120A  118A  	fcall	_scale
 11120  0344  1283               	bcf	3,5	;RP0=0, select bank0
 11121  0345  1303               	bcf	3,6	;RP1=0, select bank0
 11122  0346  0847               	movf	?_scale+3,w
 11123  0347  1683               	bsf	3,5	;RP0=1, select bank1
 11124  0348  1303               	bcf	3,6	;RP1=0, select bank1
 11125  0349  00BB               	movwf	(_sprintf$1241+3)^(0+128)
 11126  034A  1283               	bcf	3,5	;RP0=0, select bank0
 11127  034B  1303               	bcf	3,6	;RP1=0, select bank0
 11128  034C  0846               	movf	?_scale+2,w
 11129  034D  1683               	bsf	3,5	;RP0=1, select bank1
 11130  034E  1303               	bcf	3,6	;RP1=0, select bank1
 11131  034F  00BA               	movwf	(_sprintf$1241+2)^(0+128)
 11132  0350  1283               	bcf	3,5	;RP0=0, select bank0
 11133  0351  1303               	bcf	3,6	;RP1=0, select bank0
 11134  0352  0845               	movf	?_scale+1,w
 11135  0353  1683               	bsf	3,5	;RP0=1, select bank1
 11136  0354  1303               	bcf	3,6	;RP1=0, select bank1
 11137  0355  00B9               	movwf	(_sprintf$1241+1)^(0+128)
 11138  0356  1283               	bcf	3,5	;RP0=0, select bank0
 11139  0357  1303               	bcf	3,6	;RP1=0, select bank0
 11140  0358  0844               	movf	?_scale,w
 11141  0359  1683               	bsf	3,5	;RP0=1, select bank1
 11142  035A  1303               	bcf	3,6	;RP1=0, select bank1
 11143  035B  00B8               	movwf	_sprintf$1241^(0+128)
 11144  035C                     l4432:
 11145                           
 11146                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(
      +                          fval * scale((signed char)c));
 11147  035C  083B               	movf	(_sprintf$1241+3)^(0+128),w
 11148  035D  1283               	bcf	3,5	;RP0=0, select bank0
 11149  035E  1303               	bcf	3,6	;RP1=0, select bank0
 11150  035F  00B1               	movwf	___flmul@a+3
 11151  0360  1683               	bsf	3,5	;RP0=1, select bank1
 11152  0361  1303               	bcf	3,6	;RP1=0, select bank1
 11153  0362  083A               	movf	(_sprintf$1241+2)^(0+128),w
 11154  0363  1283               	bcf	3,5	;RP0=0, select bank0
 11155  0364  1303               	bcf	3,6	;RP1=0, select bank0
 11156  0365  00B0               	movwf	___flmul@a+2
 11157  0366  1683               	bsf	3,5	;RP0=1, select bank1
 11158  0367  1303               	bcf	3,6	;RP1=0, select bank1
 11159  0368  0839               	movf	(_sprintf$1241+1)^(0+128),w
 11160  0369  1283               	bcf	3,5	;RP0=0, select bank0
 11161  036A  1303               	bcf	3,6	;RP1=0, select bank0
 11162  036B  00AF               	movwf	___flmul@a+1
 11163  036C  1683               	bsf	3,5	;RP0=1, select bank1
 11164  036D  1303               	bcf	3,6	;RP1=0, select bank1
 11165  036E  0838               	movf	_sprintf$1241^(0+128),w
 11166  036F  1283               	bcf	3,5	;RP0=0, select bank0
 11167  0370  1303               	bcf	3,6	;RP1=0, select bank0
 11168  0371  00AE               	movwf	___flmul@a
 11169  0372  1683               	bsf	3,5	;RP0=1, select bank1
 11170  0373  1303               	bcf	3,6	;RP1=0, select bank1
 11171  0374  084E               	movf	(sprintf@fval+3)^(0+128),w
 11172  0375  1283               	bcf	3,5	;RP0=0, select bank0
 11173  0376  1303               	bcf	3,6	;RP1=0, select bank0
 11174  0377  00AD               	movwf	___flmul@b+3
 11175  0378  1683               	bsf	3,5	;RP0=1, select bank1
 11176  0379  1303               	bcf	3,6	;RP1=0, select bank1
 11177  037A  084D               	movf	(sprintf@fval+2)^(0+128),w
 11178  037B  1283               	bcf	3,5	;RP0=0, select bank0
 11179  037C  1303               	bcf	3,6	;RP1=0, select bank0
 11180  037D  00AC               	movwf	___flmul@b+2
 11181  037E  1683               	bsf	3,5	;RP0=1, select bank1
 11182  037F  1303               	bcf	3,6	;RP1=0, select bank1
 11183  0380  084C               	movf	(sprintf@fval+1)^(0+128),w
 11184  0381  1283               	bcf	3,5	;RP0=0, select bank0
 11185  0382  1303               	bcf	3,6	;RP1=0, select bank0
 11186  0383  00AB               	movwf	___flmul@b+1
 11187  0384  1683               	bsf	3,5	;RP0=1, select bank1
 11188  0385  1303               	bcf	3,6	;RP1=0, select bank1
 11189  0386  084B               	movf	sprintf@fval^(0+128),w
 11190  0387  1283               	bcf	3,5	;RP0=0, select bank0
 11191  0388  1303               	bcf	3,6	;RP1=0, select bank0
 11192  0389  00AA               	movwf	___flmul@b
 11193  038A  120A  158A  213C  120A  118A  	fcall	___flmul
 11194  038F  1283               	bcf	3,5	;RP0=0, select bank0
 11195  0390  1303               	bcf	3,6	;RP1=0, select bank0
 11196  0391  082D               	movf	?___flmul+3,w
 11197  0392  00DA               	movwf	___fltol@f1+3
 11198  0393  082C               	movf	?___flmul+2,w
 11199  0394  00D9               	movwf	___fltol@f1+2
 11200  0395  082B               	movf	?___flmul+1,w
 11201  0396  00D8               	movwf	___fltol@f1+1
 11202  0397  082A               	movf	?___flmul,w
 11203  0398  00D7               	movwf	___fltol@f1
 11204  0399  160A  158A  240D  120A  118A  	fcall	___fltol
 11205  039E  1283               	bcf	3,5	;RP0=0, select bank0
 11206  039F  1303               	bcf	3,6	;RP1=0, select bank0
 11207  03A0  085A               	movf	?___fltol+3,w
 11208  03A1  1683               	bsf	3,5	;RP0=1, select bank1
 11209  03A2  1303               	bcf	3,6	;RP1=0, select bank1
 11210  03A3  00C8               	movwf	(sprintf@val+3)^(0+128)
 11211  03A4  1283               	bcf	3,5	;RP0=0, select bank0
 11212  03A5  1303               	bcf	3,6	;RP1=0, select bank0
 11213  03A6  0859               	movf	?___fltol+2,w
 11214  03A7  1683               	bsf	3,5	;RP0=1, select bank1
 11215  03A8  1303               	bcf	3,6	;RP1=0, select bank1
 11216  03A9  00C7               	movwf	(sprintf@val+2)^(0+128)
 11217  03AA  1283               	bcf	3,5	;RP0=0, select bank0
 11218  03AB  1303               	bcf	3,6	;RP1=0, select bank0
 11219  03AC  0858               	movf	?___fltol+1,w
 11220  03AD  1683               	bsf	3,5	;RP0=1, select bank1
 11221  03AE  1303               	bcf	3,6	;RP1=0, select bank1
 11222  03AF  00C6               	movwf	(sprintf@val+1)^(0+128)
 11223  03B0  1283               	bcf	3,5	;RP0=0, select bank0
 11224  03B1  1303               	bcf	3,6	;RP1=0, select bank0
 11225  03B2  0857               	movf	?___fltol,w
 11226  03B3  1683               	bsf	3,5	;RP0=1, select bank1
 11227  03B4  1303               	bcf	3,6	;RP1=0, select bank1
 11228  03B5  00C5               	movwf	sprintf@val^(0+128)
 11229                           
 11230                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
 11231  03B6  2CB8               	goto	l4442
 11232  03B7                     l4434:
 11233                           
 11234                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.vd = val/dpowe
      +                          rs[c];
 11235  03B7  0852               	movf	sprintf@c^(0+128),w
 11236  03B8  00B3               	movwf	??_sprintf^(0+128)
 11237  03B9  3001               	movlw	1
 11238  03BA                     u7145:
 11239  03BA  1003               	clrc
 11240  03BB  0DB3               	rlf	??_sprintf^(0+128),f
 11241  03BC  3EFF               	addlw	-1
 11242  03BD  1D03               	skipz
 11243  03BE  2BBA               	goto	u7145
 11244  03BF  1003               	clrc
 11245  03C0  0D33               	rlf	??_sprintf^(0+128),w
 11246  03C1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11247  03C2  0084               	movwf	4
 11248  03C3  120A  158A  200A  120A  118A  	fcall	stringdir
 11249  03C8  1283               	bcf	3,5	;RP0=0, select bank0
 11250  03C9  1303               	bcf	3,6	;RP1=0, select bank0
 11251  03CA  00A0               	movwf	___lldiv@divisor
 11252  03CB  120A  158A  200A  120A  118A  	fcall	stringdir
 11253  03D0  00A1               	movwf	___lldiv@divisor+1
 11254  03D1  120A  158A  200A  120A  118A  	fcall	stringdir
 11255  03D6  00A2               	movwf	___lldiv@divisor+2
 11256  03D7  120A  158A  200A  120A  118A  	fcall	stringdir
 11257  03DC  00A3               	movwf	___lldiv@divisor+3
 11258  03DD  1683               	bsf	3,5	;RP0=1, select bank1
 11259  03DE  1303               	bcf	3,6	;RP1=0, select bank1
 11260  03DF  0848               	movf	(sprintf@val+3)^(0+128),w
 11261  03E0  1283               	bcf	3,5	;RP0=0, select bank0
 11262  03E1  1303               	bcf	3,6	;RP1=0, select bank0
 11263  03E2  00A7               	movwf	___lldiv@dividend+3
 11264  03E3  1683               	bsf	3,5	;RP0=1, select bank1
 11265  03E4  1303               	bcf	3,6	;RP1=0, select bank1
 11266  03E5  0847               	movf	(sprintf@val+2)^(0+128),w
 11267  03E6  1283               	bcf	3,5	;RP0=0, select bank0
 11268  03E7  1303               	bcf	3,6	;RP1=0, select bank0
 11269  03E8  00A6               	movwf	___lldiv@dividend+2
 11270  03E9  1683               	bsf	3,5	;RP0=1, select bank1
 11271  03EA  1303               	bcf	3,6	;RP1=0, select bank1
 11272  03EB  0846               	movf	(sprintf@val+1)^(0+128),w
 11273  03EC  1283               	bcf	3,5	;RP0=0, select bank0
 11274  03ED  1303               	bcf	3,6	;RP1=0, select bank0
 11275  03EE  00A5               	movwf	___lldiv@dividend+1
 11276  03EF  1683               	bsf	3,5	;RP0=1, select bank1
 11277  03F0  1303               	bcf	3,6	;RP1=0, select bank1
 11278  03F1  0845               	movf	sprintf@val^(0+128),w
 11279  03F2  1283               	bcf	3,5	;RP0=0, select bank0
 11280  03F3  1303               	bcf	3,6	;RP1=0, select bank0
 11281  03F4  00A4               	movwf	___lldiv@dividend
 11282  03F5  160A  158A  23A5  120A  118A  	fcall	___lldiv
 11283  03FA  1283               	bcf	3,5	;RP0=0, select bank0
 11284  03FB  1303               	bcf	3,6	;RP1=0, select bank0
 11285  03FC  0823               	movf	?___lldiv+3,w
 11286  03FD  1683               	bsf	3,5	;RP0=1, select bank1
 11287  03FE  1303               	bcf	3,6	;RP1=0, select bank1
 11288  03FF  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 11289  0400  1283               	bcf	3,5	;RP0=0, select bank0
 11290  0401  1303               	bcf	3,6	;RP1=0, select bank0
 11291  0402  0822               	movf	?___lldiv+2,w
 11292  0403  1683               	bsf	3,5	;RP0=1, select bank1
 11293  0404  1303               	bcf	3,6	;RP1=0, select bank1
 11294  0405  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 11295  0406  1283               	bcf	3,5	;RP0=0, select bank0
 11296  0407  1303               	bcf	3,6	;RP1=0, select bank0
 11297  0408  0821               	movf	?___lldiv+1,w
 11298  0409  1683               	bsf	3,5	;RP0=1, select bank1
 11299  040A  1303               	bcf	3,6	;RP1=0, select bank1
 11300  040B  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 11301  040C  1283               	bcf	3,5	;RP0=0, select bank0
 11302  040D  1303               	bcf	3,6	;RP1=0, select bank0
 11303  040E  0820               	movf	?___lldiv,w
 11304  040F  1683               	bsf	3,5	;RP0=1, select bank1
 11305  0410  1303               	bcf	3,6	;RP1=0, select bank1
 11306  0411  00C1               	movwf	sprintf@tmpval^(0+128)
 11307  0412                     l4436:
 11308                           
 11309                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.vd %= 10;
 11310  0412  3000               	movlw	0
 11311  0413  1283               	bcf	3,5	;RP0=0, select bank0
 11312  0414  1303               	bcf	3,6	;RP1=0, select bank0
 11313  0415  00AB               	movwf	___llmod@divisor+3
 11314  0416  3000               	movlw	0
 11315  0417  00AA               	movwf	___llmod@divisor+2
 11316  0418  3000               	movlw	0
 11317  0419  00A9               	movwf	___llmod@divisor+1
 11318  041A  300A               	movlw	10
 11319  041B  00A8               	movwf	___llmod@divisor
 11320  041C  1683               	bsf	3,5	;RP0=1, select bank1
 11321  041D  1303               	bcf	3,6	;RP1=0, select bank1
 11322  041E  0844               	movf	(sprintf@tmpval+3)^(0+128),w
 11323  041F  1283               	bcf	3,5	;RP0=0, select bank0
 11324  0420  1303               	bcf	3,6	;RP1=0, select bank0
 11325  0421  00AF               	movwf	___llmod@dividend+3
 11326  0422  1683               	bsf	3,5	;RP0=1, select bank1
 11327  0423  1303               	bcf	3,6	;RP1=0, select bank1
 11328  0424  0843               	movf	(sprintf@tmpval+2)^(0+128),w
 11329  0425  1283               	bcf	3,5	;RP0=0, select bank0
 11330  0426  1303               	bcf	3,6	;RP1=0, select bank0
 11331  0427  00AE               	movwf	___llmod@dividend+2
 11332  0428  1683               	bsf	3,5	;RP0=1, select bank1
 11333  0429  1303               	bcf	3,6	;RP1=0, select bank1
 11334  042A  0842               	movf	(sprintf@tmpval+1)^(0+128),w
 11335  042B  1283               	bcf	3,5	;RP0=0, select bank0
 11336  042C  1303               	bcf	3,6	;RP1=0, select bank0
 11337  042D  00AD               	movwf	___llmod@dividend+1
 11338  042E  1683               	bsf	3,5	;RP0=1, select bank1
 11339  042F  1303               	bcf	3,6	;RP1=0, select bank1
 11340  0430  0841               	movf	sprintf@tmpval^(0+128),w
 11341  0431  1283               	bcf	3,5	;RP0=0, select bank0
 11342  0432  1303               	bcf	3,6	;RP1=0, select bank0
 11343  0433  00AC               	movwf	___llmod@dividend
 11344  0434  160A  158A  234F  120A  118A  	fcall	___llmod
 11345  0439  1283               	bcf	3,5	;RP0=0, select bank0
 11346  043A  1303               	bcf	3,6	;RP1=0, select bank0
 11347  043B  082B               	movf	?___llmod+3,w
 11348  043C  1683               	bsf	3,5	;RP0=1, select bank1
 11349  043D  1303               	bcf	3,6	;RP1=0, select bank1
 11350  043E  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 11351  043F  1283               	bcf	3,5	;RP0=0, select bank0
 11352  0440  1303               	bcf	3,6	;RP1=0, select bank0
 11353  0441  082A               	movf	?___llmod+2,w
 11354  0442  1683               	bsf	3,5	;RP0=1, select bank1
 11355  0443  1303               	bcf	3,6	;RP1=0, select bank1
 11356  0444  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 11357  0445  1283               	bcf	3,5	;RP0=0, select bank0
 11358  0446  1303               	bcf	3,6	;RP1=0, select bank0
 11359  0447  0829               	movf	?___llmod+1,w
 11360  0448  1683               	bsf	3,5	;RP0=1, select bank1
 11361  0449  1303               	bcf	3,6	;RP1=0, select bank1
 11362  044A  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 11363  044B  1283               	bcf	3,5	;RP0=0, select bank0
 11364  044C  1303               	bcf	3,6	;RP1=0, select bank0
 11365  044D  0828               	movf	?___llmod,w
 11366  044E  1683               	bsf	3,5	;RP0=1, select bank1
 11367  044F  1303               	bcf	3,6	;RP1=0, select bank1
 11368  0450  00C1               	movwf	sprintf@tmpval^(0+128)
 11369  0451                     l4438:
 11370                           
 11371                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++ = ('0' + tmpv
      +                          al.vd)));
 11372  0451  0841               	movf	sprintf@tmpval^(0+128),w
 11373  0452  3E30               	addlw	48
 11374  0453  00B3               	movwf	??_sprintf^(0+128)
 11375  0454  084F               	movf	sprintf@sp^(0+128),w
 11376  0455  0084               	movwf	4
 11377  0456  0833               	movf	??_sprintf^(0+128),w
 11378  0457  1383               	bcf	3,7	;select IRP bank0
 11379  0458  0080               	movwf	0
 11380  0459  3001               	movlw	1
 11381  045A  00B3               	movwf	??_sprintf^(0+128)
 11382  045B  0833               	movf	??_sprintf^(0+128),w
 11383  045C  07CF               	addwf	sprintf@sp^(0+128),f
 11384  045D                     l4440:
 11385                           
 11386                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= dpowers[c];
 11387  045D  0852               	movf	sprintf@c^(0+128),w
 11388  045E  00B3               	movwf	??_sprintf^(0+128)
 11389  045F  3001               	movlw	1
 11390  0460                     u7155:
 11391  0460  1003               	clrc
 11392  0461  0DB3               	rlf	??_sprintf^(0+128),f
 11393  0462  3EFF               	addlw	-1
 11394  0463  1D03               	skipz
 11395  0464  2C60               	goto	u7155
 11396  0465  1003               	clrc
 11397  0466  0D33               	rlf	??_sprintf^(0+128),w
 11398  0467  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11399  0468  0084               	movwf	4
 11400  0469  120A  158A  200A  120A  118A  	fcall	stringdir
 11401  046E  1283               	bcf	3,5	;RP0=0, select bank0
 11402  046F  1303               	bcf	3,6	;RP1=0, select bank0
 11403  0470  00A8               	movwf	___llmod@divisor
 11404  0471  120A  158A  200A  120A  118A  	fcall	stringdir
 11405  0476  00A9               	movwf	___llmod@divisor+1
 11406  0477  120A  158A  200A  120A  118A  	fcall	stringdir
 11407  047C  00AA               	movwf	___llmod@divisor+2
 11408  047D  120A  158A  200A  120A  118A  	fcall	stringdir
 11409  0482  00AB               	movwf	___llmod@divisor+3
 11410  0483  1683               	bsf	3,5	;RP0=1, select bank1
 11411  0484  1303               	bcf	3,6	;RP1=0, select bank1
 11412  0485  0848               	movf	(sprintf@val+3)^(0+128),w
 11413  0486  1283               	bcf	3,5	;RP0=0, select bank0
 11414  0487  1303               	bcf	3,6	;RP1=0, select bank0
 11415  0488  00AF               	movwf	___llmod@dividend+3
 11416  0489  1683               	bsf	3,5	;RP0=1, select bank1
 11417  048A  1303               	bcf	3,6	;RP1=0, select bank1
 11418  048B  0847               	movf	(sprintf@val+2)^(0+128),w
 11419  048C  1283               	bcf	3,5	;RP0=0, select bank0
 11420  048D  1303               	bcf	3,6	;RP1=0, select bank0
 11421  048E  00AE               	movwf	___llmod@dividend+2
 11422  048F  1683               	bsf	3,5	;RP0=1, select bank1
 11423  0490  1303               	bcf	3,6	;RP1=0, select bank1
 11424  0491  0846               	movf	(sprintf@val+1)^(0+128),w
 11425  0492  1283               	bcf	3,5	;RP0=0, select bank0
 11426  0493  1303               	bcf	3,6	;RP1=0, select bank0
 11427  0494  00AD               	movwf	___llmod@dividend+1
 11428  0495  1683               	bsf	3,5	;RP0=1, select bank1
 11429  0496  1303               	bcf	3,6	;RP1=0, select bank1
 11430  0497  0845               	movf	sprintf@val^(0+128),w
 11431  0498  1283               	bcf	3,5	;RP0=0, select bank0
 11432  0499  1303               	bcf	3,6	;RP1=0, select bank0
 11433  049A  00AC               	movwf	___llmod@dividend
 11434  049B  160A  158A  234F  120A  118A  	fcall	___llmod
 11435  04A0  1283               	bcf	3,5	;RP0=0, select bank0
 11436  04A1  1303               	bcf	3,6	;RP1=0, select bank0
 11437  04A2  082B               	movf	?___llmod+3,w
 11438  04A3  1683               	bsf	3,5	;RP0=1, select bank1
 11439  04A4  1303               	bcf	3,6	;RP1=0, select bank1
 11440  04A5  00C8               	movwf	(sprintf@val+3)^(0+128)
 11441  04A6  1283               	bcf	3,5	;RP0=0, select bank0
 11442  04A7  1303               	bcf	3,6	;RP1=0, select bank0
 11443  04A8  082A               	movf	?___llmod+2,w
 11444  04A9  1683               	bsf	3,5	;RP0=1, select bank1
 11445  04AA  1303               	bcf	3,6	;RP1=0, select bank1
 11446  04AB  00C7               	movwf	(sprintf@val+2)^(0+128)
 11447  04AC  1283               	bcf	3,5	;RP0=0, select bank0
 11448  04AD  1303               	bcf	3,6	;RP1=0, select bank0
 11449  04AE  0829               	movf	?___llmod+1,w
 11450  04AF  1683               	bsf	3,5	;RP0=1, select bank1
 11451  04B0  1303               	bcf	3,6	;RP1=0, select bank1
 11452  04B1  00C6               	movwf	(sprintf@val+1)^(0+128)
 11453  04B2  1283               	bcf	3,5	;RP0=0, select bank0
 11454  04B3  1303               	bcf	3,6	;RP1=0, select bank0
 11455  04B4  0828               	movf	?___llmod,w
 11456  04B5  1683               	bsf	3,5	;RP0=1, select bank1
 11457  04B6  1303               	bcf	3,6	;RP1=0, select bank1
 11458  04B7  00C5               	movwf	sprintf@val^(0+128)
 11459  04B8                     l4442:
 11460                           
 11461                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
 11462  04B8  3001               	movlw	1
 11463  04B9  02D2               	subwf	sprintf@c^(0+128),f
 11464  04BA  0A52               	incf	sprintf@c^(0+128),w
 11465  04BB  1D03               	btfss	3,2
 11466  04BC  2CBE               	goto	u7161
 11467  04BD  2CBF               	goto	u7160
 11468  04BE                     u7161:
 11469  04BE  2BB7               	goto	l4434
 11470  04BF                     u7160:
 11471  04BF  2CD1               	goto	l4450
 11472  04C0                     l4444:
 11473                           
 11474                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++ = ('0')));
 11475  04C0  3030               	movlw	48
 11476  04C1  00B3               	movwf	??_sprintf^(0+128)
 11477  04C2  084F               	movf	sprintf@sp^(0+128),w
 11478  04C3  0084               	movwf	4
 11479  04C4  0833               	movf	??_sprintf^(0+128),w
 11480  04C5  1383               	bcf	3,7	;select IRP bank0
 11481  04C6  0080               	movwf	0
 11482  04C7                     l4446:
 11483  04C7  3001               	movlw	1
 11484  04C8  00B3               	movwf	??_sprintf^(0+128)
 11485  04C9  0833               	movf	??_sprintf^(0+128),w
 11486  04CA  07CF               	addwf	sprintf@sp^(0+128),f
 11487  04CB                     l4448:
 11488                           
 11489                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11490  04CB  30FF               	movlw	255
 11491  04CC  07D0               	addwf	sprintf@prec^(0+128),f
 11492  04CD  1803               	skipnc
 11493  04CE  0AD1               	incf	(sprintf@prec+1)^(0+128),f
 11494  04CF  30FF               	movlw	255
 11495  04D0  07D1               	addwf	(sprintf@prec+1)^(0+128),f
 11496  04D1                     l4450:
 11497                           
 11498                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(prec) {
 11499  04D1  0850               	movf	sprintf@prec^(0+128),w
 11500  04D2  0451               	iorwf	(sprintf@prec+1)^(0+128),w
 11501  04D3  1D03               	btfss	3,2
 11502  04D4  2CD6               	goto	u7171
 11503  04D5  2CD7               	goto	u7170
 11504  04D6                     u7171:
 11505  04D6  2CC0               	goto	l4444
 11506  04D7                     u7170:
 11507  04D7  2E87               	goto	l4530
 11508  04D8                     l4452:
 11509                           
 11510                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned long)(*(int *)__va_arg((*(i
      +                          nt **)ap), (int)0));
 11511  04D8  083C               	movf	sprintf@ap^(0+128),w
 11512  04D9  0084               	movwf	4
 11513  04DA  1383               	bcf	3,7	;select IRP bank0
 11514  04DB  0800               	movf	0,w
 11515  04DC  00B3               	movwf	??_sprintf^(0+128)
 11516  04DD  0A84               	incf	4,f
 11517  04DE  0800               	movf	0,w
 11518  04DF  00B4               	movwf	(??_sprintf^(0+128)+1)
 11519  04E0  0833               	movf	??_sprintf^(0+128),w
 11520  04E1  00C5               	movwf	sprintf@val^(0+128)
 11521  04E2  0834               	movf	(??_sprintf+1)^(0+128),w
 11522  04E3  00C6               	movwf	(sprintf@val+1)^(0+128)
 11523  04E4  3000               	movlw	0
 11524  04E5  1BC6               	btfsc	(sprintf@val+1)^(0+128),7
 11525  04E6  30FF               	movlw	255
 11526  04E7  00C7               	movwf	(sprintf@val+2)^(0+128)
 11527  04E8  00C8               	movwf	(sprintf@val+3)^(0+128)
 11528  04E9                     l4454:
 11529  04E9  3002               	movlw	2
 11530  04EA  00B3               	movwf	??_sprintf^(0+128)
 11531  04EB  0833               	movf	??_sprintf^(0+128),w
 11532  04EC  07BC               	addwf	sprintf@ap^(0+128),f
 11533  04ED                     l4456:
 11534                           
 11535                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long)val < 0) {
 11536  04ED  1FC8               	btfss	(sprintf@val+3)^(0+128),7
 11537  04EE  2CF0               	goto	u7181
 11538  04EF  2CF1               	goto	u7180
 11539  04F0                     u7181:
 11540  04F0  2D00               	goto	l4462
 11541  04F1                     u7180:
 11542  04F1                     l4458:
 11543                           
 11544                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
 11545  04F1  3003               	movlw	3
 11546  04F2  04BD               	iorwf	sprintf@flag^(0+128),f
 11547  04F3  3000               	movlw	0
 11548  04F4  04BE               	iorwf	(sprintf@flag+1)^(0+128),f
 11549  04F5                     l4460:
 11550                           
 11551                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
 11552  04F5  09C5               	comf	sprintf@val^(0+128),f
 11553  04F6  09C6               	comf	(sprintf@val+1)^(0+128),f
 11554  04F7  09C7               	comf	(sprintf@val+2)^(0+128),f
 11555  04F8  09C8               	comf	(sprintf@val+3)^(0+128),f
 11556  04F9  0AC5               	incf	sprintf@val^(0+128),f
 11557  04FA  1903               	skipnz
 11558  04FB  0AC6               	incf	(sprintf@val+1)^(0+128),f
 11559  04FC  1903               	skipnz
 11560  04FD  0AC7               	incf	(sprintf@val+2)^(0+128),f
 11561  04FE  1903               	skipnz
 11562  04FF  0AC8               	incf	(sprintf@val+3)^(0+128),f
 11563  0500                     l4462:
 11564                           
 11565                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && val == 0)
 11566  0500  0850               	movf	sprintf@prec^(0+128),w
 11567  0501  0451               	iorwf	(sprintf@prec+1)^(0+128),w
 11568  0502  1D03               	btfss	3,2
 11569  0503  2D05               	goto	u7191
 11570  0504  2D06               	goto	u7190
 11571  0505                     u7191:
 11572  0505  2D14               	goto	l4468
 11573  0506                     u7190:
 11574  0506                     l4464:
 11575  0506  0848               	movf	(sprintf@val+3)^(0+128),w
 11576  0507  0447               	iorwf	(sprintf@val+2)^(0+128),w
 11577  0508  0446               	iorwf	(sprintf@val+1)^(0+128),w
 11578  0509  0445               	iorwf	sprintf@val^(0+128),w
 11579  050A  1D03               	skipz
 11580  050B  2D0D               	goto	u7201
 11581  050C  2D0E               	goto	u7200
 11582  050D                     u7201:
 11583  050D  2D14               	goto	l4468
 11584  050E                     u7200:
 11585  050E                     l4466:
 11586                           
 11587                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11588  050E  3001               	movlw	1
 11589  050F  07D0               	addwf	sprintf@prec^(0+128),f
 11590  0510  1803               	skipnc
 11591  0511  0AD1               	incf	(sprintf@prec+1)^(0+128),f
 11592  0512  3000               	movlw	0
 11593  0513  07D1               	addwf	(sprintf@prec+1)^(0+128),f
 11594  0514                     l4468:
 11595                           
 11596                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeo
      +                          f dpowers/sizeof dpowers[0] ; c++)
 11597  0514  01D2               	clrf	sprintf@c^(0+128)
 11598  0515  0AD2               	incf	sprintf@c^(0+128),f
 11599  0516                     l4474:
 11600                           
 11601                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowers[c])
 11602  0516  0852               	movf	sprintf@c^(0+128),w
 11603  0517  00B3               	movwf	??_sprintf^(0+128)
 11604  0518  3001               	movlw	1
 11605  0519                     u7215:
 11606  0519  1003               	clrc
 11607  051A  0DB3               	rlf	??_sprintf^(0+128),f
 11608  051B  3EFF               	addlw	-1
 11609  051C  1D03               	skipz
 11610  051D  2D19               	goto	u7215
 11611  051E  1003               	clrc
 11612  051F  0D33               	rlf	??_sprintf^(0+128),w
 11613  0520  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11614  0521  0084               	movwf	4
 11615  0522  120A  158A  200A  120A  118A  	fcall	stringdir
 11616  0527  00B4               	movwf	(??_sprintf+1)^(0+128)
 11617  0528  120A  158A  200A  120A  118A  	fcall	stringdir
 11618  052D  00B5               	movwf	((??_sprintf+1)^(0+128)+1)
 11619  052E  120A  158A  200A  120A  118A  	fcall	stringdir
 11620  0533  00B6               	movwf	((??_sprintf+1)^(0+128)+2)
 11621  0534  120A  158A  200A  120A  118A  	fcall	stringdir
 11622  0539  00B7               	movwf	((??_sprintf+1)^(0+128)+3)
 11623  053A  0837               	movf	(??_sprintf+4)^(0+128),w
 11624  053B  0248               	subwf	(sprintf@val+3)^(0+128),w
 11625  053C  1D03               	skipz
 11626  053D  2D48               	goto	u7225
 11627  053E  0836               	movf	(??_sprintf+3)^(0+128),w
 11628  053F  0247               	subwf	(sprintf@val+2)^(0+128),w
 11629  0540  1D03               	skipz
 11630  0541  2D48               	goto	u7225
 11631  0542  0835               	movf	(??_sprintf+2)^(0+128),w
 11632  0543  0246               	subwf	(sprintf@val+1)^(0+128),w
 11633  0544  1D03               	skipz
 11634  0545  2D48               	goto	u7225
 11635  0546  0834               	movf	(??_sprintf+1)^(0+128),w
 11636  0547  0245               	subwf	sprintf@val^(0+128),w
 11637  0548                     u7225:
 11638  0548  1803               	skipnc
 11639  0549  2D4B               	goto	u7221
 11640  054A  2D4C               	goto	u7220
 11641  054B                     u7221:
 11642  054B  2D4D               	goto	l4478
 11643  054C                     u7220:
 11644  054C  2D57               	goto	l4480
 11645  054D                     l4478:
 11646  054D  3001               	movlw	1
 11647  054E  00B3               	movwf	??_sprintf^(0+128)
 11648  054F  0833               	movf	??_sprintf^(0+128),w
 11649  0550  07D2               	addwf	sprintf@c^(0+128),f
 11650  0551  300A               	movlw	10
 11651  0552  0652               	xorwf	sprintf@c^(0+128),w
 11652  0553  1D03               	btfss	3,2
 11653  0554  2D56               	goto	u7231
 11654  0555  2D57               	goto	u7230
 11655  0556                     u7231:
 11656  0556  2D16               	goto	l4474
 11657  0557                     u7230:
 11658  0557                     l4480:
 11659                           
 11660                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < prec)
 11661  0557  0851               	movf	(sprintf@prec+1)^(0+128),w
 11662  0558  3A80               	xorlw	128
 11663  0559  3C80               	sublw	128
 11664  055A  1D03               	skipz
 11665  055B  2D5E               	goto	u7245
 11666  055C  0850               	movf	sprintf@prec^(0+128),w
 11667  055D  0252               	subwf	sprintf@c^(0+128),w
 11668  055E                     u7245:
 11669  055E  1803               	skipnc
 11670  055F  2D61               	goto	u7241
 11671  0560  2D62               	goto	u7240
 11672  0561                     u7241:
 11673  0561  2D69               	goto	l4484
 11674  0562                     u7240:
 11675  0562                     l4482:
 11676                           
 11677                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (char)prec;
 11678  0562  1683               	bsf	3,5	;RP0=1, select bank1
 11679  0563  1303               	bcf	3,6	;RP1=0, select bank1
 11680  0564  0850               	movf	sprintf@prec^(0+128),w
 11681  0565  00B3               	movwf	??_sprintf^(0+128)
 11682  0566  0833               	movf	??_sprintf^(0+128),w
 11683  0567  00D2               	movwf	sprintf@c^(0+128)
 11684  0568  2D81               	goto	l4488
 11685  0569                     l4484:
 11686  0569  1683               	bsf	3,5	;RP0=1, select bank1
 11687  056A  1303               	bcf	3,6	;RP1=0, select bank1
 11688  056B  0851               	movf	(sprintf@prec+1)^(0+128),w
 11689  056C  3A80               	xorlw	128
 11690  056D  00B3               	movwf	??_sprintf^(0+128)
 11691  056E  3080               	movlw	128
 11692  056F  0233               	subwf	??_sprintf^(0+128),w
 11693  0570  1D03               	skipz
 11694  0571  2D74               	goto	u7255
 11695  0572  0852               	movf	sprintf@c^(0+128),w
 11696  0573  0250               	subwf	sprintf@prec^(0+128),w
 11697  0574                     u7255:
 11698  0574  1803               	skipnc
 11699  0575  2D77               	goto	u7251
 11700  0576  2D78               	goto	u7250
 11701  0577                     u7251:
 11702  0577  2D81               	goto	l4488
 11703  0578                     u7250:
 11704  0578                     l4486:
 11705                           
 11706                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c;
 11707  0578  1683               	bsf	3,5	;RP0=1, select bank1
 11708  0579  1303               	bcf	3,6	;RP1=0, select bank1
 11709  057A  0852               	movf	sprintf@c^(0+128),w
 11710  057B  00B3               	movwf	??_sprintf^(0+128)
 11711  057C  01B4               	clrf	(??_sprintf^(0+128)+1)
 11712  057D  0833               	movf	??_sprintf^(0+128),w
 11713  057E  00D0               	movwf	sprintf@prec^(0+128)
 11714  057F  0834               	movf	(??_sprintf+1)^(0+128),w
 11715  0580  00D1               	movwf	(sprintf@prec+1)^(0+128)
 11716  0581                     l4488:
 11717                           
 11718                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width && flag & 0x03
      +                          )
 11719  0581  1683               	bsf	3,5	;RP0=1, select bank1
 11720  0582  1303               	bcf	3,6	;RP1=0, select bank1
 11721  0583  083F               	movf	sprintf@width^(0+128),w
 11722  0584  0440               	iorwf	(sprintf@width+1)^(0+128),w
 11723  0585  1903               	btfsc	3,2
 11724  0586  2D88               	goto	u7261
 11725  0587  2D89               	goto	u7260
 11726  0588                     u7261:
 11727  0588  2D9B               	goto	l4494
 11728  0589                     u7260:
 11729  0589                     l4490:
 11730  0589  3003               	movlw	3
 11731  058A  053D               	andwf	sprintf@flag^(0+128),w
 11732  058B  00B3               	movwf	??_sprintf^(0+128)
 11733  058C  3000               	movlw	0
 11734  058D  053E               	andwf	(sprintf@flag+1)^(0+128),w
 11735  058E  00B4               	movwf	(??_sprintf+1)^(0+128)
 11736  058F  0833               	movf	??_sprintf^(0+128),w
 11737  0590  0434               	iorwf	(??_sprintf^(0+128)+1),w
 11738  0591  1903               	btfsc	3,2
 11739  0592  2D94               	goto	u7271
 11740  0593  2D95               	goto	u7270
 11741  0594                     u7271:
 11742  0594  2D9B               	goto	l4494
 11743  0595                     u7270:
 11744  0595                     l4492:
 11745                           
 11746                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11747  0595  30FF               	movlw	255
 11748  0596  07BF               	addwf	sprintf@width^(0+128),f
 11749  0597  1803               	skipnc
 11750  0598  0AC0               	incf	(sprintf@width+1)^(0+128),f
 11751  0599  30FF               	movlw	255
 11752  059A  07C0               	addwf	(sprintf@width+1)^(0+128),f
 11753  059B                     l4494:
 11754                           
 11755                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag & 0x4000) {
 11756  059B  1F3E               	btfss	(sprintf@flag+1)^(0+128),6
 11757  059C  2D9E               	goto	u7281
 11758  059D  2D9F               	goto	u7280
 11759  059E                     u7281:
 11760  059E  2DBA               	goto	l4502
 11761  059F                     u7280:
 11762  059F                     l4496:
 11763                           
 11764                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width > prec)
 11765  059F  0851               	movf	(sprintf@prec+1)^(0+128),w
 11766  05A0  3A80               	xorlw	128
 11767  05A1  00B3               	movwf	??_sprintf^(0+128)
 11768  05A2  0840               	movf	(sprintf@width+1)^(0+128),w
 11769  05A3  3A80               	xorlw	128
 11770  05A4  0233               	subwf	??_sprintf^(0+128),w
 11771  05A5  1D03               	skipz
 11772  05A6  2DA9               	goto	u7295
 11773  05A7  083F               	movf	sprintf@width^(0+128),w
 11774  05A8  0250               	subwf	sprintf@prec^(0+128),w
 11775  05A9                     u7295:
 11776  05A9  1803               	skipnc
 11777  05AA  2DAC               	goto	u7291
 11778  05AB  2DAD               	goto	u7290
 11779  05AC                     u7291:
 11780  05AC  2DB6               	goto	l4500
 11781  05AD                     u7290:
 11782  05AD                     l4498:
 11783                           
 11784                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -= prec;
 11785  05AD  1683               	bsf	3,5	;RP0=1, select bank1
 11786  05AE  1303               	bcf	3,6	;RP1=0, select bank1
 11787  05AF  0850               	movf	sprintf@prec^(0+128),w
 11788  05B0  02BF               	subwf	sprintf@width^(0+128),f
 11789  05B1  0851               	movf	(sprintf@prec+1)^(0+128),w
 11790  05B2  1C03               	skipc
 11791  05B3  03C0               	decf	(sprintf@width+1)^(0+128),f
 11792  05B4  02C0               	subwf	(sprintf@width+1)^(0+128),f
 11793  05B5  2DBA               	goto	l4502
 11794  05B6                     l4500:
 11795                           
 11796                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width = 0;
 11797  05B6  1683               	bsf	3,5	;RP0=1, select bank1
 11798  05B7  1303               	bcf	3,6	;RP1=0, select bank1
 11799  05B8  01BF               	clrf	sprintf@width^(0+128)
 11800  05B9  01C0               	clrf	(sprintf@width+1)^(0+128)
 11801  05BA                     l4502:
 11802                           
 11803                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width > c)
 11804  05BA  0840               	movf	(sprintf@width+1)^(0+128),w
 11805  05BB  3A80               	xorlw	128
 11806  05BC  3C80               	sublw	128
 11807  05BD  1D03               	skipz
 11808  05BE  2DC1               	goto	u7305
 11809  05BF  083F               	movf	sprintf@width^(0+128),w
 11810  05C0  0252               	subwf	sprintf@c^(0+128),w
 11811  05C1                     u7305:
 11812  05C1  1803               	skipnc
 11813  05C2  2DC4               	goto	u7301
 11814  05C3  2DC5               	goto	u7300
 11815  05C4                     u7301:
 11816  05C4  2DD1               	goto	l4506
 11817  05C5                     u7300:
 11818  05C5                     l4504:
 11819                           
 11820                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -= c;
 11821  05C5  1683               	bsf	3,5	;RP0=1, select bank1
 11822  05C6  1303               	bcf	3,6	;RP1=0, select bank1
 11823  05C7  0852               	movf	sprintf@c^(0+128),w
 11824  05C8  00B3               	movwf	??_sprintf^(0+128)
 11825  05C9  01B4               	clrf	(??_sprintf^(0+128)+1)
 11826  05CA  0833               	movf	??_sprintf^(0+128),w
 11827  05CB  02BF               	subwf	sprintf@width^(0+128),f
 11828  05CC  0834               	movf	(??_sprintf+1)^(0+128),w
 11829  05CD  1C03               	skipc
 11830  05CE  03C0               	decf	(sprintf@width+1)^(0+128),f
 11831  05CF  02C0               	subwf	(sprintf@width+1)^(0+128),f
 11832  05D0  2DD5               	goto	l4508
 11833  05D1                     l4506:
 11834                           
 11835                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 0;
 11836  05D1  1683               	bsf	3,5	;RP0=1, select bank1
 11837  05D2  1303               	bcf	3,6	;RP1=0, select bank1
 11838  05D3  01BF               	clrf	sprintf@width^(0+128)
 11839  05D4  01C0               	clrf	(sprintf@width+1)^(0+128)
 11840  05D5                     l4508:
 11841                           
 11842                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11843  05D5  083F               	movf	sprintf@width^(0+128),w
 11844  05D6  0440               	iorwf	(sprintf@width+1)^(0+128),w
 11845  05D7  1903               	btfsc	3,2
 11846  05D8  2DDA               	goto	u7311
 11847  05D9  2DDB               	goto	u7310
 11848  05DA                     u7311:
 11849  05DA  2DF2               	goto	l4516
 11850  05DB                     u7310:
 11851  05DB                     l4510:
 11852                           
 11853                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp++ = (' ')));
 11854  05DB  3020               	movlw	32
 11855  05DC  00B3               	movwf	??_sprintf^(0+128)
 11856  05DD  084F               	movf	sprintf@sp^(0+128),w
 11857  05DE  0084               	movwf	4
 11858  05DF  0833               	movf	??_sprintf^(0+128),w
 11859  05E0  1383               	bcf	3,7	;select IRP bank0
 11860  05E1  0080               	movwf	0
 11861  05E2                     l4512:
 11862  05E2  3001               	movlw	1
 11863  05E3  00B3               	movwf	??_sprintf^(0+128)
 11864  05E4  0833               	movf	??_sprintf^(0+128),w
 11865  05E5  07CF               	addwf	sprintf@sp^(0+128),f
 11866  05E6                     l4514:
 11867  05E6  30FF               	movlw	255
 11868  05E7  07BF               	addwf	sprintf@width^(0+128),f
 11869  05E8  1803               	skipnc
 11870  05E9  0AC0               	incf	(sprintf@width+1)^(0+128),f
 11871  05EA  30FF               	movlw	255
 11872  05EB  07C0               	addwf	(sprintf@width+1)^(0+128),f
 11873  05EC  083F               	movf	sprintf@width^(0+128),w
 11874  05ED  0440               	iorwf	(sprintf@width+1)^(0+128),w
 11875  05EE  1D03               	btfss	3,2
 11876  05EF  2DF1               	goto	u7321
 11877  05F0  2DF2               	goto	u7320
 11878  05F1                     u7321:
 11879  05F1  2DDB               	goto	l4510
 11880  05F2                     u7320:
 11881  05F2                     l4516:
 11882                           
 11883                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
 11884  05F2  3003               	movlw	3
 11885  05F3  053D               	andwf	sprintf@flag^(0+128),w
 11886  05F4  00B3               	movwf	??_sprintf^(0+128)
 11887  05F5  3000               	movlw	0
 11888  05F6  053E               	andwf	(sprintf@flag+1)^(0+128),w
 11889  05F7  00B4               	movwf	(??_sprintf+1)^(0+128)
 11890  05F8  0833               	movf	??_sprintf^(0+128),w
 11891  05F9  0434               	iorwf	(??_sprintf^(0+128)+1),w
 11892  05FA  1903               	btfsc	3,2
 11893  05FB  2DFD               	goto	u7331
 11894  05FC  2DFE               	goto	u7330
 11895  05FD                     u7331:
 11896  05FD  2E79               	goto	l4528
 11897  05FE                     u7330:
 11898  05FE                     l4518:
 11899                           
 11900                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
 11901  05FE  302D               	movlw	45
 11902  05FF  00B3               	movwf	??_sprintf^(0+128)
 11903  0600  084F               	movf	sprintf@sp^(0+128),w
 11904  0601  0084               	movwf	4
 11905  0602  0833               	movf	??_sprintf^(0+128),w
 11906  0603  1383               	bcf	3,7	;select IRP bank0
 11907  0604  0080               	movwf	0
 11908  0605                     l4520:
 11909  0605  3001               	movlw	1
 11910  0606  00B3               	movwf	??_sprintf^(0+128)
 11911  0607  0833               	movf	??_sprintf^(0+128),w
 11912  0608  07CF               	addwf	sprintf@sp^(0+128),f
 11913  0609  2E79               	goto	l4528
 11914  060A                     l4522:
 11915                           
 11916                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpowers[(unsigned int)prec]) % 
      +                          10 + '0';
 11917  060A  3000               	movlw	0
 11918  060B  1283               	bcf	3,5	;RP0=0, select bank0
 11919  060C  1303               	bcf	3,6	;RP1=0, select bank0
 11920  060D  00AB               	movwf	___llmod@divisor+3
 11921  060E  3000               	movlw	0
 11922  060F  00AA               	movwf	___llmod@divisor+2
 11923  0610  3000               	movlw	0
 11924  0611  00A9               	movwf	___llmod@divisor+1
 11925  0612  300A               	movlw	10
 11926  0613  00A8               	movwf	___llmod@divisor
 11927  0614  1683               	bsf	3,5	;RP0=1, select bank1
 11928  0615  1303               	bcf	3,6	;RP1=0, select bank1
 11929  0616  0850               	movf	sprintf@prec^(0+128),w
 11930  0617  00B3               	movwf	??_sprintf^(0+128)
 11931  0618  3001               	movlw	1
 11932  0619                     u7345:
 11933  0619  1003               	clrc
 11934  061A  0DB3               	rlf	??_sprintf^(0+128),f
 11935  061B  3EFF               	addlw	-1
 11936  061C  1D03               	skipz
 11937  061D  2E19               	goto	u7345
 11938  061E  1003               	clrc
 11939  061F  0D33               	rlf	??_sprintf^(0+128),w
 11940  0620  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11941  0621  0084               	movwf	4
 11942  0622  120A  158A  200A  120A  118A  	fcall	stringdir
 11943  0627  1283               	bcf	3,5	;RP0=0, select bank0
 11944  0628  1303               	bcf	3,6	;RP1=0, select bank0
 11945  0629  00A0               	movwf	___lldiv@divisor
 11946  062A  120A  158A  200A  120A  118A  	fcall	stringdir
 11947  062F  00A1               	movwf	___lldiv@divisor+1
 11948  0630  120A  158A  200A  120A  118A  	fcall	stringdir
 11949  0635  00A2               	movwf	___lldiv@divisor+2
 11950  0636  120A  158A  200A  120A  118A  	fcall	stringdir
 11951  063B  00A3               	movwf	___lldiv@divisor+3
 11952  063C  1683               	bsf	3,5	;RP0=1, select bank1
 11953  063D  1303               	bcf	3,6	;RP1=0, select bank1
 11954  063E  0848               	movf	(sprintf@val+3)^(0+128),w
 11955  063F  1283               	bcf	3,5	;RP0=0, select bank0
 11956  0640  1303               	bcf	3,6	;RP1=0, select bank0
 11957  0641  00A7               	movwf	___lldiv@dividend+3
 11958  0642  1683               	bsf	3,5	;RP0=1, select bank1
 11959  0643  1303               	bcf	3,6	;RP1=0, select bank1
 11960  0644  0847               	movf	(sprintf@val+2)^(0+128),w
 11961  0645  1283               	bcf	3,5	;RP0=0, select bank0
 11962  0646  1303               	bcf	3,6	;RP1=0, select bank0
 11963  0647  00A6               	movwf	___lldiv@dividend+2
 11964  0648  1683               	bsf	3,5	;RP0=1, select bank1
 11965  0649  1303               	bcf	3,6	;RP1=0, select bank1
 11966  064A  0846               	movf	(sprintf@val+1)^(0+128),w
 11967  064B  1283               	bcf	3,5	;RP0=0, select bank0
 11968  064C  1303               	bcf	3,6	;RP1=0, select bank0
 11969  064D  00A5               	movwf	___lldiv@dividend+1
 11970  064E  1683               	bsf	3,5	;RP0=1, select bank1
 11971  064F  1303               	bcf	3,6	;RP1=0, select bank1
 11972  0650  0845               	movf	sprintf@val^(0+128),w
 11973  0651  1283               	bcf	3,5	;RP0=0, select bank0
 11974  0652  1303               	bcf	3,6	;RP1=0, select bank0
 11975  0653  00A4               	movwf	___lldiv@dividend
 11976  0654  160A  158A  23A5  120A  118A  	fcall	___lldiv
 11977  0659  1283               	bcf	3,5	;RP0=0, select bank0
 11978  065A  1303               	bcf	3,6	;RP1=0, select bank0
 11979  065B  0823               	movf	?___lldiv+3,w
 11980  065C  00AF               	movwf	___llmod@dividend+3
 11981  065D  0822               	movf	?___lldiv+2,w
 11982  065E  00AE               	movwf	___llmod@dividend+2
 11983  065F  0821               	movf	?___lldiv+1,w
 11984  0660  00AD               	movwf	___llmod@dividend+1
 11985  0661  0820               	movf	?___lldiv,w
 11986  0662  00AC               	movwf	___llmod@dividend
 11987  0663  160A  158A  234F  120A  118A  	fcall	___llmod
 11988  0668  1283               	bcf	3,5	;RP0=0, select bank0
 11989  0669  1303               	bcf	3,6	;RP1=0, select bank0
 11990  066A  0828               	movf	?___llmod,w
 11991  066B  3E30               	addlw	48
 11992  066C  1683               	bsf	3,5	;RP0=1, select bank1
 11993  066D  1303               	bcf	3,6	;RP1=0, select bank1
 11994  066E  00B4               	movwf	(??_sprintf+1)^(0+128)
 11995  066F  0834               	movf	(??_sprintf+1)^(0+128),w
 11996  0670  00D2               	movwf	sprintf@c^(0+128)
 11997  0671                     l4524:
 11998                           
 11999                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
 12000  0671  0852               	movf	sprintf@c^(0+128),w
 12001  0672  00B3               	movwf	??_sprintf^(0+128)
 12002  0673  084F               	movf	sprintf@sp^(0+128),w
 12003  0674  0084               	movwf	4
 12004  0675  0833               	movf	??_sprintf^(0+128),w
 12005  0676  1383               	bcf	3,7	;select IRP bank0
 12006  0677  0080               	movwf	0
 12007  0678  2E05               	goto	l4520
 12008  0679                     l4528:
 12009                           
 12010                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
 12011  0679  30FF               	movlw	255
 12012  067A  07D0               	addwf	sprintf@prec^(0+128),f
 12013  067B  1803               	skipnc
 12014  067C  0AD1               	incf	(sprintf@prec+1)^(0+128),f
 12015  067D  30FF               	movlw	255
 12016  067E  07D1               	addwf	(sprintf@prec+1)^(0+128),f
 12017  067F  0A50               	incf	sprintf@prec^(0+128),w
 12018  0680  1D03               	skipz
 12019  0681  2E86               	goto	u7351
 12020  0682  0A51               	incf	(sprintf@prec+1)^(0+128),w
 12021  0683  1D03               	btfss	3,2
 12022  0684  2E86               	goto	u7351
 12023  0685  2E87               	goto	u7350
 12024  0686                     u7351:
 12025  0686  2E0A               	goto	l4522
 12026  0687                     u7350:
 12027  0687                     l4530:
 12028                           
 12029                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
 12030  0687  3001               	movlw	1
 12031  0688  07A8               	addwf	sprintf@f^(0+128),f
 12032  0689  30FF               	movlw	-1
 12033  068A  0728               	addwf	sprintf@f^(0+128),w
 12034  068B  0084               	movwf	4
 12035  068C  120A  158A  200A  120A  118A  	fcall	stringdir
 12036  0691  00B3               	movwf	??_sprintf^(0+128)
 12037  0692  0833               	movf	??_sprintf^(0+128),w
 12038  0693  00D2               	movwf	sprintf@c^(0+128)
 12039  0694  0852               	movf	sprintf@c^(0+128),w
 12040  0695  1D03               	btfss	3,2
 12041  0696  2E98               	goto	u7361
 12042  0697  2E9B               	goto	u7360
 12043  0698                     u7361:
 12044  0698  160A  118A  2D00   	goto	l4250
 12045  069B                     u7360:
 12046  069B                     l4532:
 12047                           
 12048                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 12049  069B  084F               	movf	sprintf@sp^(0+128),w
 12050  069C  0084               	movwf	4
 12051  069D  1383               	bcf	3,7	;select IRP bank0
 12052  069E  0180               	clrf	0
 12053  069F                     l447:
 12054  069F  0008               	return
 12055  06A0                     __end_of_sprintf:

Data Sizes:
    Strings     55
    Constant    144
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     79      79
    BANK1            80     51      80
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_2(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> pantalla(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    USART_Write_String@a	PTR unsigned char  size(2) Largest target is 21
		 -> pantalla(BANK1[20]), STR_1(CODE[21]), 

    LCD_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[15]), pantalla(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->_LCD_Set_Cursor
    _sprintf->___awdiv
    _sprintf->___lldiv
    _sprintf->___wmul
    _scale->___awdiv
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    _USART_Write_String->_USART_Write
    ___flmul->___awdiv
    ___flmul->___lwmod
    _LCD_clear->_LCD_Command
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Command
    _LCD_Init->_LCD_Command
    _LCD_Command->_LCD_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _LeerADC->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   41749
                                             76 BANK0      3     3      0
                       _Init_Receive
                      _Init_Transmit
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                          _LCD_clear
                            _LeerADC
                      _Set_Baud_Rate
                        _USART_Write
                 _USART_Write_String
                            _initADC
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             48    37     11   35211
                                              8 BANK1     43    32     11
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8051
                                             36 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              8 COMMON     1     1      0
                                              2 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6291
                                             36 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              0 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              8 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             55 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             56 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Write_String                                   4     2      2     264
                                              4 COMMON     4     2      2
                        _USART_Write
 ---------------------------------------------------------------------------------
 (2) _USART_Write                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Set_Baud_Rate                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LeerADC                                             13     9      4    5291
                                             36 BANK0     13     9      4
                         _ADC_Select
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                             10 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Select                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            0     0      0      62
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2     372
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     434
                                              7 COMMON     2     1      1
                                              0 BANK0      2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      93
                                              7 COMMON     2     2      0
                        _LCD_Command
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      62
                                              4 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_Transmit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Receive                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _USART_Read
 ---------------------------------------------------------------------------------
 (6) _USART_Read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Receive
   _Init_Transmit
   _LCD_Init
     _LCD_Command
       _LCD_Port
     _LCD_Port
   _LCD_Set_Cursor
     _LCD_Command
       _LCD_Port
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _LCD_clear
     _LCD_Command
       _LCD_Port
   _LeerADC
     _ADC_Select
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Set_Baud_Rate
   _USART_Write
   _USART_Write_String
     _USART_Write
   _initADC
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _ISR (ROOT)
   _USART_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AA       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     33      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AA      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 15:40:58 2021

     __size_of_Init_Transmit 000E                            pc 0002                 ?_LCD_Command 0070  
                         _V1 00D7                           _V2 00D3                 ___awdiv@sign 0027  
                         fsr 0004          ___wmul@multiplicand 0075          __Umul8_16@word_mpld 0022  
                        l100 1941                          l103 1020                          l122 1816  
                        l106 1060                          l131 1AAE                          l220 1855  
                        l125 18A3                          l223 08E0                          l119 1880  
                        l143 1A19                          l128 183A                          l137 18EE  
                        l217 1810                          l226 1823                          l410 02E1  
                        l235 196C                          l229 182D                          l158 1847  
                        l417 0325                          l178 1D24                          l451 18B0  
                        l355 0FFF                          l348 126D                          l604 07F7  
                        l453 18C8                          l621 1FFF                          l622 1F64  
                        l447 069F                          l632 1FF2                          l625 1FC2  
                        l617 093B                          l377 15BD                          l642 1D43  
                        l650 1821                          l803 1467                          l707 1BA4  
                        l820 14E9                          l812 14C7                          l637 1ACD  
                        l645 1DAF                          l821 14F5                          l661 1C73  
                        l638 1AE9                          l646 1DC8                          l654 1C88  
                        l639 1AFE                          l487 1C0C                          l920 1E84  
                        l824 1B4E                          l664 1C88                          l672 1F04  
                        l809 1489                          l931 1E4E                          l932 1E5A  
                        l924 1E32                          l668 1F41                          l669 1EB3  
                        l757 1A5F                          l918 1DED                          l782 1378  
                        l791 14F5                          l679 1F34                          l767 19D3  
                        l880 0C08                          l784 134F                          l874 0C9C  
                        l778 12D1                          l938 1867                          l893 1905  
                        l886 0C90                          l895 1917                          l799 1443  
                        _RE0 0048                          _RE1 0049                          _ISR 196D  
        __size_of_ADC_Select 009C                          fsr0 0004                          indf 0000  
               ___awmod@sign 0021                 ___flmul@aexp 003C                 ___flmul@bexp 003D  
               ___flmul@sign 0037                 ___flmul@temp 0042                 ___flmul@prod 003E  
                       ?_ISR 0070               _LCD_Set_Cursor 18C9                 ___fltol@exp1 0061  
                       l4010 0FD3                         l3300 1B69                         l4020 1EA1  
                       l2500 07C4                         l4004 0F44                         l3302 1B6D  
                       l3310 1B9C                         l4030 1EC9                         l4014 1E85  
                       l3070 1864                         l2502 07D5                         l2510 07E9  
                       l4006 0F4B                         l4200 1E44                         l3400 1844  
                       l4120 1BB7                         l3304 1B7F                         l4112 1FE7  
                       l4104 1FCE                         l4040 1EF5                         l4032 1ECB  
                       l4016 1E98                         l2600 19CF                         l3072 1866  
                       l3064 1857                         l2512 07EE                         l2504 07DB  
                       l4210 1E77                         l4202 1E48                         l3250 1817  
                       l2610 127F                         l3314 1AFF                         l4130 1BE6  
                       l4122 1BBA                         l3306 1B8D                         l4114 1FF7  
                       l4106 1FE0                         l4042 1EF6                         l4034 1ED4  
                       l4026 1EB4                         l3066 1858                         l2514 07F3  
                       l2506 07DC                         l3420 08D9                         l4220 1A64  
                       l2460 18F4                         l4212 1E7B                         l4204 1E52  
                       l3252 181F                         l2700 1370                         l2620 1293  
                       l2612 1280                         l2604 126E                         l3316 1B03  
                       l3260 1C1A                         l4132 1BF4                         l4124 1BC7  
                       l3308 1B96                         l3180 18A4                         l4060 1F29  
                       l4052 1F10                         l4044 1EFE                         l4036 1EDD  
                       l4028 1EBA                         l3068 185E                         l2508 07E3  
                       l4300 15F7                         l4222 1A6A                         l4230 182E  
                       l2462 18FB                         l4214 1E7C                         l4206 1E5C  
                       l4150 1AFD                         l4142 1AAF                         l3254 1821  
                       l2710 13A1                         l2702 137C                         l2630 12A9  
                       l2614 1285                         l2622 1295                         l2606 1275  
                       l3270 1C41                         l4134 1BF5                         l4126 1BCB  
                       l4118 1BA5                         l3190 18C4                         l3182 18A6  
                       l4062 1F39                         l4046 1F08                         l4054 1F22  
                       l4038 1EEB                         l4310 164D                         l4302 1605  
                       l4224 1A73                         l2464 18FF                         l2800 0943  
                       l4208 1E72                         l4240 101D                         l4232 100D  
                       l3416 180C                         l3440 1944                         l4144 1AC5  
                       l4160 1D5F                         l2720 13B8                         l2712 13A5  
                       l2704 1381                         l2640 12BE                         l2632 12AF  
                       l2624 129D                         l2616 128A                         l2608 127B  
                       l3280 1C4F                         l3272 1C43                         l3264 1C23  
                       l4136 1BFE                         l4128 1BD4                         l3184 18AA  
                       l4080 1F6D                         l4072 1F58                         l2480 079B  
                       l4400 022F                         l4320 169C                         l4312 1651  
                       l4304 1609                         l3418 1848                         l4226 1A81  
                       l4218 1A60                         l2466 190E                         l2458 18F2  
                       l2810 0958                         l2802 0949                         l4242 1024  
                       l4234 100D                         l3442 1955                         l3370 1918  
                       l4146 1AE1                         l4170 1DC7                         l4162 1D63  
                       l4154 1D25                         l2730 141B                         l2722 13B9  
                       l2714 13A9                         l2650 12DB                         l2642 12C6  
                       l2634 12B3                         l2626 12A2                         l2618 1292  
                       l3290 1C78                         l3274 1C47                         l3282 1C61  
                       l3266 1C38                         l3258 1C0D                         l4138 1C04  
                       l3186 18B7                         l4090 1FA4                         l4082 1F7E  
                       l4066 1F42                         l2490 07AC                         l2482 079D  
                       l2474 078F                         l4410 02E9                         l4402 0236  
                       l4330 1733                         l4322 16BF                         l4314 1678  
                       l4306 1630                         l4250 1500                         l4228 1A87  
                       l2468 1913                         l2900 0BF1                         l2820 0975  
                       l2812 0960                         l2804 094D                         l4180 1DE5  
                       l4244 1058                         l4236 1013                         l3444 1959  
                       l3380 192D                         l3372 191E                         l4148 1AFB  
                       l4164 1D87                         l4156 1D3B                         l2740 1450  
                       l2732 1421                         l2724 13C2                         l2716 13B2  
                       l2708 138A                         l2660 12EF                         l2652 12DF  
                       l2644 12C7                         l2636 12B4                         l2628 12A8  
                       l3292 1C7D                         l3268 1C39                         l3188 18BE  
                       l4092 1FB2                         l4084 1F80                         l4068 1F4F  
                       l2492 07B2                         l2484 07A1                         l2476 0792  
                       l4500 05B6                         l4420 0318                         l4412 02F2  
                       l4404 023B                         l4340 17A3                         l4332 175A  
                       l4324 16C3                         l4316 1683                         l4308 1649  
                       l4260 1526                         l4252 1506                         l2910 0C20  
                       l2902 0C05                         l2830 098C                         l2822 0979  
                       l2814 0962                         l2806 094E                         l4190 1E10  
                       l4182 1DF5                         l4174 1DCC                         l4238 1016  
                       l3438 1942                         l3390 193C                         l3382 1930  
                       l3374 1922                         l4166 1D8B                         l4158 1D57  
                       l2750 146B                         l2734 1426                         l2718 13B4  
                       l2726 13C7                         l2670 1303                         l2662 12F3  
                       l2654 12E3                         l2638 12B9                         l2646 12C9  
                       l3294 1B4F                         l4094 1FB3                         l4086 1F89  
                       l4078 1F65                         l2590 19AE                         l2582 199A  
                       l2494 07B5                         l2486 07A6                         l2478 0796  
                       l4510 05DB                         l4502 05BA                         l4430 033E  
                       l4422 031F                         l4414 02F6                         l4406 0296  
                       l4350 007D                         l4342 17EA                         l4334 1763  
                       l4326 16C9                         l4318 1689                         l4262 152A  
                       l4270 1566                         l4254 150D                         l2920 0C5B  
                       l2912 0C24                         l2832 098E                         l2824 097A  
                       l2816 096A                         l2808 0953                         l4192 1E17  
                       l4176 1DD1                         l3392 193D                         l3384 1933  
                       l3376 1923                         l4168 1DC5                         l2752 146E  
                       l2744 1459                         l2728 13DD                         l2736 1435  
                       l2760 147B                         l2680 1317                         l2672 1307  
                       l2664 12F7                         l2656 12E7                         l2648 12D7  
                       l3288 1C68                         l3296 1B59                         l4096 1FBC  
                       l4088 1F92                         l2592 19B2                         l2584 19A0  
                       l2496 07BC                         l2488 07AA                         l4520 0605  
                       l4512 05E2                         l4504 05C5                         l4440 045D  
                       l4432 035C                         l4424 032E                         l4416 02FC  
                       l4408 02D5                         l4352 00A6                         l4344 001E  
                       l4336 178C                         l4328 16E8                         l4280 1591  
                       l4272 1574                         l4264 153F                         l4256 1512  
                       l4248 14F9                         l2930 0C88                         l2922 0C6A  
                       l2914 0C3D                         l2906 0C0D                         l2850 09FF  
                       l2842 09A9                         l2834 0996                         l2826 097F  
                       l2818 096F                         l4194 1E1B                         l4186 1DFE  
                       l4178 1DD5                         l3394 1940                         l3386 1936  
                       l3378 1926                         l2770 148E                         l2762 147C  
                       l2754 1470                         l2746 1462                         l2738 144B  
                       l2690 135C                         l2674 130B                         l2666 12FB  
                       l2658 12EB                         l2682 131B                         l3298 1B5C  
                       l4098 1FC6                         l2594 19BC                         l2586 19A3  
                       l2498 07C0                         l4522 060A                         l4514 05E6  
                       l4506 05D1                         l4450 04D1                         l4434 03B7  
                       l4442 04B8                         l4426 0333                         l4418 0309  
                       l4370 018F                         l4362 0120                         l4354 00AF  
                       l4346 0047                         l4338 1794                         l4282 15A4  
                       l4274 1575                         l4266 1552                         l4258 1516  
                       l4530 0687                         l2932 0C89                         l2924 0C74  
                       l2908 0C12                         l2916 0C43                         l2860 0A7C  
                       l2852 0A2B                         l2844 09B9                         l2836 099B  
                       l2828 0984                         l4196 1E29                         l4188 1E03  
                       l2940 1829                         l3396 183B                         l3388 193B  
                       l2780 14CC                         l2772 1493                         l2764 1480  
                       l2756 1475                         l2748 1466                         l2692 135E  
                       l2684 131C                         l2676 130F                         l2668 12FF  
                       l2596 19C2                         l2588 19AA                         l3900 0932  
                       l4524 0671                         l4516 05F2                         l4508 05D5  
                       l4460 04F5                         l4444 04C0                         l4436 0412  
                       l4428 033A                         l4380 01C8                         l4356 00B7  
                       l4348 006E                         l4364 0129                         l4452 04D8  
                       l4532 069B                         l4292 15BF                         l4284 15A8  
                       l4276 1579                         l4268 1556                         l4550 18E3  
                       l4542 18CC                         l2950 1C9E                         l2942 1C8A  
                       l2934 0C94                         l2926 0C76                         l2918 0C50  
                       l2870 0AFC                         l2862 0A99                         l2854 0A47  
                       l2846 09C6                         l2838 09A0                         l4198 1E39  
                       l3398 1842                         l2790 14E3                         l2782 14D1  
                       l2774 14A1                         l2766 1486                         l2758 1477  
                       l2694 1362                         l2686 1333                         l2678 1313  
                       l3910 1A24                         l2598 19C9                         l3902 0937  
                       l4518 05FE                         l4462 0500                         l4454 04E9  
                       l4446 04C7                         l4438 0451                         l4390 0206  
                       l4382 01D2                         l4366 015E                         l4358 00D5  
                       l4294 15E1                         l4278 157C                         l4286 15B9  
                       l4552 18E8                         l4544 18D1                         l4560 19FD  
                       l2960 1CC1                         l2952 1CA5                         l2944 1C8B  
                       l2928 0C84                         l2880 0BB4                         l2872 0B29  
                       l2864 0AA9                         l2856 0A63                         l2848 09E3  
                       l2792 14E5                         l2784 14D9                         l2776 14A5  
                       l2696 1363                         l2688 1353                         l3920 1A47  
                       l3912 1A27                         l4528 0679                         l4480 0557  
                       l4464 0506                         l4456 04ED                         l4448 04CB  
                       l4392 020F                         l4384 01ED                         l4376 0191  
                       l4368 018D                         l4296 15EF                         l4288 15BB  
                       l4546 18D6                         l4554 19D4                         l2970 1CE4  
                       l2962 1CC8                         l2954 1CAC                         l2946 1C90  
                       l2890 0BD9                         l2882 0BBD                         l2874 0B39  
                       l2866 0AC6                         l2858 0A6C                         l2938 1823  
                       l2794 14F0                         l2786 14DE                         l2778 14C3  
                       l2698 136C                         l3922 1A4D                         l3914 1A2E  
                       l3906 1A1A                         l4490 0589                         l4482 0562  
                       l4474 0516                         l4466 050E                         l4458 04F1  
                       l4386 01F3                         l4298 15F3                         l4570 06E1  
                       l4562 06A0                         l4548 18DD                         l3940 1879  
                       l3932 1869                         l4556 19D9                         l2972 1CEB  
                       l2964 1CCF                         l2956 1CB3                         l2948 1C97  
                       l2892 0BE2                         l2884 0BCB                         l2876 0B66  
                       l2868 0ADF                         l2796 14F4                         l2788 14DF  
                       l3924 1A4E                         l3916 1A32                         l3908 1A1E  
                       l4492 0595                         l4484 0569                         l4468 0514  
                       l4388 01FF                         l4396 0214                         l4580 0741  
                       l4572 06FF                         l4564 06B9                         l3950 188E  
                       l3942 187C                         l3934 186C                         l4558 19F5  
                       l2966 1CD6                         l2958 1CBA                         l2886 0BD4  
                       l2894 0BE8                         l2878 0B8C                         l2798 093C  
                       l3926 1A55                         l3918 1A36                         l3870 08E4  
                       l4494 059B                         l4486 0578                         l4478 054D  
                       l4398 0221                         l4646 15D3                         l4590 0763  
                       l4582 074A                         l4574 0708                         l4566 06BE  
                       l3952 1897                         l3944 1882                         l3936 1872  
                       l4648 1CF8                         l2968 1CDD                         l2976 1CF0  
                       l2896 0BEC                         l2888 0BD8                         l3928 1A5B  
                       l3880 08F8                         l3872 08E8                         l4496 059F  
                       l4488 0581                         l4592 0774                         l4584 0750  
                       l4576 070E                         l4568 06C3                         l3866 1812  
                       l3954 189A                         l3946 1885                         l3938 1875  
                       l2898 0BED                         l3970 122A                         l3890 0910  
                       l3882 08FE                         l3874 08ED                         l4498 05AD  
                       l4594 077D                         l4586 0756                         l4578 0714  
                       l3948 188B                         l3964 1179                         l3956 1064  
                       l3892 091A                         l3884 0901                         l3876 08EF  
                       l3868 08E1                         l3980 0CAD                         l4588 075B  
                       l3966 117F                         l3958 106A                         l3894 0920  
                       l3886 0908                         l3878 08F3                         l3974 0CA0  
                       l3896 0927                         l3888 090C                         l3992 0E26  
                       l3976 0CA4                         l3898 092D                         l3986 0D97  
                       l3978 0CA6                         l3988 0D9E                         l3996 0E53  
                       l3998 0E5A                         STR_1 08A0                         STR_2 08B5  
                       STR_3 08C8                         _BRGH 04C2                         _CREN 00C4  
                       u3000 0796                         u3001 0795                         u3010 07A1  
                       u3011 07A0                         u3020 07B2                         u3021 07B1  
                       u3040 07C4                         u4001 0BA6                         u3041 07C3  
                       u4002 0BAD                         u4003 0BB4                         u3035 07B6  
                       u4100 0C24                         u3060 07D5                         u4101 0C23  
                       u3061 07D4                         u4110 0C33                         u4030 0BD8  
                       u3310 19CF                         u4031 0BD7                         u4015 0BB6  
                       u3311 19CE                         u3055 07C5                         u4120 0C50  
                       u3400 12DB                         u3320 127F                         u5000 1C7D  
                       u3080 07E9                         u4121 0C4F                         u4025 0BCD  
                       u3401 12DA                         u3321 127E                         u5001 1C7C  
                       u3305 19C3                         u3081 07E8                         u3065 07D1  
                       u4130 0C6A                         u4050 0BEC                         u3410 1333  
                       u3330 1285                         u5010 1B59                         u3090 07EE  
                       u4131 0C69                         u4115 0C2E                         u4051 0BEB  
                       u3411 1332                         u3331 1284                         u5011 1B58  
                       u3091 07ED                         u3075 07DD                         u4140 0C88  
                       u4060 0BF1                         u3420 133E                         u3340 128A  
                       u3260 19A0                         u4141 0C87                         u4125 0C4C  
                       u4061 0BF0                         u4045 0BDB                         u3501 1393  
                       u3421 133C                         u3341 1289                         u3261 199F  
                       u4070 0C05                         u4150 1829                         u3510 13A5  
                       u3502 139A                         u3430 133F                         u3350 12A8  
                       u5030 1B6D                         u4135 0C66                         u4071 0C04  
                       u4151 1828                         u3511 13A4                         u3503 13A1  
                       u3415 132F                         u3351 12A7                         u5031 1B6C  
                       u4080 0C0C                         u3600 1450                         u3520 13A9  
                       u3440 1353                         u3360 12B3                         u5040 1B7F  
                       u6000 1A5B                         u3280 19B2                         u4081 0C0B  
                       u3601 144F                         u3521 13A8                         u3441 1352  
                       u3361 12B2                         u5041 1B7E                         u5025 1B5E  
                       u6001 1A5A                         u3281 19B1                         u4090 0C12  
                       u3530 13B8                         u3450 1362                         u3370 12B9  
                       u3290 19BC                         u6010 106A                         u4410 185E  
                       u4091 0C11                         u3531 13B7                         u3451 1361  
                       u3371 12B8                         u3291 19BB                         u3275 19A4  
                       u6011 1069                         u4411 185D                         u3700 14A5  
                       u3620 1466                         u3380 12BE                         u5060 1B9C  
                       u4420 1864                         u6100 0CAD                         u3701 14A4  
                       u3621 1465                         u3381 12BD                         u5061 1B9B  
                       u5045 1B7B                         u4421 1863                         u6101 0CAC  
                       u5230 196C                         u3710 14B4                         u3630 146B  
                       u3550 13DD                         u3470 1378                         u3390 12D7  
                       u5231 196B                         u3631 146A                         u3615 145B  
                       u3551 13DC                         u3471 1377                         u3391 12D6  
                       u5055 1B8E                         u3295 19B8                         u3800 0958  
                       u3720 14C3                         u3640 1475                         u3480 137C  
                       u7000 007D                         u3801 0957                         u3721 14C2  
                       u3641 1474                         u3561 13F4                         u3553 13D9  
                       u3545 13BB                         u3481 137B                         u3465 1365  
                       u6025 1087                         u7001 007C                         u3810 0979  
                       u3730 14CC                         u3650 147B                         u3570 1408  
                       u3562 13F5                         u3490 1381                         u6050 117F  
                       u7010 00A6                         u3811 0978                         u3731 14CB  
                       u3715 14AF                         u3651 147A                         u3571 1409  
                       u3563 13FA                         u3491 1380                         u6051 117E  
                       u6035 10E3                         u6115 0CCF                         u7011 00A5  
                       u3820 097F                         u3740 14D1                         u3660 1480  
                       u3580 1426                         u3572 140E                         u3564 13FB  
                       u6220 0F4B                         u6140 0D9E                         u7100 02E8  
                       u3821 097E                         u3741 14D0                         u3661 147F  
                       u3581 1425                         u3573 140F                         u3565 1400  
                       u6045 1138                         u6221 0F4A                         u6205 0EB8  
                       u6141 0D9D                         u6125 0D0B                         u7101 02E7  
                       u7005 0079                         u3830 0984                         u3750 14DE  
                       u3670 1486                         u3590 144B                         u3566 1401  
                       u6310 1F04                         u7110 0309                         u7030 01C7  
                       u3911 0A8B                         u3831 0983                         u3751 14DD  
                       u3671 1485                         u3591 144A                         u6311 1F03  
                       u6215 0F03                         u6135 0D56                         u7111 0308  
                       u7031 01C6                         u3912 0A92                         u3840 099B  
                       u3760 14E3                         u3680 148D                         u4720 18C4  
                       u6400 1F63                         u6320 1F08                         u7200 050E  
                       u7120 0318                         u7040 01D2                         u3921 0AB8  
                       u3913 0A99                         u3905 0A65                         u3841 099A  
                       u3761 14E2                         u3681 148C                         u4721 18C3  
                       u4705 18B1                         u6401 1F62                         u6321 1F07  
                       u6305 1EF7                         u6065 119C                         u7201 050D  
                       u7121 0317                         u7041 01D1                         u7025 0194  
                       u2970 18FF                         u3922 0ABF                         u3850 09A0  
                       u3770 14F4                         u3690 1493                         u6330 1F0F  
                       u6090 0CA4                         u7130 0333                         u7050 01ED  
                       u2971 18FE                         u3923 0AC6                         u3851 099F  
                       u3771 14F3                         u3691 1492                         u4715 18B8  
                       u6331 1F0E                         u6075 11E9                         u6235 0F5E  
                       u6155 0DB1                         u6091 0CA3                         u7131 0332  
                       u7115 0305                         u7051 01EC                         u7035 01C3  
                       u3780 094D                         u4900 181F                         u6420 1FA4  
                       u6260 1E98                         u6180 0E5A                         u7300 05C5  
                       u7220 054C                         u7060 01FF                         _RCIF 0065  
                       u3941 0AEE                         u3861 09F1                         u3781 094C  
                       u4901 181E                         u6421 1FA3                         u6261 1E97  
                       u6085 1235                         u6245 0F9A                         u6181 0E59  
                       u6165 0DED                         u7301 05C4                         u7221 054B  
                       u7125 0314                         u7061 01FE                         u2990 1913  
                       u3942 0AF5                         u3862 09F8                         u3790 0953  
                       u4910 1C1A                         u6510 1FF7                         u6350 1F21  
                       u6270 1EB2                         u7310 05DB                         u7230 0557  
                       u7070 0221                         u2991 1912                         u3951 0B1B  
                       u3943 0AFC                         u3935 0AC8                         u3871 0A0D  
                       u3863 09FF                         u3791 0952                         u4911 1C19  
                       u6511 1FF6                         u6415 1F8B                         u6351 1F20  
                       u6271 1EB1                         u6255 0FD6                         u6175 0E29  
                       u7311 05DA                         u7231 0556                         u7215 0519  
                       u7071 0220                         u7400 1A07                         u3952 0B22  
                       u3872 0A14                         u6600 1AE1                         u4920 1C31  
                       u6520 1BB7                         u6440 1FC2                         u6360 1F28  
                       u7320 05F2                         u7240 0562                         u7160 04BF  
                       u7080 022F                         u2985 1906                         u3961 0B48  
                       u3953 0B29                         u3881 0A39                         u3873 0A1B  
                       u6601 1AE0                         u6521 1BB6                         u6505 1FE9  
                       u6441 1FC1                         u6425 1FA0                         u6361 1F27  
                       u6345 1F11                         u7321 05F1                         u7305 05C1  
                       u7241 0561                         u7225 0548                         u7161 04BE  
                       u7145 03BA                         u7081 022E                         u7410 1A19  
                       u3970 0B72                         u3962 0B4F                         u3882 0A40  
                       u6610 1AFB                         u4930 1C47                         u4690 18AA  
                       u6450 1FC6                         u6290 1EEB                         u7330 05FE  
                       u7250 0578                         u7170 04D7                         u7411 1A18  
                       u3963 0B56                         u3891 0A55                         u3883 0A47  
                       u6611 1AFA                         u4931 1C46                         u4691 18A9  
                       u6451 1FC5                         u6435 1FB5                         u6291 1EEA  
                       u6195 0E7C                         u7331 05FD                         u7251 0577  
                       u7171 04D6                         u7155 0460                         u7075 021D  
                       u3892 0A5C                         u6700 1DD5                         u6620 1D3B  
                       u4940 1C4E                         u6540 1BCB                         u6460 1FCD  
                       u6380 1F39                         u5900 091A                         u7260 0589  
                       u7180 04F1                         u3981 0B7E                         u3893 0A63  
                       u6701 1DD4                         u6621 1D3A                         u4941 1C4D  
                       u4925 1C2C                         u6541 1BCA                         u6461 1FCC  
                       u6381 1F38                         u6285 1ED6                         u5901 0919  
                       u7261 0588                         u7245 055E                         u7181 04F0  
                       u3990 0B9A                         u3982 0B85                         u6710 1DF5  
                       u6630 1D57                         u6390 1F4F                         u7350 0687  
                       u7270 0595                         u7190 0506                         u3983 0B8C  
                       u3975 0B6D                         u6711 1DF4                         u6615 1AF7  
                       u6631 1D56                         u6535 1BBC                         u6391 1F4E  
                       u6375 1F2B                         u6295 1EE7                         u7351 0686  
                       u7271 0594                         u7255 0574                         u7191 0505  
                       u7095 023E                         u6800 1E67                         u6640 1D63  
                       u4960 1C60                         u6560 1BE6                         u6480 1FDF  
                       u5920 092D                         u7360 069B                         u7280 059F  
                       i1l89 1993                         u6641 1D62                         u4961 1C5F  
                       u6561 1BE5                         u6481 1FDE                         u5921 092C  
                       u5905 0916                         u7361 0698                         u7345 0619  
                       u7281 059E                         u7370 18D1                         u6810 1E77  
                       u6730 1E16                         u4970 1C67                         u6490 1FE6  
                       u5930 0932                         u5850 08E8                         u7290 05AD  
                       u7507 189E                         u7371 18D0                         u3995 0B95  
                       u6811 1E76                         u6731 1E15                         u6651 1D72  
                       u4971 1C66                         u4955 1C50                         u6555 1BCD  
                       u6491 1FE5                         u6475 1FCF                         u5931 0931  
                       u5915 0921                         u5851 08E7                         u7291 05AC  
                       u7427 0785                         u7380 18E3                         u6820 1E7B  
                       u6660 1D8B                         u6652 1D73                         u6580 1C04  
                       u5940 1A24                         u5860 08F3                         u6900 15F3  
                       u7381 18E2                         u6821 1E7A                         u6805 1E62  
                       u6725 1E08                         u7437 101A                         u6661 1D8A  
                       u6653 1D78                         u6581 1C03                         u6565 1BE2  
                       u5941 1A23                         u5861 08F2                         u6901 15F2  
                       u7390 19E3                         u6750 1E38                         u6830 1024  
                       u6590 1AC5                         u6654 1D79                         u4990 1C78  
                       u5870 08FE                         u6910 1630                         u7447 1877  
                       u6751 1E37                         u6831 1023                         u6591 1AC4  
                       u6671 1D9A                         u6655 1D7E                         u4991 1C77  
                       u6575 1BF6                         u5871 08FD                         u7295 05A9  
                       u6911 162F                         u6680 1DC5                         u6672 1D9B  
                       u6656 1D7F                         u5960 1A36                         u6920 1678  
                       u6840 1506                         u7457 187E                         u6745 1E2A  
                       u6681 1DC4                         u6673 1DA0                         u4985 1C6A  
                       u5961 1A35                         u6921 1677                         u6841 1505  
                       u6770 1E48                         u6690 1DD1                         u6674 1DA1  
                       u5890 0910                         u6930 16C3                         u6850 1526  
                       u7467 1A6E                         u6771 1E47                         u6691 1DD0  
                       u6675 1DA6                         u5955 1A28                         u5891 090F  
                       u6931 16C2                         u6851 1525                         u6780 1E4E  
                       u6676 1DA7                         u5980 1A47                         u6940 175A  
                       u6860 1566                         u7477 1A7D                         u6781 1E4D  
                       u6765 1E3D                         u6685 1DC1                         u5981 1A46  
                       u5885 0902                         u6941 1759                         u6861 1565  
                       u6790 1E52                         u6950 178C                         u6870 1574  
                       u7487 1A8B                         u6791 1E51                         u5975 1A37  
                       u6951 178B                         u6871 1573                         u6960 17A3  
                       u6880 15B8                         u7497 1892                         u5985 1A43  
                       u6961 17A2                         u6881 15B7                         u6970 001E  
                       u6890 15EF                         u5995 1A4F                         u6971 17FA  
                       u6891 15EC                         u6980 0047                         u6981 0046  
                       u6965 179F                         u6990 006E                         u6991 006D  
                       u6975 17F5                         _SPEN 00C7                         _TRMT 04C1  
                       _TXEN 04C5                         _SYNC 04C4            ?_LCD_Write_String 0076  
__size_of_USART_Write_String 002B                         _main 06A0                         btemp 007E  
                       start 000C           ??_LCD_Write_String 0020           __size_of_LCD_clear 000D  
               _sprintf$1241 00B8              __end_of_LeerADC 1061                ?_Init_Receive 0070  
                      ??_ISR 0070             __end_of_LCD_Init 1AAF             __end_of_LCD_Port 1817  
              ___fltol@sign1 0060              __end_of___fladd 14F6                        ?_main 0070  
            __end_of___awdiv 07F8              __end_of___flneg 1822              __end_of___awmod 093C  
            __end_of___flmul 0C9D              __end_of___flsub 1B4F              __end_of___fltol 1C89  
                      _ANSEL 0188              __end_of___lldiv 1C0D              ___awdiv@divisor 0022  
            __end_of___llmod 1BA5              __end_of___lwdiv 1A60                        i1l241 1009  
                      i1l238 1002              __end_of___lwmod 19D4              ___awdiv@counter 0026  
                      _RCREG 001A                        _SPBRG 0099                        _PORTA 0005  
                      _PORTB 0006                        _PORTC 0007                        _PORTD 0008  
                      _PORTE 0009                        _TRISA 0085                        _TRISB 0086  
                      _TRISC 0087                        _TRISD 0088                        _TRISE 0089  
                      _TXREG 0019       __end_of_LCD_Set_Cursor 18EF                _Init_Transmit 1848  
            __end_of_initADC 1848              __end_of_dpowers 08A0                        _scale 0C9D  
            __end_of_isdigit 1868                        _setup 1918                 LCD_Command@a 0076  
                      pclath 000A                        status 0003                        wtemp0 007E  
            __end_of_sprintf 06A0                 USART_Write@a 0073                  ?_USART_Read 0070  
             _LCD_Write_Char 1868              __initialization 000F               ??_Init_Receive 0073  
               __end_of_main 078F                       ??_main 006C         __size_of__tdiv_to_l_ 00BD  
          __end_of_LCD_clear 183B               ?_Init_Transmit 0070              ?_LCD_Set_Cursor 0077  
                     _ADCON0 001F                       _ADCON1 009F             ___llmod@dividend 002C  
                     ?_scale 0044                       _ADRESH 001E             ___awdiv@dividend 0024  
                     ?_setup 0070                       _ANSELH 0189                       i1l3364 1002  
                     i1l3366 1008                       i1l3760 196D                       i1l3770 1989  
                     i1l3762 1973                       i1l3772 198F                       i1l3764 1974  
                     i1l3766 197C                       i1l3768 1982                       u521_20 1008  
                     u521_21 1007                       u582_20 1973                       u582_21 1972  
                     u583_20 1982                       u583_21 1981                       u584_20 198F  
                     u584_21 198E                 ??_ADC_Select 0073                    ??_LeerADC 0048  
                     _TRISC6 043E                       _TRISC7 043F             __end_of___xxtofl 1E85  
     __end_of_LCD_Write_Char 1881             __end_of__powers_ 0844                       ___flge 1D25  
                     ___fleq 1AAF                    ??___fladd 0060                       ___wmul 18A4  
                  ??___awdiv 0078                    ??___flneg 0077                    ??___awmod 0077  
                  ??___flmul 0032                    ??___flsub 0079                    ??___fltol 005B  
                  ??___lldiv 0073                    ??___llmod 0030                    ??___lwdiv 0024  
                  ??___lwmod 0077                       _fround 1061             ___awdiv@quotient 0028  
            ___awmod@divisor 0073              ___awmod@counter 0020         __size_of_LCD_Command 0023  
                  ??_initADC 0073                    ??_isdigit 0073           __end_of_ADC_Select 1D25  
         __size_of__Umul8_16 0029                       saved_w 007E          __size_of_USART_Read 0008  
                  ??_sprintf 00B3              LCD_Set_Cursor@a 0021              LCD_Set_Cursor@x 0020  
            LCD_Set_Cursor@y 0077                   ___flge@ff1 0020                   ___flge@ff2 0024  
               ___xxtofl@arg 0026                 ___xxtofl@exp 0025                 ___xxtofl@val 0073  
                 ___fleq@ff1 0020                   ___fleq@ff2 0024      __end_of__initialization 001A  
                  ?_LCD_Init 0070                   ___flneg@f1 0073                    ?_LCD_Port 0070  
                 ___fltol@f1 0057              ?_LCD_Write_Char 0070                 ?_USART_Write 0070  
             __pcstackCOMMON 0070                    LCD_Port@a 0073                __end_of_scale 1000  
              __end_of_setup 1942       __size_of_Set_Baud_Rate 0005              ??_Init_Transmit 0073  
                 __div_to_l_ 1F42         __end_of_Init_Receive 08E1              __div_to_l_@exp1 002D  
            __div_to_l_@cntr 002C                      ??_scale 0048              __div_to_l_@quot 0028  
               sprintf@width 00BF                      ??_setup 0073                   __pbssBANK1 00D3  
                 ??_LCD_Init 0077                   ??_LCD_Port 0073                __div_to_l_@f1 0020  
              __div_to_l_@f2 0024            __end_of__Umul8_16 1918                   __pmaintext 06A0  
                    ?___flge 0020                      ?___fleq 0020                      ?___wmul 0073  
                 __pintentry 0004                      ?_fround 0044    __size_of_LCD_Write_String 0046  
                  ?___xxtofl 0073   __end_of_USART_Write_String 196D                   __stringtab 0800  
              _Set_Baud_Rate 180C                      _LeerADC 100A                 ??_USART_Read 0070  
          __end_of__npowers_ 0878                   _scale$1240 0052              __size_of___flge 00A4  
            __size_of___fleq 0050                      ___fladd 126E                      ___awdiv 078F  
                    ___flneg 1817                      ___awmod 08E1                      ___flmul 093C  
                    ___flsub 1AFF                      ___fltol 1C0D                      ___lldiv 1BA5  
            __size_of___wmul 0025                      ___llmod 1B4F                      ___lwdiv 1A1A  
                    ___lwmod 199A              __size_of_fround 020D             ??_LCD_Set_Cursor 0078  
                    __ptext1 14F6                      __ptext2 0C9D                      __ptext3 08E1  
                    __ptext4 078F                      __ptext5 1856                      __ptext6 1061  
                    __ptext7 199A                      __ptext8 1A1A                      __ptext9 1E85  
                    _initADC 183B                 __size_of_ISR 002D                  ?__div_to_l_ 0020  
                    _dpowers 0878                      _isdigit 1856                   ??___xxtofl 0020  
           ___awmod@dividend 0075           __end_of_USART_Read 100A                      _sprintf 14F6  
                    clrloop0 07F9                    _LCD_clear 182E         end_of_initialization 001A  
             ?_Set_Baud_Rate 0070              ___lldiv@divisor 0020              ___lldiv@counter 0078  
                  _RCSTAbits 0018                      psplit$0 B0035         __size_of_USART_Write 000C  
             __tdiv_to_l_@f1 0020               __tdiv_to_l_@f2 0024                ??__tdiv_to_l_ 0073  
      __size_of_Init_Receive 0008                  ___fladd@grs 006B                ___xxtofl@sign 0024  
                  _TRISCbits 0087                   ?_LCD_clear 0070            LCD_Write_String@a 0076  
          LCD_Write_String@i 0023             ??_LCD_Write_Char 0074                  ___flmul@grs 0038  
                  _TXSTAbits 0098            __size_of_LCD_Init 004F          __size_of__div_to_l_ 00BE  
          __size_of_LCD_Port 0006                 _Init_Receive 08D9                ??_LCD_Command 0074  
             __end_of___flge 1DC9               __end_of___fleq 1AFF               __end_of___wmul 18C9  
           _LCD_Write_String 19D4            pnum$text1_split_1 0035               __end_of_fround 126E  
        start_initialization 000F                  __end_of_ISR 199A          __end_of__tdiv_to_l_ 1F42  
            ??_Set_Baud_Rate 0073              ___llmod@divisor 0028              ___llmod@counter 0031  
                   ??___flge 0073                     ??___fleq 0073                     ??___wmul 0077  
                  __Umul8_16 18EF              LCD_Write_Char@a 0075                     ??_fround 0048  
              sprintf@tmpval 00C1                    ___fladd@a 005C                    ___fladd@b 0058  
                 fround@prec 0057          __end_of_LCD_Command 18A4                    ___flmul@a 002E  
                  ___flmul@b 002A                  __pbssCOMMON 0079                    ___flsub@a 00A0  
                  ___flsub@b 00A4        __end_of_Init_Transmit 1856                    ___latbits 0002  
              __pcstackBANK0 0020                __pcstackBANK1 00A0            __size_of___xxtofl 00BC  
               _isdigit$1062 0073                  ??_LCD_clear 0077                  sprintf@flag 00BD  
                sprintf@eexp 00C9                     ?_LeerADC 0044                  sprintf@fval 00CB  
                sprintf@prec 00D0             ___lwdiv@dividend 0022           _USART_Write_String 1942  
                   ?___fladd 0058                     ?___awdiv 0022                     ?___flneg 0073  
                   ?___awmod 0073                     ?___flmul 002A                     ?___flsub 00A0  
                   ?___fltol 0057                     ?___lldiv 0020                     ?___llmod 0028  
                  __npowers_ 0844                   ?__Umul8_16 0073                     ?___lwdiv 0020  
                   ?___lwmod 0073                    __pstrings 0800          ?_USART_Write_String 0074  
                __tdiv_to_l_ 1E85                     ?_initADC 0070                 ??__div_to_l_ 0073  
                   ?_isdigit 0070             ___lwdiv@quotient 0026                     ?_sprintf 00A8  
             __size_of_scale 0363               __size_of_setup 002A                  ADC_Select@a 0075  
       ??_USART_Write_String 0076            interrupt_function 0004                     _LCD_Init 1A60  
             ___wmul@product 0077                     _LCD_Port 1811                    clear_ram0 07F8  
                   _PIE1bits 008C                     _PIR1bits 000C           __end_of__div_to_l_ 2000  
                  _valor_adc 007A                     LeerADC@a 004D                     LeerADC@x 004C  
                _LCD_Command 1881                   _ADCON0bits 001F                  __stringbase 080F  
          ___wmul@multiplier 0073     __end_of_LCD_Write_String 1A1A                   _ADC_Select 1C89  
           __size_of_LeerADC 0057                ??_USART_Write 0073                  ??__Umul8_16 0075  
           __size_of___fladd 0288             __size_of___awdiv 0069             __size_of___flneg 000B  
           __size_of___awmod 005B             __size_of___flmul 0361             __size_of___flsub 0050  
           __size_of___fltol 007C             __size_of___lldiv 0068             __size_of___llmod 0056  
           __size_of___lwdiv 0046             __size_of___lwmod 003A                  _fround$1238 0053  
                _fround$1239 004F           __end_of__stringtab 0810                   sprintf@val 00C5  
           __size_of_initADC 000D                     ___xxtofl 1DC9             __size_of_isdigit 0012  
            ___lwdiv@divisor 0020              ___lwdiv@counter 0025                     __ptext10 1F42  
                   __ptext11 18A4                     __ptext20 1918                     __ptext12 1B4F  
                   __ptext21 183B                     __ptext13 1BA5                     __ptext30 182E  
                   __ptext22 1942                     __ptext14 1C0D                     __ptext31 19D4  
                   __ptext23 1822                     __ptext15 1AFF                     __ptext40 1002  
                   __ptext32 1868                     __ptext24 180C                     __ptext16 126E  
                   __ptext33 18C9                     __ptext25 100A                     __ptext17 1817  
                   __ptext34 1A60                     __ptext26 1DC9                     __ptext18 1D25  
                   __ptext35 1881                     __ptext27 093C                     __ptext19 1AAF  
                   __ptext36 1811                     __ptext28 18EF                     __ptext37 1848  
                   __ptext29 1C89                     __ptext38 08D9                     __ptext39 196D  
                   __powers_ 0810      __size_of_LCD_Set_Cursor 0026                     _contador 00DB  
           __size_of_sprintf F1AA                __size_of_main 00EF                    pnum$text1 000B  
                   _recibido 0079                     _pantalla 00DC          __end_of_USART_Write 182E  
                 _INTCONbits 000B                     isdigit@c 0074                     scale@scl 0056  
      __end_of_Set_Baud_Rate 1811                     intlevel1 0000                    sprintf@ap 00BC  
           __tdiv_to_l_@exp1 002D             __tdiv_to_l_@cntr 002C                    sprintf@sp 00CF  
           __tdiv_to_l_@quot 0028             ___lwmod@dividend 0075                  ?_ADC_Select 0070  
           ___lldiv@dividend 0024                    stringcode 080A      __size_of_LCD_Write_Char 0019  
               ?__tdiv_to_l_ 0020       __Umul8_16@multiplicand 0073                     sprintf@c 00D2  
                   sprintf@f 00A8          USART_Write_String@a 0074          USART_Write_String@i 0077  
           ___lldiv@quotient 0074              ___lwmod@divisor 0073              ___lwmod@counter 0078  
                   stringdir 080A                     stringtab 0800                ___fladd@signs 0068  
               ___fladd@aexp 0069                 ___fladd@bexp 006A         __Umul8_16@multiplier 0024  
                 _USART_Read 1002                  _USART_Write 1822            __Umul8_16@product 0020  
