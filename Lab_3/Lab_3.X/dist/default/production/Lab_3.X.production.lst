

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 18:05:36 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F887 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0088                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0105                     	;# 
   157  0107                     	;# 
   158  0108                     	;# 
   159  0109                     	;# 
   160  010C                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  0185                     	;# 
   166  0187                     	;# 
   167  0188                     	;# 
   168  0189                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0088                     	;# 
   211  0089                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  008F                     	;# 
   216  0090                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0095                     	;# 
   224  0096                     	;# 
   225  0097                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009A                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  0105                     	;# 
   235  0107                     	;# 
   236  0108                     	;# 
   237  0109                     	;# 
   238  010C                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  0185                     	;# 
   244  0187                     	;# 
   245  0188                     	;# 
   246  0189                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  008F                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  0105                     	;# 
   313  0107                     	;# 
   314  0108                     	;# 
   315  0109                     	;# 
   316  010C                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  0185                     	;# 
   322  0187                     	;# 
   323  0188                     	;# 
   324  0189                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  0000                     	;# 
   328  0001                     	;# 
   329  0002                     	;# 
   330  0003                     	;# 
   331  0004                     	;# 
   332  0005                     	;# 
   333  0006                     	;# 
   334  0007                     	;# 
   335  0008                     	;# 
   336  0009                     	;# 
   337  000A                     	;# 
   338  000B                     	;# 
   339  000C                     	;# 
   340  000D                     	;# 
   341  000E                     	;# 
   342  000E                     	;# 
   343  000F                     	;# 
   344  0010                     	;# 
   345  0011                     	;# 
   346  0012                     	;# 
   347  0013                     	;# 
   348  0014                     	;# 
   349  0015                     	;# 
   350  0015                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001B                     	;# 
   358  001C                     	;# 
   359  001D                     	;# 
   360  001E                     	;# 
   361  001F                     	;# 
   362  0081                     	;# 
   363  0085                     	;# 
   364  0086                     	;# 
   365  0087                     	;# 
   366  0088                     	;# 
   367  0089                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  008F                     	;# 
   372  0090                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0093                     	;# 
   378  0094                     	;# 
   379  0095                     	;# 
   380  0096                     	;# 
   381  0097                     	;# 
   382  0098                     	;# 
   383  0099                     	;# 
   384  009A                     	;# 
   385  009B                     	;# 
   386  009C                     	;# 
   387  009D                     	;# 
   388  009E                     	;# 
   389  009F                     	;# 
   390  0105                     	;# 
   391  0107                     	;# 
   392  0108                     	;# 
   393  0109                     	;# 
   394  010C                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  0185                     	;# 
   400  0187                     	;# 
   401  0188                     	;# 
   402  0189                     	;# 
   403  018C                     	;# 
   404  018D                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  000E                     	;# 
   420  000E                     	;# 
   421  000F                     	;# 
   422  0010                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0014                     	;# 
   427  0015                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001D                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  0081                     	;# 
   441  0085                     	;# 
   442  0086                     	;# 
   443  0087                     	;# 
   444  0088                     	;# 
   445  0089                     	;# 
   446  008C                     	;# 
   447  008D                     	;# 
   448  008E                     	;# 
   449  008F                     	;# 
   450  0090                     	;# 
   451  0091                     	;# 
   452  0092                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0094                     	;# 
   457  0095                     	;# 
   458  0096                     	;# 
   459  0097                     	;# 
   460  0098                     	;# 
   461  0099                     	;# 
   462  009A                     	;# 
   463  009B                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  009F                     	;# 
   468  0105                     	;# 
   469  0107                     	;# 
   470  0108                     	;# 
   471  0109                     	;# 
   472  010C                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  0185                     	;# 
   478  0187                     	;# 
   479  0188                     	;# 
   480  0189                     	;# 
   481  018C                     	;# 
   482  018D                     	;# 
   483                           
   484                           	psect	strings
   485  1000                     __pstrings:
   486  1000                     stringtab:
   487  1000                     __stringtab:
   488                           
   489                           ;	String table - string pointers are 1 byte each
   490  1000  1BFF               	btfsc	btemp+1,7
   491  1001  280A               	ljmp	stringcode
   492  1002  1383               	bcf	3,7
   493  1003  187F               	btfsc	btemp+1,0
   494  1004  1783               	bsf	3,7
   495  1005  0800               	movf	0,w
   496  1006  0A84               	incf	4,f
   497  1007  1903               	skipnz
   498  1008  0AFF               	incf	btemp+1,f
   499  1009  0008               	return
   500  100A                     stringcode:
   501  100A                     stringdir:
   502  100A  3010               	movlw	high stringdir
   503  100B  008A               	movwf	10
   504  100C  0804               	movf	4,w
   505  100D  0A84               	incf	4,f
   506  100E  0782               	addwf	2,f
   507  100F                     __stringbase:
   508  100F  3400               	retlw	0
   509  1010                     __end_of__stringtab:
   510  1010                     __powers_:
   511  1010  3400               	retlw	0
   512  1011  3480               	retlw	128
   513  1012  343F               	retlw	63
   514  1013  3400               	retlw	0
   515  1014  3420               	retlw	32
   516  1015  3441               	retlw	65
   517  1016  3400               	retlw	0
   518  1017  34C8               	retlw	200
   519  1018  3442               	retlw	66
   520  1019  3400               	retlw	0
   521  101A  347A               	retlw	122
   522  101B  3444               	retlw	68
   523  101C  3440               	retlw	64
   524  101D  341C               	retlw	28
   525  101E  3446               	retlw	70
   526  101F  3450               	retlw	80
   527  1020  34C3               	retlw	195
   528  1021  3447               	retlw	71
   529  1022  3424               	retlw	36
   530  1023  3474               	retlw	116
   531  1024  3449               	retlw	73
   532  1025  3497               	retlw	151
   533  1026  3418               	retlw	24
   534  1027  344B               	retlw	75
   535  1028  34BC               	retlw	188
   536  1029  34BE               	retlw	190
   537  102A  344C               	retlw	76
   538  102B  346B               	retlw	107
   539  102C  346E               	retlw	110
   540  102D  344E               	retlw	78
   541  102E  3403               	retlw	3
   542  102F  3415               	retlw	21
   543  1030  3450               	retlw	80
   544  1031  3479               	retlw	121
   545  1032  34AD               	retlw	173
   546  1033  3460               	retlw	96
   547  1034  34F3               	retlw	243
   548  1035  3449               	retlw	73
   549  1036  3471               	retlw	113
   550  1037                     __end_of__powers_:
   551  1037                     __npowers_:
   552  1037  3400               	retlw	0
   553  1038  3480               	retlw	128
   554  1039  343F               	retlw	63
   555  103A  34CD               	retlw	205
   556  103B  34CC               	retlw	204
   557  103C  343D               	retlw	61
   558  103D  34D7               	retlw	215
   559  103E  3423               	retlw	35
   560  103F  343C               	retlw	60
   561  1040  3412               	retlw	18
   562  1041  3483               	retlw	131
   563  1042  343A               	retlw	58
   564  1043  34B7               	retlw	183
   565  1044  34D1               	retlw	209
   566  1045  3438               	retlw	56
   567  1046  34C6               	retlw	198
   568  1047  3427               	retlw	39
   569  1048  3437               	retlw	55
   570  1049  3438               	retlw	56
   571  104A  3486               	retlw	134
   572  104B  3435               	retlw	53
   573  104C  34C0               	retlw	192
   574  104D  34D6               	retlw	214
   575  104E  3433               	retlw	51
   576  104F  34CC               	retlw	204
   577  1050  342B               	retlw	43
   578  1051  3432               	retlw	50
   579  1052  3470               	retlw	112
   580  1053  3489               	retlw	137
   581  1054  3430               	retlw	48
   582  1055  34E7               	retlw	231
   583  1056  34DB               	retlw	219
   584  1057  342E               	retlw	46
   585  1058  34E5               	retlw	229
   586  1059  343C               	retlw	60
   587  105A  341E               	retlw	30
   588  105B  3442               	retlw	66
   589  105C  34A2               	retlw	162
   590  105D  340D               	retlw	13
   591  105E                     __end_of__npowers_:
   592  105E                     _dpowers:
   593  105E  3401               	retlw	1
   594  105F  3400               	retlw	0
   595  1060  3400               	retlw	0
   596  1061  3400               	retlw	0
   597  1062  340A               	retlw	10
   598  1063  3400               	retlw	0
   599  1064  3400               	retlw	0
   600  1065  3400               	retlw	0
   601  1066  3464               	retlw	100
   602  1067  3400               	retlw	0
   603  1068  3400               	retlw	0
   604  1069  3400               	retlw	0
   605  106A  34E8               	retlw	232
   606  106B  3403               	retlw	3
   607  106C  3400               	retlw	0
   608  106D  3400               	retlw	0
   609  106E  3410               	retlw	16
   610  106F  3427               	retlw	39
   611  1070  3400               	retlw	0
   612  1071  3400               	retlw	0
   613  1072  34A0               	retlw	160
   614  1073  3486               	retlw	134
   615  1074  3401               	retlw	1
   616  1075  3400               	retlw	0
   617  1076  3440               	retlw	64
   618  1077  3442               	retlw	66
   619  1078  340F               	retlw	15
   620  1079  3400               	retlw	0
   621  107A  3480               	retlw	128
   622  107B  3496               	retlw	150
   623  107C  3498               	retlw	152
   624  107D  3400               	retlw	0
   625  107E  3400               	retlw	0
   626  107F  34E1               	retlw	225
   627  1080  34F5               	retlw	245
   628  1081  3405               	retlw	5
   629  1082  3400               	retlw	0
   630  1083  34CA               	retlw	202
   631  1084  349A               	retlw	154
   632  1085  343B               	retlw	59
   633  1086                     __end_of_dpowers:
   634  0019                     _TXREG	set	25
   635  0018                     _RCSTAbits	set	24
   636  001F                     _ADCON0	set	31
   637  001E                     _ADRESH	set	30
   638  001F                     _ADCON0bits	set	31
   639  0005                     _PORTA	set	5
   640  0008                     _PORTD	set	8
   641  0007                     _PORTC	set	7
   642  0006                     _PORTB	set	6
   643  0009                     _PORTE	set	9
   644  000C                     _PIR1bits	set	12
   645  000B                     _INTCONbits	set	11
   646  001A                     _RCREG	set	26
   647  0049                     _RE1	set	73
   648  0048                     _RE0	set	72
   649  0065                     _RCIF	set	101
   650  0087                     _TRISCbits	set	135
   651  0098                     _TXSTAbits	set	152
   652  0099                     _SPBRG	set	153
   653  009F                     _ADCON1	set	159
   654  0085                     _TRISA	set	133
   655  0088                     _TRISD	set	136
   656  0087                     _TRISC	set	135
   657  0086                     _TRISB	set	134
   658  0089                     _TRISE	set	137
   659  008C                     _PIE1bits	set	140
   660  04C1                     _TRMT	set	1217
   661  0189                     _ANSELH	set	393
   662  0188                     _ANSEL	set	392
   663  1086                     STR_1:
   664  1086  3456               	retlw	86	;'V'
   665  1087  3431               	retlw	49	;'1'
   666  1088  3420               	retlw	32	;' '
   667  1089  3420               	retlw	32	;' '
   668  108A  3420               	retlw	32	;' '
   669  108B  3420               	retlw	32	;' '
   670  108C  3420               	retlw	32	;' '
   671  108D  3456               	retlw	86	;'V'
   672  108E  3432               	retlw	50	;'2'
   673  108F  3420               	retlw	32	;' '
   674  1090  3420               	retlw	32	;' '
   675  1091  3420               	retlw	32	;' '
   676  1092  3443               	retlw	67	;'C'
   677  1093  344F               	retlw	79	;'O'
   678  1094  344E               	retlw	78	;'N'
   679  1095  3454               	retlw	84	;'T'
   680  1096  3420               	retlw	32	;' '
   681  1097  340A               	retlw	10
   682  1098  3400               	retlw	0
   683  1099                     STR_2:
   684  1099  3425               	retlw	37	;'%'
   685  109A  3431               	retlw	49	;'1'
   686  109B  342E               	retlw	46	;'.'
   687  109C  3432               	retlw	50	;'2'
   688  109D  3466               	retlw	102	;'f'
   689  109E  3420               	retlw	32	;' '
   690  109F  3420               	retlw	32	;' '
   691  10A0  3420               	retlw	32	;' '
   692  10A1  3425               	retlw	37	;'%'
   693  10A2  3431               	retlw	49	;'1'
   694  10A3  342E               	retlw	46	;'.'
   695  10A4  3432               	retlw	50	;'2'
   696  10A5  3466               	retlw	102	;'f'
   697  10A6  3420               	retlw	32	;' '
   698  10A7  3425               	retlw	37	;'%'
   699  10A8  3433               	retlw	51	;'3'
   700  10A9  3464               	retlw	100	;'d'
   701  10AA  3400               	retlw	0
   702  10AB                     STR_3:
   703  10AB  3456               	retlw	86	;'V'
   704  10AC  3431               	retlw	49	;'1'
   705  10AD  3420               	retlw	32	;' '
   706  10AE  3420               	retlw	32	;' '
   707  10AF  3420               	retlw	32	;' '
   708  10B0  3456               	retlw	86	;'V'
   709  10B1  3432               	retlw	50	;'2'
   710  10B2  3420               	retlw	32	;' '
   711  10B3  3420               	retlw	32	;' '
   712  10B4  3420               	retlw	32	;' '
   713  10B5  3420               	retlw	32	;' '
   714  10B6  3443               	retlw	67	;'C'
   715  10B7  344F               	retlw	79	;'O'
   716  10B8  344E               	retlw	78	;'N'
   717  10B9  3454               	retlw	84	;'T'
   718  10BA  3400               	retlw	0
   719                           
   720                           	psect	cinit
   721  000F                     start_initialization:	
   722                           ; #config settings
   723                           
   724  000F                     __initialization:
   725                           
   726                           ; Clear objects allocated to COMMON
   727  000F  01FB               	clrf	__pbssCOMMON& (0+127)
   728                           
   729                           ; Clear objects allocated to BANK0
   730  0010  1283               	bcf	3,5	;RP0=0, select bank0
   731  0011  1303               	bcf	3,6	;RP1=0, select bank0
   732  0012  01ED               	clrf	__pbssBANK0& (0+127)
   733  0013  01EE               	clrf	(__pbssBANK0+1)& (0+127)
   734                           
   735                           ; Clear objects allocated to BANK1
   736  0014  1383               	bcf	3,7	;select IRP bank0
   737  0015  30BC               	movlw	low __pbssBANK1
   738  0016  0084               	movwf	4
   739  0017  30D6               	movlw	low (__pbssBANK1+26)
   740  0018  160A  118A  20BC  120A  118A  	fcall	clear_ram0
   741  001D                     end_of_initialization:	
   742                           ;End of C runtime variable initialization code
   743                           
   744  001D                     __end_of__initialization:
   745  001D  0183               	clrf	3
   746  001E  120A  118A  2ED5   	ljmp	_main	;jump to C main() function
   747                           
   748                           	psect	bssCOMMON
   749  007B                     __pbssCOMMON:
   750  007B                     _valor_adc:
   751  007B                     	ds	1
   752                           
   753                           	psect	bssBANK0
   754  006D                     __pbssBANK0:
   755  006D                     _recibido:
   756  006D                     	ds	1
   757  006E                     _contador:
   758  006E                     	ds	1
   759                           
   760                           	psect	bssBANK1
   761  00BC                     __pbssBANK1:
   762  00BC                     _V2:
   763  00BC                     	ds	3
   764  00BF                     _V1:
   765  00BF                     	ds	3
   766  00C2                     _pantalla:
   767  00C2                     	ds	20
   768                           
   769                           	psect	clrtext
   770  10BC                     clear_ram0:	
   771                           ;	Called with FSR containing the base address, and
   772                           ;	W with the last address+1
   773                           
   774  10BC  0064               	clrwdt	;clear the watchdog before getting into this loop
   775  10BD                     clrloop0:
   776  10BD  0180               	clrf	0	;clear RAM location pointed to by FSR
   777  10BE  0A84               	incf	4,f	;increment pointer
   778  10BF  0604               	xorwf	4,w	;XOR with final address
   779  10C0  1903               	btfsc	3,2	;have we reached the end yet?
   780  10C1  3400               	retlw	0	;all done for this memory range, return
   781  10C2  0604               	xorwf	4,w	;XOR again to restore value
   782  10C3  28BD               	goto	clrloop0	;do the next byte
   783                           
   784                           	psect	cstackBANK1
   785  00A0                     __pcstackBANK1:
   786  00A0                     _sprintf$1172:
   787                           
   788                           ; 3 bytes @ 0x0
   789  00A0                     	ds	3
   790  00A3                     sprintf@ap:
   791                           
   792                           ; 1 bytes @ 0x3
   793  00A3                     	ds	1
   794  00A4                     sprintf@flag:
   795                           
   796                           ; 2 bytes @ 0x4
   797  00A4                     	ds	2
   798  00A6                     sprintf@width:
   799                           
   800                           ; 2 bytes @ 0x6
   801  00A6                     	ds	2
   802  00A8                     sprintf@tmpval:
   803                           
   804                           ; 4 bytes @ 0x8
   805  00A8                     	ds	4
   806  00AC                     sprintf@val:
   807                           
   808                           ; 4 bytes @ 0xC
   809  00AC                     	ds	4
   810  00B0                     sprintf@eexp:
   811                           
   812                           ; 2 bytes @ 0x10
   813  00B0                     	ds	2
   814  00B2                     sprintf@fval:
   815                           
   816                           ; 3 bytes @ 0x12
   817  00B2                     	ds	3
   818  00B5                     sprintf@sp:
   819                           
   820                           ; 1 bytes @ 0x15
   821  00B5                     	ds	1
   822  00B6                     sprintf@prec:
   823                           
   824                           ; 2 bytes @ 0x16
   825  00B6                     	ds	2
   826  00B8                     sprintf@c:
   827                           
   828                           ; 1 bytes @ 0x18
   829  00B8                     	ds	1
   830  00B9                     ??_main:
   831                           
   832                           ; 1 bytes @ 0x19
   833  00B9                     	ds	3
   834                           
   835                           	psect	cstackCOMMON
   836  0070                     __pcstackCOMMON:
   837  0070                     ?_isdigit:
   838  0070                     ?_setup:	
   839                           ; 1 bit 
   840                           
   841  0070                     ?_initADC:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ?_LCD_Init:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ?_LCD_clear:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ?_Set_Baud_Rate:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ?_Init_Transmit:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ?_Init_Receive:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0070                     ?_USART_Write:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_ADC_Select:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ?_LCD_Port:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?_ISR:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ??_ISR:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?_main:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ?_LCD_Write_Char:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0070                     ?_LCD_Command:	
   881                           ; 1 bytes @ 0x0
   882                           
   883                           
   884                           ; 1 bytes @ 0x0
   885  0070                     	ds	2
   886  0072                     ?___ftge:
   887  0072                     ??_setup:	
   888                           ; 1 bit 
   889                           
   890  0072                     ??_initADC:	
   891                           ; 1 bytes @ 0x2
   892                           
   893  0072                     ??_Set_Baud_Rate:	
   894                           ; 1 bytes @ 0x2
   895                           
   896  0072                     ??_Init_Transmit:	
   897                           ; 1 bytes @ 0x2
   898                           
   899  0072                     ??_Init_Receive:	
   900                           ; 1 bytes @ 0x2
   901                           
   902  0072                     ??_USART_Write:	
   903                           ; 1 bytes @ 0x2
   904                           
   905  0072                     ??_ADC_Select:	
   906                           ; 1 bytes @ 0x2
   907                           
   908  0072                     ??_LCD_Port:	
   909                           ; 1 bytes @ 0x2
   910                           
   911  0072                     ??_isdigit:	
   912                           ; 1 bytes @ 0x2
   913                           
   914  0072                     ?___wmul:	
   915                           ; 1 bytes @ 0x2
   916                           
   917  0072                     ?___awmod:	
   918                           ; 2 bytes @ 0x2
   919                           
   920  0072                     ?___lwmod:	
   921                           ; 2 bytes @ 0x2
   922                           
   923  0072                     ?___ftpack:	
   924                           ; 2 bytes @ 0x2
   925                           
   926  0072                     ?___ftneg:	
   927                           ; 3 bytes @ 0x2
   928                           
   929  0072                     ?__tdiv_to_l_:	
   930                           ; 3 bytes @ 0x2
   931                           
   932  0072                     ?__div_to_l_:	
   933                           ; 4 bytes @ 0x2
   934                           
   935  0072                     ?___lldiv:	
   936                           ; 4 bytes @ 0x2
   937                           
   938  0072                     LCD_Port@a:	
   939                           ; 4 bytes @ 0x2
   940                           
   941  0072                     USART_Write@a:	
   942                           ; 1 bytes @ 0x2
   943                           
   944  0072                     _isdigit$978:	
   945                           ; 1 bytes @ 0x2
   946                           
   947  0072                     ___wmul@multiplier:	
   948                           ; 1 bytes @ 0x2
   949                           
   950  0072                     ___awmod@divisor:	
   951                           ; 2 bytes @ 0x2
   952                           
   953  0072                     ___lwmod@divisor:	
   954                           ; 2 bytes @ 0x2
   955                           
   956  0072                     __div_to_l_@f1:	
   957                           ; 2 bytes @ 0x2
   958                           
   959  0072                     ___ftpack@arg:	
   960                           ; 3 bytes @ 0x2
   961                           
   962  0072                     __tdiv_to_l_@f1:	
   963                           ; 3 bytes @ 0x2
   964                           
   965  0072                     ___ftge@ff1:	
   966                           ; 3 bytes @ 0x2
   967                           
   968  0072                     ___ftneg@f1:	
   969                           ; 3 bytes @ 0x2
   970                           
   971  0072                     ___lldiv@divisor:	
   972                           ; 3 bytes @ 0x2
   973                           
   974                           
   975                           ; 4 bytes @ 0x2
   976  0072                     	ds	1
   977  0073                     ?_USART_Write_String:
   978  0073                     ??_LCD_Write_Char:	
   979                           ; 1 bytes @ 0x3
   980                           
   981  0073                     ??_LCD_Command:	
   982                           ; 1 bytes @ 0x3
   983                           
   984  0073                     isdigit@c:	
   985                           ; 1 bytes @ 0x3
   986                           
   987  0073                     USART_Write_String@a:	
   988                           ; 1 bytes @ 0x3
   989                           
   990                           
   991                           ; 2 bytes @ 0x3
   992  0073                     	ds	1
   993  0074                     LCD_Write_Char@a:
   994  0074                     ADC_Select@a:	
   995                           ; 1 bytes @ 0x4
   996                           
   997  0074                     ___wmul@multiplicand:	
   998                           ; 1 bytes @ 0x4
   999                           
  1000  0074                     ___awmod@dividend:	
  1001                           ; 2 bytes @ 0x4
  1002                           
  1003  0074                     ___lwmod@dividend:	
  1004                           ; 2 bytes @ 0x4
  1005                           
  1006                           
  1007                           ; 2 bytes @ 0x4
  1008  0074                     	ds	1
  1009  0075                     ??_USART_Write_String:
  1010  0075                     ?_LCD_Write_String:	
  1011                           ; 1 bytes @ 0x5
  1012                           
  1013  0075                     ??___ftneg:	
  1014                           ; 1 bytes @ 0x5
  1015                           
  1016  0075                     LCD_Command@a:	
  1017                           ; 1 bytes @ 0x5
  1018                           
  1019  0075                     ___ftpack@exp:	
  1020                           ; 1 bytes @ 0x5
  1021                           
  1022  0075                     LCD_Write_String@a:	
  1023                           ; 1 bytes @ 0x5
  1024                           
  1025  0075                     __div_to_l_@f2:	
  1026                           ; 2 bytes @ 0x5
  1027                           
  1028  0075                     __tdiv_to_l_@f2:	
  1029                           ; 3 bytes @ 0x5
  1030                           
  1031  0075                     ___ftge@ff2:	
  1032                           ; 3 bytes @ 0x5
  1033                           
  1034                           
  1035                           ; 3 bytes @ 0x5
  1036  0075                     	ds	1
  1037  0076                     ??_LCD_Init:
  1038  0076                     ??_LCD_clear:	
  1039                           ; 1 bytes @ 0x6
  1040                           
  1041  0076                     ?_LCD_Set_Cursor:	
  1042                           ; 1 bytes @ 0x6
  1043                           
  1044  0076                     ??___wmul:	
  1045                           ; 1 bytes @ 0x6
  1046                           
  1047  0076                     ??___awmod:	
  1048                           ; 1 bytes @ 0x6
  1049                           
  1050  0076                     ??___lwmod:	
  1051                           ; 1 bytes @ 0x6
  1052                           
  1053  0076                     LCD_Set_Cursor@y:	
  1054                           ; 1 bytes @ 0x6
  1055                           
  1056  0076                     USART_Write_String@i:	
  1057                           ; 1 bytes @ 0x6
  1058                           
  1059  0076                     ___ftpack@sign:	
  1060                           ; 1 bytes @ 0x6
  1061                           
  1062  0076                     ___wmul@product:	
  1063                           ; 1 bytes @ 0x6
  1064                           
  1065  0076                     ___lldiv@dividend:	
  1066                           ; 2 bytes @ 0x6
  1067                           
  1068                           
  1069                           ; 4 bytes @ 0x6
  1070  0076                     	ds	1
  1071  0077                     ??_LCD_Set_Cursor:
  1072  0077                     ??_LCD_Write_String:	
  1073                           ; 1 bytes @ 0x7
  1074                           
  1075  0077                     ??___ftpack:	
  1076                           ; 1 bytes @ 0x7
  1077                           
  1078  0077                     ___awmod@counter:	
  1079                           ; 1 bytes @ 0x7
  1080                           
  1081  0077                     ___lwmod@counter:	
  1082                           ; 1 bytes @ 0x7
  1083                           
  1084                           
  1085                           ; 1 bytes @ 0x7
  1086  0077                     	ds	1
  1087  0078                     ??___ftge:
  1088  0078                     ??___lwdiv:	
  1089                           ; 1 bytes @ 0x8
  1090                           
  1091  0078                     LCD_Set_Cursor@x:	
  1092                           ; 1 bytes @ 0x8
  1093                           
  1094  0078                     ___awmod@sign:	
  1095                           ; 1 bytes @ 0x8
  1096                           
  1097                           
  1098                           ; 1 bytes @ 0x8
  1099  0078                     	ds	1
  1100  0079                     ??___awdiv:
  1101  0079                     LCD_Set_Cursor@a:	
  1102                           ; 1 bytes @ 0x9
  1103                           
  1104                           
  1105                           ; 1 bytes @ 0x9
  1106  0079                     	ds	1
  1107  007A                     ??___bmul:
  1108  007A                     ??___lldiv:	
  1109                           ; 1 bytes @ 0xA
  1110                           
  1111  007A                     ??___lltoft:	
  1112                           ; 1 bytes @ 0xA
  1113                           
  1114  007A                     ___awtoft@sign:	
  1115                           ; 1 bytes @ 0xA
  1116                           
  1117                           
  1118                           ; 1 bytes @ 0xA
  1119  007A                     	ds	1
  1120  007B                     ??___ftsub:
  1121                           
  1122                           	psect	cstackBANK0
  1123  0020                     __pcstackBANK0:	
  1124                           ; 1 bytes @ 0xB
  1125                           
  1126  0020                     ??__tdiv_to_l_:
  1127  0020                     ??__div_to_l_:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130  0020                     ?___awdiv:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133  0020                     ?___lwdiv:	
  1134                           ; 2 bytes @ 0x0
  1135                           
  1136  0020                     ?___awtoft:	
  1137                           ; 2 bytes @ 0x0
  1138                           
  1139  0020                     ?___lltoft:	
  1140                           ; 3 bytes @ 0x0
  1141                           
  1142  0020                     LCD_Write_String@i:	
  1143                           ; 3 bytes @ 0x0
  1144                           
  1145  0020                     ___awdiv@divisor:	
  1146                           ; 2 bytes @ 0x0
  1147                           
  1148  0020                     ___awtoft@c:	
  1149                           ; 2 bytes @ 0x0
  1150                           
  1151  0020                     ___lwdiv@divisor:	
  1152                           ; 2 bytes @ 0x0
  1153                           
  1154  0020                     ___lldiv@quotient:	
  1155                           ; 2 bytes @ 0x0
  1156                           
  1157  0020                     ___lltoft@c:	
  1158                           ; 4 bytes @ 0x0
  1159                           
  1160                           
  1161                           ; 4 bytes @ 0x0
  1162  0020                     	ds	2
  1163  0022                     ___awdiv@dividend:
  1164  0022                     ___lwdiv@dividend:	
  1165                           ; 2 bytes @ 0x2
  1166                           
  1167                           
  1168                           ; 2 bytes @ 0x2
  1169  0022                     	ds	1
  1170  0023                     ??___awtoft:
  1171                           
  1172                           ; 1 bytes @ 0x3
  1173  0023                     	ds	1
  1174  0024                     ___lldiv@counter:
  1175  0024                     ___awdiv@counter:	
  1176                           ; 1 bytes @ 0x4
  1177                           
  1178  0024                     ___lltoft@exp:	
  1179                           ; 1 bytes @ 0x4
  1180                           
  1181  0024                     ___lwdiv@counter:	
  1182                           ; 1 bytes @ 0x4
  1183                           
  1184  0024                     __tdiv_to_l_@quot:	
  1185                           ; 1 bytes @ 0x4
  1186                           
  1187                           
  1188                           ; 4 bytes @ 0x4
  1189  0024                     	ds	1
  1190  0025                     ?___llmod:
  1191  0025                     ___awdiv@sign:	
  1192                           ; 4 bytes @ 0x5
  1193                           
  1194  0025                     ___lwdiv@quotient:	
  1195                           ; 1 bytes @ 0x5
  1196                           
  1197  0025                     ___llmod@divisor:	
  1198                           ; 2 bytes @ 0x5
  1199                           
  1200                           
  1201                           ; 4 bytes @ 0x5
  1202  0025                     	ds	1
  1203  0026                     ___awdiv@quotient:
  1204                           
  1205                           ; 2 bytes @ 0x6
  1206  0026                     	ds	2
  1207  0028                     ?___bmul:
  1208  0028                     ___bmul@multiplicand:	
  1209                           ; 1 bytes @ 0x8
  1210                           
  1211  0028                     __tdiv_to_l_@cntr:	
  1212                           ; 1 bytes @ 0x8
  1213                           
  1214  0028                     __div_to_l_@quot:	
  1215                           ; 1 bytes @ 0x8
  1216                           
  1217                           
  1218                           ; 4 bytes @ 0x8
  1219  0028                     	ds	1
  1220  0029                     ___bmul@product:
  1221  0029                     __tdiv_to_l_@exp1:	
  1222                           ; 1 bytes @ 0x9
  1223                           
  1224  0029                     ___llmod@dividend:	
  1225                           ; 1 bytes @ 0x9
  1226                           
  1227                           
  1228                           ; 4 bytes @ 0x9
  1229  0029                     	ds	1
  1230  002A                     ___bmul@multiplier:
  1231                           
  1232                           ; 1 bytes @ 0xA
  1233  002A                     	ds	1
  1234  002B                     ?___ftmul:
  1235  002B                     ___ftmul@f1:	
  1236                           ; 3 bytes @ 0xB
  1237                           
  1238                           
  1239                           ; 3 bytes @ 0xB
  1240  002B                     	ds	1
  1241  002C                     __div_to_l_@cntr:
  1242                           
  1243                           ; 1 bytes @ 0xC
  1244  002C                     	ds	1
  1245  002D                     ??___llmod:
  1246  002D                     __div_to_l_@exp1:	
  1247                           ; 1 bytes @ 0xD
  1248                           
  1249                           
  1250                           ; 1 bytes @ 0xD
  1251  002D                     	ds	1
  1252  002E                     ___llmod@counter:
  1253  002E                     ___ftmul@f2:	
  1254                           ; 1 bytes @ 0xE
  1255                           
  1256                           
  1257                           ; 3 bytes @ 0xE
  1258  002E                     	ds	3
  1259  0031                     ??___ftmul:
  1260                           
  1261                           ; 1 bytes @ 0x11
  1262  0031                     	ds	4
  1263  0035                     ___ftmul@exp:
  1264                           
  1265                           ; 1 bytes @ 0x15
  1266  0035                     	ds	1
  1267  0036                     ___ftmul@f3_as_product:
  1268                           
  1269                           ; 3 bytes @ 0x16
  1270  0036                     	ds	3
  1271  0039                     ___ftmul@cntr:
  1272                           
  1273                           ; 1 bytes @ 0x19
  1274  0039                     	ds	1
  1275  003A                     ___ftmul@sign:
  1276                           
  1277                           ; 1 bytes @ 0x1A
  1278  003A                     	ds	1
  1279  003B                     ?_LeerADC:
  1280  003B                     ?_fround:	
  1281                           ; 3 bytes @ 0x1B
  1282                           
  1283  003B                     ?_scale:	
  1284                           ; 3 bytes @ 0x1B
  1285                           
  1286                           
  1287                           ; 3 bytes @ 0x1B
  1288  003B                     	ds	3
  1289  003E                     ??_LeerADC:
  1290  003E                     ??_fround:	
  1291                           ; 1 bytes @ 0x1E
  1292                           
  1293  003E                     ??_scale:	
  1294                           ; 1 bytes @ 0x1E
  1295                           
  1296                           
  1297                           ; 1 bytes @ 0x1E
  1298  003E                     	ds	2
  1299  0040                     LeerADC@x:
  1300  0040                     _scale$1171:	
  1301                           ; 1 bytes @ 0x20
  1302                           
  1303                           
  1304                           ; 3 bytes @ 0x20
  1305  0040                     	ds	1
  1306  0041                     LeerADC@a:
  1307                           
  1308                           ; 3 bytes @ 0x21
  1309  0041                     	ds	2
  1310  0043                     scale@scl:
  1311                           
  1312                           ; 1 bytes @ 0x23
  1313  0043                     	ds	1
  1314  0044                     ?___fttol:
  1315  0044                     ___fttol@f1:	
  1316                           ; 4 bytes @ 0x24
  1317                           
  1318  0044                     _fround$1170:	
  1319                           ; 3 bytes @ 0x24
  1320                           
  1321                           
  1322                           ; 3 bytes @ 0x24
  1323  0044                     	ds	3
  1324  0047                     _fround$1169:
  1325                           
  1326                           ; 3 bytes @ 0x27
  1327  0047                     	ds	1
  1328  0048                     ??___fttol:
  1329                           
  1330                           ; 1 bytes @ 0x28
  1331  0048                     	ds	2
  1332  004A                     fround@prec:
  1333                           
  1334                           ; 1 bytes @ 0x2A
  1335  004A                     	ds	1
  1336  004B                     ?___ftadd:
  1337  004B                     ___ftadd@f1:	
  1338                           ; 3 bytes @ 0x2B
  1339                           
  1340                           
  1341                           ; 3 bytes @ 0x2B
  1342  004B                     	ds	1
  1343  004C                     ___fttol@sign1:
  1344                           
  1345                           ; 1 bytes @ 0x2C
  1346  004C                     	ds	1
  1347  004D                     ___fttol@lval:
  1348                           
  1349                           ; 4 bytes @ 0x2D
  1350  004D                     	ds	1
  1351  004E                     ___ftadd@f2:
  1352                           
  1353                           ; 3 bytes @ 0x2E
  1354  004E                     	ds	3
  1355  0051                     ??___ftadd:
  1356  0051                     ___fttol@exp1:	
  1357                           ; 1 bytes @ 0x31
  1358                           
  1359                           
  1360                           ; 1 bytes @ 0x31
  1361  0051                     	ds	4
  1362  0055                     ___ftadd@sign:
  1363                           
  1364                           ; 1 bytes @ 0x35
  1365  0055                     	ds	1
  1366  0056                     ___ftadd@exp2:
  1367                           
  1368                           ; 1 bytes @ 0x36
  1369  0056                     	ds	1
  1370  0057                     ___ftadd@exp1:
  1371                           
  1372                           ; 1 bytes @ 0x37
  1373  0057                     	ds	1
  1374  0058                     ?___ftsub:
  1375  0058                     ___ftsub@f2:	
  1376                           ; 3 bytes @ 0x38
  1377                           
  1378                           
  1379                           ; 3 bytes @ 0x38
  1380  0058                     	ds	3
  1381  005B                     ___ftsub@f1:
  1382                           
  1383                           ; 3 bytes @ 0x3B
  1384  005B                     	ds	3
  1385  005E                     ?_sprintf:
  1386  005E                     sprintf@f:	
  1387                           ; 2 bytes @ 0x3E
  1388                           
  1389                           
  1390                           ; 1 bytes @ 0x3E
  1391  005E                     	ds	9
  1392  0067                     ??_sprintf:
  1393                           
  1394                           ; 1 bytes @ 0x47
  1395  0067                     	ds	6
  1396                           
  1397                           	psect	maintext
  1398  06D5                     __pmaintext:	
  1399 ;;
  1400 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1401 ;;
  1402 ;; *************** function _main *****************
  1403 ;; Defined at:
  1404 ;;		line 92 in file "lab3_main.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;		None
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;		None
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : B00/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1418 ;;      Params:         0       0       0       0       0
  1419 ;;      Locals:         0       0       0       0       0
  1420 ;;      Temps:          0       0       3       0       0
  1421 ;;      Totals:         0       0       3       0       0
  1422 ;;Total ram usage:        3 bytes
  1423 ;; Hardware stack levels required when called:    5
  1424 ;; This function calls:
  1425 ;;		_Init_Receive
  1426 ;;		_Init_Transmit
  1427 ;;		_LCD_Init
  1428 ;;		_LCD_Set_Cursor
  1429 ;;		_LCD_Write_String
  1430 ;;		_LCD_clear
  1431 ;;		_LeerADC
  1432 ;;		_Set_Baud_Rate
  1433 ;;		_USART_Write
  1434 ;;		_USART_Write_String
  1435 ;;		_initADC
  1436 ;;		_setup
  1437 ;;		_sprintf
  1438 ;; This function is called by:
  1439 ;;		Startup code after reset
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           
  1444                           ;psect for function _main
  1445  06D5                     _main:
  1446  06D5                     l4021:	
  1447                           ;incstack = 0
  1448                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1449                           
  1450                           
  1451                           ;lab3_main.c: 95:     setup();
  1452  06D5  160A  158A  26A3  120A  118A  	fcall	_setup
  1453                           
  1454                           ;lab3_main.c: 96:     initADC();
  1455  06DA  160A  158A  259F  120A  118A  	fcall	_initADC
  1456                           
  1457                           ;lab3_main.c: 97:     LCD_Init();
  1458  06DF  160A  118A  2125  120A  118A  	fcall	_LCD_Init
  1459                           
  1460                           ;lab3_main.c: 98:     LCD_clear();
  1461  06E4  160A  158A  2592  120A  118A  	fcall	_LCD_clear
  1462                           
  1463                           ;lab3_main.c: 100:     Set_Baud_Rate();
  1464  06E9  160A  158A  2562  120A  118A  	fcall	_Set_Baud_Rate
  1465  06EE                     l4023:
  1466                           
  1467                           ;lab3_main.c: 102:     Init_Transmit();
  1468  06EE  120A  118A  27F0  120A  118A  	fcall	_Init_Transmit
  1469  06F3                     l4025:
  1470                           
  1471                           ;lab3_main.c: 104:     Init_Receive();
  1472  06F3  160A  158A  2574  120A  118A  	fcall	_Init_Receive
  1473  06F8                     l4027:
  1474                           
  1475                           ;lab3_main.c: 114:         V1 = LeerADC(0);
  1476  06F8  3000               	movlw	0
  1477  06F9  160A  118A  20DD  120A  118A  	fcall	_LeerADC
  1478  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  1479  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  1480  0700  083B               	movf	?_LeerADC,w
  1481  0701  1683               	bsf	3,5	;RP0=1, select bank1
  1482  0702  1303               	bcf	3,6	;RP1=0, select bank1
  1483  0703  00BF               	movwf	_V1^(0+128)
  1484  0704  1283               	bcf	3,5	;RP0=0, select bank0
  1485  0705  1303               	bcf	3,6	;RP1=0, select bank0
  1486  0706  083C               	movf	?_LeerADC+1,w
  1487  0707  1683               	bsf	3,5	;RP0=1, select bank1
  1488  0708  1303               	bcf	3,6	;RP1=0, select bank1
  1489  0709  00C0               	movwf	(_V1+1)^(0+128)
  1490  070A  1283               	bcf	3,5	;RP0=0, select bank0
  1491  070B  1303               	bcf	3,6	;RP1=0, select bank0
  1492  070C  083D               	movf	?_LeerADC+2,w
  1493  070D  1683               	bsf	3,5	;RP0=1, select bank1
  1494  070E  1303               	bcf	3,6	;RP1=0, select bank1
  1495  070F  00C1               	movwf	(_V1+2)^(0+128)
  1496  0710                     l4029:
  1497                           
  1498                           ;lab3_main.c: 115:         V2 = LeerADC(1);
  1499  0710  3001               	movlw	1
  1500  0711  160A  118A  20DD  120A  118A  	fcall	_LeerADC
  1501  0716  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0717  1303               	bcf	3,6	;RP1=0, select bank0
  1503  0718  083B               	movf	?_LeerADC,w
  1504  0719  1683               	bsf	3,5	;RP0=1, select bank1
  1505  071A  1303               	bcf	3,6	;RP1=0, select bank1
  1506  071B  00BC               	movwf	_V2^(0+128)
  1507  071C  1283               	bcf	3,5	;RP0=0, select bank0
  1508  071D  1303               	bcf	3,6	;RP1=0, select bank0
  1509  071E  083C               	movf	?_LeerADC+1,w
  1510  071F  1683               	bsf	3,5	;RP0=1, select bank1
  1511  0720  1303               	bcf	3,6	;RP1=0, select bank1
  1512  0721  00BD               	movwf	(_V2+1)^(0+128)
  1513  0722  1283               	bcf	3,5	;RP0=0, select bank0
  1514  0723  1303               	bcf	3,6	;RP1=0, select bank0
  1515  0724  083D               	movf	?_LeerADC+2,w
  1516  0725  1683               	bsf	3,5	;RP0=1, select bank1
  1517  0726  1303               	bcf	3,6	;RP1=0, select bank1
  1518  0727  00BE               	movwf	(_V2+2)^(0+128)
  1519  0728                     l4031:
  1520                           
  1521                           ;lab3_main.c: 117:         USART_Write_String("V1     V2   CONT \n");
  1522  0728  3077               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1523  0729  00F3               	movwf	USART_Write_String@a
  1524  072A  3080               	movlw	128
  1525  072B  00F4               	movwf	USART_Write_String@a+1
  1526  072C  160A  158A  2678  120A  118A  	fcall	_USART_Write_String
  1527  0731                     l4033:
  1528                           
  1529                           ;lab3_main.c: 118:         USART_Write(13);
  1530  0731  300D               	movlw	13
  1531  0732  160A  158A  2586  120A  118A  	fcall	_USART_Write
  1532  0737                     l4035:
  1533                           
  1534                           ;lab3_main.c: 119:         USART_Write(10);
  1535  0737  300A               	movlw	10
  1536  0738  160A  158A  2586  120A  118A  	fcall	_USART_Write
  1537  073D                     l4037:
  1538                           
  1539                           ;lab3_main.c: 120:         sprintf(pantalla, "%1.2f   %1.2f %3d", V1,V2,contador);
  1540  073D  308A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1541  073E  1683               	bsf	3,5	;RP0=1, select bank1
  1542  073F  1303               	bcf	3,6	;RP1=0, select bank1
  1543  0740  00B9               	movwf	??_main^(0+128)
  1544  0741  0839               	movf	??_main^(0+128),w
  1545  0742  1283               	bcf	3,5	;RP0=0, select bank0
  1546  0743  1303               	bcf	3,6	;RP1=0, select bank0
  1547  0744  00DE               	movwf	sprintf@f
  1548  0745  1683               	bsf	3,5	;RP0=1, select bank1
  1549  0746  1303               	bcf	3,6	;RP1=0, select bank1
  1550  0747  083F               	movf	_V1^(0+128),w
  1551  0748  1283               	bcf	3,5	;RP0=0, select bank0
  1552  0749  1303               	bcf	3,6	;RP1=0, select bank0
  1553  074A  00DF               	movwf	?_sprintf+1
  1554  074B  1683               	bsf	3,5	;RP0=1, select bank1
  1555  074C  1303               	bcf	3,6	;RP1=0, select bank1
  1556  074D  0840               	movf	(_V1+1)^(0+128),w
  1557  074E  1283               	bcf	3,5	;RP0=0, select bank0
  1558  074F  1303               	bcf	3,6	;RP1=0, select bank0
  1559  0750  00E0               	movwf	?_sprintf+2
  1560  0751  1683               	bsf	3,5	;RP0=1, select bank1
  1561  0752  1303               	bcf	3,6	;RP1=0, select bank1
  1562  0753  0841               	movf	(_V1+2)^(0+128),w
  1563  0754  1283               	bcf	3,5	;RP0=0, select bank0
  1564  0755  1303               	bcf	3,6	;RP1=0, select bank0
  1565  0756  00E1               	movwf	?_sprintf+3
  1566  0757  1683               	bsf	3,5	;RP0=1, select bank1
  1567  0758  1303               	bcf	3,6	;RP1=0, select bank1
  1568  0759  083C               	movf	_V2^(0+128),w
  1569  075A  1283               	bcf	3,5	;RP0=0, select bank0
  1570  075B  1303               	bcf	3,6	;RP1=0, select bank0
  1571  075C  00E2               	movwf	?_sprintf+4
  1572  075D  1683               	bsf	3,5	;RP0=1, select bank1
  1573  075E  1303               	bcf	3,6	;RP1=0, select bank1
  1574  075F  083D               	movf	(_V2+1)^(0+128),w
  1575  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1576  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1577  0762  00E3               	movwf	?_sprintf+5
  1578  0763  1683               	bsf	3,5	;RP0=1, select bank1
  1579  0764  1303               	bcf	3,6	;RP1=0, select bank1
  1580  0765  083E               	movf	(_V2+2)^(0+128),w
  1581  0766  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0767  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0768  00E4               	movwf	?_sprintf+6
  1584  0769  086E               	movf	_contador,w
  1585  076A  1683               	bsf	3,5	;RP0=1, select bank1
  1586  076B  1303               	bcf	3,6	;RP1=0, select bank1
  1587  076C  00BA               	movwf	(??_main+1)^(0+128)
  1588  076D  01BB               	clrf	((??_main+1)^(0+128)+1)
  1589  076E  083A               	movf	(??_main+1)^(0+128),w
  1590  076F  1283               	bcf	3,5	;RP0=0, select bank0
  1591  0770  1303               	bcf	3,6	;RP1=0, select bank0
  1592  0771  00E5               	movwf	?_sprintf+7
  1593  0772  1683               	bsf	3,5	;RP0=1, select bank1
  1594  0773  1303               	bcf	3,6	;RP1=0, select bank1
  1595  0774  083B               	movf	(??_main+2)^(0+128),w
  1596  0775  1283               	bcf	3,5	;RP0=0, select bank0
  1597  0776  1303               	bcf	3,6	;RP1=0, select bank0
  1598  0777  00E6               	movwf	?_sprintf+8
  1599  0778  30C2               	movlw	(low (_pantalla| 0))& (0+255)
  1600  0779  120A  158A  2518  120A  118A  	fcall	_sprintf
  1601  077E                     l4039:
  1602                           
  1603                           ;lab3_main.c: 122:         USART_Write_String(pantalla);
  1604  077E  30C2               	movlw	(low (_pantalla| 0))& (0+255)
  1605  077F  00F3               	movwf	USART_Write_String@a
  1606  0780  3000               	movlw	0
  1607  0781  00F4               	movwf	USART_Write_String@a+1
  1608  0782  160A  158A  2678  120A  118A  	fcall	_USART_Write_String
  1609  0787                     l4041:
  1610                           
  1611                           ;lab3_main.c: 124:         USART_Write(13);
  1612  0787  300D               	movlw	13
  1613  0788  160A  158A  2586  120A  118A  	fcall	_USART_Write
  1614  078D                     l4043:
  1615                           
  1616                           ;lab3_main.c: 125:         USART_Write(10);
  1617  078D  300A               	movlw	10
  1618  078E  160A  158A  2586  120A  118A  	fcall	_USART_Write
  1619  0793                     l4045:
  1620                           
  1621                           ;lab3_main.c: 127:         LCD_clear();
  1622  0793  160A  158A  2592  120A  118A  	fcall	_LCD_clear
  1623  0798                     l4047:
  1624                           
  1625                           ;lab3_main.c: 128:         LCD_Set_Cursor(1,1);
  1626  0798  01F6               	clrf	LCD_Set_Cursor@y
  1627  0799  0AF6               	incf	LCD_Set_Cursor@y,f
  1628  079A  3001               	movlw	1
  1629  079B  160A  158A  25E1  120A  118A  	fcall	_LCD_Set_Cursor
  1630  07A0                     l4049:
  1631                           
  1632                           ;lab3_main.c: 129:         LCD_Write_String("V1   V2    CONT");
  1633  07A0  309C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1634  07A1  00F5               	movwf	LCD_Write_String@a
  1635  07A2  3080               	movlw	128
  1636  07A3  00F6               	movwf	LCD_Write_String@a+1
  1637  07A4  160A  158A  2774  120A  118A  	fcall	_LCD_Write_String
  1638                           
  1639                           ;lab3_main.c: 130:         LCD_Set_Cursor(2,1);
  1640  07A9  01F6               	clrf	LCD_Set_Cursor@y
  1641  07AA  0AF6               	incf	LCD_Set_Cursor@y,f
  1642  07AB  3002               	movlw	2
  1643  07AC  160A  158A  25E1  120A  118A  	fcall	_LCD_Set_Cursor
  1644  07B1                     l4051:
  1645                           
  1646                           ;lab3_main.c: 131:         LCD_Write_String(pantalla);
  1647  07B1  30C2               	movlw	(low (_pantalla| 0))& (0+255)
  1648  07B2  00F5               	movwf	LCD_Write_String@a
  1649  07B3  3000               	movlw	0
  1650  07B4  00F6               	movwf	LCD_Write_String@a+1
  1651  07B5  160A  158A  2774  120A  118A  	fcall	_LCD_Write_String
  1652  07BA                     l4053:
  1653                           
  1654                           ;lab3_main.c: 133:         if(RCIF==1){
  1655  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  1656  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  1657  07BC  1E8C               	btfss	12,5	;volatile
  1658  07BD  2FBF               	goto	u5871
  1659  07BE  2FC0               	goto	u5870
  1660  07BF                     u5871:
  1661  07BF  2FDE               	goto	l4063
  1662  07C0                     u5870:
  1663  07C0                     l4055:
  1664                           
  1665                           ;lab3_main.c: 136:             recibido = RCREG;
  1666  07C0  081A               	movf	26,w	;volatile
  1667  07C1  1683               	bsf	3,5	;RP0=1, select bank1
  1668  07C2  1303               	bcf	3,6	;RP1=0, select bank1
  1669  07C3  00B9               	movwf	??_main^(0+128)
  1670  07C4  0839               	movf	??_main^(0+128),w
  1671  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  1672  07C6  1303               	bcf	3,6	;RP1=0, select bank0
  1673  07C7  00ED               	movwf	_recibido
  1674  07C8                     l4057:
  1675                           
  1676                           ;lab3_main.c: 137:             if(recibido == '+'){
  1677  07C8  302B               	movlw	43
  1678  07C9  066D               	xorwf	_recibido,w
  1679  07CA  1D03               	btfss	3,2
  1680  07CB  2FCD               	goto	u5881
  1681  07CC  2FCE               	goto	u5880
  1682  07CD                     u5881:
  1683  07CD  2FD6               	goto	l92
  1684  07CE                     u5880:
  1685  07CE                     l4059:
  1686                           
  1687                           ;lab3_main.c: 138:                 contador++;
  1688  07CE  3001               	movlw	1
  1689  07CF  1683               	bsf	3,5	;RP0=1, select bank1
  1690  07D0  1303               	bcf	3,6	;RP1=0, select bank1
  1691  07D1  00B9               	movwf	??_main^(0+128)
  1692  07D2  0839               	movf	??_main^(0+128),w
  1693  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1694  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1695  07D5  07EE               	addwf	_contador,f
  1696  07D6                     l92:	
  1697                           ;lab3_main.c: 139:             }
  1698                           
  1699                           
  1700                           ;lab3_main.c: 140:             if(recibido == '-'){
  1701  07D6  302D               	movlw	45
  1702  07D7  066D               	xorwf	_recibido,w
  1703  07D8  1D03               	btfss	3,2
  1704  07D9  2FDB               	goto	u5891
  1705  07DA  2FDC               	goto	u5890
  1706  07DB                     u5891:
  1707  07DB  2FDE               	goto	l4063
  1708  07DC                     u5890:
  1709  07DC                     l4061:
  1710                           
  1711                           ;lab3_main.c: 141:                 contador--;
  1712  07DC  3001               	movlw	1
  1713  07DD  02EE               	subwf	_contador,f
  1714  07DE                     l4063:
  1715                           
  1716                           ;lab3_main.c: 147:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1717  07DE  3006               	movlw	6
  1718  07DF  1683               	bsf	3,5	;RP0=1, select bank1
  1719  07E0  1303               	bcf	3,6	;RP1=0, select bank1
  1720  07E1  00BB               	movwf	(??_main^(0+128)+2)
  1721  07E2  3013               	movlw	19
  1722  07E3  00BA               	movwf	(??_main^(0+128)+1)
  1723  07E4  30AD               	movlw	173
  1724  07E5  00B9               	movwf	??_main^(0+128)
  1725  07E6                     u5907:
  1726  07E6  0BB9               	decfsz	??_main^(0+128),f
  1727  07E7  2FE6               	goto	u5907
  1728  07E8  0BBA               	decfsz	(??_main^(0+128)+1),f
  1729  07E9  2FE6               	goto	u5907
  1730  07EA  0BBB               	decfsz	(??_main^(0+128)+2),f
  1731  07EB  2FE6               	goto	u5907
  1732  07EC  2EF8               	goto	l4027
  1733  07ED  120A  118A  280C   	ljmp	start
  1734  07F0                     __end_of_main:
  1735                           
  1736                           	psect	text1
  1737  0D18                     __ptext1:	
  1738 ;; *************** function _sprintf *****************
  1739 ;; Defined at:
  1740 ;;		line 505 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  sp              1    wreg     PTR unsigned char 
  1743 ;;		 -> pantalla(20), 
  1744 ;;  f               1   62[BANK0 ] PTR const unsigned char 
  1745 ;;		 -> STR_2(18), 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  sp              1   21[BANK1 ] PTR unsigned char 
  1748 ;;		 -> pantalla(20), 
  1749 ;;  val             4   12[BANK1 ] unsigned long 
  1750 ;;  tmpval          4    8[BANK1 ] struct .
  1751 ;;  fval            3   18[BANK1 ] struct .
  1752 ;;  prec            2   22[BANK1 ] int 
  1753 ;;  eexp            2   16[BANK1 ] int 
  1754 ;;  width           2    6[BANK1 ] int 
  1755 ;;  flag            2    4[BANK1 ] unsigned short 
  1756 ;;  cp              2    0        PTR const unsigned char 
  1757 ;;  len             2    0        unsigned int 
  1758 ;;  c               1   24[BANK1 ] unsigned char 
  1759 ;;  ap              1    3[BANK1 ] PTR void [1]
  1760 ;;		 -> ?_sprintf(2), 
  1761 ;;  d               1    0        unsigned char 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  2   62[BANK0 ] int 
  1764 ;; Registers used:
  1765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1771 ;;      Params:         0       9       0       0       0
  1772 ;;      Locals:         0       0      25       0       0
  1773 ;;      Temps:          0       6       0       0       0
  1774 ;;      Totals:         0      15      25       0       0
  1775 ;;Total ram usage:       40 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    4
  1778 ;; This function calls:
  1779 ;;		___awdiv
  1780 ;;		___ftadd
  1781 ;;		___ftge
  1782 ;;		___ftmul
  1783 ;;		___ftneg
  1784 ;;		___ftsub
  1785 ;;		___fttol
  1786 ;;		___lldiv
  1787 ;;		___llmod
  1788 ;;		___lltoft
  1789 ;;		___wmul
  1790 ;;		__div_to_l_
  1791 ;;		__tdiv_to_l_
  1792 ;;		_fround
  1793 ;;		_isdigit
  1794 ;;		_scale
  1795 ;; This function is called by:
  1796 ;;		_main
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           
  1801                           ;psect for function _sprintf
  1802  0D18                     _sprintf:
  1803                           
  1804                           ;incstack = 0
  1805                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1806                           ;sprintf@sp stored from wreg
  1807  0D18  1683               	bsf	3,5	;RP0=1, select bank1
  1808  0D19  1303               	bcf	3,6	;RP1=0, select bank1
  1809  0D1A  00B5               	movwf	sprintf@sp^(0+128)
  1810  0D1B                     l3709:
  1811                           
  1812                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const c
      +                          har * f, ...);D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 506: {;D:\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\Microchip\xc8\v2.31\pi
      +                          c\sources\c90\common\doprnt.c: 512:  char c;;D:\Microchip\xc8\v2.31\pic\sources\c90\comm
      +                          on\doprnt.c: 514:  int width;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 51
      +                          7:  int prec;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsigned sho
      +                          rt flag;
  1813  0D1B  305F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1814  0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  1815  0D1D  1303               	bcf	3,6	;RP1=0, select bank0
  1816  0D1E  00E7               	movwf	??_sprintf
  1817  0D1F  0867               	movf	??_sprintf,w
  1818  0D20  1683               	bsf	3,5	;RP0=1, select bank1
  1819  0D21  1303               	bcf	3,6	;RP1=0, select bank1
  1820  0D22  00A3               	movwf	sprintf@ap^(0+128)
  1821  0D23                     L1:
  1822                           
  1823                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1824  0D23  120A  118A  2EB7   	goto	l3989
  1825  0D26                     l3711:
  1826                           
  1827                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  1828  0D26  3025               	movlw	37
  1829  0D27  0638               	xorwf	sprintf@c^(0+128),w
  1830  0D28  1903               	btfsc	3,2
  1831  0D29  2D2B               	goto	u5281
  1832  0D2A  2D2C               	goto	u5280
  1833  0D2B                     u5281:
  1834  0D2B  2D40               	goto	l3717
  1835  0D2C                     u5280:
  1836  0D2C                     l3713:
  1837                           
  1838                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;D:\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1839  0D2C  0838               	movf	sprintf@c^(0+128),w
  1840  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  1841  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  1842  0D2F  00E7               	movwf	??_sprintf
  1843  0D30  1683               	bsf	3,5	;RP0=1, select bank1
  1844  0D31  1303               	bcf	3,6	;RP1=0, select bank1
  1845  0D32  0835               	movf	sprintf@sp^(0+128),w
  1846  0D33  0084               	movwf	4
  1847  0D34  1283               	bcf	3,5	;RP0=0, select bank0
  1848  0D35  1303               	bcf	3,6	;RP1=0, select bank0
  1849  0D36  0867               	movf	??_sprintf,w
  1850  0D37  1383               	bcf	3,7	;select IRP bank0
  1851  0D38  0080               	movwf	0
  1852  0D39                     l3715:
  1853  0D39  3001               	movlw	1
  1854  0D3A  00E7               	movwf	??_sprintf
  1855  0D3B  0867               	movf	??_sprintf,w
  1856  0D3C  1683               	bsf	3,5	;RP0=1, select bank1
  1857  0D3D  1303               	bcf	3,6	;RP1=0, select bank1
  1858  0D3E  07B5               	addwf	sprintf@sp^(0+128),f
  1859                           
  1860                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1861  0D3F  2D23               	goto	L1
  1862  0D40                     l3717:
  1863                           
  1864                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1865  0D40  01A6               	clrf	sprintf@width^(0+128)
  1866  0D41  01A7               	clrf	(sprintf@width+1)^(0+128)
  1867                           
  1868                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1869  0D42  01A4               	clrf	sprintf@flag^(0+128)
  1870  0D43  01A5               	clrf	(sprintf@flag+1)^(0+128)
  1871  0D44                     l3719:
  1872                           
  1873                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit((unsigned)*f)
      +                          ) {
  1874  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  1875  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  1876  0D46  085E               	movf	sprintf@f,w
  1877  0D47  0084               	movwf	4
  1878  0D48  160A  118A  200A  120A  158A  	fcall	stringdir
  1879  0D4D  160A  158A  25AC  120A  158A  	fcall	_isdigit
  1880  0D52  1C03               	btfss	3,0
  1881  0D53  2D55               	goto	u5291
  1882  0D54  2D56               	goto	u5290
  1883  0D55                     u5291:
  1884  0D55  2DA0               	goto	l3731
  1885  0D56                     u5290:
  1886  0D56                     l3721:
  1887                           
  1888                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0;
  1889  0D56  1683               	bsf	3,5	;RP0=1, select bank1
  1890  0D57  1303               	bcf	3,6	;RP1=0, select bank1
  1891  0D58  01A6               	clrf	sprintf@width^(0+128)
  1892  0D59  01A7               	clrf	(sprintf@width+1)^(0+128)
  1893  0D5A                     l3723:
  1894                           
  1895                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *= 10;
  1896  0D5A  300A               	movlw	10
  1897  0D5B  00F2               	movwf	___wmul@multiplier
  1898  0D5C  3000               	movlw	0
  1899  0D5D  00F3               	movwf	___wmul@multiplier+1
  1900  0D5E  1683               	bsf	3,5	;RP0=1, select bank1
  1901  0D5F  1303               	bcf	3,6	;RP1=0, select bank1
  1902  0D60  0827               	movf	(sprintf@width+1)^(0+128),w
  1903  0D61  00F5               	movwf	___wmul@multiplicand+1
  1904  0D62  0826               	movf	sprintf@width^(0+128),w
  1905  0D63  00F4               	movwf	___wmul@multiplicand
  1906  0D64  160A  158A  262A  120A  158A  	fcall	___wmul
  1907  0D69  0873               	movf	?___wmul+1,w
  1908  0D6A  1683               	bsf	3,5	;RP0=1, select bank1
  1909  0D6B  1303               	bcf	3,6	;RP1=0, select bank1
  1910  0D6C  00A7               	movwf	(sprintf@width+1)^(0+128)
  1911  0D6D  0872               	movf	?___wmul,w
  1912  0D6E  00A6               	movwf	sprintf@width^(0+128)
  1913  0D6F                     l3725:
  1914                           
  1915                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width += *f++ - '0'
      +                          ;
  1916  0D6F  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0D70  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0D71  085E               	movf	sprintf@f,w
  1919  0D72  0084               	movwf	4
  1920  0D73  160A  118A  200A  120A  158A  	fcall	stringdir
  1921  0D78  3ED0               	addlw	208
  1922  0D79  00E7               	movwf	??_sprintf
  1923  0D7A  30FF               	movlw	255
  1924  0D7B  1803               	skipnc
  1925  0D7C  3000               	movlw	0
  1926  0D7D  00E8               	movwf	??_sprintf+1
  1927  0D7E  0867               	movf	??_sprintf,w
  1928  0D7F  1683               	bsf	3,5	;RP0=1, select bank1
  1929  0D80  1303               	bcf	3,6	;RP1=0, select bank1
  1930  0D81  07A6               	addwf	sprintf@width^(0+128),f
  1931  0D82  1803               	skipnc
  1932  0D83  0AA7               	incf	(sprintf@width+1)^(0+128),f
  1933  0D84  1283               	bcf	3,5	;RP0=0, select bank0
  1934  0D85  1303               	bcf	3,6	;RP1=0, select bank0
  1935  0D86  0868               	movf	??_sprintf+1,w
  1936  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  1937  0D88  1303               	bcf	3,6	;RP1=0, select bank1
  1938  0D89  07A7               	addwf	(sprintf@width+1)^(0+128),f
  1939  0D8A                     l3727:
  1940  0D8A  3001               	movlw	1
  1941  0D8B  1283               	bcf	3,5	;RP0=0, select bank0
  1942  0D8C  1303               	bcf	3,6	;RP1=0, select bank0
  1943  0D8D  00E7               	movwf	??_sprintf
  1944  0D8E  0867               	movf	??_sprintf,w
  1945  0D8F  07DE               	addwf	sprintf@f,f
  1946  0D90                     l3729:
  1947                           
  1948                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(isdigit((unsign
      +                          ed)*f));
  1949  0D90  085E               	movf	sprintf@f,w
  1950  0D91  0084               	movwf	4
  1951  0D92  160A  118A  200A  120A  158A  	fcall	stringdir
  1952  0D97  160A  158A  25AC  120A  158A  	fcall	_isdigit
  1953  0D9C  1803               	btfsc	3,0
  1954  0D9D  2D9F               	goto	u5301
  1955  0D9E  2DA0               	goto	u5300
  1956  0D9F                     u5301:
  1957  0D9F  2D5A               	goto	l3723
  1958  0DA0                     u5300:
  1959  0DA0                     l3731:
  1960                           
  1961                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '.') {
  1962  0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0DA1  1303               	bcf	3,6	;RP1=0, select bank0
  1964  0DA2  085E               	movf	sprintf@f,w
  1965  0DA3  0084               	movwf	4
  1966  0DA4  160A  118A  200A  120A  158A  	fcall	stringdir
  1967  0DA9  3A2E               	xorlw	46
  1968  0DAA  1D03               	skipz
  1969  0DAB  2DAD               	goto	u5311
  1970  0DAC  2DAE               	goto	u5310
  1971  0DAD                     u5311:
  1972  0DAD  2E04               	goto	l3747
  1973  0DAE                     u5310:
  1974  0DAE                     l3733:
  1975                           
  1976                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0x4000;
  1977  0DAE  1683               	bsf	3,5	;RP0=1, select bank1
  1978  0DAF  1303               	bcf	3,6	;RP1=0, select bank1
  1979  0DB0  1725               	bsf	(sprintf@flag^(0+128)+1),6
  1980  0DB1                     l3735:
  1981                           
  1982                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1983  0DB1  3001               	movlw	1
  1984  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  1985  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  1986  0DB4  00E7               	movwf	??_sprintf
  1987  0DB5  0867               	movf	??_sprintf,w
  1988  0DB6  07DE               	addwf	sprintf@f,f
  1989  0DB7                     l3737:
  1990                           
  1991                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1992  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  1993  0DB8  1303               	bcf	3,6	;RP1=0, select bank1
  1994  0DB9  01B6               	clrf	sprintf@prec^(0+128)
  1995  0DBA  01B7               	clrf	(sprintf@prec+1)^(0+128)
  1996                           
  1997                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigne
      +                          d)*f)) {
  1998  0DBB  2DF2               	goto	l3745
  1999  0DBC                     l3739:
  2000                           
  2001                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *= 10;
  2002  0DBC  300A               	movlw	10
  2003  0DBD  00F2               	movwf	___wmul@multiplier
  2004  0DBE  3000               	movlw	0
  2005  0DBF  00F3               	movwf	___wmul@multiplier+1
  2006  0DC0  1683               	bsf	3,5	;RP0=1, select bank1
  2007  0DC1  1303               	bcf	3,6	;RP1=0, select bank1
  2008  0DC2  0837               	movf	(sprintf@prec+1)^(0+128),w
  2009  0DC3  00F5               	movwf	___wmul@multiplicand+1
  2010  0DC4  0836               	movf	sprintf@prec^(0+128),w
  2011  0DC5  00F4               	movwf	___wmul@multiplicand
  2012  0DC6  160A  158A  262A  120A  158A  	fcall	___wmul
  2013  0DCB  0873               	movf	?___wmul+1,w
  2014  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  2015  0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  2016  0DCE  00B7               	movwf	(sprintf@prec+1)^(0+128)
  2017  0DCF  0872               	movf	?___wmul,w
  2018  0DD0  00B6               	movwf	sprintf@prec^(0+128)
  2019  0DD1                     l3741:
  2020                           
  2021                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec += *f++ - '0'
      +                          ;
  2022  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  2023  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  2024  0DD3  085E               	movf	sprintf@f,w
  2025  0DD4  0084               	movwf	4
  2026  0DD5  160A  118A  200A  120A  158A  	fcall	stringdir
  2027  0DDA  3ED0               	addlw	208
  2028  0DDB  00E7               	movwf	??_sprintf
  2029  0DDC  30FF               	movlw	255
  2030  0DDD  1803               	skipnc
  2031  0DDE  3000               	movlw	0
  2032  0DDF  00E8               	movwf	??_sprintf+1
  2033  0DE0  0867               	movf	??_sprintf,w
  2034  0DE1  1683               	bsf	3,5	;RP0=1, select bank1
  2035  0DE2  1303               	bcf	3,6	;RP1=0, select bank1
  2036  0DE3  07B6               	addwf	sprintf@prec^(0+128),f
  2037  0DE4  1803               	skipnc
  2038  0DE5  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  2039  0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  2040  0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  2041  0DE8  0868               	movf	??_sprintf+1,w
  2042  0DE9  1683               	bsf	3,5	;RP0=1, select bank1
  2043  0DEA  1303               	bcf	3,6	;RP1=0, select bank1
  2044  0DEB  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  2045  0DEC                     l3743:
  2046  0DEC  3001               	movlw	1
  2047  0DED  1283               	bcf	3,5	;RP0=0, select bank0
  2048  0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  2049  0DEF  00E7               	movwf	??_sprintf
  2050  0DF0  0867               	movf	??_sprintf,w
  2051  0DF1  07DE               	addwf	sprintf@f,f
  2052  0DF2                     l3745:
  2053                           
  2054                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigne
      +                          d)*f)) {
  2055  0DF2  1283               	bcf	3,5	;RP0=0, select bank0
  2056  0DF3  085E               	movf	sprintf@f,w
  2057  0DF4  0084               	movwf	4
  2058  0DF5  160A  118A  200A  120A  158A  	fcall	stringdir
  2059  0DFA  160A  158A  25AC  120A  158A  	fcall	_isdigit
  2060  0DFF  1803               	btfsc	3,0
  2061  0E00  2E02               	goto	u5321
  2062  0E01  2E03               	goto	u5320
  2063  0E02                     u5321:
  2064  0E02  2DBC               	goto	l3739
  2065  0E03                     u5320:
  2066  0E03  2E0E               	goto	l3753
  2067  0E04                     l3747:
  2068                           
  2069                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2070  0E04  1683               	bsf	3,5	;RP0=1, select bank1
  2071  0E05  1303               	bcf	3,6	;RP1=0, select bank1
  2072  0E06  01B6               	clrf	sprintf@prec^(0+128)
  2073  0E07  01B7               	clrf	(sprintf@prec+1)^(0+128)
  2074  0E08                     l3749:
  2075                           
  2076                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0x1000;
  2077  0E08  1625               	bsf	(sprintf@flag^(0+128)+1),4
  2078  0E09  2E0E               	goto	l3753
  2079  0E0A                     l357:	
  2080                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2081                           
  2082                           
  2083                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0x400;
  2084  0E0A  1683               	bsf	3,5	;RP0=1, select bank1
  2085  0E0B  1303               	bcf	3,6	;RP1=0, select bank1
  2086  0E0C  1525               	bsf	(sprintf@flag^(0+128)+1),2
  2087                           
  2088                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2089  0E0D  2E34               	goto	l3755
  2090  0E0E                     l3753:
  2091  0E0E  3001               	movlw	1
  2092  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0E10  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0E11  07DE               	addwf	sprintf@f,f
  2095  0E12  30FF               	movlw	-1
  2096  0E13  075E               	addwf	sprintf@f,w
  2097  0E14  0084               	movwf	4
  2098  0E15  160A  118A  200A  120A  158A  	fcall	stringdir
  2099  0E1A  1683               	bsf	3,5	;RP0=1, select bank1
  2100  0E1B  1303               	bcf	3,6	;RP1=0, select bank1
  2101  0E1C  00B8               	movwf	sprintf@c^(0+128)
  2102  0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  2103  0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  2104  0E1F  00E7               	movwf	??_sprintf
  2105  0E20  01E8               	clrf	??_sprintf+1
  2106                           
  2107                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2108                           ; Switch size 1, requested type "simple"
  2109                           ; Number of cases is 1, Range of values is 0 to 0
  2110                           ; switch strategies available:
  2111                           ; Name         Instructions Cycles
  2112                           ; simple_byte            4     3 (average)
  2113                           ; direct_byte           11     8 (fixed)
  2114                           ; jumptable            260     6 (fixed)
  2115                           ;	Chosen strategy is simple_byte
  2116  0E21  0868               	movf	??_sprintf+1,w
  2117  0E22  3A00               	xorlw	0	; case 0
  2118  0E23  1903               	skipnz
  2119  0E24  2E26               	goto	l4115
  2120  0E25  2D23               	goto	L1
  2121  0E26                     l4115:
  2122                           
  2123                           ; Switch size 1, requested type "simple"
  2124                           ; Number of cases is 4, Range of values is 0 to 105
  2125                           ; switch strategies available:
  2126                           ; Name         Instructions Cycles
  2127                           ; simple_byte           13     7 (average)
  2128                           ; jumptable            260     6 (fixed)
  2129                           ;	Chosen strategy is simple_byte
  2130  0E26  0867               	movf	??_sprintf,w
  2131  0E27  3A00               	xorlw	0	; case 0
  2132  0E28  1903               	skipnz
  2133  0E29  2FFD               	goto	L3
  2134  0E2A  3A64               	xorlw	100	; case 100
  2135  0E2B  1903               	skipnz
  2136  0E2C  2E34               	goto	l3755
  2137  0E2D  3A02               	xorlw	2	; case 102
  2138  0E2E  1903               	skipnz
  2139  0E2F  2E0A               	goto	l357
  2140  0E30  3A0F               	xorlw	15	; case 105
  2141  0E31  1903               	skipnz
  2142  0E32  2E34               	goto	l3755
  2143  0E33  2D23               	goto	L1
  2144  0E34                     l3755:
  2145                           
  2146                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & (0x700)) {
  2147  0E34  3000               	movlw	0
  2148  0E35  1683               	bsf	3,5	;RP0=1, select bank1
  2149  0E36  1303               	bcf	3,6	;RP1=0, select bank1
  2150  0E37  0524               	andwf	sprintf@flag^(0+128),w
  2151  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  2152  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  2153  0E3A  00E7               	movwf	??_sprintf
  2154  0E3B  3007               	movlw	7
  2155  0E3C  1683               	bsf	3,5	;RP0=1, select bank1
  2156  0E3D  1303               	bcf	3,6	;RP1=0, select bank1
  2157  0E3E  0525               	andwf	(sprintf@flag+1)^(0+128),w
  2158  0E3F  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0E40  1303               	bcf	3,6	;RP1=0, select bank0
  2160  0E41  00E8               	movwf	??_sprintf+1
  2161  0E42  0867               	movf	??_sprintf,w
  2162  0E43  0468               	iorwf	??_sprintf+1,w
  2163  0E44  1903               	btfsc	3,2
  2164  0E45  2E47               	goto	u5331
  2165  0E46  2E4A               	goto	u5330
  2166  0E47                     u5331:
  2167  0E47  120A  118A  2CAE   	goto	l3911
  2168  0E4A                     u5330:
  2169  0E4A                     l3757:
  2170                           
  2171                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag & 0x1000)
  2172  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  2173  0E4B  1303               	bcf	3,6	;RP1=0, select bank1
  2174  0E4C  1E25               	btfss	(sprintf@flag+1)^(0+128),4
  2175  0E4D  2E4F               	goto	u5341
  2176  0E4E  2E50               	goto	u5340
  2177  0E4F                     u5341:
  2178  0E4F  2E54               	goto	l3761
  2179  0E50                     u5340:
  2180  0E50                     l3759:
  2181                           
  2182                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6;
  2183  0E50  3006               	movlw	6
  2184  0E51  00B6               	movwf	sprintf@prec^(0+128)
  2185  0E52  3000               	movlw	0
  2186  0E53  00B7               	movwf	(sprintf@prec^(0+128)+1)
  2187  0E54                     l3761:
  2188                           
  2189                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*(double *)__va
      +                          _arg((*(double **)ap), (double)0));
  2190  0E54  0823               	movf	sprintf@ap^(0+128),w
  2191  0E55  0084               	movwf	4
  2192  0E56  1383               	bcf	3,7	;select IRP bank0
  2193  0E57  0800               	movf	0,w
  2194  0E58  00B2               	movwf	sprintf@fval^(0+128)
  2195  0E59  0A84               	incf	4,f
  2196  0E5A  0800               	movf	0,w
  2197  0E5B  00B3               	movwf	(sprintf@fval+1)^(0+128)
  2198  0E5C  0A84               	incf	4,f
  2199  0E5D  0800               	movf	0,w
  2200  0E5E  00B4               	movwf	(sprintf@fval+2)^(0+128)
  2201  0E5F                     l3763:
  2202  0E5F  3003               	movlw	3
  2203  0E60  1283               	bcf	3,5	;RP0=0, select bank0
  2204  0E61  1303               	bcf	3,6	;RP1=0, select bank0
  2205  0E62  00E7               	movwf	??_sprintf
  2206  0E63  0867               	movf	??_sprintf,w
  2207  0E64  1683               	bsf	3,5	;RP0=1, select bank1
  2208  0E65  1303               	bcf	3,6	;RP1=0, select bank1
  2209  0E66  07A3               	addwf	sprintf@ap^(0+128),f
  2210  0E67                     l3765:
  2211                           
  2212                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval < 0.0) {
  2213  0E67  0832               	movf	sprintf@fval^(0+128),w
  2214  0E68  00F2               	movwf	___ftge@ff1
  2215  0E69  0833               	movf	(sprintf@fval+1)^(0+128),w
  2216  0E6A  00F3               	movwf	___ftge@ff1+1
  2217  0E6B  0834               	movf	(sprintf@fval+2)^(0+128),w
  2218  0E6C  00F4               	movwf	___ftge@ff1+2
  2219  0E6D  3000               	movlw	0
  2220  0E6E  00F5               	movwf	___ftge@ff2
  2221  0E6F  3000               	movlw	0
  2222  0E70  00F6               	movwf	___ftge@ff2+1
  2223  0E71  3000               	movlw	0
  2224  0E72  00F7               	movwf	___ftge@ff2+2
  2225  0E73  160A  158A  2702  120A  158A  	fcall	___ftge
  2226  0E78  1803               	btfsc	3,0
  2227  0E79  2E7B               	goto	u5351
  2228  0E7A  2E7C               	goto	u5350
  2229  0E7B                     u5351:
  2230  0E7B  2E95               	goto	l3771
  2231  0E7C                     u5350:
  2232  0E7C                     l3767:
  2233                           
  2234                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -fval;
  2235  0E7C  1683               	bsf	3,5	;RP0=1, select bank1
  2236  0E7D  1303               	bcf	3,6	;RP1=0, select bank1
  2237  0E7E  0832               	movf	sprintf@fval^(0+128),w
  2238  0E7F  00F2               	movwf	___ftneg@f1
  2239  0E80  0833               	movf	(sprintf@fval+1)^(0+128),w
  2240  0E81  00F3               	movwf	___ftneg@f1+1
  2241  0E82  0834               	movf	(sprintf@fval+2)^(0+128),w
  2242  0E83  00F4               	movwf	___ftneg@f1+2
  2243  0E84  160A  158A  257C  120A  158A  	fcall	___ftneg
  2244  0E89  0872               	movf	?___ftneg,w
  2245  0E8A  1683               	bsf	3,5	;RP0=1, select bank1
  2246  0E8B  1303               	bcf	3,6	;RP1=0, select bank1
  2247  0E8C  00B2               	movwf	sprintf@fval^(0+128)
  2248  0E8D  0873               	movf	?___ftneg+1,w
  2249  0E8E  00B3               	movwf	(sprintf@fval+1)^(0+128)
  2250  0E8F  0874               	movf	?___ftneg+2,w
  2251  0E90  00B4               	movwf	(sprintf@fval+2)^(0+128)
  2252  0E91                     l3769:
  2253                           
  2254                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 0x03;
  2255  0E91  3003               	movlw	3
  2256  0E92  04A4               	iorwf	sprintf@flag^(0+128),f
  2257  0E93  3000               	movlw	0
  2258  0E94  04A5               	iorwf	(sprintf@flag+1)^(0+128),f
  2259  0E95                     l3771:
  2260                           
  2261                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2262  0E95  1683               	bsf	3,5	;RP0=1, select bank1
  2263  0E96  1303               	bcf	3,6	;RP1=0, select bank1
  2264  0E97  01B0               	clrf	sprintf@eexp^(0+128)
  2265  0E98  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  2266  0E99                     l3773:
  2267                           
  2268                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!=0) {
  2269  0E99  0834               	movf	(sprintf@fval+2)^(0+128),w
  2270  0E9A  0433               	iorwf	(sprintf@fval+1)^(0+128),w
  2271  0E9B  0432               	iorwf	sprintf@fval^(0+128),w
  2272  0E9C  1903               	skipnz
  2273  0E9D  2E9F               	goto	u5361
  2274  0E9E  2EA0               	goto	u5360
  2275  0E9F                     u5361:
  2276  0E9F  2FA2               	goto	l3799
  2277  0EA0                     u5360:
  2278  0EA0                     l3775:
  2279                           
  2280                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*(&eexp) = ((*(
      +                          unsigned long *)&fval >> 15) & 255) - 126);
  2281  0EA0  30B2               	movlw	low (sprintf@fval| 0)
  2282  0EA1  0084               	movwf	4
  2283  0EA2  1383               	bcf	3,7	;select IRP bank1
  2284  0EA3  0800               	movf	0,w
  2285  0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  2286  0EA5  1303               	bcf	3,6	;RP1=0, select bank0
  2287  0EA6  00E7               	movwf	??_sprintf
  2288  0EA7  0A84               	incf	4,f
  2289  0EA8  0800               	movf	0,w
  2290  0EA9  00E8               	movwf	??_sprintf+1
  2291  0EAA  0A84               	incf	4,f
  2292  0EAB  0800               	movf	0,w
  2293  0EAC  00E9               	movwf	??_sprintf+2
  2294  0EAD  0A84               	incf	4,f
  2295  0EAE  0800               	movf	0,w
  2296  0EAF  00EA               	movwf	??_sprintf+3
  2297  0EB0  300F               	movlw	15
  2298  0EB1                     u5375:
  2299  0EB1  1003               	clrc
  2300  0EB2  0CEA               	rrf	??_sprintf+3,f
  2301  0EB3  0CE9               	rrf	??_sprintf+2,f
  2302  0EB4  0CE8               	rrf	??_sprintf+1,f
  2303  0EB5  0CE7               	rrf	??_sprintf,f
  2304  0EB6                     u5370:
  2305  0EB6  3EFF               	addlw	-1
  2306  0EB7  1D03               	skipz
  2307  0EB8  2EB1               	goto	u5375
  2308  0EB9  30FF               	movlw	255
  2309  0EBA  0567               	andwf	??_sprintf,w
  2310  0EBB  00EB               	movwf	??_sprintf+4
  2311  0EBC  3000               	movlw	0
  2312  0EBD  0568               	andwf	??_sprintf+1,w
  2313  0EBE  00EC               	movwf	??_sprintf+5
  2314  0EBF  086B               	movf	??_sprintf+4,w
  2315  0EC0  3E82               	addlw	130
  2316  0EC1  1683               	bsf	3,5	;RP0=1, select bank1
  2317  0EC2  1303               	bcf	3,6	;RP1=0, select bank1
  2318  0EC3  00B0               	movwf	sprintf@eexp^(0+128)
  2319  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  2320  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  2321  0EC6  086C               	movf	??_sprintf+5,w
  2322  0EC7  1803               	skipnc
  2323  0EC8  3E01               	addlw	1
  2324  0EC9  3EFF               	addlw	255
  2325  0ECA  1683               	bsf	3,5	;RP0=1, select bank1
  2326  0ECB  1303               	bcf	3,6	;RP1=0, select bank1
  2327  0ECC  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2328  0ECD                     l3777:
  2329                           
  2330                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2331  0ECD  30FF               	movlw	255
  2332  0ECE  07B0               	addwf	sprintf@eexp^(0+128),f
  2333  0ECF  1803               	skipnc
  2334  0ED0  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2335  0ED1  30FF               	movlw	255
  2336  0ED2  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2337  0ED3                     l3779:
  2338                           
  2339                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 3;
  2340  0ED3  3003               	movlw	3
  2341  0ED4  00F2               	movwf	___wmul@multiplier
  2342  0ED5  3000               	movlw	0
  2343  0ED6  00F3               	movwf	___wmul@multiplier+1
  2344  0ED7  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2345  0ED8  00F5               	movwf	___wmul@multiplicand+1
  2346  0ED9  0830               	movf	sprintf@eexp^(0+128),w
  2347  0EDA  00F4               	movwf	___wmul@multiplicand
  2348  0EDB  160A  158A  262A  120A  158A  	fcall	___wmul
  2349  0EE0  0873               	movf	?___wmul+1,w
  2350  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  2351  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  2352  0EE3  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2353  0EE4  0872               	movf	?___wmul,w
  2354  0EE5  00B0               	movwf	sprintf@eexp^(0+128)
  2355  0EE6                     l3781:
  2356                           
  2357                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 10;
  2358  0EE6  300A               	movlw	10
  2359  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  2361  0EE9  00A0               	movwf	___awdiv@divisor
  2362  0EEA  3000               	movlw	0
  2363  0EEB  00A1               	movwf	___awdiv@divisor+1
  2364  0EEC  1683               	bsf	3,5	;RP0=1, select bank1
  2365  0EED  1303               	bcf	3,6	;RP1=0, select bank1
  2366  0EEE  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2367  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  2368  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  2369  0EF1  00A3               	movwf	___awdiv@dividend+1
  2370  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  2371  0EF3  1303               	bcf	3,6	;RP1=0, select bank1
  2372  0EF4  0830               	movf	sprintf@eexp^(0+128),w
  2373  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  2374  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  2375  0EF7  00A2               	movwf	___awdiv@dividend
  2376  0EF8  160A  118A  228B  120A  158A  	fcall	___awdiv
  2377  0EFD  1283               	bcf	3,5	;RP0=0, select bank0
  2378  0EFE  1303               	bcf	3,6	;RP1=0, select bank0
  2379  0EFF  0821               	movf	?___awdiv+1,w
  2380  0F00  1683               	bsf	3,5	;RP0=1, select bank1
  2381  0F01  1303               	bcf	3,6	;RP1=0, select bank1
  2382  0F02  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2383  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  2384  0F04  1303               	bcf	3,6	;RP1=0, select bank0
  2385  0F05  0820               	movf	?___awdiv,w
  2386  0F06  1683               	bsf	3,5	;RP0=1, select bank1
  2387  0F07  1303               	bcf	3,6	;RP1=0, select bank1
  2388  0F08  00B0               	movwf	sprintf@eexp^(0+128)
  2389  0F09                     l3783:
  2390                           
  2391                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp < 0)
  2392  0F09  1FB1               	btfss	(sprintf@eexp+1)^(0+128),7
  2393  0F0A  2F0C               	goto	u5381
  2394  0F0B  2F0D               	goto	u5380
  2395  0F0C                     u5381:
  2396  0F0C  2F13               	goto	l3787
  2397  0F0D                     u5380:
  2398  0F0D                     l3785:
  2399                           
  2400                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2401  0F0D  30FF               	movlw	255
  2402  0F0E  07B0               	addwf	sprintf@eexp^(0+128),f
  2403  0F0F  1803               	skipnc
  2404  0F10  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2405  0F11  30FF               	movlw	255
  2406  0F12  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2407  0F13                     l3787:
  2408                           
  2409                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.integ = scale(-
      +                          eexp);
  2410  0F13  0330               	decf	sprintf@eexp^(0+128),w
  2411  0F14  3AFF               	xorlw	255
  2412  0F15  120A  158A  225D  120A  158A  	fcall	_scale
  2413  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  2414  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  2415  0F1C  083B               	movf	?_scale,w
  2416  0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  2417  0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  2418  0F1F  00A8               	movwf	sprintf@tmpval^(0+128)
  2419  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  2421  0F22  083C               	movf	?_scale+1,w
  2422  0F23  1683               	bsf	3,5	;RP0=1, select bank1
  2423  0F24  1303               	bcf	3,6	;RP1=0, select bank1
  2424  0F25  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  2425  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  2427  0F28  083D               	movf	?_scale+2,w
  2428  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  2429  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  2430  0F2B  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  2431  0F2C                     l3789:
  2432                           
  2433                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.integ *= fval;
  2434  0F2C  0832               	movf	sprintf@fval^(0+128),w
  2435  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  2436  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  2437  0F2F  00AB               	movwf	___ftmul@f1
  2438  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  2439  0F31  1303               	bcf	3,6	;RP1=0, select bank1
  2440  0F32  0833               	movf	(sprintf@fval+1)^(0+128),w
  2441  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  2442  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  2443  0F35  00AC               	movwf	___ftmul@f1+1
  2444  0F36  1683               	bsf	3,5	;RP0=1, select bank1
  2445  0F37  1303               	bcf	3,6	;RP1=0, select bank1
  2446  0F38  0834               	movf	(sprintf@fval+2)^(0+128),w
  2447  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2448  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2449  0F3B  00AD               	movwf	___ftmul@f1+2
  2450  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  2451  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  2452  0F3E  0828               	movf	sprintf@tmpval^(0+128),w
  2453  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  2454  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  2455  0F41  00AE               	movwf	___ftmul@f2
  2456  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  2457  0F43  1303               	bcf	3,6	;RP1=0, select bank1
  2458  0F44  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  2459  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  2460  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  2461  0F47  00AF               	movwf	___ftmul@f2+1
  2462  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  2463  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  2464  0F4A  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  2465  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  2466  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  2467  0F4D  00B0               	movwf	___ftmul@f2+2
  2468  0F4E  160A  118A  24B9  120A  158A  	fcall	___ftmul
  2469  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  2470  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  2471  0F55  082B               	movf	?___ftmul,w
  2472  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  2473  0F57  1303               	bcf	3,6	;RP1=0, select bank1
  2474  0F58  00A8               	movwf	sprintf@tmpval^(0+128)
  2475  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  2476  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  2477  0F5B  082C               	movf	?___ftmul+1,w
  2478  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  2479  0F5D  1303               	bcf	3,6	;RP1=0, select bank1
  2480  0F5E  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  2481  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  2482  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  2483  0F61  082D               	movf	?___ftmul+2,w
  2484  0F62  1683               	bsf	3,5	;RP0=1, select bank1
  2485  0F63  1303               	bcf	3,6	;RP1=0, select bank1
  2486  0F64  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  2487  0F65                     l3791:
  2488                           
  2489                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpval.integ < 1.0)
  2490  0F65  0828               	movf	sprintf@tmpval^(0+128),w
  2491  0F66  00F2               	movwf	___ftge@ff1
  2492  0F67  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  2493  0F68  00F3               	movwf	___ftge@ff1+1
  2494  0F69  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  2495  0F6A  00F4               	movwf	___ftge@ff1+2
  2496  0F6B  3000               	movlw	0
  2497  0F6C  00F5               	movwf	___ftge@ff2
  2498  0F6D  3080               	movlw	128
  2499  0F6E  00F6               	movwf	___ftge@ff2+1
  2500  0F6F  303F               	movlw	63
  2501  0F70  00F7               	movwf	___ftge@ff2+2
  2502  0F71  160A  158A  2702  120A  158A  	fcall	___ftge
  2503  0F76  1803               	btfsc	3,0
  2504  0F77  2F79               	goto	u5391
  2505  0F78  2F7A               	goto	u5390
  2506  0F79                     u5391:
  2507  0F79  2F83               	goto	l3795
  2508  0F7A                     u5390:
  2509  0F7A                     l3793:
  2510                           
  2511                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2512  0F7A  30FF               	movlw	255
  2513  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  2514  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  2515  0F7D  07B0               	addwf	sprintf@eexp^(0+128),f
  2516  0F7E  1803               	skipnc
  2517  0F7F  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2518  0F80  30FF               	movlw	255
  2519  0F81  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2520  0F82  2FA2               	goto	l3799
  2521  0F83                     l3795:
  2522  0F83  1683               	bsf	3,5	;RP0=1, select bank1
  2523  0F84  1303               	bcf	3,6	;RP1=0, select bank1
  2524  0F85  0828               	movf	sprintf@tmpval^(0+128),w
  2525  0F86  00F2               	movwf	___ftge@ff1
  2526  0F87  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  2527  0F88  00F3               	movwf	___ftge@ff1+1
  2528  0F89  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  2529  0F8A  00F4               	movwf	___ftge@ff1+2
  2530  0F8B  3000               	movlw	0
  2531  0F8C  00F5               	movwf	___ftge@ff2
  2532  0F8D  3020               	movlw	32
  2533  0F8E  00F6               	movwf	___ftge@ff2+1
  2534  0F8F  3041               	movlw	65
  2535  0F90  00F7               	movwf	___ftge@ff2+2
  2536  0F91  160A  158A  2702  120A  158A  	fcall	___ftge
  2537  0F96  1C03               	btfss	3,0
  2538  0F97  2F99               	goto	u5401
  2539  0F98  2F9A               	goto	u5400
  2540  0F99                     u5401:
  2541  0F99  2FA2               	goto	l3799
  2542  0F9A                     u5400:
  2543  0F9A                     l3797:
  2544                           
  2545                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2546  0F9A  3001               	movlw	1
  2547  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  2548  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  2549  0F9D  07B0               	addwf	sprintf@eexp^(0+128),f
  2550  0F9E  1803               	skipnc
  2551  0F9F  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2552  0FA0  3000               	movlw	0
  2553  0FA1  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2554  0FA2                     l3799:
  2555                           
  2556                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(prec <= 12)
  2557  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  2558  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  2559  0FA4  0837               	movf	(sprintf@prec+1)^(0+128),w
  2560  0FA5  3A80               	xorlw	128
  2561  0FA6  00FF               	movwf	btemp+1
  2562  0FA7  3080               	movlw	128
  2563  0FA8  027F               	subwf	btemp+1,w
  2564  0FA9  1D03               	skipz
  2565  0FAA  2FAD               	goto	u5415
  2566  0FAB  300D               	movlw	13
  2567  0FAC  0236               	subwf	sprintf@prec^(0+128),w
  2568  0FAD                     u5415:
  2569  0FAD  1803               	skipnc
  2570  0FAE  2FB0               	goto	u5411
  2571  0FAF  2FB1               	goto	u5410
  2572  0FB0                     u5411:
  2573  0FB0  2FEA               	goto	l3803
  2574  0FB1                     u5410:
  2575  0FB1                     l3801:
  2576                           
  2577                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval += fround((uns
      +                          igned int)prec);
  2578  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  2579  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  2580  0FB3  0836               	movf	sprintf@prec^(0+128),w
  2581  0FB4  120A  158A  20B4  120A  158A  	fcall	_fround
  2582  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  2583  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  2584  0FBB  083B               	movf	?_fround,w
  2585  0FBC  00CB               	movwf	___ftadd@f1
  2586  0FBD  083C               	movf	?_fround+1,w
  2587  0FBE  00CC               	movwf	___ftadd@f1+1
  2588  0FBF  083D               	movf	?_fround+2,w
  2589  0FC0  00CD               	movwf	___ftadd@f1+2
  2590  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  2591  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  2592  0FC3  0832               	movf	sprintf@fval^(0+128),w
  2593  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2594  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2595  0FC6  00CE               	movwf	___ftadd@f2
  2596  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  2597  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  2598  0FC9  0833               	movf	(sprintf@fval+1)^(0+128),w
  2599  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  2600  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  2601  0FCC  00CF               	movwf	___ftadd@f2+1
  2602  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  2603  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  2604  0FCF  0834               	movf	(sprintf@fval+2)^(0+128),w
  2605  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  2606  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  2607  0FD2  00D0               	movwf	___ftadd@f2+2
  2608  0FD3  160A  118A  26CA  120A  158A  	fcall	___ftadd
  2609  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  2611  0FDA  084B               	movf	?___ftadd,w
  2612  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  2613  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  2614  0FDD  00B2               	movwf	sprintf@fval^(0+128)
  2615  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  2616  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  2617  0FE0  084C               	movf	?___ftadd+1,w
  2618  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  2619  0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  2620  0FE3  00B3               	movwf	(sprintf@fval+1)^(0+128)
  2621  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  2622  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  2623  0FE6  084D               	movf	?___ftadd+2,w
  2624  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  2625  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  2626  0FE9  00B4               	movwf	(sprintf@fval+2)^(0+128)
  2627  0FEA                     l3803:
  2628                           
  2629                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eexp > 9)||(fval 
      +                          != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2630  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  2631  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  2632  0FEC  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2633  0FED  3A80               	xorlw	128
  2634  0FEE  00FF               	movwf	btemp+1
  2635  0FEF  3080               	movlw	128
  2636  0FF0  027F               	subwf	btemp+1,w
  2637  0FF1  1D03               	skipz
  2638  0FF2  2FF5               	goto	u5425
  2639  0FF3  300A               	movlw	10
  2640  0FF4  0230               	subwf	sprintf@eexp^(0+128),w
  2641  0FF5                     u5425:
  2642  0FF5  1803               	skipnc
  2643  0FF6  2FFA               	goto	u5421
  2644  0FF7  120A  118A  2821   	goto	u5420
  2645  0FFA                     u5421:
  2646  0FFA  120A  118A  2858   	goto	l3811
  2647  0FFD                     L3:
  2648  0FFD                     L2:
  2649  0FFD  120A  118A  2ECE   	ljmp	l3991
  2650                           
  2651                           	psect	text2
  2652  0A5D                     __ptext2:	
  2653 ;; *************** function _scale *****************
  2654 ;; Defined at:
  2655 ;;		line 433 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  scl             1    wreg     char 
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;  scl             1   35[BANK0 ] char 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  3   27[BANK0 ] char 
  2662 ;; Registers used:
  2663 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2669 ;;      Params:         0       3       0       0       0
  2670 ;;      Locals:         0       4       0       0       0
  2671 ;;      Temps:          0       2       0       0       0
  2672 ;;      Totals:         0       9       0       0       0
  2673 ;;Total ram usage:        9 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; Hardware stack levels required when called:    3
  2676 ;; This function calls:
  2677 ;;		___awdiv
  2678 ;;		___awmod
  2679 ;;		___bmul
  2680 ;;		___ftmul
  2681 ;; This function is called by:
  2682 ;;		_sprintf
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           
  2687                           ;psect for function _scale
  2688  0A5D                     _scale:
  2689                           
  2690                           ;incstack = 0
  2691                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2692                           ;scale@scl stored from wreg
  2693  0A5D  1283               	bcf	3,5	;RP0=0, select bank0
  2694  0A5E  1303               	bcf	3,6	;RP1=0, select bank0
  2695  0A5F  00C3               	movwf	scale@scl
  2696  0A60                     l3537:
  2697                           
  2698                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed char scl);D:\
      +                          Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;D:\Microchip\xc8\v2.31\pic\s
      +                          ources\c90\common\doprnt.c: 436:  if(scl < 0) {
  2699  0A60  1FC3               	btfss	scale@scl,7
  2700  0A61  2A63               	goto	u4991
  2701  0A62  2A64               	goto	u4990
  2702  0A63                     u4991:
  2703  0A63  2BBF               	goto	l3559
  2704  0A64                     u4990:
  2705  0A64                     l3539:
  2706                           
  2707                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl;
  2708  0A64  09C3               	comf	scale@scl,f
  2709  0A65  0AC3               	incf	scale@scl,f
  2710  0A66                     l3541:
  2711                           
  2712                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=110)
  2713  0A66  0843               	movf	scale@scl,w
  2714  0A67  3A80               	xorlw	128
  2715  0A68  3E12               	addlw	-238
  2716  0A69  1C03               	skipc
  2717  0A6A  2A6C               	goto	u5001
  2718  0A6B  2A6D               	goto	u5000
  2719  0A6C                     u5001:
  2720  0A6C  2B2B               	goto	l3549
  2721  0A6D                     u5000:
  2722  0A6D                     l3543:
  2723                           
  2724                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsig
      +                          ned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigne
      +                          d char)(scl%10)];
  2725  0A6D  3003               	movlw	3
  2726  0A6E  00BE               	movwf	??_scale
  2727  0A6F  083E               	movf	??_scale,w
  2728  0A70  00A8               	movwf	___bmul@multiplicand
  2729  0A71  0843               	movf	scale@scl,w
  2730  0A72  00F4               	movwf	___awmod@dividend
  2731  0A73  01F5               	clrf	___awmod@dividend+1
  2732  0A74  1BF4               	btfsc	___awmod@dividend,7
  2733  0A75  03F5               	decf	___awmod@dividend+1,f
  2734  0A76  3064               	movlw	100
  2735  0A77  00F2               	movwf	___awmod@divisor
  2736  0A78  3000               	movlw	0
  2737  0A79  00F3               	movwf	___awmod@divisor+1
  2738  0A7A  160A  118A  21CA  120A  158A  	fcall	___awmod
  2739  0A7F  0873               	movf	?___awmod+1,w
  2740  0A80  1283               	bcf	3,5	;RP0=0, select bank0
  2741  0A81  1303               	bcf	3,6	;RP1=0, select bank0
  2742  0A82  00A3               	movwf	___awdiv@dividend+1
  2743  0A83  0872               	movf	?___awmod,w
  2744  0A84  00A2               	movwf	___awdiv@dividend
  2745  0A85  300A               	movlw	10
  2746  0A86  00A0               	movwf	___awdiv@divisor
  2747  0A87  3000               	movlw	0
  2748  0A88  00A1               	movwf	___awdiv@divisor+1
  2749  0A89  160A  118A  228B  120A  158A  	fcall	___awdiv
  2750  0A8E  1283               	bcf	3,5	;RP0=0, select bank0
  2751  0A8F  1303               	bcf	3,6	;RP1=0, select bank0
  2752  0A90  0820               	movf	?___awdiv,w
  2753  0A91  120A  158A  2001  120A  158A  	fcall	___bmul
  2754  0A96  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2755  0A97  0084               	movwf	4
  2756  0A98  160A  118A  200A  120A  158A  	fcall	stringdir
  2757  0A9D  1283               	bcf	3,5	;RP0=0, select bank0
  2758  0A9E  1303               	bcf	3,6	;RP1=0, select bank0
  2759  0A9F  00AB               	movwf	___ftmul@f1
  2760  0AA0  160A  118A  200A  120A  158A  	fcall	stringdir
  2761  0AA5  00AC               	movwf	___ftmul@f1+1
  2762  0AA6  160A  118A  200A  120A  158A  	fcall	stringdir
  2763  0AAB  00AD               	movwf	___ftmul@f1+2
  2764  0AAC  3003               	movlw	3
  2765  0AAD  00BF               	movwf	??_scale+1
  2766  0AAE  083F               	movf	??_scale+1,w
  2767  0AAF  00A8               	movwf	___bmul@multiplicand
  2768  0AB0  0843               	movf	scale@scl,w
  2769  0AB1  00A2               	movwf	___awdiv@dividend
  2770  0AB2  01A3               	clrf	___awdiv@dividend+1
  2771  0AB3  1BA2               	btfsc	___awdiv@dividend,7
  2772  0AB4  03A3               	decf	___awdiv@dividend+1,f
  2773  0AB5  3064               	movlw	100
  2774  0AB6  00A0               	movwf	___awdiv@divisor
  2775  0AB7  3000               	movlw	0
  2776  0AB8  00A1               	movwf	___awdiv@divisor+1
  2777  0AB9  160A  118A  228B  120A  158A  	fcall	___awdiv
  2778  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  2779  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  2780  0AC0  0820               	movf	?___awdiv,w
  2781  0AC1  120A  158A  2001  120A  158A  	fcall	___bmul
  2782  0AC6  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  2783  0AC7  0084               	movwf	4
  2784  0AC8  160A  118A  200A  120A  158A  	fcall	stringdir
  2785  0ACD  1283               	bcf	3,5	;RP0=0, select bank0
  2786  0ACE  1303               	bcf	3,6	;RP1=0, select bank0
  2787  0ACF  00AE               	movwf	___ftmul@f2
  2788  0AD0  160A  118A  200A  120A  158A  	fcall	stringdir
  2789  0AD5  00AF               	movwf	___ftmul@f2+1
  2790  0AD6  160A  118A  200A  120A  158A  	fcall	stringdir
  2791  0ADB  00B0               	movwf	___ftmul@f2+2
  2792  0ADC  160A  118A  24B9  120A  158A  	fcall	___ftmul
  2793  0AE1  1283               	bcf	3,5	;RP0=0, select bank0
  2794  0AE2  1303               	bcf	3,6	;RP1=0, select bank0
  2795  0AE3  082B               	movf	?___ftmul,w
  2796  0AE4  00C0               	movwf	_scale$1171
  2797  0AE5  082C               	movf	?___ftmul+1,w
  2798  0AE6  00C1               	movwf	_scale$1171+1
  2799  0AE7  082D               	movf	?___ftmul+2,w
  2800  0AE8  00C2               	movwf	_scale$1171+2
  2801                           
  2802                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsig
      +                          ned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigne
      +                          d char)(scl%10)];
  2803  0AE9  3003               	movlw	3
  2804  0AEA  00BE               	movwf	??_scale
  2805  0AEB  083E               	movf	??_scale,w
  2806  0AEC  00A8               	movwf	___bmul@multiplicand
  2807  0AED  0843               	movf	scale@scl,w
  2808  0AEE  00F4               	movwf	___awmod@dividend
  2809  0AEF  01F5               	clrf	___awmod@dividend+1
  2810  0AF0  1BF4               	btfsc	___awmod@dividend,7
  2811  0AF1  03F5               	decf	___awmod@dividend+1,f
  2812  0AF2  300A               	movlw	10
  2813  0AF3  00F2               	movwf	___awmod@divisor
  2814  0AF4  3000               	movlw	0
  2815  0AF5  00F3               	movwf	___awmod@divisor+1
  2816  0AF6  160A  118A  21CA  120A  158A  	fcall	___awmod
  2817  0AFB  0872               	movf	?___awmod,w
  2818  0AFC  120A  158A  2001  120A  158A  	fcall	___bmul
  2819  0B01  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2820  0B02  0084               	movwf	4
  2821  0B03  160A  118A  200A  120A  158A  	fcall	stringdir
  2822  0B08  1283               	bcf	3,5	;RP0=0, select bank0
  2823  0B09  1303               	bcf	3,6	;RP1=0, select bank0
  2824  0B0A  00AB               	movwf	___ftmul@f1
  2825  0B0B  160A  118A  200A  120A  158A  	fcall	stringdir
  2826  0B10  00AC               	movwf	___ftmul@f1+1
  2827  0B11  160A  118A  200A  120A  158A  	fcall	stringdir
  2828  0B16  00AD               	movwf	___ftmul@f1+2
  2829  0B17  0840               	movf	_scale$1171,w
  2830  0B18  00AE               	movwf	___ftmul@f2
  2831  0B19  0841               	movf	_scale$1171+1,w
  2832  0B1A  00AF               	movwf	___ftmul@f2+1
  2833  0B1B  0842               	movf	_scale$1171+2,w
  2834  0B1C  00B0               	movwf	___ftmul@f2+2
  2835  0B1D  160A  118A  24B9  120A  158A  	fcall	___ftmul
  2836  0B22  1283               	bcf	3,5	;RP0=0, select bank0
  2837  0B23  1303               	bcf	3,6	;RP1=0, select bank0
  2838  0B24  082B               	movf	?___ftmul,w
  2839  0B25  00BB               	movwf	?_scale
  2840  0B26  082C               	movf	?___ftmul+1,w
  2841  0B27  00BC               	movwf	?_scale+1
  2842  0B28  082D               	movf	?___ftmul+2,w
  2843  0B29  00BD               	movwf	?_scale+2
  2844  0B2A  2D17               	goto	l335
  2845  0B2B                     l3549:
  2846  0B2B  0843               	movf	scale@scl,w
  2847  0B2C  3A80               	xorlw	128
  2848  0B2D  3E75               	addlw	-139
  2849  0B2E  1C03               	skipc
  2850  0B2F  2B31               	goto	u5011
  2851  0B30  2B32               	goto	u5010
  2852  0B31                     u5011:
  2853  0B31  2B9E               	goto	l3555
  2854  0B32                     u5010:
  2855  0B32                     l3551:
  2856                           
  2857                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _npowers_[(unsig
      +                          ned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2858  0B32  3003               	movlw	3
  2859  0B33  00BE               	movwf	??_scale
  2860  0B34  083E               	movf	??_scale,w
  2861  0B35  00A8               	movwf	___bmul@multiplicand
  2862  0B36  0843               	movf	scale@scl,w
  2863  0B37  00F4               	movwf	___awmod@dividend
  2864  0B38  01F5               	clrf	___awmod@dividend+1
  2865  0B39  1BF4               	btfsc	___awmod@dividend,7
  2866  0B3A  03F5               	decf	___awmod@dividend+1,f
  2867  0B3B  300A               	movlw	10
  2868  0B3C  00F2               	movwf	___awmod@divisor
  2869  0B3D  3000               	movlw	0
  2870  0B3E  00F3               	movwf	___awmod@divisor+1
  2871  0B3F  160A  118A  21CA  120A  158A  	fcall	___awmod
  2872  0B44  0872               	movf	?___awmod,w
  2873  0B45  120A  158A  2001  120A  158A  	fcall	___bmul
  2874  0B4A  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2875  0B4B  0084               	movwf	4
  2876  0B4C  160A  118A  200A  120A  158A  	fcall	stringdir
  2877  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  2878  0B52  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0B53  00AB               	movwf	___ftmul@f1
  2880  0B54  160A  118A  200A  120A  158A  	fcall	stringdir
  2881  0B59  00AC               	movwf	___ftmul@f1+1
  2882  0B5A  160A  118A  200A  120A  158A  	fcall	stringdir
  2883  0B5F  00AD               	movwf	___ftmul@f1+2
  2884  0B60  3003               	movlw	3
  2885  0B61  00BF               	movwf	??_scale+1
  2886  0B62  083F               	movf	??_scale+1,w
  2887  0B63  00A8               	movwf	___bmul@multiplicand
  2888  0B64  0843               	movf	scale@scl,w
  2889  0B65  00A2               	movwf	___awdiv@dividend
  2890  0B66  01A3               	clrf	___awdiv@dividend+1
  2891  0B67  1BA2               	btfsc	___awdiv@dividend,7
  2892  0B68  03A3               	decf	___awdiv@dividend+1,f
  2893  0B69  300A               	movlw	10
  2894  0B6A  00A0               	movwf	___awdiv@divisor
  2895  0B6B  3000               	movlw	0
  2896  0B6C  00A1               	movwf	___awdiv@divisor+1
  2897  0B6D  160A  118A  228B  120A  158A  	fcall	___awdiv
  2898  0B72  1283               	bcf	3,5	;RP0=0, select bank0
  2899  0B73  1303               	bcf	3,6	;RP1=0, select bank0
  2900  0B74  0820               	movf	?___awdiv,w
  2901  0B75  120A  158A  2001  120A  158A  	fcall	___bmul
  2902  0B7A  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2903  0B7B  0084               	movwf	4
  2904  0B7C  160A  118A  200A  120A  158A  	fcall	stringdir
  2905  0B81  1283               	bcf	3,5	;RP0=0, select bank0
  2906  0B82  1303               	bcf	3,6	;RP1=0, select bank0
  2907  0B83  00AE               	movwf	___ftmul@f2
  2908  0B84  160A  118A  200A  120A  158A  	fcall	stringdir
  2909  0B89  00AF               	movwf	___ftmul@f2+1
  2910  0B8A  160A  118A  200A  120A  158A  	fcall	stringdir
  2911  0B8F  00B0               	movwf	___ftmul@f2+2
  2912  0B90  160A  118A  24B9  120A  158A  	fcall	___ftmul
  2913  0B95  1283               	bcf	3,5	;RP0=0, select bank0
  2914  0B96  1303               	bcf	3,6	;RP1=0, select bank0
  2915  0B97  082B               	movf	?___ftmul,w
  2916  0B98  00BB               	movwf	?_scale
  2917  0B99  082C               	movf	?___ftmul+1,w
  2918  0B9A  00BC               	movwf	?_scale+1
  2919  0B9B  082D               	movf	?___ftmul+2,w
  2920  0B9C  00BD               	movwf	?_scale+2
  2921  0B9D  2D17               	goto	l335
  2922  0B9E                     l3555:
  2923                           
  2924                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _npowers_[(unsign
      +                          ed char)scl];
  2925  0B9E  3003               	movlw	3
  2926  0B9F  00BE               	movwf	??_scale
  2927  0BA0  083E               	movf	??_scale,w
  2928  0BA1  00A8               	movwf	___bmul@multiplicand
  2929  0BA2  0843               	movf	scale@scl,w
  2930  0BA3  120A  158A  2001  120A  158A  	fcall	___bmul
  2931  0BA8  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2932  0BA9  0084               	movwf	4
  2933  0BAA  160A  118A  200A  120A  158A  	fcall	stringdir
  2934  0BAF  1283               	bcf	3,5	;RP0=0, select bank0
  2935  0BB0  1303               	bcf	3,6	;RP1=0, select bank0
  2936  0BB1  00BB               	movwf	?_scale
  2937  0BB2  160A  118A  200A  120A  158A  	fcall	stringdir
  2938  0BB7  00BC               	movwf	?_scale+1
  2939  0BB8  160A  118A  200A  120A  158A  	fcall	stringdir
  2940  0BBD  00BD               	movwf	?_scale+2
  2941  0BBE  2D17               	goto	l335
  2942  0BBF                     l3559:
  2943                           
  2944                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110)
  2945  0BBF  0843               	movf	scale@scl,w
  2946  0BC0  3A80               	xorlw	128
  2947  0BC1  3E12               	addlw	-238
  2948  0BC2  1C03               	skipc
  2949  0BC3  2BC5               	goto	u5021
  2950  0BC4  2BC6               	goto	u5020
  2951  0BC5                     u5021:
  2952  0BC5  2C84               	goto	l3567
  2953  0BC6                     u5020:
  2954  0BC6                     l3561:
  2955                           
  2956                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigne
      +                          d char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned ch
      +                          ar)(scl%10)];
  2957  0BC6  3003               	movlw	3
  2958  0BC7  00BE               	movwf	??_scale
  2959  0BC8  083E               	movf	??_scale,w
  2960  0BC9  00A8               	movwf	___bmul@multiplicand
  2961  0BCA  0843               	movf	scale@scl,w
  2962  0BCB  00F4               	movwf	___awmod@dividend
  2963  0BCC  01F5               	clrf	___awmod@dividend+1
  2964  0BCD  1BF4               	btfsc	___awmod@dividend,7
  2965  0BCE  03F5               	decf	___awmod@dividend+1,f
  2966  0BCF  3064               	movlw	100
  2967  0BD0  00F2               	movwf	___awmod@divisor
  2968  0BD1  3000               	movlw	0
  2969  0BD2  00F3               	movwf	___awmod@divisor+1
  2970  0BD3  160A  118A  21CA  120A  158A  	fcall	___awmod
  2971  0BD8  0873               	movf	?___awmod+1,w
  2972  0BD9  1283               	bcf	3,5	;RP0=0, select bank0
  2973  0BDA  1303               	bcf	3,6	;RP1=0, select bank0
  2974  0BDB  00A3               	movwf	___awdiv@dividend+1
  2975  0BDC  0872               	movf	?___awmod,w
  2976  0BDD  00A2               	movwf	___awdiv@dividend
  2977  0BDE  300A               	movlw	10
  2978  0BDF  00A0               	movwf	___awdiv@divisor
  2979  0BE0  3000               	movlw	0
  2980  0BE1  00A1               	movwf	___awdiv@divisor+1
  2981  0BE2  160A  118A  228B  120A  158A  	fcall	___awdiv
  2982  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  2983  0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  2984  0BE9  0820               	movf	?___awdiv,w
  2985  0BEA  120A  158A  2001  120A  158A  	fcall	___bmul
  2986  0BEF  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  2987  0BF0  0084               	movwf	4
  2988  0BF1  160A  118A  200A  120A  158A  	fcall	stringdir
  2989  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  2990  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  2991  0BF8  00AB               	movwf	___ftmul@f1
  2992  0BF9  160A  118A  200A  120A  158A  	fcall	stringdir
  2993  0BFE  00AC               	movwf	___ftmul@f1+1
  2994  0BFF  160A  118A  200A  120A  158A  	fcall	stringdir
  2995  0C04  00AD               	movwf	___ftmul@f1+2
  2996  0C05  3003               	movlw	3
  2997  0C06  00BF               	movwf	??_scale+1
  2998  0C07  083F               	movf	??_scale+1,w
  2999  0C08  00A8               	movwf	___bmul@multiplicand
  3000  0C09  0843               	movf	scale@scl,w
  3001  0C0A  00A2               	movwf	___awdiv@dividend
  3002  0C0B  01A3               	clrf	___awdiv@dividend+1
  3003  0C0C  1BA2               	btfsc	___awdiv@dividend,7
  3004  0C0D  03A3               	decf	___awdiv@dividend+1,f
  3005  0C0E  3064               	movlw	100
  3006  0C0F  00A0               	movwf	___awdiv@divisor
  3007  0C10  3000               	movlw	0
  3008  0C11  00A1               	movwf	___awdiv@divisor+1
  3009  0C12  160A  118A  228B  120A  158A  	fcall	___awdiv
  3010  0C17  1283               	bcf	3,5	;RP0=0, select bank0
  3011  0C18  1303               	bcf	3,6	;RP1=0, select bank0
  3012  0C19  0820               	movf	?___awdiv,w
  3013  0C1A  120A  158A  2001  120A  158A  	fcall	___bmul
  3014  0C1F  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  3015  0C20  0084               	movwf	4
  3016  0C21  160A  118A  200A  120A  158A  	fcall	stringdir
  3017  0C26  1283               	bcf	3,5	;RP0=0, select bank0
  3018  0C27  1303               	bcf	3,6	;RP1=0, select bank0
  3019  0C28  00AE               	movwf	___ftmul@f2
  3020  0C29  160A  118A  200A  120A  158A  	fcall	stringdir
  3021  0C2E  00AF               	movwf	___ftmul@f2+1
  3022  0C2F  160A  118A  200A  120A  158A  	fcall	stringdir
  3023  0C34  00B0               	movwf	___ftmul@f2+2
  3024  0C35  160A  118A  24B9  120A  158A  	fcall	___ftmul
  3025  0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  3026  0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  3027  0C3C  082B               	movf	?___ftmul,w
  3028  0C3D  00C0               	movwf	_scale$1171
  3029  0C3E  082C               	movf	?___ftmul+1,w
  3030  0C3F  00C1               	movwf	_scale$1171+1
  3031  0C40  082D               	movf	?___ftmul+2,w
  3032  0C41  00C2               	movwf	_scale$1171+2
  3033                           
  3034                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigne
      +                          d char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned ch
      +                          ar)(scl%10)];
  3035  0C42  3003               	movlw	3
  3036  0C43  00BE               	movwf	??_scale
  3037  0C44  083E               	movf	??_scale,w
  3038  0C45  00A8               	movwf	___bmul@multiplicand
  3039  0C46  0843               	movf	scale@scl,w
  3040  0C47  00F4               	movwf	___awmod@dividend
  3041  0C48  01F5               	clrf	___awmod@dividend+1
  3042  0C49  1BF4               	btfsc	___awmod@dividend,7
  3043  0C4A  03F5               	decf	___awmod@dividend+1,f
  3044  0C4B  300A               	movlw	10
  3045  0C4C  00F2               	movwf	___awmod@divisor
  3046  0C4D  3000               	movlw	0
  3047  0C4E  00F3               	movwf	___awmod@divisor+1
  3048  0C4F  160A  118A  21CA  120A  158A  	fcall	___awmod
  3049  0C54  0872               	movf	?___awmod,w
  3050  0C55  120A  158A  2001  120A  158A  	fcall	___bmul
  3051  0C5A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3052  0C5B  0084               	movwf	4
  3053  0C5C  160A  118A  200A  120A  158A  	fcall	stringdir
  3054  0C61  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0C62  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0C63  00AB               	movwf	___ftmul@f1
  3057  0C64  160A  118A  200A  120A  158A  	fcall	stringdir
  3058  0C69  00AC               	movwf	___ftmul@f1+1
  3059  0C6A  160A  118A  200A  120A  158A  	fcall	stringdir
  3060  0C6F  00AD               	movwf	___ftmul@f1+2
  3061  0C70  0840               	movf	_scale$1171,w
  3062  0C71  00AE               	movwf	___ftmul@f2
  3063  0C72  0841               	movf	_scale$1171+1,w
  3064  0C73  00AF               	movwf	___ftmul@f2+1
  3065  0C74  0842               	movf	_scale$1171+2,w
  3066  0C75  00B0               	movwf	___ftmul@f2+2
  3067  0C76  160A  118A  24B9  120A  158A  	fcall	___ftmul
  3068  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  3069  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  3070  0C7D  082B               	movf	?___ftmul,w
  3071  0C7E  00BB               	movwf	?_scale
  3072  0C7F  082C               	movf	?___ftmul+1,w
  3073  0C80  00BC               	movwf	?_scale+1
  3074  0C81  082D               	movf	?___ftmul+2,w
  3075  0C82  00BD               	movwf	?_scale+2
  3076  0C83  2D17               	goto	l335
  3077  0C84                     l3567:
  3078  0C84  0843               	movf	scale@scl,w
  3079  0C85  3A80               	xorlw	128
  3080  0C86  3E75               	addlw	-139
  3081  0C87  1C03               	skipc
  3082  0C88  2C8A               	goto	u5031
  3083  0C89  2C8B               	goto	u5030
  3084  0C8A                     u5031:
  3085  0C8A  2CF7               	goto	l3573
  3086  0C8B                     u5030:
  3087  0C8B                     l3569:
  3088                           
  3089                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _powers_[(unsigne
      +                          d char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3090  0C8B  3003               	movlw	3
  3091  0C8C  00BE               	movwf	??_scale
  3092  0C8D  083E               	movf	??_scale,w
  3093  0C8E  00A8               	movwf	___bmul@multiplicand
  3094  0C8F  0843               	movf	scale@scl,w
  3095  0C90  00F4               	movwf	___awmod@dividend
  3096  0C91  01F5               	clrf	___awmod@dividend+1
  3097  0C92  1BF4               	btfsc	___awmod@dividend,7
  3098  0C93  03F5               	decf	___awmod@dividend+1,f
  3099  0C94  300A               	movlw	10
  3100  0C95  00F2               	movwf	___awmod@divisor
  3101  0C96  3000               	movlw	0
  3102  0C97  00F3               	movwf	___awmod@divisor+1
  3103  0C98  160A  118A  21CA  120A  158A  	fcall	___awmod
  3104  0C9D  0872               	movf	?___awmod,w
  3105  0C9E  120A  158A  2001  120A  158A  	fcall	___bmul
  3106  0CA3  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3107  0CA4  0084               	movwf	4
  3108  0CA5  160A  118A  200A  120A  158A  	fcall	stringdir
  3109  0CAA  1283               	bcf	3,5	;RP0=0, select bank0
  3110  0CAB  1303               	bcf	3,6	;RP1=0, select bank0
  3111  0CAC  00AB               	movwf	___ftmul@f1
  3112  0CAD  160A  118A  200A  120A  158A  	fcall	stringdir
  3113  0CB2  00AC               	movwf	___ftmul@f1+1
  3114  0CB3  160A  118A  200A  120A  158A  	fcall	stringdir
  3115  0CB8  00AD               	movwf	___ftmul@f1+2
  3116  0CB9  3003               	movlw	3
  3117  0CBA  00BF               	movwf	??_scale+1
  3118  0CBB  083F               	movf	??_scale+1,w
  3119  0CBC  00A8               	movwf	___bmul@multiplicand
  3120  0CBD  0843               	movf	scale@scl,w
  3121  0CBE  00A2               	movwf	___awdiv@dividend
  3122  0CBF  01A3               	clrf	___awdiv@dividend+1
  3123  0CC0  1BA2               	btfsc	___awdiv@dividend,7
  3124  0CC1  03A3               	decf	___awdiv@dividend+1,f
  3125  0CC2  300A               	movlw	10
  3126  0CC3  00A0               	movwf	___awdiv@divisor
  3127  0CC4  3000               	movlw	0
  3128  0CC5  00A1               	movwf	___awdiv@divisor+1
  3129  0CC6  160A  118A  228B  120A  158A  	fcall	___awdiv
  3130  0CCB  1283               	bcf	3,5	;RP0=0, select bank0
  3131  0CCC  1303               	bcf	3,6	;RP1=0, select bank0
  3132  0CCD  0820               	movf	?___awdiv,w
  3133  0CCE  120A  158A  2001  120A  158A  	fcall	___bmul
  3134  0CD3  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3135  0CD4  0084               	movwf	4
  3136  0CD5  160A  118A  200A  120A  158A  	fcall	stringdir
  3137  0CDA  1283               	bcf	3,5	;RP0=0, select bank0
  3138  0CDB  1303               	bcf	3,6	;RP1=0, select bank0
  3139  0CDC  00AE               	movwf	___ftmul@f2
  3140  0CDD  160A  118A  200A  120A  158A  	fcall	stringdir
  3141  0CE2  00AF               	movwf	___ftmul@f2+1
  3142  0CE3  160A  118A  200A  120A  158A  	fcall	stringdir
  3143  0CE8  00B0               	movwf	___ftmul@f2+2
  3144  0CE9  160A  118A  24B9  120A  158A  	fcall	___ftmul
  3145  0CEE  1283               	bcf	3,5	;RP0=0, select bank0
  3146  0CEF  1303               	bcf	3,6	;RP1=0, select bank0
  3147  0CF0  082B               	movf	?___ftmul,w
  3148  0CF1  00BB               	movwf	?_scale
  3149  0CF2  082C               	movf	?___ftmul+1,w
  3150  0CF3  00BC               	movwf	?_scale+1
  3151  0CF4  082D               	movf	?___ftmul+2,w
  3152  0CF5  00BD               	movwf	?_scale+2
  3153  0CF6  2D17               	goto	l335
  3154  0CF7                     l3573:
  3155                           
  3156                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _powers_[(unsigned
      +                           char)scl];
  3157  0CF7  3003               	movlw	3
  3158  0CF8  00BE               	movwf	??_scale
  3159  0CF9  083E               	movf	??_scale,w
  3160  0CFA  00A8               	movwf	___bmul@multiplicand
  3161  0CFB  0843               	movf	scale@scl,w
  3162  0CFC  120A  158A  2001  120A  158A  	fcall	___bmul
  3163  0D01  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3164  0D02  0084               	movwf	4
  3165  0D03  160A  118A  200A  120A  158A  	fcall	stringdir
  3166  0D08  1283               	bcf	3,5	;RP0=0, select bank0
  3167  0D09  1303               	bcf	3,6	;RP1=0, select bank0
  3168  0D0A  00BB               	movwf	?_scale
  3169  0D0B  160A  118A  200A  120A  158A  	fcall	stringdir
  3170  0D10  00BC               	movwf	?_scale+1
  3171  0D11  160A  118A  200A  120A  158A  	fcall	stringdir
  3172  0D16  00BD               	movwf	?_scale+2
  3173  0D17                     l335:
  3174  0D17  0008               	return
  3175  0D18                     __end_of_scale:
  3176                           
  3177                           	psect	text3
  3178  11CA                     __ptext3:	
  3179 ;; *************** function ___awmod *****************
  3180 ;; Defined at:
  3181 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  divisor         2    2[COMMON] int 
  3184 ;;  dividend        2    4[COMMON] int 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;  sign            1    8[COMMON] unsigned char 
  3187 ;;  counter         1    7[COMMON] unsigned char 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  2    2[COMMON] int 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3197 ;;      Params:         4       0       0       0       0
  3198 ;;      Locals:         2       0       0       0       0
  3199 ;;      Temps:          1       0       0       0       0
  3200 ;;      Totals:         7       0       0       0       0
  3201 ;;Total ram usage:        7 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    1
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_scale
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           
  3212                           ;psect for function ___awmod
  3213  11CA                     ___awmod:
  3214  11CA                     l2211:	
  3215                           ;incstack = 0
  3216                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3217                           
  3218  11CA  01F8               	clrf	___awmod@sign
  3219  11CB                     l2213:
  3220  11CB  1FF5               	btfss	___awmod@dividend+1,7
  3221  11CC  29CE               	goto	u2441
  3222  11CD  29CF               	goto	u2440
  3223  11CE                     u2441:
  3224  11CE  29D6               	goto	l2219
  3225  11CF                     u2440:
  3226  11CF                     l2215:
  3227  11CF  09F4               	comf	___awmod@dividend,f
  3228  11D0  09F5               	comf	___awmod@dividend+1,f
  3229  11D1  0AF4               	incf	___awmod@dividend,f
  3230  11D2  1903               	skipnz
  3231  11D3  0AF5               	incf	___awmod@dividend+1,f
  3232  11D4                     l2217:
  3233  11D4  01F8               	clrf	___awmod@sign
  3234  11D5  0AF8               	incf	___awmod@sign,f
  3235  11D6                     l2219:
  3236  11D6  1FF3               	btfss	___awmod@divisor+1,7
  3237  11D7  29D9               	goto	u2451
  3238  11D8  29DA               	goto	u2450
  3239  11D9                     u2451:
  3240  11D9  29DF               	goto	l2223
  3241  11DA                     u2450:
  3242  11DA                     l2221:
  3243  11DA  09F2               	comf	___awmod@divisor,f
  3244  11DB  09F3               	comf	___awmod@divisor+1,f
  3245  11DC  0AF2               	incf	___awmod@divisor,f
  3246  11DD  1903               	skipnz
  3247  11DE  0AF3               	incf	___awmod@divisor+1,f
  3248  11DF                     l2223:
  3249  11DF  0872               	movf	___awmod@divisor,w
  3250  11E0  0473               	iorwf	___awmod@divisor+1,w
  3251  11E1  1903               	btfsc	3,2
  3252  11E2  29E4               	goto	u2461
  3253  11E3  29E5               	goto	u2460
  3254  11E4                     u2461:
  3255  11E4  2A14               	goto	l2241
  3256  11E5                     u2460:
  3257  11E5                     l2225:
  3258  11E5  01F7               	clrf	___awmod@counter
  3259  11E6  0AF7               	incf	___awmod@counter,f
  3260  11E7  29F3               	goto	l2231
  3261  11E8                     l2227:
  3262  11E8  3001               	movlw	1
  3263  11E9                     u2475:
  3264  11E9  1003               	clrc
  3265  11EA  0DF2               	rlf	___awmod@divisor,f
  3266  11EB  0DF3               	rlf	___awmod@divisor+1,f
  3267  11EC  3EFF               	addlw	-1
  3268  11ED  1D03               	skipz
  3269  11EE  29E9               	goto	u2475
  3270  11EF                     l2229:
  3271  11EF  3001               	movlw	1
  3272  11F0  00F6               	movwf	??___awmod
  3273  11F1  0876               	movf	??___awmod,w
  3274  11F2  07F7               	addwf	___awmod@counter,f
  3275  11F3                     l2231:
  3276  11F3  1FF3               	btfss	___awmod@divisor+1,7
  3277  11F4  29F6               	goto	u2481
  3278  11F5  29F7               	goto	u2480
  3279  11F6                     u2481:
  3280  11F6  29E8               	goto	l2227
  3281  11F7                     u2480:
  3282  11F7                     l2233:
  3283  11F7  0873               	movf	___awmod@divisor+1,w
  3284  11F8  0275               	subwf	___awmod@dividend+1,w
  3285  11F9  1D03               	skipz
  3286  11FA  29FD               	goto	u2495
  3287  11FB  0872               	movf	___awmod@divisor,w
  3288  11FC  0274               	subwf	___awmod@dividend,w
  3289  11FD                     u2495:
  3290  11FD  1C03               	skipc
  3291  11FE  2A00               	goto	u2491
  3292  11FF  2A01               	goto	u2490
  3293  1200                     u2491:
  3294  1200  2A07               	goto	l2237
  3295  1201                     u2490:
  3296  1201                     l2235:
  3297  1201  0872               	movf	___awmod@divisor,w
  3298  1202  02F4               	subwf	___awmod@dividend,f
  3299  1203  0873               	movf	___awmod@divisor+1,w
  3300  1204  1C03               	skipc
  3301  1205  03F5               	decf	___awmod@dividend+1,f
  3302  1206  02F5               	subwf	___awmod@dividend+1,f
  3303  1207                     l2237:
  3304  1207  3001               	movlw	1
  3305  1208                     u2505:
  3306  1208  1003               	clrc
  3307  1209  0CF3               	rrf	___awmod@divisor+1,f
  3308  120A  0CF2               	rrf	___awmod@divisor,f
  3309  120B  3EFF               	addlw	-1
  3310  120C  1D03               	skipz
  3311  120D  2A08               	goto	u2505
  3312  120E                     l2239:
  3313  120E  3001               	movlw	1
  3314  120F  02F7               	subwf	___awmod@counter,f
  3315  1210  1D03               	btfss	3,2
  3316  1211  2A13               	goto	u2511
  3317  1212  2A14               	goto	u2510
  3318  1213                     u2511:
  3319  1213  29F7               	goto	l2233
  3320  1214                     u2510:
  3321  1214                     l2241:
  3322  1214  0878               	movf	___awmod@sign,w
  3323  1215  1903               	btfsc	3,2
  3324  1216  2A18               	goto	u2521
  3325  1217  2A19               	goto	u2520
  3326  1218                     u2521:
  3327  1218  2A1E               	goto	l2245
  3328  1219                     u2520:
  3329  1219                     l2243:
  3330  1219  09F4               	comf	___awmod@dividend,f
  3331  121A  09F5               	comf	___awmod@dividend+1,f
  3332  121B  0AF4               	incf	___awmod@dividend,f
  3333  121C  1903               	skipnz
  3334  121D  0AF5               	incf	___awmod@dividend+1,f
  3335  121E                     l2245:
  3336  121E  0875               	movf	___awmod@dividend+1,w
  3337  121F  00F3               	movwf	?___awmod+1
  3338  1220  0874               	movf	___awmod@dividend,w
  3339  1221  00F2               	movwf	?___awmod
  3340  1222                     l627:
  3341  1222  0008               	return
  3342  1223                     __end_of___awmod:
  3343                           
  3344                           	psect	text4
  3345  128B                     __ptext4:	
  3346 ;; *************** function ___awdiv *****************
  3347 ;; Defined at:
  3348 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;  divisor         2    0[BANK0 ] int 
  3351 ;;  dividend        2    2[BANK0 ] int 
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;  quotient        2    6[BANK0 ] int 
  3354 ;;  sign            1    5[BANK0 ] unsigned char 
  3355 ;;  counter         1    4[BANK0 ] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  2    0[BANK0 ] int 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3365 ;;      Params:         0       4       0       0       0
  3366 ;;      Locals:         0       4       0       0       0
  3367 ;;      Temps:          1       0       0       0       0
  3368 ;;      Totals:         1       8       0       0       0
  3369 ;;Total ram usage:        9 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    1
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_scale
  3376 ;;		_sprintf
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           
  3381                           ;psect for function ___awdiv
  3382  128B                     ___awdiv:
  3383  128B                     l2167:	
  3384                           ;incstack = 0
  3385                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3386                           
  3387  128B  1283               	bcf	3,5	;RP0=0, select bank0
  3388  128C  1303               	bcf	3,6	;RP1=0, select bank0
  3389  128D  01A5               	clrf	___awdiv@sign
  3390  128E                     l2169:
  3391  128E  1FA1               	btfss	___awdiv@divisor+1,7
  3392  128F  2A91               	goto	u2341
  3393  1290  2A92               	goto	u2340
  3394  1291                     u2341:
  3395  1291  2A99               	goto	l2175
  3396  1292                     u2340:
  3397  1292                     l2171:
  3398  1292  09A0               	comf	___awdiv@divisor,f
  3399  1293  09A1               	comf	___awdiv@divisor+1,f
  3400  1294  0AA0               	incf	___awdiv@divisor,f
  3401  1295  1903               	skipnz
  3402  1296  0AA1               	incf	___awdiv@divisor+1,f
  3403  1297                     l2173:
  3404  1297  01A5               	clrf	___awdiv@sign
  3405  1298  0AA5               	incf	___awdiv@sign,f
  3406  1299                     l2175:
  3407  1299  1FA3               	btfss	___awdiv@dividend+1,7
  3408  129A  2A9C               	goto	u2351
  3409  129B  2A9D               	goto	u2350
  3410  129C                     u2351:
  3411  129C  2AA6               	goto	l2181
  3412  129D                     u2350:
  3413  129D                     l2177:
  3414  129D  09A2               	comf	___awdiv@dividend,f
  3415  129E  09A3               	comf	___awdiv@dividend+1,f
  3416  129F  0AA2               	incf	___awdiv@dividend,f
  3417  12A0  1903               	skipnz
  3418  12A1  0AA3               	incf	___awdiv@dividend+1,f
  3419  12A2                     l2179:
  3420  12A2  3001               	movlw	1
  3421  12A3  00F9               	movwf	??___awdiv
  3422  12A4  0879               	movf	??___awdiv,w
  3423  12A5  06A5               	xorwf	___awdiv@sign,f
  3424  12A6                     l2181:
  3425  12A6  01A6               	clrf	___awdiv@quotient
  3426  12A7  01A7               	clrf	___awdiv@quotient+1
  3427  12A8                     l2183:
  3428  12A8  0820               	movf	___awdiv@divisor,w
  3429  12A9  0421               	iorwf	___awdiv@divisor+1,w
  3430  12AA  1903               	btfsc	3,2
  3431  12AB  2AAD               	goto	u2361
  3432  12AC  2AAE               	goto	u2360
  3433  12AD                     u2361:
  3434  12AD  2AE5               	goto	l2203
  3435  12AE                     u2360:
  3436  12AE                     l2185:
  3437  12AE  01A4               	clrf	___awdiv@counter
  3438  12AF  0AA4               	incf	___awdiv@counter,f
  3439  12B0  2ABC               	goto	l2191
  3440  12B1                     l2187:
  3441  12B1  3001               	movlw	1
  3442  12B2                     u2375:
  3443  12B2  1003               	clrc
  3444  12B3  0DA0               	rlf	___awdiv@divisor,f
  3445  12B4  0DA1               	rlf	___awdiv@divisor+1,f
  3446  12B5  3EFF               	addlw	-1
  3447  12B6  1D03               	skipz
  3448  12B7  2AB2               	goto	u2375
  3449  12B8                     l2189:
  3450  12B8  3001               	movlw	1
  3451  12B9  00F9               	movwf	??___awdiv
  3452  12BA  0879               	movf	??___awdiv,w
  3453  12BB  07A4               	addwf	___awdiv@counter,f
  3454  12BC                     l2191:
  3455  12BC  1FA1               	btfss	___awdiv@divisor+1,7
  3456  12BD  2ABF               	goto	u2381
  3457  12BE  2AC0               	goto	u2380
  3458  12BF                     u2381:
  3459  12BF  2AB1               	goto	l2187
  3460  12C0                     u2380:
  3461  12C0                     l2193:
  3462  12C0  3001               	movlw	1
  3463  12C1                     u2395:
  3464  12C1  1003               	clrc
  3465  12C2  0DA6               	rlf	___awdiv@quotient,f
  3466  12C3  0DA7               	rlf	___awdiv@quotient+1,f
  3467  12C4  3EFF               	addlw	-1
  3468  12C5  1D03               	skipz
  3469  12C6  2AC1               	goto	u2395
  3470  12C7  0821               	movf	___awdiv@divisor+1,w
  3471  12C8  0223               	subwf	___awdiv@dividend+1,w
  3472  12C9  1D03               	skipz
  3473  12CA  2ACD               	goto	u2405
  3474  12CB  0820               	movf	___awdiv@divisor,w
  3475  12CC  0222               	subwf	___awdiv@dividend,w
  3476  12CD                     u2405:
  3477  12CD  1C03               	skipc
  3478  12CE  2AD0               	goto	u2401
  3479  12CF  2AD1               	goto	u2400
  3480  12D0                     u2401:
  3481  12D0  2AD8               	goto	l2199
  3482  12D1                     u2400:
  3483  12D1                     l2195:
  3484  12D1  0820               	movf	___awdiv@divisor,w
  3485  12D2  02A2               	subwf	___awdiv@dividend,f
  3486  12D3  0821               	movf	___awdiv@divisor+1,w
  3487  12D4  1C03               	skipc
  3488  12D5  03A3               	decf	___awdiv@dividend+1,f
  3489  12D6  02A3               	subwf	___awdiv@dividend+1,f
  3490  12D7                     l2197:
  3491  12D7  1426               	bsf	___awdiv@quotient,0
  3492  12D8                     l2199:
  3493  12D8  3001               	movlw	1
  3494  12D9                     u2415:
  3495  12D9  1003               	clrc
  3496  12DA  0CA1               	rrf	___awdiv@divisor+1,f
  3497  12DB  0CA0               	rrf	___awdiv@divisor,f
  3498  12DC  3EFF               	addlw	-1
  3499  12DD  1D03               	skipz
  3500  12DE  2AD9               	goto	u2415
  3501  12DF                     l2201:
  3502  12DF  3001               	movlw	1
  3503  12E0  02A4               	subwf	___awdiv@counter,f
  3504  12E1  1D03               	btfss	3,2
  3505  12E2  2AE4               	goto	u2421
  3506  12E3  2AE5               	goto	u2420
  3507  12E4                     u2421:
  3508  12E4  2AC0               	goto	l2193
  3509  12E5                     u2420:
  3510  12E5                     l2203:
  3511  12E5  0825               	movf	___awdiv@sign,w
  3512  12E6  1903               	btfsc	3,2
  3513  12E7  2AE9               	goto	u2431
  3514  12E8  2AEA               	goto	u2430
  3515  12E9                     u2431:
  3516  12E9  2AEF               	goto	l2207
  3517  12EA                     u2430:
  3518  12EA                     l2205:
  3519  12EA  09A6               	comf	___awdiv@quotient,f
  3520  12EB  09A7               	comf	___awdiv@quotient+1,f
  3521  12EC  0AA6               	incf	___awdiv@quotient,f
  3522  12ED  1903               	skipnz
  3523  12EE  0AA7               	incf	___awdiv@quotient+1,f
  3524  12EF                     l2207:
  3525  12EF  0827               	movf	___awdiv@quotient+1,w
  3526  12F0  00A1               	movwf	?___awdiv+1
  3527  12F1  0826               	movf	___awdiv@quotient,w
  3528  12F2  00A0               	movwf	?___awdiv
  3529  12F3                     l614:
  3530  12F3  0008               	return
  3531  12F4                     __end_of___awdiv:
  3532                           
  3533                           	psect	text5
  3534  1DAC                     __ptext5:	
  3535 ;; *************** function _isdigit *****************
  3536 ;; Defined at:
  3537 ;;		line 8 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;  c               1    wreg     unsigned char 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;  c               1    3[COMMON] unsigned char 
  3542 ;; Return value:  Size  Location     Type
  3543 ;;		None               void
  3544 ;; Registers used:
  3545 ;;		wreg, status,2, status,0
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3551 ;;      Params:         0       0       0       0       0
  3552 ;;      Locals:         2       0       0       0       0
  3553 ;;      Temps:          0       0       0       0       0
  3554 ;;      Totals:         2       0       0       0       0
  3555 ;;Total ram usage:        2 bytes
  3556 ;; Hardware stack levels used:    1
  3557 ;; Hardware stack levels required when called:    1
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_sprintf
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           
  3566                           ;psect for function _isdigit
  3567  1DAC                     _isdigit:
  3568                           
  3569                           ;incstack = 0
  3570                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3571                           ;isdigit@c stored from wreg
  3572  1DAC  00F3               	movwf	isdigit@c
  3573  1DAD                     l2547:
  3574  1DAD  01F2               	clrf	_isdigit$978
  3575  1DAE                     l2549:
  3576  1DAE  303A               	movlw	58
  3577  1DAF  0273               	subwf	isdigit@c,w
  3578  1DB0  1803               	skipnc
  3579  1DB1  2DB3               	goto	u3121
  3580  1DB2  2DB4               	goto	u3120
  3581  1DB3                     u3121:
  3582  1DB3  2DBC               	goto	l2555
  3583  1DB4                     u3120:
  3584  1DB4                     l2551:
  3585  1DB4  3030               	movlw	48
  3586  1DB5  0273               	subwf	isdigit@c,w
  3587  1DB6  1C03               	skipc
  3588  1DB7  2DB9               	goto	u3131
  3589  1DB8  2DBA               	goto	u3130
  3590  1DB9                     u3131:
  3591  1DB9  2DBC               	goto	l2555
  3592  1DBA                     u3130:
  3593  1DBA                     l2553:
  3594  1DBA  01F2               	clrf	_isdigit$978
  3595  1DBB  0AF2               	incf	_isdigit$978,f
  3596  1DBC                     l2555:
  3597  1DBC  0C72               	rrf	_isdigit$978,w
  3598  1DBD                     l893:
  3599  1DBD  0008               	return
  3600  1DBE                     __end_of_isdigit:
  3601                           
  3602                           	psect	text6
  3603  08B4                     __ptext6:	
  3604 ;; *************** function _fround *****************
  3605 ;; Defined at:
  3606 ;;		line 417 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;  prec            1    wreg     unsigned char 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  prec            1   42[BANK0 ] unsigned char 
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  3   27[BANK0 ] unsigned char 
  3613 ;; Registers used:
  3614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3620 ;;      Params:         0       3       0       0       0
  3621 ;;      Locals:         0       7       0       0       0
  3622 ;;      Temps:          0       6       0       0       0
  3623 ;;      Totals:         0      16       0       0       0
  3624 ;;Total ram usage:       16 bytes
  3625 ;; Hardware stack levels used:    1
  3626 ;; Hardware stack levels required when called:    3
  3627 ;; This function calls:
  3628 ;;		___bmul
  3629 ;;		___ftmul
  3630 ;;		___lwdiv
  3631 ;;		___lwmod
  3632 ;; This function is called by:
  3633 ;;		_sprintf
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           
  3638                           ;psect for function _fround
  3639  08B4                     _fround:
  3640                           
  3641                           ;incstack = 0
  3642                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3643                           ;fround@prec stored from wreg
  3644  08B4  1283               	bcf	3,5	;RP0=0, select bank0
  3645  08B5  1303               	bcf	3,6	;RP1=0, select bank0
  3646  08B6  00CA               	movwf	fround@prec
  3647  08B7                     l3515:
  3648                           
  3649                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsigned char prec)
      +                          ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418: {;D:\Microchip\xc8\v2.31\p
      +                          ic\sources\c90\common\doprnt.c: 421:  if(prec>=110)
  3650  08B7  306E               	movlw	110
  3651  08B8  024A               	subwf	fround@prec,w
  3652  08B9  1C03               	skipc
  3653  08BA  28BC               	goto	u4971
  3654  08BB  28BD               	goto	u4970
  3655  08BC                     u4971:
  3656  08BC  299A               	goto	l3525
  3657  08BD                     u4970:
  3658  08BD                     l3517:
  3659                           
  3660                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[p
      +                          rec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3661  08BD  3003               	movlw	3
  3662  08BE  00BE               	movwf	??_fround
  3663  08BF  083E               	movf	??_fround,w
  3664  08C0  00A8               	movwf	___bmul@multiplicand
  3665  08C1  084A               	movf	fround@prec,w
  3666  08C2  00BF               	movwf	??_fround+1
  3667  08C3  01C0               	clrf	??_fround+2
  3668  08C4  083F               	movf	??_fround+1,w
  3669  08C5  00F4               	movwf	___lwmod@dividend
  3670  08C6  0840               	movf	??_fround+2,w
  3671  08C7  00F5               	movwf	___lwmod@dividend+1
  3672  08C8  3064               	movlw	100
  3673  08C9  00F2               	movwf	___lwmod@divisor
  3674  08CA  3000               	movlw	0
  3675  08CB  00F3               	movwf	___lwmod@divisor+1
  3676  08CC  160A  158A  273A  120A  158A  	fcall	___lwmod
  3677  08D1  0873               	movf	?___lwmod+1,w
  3678  08D2  1283               	bcf	3,5	;RP0=0, select bank0
  3679  08D3  1303               	bcf	3,6	;RP1=0, select bank0
  3680  08D4  00A3               	movwf	___lwdiv@dividend+1
  3681  08D5  0872               	movf	?___lwmod,w
  3682  08D6  00A2               	movwf	___lwdiv@dividend
  3683  08D7  300A               	movlw	10
  3684  08D8  00A0               	movwf	___lwdiv@divisor
  3685  08D9  3000               	movlw	0
  3686  08DA  00A1               	movwf	___lwdiv@divisor+1
  3687  08DB  160A  158A  27BA  120A  158A  	fcall	___lwdiv
  3688  08E0  1283               	bcf	3,5	;RP0=0, select bank0
  3689  08E1  1303               	bcf	3,6	;RP1=0, select bank0
  3690  08E2  0820               	movf	?___lwdiv,w
  3691  08E3  120A  158A  2001  120A  158A  	fcall	___bmul
  3692  08E8  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3693  08E9  0084               	movwf	4
  3694  08EA  160A  118A  200A  120A  158A  	fcall	stringdir
  3695  08EF  1283               	bcf	3,5	;RP0=0, select bank0
  3696  08F0  1303               	bcf	3,6	;RP1=0, select bank0
  3697  08F1  00AB               	movwf	___ftmul@f1
  3698  08F2  160A  118A  200A  120A  158A  	fcall	stringdir
  3699  08F7  00AC               	movwf	___ftmul@f1+1
  3700  08F8  160A  118A  200A  120A  158A  	fcall	stringdir
  3701  08FD  00AD               	movwf	___ftmul@f1+2
  3702  08FE  3003               	movlw	3
  3703  08FF  00C1               	movwf	??_fround+3
  3704  0900  0841               	movf	??_fround+3,w
  3705  0901  00A8               	movwf	___bmul@multiplicand
  3706  0902  084A               	movf	fround@prec,w
  3707  0903  00C2               	movwf	??_fround+4
  3708  0904  01C3               	clrf	??_fround+5
  3709  0905  0842               	movf	??_fround+4,w
  3710  0906  00A2               	movwf	___lwdiv@dividend
  3711  0907  0843               	movf	??_fround+5,w
  3712  0908  00A3               	movwf	___lwdiv@dividend+1
  3713  0909  3064               	movlw	100
  3714  090A  00A0               	movwf	___lwdiv@divisor
  3715  090B  3000               	movlw	0
  3716  090C  00A1               	movwf	___lwdiv@divisor+1
  3717  090D  160A  158A  27BA  120A  158A  	fcall	___lwdiv
  3718  0912  1283               	bcf	3,5	;RP0=0, select bank0
  3719  0913  1303               	bcf	3,6	;RP1=0, select bank0
  3720  0914  0820               	movf	?___lwdiv,w
  3721  0915  120A  158A  2001  120A  158A  	fcall	___bmul
  3722  091A  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3723  091B  0084               	movwf	4
  3724  091C  160A  118A  200A  120A  158A  	fcall	stringdir
  3725  0921  1283               	bcf	3,5	;RP0=0, select bank0
  3726  0922  1303               	bcf	3,6	;RP1=0, select bank0
  3727  0923  00AE               	movwf	___ftmul@f2
  3728  0924  160A  118A  200A  120A  158A  	fcall	stringdir
  3729  0929  00AF               	movwf	___ftmul@f2+1
  3730  092A  160A  118A  200A  120A  158A  	fcall	stringdir
  3731  092F  00B0               	movwf	___ftmul@f2+2
  3732  0930  160A  118A  24B9  120A  158A  	fcall	___ftmul
  3733  0935  1283               	bcf	3,5	;RP0=0, select bank0
  3734  0936  1303               	bcf	3,6	;RP1=0, select bank0
  3735  0937  082B               	movf	?___ftmul,w
  3736  0938  00C7               	movwf	_fround$1169
  3737  0939  082C               	movf	?___ftmul+1,w
  3738  093A  00C8               	movwf	_fround$1169+1
  3739  093B  082D               	movf	?___ftmul+2,w
  3740  093C  00C9               	movwf	_fround$1169+2
  3741                           
  3742                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[p
      +                          rec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3743  093D  3003               	movlw	3
  3744  093E  00BE               	movwf	??_fround
  3745  093F  083E               	movf	??_fround,w
  3746  0940  00A8               	movwf	___bmul@multiplicand
  3747  0941  084A               	movf	fround@prec,w
  3748  0942  00BF               	movwf	??_fround+1
  3749  0943  01C0               	clrf	??_fround+2
  3750  0944  083F               	movf	??_fround+1,w
  3751  0945  00F4               	movwf	___lwmod@dividend
  3752  0946  0840               	movf	??_fround+2,w
  3753  0947  00F5               	movwf	___lwmod@dividend+1
  3754  0948  300A               	movlw	10
  3755  0949  00F2               	movwf	___lwmod@divisor
  3756  094A  3000               	movlw	0
  3757  094B  00F3               	movwf	___lwmod@divisor+1
  3758  094C  160A  158A  273A  120A  158A  	fcall	___lwmod
  3759  0951  0872               	movf	?___lwmod,w
  3760  0952  120A  158A  2001  120A  158A  	fcall	___bmul
  3761  0957  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3762  0958  0084               	movwf	4
  3763  0959  160A  118A  200A  120A  158A  	fcall	stringdir
  3764  095E  1283               	bcf	3,5	;RP0=0, select bank0
  3765  095F  1303               	bcf	3,6	;RP1=0, select bank0
  3766  0960  00AB               	movwf	___ftmul@f1
  3767  0961  160A  118A  200A  120A  158A  	fcall	stringdir
  3768  0966  00AC               	movwf	___ftmul@f1+1
  3769  0967  160A  118A  200A  120A  158A  	fcall	stringdir
  3770  096C  00AD               	movwf	___ftmul@f1+2
  3771  096D  0847               	movf	_fround$1169,w
  3772  096E  00AE               	movwf	___ftmul@f2
  3773  096F  0848               	movf	_fround$1169+1,w
  3774  0970  00AF               	movwf	___ftmul@f2+1
  3775  0971  0849               	movf	_fround$1169+2,w
  3776  0972  00B0               	movwf	___ftmul@f2+2
  3777  0973  160A  118A  24B9  120A  158A  	fcall	___ftmul
  3778  0978  1283               	bcf	3,5	;RP0=0, select bank0
  3779  0979  1303               	bcf	3,6	;RP1=0, select bank0
  3780  097A  082B               	movf	?___ftmul,w
  3781  097B  00C4               	movwf	_fround$1170
  3782  097C  082C               	movf	?___ftmul+1,w
  3783  097D  00C5               	movwf	_fround$1170+1
  3784  097E  082D               	movf	?___ftmul+2,w
  3785  097F  00C6               	movwf	_fround$1170+2
  3786  0980                     l3519:
  3787                           
  3788                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[p
      +                          rec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3789  0980  3000               	movlw	0
  3790  0981  00AB               	movwf	___ftmul@f1
  3791  0982  3000               	movlw	0
  3792  0983  00AC               	movwf	___ftmul@f1+1
  3793  0984  303F               	movlw	63
  3794  0985  00AD               	movwf	___ftmul@f1+2
  3795  0986  0844               	movf	_fround$1170,w
  3796  0987  00AE               	movwf	___ftmul@f2
  3797  0988  0845               	movf	_fround$1170+1,w
  3798  0989  00AF               	movwf	___ftmul@f2+1
  3799  098A  0846               	movf	_fround$1170+2,w
  3800  098B  00B0               	movwf	___ftmul@f2+2
  3801  098C  160A  118A  24B9  120A  158A  	fcall	___ftmul
  3802  0991  1283               	bcf	3,5	;RP0=0, select bank0
  3803  0992  1303               	bcf	3,6	;RP1=0, select bank0
  3804  0993  082B               	movf	?___ftmul,w
  3805  0994  00BB               	movwf	?_fround
  3806  0995  082C               	movf	?___ftmul+1,w
  3807  0996  00BC               	movwf	?_fround+1
  3808  0997  082D               	movf	?___ftmul+2,w
  3809  0998  00BD               	movwf	?_fround+2
  3810  0999  2A5C               	goto	l328
  3811  099A                     l3525:
  3812  099A  300B               	movlw	11
  3813  099B  024A               	subwf	fround@prec,w
  3814  099C  1C03               	skipc
  3815  099D  299F               	goto	u4981
  3816  099E  29A0               	goto	u4980
  3817  099F                     u4981:
  3818  099F  2A29               	goto	l3533
  3819  09A0                     u4980:
  3820  09A0                     l3527:
  3821                           
  3822                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[p
      +                          rec/10U+9U] * _npowers_[prec%10U];
  3823  09A0  3003               	movlw	3
  3824  09A1  00BE               	movwf	??_fround
  3825  09A2  083E               	movf	??_fround,w
  3826  09A3  00A8               	movwf	___bmul@multiplicand
  3827  09A4  084A               	movf	fround@prec,w
  3828  09A5  00BF               	movwf	??_fround+1
  3829  09A6  01C0               	clrf	??_fround+2
  3830  09A7  083F               	movf	??_fround+1,w
  3831  09A8  00F4               	movwf	___lwmod@dividend
  3832  09A9  0840               	movf	??_fround+2,w
  3833  09AA  00F5               	movwf	___lwmod@dividend+1
  3834  09AB  300A               	movlw	10
  3835  09AC  00F2               	movwf	___lwmod@divisor
  3836  09AD  3000               	movlw	0
  3837  09AE  00F3               	movwf	___lwmod@divisor+1
  3838  09AF  160A  158A  273A  120A  158A  	fcall	___lwmod
  3839  09B4  0872               	movf	?___lwmod,w
  3840  09B5  120A  158A  2001  120A  158A  	fcall	___bmul
  3841  09BA  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3842  09BB  0084               	movwf	4
  3843  09BC  160A  118A  200A  120A  158A  	fcall	stringdir
  3844  09C1  1283               	bcf	3,5	;RP0=0, select bank0
  3845  09C2  1303               	bcf	3,6	;RP1=0, select bank0
  3846  09C3  00AB               	movwf	___ftmul@f1
  3847  09C4  160A  118A  200A  120A  158A  	fcall	stringdir
  3848  09C9  00AC               	movwf	___ftmul@f1+1
  3849  09CA  160A  118A  200A  120A  158A  	fcall	stringdir
  3850  09CF  00AD               	movwf	___ftmul@f1+2
  3851  09D0  3003               	movlw	3
  3852  09D1  00C1               	movwf	??_fround+3
  3853  09D2  0841               	movf	??_fround+3,w
  3854  09D3  00A8               	movwf	___bmul@multiplicand
  3855  09D4  084A               	movf	fround@prec,w
  3856  09D5  00C2               	movwf	??_fround+4
  3857  09D6  01C3               	clrf	??_fround+5
  3858  09D7  0842               	movf	??_fround+4,w
  3859  09D8  00A2               	movwf	___lwdiv@dividend
  3860  09D9  0843               	movf	??_fround+5,w
  3861  09DA  00A3               	movwf	___lwdiv@dividend+1
  3862  09DB  300A               	movlw	10
  3863  09DC  00A0               	movwf	___lwdiv@divisor
  3864  09DD  3000               	movlw	0
  3865  09DE  00A1               	movwf	___lwdiv@divisor+1
  3866  09DF  160A  158A  27BA  120A  158A  	fcall	___lwdiv
  3867  09E4  1283               	bcf	3,5	;RP0=0, select bank0
  3868  09E5  1303               	bcf	3,6	;RP1=0, select bank0
  3869  09E6  0820               	movf	?___lwdiv,w
  3870  09E7  120A  158A  2001  120A  158A  	fcall	___bmul
  3871  09EC  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3872  09ED  0084               	movwf	4
  3873  09EE  160A  118A  200A  120A  158A  	fcall	stringdir
  3874  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3875  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3876  09F5  00AE               	movwf	___ftmul@f2
  3877  09F6  160A  118A  200A  120A  158A  	fcall	stringdir
  3878  09FB  00AF               	movwf	___ftmul@f2+1
  3879  09FC  160A  118A  200A  120A  158A  	fcall	stringdir
  3880  0A01  00B0               	movwf	___ftmul@f2+2
  3881  0A02  160A  118A  24B9  120A  158A  	fcall	___ftmul
  3882  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  3883  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  3884  0A09  082B               	movf	?___ftmul,w
  3885  0A0A  00C7               	movwf	_fround$1169
  3886  0A0B  082C               	movf	?___ftmul+1,w
  3887  0A0C  00C8               	movwf	_fround$1169+1
  3888  0A0D  082D               	movf	?___ftmul+2,w
  3889  0A0E  00C9               	movwf	_fround$1169+2
  3890  0A0F                     l3529:
  3891                           
  3892                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[p
      +                          rec/10U+9U] * _npowers_[prec%10U];
  3893  0A0F  3000               	movlw	0
  3894  0A10  00AB               	movwf	___ftmul@f1
  3895  0A11  3000               	movlw	0
  3896  0A12  00AC               	movwf	___ftmul@f1+1
  3897  0A13  303F               	movlw	63
  3898  0A14  00AD               	movwf	___ftmul@f1+2
  3899  0A15  0847               	movf	_fround$1169,w
  3900  0A16  00AE               	movwf	___ftmul@f2
  3901  0A17  0848               	movf	_fround$1169+1,w
  3902  0A18  00AF               	movwf	___ftmul@f2+1
  3903  0A19  0849               	movf	_fround$1169+2,w
  3904  0A1A  00B0               	movwf	___ftmul@f2+2
  3905  0A1B  160A  118A  24B9  120A  158A  	fcall	___ftmul
  3906  0A20  1283               	bcf	3,5	;RP0=0, select bank0
  3907  0A21  1303               	bcf	3,6	;RP1=0, select bank0
  3908  0A22  082B               	movf	?___ftmul,w
  3909  0A23  00BB               	movwf	?_fround
  3910  0A24  082C               	movf	?___ftmul+1,w
  3911  0A25  00BC               	movwf	?_fround+1
  3912  0A26  082D               	movf	?___ftmul+2,w
  3913  0A27  00BD               	movwf	?_fround+2
  3914  0A28  2A5C               	goto	l328
  3915  0A29                     l3533:
  3916                           
  3917                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 * _npowers_[pr
      +                          ec];
  3918  0A29  3000               	movlw	0
  3919  0A2A  00AB               	movwf	___ftmul@f1
  3920  0A2B  3000               	movlw	0
  3921  0A2C  00AC               	movwf	___ftmul@f1+1
  3922  0A2D  303F               	movlw	63
  3923  0A2E  00AD               	movwf	___ftmul@f1+2
  3924  0A2F  3003               	movlw	3
  3925  0A30  00BE               	movwf	??_fround
  3926  0A31  083E               	movf	??_fround,w
  3927  0A32  00A8               	movwf	___bmul@multiplicand
  3928  0A33  084A               	movf	fround@prec,w
  3929  0A34  120A  158A  2001  120A  158A  	fcall	___bmul
  3930  0A39  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3931  0A3A  0084               	movwf	4
  3932  0A3B  160A  118A  200A  120A  158A  	fcall	stringdir
  3933  0A40  1283               	bcf	3,5	;RP0=0, select bank0
  3934  0A41  1303               	bcf	3,6	;RP1=0, select bank0
  3935  0A42  00AE               	movwf	___ftmul@f2
  3936  0A43  160A  118A  200A  120A  158A  	fcall	stringdir
  3937  0A48  00AF               	movwf	___ftmul@f2+1
  3938  0A49  160A  118A  200A  120A  158A  	fcall	stringdir
  3939  0A4E  00B0               	movwf	___ftmul@f2+2
  3940  0A4F  160A  118A  24B9  120A  158A  	fcall	___ftmul
  3941  0A54  1283               	bcf	3,5	;RP0=0, select bank0
  3942  0A55  1303               	bcf	3,6	;RP1=0, select bank0
  3943  0A56  082B               	movf	?___ftmul,w
  3944  0A57  00BB               	movwf	?_fround
  3945  0A58  082C               	movf	?___ftmul+1,w
  3946  0A59  00BC               	movwf	?_fround+1
  3947  0A5A  082D               	movf	?___ftmul+2,w
  3948  0A5B  00BD               	movwf	?_fround+2
  3949  0A5C                     l328:
  3950  0A5C  0008               	return
  3951  0A5D                     __end_of_fround:
  3952                           
  3953                           	psect	text7
  3954  1F3A                     __ptext7:	
  3955 ;; *************** function ___lwmod *****************
  3956 ;; Defined at:
  3957 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;  divisor         2    2[COMMON] unsigned int 
  3960 ;;  dividend        2    4[COMMON] unsigned int 
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;  counter         1    7[COMMON] unsigned char 
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  2    2[COMMON] unsigned int 
  3965 ;; Registers used:
  3966 ;;		wreg, status,2, status,0
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3972 ;;      Params:         4       0       0       0       0
  3973 ;;      Locals:         1       0       0       0       0
  3974 ;;      Temps:          1       0       0       0       0
  3975 ;;      Totals:         6       0       0       0       0
  3976 ;;Total ram usage:        6 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    1
  3979 ;; This function calls:
  3980 ;;		Nothing
  3981 ;; This function is called by:
  3982 ;;		_fround
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           
  3987                           ;psect for function ___lwmod
  3988  1F3A                     ___lwmod:
  3989  1F3A                     l2395:	
  3990                           ;incstack = 0
  3991                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3992                           
  3993  1F3A  0872               	movf	___lwmod@divisor,w
  3994  1F3B  0473               	iorwf	___lwmod@divisor+1,w
  3995  1F3C  1903               	btfsc	3,2
  3996  1F3D  2F3F               	goto	u2981
  3997  1F3E  2F40               	goto	u2980
  3998  1F3F                     u2981:
  3999  1F3F  2F6F               	goto	l2413
  4000  1F40                     u2980:
  4001  1F40                     l2397:
  4002  1F40  01F7               	clrf	___lwmod@counter
  4003  1F41  0AF7               	incf	___lwmod@counter,f
  4004  1F42  2F4E               	goto	l2403
  4005  1F43                     l2399:
  4006  1F43  3001               	movlw	1
  4007  1F44                     u2995:
  4008  1F44  1003               	clrc
  4009  1F45  0DF2               	rlf	___lwmod@divisor,f
  4010  1F46  0DF3               	rlf	___lwmod@divisor+1,f
  4011  1F47  3EFF               	addlw	-1
  4012  1F48  1D03               	skipz
  4013  1F49  2F44               	goto	u2995
  4014  1F4A                     l2401:
  4015  1F4A  3001               	movlw	1
  4016  1F4B  00F6               	movwf	??___lwmod
  4017  1F4C  0876               	movf	??___lwmod,w
  4018  1F4D  07F7               	addwf	___lwmod@counter,f
  4019  1F4E                     l2403:
  4020  1F4E  1FF3               	btfss	___lwmod@divisor+1,7
  4021  1F4F  2F51               	goto	u3001
  4022  1F50  2F52               	goto	u3000
  4023  1F51                     u3001:
  4024  1F51  2F43               	goto	l2399
  4025  1F52                     u3000:
  4026  1F52                     l2405:
  4027  1F52  0873               	movf	___lwmod@divisor+1,w
  4028  1F53  0275               	subwf	___lwmod@dividend+1,w
  4029  1F54  1D03               	skipz
  4030  1F55  2F58               	goto	u3015
  4031  1F56  0872               	movf	___lwmod@divisor,w
  4032  1F57  0274               	subwf	___lwmod@dividend,w
  4033  1F58                     u3015:
  4034  1F58  1C03               	skipc
  4035  1F59  2F5B               	goto	u3011
  4036  1F5A  2F5C               	goto	u3010
  4037  1F5B                     u3011:
  4038  1F5B  2F62               	goto	l2409
  4039  1F5C                     u3010:
  4040  1F5C                     l2407:
  4041  1F5C  0872               	movf	___lwmod@divisor,w
  4042  1F5D  02F4               	subwf	___lwmod@dividend,f
  4043  1F5E  0873               	movf	___lwmod@divisor+1,w
  4044  1F5F  1C03               	skipc
  4045  1F60  03F5               	decf	___lwmod@dividend+1,f
  4046  1F61  02F5               	subwf	___lwmod@dividend+1,f
  4047  1F62                     l2409:
  4048  1F62  3001               	movlw	1
  4049  1F63                     u3025:
  4050  1F63  1003               	clrc
  4051  1F64  0CF3               	rrf	___lwmod@divisor+1,f
  4052  1F65  0CF2               	rrf	___lwmod@divisor,f
  4053  1F66  3EFF               	addlw	-1
  4054  1F67  1D03               	skipz
  4055  1F68  2F63               	goto	u3025
  4056  1F69                     l2411:
  4057  1F69  3001               	movlw	1
  4058  1F6A  02F7               	subwf	___lwmod@counter,f
  4059  1F6B  1D03               	btfss	3,2
  4060  1F6C  2F6E               	goto	u3031
  4061  1F6D  2F6F               	goto	u3030
  4062  1F6E                     u3031:
  4063  1F6E  2F52               	goto	l2405
  4064  1F6F                     u3030:
  4065  1F6F                     l2413:
  4066  1F6F  0875               	movf	___lwmod@dividend+1,w
  4067  1F70  00F3               	movwf	?___lwmod+1
  4068  1F71  0874               	movf	___lwmod@dividend,w
  4069  1F72  00F2               	movwf	?___lwmod
  4070  1F73                     l883:
  4071  1F73  0008               	return
  4072  1F74                     __end_of___lwmod:
  4073                           
  4074                           	psect	text8
  4075  1FBA                     __ptext8:	
  4076 ;; *************** function ___lwdiv *****************
  4077 ;; Defined at:
  4078 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  divisor         2    0[BANK0 ] unsigned int 
  4081 ;;  dividend        2    2[BANK0 ] unsigned int 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  quotient        2    5[BANK0 ] unsigned int 
  4084 ;;  counter         1    4[BANK0 ] unsigned char 
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  2    0[BANK0 ] unsigned int 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2, status,0
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4094 ;;      Params:         0       4       0       0       0
  4095 ;;      Locals:         0       3       0       0       0
  4096 ;;      Temps:          1       0       0       0       0
  4097 ;;      Totals:         1       7       0       0       0
  4098 ;;Total ram usage:        8 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:    1
  4101 ;; This function calls:
  4102 ;;		Nothing
  4103 ;; This function is called by:
  4104 ;;		_fround
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           
  4109                           ;psect for function ___lwdiv
  4110  1FBA                     ___lwdiv:
  4111  1FBA                     l3465:	
  4112                           ;incstack = 0
  4113                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4114                           
  4115  1FBA  1283               	bcf	3,5	;RP0=0, select bank0
  4116  1FBB  1303               	bcf	3,6	;RP1=0, select bank0
  4117  1FBC  01A5               	clrf	___lwdiv@quotient
  4118  1FBD  01A6               	clrf	___lwdiv@quotient+1
  4119  1FBE                     l3467:
  4120  1FBE  0820               	movf	___lwdiv@divisor,w
  4121  1FBF  0421               	iorwf	___lwdiv@divisor+1,w
  4122  1FC0  1903               	btfsc	3,2
  4123  1FC1  2FC3               	goto	u4901
  4124  1FC2  2FC4               	goto	u4900
  4125  1FC3                     u4901:
  4126  1FC3  2FFB               	goto	l3487
  4127  1FC4                     u4900:
  4128  1FC4                     l3469:
  4129  1FC4  01A4               	clrf	___lwdiv@counter
  4130  1FC5  0AA4               	incf	___lwdiv@counter,f
  4131  1FC6  2FD2               	goto	l3475
  4132  1FC7                     l3471:
  4133  1FC7  3001               	movlw	1
  4134  1FC8                     u4915:
  4135  1FC8  1003               	clrc
  4136  1FC9  0DA0               	rlf	___lwdiv@divisor,f
  4137  1FCA  0DA1               	rlf	___lwdiv@divisor+1,f
  4138  1FCB  3EFF               	addlw	-1
  4139  1FCC  1D03               	skipz
  4140  1FCD  2FC8               	goto	u4915
  4141  1FCE                     l3473:
  4142  1FCE  3001               	movlw	1
  4143  1FCF  00F8               	movwf	??___lwdiv
  4144  1FD0  0878               	movf	??___lwdiv,w
  4145  1FD1  07A4               	addwf	___lwdiv@counter,f
  4146  1FD2                     l3475:
  4147  1FD2  1FA1               	btfss	___lwdiv@divisor+1,7
  4148  1FD3  2FD5               	goto	u4921
  4149  1FD4  2FD6               	goto	u4920
  4150  1FD5                     u4921:
  4151  1FD5  2FC7               	goto	l3471
  4152  1FD6                     u4920:
  4153  1FD6                     l3477:
  4154  1FD6  3001               	movlw	1
  4155  1FD7                     u4935:
  4156  1FD7  1003               	clrc
  4157  1FD8  0DA5               	rlf	___lwdiv@quotient,f
  4158  1FD9  0DA6               	rlf	___lwdiv@quotient+1,f
  4159  1FDA  3EFF               	addlw	-1
  4160  1FDB  1D03               	skipz
  4161  1FDC  2FD7               	goto	u4935
  4162  1FDD  0821               	movf	___lwdiv@divisor+1,w
  4163  1FDE  0223               	subwf	___lwdiv@dividend+1,w
  4164  1FDF  1D03               	skipz
  4165  1FE0  2FE3               	goto	u4945
  4166  1FE1  0820               	movf	___lwdiv@divisor,w
  4167  1FE2  0222               	subwf	___lwdiv@dividend,w
  4168  1FE3                     u4945:
  4169  1FE3  1C03               	skipc
  4170  1FE4  2FE6               	goto	u4941
  4171  1FE5  2FE7               	goto	u4940
  4172  1FE6                     u4941:
  4173  1FE6  2FEE               	goto	l3483
  4174  1FE7                     u4940:
  4175  1FE7                     l3479:
  4176  1FE7  0820               	movf	___lwdiv@divisor,w
  4177  1FE8  02A2               	subwf	___lwdiv@dividend,f
  4178  1FE9  0821               	movf	___lwdiv@divisor+1,w
  4179  1FEA  1C03               	skipc
  4180  1FEB  03A3               	decf	___lwdiv@dividend+1,f
  4181  1FEC  02A3               	subwf	___lwdiv@dividend+1,f
  4182  1FED                     l3481:
  4183  1FED  1425               	bsf	___lwdiv@quotient,0
  4184  1FEE                     l3483:
  4185  1FEE  3001               	movlw	1
  4186  1FEF                     u4955:
  4187  1FEF  1003               	clrc
  4188  1FF0  0CA1               	rrf	___lwdiv@divisor+1,f
  4189  1FF1  0CA0               	rrf	___lwdiv@divisor,f
  4190  1FF2  3EFF               	addlw	-1
  4191  1FF3  1D03               	skipz
  4192  1FF4  2FEF               	goto	u4955
  4193  1FF5                     l3485:
  4194  1FF5  3001               	movlw	1
  4195  1FF6  02A4               	subwf	___lwdiv@counter,f
  4196  1FF7  1D03               	btfss	3,2
  4197  1FF8  2FFA               	goto	u4961
  4198  1FF9  2FFB               	goto	u4960
  4199  1FFA                     u4961:
  4200  1FFA  2FD6               	goto	l3477
  4201  1FFB                     u4960:
  4202  1FFB                     l3487:
  4203  1FFB  0826               	movf	___lwdiv@quotient+1,w
  4204  1FFC  00A1               	movwf	?___lwdiv+1
  4205  1FFD  0825               	movf	___lwdiv@quotient,w
  4206  1FFE  00A0               	movwf	?___lwdiv
  4207  1FFF                     l873:
  4208  1FFF  0008               	return
  4209  2000                     __end_of___lwdiv:
  4210                           
  4211                           	psect	text9
  4212  0801                     __ptext9:	
  4213 ;; *************** function ___bmul *****************
  4214 ;; Defined at:
  4215 ;;		line 4 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  multiplier      1    wreg     unsigned char 
  4218 ;;  multiplicand    1    8[BANK0 ] unsigned char 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  multiplier      1   10[BANK0 ] unsigned char 
  4221 ;;  product         1    9[BANK0 ] unsigned char 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      unsigned char 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4231 ;;      Params:         0       1       0       0       0
  4232 ;;      Locals:         0       2       0       0       0
  4233 ;;      Temps:          1       0       0       0       0
  4234 ;;      Totals:         1       3       0       0       0
  4235 ;;Total ram usage:        4 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:    1
  4238 ;; This function calls:
  4239 ;;		Nothing
  4240 ;; This function is called by:
  4241 ;;		_fround
  4242 ;;		_scale
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           
  4247                           ;psect for function ___bmul
  4248  0801                     ___bmul:
  4249                           
  4250                           ;incstack = 0
  4251                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4252                           ;___bmul@multiplier stored from wreg
  4253  0801  1283               	bcf	3,5	;RP0=0, select bank0
  4254  0802  1303               	bcf	3,6	;RP1=0, select bank0
  4255  0803  00AA               	movwf	___bmul@multiplier
  4256  0804                     l3331:
  4257  0804  01A9               	clrf	___bmul@product
  4258  0805                     l3333:
  4259  0805  1C2A               	btfss	___bmul@multiplier,0
  4260  0806  2808               	goto	u4501
  4261  0807  2809               	goto	u4500
  4262  0808                     u4501:
  4263  0808  280D               	goto	l3337
  4264  0809                     u4500:
  4265  0809                     l3335:
  4266  0809  0828               	movf	___bmul@multiplicand,w
  4267  080A  00FA               	movwf	??___bmul
  4268  080B  087A               	movf	??___bmul,w
  4269  080C  07A9               	addwf	___bmul@product,f
  4270  080D                     l3337:
  4271  080D  1003               	clrc
  4272  080E  0DA8               	rlf	___bmul@multiplicand,f
  4273  080F                     l3339:
  4274  080F  1003               	clrc
  4275  0810  0CAA               	rrf	___bmul@multiplier,f
  4276  0811  082A               	movf	___bmul@multiplier,w
  4277  0812  1D03               	btfss	3,2
  4278  0813  2815               	goto	u4511
  4279  0814  2816               	goto	u4510
  4280  0815                     u4511:
  4281  0815  2805               	goto	l3333
  4282  0816                     u4510:
  4283  0816                     l3341:
  4284  0816  0829               	movf	___bmul@product,w
  4285  0817                     l457:
  4286  0817  0008               	return
  4287  0818                     __end_of___bmul:
  4288                           
  4289                           	psect	text10
  4290  13FC                     __ptext10:	
  4291 ;; *************** function __tdiv_to_l_ *****************
  4292 ;; Defined at:
  4293 ;;		line 60 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  f1              3    2[COMMON] float 
  4296 ;;  f2              3    5[COMMON] float 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  quot            4    4[BANK0 ] unsigned long 
  4299 ;;  exp1            1    9[BANK0 ] unsigned char 
  4300 ;;  cntr            1    8[BANK0 ] unsigned char 
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  4    2[COMMON] unsigned long 
  4303 ;; Registers used:
  4304 ;;		wreg, status,2, status,0
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4310 ;;      Params:         6       0       0       0       0
  4311 ;;      Locals:         0       6       0       0       0
  4312 ;;      Temps:          0       4       0       0       0
  4313 ;;      Totals:         6      10       0       0       0
  4314 ;;Total ram usage:       16 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; Hardware stack levels required when called:    1
  4317 ;; This function calls:
  4318 ;;		Nothing
  4319 ;; This function is called by:
  4320 ;;		_sprintf
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           
  4325                           ;psect for function __tdiv_to_l_
  4326  13FC                     __tdiv_to_l_:
  4327  13FC                     l3577:	
  4328                           ;incstack = 0
  4329                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4330                           
  4331  13FC  0872               	movf	__tdiv_to_l_@f1,w
  4332  13FD  1283               	bcf	3,5	;RP0=0, select bank0
  4333  13FE  1303               	bcf	3,6	;RP1=0, select bank0
  4334  13FF  00A0               	movwf	??__tdiv_to_l_
  4335  1400  0873               	movf	__tdiv_to_l_@f1+1,w
  4336  1401  00A1               	movwf	??__tdiv_to_l_+1
  4337  1402  0874               	movf	__tdiv_to_l_@f1+2,w
  4338  1403  00A2               	movwf	??__tdiv_to_l_+2
  4339  1404  1003               	clrc
  4340  1405  0D21               	rlf	??__tdiv_to_l_+1,w
  4341  1406  0D22               	rlf	??__tdiv_to_l_+2,w
  4342  1407  00A3               	movwf	??__tdiv_to_l_+3
  4343  1408  0823               	movf	??__tdiv_to_l_+3,w
  4344  1409  00A9               	movwf	__tdiv_to_l_@exp1
  4345  140A  0829               	movf	__tdiv_to_l_@exp1,w
  4346  140B  1D03               	btfss	3,2
  4347  140C  2C0E               	goto	u5041
  4348  140D  2C0F               	goto	u5040
  4349  140E                     u5041:
  4350  140E  2C18               	goto	l3583
  4351  140F                     u5040:
  4352  140F                     l3579:
  4353  140F  3000               	movlw	0
  4354  1410  00F5               	movwf	?__tdiv_to_l_+3
  4355  1411  3000               	movlw	0
  4356  1412  00F4               	movwf	?__tdiv_to_l_+2
  4357  1413  3000               	movlw	0
  4358  1414  00F3               	movwf	?__tdiv_to_l_+1
  4359  1415  3000               	movlw	0
  4360  1416  00F2               	movwf	?__tdiv_to_l_
  4361  1417  2CB8               	goto	l716
  4362  1418                     l3583:
  4363  1418  0875               	movf	__tdiv_to_l_@f2,w
  4364  1419  00A0               	movwf	??__tdiv_to_l_
  4365  141A  0876               	movf	__tdiv_to_l_@f2+1,w
  4366  141B  00A1               	movwf	??__tdiv_to_l_+1
  4367  141C  0877               	movf	__tdiv_to_l_@f2+2,w
  4368  141D  00A2               	movwf	??__tdiv_to_l_+2
  4369  141E  1003               	clrc
  4370  141F  0D21               	rlf	??__tdiv_to_l_+1,w
  4371  1420  0D22               	rlf	??__tdiv_to_l_+2,w
  4372  1421  00A3               	movwf	??__tdiv_to_l_+3
  4373  1422  0823               	movf	??__tdiv_to_l_+3,w
  4374  1423  00A8               	movwf	__tdiv_to_l_@cntr
  4375  1424  0828               	movf	__tdiv_to_l_@cntr,w
  4376  1425  1D03               	btfss	3,2
  4377  1426  2C28               	goto	u5051
  4378  1427  2C29               	goto	u5050
  4379  1428                     u5051:
  4380  1428  2C2A               	goto	l717
  4381  1429                     u5050:
  4382  1429  2C0F               	goto	l3579
  4383  142A                     l717:
  4384  142A  17F3               	bsf	__tdiv_to_l_@f1+1,7
  4385  142B                     l3589:
  4386  142B  30FF               	movlw	255
  4387  142C  05F2               	andwf	__tdiv_to_l_@f1,f
  4388  142D  30FF               	movlw	255
  4389  142E  05F3               	andwf	__tdiv_to_l_@f1+1,f
  4390  142F  3000               	movlw	0
  4391  1430  05F4               	andwf	__tdiv_to_l_@f1+2,f
  4392  1431                     l3591:
  4393  1431  17F6               	bsf	__tdiv_to_l_@f2+1,7
  4394  1432  30FF               	movlw	255
  4395  1433  05F5               	andwf	__tdiv_to_l_@f2,f
  4396  1434  30FF               	movlw	255
  4397  1435  05F6               	andwf	__tdiv_to_l_@f2+1,f
  4398  1436  3000               	movlw	0
  4399  1437  05F7               	andwf	__tdiv_to_l_@f2+2,f
  4400  1438  3000               	movlw	0
  4401  1439  00A7               	movwf	__tdiv_to_l_@quot+3
  4402  143A  3000               	movlw	0
  4403  143B  00A6               	movwf	__tdiv_to_l_@quot+2
  4404  143C  3000               	movlw	0
  4405  143D  00A5               	movwf	__tdiv_to_l_@quot+1
  4406  143E  3000               	movlw	0
  4407  143F  00A4               	movwf	__tdiv_to_l_@quot
  4408  1440                     l3593:
  4409  1440  307F               	movlw	127
  4410  1441  02A9               	subwf	__tdiv_to_l_@exp1,f
  4411  1442                     l3595:
  4412  1442  3098               	movlw	152
  4413  1443  0728               	addwf	__tdiv_to_l_@cntr,w
  4414  1444  00A0               	movwf	??__tdiv_to_l_
  4415  1445  0820               	movf	??__tdiv_to_l_,w
  4416  1446  02A9               	subwf	__tdiv_to_l_@exp1,f
  4417  1447  3018               	movlw	24
  4418  1448  00A0               	movwf	??__tdiv_to_l_
  4419  1449  0820               	movf	??__tdiv_to_l_,w
  4420  144A  00A8               	movwf	__tdiv_to_l_@cntr
  4421  144B                     l3597:
  4422  144B  3001               	movlw	1
  4423  144C  00A0               	movwf	??__tdiv_to_l_
  4424  144D                     u5065:
  4425  144D  1003               	clrc
  4426  144E  0DA4               	rlf	__tdiv_to_l_@quot,f
  4427  144F  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  4428  1450  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  4429  1451  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  4430  1452  0BA0               	decfsz	??__tdiv_to_l_,f
  4431  1453  2C4D               	goto	u5065
  4432  1454                     l3599:
  4433  1454  0877               	movf	__tdiv_to_l_@f2+2,w
  4434  1455  0274               	subwf	__tdiv_to_l_@f1+2,w
  4435  1456  1D03               	skipz
  4436  1457  2C5E               	goto	u5075
  4437  1458  0876               	movf	__tdiv_to_l_@f2+1,w
  4438  1459  0273               	subwf	__tdiv_to_l_@f1+1,w
  4439  145A  1D03               	skipz
  4440  145B  2C5E               	goto	u5075
  4441  145C  0875               	movf	__tdiv_to_l_@f2,w
  4442  145D  0272               	subwf	__tdiv_to_l_@f1,w
  4443  145E                     u5075:
  4444  145E  1C03               	skipc
  4445  145F  2C61               	goto	u5071
  4446  1460  2C62               	goto	u5070
  4447  1461                     u5071:
  4448  1461  2C6D               	goto	l3605
  4449  1462                     u5070:
  4450  1462                     l3601:
  4451  1462  0875               	movf	__tdiv_to_l_@f2,w
  4452  1463  02F2               	subwf	__tdiv_to_l_@f1,f
  4453  1464  0876               	movf	__tdiv_to_l_@f2+1,w
  4454  1465  1C03               	skipc
  4455  1466  0F76               	incfsz	__tdiv_to_l_@f2+1,w
  4456  1467  02F3               	subwf	__tdiv_to_l_@f1+1,f
  4457  1468  0877               	movf	__tdiv_to_l_@f2+2,w
  4458  1469  1C03               	skipc
  4459  146A  0A77               	incf	__tdiv_to_l_@f2+2,w
  4460  146B  02F4               	subwf	__tdiv_to_l_@f1+2,f
  4461  146C                     l3603:
  4462  146C  1424               	bsf	__tdiv_to_l_@quot,0
  4463  146D                     l3605:
  4464  146D  3001               	movlw	1
  4465  146E                     u5085:
  4466  146E  1003               	clrc
  4467  146F  0DF2               	rlf	__tdiv_to_l_@f1,f
  4468  1470  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  4469  1471  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  4470  1472  3EFF               	addlw	-1
  4471  1473  1D03               	skipz
  4472  1474  2C6E               	goto	u5085
  4473  1475                     l3607:
  4474  1475  3001               	movlw	1
  4475  1476  02A8               	subwf	__tdiv_to_l_@cntr,f
  4476  1477  1D03               	btfss	3,2
  4477  1478  2C7A               	goto	u5091
  4478  1479  2C7B               	goto	u5090
  4479  147A                     u5091:
  4480  147A  2C4B               	goto	l3597
  4481  147B                     u5090:
  4482  147B                     l720:
  4483  147B  1FA9               	btfss	__tdiv_to_l_@exp1,7
  4484  147C  2C7E               	goto	u5101
  4485  147D  2C7F               	goto	u5100
  4486  147E                     u5101:
  4487  147E  2C99               	goto	l3617
  4488  147F                     u5100:
  4489  147F                     l3609:
  4490  147F  0829               	movf	__tdiv_to_l_@exp1,w
  4491  1480  3A80               	xorlw	128
  4492  1481  3E97               	addlw	151
  4493  1482  1803               	skipnc
  4494  1483  2C85               	goto	u5111
  4495  1484  2C86               	goto	u5110
  4496  1485                     u5111:
  4497  1485  2C87               	goto	l3615
  4498  1486                     u5110:
  4499  1486  2C0F               	goto	l3579
  4500  1487                     l3615:
  4501  1487  3001               	movlw	1
  4502  1488                     u5125:
  4503  1488  1003               	clrc
  4504  1489  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  4505  148A  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  4506  148B  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  4507  148C  0CA4               	rrf	__tdiv_to_l_@quot,f
  4508  148D  3EFF               	addlw	-1
  4509  148E  1D03               	skipz
  4510  148F  2C88               	goto	u5125
  4511  1490  3001               	movlw	1
  4512  1491  00A0               	movwf	??__tdiv_to_l_
  4513  1492  0820               	movf	??__tdiv_to_l_,w
  4514  1493  07A9               	addwf	__tdiv_to_l_@exp1,f
  4515  1494  1D03               	btfss	3,2
  4516  1495  2C97               	goto	u5131
  4517  1496  2C98               	goto	u5130
  4518  1497                     u5131:
  4519  1497  2C87               	goto	l3615
  4520  1498                     u5130:
  4521  1498  2CB0               	goto	l3625
  4522  1499                     l3617:
  4523  1499  3018               	movlw	24
  4524  149A  0229               	subwf	__tdiv_to_l_@exp1,w
  4525  149B  1C03               	skipc
  4526  149C  2C9E               	goto	u5141
  4527  149D  2C9F               	goto	u5140
  4528  149E                     u5141:
  4529  149E  2CAB               	goto	l727
  4530  149F                     u5140:
  4531  149F  2C0F               	goto	l3579
  4532  14A0                     l3623:
  4533  14A0  3001               	movlw	1
  4534  14A1  00A0               	movwf	??__tdiv_to_l_
  4535  14A2                     u5155:
  4536  14A2  1003               	clrc
  4537  14A3  0DA4               	rlf	__tdiv_to_l_@quot,f
  4538  14A4  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  4539  14A5  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  4540  14A6  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  4541  14A7  0BA0               	decfsz	??__tdiv_to_l_,f
  4542  14A8  2CA2               	goto	u5155
  4543  14A9  3001               	movlw	1
  4544  14AA  02A9               	subwf	__tdiv_to_l_@exp1,f
  4545  14AB                     l727:
  4546  14AB  0829               	movf	__tdiv_to_l_@exp1,w
  4547  14AC  1D03               	btfss	3,2
  4548  14AD  2CAF               	goto	u5161
  4549  14AE  2CB0               	goto	u5160
  4550  14AF                     u5161:
  4551  14AF  2CA0               	goto	l3623
  4552  14B0                     u5160:
  4553  14B0                     l3625:
  4554  14B0  0827               	movf	__tdiv_to_l_@quot+3,w
  4555  14B1  00F5               	movwf	?__tdiv_to_l_+3
  4556  14B2  0826               	movf	__tdiv_to_l_@quot+2,w
  4557  14B3  00F4               	movwf	?__tdiv_to_l_+2
  4558  14B4  0825               	movf	__tdiv_to_l_@quot+1,w
  4559  14B5  00F3               	movwf	?__tdiv_to_l_+1
  4560  14B6  0824               	movf	__tdiv_to_l_@quot,w
  4561  14B7  00F2               	movwf	?__tdiv_to_l_
  4562  14B8                     l716:
  4563  14B8  0008               	return
  4564  14B9                     __end_of__tdiv_to_l_:
  4565                           
  4566                           	psect	text11
  4567  159E                     __ptext11:	
  4568 ;; *************** function __div_to_l_ *****************
  4569 ;; Defined at:
  4570 ;;		line 60 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  f1              3    2[COMMON] unsigned long 
  4573 ;;  f2              3    5[COMMON] unsigned long 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;  quot            4    8[BANK0 ] unsigned long 
  4576 ;;  exp1            1   13[BANK0 ] unsigned char 
  4577 ;;  cntr            1   12[BANK0 ] unsigned char 
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  4    2[COMMON] unsigned long 
  4580 ;; Registers used:
  4581 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4587 ;;      Params:         6       0       0       0       0
  4588 ;;      Locals:         0       6       0       0       0
  4589 ;;      Temps:          0       8       0       0       0
  4590 ;;      Totals:         6      14       0       0       0
  4591 ;;Total ram usage:       20 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; Hardware stack levels required when called:    1
  4594 ;; This function calls:
  4595 ;;		Nothing
  4596 ;; This function is called by:
  4597 ;;		_sprintf
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           
  4602                           ;psect for function __div_to_l_
  4603  159E                     __div_to_l_:
  4604  159E                     l2611:	
  4605                           ;incstack = 0
  4606                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  4607                           
  4608  159E  3072               	movlw	low (__div_to_l_@f1| 0)
  4609  159F  0084               	movwf	4
  4610  15A0  0800               	movf	0,w
  4611  15A1  1283               	bcf	3,5	;RP0=0, select bank0
  4612  15A2  1303               	bcf	3,6	;RP1=0, select bank0
  4613  15A3  00A0               	movwf	??__div_to_l_
  4614  15A4  0A84               	incf	4,f
  4615  15A5  0800               	movf	0,w
  4616  15A6  00A1               	movwf	??__div_to_l_+1
  4617  15A7  0A84               	incf	4,f
  4618  15A8  0800               	movf	0,w
  4619  15A9  00A2               	movwf	??__div_to_l_+2
  4620  15AA  0A84               	incf	4,f
  4621  15AB  0800               	movf	0,w
  4622  15AC  00A3               	movwf	??__div_to_l_+3
  4623  15AD  1003               	clrc
  4624  15AE  0D22               	rlf	??__div_to_l_+2,w
  4625  15AF  0D23               	rlf	??__div_to_l_+3,w
  4626  15B0  00A4               	movwf	??__div_to_l_+4
  4627  15B1  0824               	movf	??__div_to_l_+4,w
  4628  15B2  00AD               	movwf	__div_to_l_@exp1
  4629  15B3  082D               	movf	__div_to_l_@exp1,w
  4630  15B4  1D03               	btfss	3,2
  4631  15B5  2DB7               	goto	u3271
  4632  15B6  2DB8               	goto	u3270
  4633  15B7                     u3271:
  4634  15B7  2DC1               	goto	l2617
  4635  15B8                     u3270:
  4636  15B8                     l2613:
  4637  15B8  3000               	movlw	0
  4638  15B9  00F5               	movwf	?__div_to_l_+3
  4639  15BA  3000               	movlw	0
  4640  15BB  00F4               	movwf	?__div_to_l_+2
  4641  15BC  3000               	movlw	0
  4642  15BD  00F3               	movwf	?__div_to_l_+1
  4643  15BE  3000               	movlw	0
  4644  15BF  00F2               	movwf	?__div_to_l_
  4645  15C0  2EC9               	goto	l637
  4646  15C1                     l2617:
  4647  15C1  3075               	movlw	low (__div_to_l_@f2| 0)
  4648  15C2  0084               	movwf	4
  4649  15C3  0800               	movf	0,w
  4650  15C4  00A0               	movwf	??__div_to_l_
  4651  15C5  0A84               	incf	4,f
  4652  15C6  0800               	movf	0,w
  4653  15C7  00A1               	movwf	??__div_to_l_+1
  4654  15C8  0A84               	incf	4,f
  4655  15C9  0800               	movf	0,w
  4656  15CA  00A2               	movwf	??__div_to_l_+2
  4657  15CB  0A84               	incf	4,f
  4658  15CC  0800               	movf	0,w
  4659  15CD  00A3               	movwf	??__div_to_l_+3
  4660  15CE  1003               	clrc
  4661  15CF  0D22               	rlf	??__div_to_l_+2,w
  4662  15D0  0D23               	rlf	??__div_to_l_+3,w
  4663  15D1  00A4               	movwf	??__div_to_l_+4
  4664  15D2  0824               	movf	??__div_to_l_+4,w
  4665  15D3  00AC               	movwf	__div_to_l_@cntr
  4666  15D4  082C               	movf	__div_to_l_@cntr,w
  4667  15D5  1D03               	btfss	3,2
  4668  15D6  2DD8               	goto	u3281
  4669  15D7  2DD9               	goto	u3280
  4670  15D8                     u3281:
  4671  15D8  2DDA               	goto	l2623
  4672  15D9                     u3280:
  4673  15D9  2DB8               	goto	l2613
  4674  15DA                     l2623:
  4675  15DA  3072               	movlw	low (__div_to_l_@f1| 0)
  4676  15DB  0084               	movwf	4
  4677  15DC  3000               	movlw	0
  4678  15DD  0480               	iorwf	0,f
  4679  15DE  0A84               	incf	4,f
  4680  15DF  3000               	movlw	0
  4681  15E0  0480               	iorwf	0,f
  4682  15E1  0A84               	incf	4,f
  4683  15E2  3080               	movlw	128
  4684  15E3  0480               	iorwf	0,f
  4685  15E4  0A84               	incf	4,f
  4686  15E5  3000               	movlw	0
  4687  15E6  0480               	iorwf	0,f
  4688  15E7  3072               	movlw	low (__div_to_l_@f1| 0)
  4689  15E8  0084               	movwf	4
  4690  15E9  30FF               	movlw	255
  4691  15EA  0580               	andwf	0,f
  4692  15EB  0A84               	incf	4,f
  4693  15EC  30FF               	movlw	255
  4694  15ED  0580               	andwf	0,f
  4695  15EE  0A84               	incf	4,f
  4696  15EF  30FF               	movlw	255
  4697  15F0  0580               	andwf	0,f
  4698  15F1  0A84               	incf	4,f
  4699  15F2  3000               	movlw	0
  4700  15F3  0580               	andwf	0,f
  4701  15F4  3075               	movlw	low (__div_to_l_@f2| 0)
  4702  15F5  0084               	movwf	4
  4703  15F6  3000               	movlw	0
  4704  15F7  0480               	iorwf	0,f
  4705  15F8  0A84               	incf	4,f
  4706  15F9  3000               	movlw	0
  4707  15FA  0480               	iorwf	0,f
  4708  15FB  0A84               	incf	4,f
  4709  15FC  3080               	movlw	128
  4710  15FD  0480               	iorwf	0,f
  4711  15FE  0A84               	incf	4,f
  4712  15FF  3000               	movlw	0
  4713  1600  0480               	iorwf	0,f
  4714  1601  3075               	movlw	low (__div_to_l_@f2| 0)
  4715  1602  0084               	movwf	4
  4716  1603  30FF               	movlw	255
  4717  1604  0580               	andwf	0,f
  4718  1605  0A84               	incf	4,f
  4719  1606  30FF               	movlw	255
  4720  1607  0580               	andwf	0,f
  4721  1608  0A84               	incf	4,f
  4722  1609  30FF               	movlw	255
  4723  160A  0580               	andwf	0,f
  4724  160B  0A84               	incf	4,f
  4725  160C  3000               	movlw	0
  4726  160D  0580               	andwf	0,f
  4727  160E                     l2625:
  4728  160E  3000               	movlw	0
  4729  160F  00AB               	movwf	__div_to_l_@quot+3
  4730  1610  3000               	movlw	0
  4731  1611  00AA               	movwf	__div_to_l_@quot+2
  4732  1612  3000               	movlw	0
  4733  1613  00A9               	movwf	__div_to_l_@quot+1
  4734  1614  3000               	movlw	0
  4735  1615  00A8               	movwf	__div_to_l_@quot
  4736  1616                     l2627:
  4737  1616  307F               	movlw	127
  4738  1617  02AD               	subwf	__div_to_l_@exp1,f
  4739  1618                     l2629:
  4740  1618  30A0               	movlw	160
  4741  1619  072C               	addwf	__div_to_l_@cntr,w
  4742  161A  00A0               	movwf	??__div_to_l_
  4743  161B  0820               	movf	??__div_to_l_,w
  4744  161C  02AD               	subwf	__div_to_l_@exp1,f
  4745  161D                     l2631:
  4746  161D  3020               	movlw	32
  4747  161E  00A0               	movwf	??__div_to_l_
  4748  161F  0820               	movf	??__div_to_l_,w
  4749  1620  00AC               	movwf	__div_to_l_@cntr
  4750  1621                     l2633:
  4751  1621  3001               	movlw	1
  4752  1622  00A0               	movwf	??__div_to_l_
  4753  1623                     u3295:
  4754  1623  1003               	clrc
  4755  1624  0DA8               	rlf	__div_to_l_@quot,f
  4756  1625  0DA9               	rlf	__div_to_l_@quot+1,f
  4757  1626  0DAA               	rlf	__div_to_l_@quot+2,f
  4758  1627  0DAB               	rlf	__div_to_l_@quot+3,f
  4759  1628  0BA0               	decfsz	??__div_to_l_,f
  4760  1629  2E23               	goto	u3295
  4761  162A                     l2635:
  4762  162A  3075               	movlw	low (__div_to_l_@f2| 0)
  4763  162B  0084               	movwf	4
  4764  162C  0800               	movf	0,w
  4765  162D  00A0               	movwf	??__div_to_l_
  4766  162E  0A84               	incf	4,f
  4767  162F  0800               	movf	0,w
  4768  1630  00A1               	movwf	??__div_to_l_+1
  4769  1631  0A84               	incf	4,f
  4770  1632  0800               	movf	0,w
  4771  1633  00A2               	movwf	??__div_to_l_+2
  4772  1634  0A84               	incf	4,f
  4773  1635  0800               	movf	0,w
  4774  1636  00A3               	movwf	??__div_to_l_+3
  4775  1637  3072               	movlw	low (__div_to_l_@f1| 0)
  4776  1638  0084               	movwf	4
  4777  1639  0800               	movf	0,w
  4778  163A  00A4               	movwf	??__div_to_l_+4
  4779  163B  0A84               	incf	4,f
  4780  163C  0800               	movf	0,w
  4781  163D  00A5               	movwf	??__div_to_l_+5
  4782  163E  0A84               	incf	4,f
  4783  163F  0800               	movf	0,w
  4784  1640  00A6               	movwf	??__div_to_l_+6
  4785  1641  0A84               	incf	4,f
  4786  1642  0800               	movf	0,w
  4787  1643  00A7               	movwf	??__div_to_l_+7
  4788  1644  0823               	movf	??__div_to_l_+3,w
  4789  1645  0227               	subwf	??__div_to_l_+7,w
  4790  1646  1D03               	skipz
  4791  1647  2E52               	goto	u3305
  4792  1648  0822               	movf	??__div_to_l_+2,w
  4793  1649  0226               	subwf	??__div_to_l_+6,w
  4794  164A  1D03               	skipz
  4795  164B  2E52               	goto	u3305
  4796  164C  0821               	movf	??__div_to_l_+1,w
  4797  164D  0225               	subwf	??__div_to_l_+5,w
  4798  164E  1D03               	skipz
  4799  164F  2E52               	goto	u3305
  4800  1650  0820               	movf	??__div_to_l_,w
  4801  1651  0224               	subwf	??__div_to_l_+4,w
  4802  1652                     u3305:
  4803  1652  1C03               	skipc
  4804  1653  2E55               	goto	u3301
  4805  1654  2E56               	goto	u3300
  4806  1655                     u3301:
  4807  1655  2E79               	goto	l640
  4808  1656                     u3300:
  4809  1656                     l2637:
  4810  1656  3075               	movlw	low (__div_to_l_@f2| 0)
  4811  1657  0084               	movwf	4
  4812  1658  0800               	movf	0,w
  4813  1659  00A0               	movwf	??__div_to_l_
  4814  165A  0A84               	incf	4,f
  4815  165B  0800               	movf	0,w
  4816  165C  00A1               	movwf	??__div_to_l_+1
  4817  165D  0A84               	incf	4,f
  4818  165E  0800               	movf	0,w
  4819  165F  00A2               	movwf	??__div_to_l_+2
  4820  1660  0A84               	incf	4,f
  4821  1661  0800               	movf	0,w
  4822  1662  00A3               	movwf	??__div_to_l_+3
  4823  1663  3072               	movlw	low (__div_to_l_@f1| 0)
  4824  1664  0084               	movwf	4
  4825  1665  0820               	movf	??__div_to_l_,w
  4826  1666  0280               	subwf	0,f
  4827  1667  0A84               	incf	4,f
  4828  1668  0821               	movf	??__div_to_l_+1,w
  4829  1669  1C03               	skipc
  4830  166A  0F21               	incfsz	??__div_to_l_+1,w
  4831  166B  0280               	subwf	0,f
  4832  166C  0A84               	incf	4,f
  4833  166D  0822               	movf	??__div_to_l_+2,w
  4834  166E  1C03               	skipc
  4835  166F  0F22               	incfsz	??__div_to_l_+2,w
  4836  1670  0280               	subwf	0,f
  4837  1671  0A84               	incf	4,f
  4838  1672  0823               	movf	??__div_to_l_+3,w
  4839  1673  1C03               	skipc
  4840  1674  0A23               	incf	??__div_to_l_+3,w
  4841  1675  0280               	subwf	0,f
  4842  1676  3003               	movlw	3
  4843  1677  0284               	subwf	4,f
  4844  1678                     l2639:
  4845  1678  1428               	bsf	__div_to_l_@quot,0
  4846  1679                     l640:
  4847  1679  3072               	movlw	low (__div_to_l_@f1| 0)
  4848  167A  0084               	movwf	4
  4849  167B  1003               	clrc
  4850  167C  0D80               	rlf	0,f
  4851  167D  0A84               	incf	4,f
  4852  167E  0D80               	rlf	0,f
  4853  167F  0A84               	incf	4,f
  4854  1680  0D80               	rlf	0,f
  4855  1681  0A84               	incf	4,f
  4856  1682  0D80               	rlf	0,f
  4857  1683  0384               	decf	4,f
  4858  1684  0384               	decf	4,f
  4859  1685  0384               	decf	4,f
  4860  1686                     l2641:
  4861  1686  3001               	movlw	1
  4862  1687  02AC               	subwf	__div_to_l_@cntr,f
  4863  1688  1D03               	btfss	3,2
  4864  1689  2E8B               	goto	u3311
  4865  168A  2E8C               	goto	u3310
  4866  168B                     u3311:
  4867  168B  2E21               	goto	l2633
  4868  168C                     u3310:
  4869  168C                     l641:
  4870  168C  1FAD               	btfss	__div_to_l_@exp1,7
  4871  168D  2E8F               	goto	u3321
  4872  168E  2E90               	goto	u3320
  4873  168F                     u3321:
  4874  168F  2EAA               	goto	l2651
  4875  1690                     u3320:
  4876  1690                     l2643:
  4877  1690  082D               	movf	__div_to_l_@exp1,w
  4878  1691  3A80               	xorlw	128
  4879  1692  3E9F               	addlw	159
  4880  1693  1803               	skipnc
  4881  1694  2E96               	goto	u3331
  4882  1695  2E97               	goto	u3330
  4883  1696                     u3331:
  4884  1696  2E98               	goto	l2649
  4885  1697                     u3330:
  4886  1697  2DB8               	goto	l2613
  4887  1698                     l2649:
  4888  1698  3001               	movlw	1
  4889  1699                     u3345:
  4890  1699  1003               	clrc
  4891  169A  0CAB               	rrf	__div_to_l_@quot+3,f
  4892  169B  0CAA               	rrf	__div_to_l_@quot+2,f
  4893  169C  0CA9               	rrf	__div_to_l_@quot+1,f
  4894  169D  0CA8               	rrf	__div_to_l_@quot,f
  4895  169E  3EFF               	addlw	-1
  4896  169F  1D03               	skipz
  4897  16A0  2E99               	goto	u3345
  4898  16A1  3001               	movlw	1
  4899  16A2  00A0               	movwf	??__div_to_l_
  4900  16A3  0820               	movf	??__div_to_l_,w
  4901  16A4  07AD               	addwf	__div_to_l_@exp1,f
  4902  16A5  1D03               	btfss	3,2
  4903  16A6  2EA8               	goto	u3351
  4904  16A7  2EA9               	goto	u3350
  4905  16A8                     u3351:
  4906  16A8  2E98               	goto	l2649
  4907  16A9                     u3350:
  4908  16A9  2EC1               	goto	l2659
  4909  16AA                     l2651:
  4910  16AA  3020               	movlw	32
  4911  16AB  022D               	subwf	__div_to_l_@exp1,w
  4912  16AC  1C03               	skipc
  4913  16AD  2EAF               	goto	u3361
  4914  16AE  2EB0               	goto	u3360
  4915  16AF                     u3361:
  4916  16AF  2EBC               	goto	l648
  4917  16B0                     u3360:
  4918  16B0  2DB8               	goto	l2613
  4919  16B1                     l2657:
  4920  16B1  3001               	movlw	1
  4921  16B2  00A0               	movwf	??__div_to_l_
  4922  16B3                     u3375:
  4923  16B3  1003               	clrc
  4924  16B4  0DA8               	rlf	__div_to_l_@quot,f
  4925  16B5  0DA9               	rlf	__div_to_l_@quot+1,f
  4926  16B6  0DAA               	rlf	__div_to_l_@quot+2,f
  4927  16B7  0DAB               	rlf	__div_to_l_@quot+3,f
  4928  16B8  0BA0               	decfsz	??__div_to_l_,f
  4929  16B9  2EB3               	goto	u3375
  4930  16BA  3001               	movlw	1
  4931  16BB  02AD               	subwf	__div_to_l_@exp1,f
  4932  16BC                     l648:
  4933  16BC  082D               	movf	__div_to_l_@exp1,w
  4934  16BD  1D03               	btfss	3,2
  4935  16BE  2EC0               	goto	u3381
  4936  16BF  2EC1               	goto	u3380
  4937  16C0                     u3381:
  4938  16C0  2EB1               	goto	l2657
  4939  16C1                     u3380:
  4940  16C1                     l2659:
  4941  16C1  082B               	movf	__div_to_l_@quot+3,w
  4942  16C2  00F5               	movwf	?__div_to_l_+3
  4943  16C3  082A               	movf	__div_to_l_@quot+2,w
  4944  16C4  00F4               	movwf	?__div_to_l_+2
  4945  16C5  0829               	movf	__div_to_l_@quot+1,w
  4946  16C6  00F3               	movwf	?__div_to_l_+1
  4947  16C7  0828               	movf	__div_to_l_@quot,w
  4948  16C8  00F2               	movwf	?__div_to_l_
  4949  16C9                     l637:
  4950  16C9  0008               	return
  4951  16CA                     __end_of__div_to_l_:
  4952                           
  4953                           	psect	text12
  4954  1E2A                     __ptext12:	
  4955 ;; *************** function ___wmul *****************
  4956 ;; Defined at:
  4957 ;;		line 15 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  multiplier      2    2[COMMON] unsigned int 
  4960 ;;  multiplicand    2    4[COMMON] unsigned int 
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;  product         2    6[COMMON] unsigned int 
  4963 ;; Return value:  Size  Location     Type
  4964 ;;                  2    2[COMMON] unsigned int 
  4965 ;; Registers used:
  4966 ;;		wreg, status,2, status,0
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4972 ;;      Params:         4       0       0       0       0
  4973 ;;      Locals:         2       0       0       0       0
  4974 ;;      Temps:          0       0       0       0       0
  4975 ;;      Totals:         6       0       0       0       0
  4976 ;;Total ram usage:        6 bytes
  4977 ;; Hardware stack levels used:    1
  4978 ;; Hardware stack levels required when called:    1
  4979 ;; This function calls:
  4980 ;;		Nothing
  4981 ;; This function is called by:
  4982 ;;		_sprintf
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           
  4987                           ;psect for function ___wmul
  4988  1E2A                     ___wmul:
  4989  1E2A                     l2663:	
  4990                           ;incstack = 0
  4991                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4992                           
  4993  1E2A  01F6               	clrf	___wmul@product
  4994  1E2B  01F7               	clrf	___wmul@product+1
  4995  1E2C                     l2665:
  4996  1E2C  1C72               	btfss	___wmul@multiplier,0
  4997  1E2D  2E2F               	goto	u3391
  4998  1E2E  2E30               	goto	u3390
  4999  1E2F                     u3391:
  5000  1E2F  2E36               	goto	l431
  5001  1E30                     u3390:
  5002  1E30                     l2667:
  5003  1E30  0874               	movf	___wmul@multiplicand,w
  5004  1E31  07F6               	addwf	___wmul@product,f
  5005  1E32  1803               	skipnc
  5006  1E33  0AF7               	incf	___wmul@product+1,f
  5007  1E34  0875               	movf	___wmul@multiplicand+1,w
  5008  1E35  07F7               	addwf	___wmul@product+1,f
  5009  1E36                     l431:
  5010  1E36  3001               	movlw	1
  5011  1E37                     u3405:
  5012  1E37  1003               	clrc
  5013  1E38  0DF4               	rlf	___wmul@multiplicand,f
  5014  1E39  0DF5               	rlf	___wmul@multiplicand+1,f
  5015  1E3A  3EFF               	addlw	-1
  5016  1E3B  1D03               	skipz
  5017  1E3C  2E37               	goto	u3405
  5018  1E3D                     l2669:
  5019  1E3D  3001               	movlw	1
  5020  1E3E                     u3415:
  5021  1E3E  1003               	clrc
  5022  1E3F  0CF3               	rrf	___wmul@multiplier+1,f
  5023  1E40  0CF2               	rrf	___wmul@multiplier,f
  5024  1E41  3EFF               	addlw	-1
  5025  1E42  1D03               	skipz
  5026  1E43  2E3E               	goto	u3415
  5027  1E44                     l2671:
  5028  1E44  0872               	movf	___wmul@multiplier,w
  5029  1E45  0473               	iorwf	___wmul@multiplier+1,w
  5030  1E46  1D03               	btfss	3,2
  5031  1E47  2E49               	goto	u3421
  5032  1E48  2E4A               	goto	u3420
  5033  1E49                     u3421:
  5034  1E49  2E2C               	goto	l2665
  5035  1E4A                     u3420:
  5036  1E4A                     l2673:
  5037  1E4A  0877               	movf	___wmul@product+1,w
  5038  1E4B  00F3               	movwf	?___wmul+1
  5039  1E4C  0876               	movf	___wmul@product,w
  5040  1E4D  00F2               	movwf	?___wmul
  5041  1E4E                     l433:
  5042  1E4E  0008               	return
  5043  1E4F                     __end_of___wmul:
  5044                           
  5045                           	psect	text13
  5046  1ECF                     __ptext13:	
  5047 ;; *************** function ___lltoft *****************
  5048 ;; Defined at:
  5049 ;;		line 35 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lltoft.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;  c               4    0[BANK0 ] unsigned long 
  5052 ;; Auto vars:     Size  Location     Type
  5053 ;;  exp             1    4[BANK0 ] unsigned char 
  5054 ;; Return value:  Size  Location     Type
  5055 ;;                  3    0[BANK0 ] float 
  5056 ;; Registers used:
  5057 ;;		wreg, status,2, status,0, pclath, cstack
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5063 ;;      Params:         0       4       0       0       0
  5064 ;;      Locals:         0       1       0       0       0
  5065 ;;      Temps:          1       0       0       0       0
  5066 ;;      Totals:         1       5       0       0       0
  5067 ;;Total ram usage:        6 bytes
  5068 ;; Hardware stack levels used:    1
  5069 ;; Hardware stack levels required when called:    2
  5070 ;; This function calls:
  5071 ;;		___ftpack
  5072 ;; This function is called by:
  5073 ;;		_sprintf
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           
  5078                           ;psect for function ___lltoft
  5079  1ECF                     ___lltoft:
  5080  1ECF                     l3669:	
  5081                           ;incstack = 0
  5082                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5083                           
  5084  1ECF  308E               	movlw	142
  5085  1ED0  00FA               	movwf	??___lltoft
  5086  1ED1  087A               	movf	??___lltoft,w
  5087  1ED2  1283               	bcf	3,5	;RP0=0, select bank0
  5088  1ED3  1303               	bcf	3,6	;RP1=0, select bank0
  5089  1ED4  00A4               	movwf	___lltoft@exp
  5090  1ED5  2EE3               	goto	l3673
  5091  1ED6                     l3671:
  5092  1ED6  3001               	movlw	1
  5093  1ED7                     u5255:
  5094  1ED7  1003               	clrc
  5095  1ED8  0CA3               	rrf	___lltoft@c+3,f
  5096  1ED9  0CA2               	rrf	___lltoft@c+2,f
  5097  1EDA  0CA1               	rrf	___lltoft@c+1,f
  5098  1EDB  0CA0               	rrf	___lltoft@c,f
  5099  1EDC  3EFF               	addlw	-1
  5100  1EDD  1D03               	skipz
  5101  1EDE  2ED7               	goto	u5255
  5102  1EDF  3001               	movlw	1
  5103  1EE0  00FA               	movwf	??___lltoft
  5104  1EE1  087A               	movf	??___lltoft,w
  5105  1EE2  07A4               	addwf	___lltoft@exp,f
  5106  1EE3                     l3673:
  5107  1EE3  30FF               	movlw	255
  5108  1EE4  0523               	andwf	___lltoft@c+3,w
  5109  1EE5  1D03               	btfss	3,2
  5110  1EE6  2EE8               	goto	u5261
  5111  1EE7  2EE9               	goto	u5260
  5112  1EE8                     u5261:
  5113  1EE8  2ED6               	goto	l3671
  5114  1EE9                     u5260:
  5115  1EE9                     l3675:
  5116  1EE9  0820               	movf	___lltoft@c,w
  5117  1EEA  00F2               	movwf	___ftpack@arg
  5118  1EEB  0821               	movf	___lltoft@c+1,w
  5119  1EEC  00F3               	movwf	___ftpack@arg+1
  5120  1EED  0822               	movf	___lltoft@c+2,w
  5121  1EEE  00F4               	movwf	___ftpack@arg+2
  5122  1EEF  0824               	movf	___lltoft@exp,w
  5123  1EF0  00FA               	movwf	??___lltoft
  5124  1EF1  087A               	movf	??___lltoft,w
  5125  1EF2  00F5               	movwf	___ftpack@exp
  5126  1EF3  01F6               	clrf	___ftpack@sign
  5127  1EF4  160A  118A  22F4  160A  158A  	fcall	___ftpack
  5128  1EF9  0872               	movf	?___ftpack,w
  5129  1EFA  1283               	bcf	3,5	;RP0=0, select bank0
  5130  1EFB  1303               	bcf	3,6	;RP1=0, select bank0
  5131  1EFC  00A0               	movwf	?___lltoft
  5132  1EFD  0873               	movf	?___ftpack+1,w
  5133  1EFE  00A1               	movwf	?___lltoft+1
  5134  1EFF  0874               	movf	?___ftpack+2,w
  5135  1F00  00A2               	movwf	?___lltoft+2
  5136  1F01                     l810:
  5137  1F01  0008               	return
  5138  1F02                     __end_of___lltoft:
  5139                           
  5140                           	psect	text14
  5141  1174                     __ptext14:	
  5142 ;; *************** function ___llmod *****************
  5143 ;; Defined at:
  5144 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;  divisor         4    5[BANK0 ] unsigned long 
  5147 ;;  dividend        4    9[BANK0 ] unsigned long 
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;  counter         1   14[BANK0 ] unsigned char 
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  4    5[BANK0 ] unsigned long 
  5152 ;; Registers used:
  5153 ;;		wreg, status,2, status,0
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5159 ;;      Params:         0       8       0       0       0
  5160 ;;      Locals:         0       1       0       0       0
  5161 ;;      Temps:          0       1       0       0       0
  5162 ;;      Totals:         0      10       0       0       0
  5163 ;;Total ram usage:       10 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:    1
  5166 ;; This function calls:
  5167 ;;		Nothing
  5168 ;; This function is called by:
  5169 ;;		_sprintf
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           
  5174                           ;psect for function ___llmod
  5175  1174                     ___llmod:
  5176  1174                     l3649:	
  5177                           ;incstack = 0
  5178                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5179                           
  5180  1174  1283               	bcf	3,5	;RP0=0, select bank0
  5181  1175  1303               	bcf	3,6	;RP1=0, select bank0
  5182  1176  0828               	movf	___llmod@divisor+3,w
  5183  1177  0427               	iorwf	___llmod@divisor+2,w
  5184  1178  0426               	iorwf	___llmod@divisor+1,w
  5185  1179  0425               	iorwf	___llmod@divisor,w
  5186  117A  1903               	skipnz
  5187  117B  297D               	goto	u5191
  5188  117C  297E               	goto	u5190
  5189  117D                     u5191:
  5190  117D  29C1               	goto	l3665
  5191  117E                     u5190:
  5192  117E                     l3651:
  5193  117E  01AE               	clrf	___llmod@counter
  5194  117F  0AAE               	incf	___llmod@counter,f
  5195  1180  298E               	goto	l3655
  5196  1181                     l3653:
  5197  1181  3001               	movlw	1
  5198  1182  00AD               	movwf	??___llmod
  5199  1183                     u5205:
  5200  1183  1003               	clrc
  5201  1184  0DA5               	rlf	___llmod@divisor,f
  5202  1185  0DA6               	rlf	___llmod@divisor+1,f
  5203  1186  0DA7               	rlf	___llmod@divisor+2,f
  5204  1187  0DA8               	rlf	___llmod@divisor+3,f
  5205  1188  0BAD               	decfsz	??___llmod,f
  5206  1189  2983               	goto	u5205
  5207  118A  3001               	movlw	1
  5208  118B  00AD               	movwf	??___llmod
  5209  118C  082D               	movf	??___llmod,w
  5210  118D  07AE               	addwf	___llmod@counter,f
  5211  118E                     l3655:
  5212  118E  1FA8               	btfss	___llmod@divisor+3,7
  5213  118F  2991               	goto	u5211
  5214  1190  2992               	goto	u5210
  5215  1191                     u5211:
  5216  1191  2981               	goto	l3653
  5217  1192                     u5210:
  5218  1192                     l3657:
  5219  1192  0828               	movf	___llmod@divisor+3,w
  5220  1193  022C               	subwf	___llmod@dividend+3,w
  5221  1194  1D03               	skipz
  5222  1195  29A0               	goto	u5225
  5223  1196  0827               	movf	___llmod@divisor+2,w
  5224  1197  022B               	subwf	___llmod@dividend+2,w
  5225  1198  1D03               	skipz
  5226  1199  29A0               	goto	u5225
  5227  119A  0826               	movf	___llmod@divisor+1,w
  5228  119B  022A               	subwf	___llmod@dividend+1,w
  5229  119C  1D03               	skipz
  5230  119D  29A0               	goto	u5225
  5231  119E  0825               	movf	___llmod@divisor,w
  5232  119F  0229               	subwf	___llmod@dividend,w
  5233  11A0                     u5225:
  5234  11A0  1C03               	skipc
  5235  11A1  29A3               	goto	u5221
  5236  11A2  29A4               	goto	u5220
  5237  11A3                     u5221:
  5238  11A3  29B2               	goto	l3661
  5239  11A4                     u5220:
  5240  11A4                     l3659:
  5241  11A4  0825               	movf	___llmod@divisor,w
  5242  11A5  02A9               	subwf	___llmod@dividend,f
  5243  11A6  0826               	movf	___llmod@divisor+1,w
  5244  11A7  1C03               	skipc
  5245  11A8  0F26               	incfsz	___llmod@divisor+1,w
  5246  11A9  02AA               	subwf	___llmod@dividend+1,f
  5247  11AA  0827               	movf	___llmod@divisor+2,w
  5248  11AB  1C03               	skipc
  5249  11AC  0F27               	incfsz	___llmod@divisor+2,w
  5250  11AD  02AB               	subwf	___llmod@dividend+2,f
  5251  11AE  0828               	movf	___llmod@divisor+3,w
  5252  11AF  1C03               	skipc
  5253  11B0  0F28               	incfsz	___llmod@divisor+3,w
  5254  11B1  02AC               	subwf	___llmod@dividend+3,f
  5255  11B2                     l3661:
  5256  11B2  3001               	movlw	1
  5257  11B3                     u5235:
  5258  11B3  1003               	clrc
  5259  11B4  0CA8               	rrf	___llmod@divisor+3,f
  5260  11B5  0CA7               	rrf	___llmod@divisor+2,f
  5261  11B6  0CA6               	rrf	___llmod@divisor+1,f
  5262  11B7  0CA5               	rrf	___llmod@divisor,f
  5263  11B8  3EFF               	addlw	-1
  5264  11B9  1D03               	skipz
  5265  11BA  29B3               	goto	u5235
  5266  11BB                     l3663:
  5267  11BB  3001               	movlw	1
  5268  11BC  02AE               	subwf	___llmod@counter,f
  5269  11BD  1D03               	btfss	3,2
  5270  11BE  29C0               	goto	u5241
  5271  11BF  29C1               	goto	u5240
  5272  11C0                     u5241:
  5273  11C0  2992               	goto	l3657
  5274  11C1                     u5240:
  5275  11C1                     l3665:
  5276  11C1  082C               	movf	___llmod@dividend+3,w
  5277  11C2  00A8               	movwf	?___llmod+3
  5278  11C3  082B               	movf	___llmod@dividend+2,w
  5279  11C4  00A7               	movwf	?___llmod+2
  5280  11C5  082A               	movf	___llmod@dividend+1,w
  5281  11C6  00A6               	movwf	?___llmod+1
  5282  11C7  0829               	movf	___llmod@dividend,w
  5283  11C8  00A5               	movwf	?___llmod
  5284  11C9                     l802:
  5285  11C9  0008               	return
  5286  11CA                     __end_of___llmod:
  5287                           
  5288                           	psect	text15
  5289  1223                     __ptext15:	
  5290 ;; *************** function ___lldiv *****************
  5291 ;; Defined at:
  5292 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  divisor         4    2[COMMON] unsigned long 
  5295 ;;  dividend        4    6[COMMON] unsigned long 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;  quotient        4    0[BANK0 ] unsigned long 
  5298 ;;  counter         1    4[BANK0 ] unsigned char 
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  4    2[COMMON] unsigned long 
  5301 ;; Registers used:
  5302 ;;		wreg, status,2, status,0
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5308 ;;      Params:         8       0       0       0       0
  5309 ;;      Locals:         0       5       0       0       0
  5310 ;;      Temps:          1       0       0       0       0
  5311 ;;      Totals:         9       5       0       0       0
  5312 ;;Total ram usage:       14 bytes
  5313 ;; Hardware stack levels used:    1
  5314 ;; Hardware stack levels required when called:    1
  5315 ;; This function calls:
  5316 ;;		Nothing
  5317 ;; This function is called by:
  5318 ;;		_sprintf
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           
  5323                           ;psect for function ___lldiv
  5324  1223                     ___lldiv:
  5325  1223                     l2677:	
  5326                           ;incstack = 0
  5327                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5328                           
  5329  1223  3000               	movlw	0
  5330  1224  1283               	bcf	3,5	;RP0=0, select bank0
  5331  1225  1303               	bcf	3,6	;RP1=0, select bank0
  5332  1226  00A3               	movwf	___lldiv@quotient+3
  5333  1227  3000               	movlw	0
  5334  1228  00A2               	movwf	___lldiv@quotient+2
  5335  1229  3000               	movlw	0
  5336  122A  00A1               	movwf	___lldiv@quotient+1
  5337  122B  3000               	movlw	0
  5338  122C  00A0               	movwf	___lldiv@quotient
  5339  122D  0875               	movf	___lldiv@divisor+3,w
  5340  122E  0474               	iorwf	___lldiv@divisor+2,w
  5341  122F  0473               	iorwf	___lldiv@divisor+1,w
  5342  1230  0472               	iorwf	___lldiv@divisor,w
  5343  1231  1903               	skipnz
  5344  1232  2A34               	goto	u3431
  5345  1233  2A35               	goto	u3430
  5346  1234                     u3431:
  5347  1234  2A82               	goto	l2697
  5348  1235                     u3430:
  5349  1235                     l2679:
  5350  1235  01A4               	clrf	___lldiv@counter
  5351  1236  0AA4               	incf	___lldiv@counter,f
  5352  1237  2A45               	goto	l2683
  5353  1238                     l2681:
  5354  1238  3001               	movlw	1
  5355  1239  00FA               	movwf	??___lldiv
  5356  123A                     u3445:
  5357  123A  1003               	clrc
  5358  123B  0DF2               	rlf	___lldiv@divisor,f
  5359  123C  0DF3               	rlf	___lldiv@divisor+1,f
  5360  123D  0DF4               	rlf	___lldiv@divisor+2,f
  5361  123E  0DF5               	rlf	___lldiv@divisor+3,f
  5362  123F  0BFA               	decfsz	??___lldiv,f
  5363  1240  2A3A               	goto	u3445
  5364  1241  3001               	movlw	1
  5365  1242  00FA               	movwf	??___lldiv
  5366  1243  087A               	movf	??___lldiv,w
  5367  1244  07A4               	addwf	___lldiv@counter,f
  5368  1245                     l2683:
  5369  1245  1FF5               	btfss	___lldiv@divisor+3,7
  5370  1246  2A48               	goto	u3451
  5371  1247  2A49               	goto	u3450
  5372  1248                     u3451:
  5373  1248  2A38               	goto	l2681
  5374  1249                     u3450:
  5375  1249                     l2685:
  5376  1249  3001               	movlw	1
  5377  124A  00FA               	movwf	??___lldiv
  5378  124B                     u3465:
  5379  124B  1003               	clrc
  5380  124C  0DA0               	rlf	___lldiv@quotient,f
  5381  124D  0DA1               	rlf	___lldiv@quotient+1,f
  5382  124E  0DA2               	rlf	___lldiv@quotient+2,f
  5383  124F  0DA3               	rlf	___lldiv@quotient+3,f
  5384  1250  0BFA               	decfsz	??___lldiv,f
  5385  1251  2A4B               	goto	u3465
  5386  1252                     l2687:
  5387  1252  0875               	movf	___lldiv@divisor+3,w
  5388  1253  0279               	subwf	___lldiv@dividend+3,w
  5389  1254  1D03               	skipz
  5390  1255  2A60               	goto	u3475
  5391  1256  0874               	movf	___lldiv@divisor+2,w
  5392  1257  0278               	subwf	___lldiv@dividend+2,w
  5393  1258  1D03               	skipz
  5394  1259  2A60               	goto	u3475
  5395  125A  0873               	movf	___lldiv@divisor+1,w
  5396  125B  0277               	subwf	___lldiv@dividend+1,w
  5397  125C  1D03               	skipz
  5398  125D  2A60               	goto	u3475
  5399  125E  0872               	movf	___lldiv@divisor,w
  5400  125F  0276               	subwf	___lldiv@dividend,w
  5401  1260                     u3475:
  5402  1260  1C03               	skipc
  5403  1261  2A63               	goto	u3471
  5404  1262  2A64               	goto	u3470
  5405  1263                     u3471:
  5406  1263  2A73               	goto	l2693
  5407  1264                     u3470:
  5408  1264                     l2689:
  5409  1264  0872               	movf	___lldiv@divisor,w
  5410  1265  02F6               	subwf	___lldiv@dividend,f
  5411  1266  0873               	movf	___lldiv@divisor+1,w
  5412  1267  1C03               	skipc
  5413  1268  0F73               	incfsz	___lldiv@divisor+1,w
  5414  1269  02F7               	subwf	___lldiv@dividend+1,f
  5415  126A  0874               	movf	___lldiv@divisor+2,w
  5416  126B  1C03               	skipc
  5417  126C  0F74               	incfsz	___lldiv@divisor+2,w
  5418  126D  02F8               	subwf	___lldiv@dividend+2,f
  5419  126E  0875               	movf	___lldiv@divisor+3,w
  5420  126F  1C03               	skipc
  5421  1270  0F75               	incfsz	___lldiv@divisor+3,w
  5422  1271  02F9               	subwf	___lldiv@dividend+3,f
  5423  1272                     l2691:
  5424  1272  1420               	bsf	___lldiv@quotient,0
  5425  1273                     l2693:
  5426  1273  3001               	movlw	1
  5427  1274                     u3485:
  5428  1274  1003               	clrc
  5429  1275  0CF5               	rrf	___lldiv@divisor+3,f
  5430  1276  0CF4               	rrf	___lldiv@divisor+2,f
  5431  1277  0CF3               	rrf	___lldiv@divisor+1,f
  5432  1278  0CF2               	rrf	___lldiv@divisor,f
  5433  1279  3EFF               	addlw	-1
  5434  127A  1D03               	skipz
  5435  127B  2A74               	goto	u3485
  5436  127C                     l2695:
  5437  127C  3001               	movlw	1
  5438  127D  02A4               	subwf	___lldiv@counter,f
  5439  127E  1D03               	btfss	3,2
  5440  127F  2A81               	goto	u3491
  5441  1280  2A82               	goto	u3490
  5442  1281                     u3491:
  5443  1281  2A49               	goto	l2685
  5444  1282                     u3490:
  5445  1282                     l2697:
  5446  1282  0823               	movf	___lldiv@quotient+3,w
  5447  1283  00F5               	movwf	?___lldiv+3
  5448  1284  0822               	movf	___lldiv@quotient+2,w
  5449  1285  00F4               	movwf	?___lldiv+2
  5450  1286  0821               	movf	___lldiv@quotient+1,w
  5451  1287  00F3               	movwf	?___lldiv+1
  5452  1288  0820               	movf	___lldiv@quotient,w
  5453  1289  00F2               	movwf	?___lldiv
  5454  128A                     l467:
  5455  128A  0008               	return
  5456  128B                     __end_of___lldiv:
  5457                           
  5458                           	psect	text16
  5459  1370                     __ptext16:	
  5460 ;; *************** function ___fttol *****************
  5461 ;; Defined at:
  5462 ;;		line 44 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\fttol.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;  f1              3   36[BANK0 ] float 
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;  lval            4   45[BANK0 ] unsigned long 
  5467 ;;  exp1            1   49[BANK0 ] unsigned char 
  5468 ;;  sign1           1   44[BANK0 ] unsigned char 
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  4   36[BANK0 ] long 
  5471 ;; Registers used:
  5472 ;;		wreg, status,2, status,0
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5478 ;;      Params:         0       4       0       0       0
  5479 ;;      Locals:         0       6       0       0       0
  5480 ;;      Temps:          0       4       0       0       0
  5481 ;;      Totals:         0      14       0       0       0
  5482 ;;Total ram usage:       14 bytes
  5483 ;; Hardware stack levels used:    1
  5484 ;; Hardware stack levels required when called:    1
  5485 ;; This function calls:
  5486 ;;		Nothing
  5487 ;; This function is called by:
  5488 ;;		_sprintf
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           
  5493                           ;psect for function ___fttol
  5494  1370                     ___fttol:
  5495  1370                     l2749:	
  5496                           ;incstack = 0
  5497                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5498                           
  5499  1370  1283               	bcf	3,5	;RP0=0, select bank0
  5500  1371  1303               	bcf	3,6	;RP1=0, select bank0
  5501  1372  0844               	movf	___fttol@f1,w
  5502  1373  00C8               	movwf	??___fttol
  5503  1374  0845               	movf	___fttol@f1+1,w
  5504  1375  00C9               	movwf	??___fttol+1
  5505  1376  0846               	movf	___fttol@f1+2,w
  5506  1377  00CA               	movwf	??___fttol+2
  5507  1378  1003               	clrc
  5508  1379  0D49               	rlf	??___fttol+1,w
  5509  137A  0D4A               	rlf	??___fttol+2,w
  5510  137B  00CB               	movwf	??___fttol+3
  5511  137C  084B               	movf	??___fttol+3,w
  5512  137D  00D1               	movwf	___fttol@exp1
  5513  137E  0851               	movf	___fttol@exp1,w
  5514  137F  1D03               	btfss	3,2
  5515  1380  2B82               	goto	u3561
  5516  1381  2B83               	goto	u3560
  5517  1382                     u3561:
  5518  1382  2B8C               	goto	l2755
  5519  1383                     u3560:
  5520  1383                     l2751:
  5521  1383  3000               	movlw	0
  5522  1384  00C7               	movwf	?___fttol+3
  5523  1385  3000               	movlw	0
  5524  1386  00C6               	movwf	?___fttol+2
  5525  1387  3000               	movlw	0
  5526  1388  00C5               	movwf	?___fttol+1
  5527  1389  3000               	movlw	0
  5528  138A  00C4               	movwf	?___fttol
  5529  138B  2BFB               	goto	l761
  5530  138C                     l2755:
  5531  138C  0844               	movf	___fttol@f1,w
  5532  138D  00C8               	movwf	??___fttol
  5533  138E  0845               	movf	___fttol@f1+1,w
  5534  138F  00C9               	movwf	??___fttol+1
  5535  1390  0846               	movf	___fttol@f1+2,w
  5536  1391  00CA               	movwf	??___fttol+2
  5537  1392  3017               	movlw	23
  5538  1393                     u3575:
  5539  1393  1003               	clrc
  5540  1394  0CCA               	rrf	??___fttol+2,f
  5541  1395  0CC9               	rrf	??___fttol+1,f
  5542  1396  0CC8               	rrf	??___fttol,f
  5543  1397                     u3570:
  5544  1397  3EFF               	addlw	-1
  5545  1398  1D03               	skipz
  5546  1399  2B93               	goto	u3575
  5547  139A  0848               	movf	??___fttol,w
  5548  139B  00CB               	movwf	??___fttol+3
  5549  139C  084B               	movf	??___fttol+3,w
  5550  139D  00CC               	movwf	___fttol@sign1
  5551  139E                     l2757:
  5552  139E  17C5               	bsf	___fttol@f1+1,7
  5553  139F                     l2759:
  5554  139F  30FF               	movlw	255
  5555  13A0  05C4               	andwf	___fttol@f1,f
  5556  13A1  30FF               	movlw	255
  5557  13A2  05C5               	andwf	___fttol@f1+1,f
  5558  13A3  3000               	movlw	0
  5559  13A4  05C6               	andwf	___fttol@f1+2,f
  5560  13A5                     l2761:
  5561  13A5  0844               	movf	___fttol@f1,w
  5562  13A6  00CD               	movwf	___fttol@lval
  5563  13A7  0845               	movf	___fttol@f1+1,w
  5564  13A8  00CE               	movwf	___fttol@lval+1
  5565  13A9  0846               	movf	___fttol@f1+2,w
  5566  13AA  00CF               	movwf	___fttol@lval+2
  5567  13AB  01D0               	clrf	___fttol@lval+3
  5568  13AC                     l2763:
  5569  13AC  308E               	movlw	142
  5570  13AD  02D1               	subwf	___fttol@exp1,f
  5571  13AE                     l2765:
  5572  13AE  1FD1               	btfss	___fttol@exp1,7
  5573  13AF  2BB1               	goto	u3581
  5574  13B0  2BB2               	goto	u3580
  5575  13B1                     u3581:
  5576  13B1  2BCC               	goto	l2775
  5577  13B2                     u3580:
  5578  13B2                     l2767:
  5579  13B2  0851               	movf	___fttol@exp1,w
  5580  13B3  3A80               	xorlw	128
  5581  13B4  3E8F               	addlw	143
  5582  13B5  1803               	skipnc
  5583  13B6  2BB8               	goto	u3591
  5584  13B7  2BB9               	goto	u3590
  5585  13B8                     u3591:
  5586  13B8  2BBA               	goto	l2773
  5587  13B9                     u3590:
  5588  13B9  2B83               	goto	l2751
  5589  13BA                     l2773:
  5590  13BA  3001               	movlw	1
  5591  13BB                     u3605:
  5592  13BB  1003               	clrc
  5593  13BC  0CD0               	rrf	___fttol@lval+3,f
  5594  13BD  0CCF               	rrf	___fttol@lval+2,f
  5595  13BE  0CCE               	rrf	___fttol@lval+1,f
  5596  13BF  0CCD               	rrf	___fttol@lval,f
  5597  13C0  3EFF               	addlw	-1
  5598  13C1  1D03               	skipz
  5599  13C2  2BBB               	goto	u3605
  5600  13C3  3001               	movlw	1
  5601  13C4  00C8               	movwf	??___fttol
  5602  13C5  0848               	movf	??___fttol,w
  5603  13C6  07D1               	addwf	___fttol@exp1,f
  5604  13C7  1D03               	btfss	3,2
  5605  13C8  2BCA               	goto	u3611
  5606  13C9  2BCB               	goto	u3610
  5607  13CA                     u3611:
  5608  13CA  2BBA               	goto	l2773
  5609  13CB                     u3610:
  5610  13CB  2BE3               	goto	l2783
  5611  13CC                     l2775:
  5612  13CC  3018               	movlw	24
  5613  13CD  0251               	subwf	___fttol@exp1,w
  5614  13CE  1C03               	skipc
  5615  13CF  2BD1               	goto	u3621
  5616  13D0  2BD2               	goto	u3620
  5617  13D1                     u3621:
  5618  13D1  2BDE               	goto	l768
  5619  13D2                     u3620:
  5620  13D2  2B83               	goto	l2751
  5621  13D3                     l2781:
  5622  13D3  3001               	movlw	1
  5623  13D4  00C8               	movwf	??___fttol
  5624  13D5                     u3635:
  5625  13D5  1003               	clrc
  5626  13D6  0DCD               	rlf	___fttol@lval,f
  5627  13D7  0DCE               	rlf	___fttol@lval+1,f
  5628  13D8  0DCF               	rlf	___fttol@lval+2,f
  5629  13D9  0DD0               	rlf	___fttol@lval+3,f
  5630  13DA  0BC8               	decfsz	??___fttol,f
  5631  13DB  2BD5               	goto	u3635
  5632  13DC  3001               	movlw	1
  5633  13DD  02D1               	subwf	___fttol@exp1,f
  5634  13DE                     l768:
  5635  13DE  0851               	movf	___fttol@exp1,w
  5636  13DF  1D03               	btfss	3,2
  5637  13E0  2BE2               	goto	u3641
  5638  13E1  2BE3               	goto	u3640
  5639  13E2                     u3641:
  5640  13E2  2BD3               	goto	l2781
  5641  13E3                     u3640:
  5642  13E3                     l2783:
  5643  13E3  084C               	movf	___fttol@sign1,w
  5644  13E4  1903               	btfsc	3,2
  5645  13E5  2BE7               	goto	u3651
  5646  13E6  2BE8               	goto	u3650
  5647  13E7                     u3651:
  5648  13E7  2BF3               	goto	l2787
  5649  13E8                     u3650:
  5650  13E8                     l2785:
  5651  13E8  09CD               	comf	___fttol@lval,f
  5652  13E9  09CE               	comf	___fttol@lval+1,f
  5653  13EA  09CF               	comf	___fttol@lval+2,f
  5654  13EB  09D0               	comf	___fttol@lval+3,f
  5655  13EC  0ACD               	incf	___fttol@lval,f
  5656  13ED  1903               	skipnz
  5657  13EE  0ACE               	incf	___fttol@lval+1,f
  5658  13EF  1903               	skipnz
  5659  13F0  0ACF               	incf	___fttol@lval+2,f
  5660  13F1  1903               	skipnz
  5661  13F2  0AD0               	incf	___fttol@lval+3,f
  5662  13F3                     l2787:
  5663  13F3  0850               	movf	___fttol@lval+3,w
  5664  13F4  00C7               	movwf	?___fttol+3
  5665  13F5  084F               	movf	___fttol@lval+2,w
  5666  13F6  00C6               	movwf	?___fttol+2
  5667  13F7  084E               	movf	___fttol@lval+1,w
  5668  13F8  00C5               	movwf	?___fttol+1
  5669  13F9  084D               	movf	___fttol@lval,w
  5670  13FA  00C4               	movwf	?___fttol
  5671  13FB                     l761:
  5672  13FB  0008               	return
  5673  13FC                     __end_of___fttol:
  5674                           
  5675                           	psect	text17
  5676  1E05                     __ptext17:	
  5677 ;; *************** function ___ftsub *****************
  5678 ;; Defined at:
  5679 ;;		line 17 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\ftsub.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  f2              3   56[BANK0 ] float 
  5682 ;;  f1              3   59[BANK0 ] float 
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;		None
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  3   56[BANK0 ] float 
  5687 ;; Registers used:
  5688 ;;		wreg, status,2, status,0, pclath, cstack
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5694 ;;      Params:         0       6       0       0       0
  5695 ;;      Locals:         0       0       0       0       0
  5696 ;;      Temps:          0       0       0       0       0
  5697 ;;      Totals:         0       6       0       0       0
  5698 ;;Total ram usage:        6 bytes
  5699 ;; Hardware stack levels used:    1
  5700 ;; Hardware stack levels required when called:    3
  5701 ;; This function calls:
  5702 ;;		___ftadd
  5703 ;; This function is called by:
  5704 ;;		_sprintf
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           
  5709                           ;psect for function ___ftsub
  5710  1E05                     ___ftsub:
  5711  1E05                     l3641:	
  5712                           ;incstack = 0
  5713                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5714                           
  5715  1E05  1283               	bcf	3,5	;RP0=0, select bank0
  5716  1E06  1303               	bcf	3,6	;RP1=0, select bank0
  5717  1E07  085A               	movf	___ftsub@f2+2,w
  5718  1E08  0459               	iorwf	___ftsub@f2+1,w
  5719  1E09  0458               	iorwf	___ftsub@f2,w
  5720  1E0A  1903               	skipnz
  5721  1E0B  2E0D               	goto	u5181
  5722  1E0C  2E0E               	goto	u5180
  5723  1E0D                     u5181:
  5724  1E0D  2E10               	goto	l3645
  5725  1E0E                     u5180:
  5726  1E0E                     l3643:
  5727  1E0E  3080               	movlw	128
  5728  1E0F  06DA               	xorwf	___ftsub@f2+2,f
  5729  1E10                     l3645:
  5730  1E10  085B               	movf	___ftsub@f1,w
  5731  1E11  00CB               	movwf	___ftadd@f1
  5732  1E12  085C               	movf	___ftsub@f1+1,w
  5733  1E13  00CC               	movwf	___ftadd@f1+1
  5734  1E14  085D               	movf	___ftsub@f1+2,w
  5735  1E15  00CD               	movwf	___ftadd@f1+2
  5736  1E16  0858               	movf	___ftsub@f2,w
  5737  1E17  00CE               	movwf	___ftadd@f2
  5738  1E18  0859               	movf	___ftsub@f2+1,w
  5739  1E19  00CF               	movwf	___ftadd@f2+1
  5740  1E1A  085A               	movf	___ftsub@f2+2,w
  5741  1E1B  00D0               	movwf	___ftadd@f2+2
  5742  1E1C  160A  118A  26CA  160A  158A  	fcall	___ftadd
  5743  1E21  1283               	bcf	3,5	;RP0=0, select bank0
  5744  1E22  1303               	bcf	3,6	;RP1=0, select bank0
  5745  1E23  084B               	movf	?___ftadd,w
  5746  1E24  00D8               	movwf	?___ftsub
  5747  1E25  084C               	movf	?___ftadd+1,w
  5748  1E26  00D9               	movwf	?___ftsub+1
  5749  1E27  084D               	movf	?___ftadd+2,w
  5750  1E28  00DA               	movwf	?___ftsub+2
  5751  1E29                     l757:
  5752  1E29  0008               	return
  5753  1E2A                     __end_of___ftsub:
  5754                           
  5755                           	psect	text18
  5756  16CA                     __ptext18:	
  5757 ;; *************** function ___ftadd *****************
  5758 ;; Defined at:
  5759 ;;		line 86 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\ftadd.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;  f1              3   43[BANK0 ] float 
  5762 ;;  f2              3   46[BANK0 ] float 
  5763 ;; Auto vars:     Size  Location     Type
  5764 ;;  exp1            1   55[BANK0 ] unsigned char 
  5765 ;;  exp2            1   54[BANK0 ] unsigned char 
  5766 ;;  sign            1   53[BANK0 ] unsigned char 
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  3   43[BANK0 ] float 
  5769 ;; Registers used:
  5770 ;;		wreg, status,2, status,0, pclath, cstack
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5776 ;;      Params:         0       6       0       0       0
  5777 ;;      Locals:         0       3       0       0       0
  5778 ;;      Temps:          0       4       0       0       0
  5779 ;;      Totals:         0      13       0       0       0
  5780 ;;Total ram usage:       13 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; Hardware stack levels required when called:    2
  5783 ;; This function calls:
  5784 ;;		___ftpack
  5785 ;; This function is called by:
  5786 ;;		_sprintf
  5787 ;;		___ftsub
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           
  5792                           ;psect for function ___ftadd
  5793  16CA                     ___ftadd:
  5794  16CA                     l3345:	
  5795                           ;incstack = 0
  5796                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5797                           
  5798  16CA  1283               	bcf	3,5	;RP0=0, select bank0
  5799  16CB  1303               	bcf	3,6	;RP1=0, select bank0
  5800  16CC  084B               	movf	___ftadd@f1,w
  5801  16CD  00D1               	movwf	??___ftadd
  5802  16CE  084C               	movf	___ftadd@f1+1,w
  5803  16CF  00D2               	movwf	??___ftadd+1
  5804  16D0  084D               	movf	___ftadd@f1+2,w
  5805  16D1  00D3               	movwf	??___ftadd+2
  5806  16D2  1003               	clrc
  5807  16D3  0D52               	rlf	??___ftadd+1,w
  5808  16D4  0D53               	rlf	??___ftadd+2,w
  5809  16D5  00D4               	movwf	??___ftadd+3
  5810  16D6  0854               	movf	??___ftadd+3,w
  5811  16D7  00D7               	movwf	___ftadd@exp1
  5812  16D8  084E               	movf	___ftadd@f2,w
  5813  16D9  00D1               	movwf	??___ftadd
  5814  16DA  084F               	movf	___ftadd@f2+1,w
  5815  16DB  00D2               	movwf	??___ftadd+1
  5816  16DC  0850               	movf	___ftadd@f2+2,w
  5817  16DD  00D3               	movwf	??___ftadd+2
  5818  16DE  1003               	clrc
  5819  16DF  0D52               	rlf	??___ftadd+1,w
  5820  16E0  0D53               	rlf	??___ftadd+2,w
  5821  16E1  00D4               	movwf	??___ftadd+3
  5822  16E2  0854               	movf	??___ftadd+3,w
  5823  16E3  00D6               	movwf	___ftadd@exp2
  5824  16E4  0857               	movf	___ftadd@exp1,w
  5825  16E5  1903               	btfsc	3,2
  5826  16E6  2EE8               	goto	u4521
  5827  16E7  2EE9               	goto	u4520
  5828  16E8                     u4521:
  5829  16E8  2EF9               	goto	l3351
  5830  16E9                     u4520:
  5831  16E9                     l3347:
  5832  16E9  0856               	movf	___ftadd@exp2,w
  5833  16EA  0257               	subwf	___ftadd@exp1,w
  5834  16EB  1803               	skipnc
  5835  16EC  2EEE               	goto	u4531
  5836  16ED  2EEF               	goto	u4530
  5837  16EE                     u4531:
  5838  16EE  2F00               	goto	l3355
  5839  16EF                     u4530:
  5840  16EF                     l3349:
  5841  16EF  0856               	movf	___ftadd@exp2,w
  5842  16F0  00D1               	movwf	??___ftadd
  5843  16F1  0857               	movf	___ftadd@exp1,w
  5844  16F2  02D1               	subwf	??___ftadd,f
  5845  16F3  3019               	movlw	25
  5846  16F4  0251               	subwf	??___ftadd,w
  5847  16F5  1C03               	skipc
  5848  16F6  2EF8               	goto	u4541
  5849  16F7  2EF9               	goto	u4540
  5850  16F8                     u4541:
  5851  16F8  2F00               	goto	l3355
  5852  16F9                     u4540:
  5853  16F9                     l3351:
  5854  16F9  084E               	movf	___ftadd@f2,w
  5855  16FA  00CB               	movwf	?___ftadd
  5856  16FB  084F               	movf	___ftadd@f2+1,w
  5857  16FC  00CC               	movwf	?___ftadd+1
  5858  16FD  0850               	movf	___ftadd@f2+2,w
  5859  16FE  00CD               	movwf	?___ftadd+2
  5860  16FF  2FFF               	goto	l677
  5861  1700                     l3355:
  5862  1700  0856               	movf	___ftadd@exp2,w
  5863  1701  1903               	btfsc	3,2
  5864  1702  2F04               	goto	u4551
  5865  1703  2F05               	goto	u4550
  5866  1704                     u4551:
  5867  1704  2F15               	goto	l680
  5868  1705                     u4550:
  5869  1705                     l3357:
  5870  1705  0857               	movf	___ftadd@exp1,w
  5871  1706  0256               	subwf	___ftadd@exp2,w
  5872  1707  1803               	skipnc
  5873  1708  2F0A               	goto	u4561
  5874  1709  2F0B               	goto	u4560
  5875  170A                     u4561:
  5876  170A  2F16               	goto	l3361
  5877  170B                     u4560:
  5878  170B                     l3359:
  5879  170B  0857               	movf	___ftadd@exp1,w
  5880  170C  00D1               	movwf	??___ftadd
  5881  170D  0856               	movf	___ftadd@exp2,w
  5882  170E  02D1               	subwf	??___ftadd,f
  5883  170F  3019               	movlw	25
  5884  1710  0251               	subwf	??___ftadd,w
  5885  1711  1C03               	skipc
  5886  1712  2F14               	goto	u4571
  5887  1713  2F15               	goto	u4570
  5888  1714                     u4571:
  5889  1714  2F16               	goto	l3361
  5890  1715                     u4570:
  5891  1715                     l680:
  5892  1715  2FFF               	goto	l677
  5893  1716                     l3361:
  5894  1716  3006               	movlw	6
  5895  1717  00D1               	movwf	??___ftadd
  5896  1718  0851               	movf	??___ftadd,w
  5897  1719  00D5               	movwf	___ftadd@sign
  5898  171A                     l3363:
  5899  171A  1FCD               	btfss	___ftadd@f1+2,7
  5900  171B  2F1D               	goto	u4581
  5901  171C  2F1E               	goto	u4580
  5902  171D                     u4581:
  5903  171D  2F1F               	goto	l681
  5904  171E                     u4580:
  5905  171E                     l3365:
  5906  171E  17D5               	bsf	___ftadd@sign,7
  5907  171F                     l681:
  5908  171F  1FD0               	btfss	___ftadd@f2+2,7
  5909  1720  2F22               	goto	u4591
  5910  1721  2F23               	goto	u4590
  5911  1722                     u4591:
  5912  1722  2F24               	goto	l682
  5913  1723                     u4590:
  5914  1723                     l3367:
  5915  1723  1755               	bsf	___ftadd@sign,6
  5916  1724                     l682:
  5917  1724  17CC               	bsf	___ftadd@f1+1,7
  5918  1725                     l3369:
  5919  1725  30FF               	movlw	255
  5920  1726  05CB               	andwf	___ftadd@f1,f
  5921  1727  30FF               	movlw	255
  5922  1728  05CC               	andwf	___ftadd@f1+1,f
  5923  1729  3000               	movlw	0
  5924  172A  05CD               	andwf	___ftadd@f1+2,f
  5925  172B                     l3371:
  5926  172B  17CF               	bsf	___ftadd@f2+1,7
  5927  172C  30FF               	movlw	255
  5928  172D  05CE               	andwf	___ftadd@f2,f
  5929  172E  30FF               	movlw	255
  5930  172F  05CF               	andwf	___ftadd@f2+1,f
  5931  1730  3000               	movlw	0
  5932  1731  05D0               	andwf	___ftadd@f2+2,f
  5933  1732  0856               	movf	___ftadd@exp2,w
  5934  1733  0257               	subwf	___ftadd@exp1,w
  5935  1734  1803               	skipnc
  5936  1735  2F37               	goto	u4601
  5937  1736  2F38               	goto	u4600
  5938  1737                     u4601:
  5939  1737  2F64               	goto	l3383
  5940  1738                     u4600:
  5941  1738                     l3373:
  5942  1738  3001               	movlw	1
  5943  1739                     u4615:
  5944  1739  1003               	clrc
  5945  173A  0DCE               	rlf	___ftadd@f2,f
  5946  173B  0DCF               	rlf	___ftadd@f2+1,f
  5947  173C  0DD0               	rlf	___ftadd@f2+2,f
  5948  173D  3EFF               	addlw	-1
  5949  173E  1D03               	skipz
  5950  173F  2F39               	goto	u4615
  5951  1740  3001               	movlw	1
  5952  1741  02D6               	subwf	___ftadd@exp2,f
  5953  1742                     l3375:
  5954  1742  0856               	movf	___ftadd@exp2,w
  5955  1743  0657               	xorwf	___ftadd@exp1,w
  5956  1744  1903               	skipnz
  5957  1745  2F47               	goto	u4621
  5958  1746  2F48               	goto	u4620
  5959  1747                     u4621:
  5960  1747  2F5D               	goto	l3381
  5961  1748                     u4620:
  5962  1748                     l3377:
  5963  1748  3001               	movlw	1
  5964  1749  02D5               	subwf	___ftadd@sign,f
  5965  174A  0855               	movf	___ftadd@sign,w
  5966  174B  3907               	andlw	7
  5967  174C  1D03               	btfss	3,2
  5968  174D  2F4F               	goto	u4631
  5969  174E  2F50               	goto	u4630
  5970  174F                     u4631:
  5971  174F  2F38               	goto	l3373
  5972  1750                     u4630:
  5973  1750  2F5D               	goto	l3381
  5974  1751                     l3379:
  5975  1751  3001               	movlw	1
  5976  1752                     u4645:
  5977  1752  1003               	clrc
  5978  1753  0CCD               	rrf	___ftadd@f1+2,f
  5979  1754  0CCC               	rrf	___ftadd@f1+1,f
  5980  1755  0CCB               	rrf	___ftadd@f1,f
  5981  1756  3EFF               	addlw	-1
  5982  1757  1D03               	skipz
  5983  1758  2F52               	goto	u4645
  5984  1759  3001               	movlw	1
  5985  175A  00D1               	movwf	??___ftadd
  5986  175B  0851               	movf	??___ftadd,w
  5987  175C  07D7               	addwf	___ftadd@exp1,f
  5988  175D                     l3381:
  5989  175D  0857               	movf	___ftadd@exp1,w
  5990  175E  0656               	xorwf	___ftadd@exp2,w
  5991  175F  1D03               	skipz
  5992  1760  2F62               	goto	u4651
  5993  1761  2F63               	goto	u4650
  5994  1762                     u4651:
  5995  1762  2F51               	goto	l3379
  5996  1763                     u4650:
  5997  1763  2F95               	goto	l691
  5998  1764                     l3383:
  5999  1764  0857               	movf	___ftadd@exp1,w
  6000  1765  0256               	subwf	___ftadd@exp2,w
  6001  1766  1803               	skipnc
  6002  1767  2F69               	goto	u4661
  6003  1768  2F6A               	goto	u4660
  6004  1769                     u4661:
  6005  1769  2F95               	goto	l691
  6006  176A                     u4660:
  6007  176A                     l3385:
  6008  176A  3001               	movlw	1
  6009  176B                     u4675:
  6010  176B  1003               	clrc
  6011  176C  0DCB               	rlf	___ftadd@f1,f
  6012  176D  0DCC               	rlf	___ftadd@f1+1,f
  6013  176E  0DCD               	rlf	___ftadd@f1+2,f
  6014  176F  3EFF               	addlw	-1
  6015  1770  1D03               	skipz
  6016  1771  2F6B               	goto	u4675
  6017  1772  3001               	movlw	1
  6018  1773  02D7               	subwf	___ftadd@exp1,f
  6019  1774                     l3387:
  6020  1774  0856               	movf	___ftadd@exp2,w
  6021  1775  0657               	xorwf	___ftadd@exp1,w
  6022  1776  1903               	skipnz
  6023  1777  2F79               	goto	u4681
  6024  1778  2F7A               	goto	u4680
  6025  1779                     u4681:
  6026  1779  2F8F               	goto	l3393
  6027  177A                     u4680:
  6028  177A                     l3389:
  6029  177A  3001               	movlw	1
  6030  177B  02D5               	subwf	___ftadd@sign,f
  6031  177C  0855               	movf	___ftadd@sign,w
  6032  177D  3907               	andlw	7
  6033  177E  1D03               	btfss	3,2
  6034  177F  2F81               	goto	u4691
  6035  1780  2F82               	goto	u4690
  6036  1781                     u4691:
  6037  1781  2F6A               	goto	l3385
  6038  1782                     u4690:
  6039  1782  2F8F               	goto	l3393
  6040  1783                     l3391:
  6041  1783  3001               	movlw	1
  6042  1784                     u4705:
  6043  1784  1003               	clrc
  6044  1785  0CD0               	rrf	___ftadd@f2+2,f
  6045  1786  0CCF               	rrf	___ftadd@f2+1,f
  6046  1787  0CCE               	rrf	___ftadd@f2,f
  6047  1788  3EFF               	addlw	-1
  6048  1789  1D03               	skipz
  6049  178A  2F84               	goto	u4705
  6050  178B  3001               	movlw	1
  6051  178C  00D1               	movwf	??___ftadd
  6052  178D  0851               	movf	??___ftadd,w
  6053  178E  07D6               	addwf	___ftadd@exp2,f
  6054  178F                     l3393:
  6055  178F  0857               	movf	___ftadd@exp1,w
  6056  1790  0656               	xorwf	___ftadd@exp2,w
  6057  1791  1D03               	skipz
  6058  1792  2F94               	goto	u4711
  6059  1793  2F95               	goto	u4710
  6060  1794                     u4711:
  6061  1794  2F83               	goto	l3391
  6062  1795                     u4710:
  6063  1795                     l691:
  6064  1795  1FD5               	btfss	___ftadd@sign,7
  6065  1796  2F98               	goto	u4721
  6066  1797  2F99               	goto	u4720
  6067  1798                     u4721:
  6068  1798  2FA9               	goto	l3397
  6069  1799                     u4720:
  6070  1799                     l3395:
  6071  1799  30FF               	movlw	255
  6072  179A  06CB               	xorwf	___ftadd@f1,f
  6073  179B  30FF               	movlw	255
  6074  179C  06CC               	xorwf	___ftadd@f1+1,f
  6075  179D  30FF               	movlw	255
  6076  179E  06CD               	xorwf	___ftadd@f1+2,f
  6077  179F  3001               	movlw	1
  6078  17A0  07CB               	addwf	___ftadd@f1,f
  6079  17A1  3000               	movlw	0
  6080  17A2  1803               	skipnc
  6081  17A3  3001               	movlw	1
  6082  17A4  07CC               	addwf	___ftadd@f1+1,f
  6083  17A5  3000               	movlw	0
  6084  17A6  1803               	skipnc
  6085  17A7  3001               	movlw	1
  6086  17A8  07CD               	addwf	___ftadd@f1+2,f
  6087  17A9                     l3397:
  6088  17A9  1F55               	btfss	___ftadd@sign,6
  6089  17AA  2FAC               	goto	u4731
  6090  17AB  2FAD               	goto	u4730
  6091  17AC                     u4731:
  6092  17AC  2FBD               	goto	l3401
  6093  17AD                     u4730:
  6094  17AD                     l3399:
  6095  17AD  30FF               	movlw	255
  6096  17AE  06CE               	xorwf	___ftadd@f2,f
  6097  17AF  30FF               	movlw	255
  6098  17B0  06CF               	xorwf	___ftadd@f2+1,f
  6099  17B1  30FF               	movlw	255
  6100  17B2  06D0               	xorwf	___ftadd@f2+2,f
  6101  17B3  3001               	movlw	1
  6102  17B4  07CE               	addwf	___ftadd@f2,f
  6103  17B5  3000               	movlw	0
  6104  17B6  1803               	skipnc
  6105  17B7  3001               	movlw	1
  6106  17B8  07CF               	addwf	___ftadd@f2+1,f
  6107  17B9  3000               	movlw	0
  6108  17BA  1803               	skipnc
  6109  17BB  3001               	movlw	1
  6110  17BC  07D0               	addwf	___ftadd@f2+2,f
  6111  17BD                     l3401:
  6112  17BD  01D5               	clrf	___ftadd@sign
  6113  17BE                     l3403:
  6114  17BE  084B               	movf	___ftadd@f1,w
  6115  17BF  07CE               	addwf	___ftadd@f2,f
  6116  17C0  084C               	movf	___ftadd@f1+1,w
  6117  17C1  1103               	clrz
  6118  17C2  1803               	skipnc
  6119  17C3  0A4C               	incf	___ftadd@f1+1,w
  6120  17C4  1903               	skipnz
  6121  17C5  2FC7               	goto	u4741
  6122  17C6  07CF               	addwf	___ftadd@f2+1,f
  6123  17C7                     u4741:
  6124  17C7  084D               	movf	___ftadd@f1+2,w
  6125  17C8  1103               	clrz
  6126  17C9  1803               	skipnc
  6127  17CA  0A4D               	incf	___ftadd@f1+2,w
  6128  17CB  1903               	skipnz
  6129  17CC  2FCE               	goto	u4742
  6130  17CD  07D0               	addwf	___ftadd@f2+2,f
  6131  17CE                     u4742:
  6132  17CE                     l3405:
  6133  17CE  1FD0               	btfss	___ftadd@f2+2,7
  6134  17CF  2FD1               	goto	u4751
  6135  17D0  2FD2               	goto	u4750
  6136  17D1                     u4751:
  6137  17D1  2FE4               	goto	l3411
  6138  17D2                     u4750:
  6139  17D2                     l3407:
  6140  17D2  30FF               	movlw	255
  6141  17D3  06CE               	xorwf	___ftadd@f2,f
  6142  17D4  30FF               	movlw	255
  6143  17D5  06CF               	xorwf	___ftadd@f2+1,f
  6144  17D6  30FF               	movlw	255
  6145  17D7  06D0               	xorwf	___ftadd@f2+2,f
  6146  17D8  3001               	movlw	1
  6147  17D9  07CE               	addwf	___ftadd@f2,f
  6148  17DA  3000               	movlw	0
  6149  17DB  1803               	skipnc
  6150  17DC  3001               	movlw	1
  6151  17DD  07CF               	addwf	___ftadd@f2+1,f
  6152  17DE  3000               	movlw	0
  6153  17DF  1803               	skipnc
  6154  17E0  3001               	movlw	1
  6155  17E1  07D0               	addwf	___ftadd@f2+2,f
  6156  17E2                     l3409:
  6157  17E2  01D5               	clrf	___ftadd@sign
  6158  17E3  0AD5               	incf	___ftadd@sign,f
  6159  17E4                     l3411:
  6160  17E4  084E               	movf	___ftadd@f2,w
  6161  17E5  00F2               	movwf	___ftpack@arg
  6162  17E6  084F               	movf	___ftadd@f2+1,w
  6163  17E7  00F3               	movwf	___ftpack@arg+1
  6164  17E8  0850               	movf	___ftadd@f2+2,w
  6165  17E9  00F4               	movwf	___ftpack@arg+2
  6166  17EA  0857               	movf	___ftadd@exp1,w
  6167  17EB  00D1               	movwf	??___ftadd
  6168  17EC  0851               	movf	??___ftadd,w
  6169  17ED  00F5               	movwf	___ftpack@exp
  6170  17EE  0855               	movf	___ftadd@sign,w
  6171  17EF  00D2               	movwf	??___ftadd+1
  6172  17F0  0852               	movf	??___ftadd+1,w
  6173  17F1  00F6               	movwf	___ftpack@sign
  6174  17F2  160A  118A  22F4  160A  118A  	fcall	___ftpack
  6175  17F7  0872               	movf	?___ftpack,w
  6176  17F8  1283               	bcf	3,5	;RP0=0, select bank0
  6177  17F9  1303               	bcf	3,6	;RP1=0, select bank0
  6178  17FA  00CB               	movwf	?___ftadd
  6179  17FB  0873               	movf	?___ftpack+1,w
  6180  17FC  00CC               	movwf	?___ftadd+1
  6181  17FD  0874               	movf	?___ftpack+2,w
  6182  17FE  00CD               	movwf	?___ftadd+2
  6183  17FF                     l677:
  6184  17FF  0008               	return
  6185  1800                     __end_of___ftadd:
  6186                           
  6187                           	psect	text19
  6188  1D7C                     __ptext19:	
  6189 ;; *************** function ___ftneg *****************
  6190 ;; Defined at:
  6191 ;;		line 15 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\ftneg.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;  f1              3    2[COMMON] float 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;		None
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  3    2[COMMON] float 
  6198 ;; Registers used:
  6199 ;;		wreg
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6205 ;;      Params:         3       0       0       0       0
  6206 ;;      Locals:         0       0       0       0       0
  6207 ;;      Temps:          0       0       0       0       0
  6208 ;;      Totals:         3       0       0       0       0
  6209 ;;Total ram usage:        3 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; Hardware stack levels required when called:    1
  6212 ;; This function calls:
  6213 ;;		Nothing
  6214 ;; This function is called by:
  6215 ;;		_sprintf
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           
  6220                           ;psect for function ___ftneg
  6221  1D7C                     ___ftneg:
  6222  1D7C                     l2733:	
  6223                           ;incstack = 0
  6224                           ; Regs used in ___ftneg: [wreg]
  6225                           
  6226  1D7C  0874               	movf	___ftneg@f1+2,w
  6227  1D7D  0473               	iorwf	___ftneg@f1+1,w
  6228  1D7E  0472               	iorwf	___ftneg@f1,w
  6229  1D7F  1903               	skipnz
  6230  1D80  2D82               	goto	u3541
  6231  1D81  2D83               	goto	u3540
  6232  1D82                     u3541:
  6233  1D82  2D85               	goto	l2737
  6234  1D83                     u3540:
  6235  1D83                     l2735:
  6236  1D83  3080               	movlw	128
  6237  1D84  06F4               	xorwf	___ftneg@f1+2,f
  6238  1D85                     l2737:
  6239  1D85                     l751:
  6240  1D85  0008               	return
  6241  1D86                     __end_of___ftneg:
  6242                           
  6243                           	psect	text20
  6244  1F02                     __ptext20:	
  6245 ;; *************** function ___ftge *****************
  6246 ;; Defined at:
  6247 ;;		line 4 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\ftge.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  ff1             3    2[COMMON] float 
  6250 ;;  ff2             3    5[COMMON] float 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;		None
  6253 ;; Return value:  Size  Location     Type
  6254 ;;		None               void
  6255 ;; Registers used:
  6256 ;;		wreg, status,2, status,0
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6262 ;;      Params:         6       0       0       0       0
  6263 ;;      Locals:         0       0       0       0       0
  6264 ;;      Temps:          0       0       0       0       0
  6265 ;;      Totals:         6       0       0       0       0
  6266 ;;Total ram usage:        6 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; Hardware stack levels required when called:    1
  6269 ;; This function calls:
  6270 ;;		Nothing
  6271 ;; This function is called by:
  6272 ;;		_sprintf
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276                           
  6277                           ;psect for function ___ftge
  6278  1F02                     ___ftge:
  6279  1F02                     l2713:	
  6280                           ;incstack = 0
  6281                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6282                           
  6283  1F02  1FF4               	btfss	___ftge@ff1+2,7
  6284  1F03  2F05               	goto	u3511
  6285  1F04  2F06               	goto	u3510
  6286  1F05                     u3511:
  6287  1F05  2F13               	goto	l2717
  6288  1F06                     u3510:
  6289  1F06                     l2715:
  6290  1F06  0872               	movf	___ftge@ff1,w
  6291  1F07  3C00               	sublw	0
  6292  1F08  00F2               	movwf	___ftge@ff1
  6293  1F09  0873               	movf	___ftge@ff1+1,w
  6294  1F0A  1C03               	skipc
  6295  1F0B  0F73               	incfsz	___ftge@ff1+1,w
  6296  1F0C  3C00               	sublw	0
  6297  1F0D  00F3               	movwf	___ftge@ff1+1
  6298  1F0E  0874               	movf	___ftge@ff1+2,w
  6299  1F0F  1C03               	skipc
  6300  1F10  0F74               	incfsz	___ftge@ff1+2,w
  6301  1F11  3C80               	sublw	128
  6302  1F12  00F4               	movwf	___ftge@ff1+2
  6303  1F13                     l2717:
  6304  1F13  1FF7               	btfss	___ftge@ff2+2,7
  6305  1F14  2F16               	goto	u3521
  6306  1F15  2F17               	goto	u3520
  6307  1F16                     u3521:
  6308  1F16  2F24               	goto	l2721
  6309  1F17                     u3520:
  6310  1F17                     l2719:
  6311  1F17  0875               	movf	___ftge@ff2,w
  6312  1F18  3C00               	sublw	0
  6313  1F19  00F5               	movwf	___ftge@ff2
  6314  1F1A  0876               	movf	___ftge@ff2+1,w
  6315  1F1B  1C03               	skipc
  6316  1F1C  0F76               	incfsz	___ftge@ff2+1,w
  6317  1F1D  3C00               	sublw	0
  6318  1F1E  00F6               	movwf	___ftge@ff2+1
  6319  1F1F  0877               	movf	___ftge@ff2+2,w
  6320  1F20  1C03               	skipc
  6321  1F21  0F77               	incfsz	___ftge@ff2+2,w
  6322  1F22  3C80               	sublw	128
  6323  1F23  00F7               	movwf	___ftge@ff2+2
  6324  1F24                     l2721:
  6325  1F24  3080               	movlw	128
  6326  1F25  06F4               	xorwf	___ftge@ff1+2,f
  6327  1F26                     l2723:
  6328  1F26  3080               	movlw	128
  6329  1F27  06F7               	xorwf	___ftge@ff2+2,f
  6330  1F28                     l2725:
  6331  1F28  0877               	movf	___ftge@ff2+2,w
  6332  1F29  0274               	subwf	___ftge@ff1+2,w
  6333  1F2A  1D03               	skipz
  6334  1F2B  2F32               	goto	u3535
  6335  1F2C  0876               	movf	___ftge@ff2+1,w
  6336  1F2D  0273               	subwf	___ftge@ff1+1,w
  6337  1F2E  1D03               	skipz
  6338  1F2F  2F32               	goto	u3535
  6339  1F30  0875               	movf	___ftge@ff2,w
  6340  1F31  0272               	subwf	___ftge@ff1,w
  6341  1F32                     u3535:
  6342  1F32  1803               	skipnc
  6343  1F33  2F35               	goto	u3531
  6344  1F34  2F36               	goto	u3530
  6345  1F35                     u3531:
  6346  1F35  2F38               	goto	l2729
  6347  1F36                     u3530:
  6348  1F36                     l2727:
  6349  1F36  1003               	clrc
  6350  1F37  2F39               	goto	l734
  6351  1F38                     l2729:
  6352  1F38  1403               	setc
  6353  1F39                     l734:
  6354  1F39  0008               	return
  6355  1F3A                     __end_of___ftge:
  6356                           
  6357                           	psect	text21
  6358  1EA3                     __ptext21:	
  6359 ;; *************** function _setup *****************
  6360 ;; Defined at:
  6361 ;;		line 159 in file "lab3_main.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;		None
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;		None
  6366 ;; Return value:  Size  Location     Type
  6367 ;;                  1    wreg      void 
  6368 ;; Registers used:
  6369 ;;		wreg, status,2
  6370 ;; Tracked objects:
  6371 ;;		On entry : 0/0
  6372 ;;		On exit  : 0/0
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6375 ;;      Params:         0       0       0       0       0
  6376 ;;      Locals:         0       0       0       0       0
  6377 ;;      Temps:          0       0       0       0       0
  6378 ;;      Totals:         0       0       0       0       0
  6379 ;;Total ram usage:        0 bytes
  6380 ;; Hardware stack levels used:    1
  6381 ;; Hardware stack levels required when called:    1
  6382 ;; This function calls:
  6383 ;;		Nothing
  6384 ;; This function is called by:
  6385 ;;		_main
  6386 ;; This function uses a non-reentrant model
  6387 ;;
  6388                           
  6389                           
  6390                           ;psect for function _setup
  6391  1EA3                     _setup:
  6392  1EA3                     l2821:	
  6393                           ;incstack = 0
  6394                           ; Regs used in _setup: [wreg+status,2]
  6395                           
  6396                           
  6397                           ;lab3_main.c: 160:     INTCONbits.PEIE=1;
  6398  1EA3  170B               	bsf	11,6	;volatile
  6399                           
  6400                           ;lab3_main.c: 161:     PIE1bits.RCIE=1;
  6401  1EA4  1683               	bsf	3,5	;RP0=1, select bank1
  6402  1EA5  1303               	bcf	3,6	;RP1=0, select bank1
  6403  1EA6  168C               	bsf	12,5	;volatile
  6404                           
  6405                           ;lab3_main.c: 162:     PIR1bits.RCIF=0;
  6406  1EA7  1283               	bcf	3,5	;RP0=0, select bank0
  6407  1EA8  1303               	bcf	3,6	;RP1=0, select bank0
  6408  1EA9  128C               	bcf	12,5	;volatile
  6409                           
  6410                           ;lab3_main.c: 163:     INTCONbits.GIE=1;
  6411  1EAA  178B               	bsf	11,7	;volatile
  6412  1EAB                     l2823:
  6413                           
  6414                           ;lab3_main.c: 167:     TRISE = 0;
  6415  1EAB  1683               	bsf	3,5	;RP0=1, select bank1
  6416  1EAC  1303               	bcf	3,6	;RP1=0, select bank1
  6417  1EAD  0189               	clrf	9	;volatile
  6418                           
  6419                           ;lab3_main.c: 168:     PORTE = 0;
  6420  1EAE  1283               	bcf	3,5	;RP0=0, select bank0
  6421  1EAF  1303               	bcf	3,6	;RP1=0, select bank0
  6422  1EB0  0189               	clrf	9	;volatile
  6423  1EB1                     l2825:
  6424                           
  6425                           ;lab3_main.c: 169:     ANSEL = 0b00000011;
  6426  1EB1  3003               	movlw	3
  6427  1EB2  1683               	bsf	3,5	;RP0=1, select bank3
  6428  1EB3  1703               	bsf	3,6	;RP1=1, select bank3
  6429  1EB4  0088               	movwf	8	;volatile
  6430  1EB5                     l2827:
  6431                           
  6432                           ;lab3_main.c: 170:     ANSELH = 0;
  6433  1EB5  0189               	clrf	9	;volatile
  6434  1EB6                     l2829:
  6435                           
  6436                           ;lab3_main.c: 171:     TRISB = 0;
  6437  1EB6  1683               	bsf	3,5	;RP0=1, select bank1
  6438  1EB7  1303               	bcf	3,6	;RP1=0, select bank1
  6439  1EB8  0186               	clrf	6	;volatile
  6440  1EB9                     l2831:
  6441                           
  6442                           ;lab3_main.c: 172:     PORTB = 0;
  6443  1EB9  1283               	bcf	3,5	;RP0=0, select bank0
  6444  1EBA  1303               	bcf	3,6	;RP1=0, select bank0
  6445  1EBB  0186               	clrf	6	;volatile
  6446                           
  6447                           ;lab3_main.c: 173:     TRISC = 0b10000000;
  6448  1EBC  3080               	movlw	128
  6449  1EBD  1683               	bsf	3,5	;RP0=1, select bank1
  6450  1EBE  1303               	bcf	3,6	;RP1=0, select bank1
  6451  1EBF  0087               	movwf	7	;volatile
  6452  1EC0                     l2833:
  6453                           
  6454                           ;lab3_main.c: 174:     PORTC = 0;
  6455  1EC0  1283               	bcf	3,5	;RP0=0, select bank0
  6456  1EC1  1303               	bcf	3,6	;RP1=0, select bank0
  6457  1EC2  0187               	clrf	7	;volatile
  6458  1EC3                     l2835:
  6459                           
  6460                           ;lab3_main.c: 175:     TRISD = 0;
  6461  1EC3  1683               	bsf	3,5	;RP0=1, select bank1
  6462  1EC4  1303               	bcf	3,6	;RP1=0, select bank1
  6463  1EC5  0188               	clrf	8	;volatile
  6464  1EC6                     l2837:
  6465                           
  6466                           ;lab3_main.c: 176:     PORTD = 0;
  6467  1EC6  1283               	bcf	3,5	;RP0=0, select bank0
  6468  1EC7  1303               	bcf	3,6	;RP1=0, select bank0
  6469  1EC8  0188               	clrf	8	;volatile
  6470  1EC9                     l2839:
  6471                           
  6472                           ;lab3_main.c: 177:     PORTA = 0;
  6473  1EC9  0185               	clrf	5	;volatile
  6474                           
  6475                           ;lab3_main.c: 178:     TRISA = 0b00000011;
  6476  1ECA  3003               	movlw	3
  6477  1ECB  1683               	bsf	3,5	;RP0=1, select bank1
  6478  1ECC  1303               	bcf	3,6	;RP1=0, select bank1
  6479  1ECD  0085               	movwf	5	;volatile
  6480  1ECE                     l99:
  6481  1ECE  0008               	return
  6482  1ECF                     __end_of_setup:
  6483                           
  6484                           	psect	text22
  6485  1D9F                     __ptext22:	
  6486 ;; *************** function _initADC *****************
  6487 ;; Defined at:
  6488 ;;		line 6 in file "ADC.c"
  6489 ;; Parameters:    Size  Location     Type
  6490 ;;		None
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;		None
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  1    wreg      void 
  6495 ;; Registers used:
  6496 ;;		wreg, status,2
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6502 ;;      Params:         0       0       0       0       0
  6503 ;;      Locals:         0       0       0       0       0
  6504 ;;      Temps:          0       0       0       0       0
  6505 ;;      Totals:         0       0       0       0       0
  6506 ;;Total ram usage:        0 bytes
  6507 ;; Hardware stack levels used:    1
  6508 ;; Hardware stack levels required when called:    1
  6509 ;; This function calls:
  6510 ;;		Nothing
  6511 ;; This function is called by:
  6512 ;;		_main
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           
  6517                           ;psect for function _initADC
  6518  1D9F                     _initADC:
  6519  1D9F                     l2841:	
  6520                           ;incstack = 0
  6521                           ; Regs used in _initADC: [wreg+status,2]
  6522                           
  6523                           
  6524                           ;ADC.c: 12:     INTCONbits.PEIE = 1;
  6525  1D9F  170B               	bsf	11,6	;volatile
  6526                           
  6527                           ;ADC.c: 13:     PIE1bits.ADIE = 1;
  6528  1DA0  1683               	bsf	3,5	;RP0=1, select bank1
  6529  1DA1  1303               	bcf	3,6	;RP1=0, select bank1
  6530  1DA2  170C               	bsf	12,6	;volatile
  6531                           
  6532                           ;ADC.c: 14:     PIR1bits.ADIF = 0;
  6533  1DA3  1283               	bcf	3,5	;RP0=0, select bank0
  6534  1DA4  1303               	bcf	3,6	;RP1=0, select bank0
  6535  1DA5  130C               	bcf	12,6	;volatile
  6536  1DA6                     l2843:
  6537                           
  6538                           ;ADC.c: 15:     ADCON0 = 0b01000001;
  6539  1DA6  3041               	movlw	65
  6540  1DA7  009F               	movwf	31	;volatile
  6541  1DA8                     l2845:
  6542                           
  6543                           ;ADC.c: 16:     ADCON1 = 0b00000000;
  6544  1DA8  1683               	bsf	3,5	;RP0=1, select bank1
  6545  1DA9  1303               	bcf	3,6	;RP1=0, select bank1
  6546  1DAA  019F               	clrf	31	;volatile
  6547  1DAB                     l157:
  6548  1DAB  0008               	return
  6549  1DAC                     __end_of_initADC:
  6550                           
  6551                           	psect	text23
  6552  1E78                     __ptext23:	
  6553 ;; *************** function _USART_Write_String *****************
  6554 ;; Defined at:
  6555 ;;		line 43 in file "USART.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;  a               2    3[COMMON] PTR unsigned char 
  6558 ;;		 -> pantalla(20), STR_1(19), 
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;  i               1    6[COMMON] unsigned char 
  6561 ;; Return value:  Size  Location     Type
  6562 ;;                  1    wreg      void 
  6563 ;; Registers used:
  6564 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6570 ;;      Params:         2       0       0       0       0
  6571 ;;      Locals:         1       0       0       0       0
  6572 ;;      Temps:          1       0       0       0       0
  6573 ;;      Totals:         4       0       0       0       0
  6574 ;;Total ram usage:        4 bytes
  6575 ;; Hardware stack levels used:    1
  6576 ;; Hardware stack levels required when called:    2
  6577 ;; This function calls:
  6578 ;;		_USART_Write
  6579 ;; This function is called by:
  6580 ;;		_main
  6581 ;; This function uses a non-reentrant model
  6582 ;;
  6583                           
  6584                           
  6585                           ;psect for function _USART_Write_String
  6586  1E78                     _USART_Write_String:
  6587  1E78                     l2883:	
  6588                           ;incstack = 0
  6589                           ; Regs used in _USART_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6590                           
  6591                           
  6592                           ;USART.c: 44:     uint8_t i;;USART.c: 45:     for(i=0;a[i]!='\0';i++){
  6593  1E78  01F6               	clrf	USART_Write_String@i
  6594  1E79  2E8F               	goto	l2889
  6595  1E7A                     l2885:
  6596                           
  6597                           ;USART.c: 46:         USART_Write(a[i]);
  6598  1E7A  0876               	movf	USART_Write_String@i,w
  6599  1E7B  0773               	addwf	USART_Write_String@a,w
  6600  1E7C  0084               	movwf	4
  6601  1E7D  0874               	movf	USART_Write_String@a+1,w
  6602  1E7E  1803               	skipnc
  6603  1E7F  0A74               	incf	USART_Write_String@a+1,w
  6604  1E80  00FF               	movwf	btemp+1
  6605  1E81  160A  118A  2000  160A  158A  	fcall	stringtab
  6606  1E86  160A  158A  2586  160A  158A  	fcall	_USART_Write
  6607  1E8B                     l2887:
  6608                           
  6609                           ;USART.c: 47:     }
  6610  1E8B  3001               	movlw	1
  6611  1E8C  00F5               	movwf	??_USART_Write_String
  6612  1E8D  0875               	movf	??_USART_Write_String,w
  6613  1E8E  07F6               	addwf	USART_Write_String@i,f
  6614  1E8F                     l2889:
  6615  1E8F  0876               	movf	USART_Write_String@i,w
  6616  1E90  0773               	addwf	USART_Write_String@a,w
  6617  1E91  0084               	movwf	4
  6618  1E92  0874               	movf	USART_Write_String@a+1,w
  6619  1E93  1803               	skipnc
  6620  1E94  0A74               	incf	USART_Write_String@a+1,w
  6621  1E95  1283               	bcf	3,5	;RP0=0, select bank0
  6622  1E96  1303               	bcf	3,6	;RP1=0, select bank0
  6623  1E97  00FF               	movwf	btemp+1
  6624  1E98  160A  118A  2000  160A  158A  	fcall	stringtab
  6625  1E9D  3A00               	xorlw	0
  6626  1E9E  1D03               	skipz
  6627  1E9F  2EA1               	goto	u3751
  6628  1EA0  2EA2               	goto	u3750
  6629  1EA1                     u3751:
  6630  1EA1  2E7A               	goto	l2885
  6631  1EA2                     u3750:
  6632  1EA2                     l220:
  6633  1EA2  0008               	return
  6634  1EA3                     __end_of_USART_Write_String:
  6635                           
  6636                           	psect	text24
  6637  1D86                     __ptext24:	
  6638 ;; *************** function _USART_Write *****************
  6639 ;; Defined at:
  6640 ;;		line 39 in file "USART.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;  a               1    wreg     unsigned char 
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;  a               1    2[COMMON] unsigned char 
  6645 ;; Return value:  Size  Location     Type
  6646 ;;                  1    wreg      void 
  6647 ;; Registers used:
  6648 ;;		wreg
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6654 ;;      Params:         0       0       0       0       0
  6655 ;;      Locals:         1       0       0       0       0
  6656 ;;      Temps:          0       0       0       0       0
  6657 ;;      Totals:         1       0       0       0       0
  6658 ;;Total ram usage:        1 bytes
  6659 ;; Hardware stack levels used:    1
  6660 ;; Hardware stack levels required when called:    1
  6661 ;; This function calls:
  6662 ;;		Nothing
  6663 ;; This function is called by:
  6664 ;;		_main
  6665 ;;		_USART_Write_String
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           
  6670                           ;psect for function _USART_Write
  6671  1D86                     _USART_Write:
  6672                           
  6673                           ;incstack = 0
  6674                           ; Regs used in _USART_Write: [wreg]
  6675                           ;USART_Write@a stored from wreg
  6676  1D86  00F2               	movwf	USART_Write@a
  6677  1D87                     l2417:
  6678  1D87                     l211:	
  6679                           ;USART.c: 40:     while(!TRMT);
  6680                           
  6681  1D87  1683               	bsf	3,5	;RP0=1, select bank1
  6682  1D88  1303               	bcf	3,6	;RP1=0, select bank1
  6683  1D89  1C98               	btfss	24,1	;volatile
  6684  1D8A  2D8C               	goto	u3041
  6685  1D8B  2D8D               	goto	u3040
  6686  1D8C                     u3041:
  6687  1D8C  2D87               	goto	l211
  6688  1D8D                     u3040:
  6689  1D8D                     l2419:
  6690                           
  6691                           ;USART.c: 41:     TXREG=a;
  6692  1D8D  0872               	movf	USART_Write@a,w
  6693  1D8E  1283               	bcf	3,5	;RP0=0, select bank0
  6694  1D8F  1303               	bcf	3,6	;RP1=0, select bank0
  6695  1D90  0099               	movwf	25	;volatile
  6696  1D91                     l214:
  6697  1D91  0008               	return
  6698  1D92                     __end_of_USART_Write:
  6699                           
  6700                           	psect	text25
  6701  1D62                     __ptext25:	
  6702 ;; *************** function _Set_Baud_Rate *****************
  6703 ;; Defined at:
  6704 ;;		line 10 in file "USART.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;		None
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;		None
  6709 ;; Return value:  Size  Location     Type
  6710 ;;                  1    wreg      void 
  6711 ;; Registers used:
  6712 ;;		wreg
  6713 ;; Tracked objects:
  6714 ;;		On entry : 0/0
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6718 ;;      Params:         0       0       0       0       0
  6719 ;;      Locals:         0       0       0       0       0
  6720 ;;      Temps:          0       0       0       0       0
  6721 ;;      Totals:         0       0       0       0       0
  6722 ;;Total ram usage:        0 bytes
  6723 ;; Hardware stack levels used:    1
  6724 ;; Hardware stack levels required when called:    1
  6725 ;; This function calls:
  6726 ;;		Nothing
  6727 ;; This function is called by:
  6728 ;;		_main
  6729 ;; This function uses a non-reentrant model
  6730 ;;
  6731                           
  6732                           
  6733                           ;psect for function _Set_Baud_Rate
  6734  1D62                     _Set_Baud_Rate:
  6735  1D62                     l2861:	
  6736                           ;incstack = 0
  6737                           ; Regs used in _Set_Baud_Rate: [wreg]
  6738                           
  6739                           
  6740                           ;USART.c: 11:     SPBRG = 12;
  6741  1D62  300C               	movlw	12
  6742  1D63  1683               	bsf	3,5	;RP0=1, select bank1
  6743  1D64  1303               	bcf	3,6	;RP1=0, select bank1
  6744  1D65  0099               	movwf	25	;volatile
  6745  1D66                     l202:
  6746  1D66  0008               	return
  6747  1D67                     __end_of_Set_Baud_Rate:
  6748                           
  6749                           	psect	text26
  6750  10DD                     __ptext26:	
  6751 ;; *************** function _LeerADC *****************
  6752 ;; Defined at:
  6753 ;;		line 186 in file "lab3_main.c"
  6754 ;; Parameters:    Size  Location     Type
  6755 ;;  x               1    wreg     unsigned char 
  6756 ;; Auto vars:     Size  Location     Type
  6757 ;;  x               1   32[BANK0 ] unsigned char 
  6758 ;;  a               3   33[BANK0 ] float 
  6759 ;; Return value:  Size  Location     Type
  6760 ;;                  3   27[BANK0 ] float 
  6761 ;; Registers used:
  6762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6763 ;; Tracked objects:
  6764 ;;		On entry : 0/0
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6768 ;;      Params:         0       3       0       0       0
  6769 ;;      Locals:         0       4       0       0       0
  6770 ;;      Temps:          0       2       0       0       0
  6771 ;;      Totals:         0       9       0       0       0
  6772 ;;Total ram usage:        9 bytes
  6773 ;; Hardware stack levels used:    1
  6774 ;; Hardware stack levels required when called:    3
  6775 ;; This function calls:
  6776 ;;		_ADC_Select
  6777 ;;		___awtoft
  6778 ;;		___ftmul
  6779 ;; This function is called by:
  6780 ;;		_main
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           
  6785                           ;psect for function _LeerADC
  6786  10DD                     _LeerADC:
  6787                           
  6788                           ;incstack = 0
  6789                           ; Regs used in _LeerADC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6790                           ;LeerADC@x stored from wreg
  6791  10DD  1283               	bcf	3,5	;RP0=0, select bank0
  6792  10DE  1303               	bcf	3,6	;RP1=0, select bank0
  6793  10DF  00C0               	movwf	LeerADC@x
  6794  10E0                     l3693:
  6795  10E0                     l3695:
  6796                           
  6797                           ;lab3_main.c: 188:     ADC_Select(x);
  6798  10E0  0840               	movf	LeerADC@x,w
  6799  10E1  120A  158A  2018  160A  118A  	fcall	_ADC_Select
  6800  10E6                     l3697:
  6801                           
  6802                           ;lab3_main.c: 189:     ADCON0bits.ADON=1;
  6803  10E6  1283               	bcf	3,5	;RP0=0, select bank0
  6804  10E7  1303               	bcf	3,6	;RP1=0, select bank0
  6805  10E8  141F               	bsf	31,0	;volatile
  6806  10E9                     l3699:
  6807                           
  6808                           ;lab3_main.c: 190:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  6809  10E9  300C               	movlw	12
  6810  10EA  1283               	bcf	3,5	;RP0=0, select bank0
  6811  10EB  1303               	bcf	3,6	;RP1=0, select bank0
  6812  10EC  00BE               	movwf	??_LeerADC
  6813  10ED                     u5917:
  6814  10ED  0BBE               	decfsz	??_LeerADC,f
  6815  10EE  28ED               	goto	u5917
  6816  10EF  0000               	nop
  6817  10F0                     l3701:
  6818                           
  6819                           ;lab3_main.c: 191:     ADCON0bits.GO=1;
  6820  10F0  1283               	bcf	3,5	;RP0=0, select bank0
  6821  10F1  1303               	bcf	3,6	;RP1=0, select bank0
  6822  10F2  149F               	bsf	31,1	;volatile
  6823  10F3                     l102:	
  6824                           ;lab3_main.c: 192:     while(ADCON0bits.GO_DONE==1){};
  6825                           
  6826  10F3  189F               	btfsc	31,1	;volatile
  6827  10F4  28F6               	goto	u5271
  6828  10F5  28F7               	goto	u5270
  6829  10F6                     u5271:
  6830  10F6  28F3               	goto	l102
  6831  10F7                     u5270:
  6832  10F7                     l3703:
  6833                           
  6834                           ;lab3_main.c: 194:     a = ADRESH * 0.0196;
  6835  10F7  3090               	movlw	144
  6836  10F8  00AB               	movwf	___ftmul@f1
  6837  10F9  30A0               	movlw	160
  6838  10FA  00AC               	movwf	___ftmul@f1+1
  6839  10FB  303C               	movlw	60
  6840  10FC  00AD               	movwf	___ftmul@f1+2
  6841  10FD  081E               	movf	30,w	;volatile
  6842  10FE  00BE               	movwf	??_LeerADC
  6843  10FF  01BF               	clrf	??_LeerADC+1
  6844  1100  083E               	movf	??_LeerADC,w
  6845  1101  00A0               	movwf	___awtoft@c
  6846  1102  083F               	movf	??_LeerADC+1,w
  6847  1103  00A1               	movwf	___awtoft@c+1
  6848  1104  160A  158A  264F  160A  118A  	fcall	___awtoft
  6849  1109  1283               	bcf	3,5	;RP0=0, select bank0
  6850  110A  1303               	bcf	3,6	;RP1=0, select bank0
  6851  110B  0820               	movf	?___awtoft,w
  6852  110C  00AE               	movwf	___ftmul@f2
  6853  110D  0821               	movf	?___awtoft+1,w
  6854  110E  00AF               	movwf	___ftmul@f2+1
  6855  110F  0822               	movf	?___awtoft+2,w
  6856  1110  00B0               	movwf	___ftmul@f2+2
  6857  1111  160A  118A  24B9  160A  118A  	fcall	___ftmul
  6858  1116  1283               	bcf	3,5	;RP0=0, select bank0
  6859  1117  1303               	bcf	3,6	;RP1=0, select bank0
  6860  1118  082B               	movf	?___ftmul,w
  6861  1119  00C1               	movwf	LeerADC@a
  6862  111A  082C               	movf	?___ftmul+1,w
  6863  111B  00C2               	movwf	LeerADC@a+1
  6864  111C  082D               	movf	?___ftmul+2,w
  6865  111D  00C3               	movwf	LeerADC@a+2
  6866  111E                     l3705:
  6867                           
  6868                           ;lab3_main.c: 195:     return a;
  6869  111E  0841               	movf	LeerADC@a,w
  6870  111F  00BB               	movwf	?_LeerADC
  6871  1120  0842               	movf	LeerADC@a+1,w
  6872  1121  00BC               	movwf	?_LeerADC+1
  6873  1122  0843               	movf	LeerADC@a+2,w
  6874  1123  00BD               	movwf	?_LeerADC+2
  6875  1124                     l105:
  6876  1124  0008               	return
  6877  1125                     __end_of_LeerADC:
  6878                           
  6879                           	psect	text27
  6880  14B9                     __ptext27:	
  6881 ;; *************** function ___ftmul *****************
  6882 ;; Defined at:
  6883 ;;		line 62 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\ftmul.c"
  6884 ;; Parameters:    Size  Location     Type
  6885 ;;  f1              3   11[BANK0 ] float 
  6886 ;;  f2              3   14[BANK0 ] float 
  6887 ;; Auto vars:     Size  Location     Type
  6888 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  6889 ;;  sign            1   26[BANK0 ] unsigned char 
  6890 ;;  cntr            1   25[BANK0 ] unsigned char 
  6891 ;;  exp             1   21[BANK0 ] unsigned char 
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  3   11[BANK0 ] float 
  6894 ;; Registers used:
  6895 ;;		wreg, status,2, status,0, pclath, cstack
  6896 ;; Tracked objects:
  6897 ;;		On entry : 0/0
  6898 ;;		On exit  : 0/0
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6901 ;;      Params:         0       6       0       0       0
  6902 ;;      Locals:         0       6       0       0       0
  6903 ;;      Temps:          0       4       0       0       0
  6904 ;;      Totals:         0      16       0       0       0
  6905 ;;Total ram usage:       16 bytes
  6906 ;; Hardware stack levels used:    1
  6907 ;; Hardware stack levels required when called:    2
  6908 ;; This function calls:
  6909 ;;		___ftpack
  6910 ;; This function is called by:
  6911 ;;		_LeerADC
  6912 ;;		_fround
  6913 ;;		_scale
  6914 ;;		_sprintf
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           
  6919                           ;psect for function ___ftmul
  6920  14B9                     ___ftmul:
  6921  14B9                     l3415:	
  6922                           ;incstack = 0
  6923                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6924                           
  6925  14B9  1283               	bcf	3,5	;RP0=0, select bank0
  6926  14BA  1303               	bcf	3,6	;RP1=0, select bank0
  6927  14BB  082B               	movf	___ftmul@f1,w
  6928  14BC  00B1               	movwf	??___ftmul
  6929  14BD  082C               	movf	___ftmul@f1+1,w
  6930  14BE  00B2               	movwf	??___ftmul+1
  6931  14BF  082D               	movf	___ftmul@f1+2,w
  6932  14C0  00B3               	movwf	??___ftmul+2
  6933  14C1  1003               	clrc
  6934  14C2  0D32               	rlf	??___ftmul+1,w
  6935  14C3  0D33               	rlf	??___ftmul+2,w
  6936  14C4  00B4               	movwf	??___ftmul+3
  6937  14C5  0834               	movf	??___ftmul+3,w
  6938  14C6  00B5               	movwf	___ftmul@exp
  6939  14C7  0835               	movf	___ftmul@exp,w
  6940  14C8  1D03               	btfss	3,2
  6941  14C9  2CCB               	goto	u4761
  6942  14CA  2CCC               	goto	u4760
  6943  14CB                     u4761:
  6944  14CB  2CD3               	goto	l3421
  6945  14CC                     u4760:
  6946  14CC                     l3417:
  6947  14CC  3000               	movlw	0
  6948  14CD  00AB               	movwf	?___ftmul
  6949  14CE  3000               	movlw	0
  6950  14CF  00AC               	movwf	?___ftmul+1
  6951  14D0  3000               	movlw	0
  6952  14D1  00AD               	movwf	?___ftmul+2
  6953  14D2  2D9D               	goto	l740
  6954  14D3                     l3421:
  6955  14D3  082E               	movf	___ftmul@f2,w
  6956  14D4  00B1               	movwf	??___ftmul
  6957  14D5  082F               	movf	___ftmul@f2+1,w
  6958  14D6  00B2               	movwf	??___ftmul+1
  6959  14D7  0830               	movf	___ftmul@f2+2,w
  6960  14D8  00B3               	movwf	??___ftmul+2
  6961  14D9  1003               	clrc
  6962  14DA  0D32               	rlf	??___ftmul+1,w
  6963  14DB  0D33               	rlf	??___ftmul+2,w
  6964  14DC  00B4               	movwf	??___ftmul+3
  6965  14DD  0834               	movf	??___ftmul+3,w
  6966  14DE  00BA               	movwf	___ftmul@sign
  6967  14DF  083A               	movf	___ftmul@sign,w
  6968  14E0  1D03               	btfss	3,2
  6969  14E1  2CE3               	goto	u4771
  6970  14E2  2CE4               	goto	u4770
  6971  14E3                     u4771:
  6972  14E3  2CEB               	goto	l3427
  6973  14E4                     u4770:
  6974  14E4                     l3423:
  6975  14E4  3000               	movlw	0
  6976  14E5  00AB               	movwf	?___ftmul
  6977  14E6  3000               	movlw	0
  6978  14E7  00AC               	movwf	?___ftmul+1
  6979  14E8  3000               	movlw	0
  6980  14E9  00AD               	movwf	?___ftmul+2
  6981  14EA  2D9D               	goto	l740
  6982  14EB                     l3427:
  6983  14EB  083A               	movf	___ftmul@sign,w
  6984  14EC  3E7B               	addlw	123
  6985  14ED  00B1               	movwf	??___ftmul
  6986  14EE  0831               	movf	??___ftmul,w
  6987  14EF  07B5               	addwf	___ftmul@exp,f
  6988  14F0  082B               	movf	___ftmul@f1,w
  6989  14F1  00B1               	movwf	??___ftmul
  6990  14F2  082C               	movf	___ftmul@f1+1,w
  6991  14F3  00B2               	movwf	??___ftmul+1
  6992  14F4  082D               	movf	___ftmul@f1+2,w
  6993  14F5  00B3               	movwf	??___ftmul+2
  6994  14F6  3010               	movlw	16
  6995  14F7                     u4785:
  6996  14F7  1003               	clrc
  6997  14F8  0CB3               	rrf	??___ftmul+2,f
  6998  14F9  0CB2               	rrf	??___ftmul+1,f
  6999  14FA  0CB1               	rrf	??___ftmul,f
  7000  14FB                     u4780:
  7001  14FB  3EFF               	addlw	-1
  7002  14FC  1D03               	skipz
  7003  14FD  2CF7               	goto	u4785
  7004  14FE  0831               	movf	??___ftmul,w
  7005  14FF  00B4               	movwf	??___ftmul+3
  7006  1500  0834               	movf	??___ftmul+3,w
  7007  1501  00BA               	movwf	___ftmul@sign
  7008  1502  082E               	movf	___ftmul@f2,w
  7009  1503  00B1               	movwf	??___ftmul
  7010  1504  082F               	movf	___ftmul@f2+1,w
  7011  1505  00B2               	movwf	??___ftmul+1
  7012  1506  0830               	movf	___ftmul@f2+2,w
  7013  1507  00B3               	movwf	??___ftmul+2
  7014  1508  3010               	movlw	16
  7015  1509                     u4795:
  7016  1509  1003               	clrc
  7017  150A  0CB3               	rrf	??___ftmul+2,f
  7018  150B  0CB2               	rrf	??___ftmul+1,f
  7019  150C  0CB1               	rrf	??___ftmul,f
  7020  150D                     u4790:
  7021  150D  3EFF               	addlw	-1
  7022  150E  1D03               	skipz
  7023  150F  2D09               	goto	u4795
  7024  1510  0831               	movf	??___ftmul,w
  7025  1511  00B4               	movwf	??___ftmul+3
  7026  1512  0834               	movf	??___ftmul+3,w
  7027  1513  06BA               	xorwf	___ftmul@sign,f
  7028  1514  3080               	movlw	128
  7029  1515  00B1               	movwf	??___ftmul
  7030  1516  0831               	movf	??___ftmul,w
  7031  1517  05BA               	andwf	___ftmul@sign,f
  7032  1518                     l3429:
  7033  1518  17AC               	bsf	___ftmul@f1+1,7
  7034  1519                     l3431:
  7035  1519  17AF               	bsf	___ftmul@f2+1,7
  7036  151A                     l3433:
  7037  151A  30FF               	movlw	255
  7038  151B  05AE               	andwf	___ftmul@f2,f
  7039  151C  30FF               	movlw	255
  7040  151D  05AF               	andwf	___ftmul@f2+1,f
  7041  151E  3000               	movlw	0
  7042  151F  05B0               	andwf	___ftmul@f2+2,f
  7043  1520                     l3435:
  7044  1520  3000               	movlw	0
  7045  1521  00B6               	movwf	___ftmul@f3_as_product
  7046  1522  3000               	movlw	0
  7047  1523  00B7               	movwf	___ftmul@f3_as_product+1
  7048  1524  3000               	movlw	0
  7049  1525  00B8               	movwf	___ftmul@f3_as_product+2
  7050  1526                     l3437:
  7051  1526  3007               	movlw	7
  7052  1527  00B1               	movwf	??___ftmul
  7053  1528  0831               	movf	??___ftmul,w
  7054  1529  00B9               	movwf	___ftmul@cntr
  7055  152A                     l3439:
  7056  152A  1C2B               	btfss	___ftmul@f1,0
  7057  152B  2D2D               	goto	u4801
  7058  152C  2D2E               	goto	u4800
  7059  152D                     u4801:
  7060  152D  2D3E               	goto	l3443
  7061  152E                     u4800:
  7062  152E                     l3441:
  7063  152E  082E               	movf	___ftmul@f2,w
  7064  152F  07B6               	addwf	___ftmul@f3_as_product,f
  7065  1530  082F               	movf	___ftmul@f2+1,w
  7066  1531  1103               	clrz
  7067  1532  1803               	skipnc
  7068  1533  0A2F               	incf	___ftmul@f2+1,w
  7069  1534  1903               	skipnz
  7070  1535  2D37               	goto	u4811
  7071  1536  07B7               	addwf	___ftmul@f3_as_product+1,f
  7072  1537                     u4811:
  7073  1537  0830               	movf	___ftmul@f2+2,w
  7074  1538  1103               	clrz
  7075  1539  1803               	skipnc
  7076  153A  0A30               	incf	___ftmul@f2+2,w
  7077  153B  1903               	skipnz
  7078  153C  2D3E               	goto	u4812
  7079  153D  07B8               	addwf	___ftmul@f3_as_product+2,f
  7080  153E                     u4812:
  7081  153E                     l3443:
  7082  153E  3001               	movlw	1
  7083  153F                     u4825:
  7084  153F  1003               	clrc
  7085  1540  0CAD               	rrf	___ftmul@f1+2,f
  7086  1541  0CAC               	rrf	___ftmul@f1+1,f
  7087  1542  0CAB               	rrf	___ftmul@f1,f
  7088  1543  3EFF               	addlw	-1
  7089  1544  1D03               	skipz
  7090  1545  2D3F               	goto	u4825
  7091  1546                     l3445:
  7092  1546  3001               	movlw	1
  7093  1547                     u4835:
  7094  1547  1003               	clrc
  7095  1548  0DAE               	rlf	___ftmul@f2,f
  7096  1549  0DAF               	rlf	___ftmul@f2+1,f
  7097  154A  0DB0               	rlf	___ftmul@f2+2,f
  7098  154B  3EFF               	addlw	-1
  7099  154C  1D03               	skipz
  7100  154D  2D47               	goto	u4835
  7101  154E                     l3447:
  7102  154E  3001               	movlw	1
  7103  154F  02B9               	subwf	___ftmul@cntr,f
  7104  1550  1D03               	btfss	3,2
  7105  1551  2D53               	goto	u4841
  7106  1552  2D54               	goto	u4840
  7107  1553                     u4841:
  7108  1553  2D2A               	goto	l3439
  7109  1554                     u4840:
  7110  1554                     l3449:
  7111  1554  3009               	movlw	9
  7112  1555  00B1               	movwf	??___ftmul
  7113  1556  0831               	movf	??___ftmul,w
  7114  1557  00B9               	movwf	___ftmul@cntr
  7115  1558                     l3451:
  7116  1558  1C2B               	btfss	___ftmul@f1,0
  7117  1559  2D5B               	goto	u4851
  7118  155A  2D5C               	goto	u4850
  7119  155B                     u4851:
  7120  155B  2D6C               	goto	l3455
  7121  155C                     u4850:
  7122  155C                     l3453:
  7123  155C  082E               	movf	___ftmul@f2,w
  7124  155D  07B6               	addwf	___ftmul@f3_as_product,f
  7125  155E  082F               	movf	___ftmul@f2+1,w
  7126  155F  1103               	clrz
  7127  1560  1803               	skipnc
  7128  1561  0A2F               	incf	___ftmul@f2+1,w
  7129  1562  1903               	skipnz
  7130  1563  2D65               	goto	u4861
  7131  1564  07B7               	addwf	___ftmul@f3_as_product+1,f
  7132  1565                     u4861:
  7133  1565  0830               	movf	___ftmul@f2+2,w
  7134  1566  1103               	clrz
  7135  1567  1803               	skipnc
  7136  1568  0A30               	incf	___ftmul@f2+2,w
  7137  1569  1903               	skipnz
  7138  156A  2D6C               	goto	u4862
  7139  156B  07B8               	addwf	___ftmul@f3_as_product+2,f
  7140  156C                     u4862:
  7141  156C                     l3455:
  7142  156C  3001               	movlw	1
  7143  156D                     u4875:
  7144  156D  1003               	clrc
  7145  156E  0CAD               	rrf	___ftmul@f1+2,f
  7146  156F  0CAC               	rrf	___ftmul@f1+1,f
  7147  1570  0CAB               	rrf	___ftmul@f1,f
  7148  1571  3EFF               	addlw	-1
  7149  1572  1D03               	skipz
  7150  1573  2D6D               	goto	u4875
  7151  1574                     l3457:
  7152  1574  3001               	movlw	1
  7153  1575                     u4885:
  7154  1575  1003               	clrc
  7155  1576  0CB8               	rrf	___ftmul@f3_as_product+2,f
  7156  1577  0CB7               	rrf	___ftmul@f3_as_product+1,f
  7157  1578  0CB6               	rrf	___ftmul@f3_as_product,f
  7158  1579  3EFF               	addlw	-1
  7159  157A  1D03               	skipz
  7160  157B  2D75               	goto	u4885
  7161  157C                     l3459:
  7162  157C  3001               	movlw	1
  7163  157D  02B9               	subwf	___ftmul@cntr,f
  7164  157E  1D03               	btfss	3,2
  7165  157F  2D81               	goto	u4891
  7166  1580  2D82               	goto	u4890
  7167  1581                     u4891:
  7168  1581  2D58               	goto	l3451
  7169  1582                     u4890:
  7170  1582                     l3461:
  7171  1582  0836               	movf	___ftmul@f3_as_product,w
  7172  1583  00F2               	movwf	___ftpack@arg
  7173  1584  0837               	movf	___ftmul@f3_as_product+1,w
  7174  1585  00F3               	movwf	___ftpack@arg+1
  7175  1586  0838               	movf	___ftmul@f3_as_product+2,w
  7176  1587  00F4               	movwf	___ftpack@arg+2
  7177  1588  0835               	movf	___ftmul@exp,w
  7178  1589  00B1               	movwf	??___ftmul
  7179  158A  0831               	movf	??___ftmul,w
  7180  158B  00F5               	movwf	___ftpack@exp
  7181  158C  083A               	movf	___ftmul@sign,w
  7182  158D  00B2               	movwf	??___ftmul+1
  7183  158E  0832               	movf	??___ftmul+1,w
  7184  158F  00F6               	movwf	___ftpack@sign
  7185  1590  160A  118A  22F4  160A  118A  	fcall	___ftpack
  7186  1595  0872               	movf	?___ftpack,w
  7187  1596  1283               	bcf	3,5	;RP0=0, select bank0
  7188  1597  1303               	bcf	3,6	;RP1=0, select bank0
  7189  1598  00AB               	movwf	?___ftmul
  7190  1599  0873               	movf	?___ftpack+1,w
  7191  159A  00AC               	movwf	?___ftmul+1
  7192  159B  0874               	movf	?___ftpack+2,w
  7193  159C  00AD               	movwf	?___ftmul+2
  7194  159D                     l740:
  7195  159D  0008               	return
  7196  159E                     __end_of___ftmul:
  7197                           
  7198                           	psect	text28
  7199  1E4F                     __ptext28:	
  7200 ;; *************** function ___awtoft *****************
  7201 ;; Defined at:
  7202 ;;		line 32 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\awtoft.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;  c               2    0[BANK0 ] int 
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;  sign            1   10[COMMON] unsigned char 
  7207 ;; Return value:  Size  Location     Type
  7208 ;;                  3    0[BANK0 ] float 
  7209 ;; Registers used:
  7210 ;;		wreg, status,2, status,0, pclath, cstack
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7216 ;;      Params:         0       3       0       0       0
  7217 ;;      Locals:         1       0       0       0       0
  7218 ;;      Temps:          0       2       0       0       0
  7219 ;;      Totals:         1       5       0       0       0
  7220 ;;Total ram usage:        6 bytes
  7221 ;; Hardware stack levels used:    1
  7222 ;; Hardware stack levels required when called:    2
  7223 ;; This function calls:
  7224 ;;		___ftpack
  7225 ;; This function is called by:
  7226 ;;		_LeerADC
  7227 ;; This function uses a non-reentrant model
  7228 ;;
  7229                           
  7230                           
  7231                           ;psect for function ___awtoft
  7232  1E4F                     ___awtoft:
  7233  1E4F                     l3629:	
  7234                           ;incstack = 0
  7235                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7236                           
  7237  1E4F  01FA               	clrf	___awtoft@sign
  7238  1E50                     l3631:
  7239  1E50  1283               	bcf	3,5	;RP0=0, select bank0
  7240  1E51  1303               	bcf	3,6	;RP1=0, select bank0
  7241  1E52  1FA1               	btfss	___awtoft@c+1,7
  7242  1E53  2E55               	goto	u5171
  7243  1E54  2E56               	goto	u5170
  7244  1E55                     u5171:
  7245  1E55  2E5D               	goto	l3637
  7246  1E56                     u5170:
  7247  1E56                     l3633:
  7248  1E56  09A0               	comf	___awtoft@c,f
  7249  1E57  09A1               	comf	___awtoft@c+1,f
  7250  1E58  0AA0               	incf	___awtoft@c,f
  7251  1E59  1903               	skipnz
  7252  1E5A  0AA1               	incf	___awtoft@c+1,f
  7253  1E5B                     l3635:
  7254  1E5B  01FA               	clrf	___awtoft@sign
  7255  1E5C  0AFA               	incf	___awtoft@sign,f
  7256  1E5D                     l3637:
  7257  1E5D  0820               	movf	___awtoft@c,w
  7258  1E5E  00F2               	movwf	___ftpack@arg
  7259  1E5F  0821               	movf	___awtoft@c+1,w
  7260  1E60  00F3               	movwf	___ftpack@arg+1
  7261  1E61  01F4               	clrf	___ftpack@arg+2
  7262  1E62  308E               	movlw	142
  7263  1E63  00A3               	movwf	??___awtoft
  7264  1E64  0823               	movf	??___awtoft,w
  7265  1E65  00F5               	movwf	___ftpack@exp
  7266  1E66  087A               	movf	___awtoft@sign,w
  7267  1E67  00A4               	movwf	??___awtoft+1
  7268  1E68  0824               	movf	??___awtoft+1,w
  7269  1E69  00F6               	movwf	___ftpack@sign
  7270  1E6A  160A  118A  22F4  160A  158A  	fcall	___ftpack
  7271  1E6F  0872               	movf	?___ftpack,w
  7272  1E70  1283               	bcf	3,5	;RP0=0, select bank0
  7273  1E71  1303               	bcf	3,6	;RP1=0, select bank0
  7274  1E72  00A0               	movwf	?___awtoft
  7275  1E73  0873               	movf	?___ftpack+1,w
  7276  1E74  00A1               	movwf	?___awtoft+1
  7277  1E75  0874               	movf	?___ftpack+2,w
  7278  1E76  00A2               	movwf	?___awtoft+2
  7279  1E77                     l633:
  7280  1E77  0008               	return
  7281  1E78                     __end_of___awtoft:
  7282                           
  7283                           	psect	text29
  7284  12F4                     __ptext29:	
  7285 ;; *************** function ___ftpack *****************
  7286 ;; Defined at:
  7287 ;;		line 62 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\float.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;  arg             3    2[COMMON] unsigned um
  7290 ;;  exp             1    5[COMMON] unsigned char 
  7291 ;;  sign            1    6[COMMON] unsigned char 
  7292 ;; Auto vars:     Size  Location     Type
  7293 ;;		None
  7294 ;; Return value:  Size  Location     Type
  7295 ;;                  3    2[COMMON] float 
  7296 ;; Registers used:
  7297 ;;		wreg, status,2, status,0
  7298 ;; Tracked objects:
  7299 ;;		On entry : 0/0
  7300 ;;		On exit  : 0/0
  7301 ;;		Unchanged: 0/0
  7302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7303 ;;      Params:         5       0       0       0       0
  7304 ;;      Locals:         0       0       0       0       0
  7305 ;;      Temps:          3       0       0       0       0
  7306 ;;      Totals:         8       0       0       0       0
  7307 ;;Total ram usage:        8 bytes
  7308 ;; Hardware stack levels used:    1
  7309 ;; Hardware stack levels required when called:    1
  7310 ;; This function calls:
  7311 ;;		Nothing
  7312 ;; This function is called by:
  7313 ;;		___awtoft
  7314 ;;		___ftadd
  7315 ;;		___ftmul
  7316 ;;		___lltoft
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320                           
  7321                           ;psect for function ___ftpack
  7322  12F4                     ___ftpack:
  7323  12F4                     l3297:	
  7324                           ;incstack = 0
  7325                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7326                           
  7327  12F4  0875               	movf	___ftpack@exp,w
  7328  12F5  1903               	btfsc	3,2
  7329  12F6  2AF8               	goto	u4381
  7330  12F7  2AF9               	goto	u4380
  7331  12F8                     u4381:
  7332  12F8  2B00               	goto	l3301
  7333  12F9                     u4380:
  7334  12F9                     l3299:
  7335  12F9  0874               	movf	___ftpack@arg+2,w
  7336  12FA  0473               	iorwf	___ftpack@arg+1,w
  7337  12FB  0472               	iorwf	___ftpack@arg,w
  7338  12FC  1D03               	skipz
  7339  12FD  2AFF               	goto	u4391
  7340  12FE  2B00               	goto	u4390
  7341  12FF                     u4391:
  7342  12FF  2B13               	goto	l3307
  7343  1300                     u4390:
  7344  1300                     l3301:
  7345  1300  3000               	movlw	0
  7346  1301  00F2               	movwf	?___ftpack
  7347  1302  3000               	movlw	0
  7348  1303  00F3               	movwf	?___ftpack+1
  7349  1304  3000               	movlw	0
  7350  1305  00F4               	movwf	?___ftpack+2
  7351  1306  2B6F               	goto	l656
  7352  1307                     l3305:
  7353  1307  3001               	movlw	1
  7354  1308  00F7               	movwf	??___ftpack
  7355  1309  0877               	movf	??___ftpack,w
  7356  130A  07F5               	addwf	___ftpack@exp,f
  7357  130B  3001               	movlw	1
  7358  130C                     u4405:
  7359  130C  1003               	clrc
  7360  130D  0CF4               	rrf	___ftpack@arg+2,f
  7361  130E  0CF3               	rrf	___ftpack@arg+1,f
  7362  130F  0CF2               	rrf	___ftpack@arg,f
  7363  1310  3EFF               	addlw	-1
  7364  1311  1D03               	skipz
  7365  1312  2B0C               	goto	u4405
  7366  1313                     l3307:
  7367  1313  30FE               	movlw	254
  7368  1314  0574               	andwf	___ftpack@arg+2,w
  7369  1315  1D03               	btfss	3,2
  7370  1316  2B18               	goto	u4411
  7371  1317  2B19               	goto	u4410
  7372  1318                     u4411:
  7373  1318  2B07               	goto	l3305
  7374  1319                     u4410:
  7375  1319  2B30               	goto	l660
  7376  131A                     l3309:
  7377  131A  3001               	movlw	1
  7378  131B  00F7               	movwf	??___ftpack
  7379  131C  0877               	movf	??___ftpack,w
  7380  131D  07F5               	addwf	___ftpack@exp,f
  7381  131E                     l3311:
  7382  131E  3001               	movlw	1
  7383  131F  07F2               	addwf	___ftpack@arg,f
  7384  1320  3000               	movlw	0
  7385  1321  1803               	skipnc
  7386  1322  3001               	movlw	1
  7387  1323  07F3               	addwf	___ftpack@arg+1,f
  7388  1324  3000               	movlw	0
  7389  1325  1803               	skipnc
  7390  1326  3001               	movlw	1
  7391  1327  07F4               	addwf	___ftpack@arg+2,f
  7392  1328                     l3313:
  7393  1328  3001               	movlw	1
  7394  1329                     u4425:
  7395  1329  1003               	clrc
  7396  132A  0CF4               	rrf	___ftpack@arg+2,f
  7397  132B  0CF3               	rrf	___ftpack@arg+1,f
  7398  132C  0CF2               	rrf	___ftpack@arg,f
  7399  132D  3EFF               	addlw	-1
  7400  132E  1D03               	skipz
  7401  132F  2B29               	goto	u4425
  7402  1330                     l660:
  7403  1330  30FF               	movlw	255
  7404  1331  0574               	andwf	___ftpack@arg+2,w
  7405  1332  1D03               	btfss	3,2
  7406  1333  2B35               	goto	u4431
  7407  1334  2B36               	goto	u4430
  7408  1335                     u4431:
  7409  1335  2B1A               	goto	l3309
  7410  1336                     u4430:
  7411  1336  2B41               	goto	l3317
  7412  1337                     l3315:
  7413  1337  3001               	movlw	1
  7414  1338  02F5               	subwf	___ftpack@exp,f
  7415  1339  3001               	movlw	1
  7416  133A                     u4445:
  7417  133A  1003               	clrc
  7418  133B  0DF2               	rlf	___ftpack@arg,f
  7419  133C  0DF3               	rlf	___ftpack@arg+1,f
  7420  133D  0DF4               	rlf	___ftpack@arg+2,f
  7421  133E  3EFF               	addlw	-1
  7422  133F  1D03               	skipz
  7423  1340  2B3A               	goto	u4445
  7424  1341                     l3317:
  7425  1341  1BF3               	btfsc	___ftpack@arg+1,7
  7426  1342  2B44               	goto	u4451
  7427  1343  2B45               	goto	u4450
  7428  1344                     u4451:
  7429  1344  2B4B               	goto	l667
  7430  1345                     u4450:
  7431  1345                     l3319:
  7432  1345  3002               	movlw	2
  7433  1346  0275               	subwf	___ftpack@exp,w
  7434  1347  1803               	skipnc
  7435  1348  2B4A               	goto	u4461
  7436  1349  2B4B               	goto	u4460
  7437  134A                     u4461:
  7438  134A  2B37               	goto	l3315
  7439  134B                     u4460:
  7440  134B                     l667:
  7441  134B  1875               	btfsc	___ftpack@exp,0
  7442  134C  2B4E               	goto	u4471
  7443  134D  2B4F               	goto	u4470
  7444  134E                     u4471:
  7445  134E  2B55               	goto	l668
  7446  134F                     u4470:
  7447  134F                     l3321:
  7448  134F  30FF               	movlw	255
  7449  1350  05F2               	andwf	___ftpack@arg,f
  7450  1351  307F               	movlw	127
  7451  1352  05F3               	andwf	___ftpack@arg+1,f
  7452  1353  30FF               	movlw	255
  7453  1354  05F4               	andwf	___ftpack@arg+2,f
  7454  1355                     l668:
  7455  1355  1003               	clrc
  7456  1356  0CF5               	rrf	___ftpack@exp,f
  7457  1357                     l3323:
  7458  1357  0875               	movf	___ftpack@exp,w
  7459  1358  00F7               	movwf	??___ftpack
  7460  1359  01F8               	clrf	??___ftpack+1
  7461  135A  01F9               	clrf	??___ftpack+2
  7462  135B  3010               	movlw	16
  7463  135C                     u4485:
  7464  135C  1003               	clrc
  7465  135D  0DF7               	rlf	??___ftpack,f
  7466  135E  0DF8               	rlf	??___ftpack+1,f
  7467  135F  0DF9               	rlf	??___ftpack+2,f
  7468  1360                     u4480:
  7469  1360  3EFF               	addlw	-1
  7470  1361  1D03               	skipz
  7471  1362  2B5C               	goto	u4485
  7472  1363  0877               	movf	??___ftpack,w
  7473  1364  04F2               	iorwf	___ftpack@arg,f
  7474  1365  0878               	movf	??___ftpack+1,w
  7475  1366  04F3               	iorwf	___ftpack@arg+1,f
  7476  1367  0879               	movf	??___ftpack+2,w
  7477  1368  04F4               	iorwf	___ftpack@arg+2,f
  7478  1369                     l3325:
  7479  1369  0876               	movf	___ftpack@sign,w
  7480  136A  1903               	btfsc	3,2
  7481  136B  2B6D               	goto	u4491
  7482  136C  2B6E               	goto	u4490
  7483  136D                     u4491:
  7484  136D  2B6F               	goto	l669
  7485  136E                     u4490:
  7486  136E                     l3327:
  7487  136E  17F4               	bsf	___ftpack@arg+2,7
  7488  136F                     l669:
  7489  136F                     l656:
  7490  136F  0008               	return
  7491  1370                     __end_of___ftpack:
  7492                           
  7493                           	psect	text30
  7494  0818                     __ptext30:	
  7495 ;; *************** function _ADC_Select *****************
  7496 ;; Defined at:
  7497 ;;		line 19 in file "ADC.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;  a               1    wreg     unsigned char 
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;  a               1    4[COMMON] unsigned char 
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  1    wreg      void 
  7504 ;; Registers used:
  7505 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7511 ;;      Params:         0       0       0       0       0
  7512 ;;      Locals:         1       0       0       0       0
  7513 ;;      Temps:          2       0       0       0       0
  7514 ;;      Totals:         3       0       0       0       0
  7515 ;;Total ram usage:        3 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; Hardware stack levels required when called:    1
  7518 ;; This function calls:
  7519 ;;		Nothing
  7520 ;; This function is called by:
  7521 ;;		_LeerADC
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           
  7526                           ;psect for function _ADC_Select
  7527  0818                     _ADC_Select:
  7528                           
  7529                           ;incstack = 0
  7530                           ; Regs used in _ADC_Select: [wreg-fsr0h+status,2+status,0]
  7531                           ;ADC_Select@a stored from wreg
  7532  0818  00F4               	movwf	ADC_Select@a
  7533  0819                     l2421:
  7534                           
  7535                           ;ADC.c: 20:     switch(a){
  7536  0819  287F               	goto	l2455
  7537  081A                     l2423:
  7538  081A  30C3               	movlw	-61
  7539  081B  1283               	bcf	3,5	;RP0=0, select bank0
  7540  081C  1303               	bcf	3,6	;RP1=0, select bank0
  7541  081D  059F               	andwf	31,f	;volatile
  7542  081E  28B3               	goto	l177
  7543  081F                     l2425:
  7544  081F  1283               	bcf	3,5	;RP0=0, select bank0
  7545  0820  1303               	bcf	3,6	;RP1=0, select bank0
  7546  0821  081F               	movf	31,w	;volatile
  7547  0822  39C3               	andlw	-61
  7548  0823  3804               	iorlw	4
  7549  0824  009F               	movwf	31	;volatile
  7550  0825  28B3               	goto	l177
  7551  0826                     l2427:
  7552  0826  1283               	bcf	3,5	;RP0=0, select bank0
  7553  0827  1303               	bcf	3,6	;RP1=0, select bank0
  7554  0828  081F               	movf	31,w	;volatile
  7555  0829  39C3               	andlw	-61
  7556  082A  3808               	iorlw	8
  7557  082B  009F               	movwf	31	;volatile
  7558  082C  28B3               	goto	l177
  7559  082D                     l2429:
  7560  082D  1283               	bcf	3,5	;RP0=0, select bank0
  7561  082E  1303               	bcf	3,6	;RP1=0, select bank0
  7562  082F  081F               	movf	31,w	;volatile
  7563  0830  39C3               	andlw	-61
  7564  0831  380C               	iorlw	12
  7565  0832  009F               	movwf	31	;volatile
  7566  0833  28B3               	goto	l177
  7567  0834                     l2431:
  7568  0834  1283               	bcf	3,5	;RP0=0, select bank0
  7569  0835  1303               	bcf	3,6	;RP1=0, select bank0
  7570  0836  081F               	movf	31,w	;volatile
  7571  0837  39C3               	andlw	-61
  7572  0838  3810               	iorlw	16
  7573  0839  009F               	movwf	31	;volatile
  7574  083A  28B3               	goto	l177
  7575  083B                     l2433:
  7576  083B  1283               	bcf	3,5	;RP0=0, select bank0
  7577  083C  1303               	bcf	3,6	;RP1=0, select bank0
  7578  083D  081F               	movf	31,w	;volatile
  7579  083E  39C3               	andlw	-61
  7580  083F  3814               	iorlw	20
  7581  0840  009F               	movwf	31	;volatile
  7582  0841  28B3               	goto	l177
  7583  0842                     l2435:
  7584  0842  1283               	bcf	3,5	;RP0=0, select bank0
  7585  0843  1303               	bcf	3,6	;RP1=0, select bank0
  7586  0844  081F               	movf	31,w	;volatile
  7587  0845  39C3               	andlw	-61
  7588  0846  3818               	iorlw	24
  7589  0847  009F               	movwf	31	;volatile
  7590  0848  28B3               	goto	l177
  7591  0849                     l2437:
  7592  0849  1283               	bcf	3,5	;RP0=0, select bank0
  7593  084A  1303               	bcf	3,6	;RP1=0, select bank0
  7594  084B  081F               	movf	31,w	;volatile
  7595  084C  39C3               	andlw	-61
  7596  084D  381C               	iorlw	28
  7597  084E  009F               	movwf	31	;volatile
  7598  084F  28B3               	goto	l177
  7599  0850                     l2439:
  7600  0850  1283               	bcf	3,5	;RP0=0, select bank0
  7601  0851  1303               	bcf	3,6	;RP1=0, select bank0
  7602  0852  081F               	movf	31,w	;volatile
  7603  0853  39C3               	andlw	-61
  7604  0854  3820               	iorlw	32
  7605  0855  009F               	movwf	31	;volatile
  7606  0856  28B3               	goto	l177
  7607  0857                     l2441:
  7608  0857  1283               	bcf	3,5	;RP0=0, select bank0
  7609  0858  1303               	bcf	3,6	;RP1=0, select bank0
  7610  0859  081F               	movf	31,w	;volatile
  7611  085A  39C3               	andlw	-61
  7612  085B  3824               	iorlw	36
  7613  085C  009F               	movwf	31	;volatile
  7614  085D  28B3               	goto	l177
  7615  085E                     l2443:
  7616  085E  1283               	bcf	3,5	;RP0=0, select bank0
  7617  085F  1303               	bcf	3,6	;RP1=0, select bank0
  7618  0860  081F               	movf	31,w	;volatile
  7619  0861  39C3               	andlw	-61
  7620  0862  3828               	iorlw	40
  7621  0863  009F               	movwf	31	;volatile
  7622  0864  28B3               	goto	l177
  7623  0865                     l2445:
  7624  0865  1283               	bcf	3,5	;RP0=0, select bank0
  7625  0866  1303               	bcf	3,6	;RP1=0, select bank0
  7626  0867  081F               	movf	31,w	;volatile
  7627  0868  39C3               	andlw	-61
  7628  0869  382C               	iorlw	44
  7629  086A  009F               	movwf	31	;volatile
  7630  086B  28B3               	goto	l177
  7631  086C                     l2447:
  7632  086C  1283               	bcf	3,5	;RP0=0, select bank0
  7633  086D  1303               	bcf	3,6	;RP1=0, select bank0
  7634  086E  081F               	movf	31,w	;volatile
  7635  086F  39C3               	andlw	-61
  7636  0870  3830               	iorlw	48
  7637  0871  009F               	movwf	31	;volatile
  7638  0872  28B3               	goto	l177
  7639  0873                     l2449:
  7640  0873  1283               	bcf	3,5	;RP0=0, select bank0
  7641  0874  1303               	bcf	3,6	;RP1=0, select bank0
  7642  0875  081F               	movf	31,w	;volatile
  7643  0876  39C3               	andlw	-61
  7644  0877  3834               	iorlw	52
  7645  0878  009F               	movwf	31	;volatile
  7646  0879  28B3               	goto	l177
  7647  087A                     l2451:
  7648  087A  30C3               	movlw	-61
  7649  087B  1283               	bcf	3,5	;RP0=0, select bank0
  7650  087C  1303               	bcf	3,6	;RP1=0, select bank0
  7651  087D  059F               	andwf	31,f	;volatile
  7652  087E  28B3               	goto	l177
  7653  087F                     l2455:
  7654  087F  0874               	movf	ADC_Select@a,w
  7655  0880  00F2               	movwf	??_ADC_Select
  7656  0881  01F3               	clrf	??_ADC_Select+1
  7657                           
  7658                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7659                           ; Switch size 1, requested type "simple"
  7660                           ; Number of cases is 1, Range of values is 0 to 0
  7661                           ; switch strategies available:
  7662                           ; Name         Instructions Cycles
  7663                           ; simple_byte            4     3 (average)
  7664                           ; direct_byte           11     8 (fixed)
  7665                           ; jumptable            260     6 (fixed)
  7666                           ;	Chosen strategy is simple_byte
  7667  0882  0873               	movf	??_ADC_Select+1,w
  7668  0883  3A00               	xorlw	0	; case 0
  7669  0884  1903               	skipnz
  7670  0885  2887               	goto	l4117
  7671  0886  287A               	goto	l2451
  7672  0887                     l4117:
  7673                           
  7674                           ; Switch size 1, requested type "simple"
  7675                           ; Number of cases is 14, Range of values is 0 to 13
  7676                           ; switch strategies available:
  7677                           ; Name         Instructions Cycles
  7678                           ; simple_byte           43    22 (average)
  7679                           ; direct_byte           50     8 (fixed)
  7680                           ; jumptable            260     6 (fixed)
  7681                           ;	Chosen strategy is simple_byte
  7682  0887  0872               	movf	??_ADC_Select,w
  7683  0888  3A00               	xorlw	0	; case 0
  7684  0889  1903               	skipnz
  7685  088A  281A               	goto	l2423
  7686  088B  3A01               	xorlw	1	; case 1
  7687  088C  1903               	skipnz
  7688  088D  281F               	goto	l2425
  7689  088E  3A03               	xorlw	3	; case 2
  7690  088F  1903               	skipnz
  7691  0890  2826               	goto	l2427
  7692  0891  3A01               	xorlw	1	; case 3
  7693  0892  1903               	skipnz
  7694  0893  282D               	goto	l2429
  7695  0894  3A07               	xorlw	7	; case 4
  7696  0895  1903               	skipnz
  7697  0896  2834               	goto	l2431
  7698  0897  3A01               	xorlw	1	; case 5
  7699  0898  1903               	skipnz
  7700  0899  283B               	goto	l2433
  7701  089A  3A03               	xorlw	3	; case 6
  7702  089B  1903               	skipnz
  7703  089C  2842               	goto	l2435
  7704  089D  3A01               	xorlw	1	; case 7
  7705  089E  1903               	skipnz
  7706  089F  2849               	goto	l2437
  7707  08A0  3A0F               	xorlw	15	; case 8
  7708  08A1  1903               	skipnz
  7709  08A2  2850               	goto	l2439
  7710  08A3  3A01               	xorlw	1	; case 9
  7711  08A4  1903               	skipnz
  7712  08A5  2857               	goto	l2441
  7713  08A6  3A03               	xorlw	3	; case 10
  7714  08A7  1903               	skipnz
  7715  08A8  285E               	goto	l2443
  7716  08A9  3A01               	xorlw	1	; case 11
  7717  08AA  1903               	skipnz
  7718  08AB  2865               	goto	l2445
  7719  08AC  3A07               	xorlw	7	; case 12
  7720  08AD  1903               	skipnz
  7721  08AE  286C               	goto	l2447
  7722  08AF  3A01               	xorlw	1	; case 13
  7723  08B0  1903               	skipnz
  7724  08B1  2873               	goto	l2449
  7725  08B2  287A               	goto	l2451
  7726  08B3                     l177:
  7727  08B3  0008               	return
  7728  08B4                     __end_of_ADC_Select:
  7729                           
  7730                           	psect	text31
  7731  1D92                     __ptext31:	
  7732 ;; *************** function _LCD_clear *****************
  7733 ;; Defined at:
  7734 ;;		line 40 in file "LCD.c"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;		None
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;		None
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  1    wreg      void 
  7741 ;; Registers used:
  7742 ;;		wreg, status,2, status,0, pclath, cstack
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7748 ;;      Params:         0       0       0       0       0
  7749 ;;      Locals:         0       0       0       0       0
  7750 ;;      Temps:          0       0       0       0       0
  7751 ;;      Totals:         0       0       0       0       0
  7752 ;;Total ram usage:        0 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; Hardware stack levels required when called:    3
  7755 ;; This function calls:
  7756 ;;		_LCD_Command
  7757 ;; This function is called by:
  7758 ;;		_main
  7759 ;; This function uses a non-reentrant model
  7760 ;;
  7761                           
  7762                           
  7763                           ;psect for function _LCD_clear
  7764  1D92                     _LCD_clear:
  7765  1D92                     l3691:	
  7766                           ;incstack = 0
  7767                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  7768                           
  7769                           
  7770                           ;LCD.c: 41:     LCD_Command(0);
  7771  1D92  3000               	movlw	0
  7772  1D93  160A  158A  25BE  160A  158A  	fcall	_LCD_Command
  7773                           
  7774                           ;LCD.c: 42:     LCD_Command(1);
  7775  1D98  3001               	movlw	1
  7776  1D99  160A  158A  25BE  160A  158A  	fcall	_LCD_Command
  7777  1D9E                     l127:
  7778  1D9E  0008               	return
  7779  1D9F                     __end_of_LCD_clear:
  7780                           
  7781                           	psect	text32
  7782  1F74                     __ptext32:	
  7783 ;; *************** function _LCD_Write_String *****************
  7784 ;; Defined at:
  7785 ;;		line 76 in file "LCD.c"
  7786 ;; Parameters:    Size  Location     Type
  7787 ;;  a               2    5[COMMON] PTR unsigned char 
  7788 ;;		 -> STR_3(16), pantalla(20), 
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;  i               2    0[BANK0 ] int 
  7791 ;; Return value:  Size  Location     Type
  7792 ;;                  1    wreg      void 
  7793 ;; Registers used:
  7794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7795 ;; Tracked objects:
  7796 ;;		On entry : 0/0
  7797 ;;		On exit  : 0/0
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7800 ;;      Params:         2       0       0       0       0
  7801 ;;      Locals:         0       2       0       0       0
  7802 ;;      Temps:          3       0       0       0       0
  7803 ;;      Totals:         5       2       0       0       0
  7804 ;;Total ram usage:        7 bytes
  7805 ;; Hardware stack levels used:    1
  7806 ;; Hardware stack levels required when called:    3
  7807 ;; This function calls:
  7808 ;;		_LCD_Write_Char
  7809 ;; This function is called by:
  7810 ;;		_main
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           
  7815                           ;psect for function _LCD_Write_String
  7816  1F74                     _LCD_Write_String:
  7817  1F74                     l4013:	
  7818                           ;incstack = 0
  7819                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7820                           
  7821                           
  7822                           ;LCD.c: 77:  int i;;LCD.c: 78:  for(i=0;a[i]!='\0';i++)
  7823  1F74  1283               	bcf	3,5	;RP0=0, select bank0
  7824  1F75  1303               	bcf	3,6	;RP1=0, select bank0
  7825  1F76  01A0               	clrf	LCD_Write_String@i
  7826  1F77  01A1               	clrf	LCD_Write_String@i+1
  7827  1F78  2F9D               	goto	l4019
  7828  1F79                     l4015:
  7829                           
  7830                           ;LCD.c: 79:     LCD_Write_Char(a[i]);
  7831  1F79  0820               	movf	LCD_Write_String@i,w
  7832  1F7A  0775               	addwf	LCD_Write_String@a,w
  7833  1F7B  00F8               	movwf	??_LCD_Write_String+1
  7834  1F7C  0876               	movf	LCD_Write_String@a+1,w
  7835  1F7D  00F7               	movwf	??_LCD_Write_String
  7836  1F7E  1803               	skipnc
  7837  1F7F  0AF7               	incf	??_LCD_Write_String,f
  7838  1F80  1FA0               	btfss	LCD_Write_String@i,7
  7839  1F81  2F83               	goto	u5840
  7840  1F82  03F7               	decf	??_LCD_Write_String,f
  7841  1F83                     u5840:
  7842  1F83  0877               	movf	??_LCD_Write_String,w
  7843  1F84  00F9               	movwf	??_LCD_Write_String+2
  7844  1F85  0879               	movf	??_LCD_Write_String+2,w
  7845  1F86  1283               	bcf	3,5	;RP0=0, select bank0
  7846  1F87  1303               	bcf	3,6	;RP1=0, select bank0
  7847  1F88  00FF               	movwf	btemp+1
  7848  1F89  0878               	movf	??_LCD_Write_String+1,w
  7849  1F8A  0084               	movwf	4
  7850  1F8B  160A  118A  2000  160A  158A  	fcall	stringtab
  7851  1F90  160A  118A  20C4  160A  158A  	fcall	_LCD_Write_Char
  7852  1F95                     l4017:
  7853  1F95  3001               	movlw	1
  7854  1F96  1283               	bcf	3,5	;RP0=0, select bank0
  7855  1F97  1303               	bcf	3,6	;RP1=0, select bank0
  7856  1F98  07A0               	addwf	LCD_Write_String@i,f
  7857  1F99  1803               	skipnc
  7858  1F9A  0AA1               	incf	LCD_Write_String@i+1,f
  7859  1F9B  3000               	movlw	0
  7860  1F9C  07A1               	addwf	LCD_Write_String@i+1,f
  7861  1F9D                     l4019:
  7862  1F9D  0820               	movf	LCD_Write_String@i,w
  7863  1F9E  0775               	addwf	LCD_Write_String@a,w
  7864  1F9F  00F8               	movwf	??_LCD_Write_String+1
  7865  1FA0  0876               	movf	LCD_Write_String@a+1,w
  7866  1FA1  00F7               	movwf	??_LCD_Write_String
  7867  1FA2  1803               	skipnc
  7868  1FA3  0AF7               	incf	??_LCD_Write_String,f
  7869  1FA4  1FA0               	btfss	LCD_Write_String@i,7
  7870  1FA5  2FA7               	goto	u5850
  7871  1FA6  03F7               	decf	??_LCD_Write_String,f
  7872  1FA7                     u5850:
  7873  1FA7  0877               	movf	??_LCD_Write_String,w
  7874  1FA8  00F9               	movwf	??_LCD_Write_String+2
  7875  1FA9  0879               	movf	??_LCD_Write_String+2,w
  7876  1FAA  1283               	bcf	3,5	;RP0=0, select bank0
  7877  1FAB  1303               	bcf	3,6	;RP1=0, select bank0
  7878  1FAC  00FF               	movwf	btemp+1
  7879  1FAD  0878               	movf	??_LCD_Write_String+1,w
  7880  1FAE  0084               	movwf	4
  7881  1FAF  160A  118A  2000  160A  158A  	fcall	stringtab
  7882  1FB4  3A00               	xorlw	0
  7883  1FB5  1D03               	skipz
  7884  1FB6  2FB8               	goto	u5861
  7885  1FB7  2FB9               	goto	u5860
  7886  1FB8                     u5861:
  7887  1FB8  2F79               	goto	l4015
  7888  1FB9                     u5860:
  7889  1FB9                     l142:
  7890  1FB9  0008               	return
  7891  1FBA                     __end_of_LCD_Write_String:
  7892                           
  7893                           	psect	text33
  7894  10C4                     __ptext33:	
  7895 ;; *************** function _LCD_Write_Char *****************
  7896 ;; Defined at:
  7897 ;;		line 9 in file "LCD.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;  a               1    wreg     unsigned char 
  7900 ;; Auto vars:     Size  Location     Type
  7901 ;;  a               1    4[COMMON] unsigned char 
  7902 ;; Return value:  Size  Location     Type
  7903 ;;                  1    wreg      void 
  7904 ;; Registers used:
  7905 ;;		wreg, status,2, status,0, pclath, cstack
  7906 ;; Tracked objects:
  7907 ;;		On entry : 0/0
  7908 ;;		On exit  : 0/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7911 ;;      Params:         0       0       0       0       0
  7912 ;;      Locals:         1       0       0       0       0
  7913 ;;      Temps:          1       0       0       0       0
  7914 ;;      Totals:         2       0       0       0       0
  7915 ;;Total ram usage:        2 bytes
  7916 ;; Hardware stack levels used:    1
  7917 ;; Hardware stack levels required when called:    2
  7918 ;; This function calls:
  7919 ;;		_LCD_Port
  7920 ;; This function is called by:
  7921 ;;		_LCD_Write_String
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925                           
  7926                           ;psect for function _LCD_Write_Char
  7927  10C4                     _LCD_Write_Char:
  7928                           
  7929                           ;incstack = 0
  7930                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  7931                           ;LCD_Write_Char@a stored from wreg
  7932  10C4  00F4               	movwf	LCD_Write_Char@a
  7933  10C5                     l3491:
  7934                           
  7935                           ;LCD.c: 10:     RE0 = 1;
  7936  10C5  1283               	bcf	3,5	;RP0=0, select bank0
  7937  10C6  1303               	bcf	3,6	;RP1=0, select bank0
  7938  10C7  1409               	bsf	9,0	;volatile
  7939  10C8                     l3493:
  7940                           
  7941                           ;LCD.c: 11:     LCD_Port(a);
  7942  10C8  0874               	movf	LCD_Write_Char@a,w
  7943  10C9  160A  158A  2567  160A  118A  	fcall	_LCD_Port
  7944  10CE                     l3495:
  7945                           
  7946                           ;LCD.c: 12:     RE1 = 1;
  7947  10CE  1283               	bcf	3,5	;RP0=0, select bank0
  7948  10CF  1303               	bcf	3,6	;RP1=0, select bank0
  7949  10D0  1489               	bsf	9,1	;volatile
  7950  10D1                     l3497:
  7951                           
  7952                           ;LCD.c: 13:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  7953  10D1  300D               	movlw	13
  7954  10D2  00F3               	movwf	??_LCD_Write_Char
  7955  10D3                     u5927:
  7956  10D3  0BF3               	decfsz	??_LCD_Write_Char,f
  7957  10D4  28D3               	goto	u5927
  7958  10D5                     l3499:
  7959                           
  7960                           ;LCD.c: 14:     RE1 = 0;
  7961  10D5  1283               	bcf	3,5	;RP0=0, select bank0
  7962  10D6  1303               	bcf	3,6	;RP1=0, select bank0
  7963  10D7  1089               	bcf	9,1	;volatile
  7964  10D8                     l3501:
  7965                           
  7966                           ;LCD.c: 15:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  7967  10D8  3003               	movlw	3
  7968  10D9  00F3               	movwf	??_LCD_Write_Char
  7969  10DA                     u5937:
  7970  10DA  0BF3               	decfsz	??_LCD_Write_Char,f
  7971  10DB  28DA               	goto	u5937
  7972  10DC                     l118:
  7973  10DC  0008               	return
  7974  10DD                     __end_of_LCD_Write_Char:
  7975                           
  7976                           	psect	text34
  7977  1DE1                     __ptext34:	
  7978 ;; *************** function _LCD_Set_Cursor *****************
  7979 ;; Defined at:
  7980 ;;		line 62 in file "LCD.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;  x               1    wreg     unsigned char 
  7983 ;;  y               1    6[COMMON] unsigned char 
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;  x               1    8[COMMON] unsigned char 
  7986 ;;  a               1    9[COMMON] unsigned char 
  7987 ;; Return value:  Size  Location     Type
  7988 ;;                  1    wreg      void 
  7989 ;; Registers used:
  7990 ;;		wreg, status,2, status,0, pclath, cstack
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7996 ;;      Params:         1       0       0       0       0
  7997 ;;      Locals:         2       0       0       0       0
  7998 ;;      Temps:          1       0       0       0       0
  7999 ;;      Totals:         4       0       0       0       0
  8000 ;;Total ram usage:        4 bytes
  8001 ;; Hardware stack levels used:    1
  8002 ;; Hardware stack levels required when called:    3
  8003 ;; This function calls:
  8004 ;;		_LCD_Command
  8005 ;; This function is called by:
  8006 ;;		_main
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           
  8011                           ;psect for function _LCD_Set_Cursor
  8012  1DE1                     _LCD_Set_Cursor:
  8013                           
  8014                           ;incstack = 0
  8015                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  8016                           ;LCD_Set_Cursor@x stored from wreg
  8017  1DE1  00F8               	movwf	LCD_Set_Cursor@x
  8018  1DE2                     l4001:
  8019                           
  8020                           ;LCD.c: 63:  char a;;LCD.c: 64:  if(x == 1)
  8021  1DE2  0378               	decf	LCD_Set_Cursor@x,w
  8022  1DE3  1D03               	btfss	3,2
  8023  1DE4  2DE6               	goto	u5821
  8024  1DE5  2DE7               	goto	u5820
  8025  1DE6                     u5821:
  8026  1DE6  2DF3               	goto	l4007
  8027  1DE7                     u5820:
  8028  1DE7                     l4003:
  8029                           
  8030                           ;LCD.c: 65:  {;LCD.c: 66:         a = 0x80 + y;
  8031  1DE7  0876               	movf	LCD_Set_Cursor@y,w
  8032  1DE8  3E80               	addlw	128
  8033  1DE9  00F7               	movwf	??_LCD_Set_Cursor
  8034  1DEA  0877               	movf	??_LCD_Set_Cursor,w
  8035  1DEB  00F9               	movwf	LCD_Set_Cursor@a
  8036  1DEC                     l4005:
  8037                           
  8038                           ;LCD.c: 67:   LCD_Command(a);
  8039  1DEC  0879               	movf	LCD_Set_Cursor@a,w
  8040  1DED  160A  158A  25BE  160A  158A  	fcall	_LCD_Command
  8041                           
  8042                           ;LCD.c: 68:  }
  8043  1DF2  2E04               	goto	l136
  8044  1DF3                     l4007:
  8045  1DF3  3002               	movlw	2
  8046  1DF4  0678               	xorwf	LCD_Set_Cursor@x,w
  8047  1DF5  1D03               	btfss	3,2
  8048  1DF6  2DF8               	goto	u5831
  8049  1DF7  2DF9               	goto	u5830
  8050  1DF8                     u5831:
  8051  1DF8  2E04               	goto	l136
  8052  1DF9                     u5830:
  8053  1DF9                     l4009:
  8054                           
  8055                           ;LCD.c: 70:  {;LCD.c: 71:   a = 0xC0 + y;
  8056  1DF9  0876               	movf	LCD_Set_Cursor@y,w
  8057  1DFA  3EC0               	addlw	192
  8058  1DFB  00F7               	movwf	??_LCD_Set_Cursor
  8059  1DFC  0877               	movf	??_LCD_Set_Cursor,w
  8060  1DFD  00F9               	movwf	LCD_Set_Cursor@a
  8061  1DFE                     l4011:
  8062                           
  8063                           ;LCD.c: 72:   LCD_Command(a);
  8064  1DFE  0879               	movf	LCD_Set_Cursor@a,w
  8065  1DFF  160A  158A  25BE  160A  158A  	fcall	_LCD_Command
  8066  1E04                     l136:
  8067  1E04  0008               	return
  8068  1E05                     __end_of_LCD_Set_Cursor:
  8069                           
  8070                           	psect	text35
  8071  1125                     __ptext35:	
  8072 ;; *************** function _LCD_Init *****************
  8073 ;; Defined at:
  8074 ;;		line 45 in file "LCD.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;		None
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;		None
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      void 
  8081 ;; Registers used:
  8082 ;;		wreg, status,2, status,0, pclath, cstack
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8088 ;;      Params:         0       0       0       0       0
  8089 ;;      Locals:         0       0       0       0       0
  8090 ;;      Temps:          2       0       0       0       0
  8091 ;;      Totals:         2       0       0       0       0
  8092 ;;Total ram usage:        2 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; Hardware stack levels required when called:    3
  8095 ;; This function calls:
  8096 ;;		_LCD_Command
  8097 ;;		_LCD_Port
  8098 ;; This function is called by:
  8099 ;;		_main
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           
  8104                           ;psect for function _LCD_Init
  8105  1125                     _LCD_Init:
  8106  1125                     l3679:	
  8107                           ;incstack = 0
  8108                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  8109                           
  8110                           
  8111                           ;LCD.c: 46:     RE0=0;
  8112  1125  1283               	bcf	3,5	;RP0=0, select bank0
  8113  1126  1303               	bcf	3,6	;RP1=0, select bank0
  8114  1127  1009               	bcf	9,0	;volatile
  8115                           
  8116                           ;LCD.c: 47:     RE1=0;
  8117  1128  1089               	bcf	9,1	;volatile
  8118  1129                     l3681:
  8119                           
  8120                           ;LCD.c: 48:     LCD_Port(0x00);
  8121  1129  3000               	movlw	0
  8122  112A  160A  158A  2567  160A  118A  	fcall	_LCD_Port
  8123  112F                     l3683:
  8124                           
  8125                           ;LCD.c: 49:     _delay((unsigned long)((20)*(4000000/4000.0)));
  8126  112F  301A               	movlw	26
  8127  1130  00F7               	movwf	??_LCD_Init+1
  8128  1131  30F8               	movlw	248
  8129  1132  00F6               	movwf	??_LCD_Init
  8130  1133                     u5947:
  8131  1133  0BF6               	decfsz	??_LCD_Init,f
  8132  1134  2933               	goto	u5947
  8133  1135  0BF7               	decfsz	??_LCD_Init+1,f
  8134  1136  2933               	goto	u5947
  8135  1137  0000               	nop
  8136  1138                     l3685:
  8137                           
  8138                           ;LCD.c: 50:     LCD_Command(0x30);
  8139  1138  3030               	movlw	48
  8140  1139  160A  158A  25BE  160A  118A  	fcall	_LCD_Command
  8141                           
  8142                           ;LCD.c: 51:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8143  113E  3007               	movlw	7
  8144  113F  00F7               	movwf	??_LCD_Init+1
  8145  1140  307D               	movlw	125
  8146  1141  00F6               	movwf	??_LCD_Init
  8147  1142                     u5957:
  8148  1142  0BF6               	decfsz	??_LCD_Init,f
  8149  1143  2942               	goto	u5957
  8150  1144  0BF7               	decfsz	??_LCD_Init+1,f
  8151  1145  2942               	goto	u5957
  8152  1146                     l3687:
  8153                           
  8154                           ;LCD.c: 52:     LCD_Command(0x30);
  8155  1146  3030               	movlw	48
  8156  1147  160A  158A  25BE  160A  118A  	fcall	_LCD_Command
  8157  114C                     l3689:
  8158                           
  8159                           ;LCD.c: 53:     _delay((unsigned long)((11)*(4000000/4000.0)));
  8160  114C  300F               	movlw	15
  8161  114D  00F7               	movwf	??_LCD_Init+1
  8162  114E  3047               	movlw	71
  8163  114F  00F6               	movwf	??_LCD_Init
  8164  1150                     u5967:
  8165  1150  0BF6               	decfsz	??_LCD_Init,f
  8166  1151  2950               	goto	u5967
  8167  1152  0BF7               	decfsz	??_LCD_Init+1,f
  8168  1153  2950               	goto	u5967
  8169  1154  2955               	nop2
  8170                           
  8171                           ;LCD.c: 54:     LCD_Command(0x30);
  8172  1155  3030               	movlw	48
  8173  1156  160A  158A  25BE  160A  118A  	fcall	_LCD_Command
  8174                           
  8175                           ;LCD.c: 55:     LCD_Command(0x38);
  8176  115B  3038               	movlw	56
  8177  115C  160A  158A  25BE  160A  118A  	fcall	_LCD_Command
  8178                           
  8179                           ;LCD.c: 56:     LCD_Command(0x0C);
  8180  1161  300C               	movlw	12
  8181  1162  160A  158A  25BE  160A  118A  	fcall	_LCD_Command
  8182                           
  8183                           ;LCD.c: 57:     LCD_Command(0x01);
  8184  1167  3001               	movlw	1
  8185  1168  160A  158A  25BE  160A  118A  	fcall	_LCD_Command
  8186                           
  8187                           ;LCD.c: 58:     LCD_Command(0x06);
  8188  116D  3006               	movlw	6
  8189  116E  160A  158A  25BE  160A  118A  	fcall	_LCD_Command
  8190  1173                     l130:
  8191  1173  0008               	return
  8192  1174                     __end_of_LCD_Init:
  8193                           
  8194                           	psect	text36
  8195  1DBE                     __ptext36:	
  8196 ;; *************** function _LCD_Command *****************
  8197 ;; Defined at:
  8198 ;;		line 31 in file "LCD.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;  a               1    wreg     unsigned char 
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;  a               1    5[COMMON] unsigned char 
  8203 ;; Return value:  Size  Location     Type
  8204 ;;                  1    wreg      void 
  8205 ;; Registers used:
  8206 ;;		wreg, status,2, status,0, pclath, cstack
  8207 ;; Tracked objects:
  8208 ;;		On entry : 0/0
  8209 ;;		On exit  : 0/0
  8210 ;;		Unchanged: 0/0
  8211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8212 ;;      Params:         0       0       0       0       0
  8213 ;;      Locals:         1       0       0       0       0
  8214 ;;      Temps:          2       0       0       0       0
  8215 ;;      Totals:         3       0       0       0       0
  8216 ;;Total ram usage:        3 bytes
  8217 ;; Hardware stack levels used:    1
  8218 ;; Hardware stack levels required when called:    2
  8219 ;; This function calls:
  8220 ;;		_LCD_Port
  8221 ;; This function is called by:
  8222 ;;		_LCD_clear
  8223 ;;		_LCD_Init
  8224 ;;		_LCD_Set_Cursor
  8225 ;; This function uses a non-reentrant model
  8226 ;;
  8227                           
  8228                           
  8229                           ;psect for function _LCD_Command
  8230  1DBE                     _LCD_Command:
  8231                           
  8232                           ;incstack = 0
  8233                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  8234                           ;LCD_Command@a stored from wreg
  8235  1DBE  00F5               	movwf	LCD_Command@a
  8236  1DBF                     l3503:
  8237                           
  8238                           ;LCD.c: 32:     RE0=0;
  8239  1DBF  1283               	bcf	3,5	;RP0=0, select bank0
  8240  1DC0  1303               	bcf	3,6	;RP1=0, select bank0
  8241  1DC1  1009               	bcf	9,0	;volatile
  8242  1DC2                     l3505:
  8243                           
  8244                           ;LCD.c: 33:     LCD_Port(a);
  8245  1DC2  0875               	movf	LCD_Command@a,w
  8246  1DC3  160A  158A  2567  160A  158A  	fcall	_LCD_Port
  8247  1DC8                     l3507:
  8248                           
  8249                           ;LCD.c: 34:     RE1=1;
  8250  1DC8  1283               	bcf	3,5	;RP0=0, select bank0
  8251  1DC9  1303               	bcf	3,6	;RP1=0, select bank0
  8252  1DCA  1489               	bsf	9,1	;volatile
  8253  1DCB                     l3509:
  8254                           
  8255                           ;LCD.c: 35:     _delay((unsigned long)((4)*(4000000/4000.0)));
  8256  1DCB  3006               	movlw	6
  8257  1DCC  00F4               	movwf	??_LCD_Command+1
  8258  1DCD  3030               	movlw	48
  8259  1DCE  00F3               	movwf	??_LCD_Command
  8260  1DCF                     u5977:
  8261  1DCF  0BF3               	decfsz	??_LCD_Command,f
  8262  1DD0  2DCF               	goto	u5977
  8263  1DD1  0BF4               	decfsz	??_LCD_Command+1,f
  8264  1DD2  2DCF               	goto	u5977
  8265  1DD3  0000               	nop
  8266  1DD4                     l3511:
  8267                           
  8268                           ;LCD.c: 36:     RE1=0;
  8269  1DD4  1283               	bcf	3,5	;RP0=0, select bank0
  8270  1DD5  1303               	bcf	3,6	;RP1=0, select bank0
  8271  1DD6  1089               	bcf	9,1	;volatile
  8272  1DD7                     l3513:
  8273                           
  8274                           ;LCD.c: 37:     _delay((unsigned long)((2)*(4000000/4000.0)));
  8275  1DD7  3003               	movlw	3
  8276  1DD8  00F4               	movwf	??_LCD_Command+1
  8277  1DD9  3097               	movlw	151
  8278  1DDA  00F3               	movwf	??_LCD_Command
  8279  1DDB                     u5987:
  8280  1DDB  0BF3               	decfsz	??_LCD_Command,f
  8281  1DDC  2DDB               	goto	u5987
  8282  1DDD  0BF4               	decfsz	??_LCD_Command+1,f
  8283  1DDE  2DDB               	goto	u5987
  8284  1DDF  2DE0               	nop2
  8285  1DE0                     l124:
  8286  1DE0  0008               	return
  8287  1DE1                     __end_of_LCD_Command:
  8288                           
  8289                           	psect	text37
  8290  1D67                     __ptext37:	
  8291 ;; *************** function _LCD_Port *****************
  8292 ;; Defined at:
  8293 ;;		line 18 in file "LCD.c"
  8294 ;; Parameters:    Size  Location     Type
  8295 ;;  a               1    wreg     unsigned char 
  8296 ;; Auto vars:     Size  Location     Type
  8297 ;;  a               1    2[COMMON] unsigned char 
  8298 ;; Return value:  Size  Location     Type
  8299 ;;                  1    wreg      void 
  8300 ;; Registers used:
  8301 ;;		wreg
  8302 ;; Tracked objects:
  8303 ;;		On entry : 0/0
  8304 ;;		On exit  : 0/0
  8305 ;;		Unchanged: 0/0
  8306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8307 ;;      Params:         0       0       0       0       0
  8308 ;;      Locals:         1       0       0       0       0
  8309 ;;      Temps:          0       0       0       0       0
  8310 ;;      Totals:         1       0       0       0       0
  8311 ;;Total ram usage:        1 bytes
  8312 ;; Hardware stack levels used:    1
  8313 ;; Hardware stack levels required when called:    1
  8314 ;; This function calls:
  8315 ;;		Nothing
  8316 ;; This function is called by:
  8317 ;;		_LCD_Write_Char
  8318 ;;		_LCD_Command
  8319 ;;		_LCD_Init
  8320 ;; This function uses a non-reentrant model
  8321 ;;
  8322                           
  8323                           
  8324                           ;psect for function _LCD_Port
  8325  1D67                     _LCD_Port:
  8326                           
  8327                           ;incstack = 0
  8328                           ; Regs used in _LCD_Port: [wreg]
  8329                           ;LCD_Port@a stored from wreg
  8330  1D67  00F2               	movwf	LCD_Port@a
  8331  1D68                     l3329:
  8332                           
  8333                           ;LCD.c: 19:     PORTD = a;
  8334  1D68  0872               	movf	LCD_Port@a,w
  8335  1D69  1283               	bcf	3,5	;RP0=0, select bank0
  8336  1D6A  1303               	bcf	3,6	;RP1=0, select bank0
  8337  1D6B  0088               	movwf	8	;volatile
  8338  1D6C                     l121:
  8339  1D6C  0008               	return
  8340  1D6D                     __end_of_LCD_Port:
  8341                           
  8342                           	psect	text38
  8343  07F0                     __ptext38:	
  8344 ;; *************** function _Init_Transmit *****************
  8345 ;; Defined at:
  8346 ;;		line 14 in file "USART.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;		None
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;		None
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  1    wreg      void 
  8353 ;; Registers used:
  8354 ;;		None
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8360 ;;      Params:         0       0       0       0       0
  8361 ;;      Locals:         0       0       0       0       0
  8362 ;;      Temps:          0       0       0       0       0
  8363 ;;      Totals:         0       0       0       0       0
  8364 ;;Total ram usage:        0 bytes
  8365 ;; Hardware stack levels used:    1
  8366 ;; Hardware stack levels required when called:    1
  8367 ;; This function calls:
  8368 ;;		Nothing
  8369 ;; This function is called by:
  8370 ;;		_main
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           
  8375                           ;psect for function _Init_Transmit
  8376  07F0                     _Init_Transmit:
  8377  07F0                     l2863:	
  8378                           ;incstack = 0
  8379                           ; Regs used in _Init_Transmit: []
  8380                           
  8381                           
  8382                           ;USART.c: 15:     TXSTAbits.TXEN = 1;
  8383  07F0  1683               	bsf	3,5	;RP0=1, select bank1
  8384  07F1  1303               	bcf	3,6	;RP1=0, select bank1
  8385  07F2  1698               	bsf	24,5	;volatile
  8386                           
  8387                           ;USART.c: 18:     PIR1bits.TXIF = 0;
  8388  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  8389  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  8390  07F5  120C               	bcf	12,4	;volatile
  8391                           
  8392                           ;USART.c: 19:     PIE1bits.TXIE = 0;
  8393  07F6  1683               	bsf	3,5	;RP0=1, select bank1
  8394  07F7  1303               	bcf	3,6	;RP1=0, select bank1
  8395  07F8  120C               	bcf	12,4	;volatile
  8396                           
  8397                           ;USART.c: 20:     INTCONbits.GIE = 0;
  8398  07F9  138B               	bcf	11,7	;volatile
  8399                           
  8400                           ;USART.c: 21:     INTCONbits.PEIE = 0;
  8401  07FA  130B               	bcf	11,6	;volatile
  8402                           
  8403                           ;USART.c: 22:     TRISCbits.TRISC7 = 1;
  8404  07FB  1787               	bsf	7,7	;volatile
  8405                           
  8406                           ;USART.c: 23:     TRISCbits.TRISC6 = 0;
  8407  07FC  1307               	bcf	7,6	;volatile
  8408  07FD                     l205:
  8409  07FD  0008               	return
  8410  07FE                     __end_of_Init_Transmit:
  8411                           
  8412                           	psect	text39
  8413  1D74                     __ptext39:	
  8414 ;; *************** function _Init_Receive *****************
  8415 ;; Defined at:
  8416 ;;		line 28 in file "USART.c"
  8417 ;; Parameters:    Size  Location     Type
  8418 ;;		None
  8419 ;; Auto vars:     Size  Location     Type
  8420 ;;		None
  8421 ;; Return value:  Size  Location     Type
  8422 ;;                  1    wreg      void 
  8423 ;; Registers used:
  8424 ;;		None
  8425 ;; Tracked objects:
  8426 ;;		On entry : 0/0
  8427 ;;		On exit  : 0/0
  8428 ;;		Unchanged: 0/0
  8429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8430 ;;      Params:         0       0       0       0       0
  8431 ;;      Locals:         0       0       0       0       0
  8432 ;;      Temps:          0       0       0       0       0
  8433 ;;      Totals:         0       0       0       0       0
  8434 ;;Total ram usage:        0 bytes
  8435 ;; Hardware stack levels used:    1
  8436 ;; Hardware stack levels required when called:    1
  8437 ;; This function calls:
  8438 ;;		Nothing
  8439 ;; This function is called by:
  8440 ;;		_main
  8441 ;; This function uses a non-reentrant model
  8442 ;;
  8443                           
  8444                           
  8445                           ;psect for function _Init_Receive
  8446  1D74                     _Init_Receive:
  8447  1D74                     l2865:	
  8448                           ;incstack = 0
  8449                           ; Regs used in _Init_Receive: []
  8450                           
  8451                           
  8452                           ;USART.c: 29:     TXSTAbits.SYNC = 0;
  8453  1D74  1683               	bsf	3,5	;RP0=1, select bank1
  8454  1D75  1303               	bcf	3,6	;RP1=0, select bank1
  8455  1D76  1218               	bcf	24,4	;volatile
  8456                           
  8457                           ;USART.c: 30:     RCSTAbits.SPEN = 1;
  8458  1D77  1283               	bcf	3,5	;RP0=0, select bank0
  8459  1D78  1303               	bcf	3,6	;RP1=0, select bank0
  8460  1D79  1798               	bsf	24,7	;volatile
  8461                           
  8462                           ;USART.c: 35:     RCSTAbits.CREN = 1;
  8463  1D7A  1618               	bsf	24,4	;volatile
  8464  1D7B                     l208:
  8465  1D7B  0008               	return
  8466  1D7C                     __end_of_Init_Receive:
  8467                           
  8468                           	psect	text40
  8469  1D6D                     __ptext40:	
  8470 ;; *************** function _ISR *****************
  8471 ;; Defined at:
  8472 ;;		line 63 in file "lab3_main.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;		None
  8475 ;; Auto vars:     Size  Location     Type
  8476 ;;		None
  8477 ;; Return value:  Size  Location     Type
  8478 ;;                  1    wreg      void 
  8479 ;; Registers used:
  8480 ;;		None
  8481 ;; Tracked objects:
  8482 ;;		On entry : 0/0
  8483 ;;		On exit  : 0/0
  8484 ;;		Unchanged: 0/0
  8485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8486 ;;      Params:         0       0       0       0       0
  8487 ;;      Locals:         0       0       0       0       0
  8488 ;;      Temps:          2       0       0       0       0
  8489 ;;      Totals:         2       0       0       0       0
  8490 ;;Total ram usage:        2 bytes
  8491 ;; Hardware stack levels used:    1
  8492 ;; This function calls:
  8493 ;;		Nothing
  8494 ;; This function is called by:
  8495 ;;		Interrupt level 1
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           
  8499                           
  8500                           ;psect for function _ISR
  8501  1D6D                     _ISR:
  8502  1D6D                     i1l85:
  8503  1D6D  0871               	movf	??_ISR+1,w
  8504  1D6E  008A               	movwf	10
  8505  1D6F  0E70               	swapf	??_ISR,w
  8506  1D70  0083               	movwf	3
  8507  1D71  0EFE               	swapf	btemp,f
  8508  1D72  0E7E               	swapf	btemp,w
  8509  1D73  0009               	retfie
  8510  1D74                     __end_of_ISR:
  8511  007E                     btemp	set	126	;btemp
  8512  007E                     wtemp0	set	126
  8513                           
  8514                           	psect	intentry
  8515  0004                     __pintentry:	
  8516                           ;incstack = 0
  8517                           ; Regs used in _ISR: []
  8518                           
  8519  0004                     interrupt_function:
  8520  007E                     saved_w	set	btemp
  8521  0004  00FE               	movwf	btemp
  8522  0005  0E03               	swapf	3,w
  8523  0006  00F0               	movwf	??_ISR
  8524  0007  080A               	movf	10,w
  8525  0008  00F1               	movwf	??_ISR+1
  8526  0009  160A  158A  2D6D   	ljmp	_ISR
  8527                           
  8528                           	psect	config
  8529                           
  8530                           ;Config register CONFIG1 @ 0x2007
  8531                           ;	Oscillator Selection bits
  8532                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  8533                           ;	Watchdog Timer Enable bit
  8534                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8535                           ;	Power-up Timer Enable bit
  8536                           ;	PWRTE = OFF, PWRT disabled
  8537                           ;	RE3/MCLR pin function select bit
  8538                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8539                           ;	Code Protection bit
  8540                           ;	CP = OFF, Program memory code protection is disabled
  8541                           ;	Data Code Protection bit
  8542                           ;	CPD = OFF, Data memory code protection is disabled
  8543                           ;	Brown Out Reset Selection bits
  8544                           ;	BOREN = OFF, BOR disabled
  8545                           ;	Internal External Switchover bit
  8546                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8547                           ;	Fail-Safe Clock Monitor Enabled bit
  8548                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8549                           ;	Low Voltage Programming Enable bit
  8550                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8551                           ;	In-Circuit Debugger Mode bit
  8552                           ;	DEBUG = 0x1, unprogrammed default
  8553  2007                     	org	8199
  8554  2007  20D1               	dw	8401
  8555                           
  8556                           ;Config register CONFIG2 @ 0x2008
  8557                           ;	Brown-out Reset Selection bit
  8558                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8559                           ;	Flash Program Memory Self Write Enable bits
  8560                           ;	WRT = OFF, Write protection off
  8561  2008                     	org	8200
  8562  2008  3FFF               	dw	16383
  8563                           
  8564                           	psect	text1_split_1
  8565  0021                     u5420:
  8566  0021                     l3805:
  8567  0021  1683               	bsf	3,5	;RP0=1, select bank1
  8568  0022  1303               	bcf	3,6	;RP1=0, select bank1
  8569  0023  0834               	movf	(sprintf@fval+2)^(0+128),w
  8570  0024  0433               	iorwf	(sprintf@fval+1)^(0+128),w
  8571  0025  0432               	iorwf	sprintf@fval^(0+128),w
  8572  0026  1903               	skipnz
  8573  0027  2829               	goto	u5431
  8574  0028  282A               	goto	u5430
  8575  0029                     u5431:
  8576  0029  28BA               	goto	l3825
  8577  002A                     u5430:
  8578  002A                     l3807:
  8579  002A  0832               	movf	sprintf@fval^(0+128),w
  8580  002B  1283               	bcf	3,5	;RP0=0, select bank0
  8581  002C  1303               	bcf	3,6	;RP1=0, select bank0
  8582  002D  00C4               	movwf	___fttol@f1
  8583  002E  1683               	bsf	3,5	;RP0=1, select bank1
  8584  002F  1303               	bcf	3,6	;RP1=0, select bank1
  8585  0030  0833               	movf	(sprintf@fval+1)^(0+128),w
  8586  0031  1283               	bcf	3,5	;RP0=0, select bank0
  8587  0032  1303               	bcf	3,6	;RP1=0, select bank0
  8588  0033  00C5               	movwf	___fttol@f1+1
  8589  0034  1683               	bsf	3,5	;RP0=1, select bank1
  8590  0035  1303               	bcf	3,6	;RP1=0, select bank1
  8591  0036  0834               	movf	(sprintf@fval+2)^(0+128),w
  8592  0037  1283               	bcf	3,5	;RP0=0, select bank0
  8593  0038  1303               	bcf	3,6	;RP1=0, select bank0
  8594  0039  00C6               	movwf	___fttol@f1+2
  8595  003A  160A  118A  2370  120A  118A  	fcall	___fttol
  8596  003F  1283               	bcf	3,5	;RP0=0, select bank0
  8597  0040  1303               	bcf	3,6	;RP1=0, select bank0
  8598  0041  0847               	movf	?___fttol+3,w
  8599  0042  0446               	iorwf	?___fttol+2,w
  8600  0043  0445               	iorwf	?___fttol+1,w
  8601  0044  0444               	iorwf	?___fttol,w
  8602  0045  1D03               	skipz
  8603  0046  2848               	goto	u5441
  8604  0047  2849               	goto	u5440
  8605  0048                     u5441:
  8606  0048  28BA               	goto	l3825
  8607  0049                     u5440:
  8608  0049                     l3809:
  8609  0049  1683               	bsf	3,5	;RP0=1, select bank1
  8610  004A  1303               	bcf	3,6	;RP1=0, select bank1
  8611  004B  0831               	movf	(sprintf@eexp+1)^(0+128),w
  8612  004C  3A80               	xorlw	128
  8613  004D  00FF               	movwf	btemp+1
  8614  004E  3080               	movlw	128
  8615  004F  027F               	subwf	btemp+1,w
  8616  0050  1D03               	skipz
  8617  0051  2854               	goto	u5455
  8618  0052  3002               	movlw	2
  8619  0053  0230               	subwf	sprintf@eexp^(0+128),w
  8620  0054                     u5455:
  8621  0054  1C03               	skipc
  8622  0055  2857               	goto	u5451
  8623  0056  2858               	goto	u5450
  8624  0057                     u5451:
  8625  0057  28BA               	goto	l3825
  8626  0058                     u5450:
  8627  0058                     l3811:
  8628                           
  8629                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmpval.integ < 4.
      +                          294967296){
  8630  0058  1683               	bsf	3,5	;RP0=1, select bank1
  8631  0059  1303               	bcf	3,6	;RP1=0, select bank1
  8632  005A  0828               	movf	sprintf@tmpval^(0+128),w
  8633  005B  00F2               	movwf	___ftge@ff1
  8634  005C  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  8635  005D  00F3               	movwf	___ftge@ff1+1
  8636  005E  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  8637  005F  00F4               	movwf	___ftge@ff1+2
  8638  0060  3070               	movlw	112
  8639  0061  00F5               	movwf	___ftge@ff2
  8640  0062  3089               	movlw	137
  8641  0063  00F6               	movwf	___ftge@ff2+1
  8642  0064  3040               	movlw	64
  8643  0065  00F7               	movwf	___ftge@ff2+2
  8644  0066  160A  158A  2702  120A  118A  	fcall	___ftge
  8645  006B  1803               	btfsc	3,0
  8646  006C  286E               	goto	u5461
  8647  006D  286F               	goto	u5460
  8648  006E                     u5461:
  8649  006E  2878               	goto	l3815
  8650  006F                     u5460:
  8651  006F                     l3813:
  8652                           
  8653                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp -= (sizeof dpo
      +                          wers/sizeof dpowers[0])-1;
  8654  006F  30F7               	movlw	247
  8655  0070  1683               	bsf	3,5	;RP0=1, select bank1
  8656  0071  1303               	bcf	3,6	;RP1=0, select bank1
  8657  0072  07B0               	addwf	sprintf@eexp^(0+128),f
  8658  0073  1803               	skipnc
  8659  0074  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  8660  0075  30FF               	movlw	255
  8661  0076  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  8662                           
  8663                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  8664  0077  2880               	goto	l3817
  8665  0078                     l3815:
  8666                           
  8667                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp -= (sizeof dpo
      +                          wers/sizeof dpowers[0])-2;
  8668  0078  30F8               	movlw	248
  8669  0079  1683               	bsf	3,5	;RP0=1, select bank1
  8670  007A  1303               	bcf	3,6	;RP1=0, select bank1
  8671  007B  07B0               	addwf	sprintf@eexp^(0+128),f
  8672  007C  1803               	skipnc
  8673  007D  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  8674  007E  30FF               	movlw	255
  8675  007F  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  8676  0080                     l3817:
  8677                           
  8678                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1151:      tmpval.integ = scale
      +                          (eexp);
  8679  0080  0830               	movf	sprintf@eexp^(0+128),w
  8680  0081  120A  158A  225D  120A  118A  	fcall	_scale
  8681  0086  1283               	bcf	3,5	;RP0=0, select bank0
  8682  0087  1303               	bcf	3,6	;RP1=0, select bank0
  8683  0088  083B               	movf	?_scale,w
  8684  0089  1683               	bsf	3,5	;RP0=1, select bank1
  8685  008A  1303               	bcf	3,6	;RP1=0, select bank1
  8686  008B  00A8               	movwf	sprintf@tmpval^(0+128)
  8687  008C  1283               	bcf	3,5	;RP0=0, select bank0
  8688  008D  1303               	bcf	3,6	;RP1=0, select bank0
  8689  008E  083C               	movf	?_scale+1,w
  8690  008F  1683               	bsf	3,5	;RP0=1, select bank1
  8691  0090  1303               	bcf	3,6	;RP1=0, select bank1
  8692  0091  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  8693  0092  1283               	bcf	3,5	;RP0=0, select bank0
  8694  0093  1303               	bcf	3,6	;RP1=0, select bank0
  8695  0094  083D               	movf	?_scale+2,w
  8696  0095  1683               	bsf	3,5	;RP0=1, select bank1
  8697  0096  1303               	bcf	3,6	;RP1=0, select bank1
  8698  0097  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  8699  0098                     l3821:	
  8700                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = ((sizeof(doubl
      +                          e)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  8701                           
  8702  0098  0832               	movf	sprintf@fval^(0+128),w
  8703  0099  00F2               	movwf	__tdiv_to_l_@f1
  8704  009A  0833               	movf	(sprintf@fval+1)^(0+128),w
  8705  009B  00F3               	movwf	__tdiv_to_l_@f1+1
  8706  009C  0834               	movf	(sprintf@fval+2)^(0+128),w
  8707  009D  00F4               	movwf	__tdiv_to_l_@f1+2
  8708  009E  0828               	movf	sprintf@tmpval^(0+128),w
  8709  009F  00F5               	movwf	__tdiv_to_l_@f2
  8710  00A0  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  8711  00A1  00F6               	movwf	__tdiv_to_l_@f2+1
  8712  00A2  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  8713  00A3  00F7               	movwf	__tdiv_to_l_@f2+2
  8714  00A4  160A  118A  23FC  120A  118A  	fcall	__tdiv_to_l_
  8715  00A9  0875               	movf	?__tdiv_to_l_+3,w
  8716  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  8717  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  8718  00AC  00AF               	movwf	(sprintf@val+3)^(0+128)
  8719  00AD  0874               	movf	?__tdiv_to_l_+2,w
  8720  00AE  00AE               	movwf	(sprintf@val+2)^(0+128)
  8721  00AF  0873               	movf	?__tdiv_to_l_+1,w
  8722  00B0  00AD               	movwf	(sprintf@val+1)^(0+128)
  8723  00B1  0872               	movf	?__tdiv_to_l_,w
  8724  00B2  00AC               	movwf	sprintf@val^(0+128)
  8725  00B3                     l3823:
  8726                           
  8727                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval = 0.0;
  8728  00B3  3000               	movlw	0
  8729  00B4  00B2               	movwf	sprintf@fval^(0+128)
  8730  00B5  3000               	movlw	0
  8731  00B6  00B3               	movwf	(sprintf@fval+1)^(0+128)
  8732  00B7  3000               	movlw	0
  8733  00B8  00B4               	movwf	(sprintf@fval+2)^(0+128)
  8734                           
  8735                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else {
  8736  00B9  2937               	goto	l3829
  8737  00BA                     l3825:
  8738                           
  8739                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = (unsigned long
      +                          )fval;
  8740  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  8741  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  8742  00BC  0832               	movf	sprintf@fval^(0+128),w
  8743  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  8744  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  8745  00BF  00C4               	movwf	___fttol@f1
  8746  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  8747  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  8748  00C2  0833               	movf	(sprintf@fval+1)^(0+128),w
  8749  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  8750  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  8751  00C5  00C5               	movwf	___fttol@f1+1
  8752  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  8753  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  8754  00C8  0834               	movf	(sprintf@fval+2)^(0+128),w
  8755  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  8756  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  8757  00CB  00C6               	movwf	___fttol@f1+2
  8758  00CC  160A  118A  2370  120A  118A  	fcall	___fttol
  8759  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  8760  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  8761  00D3  0847               	movf	?___fttol+3,w
  8762  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  8763  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  8764  00D6  00AF               	movwf	(sprintf@val+3)^(0+128)
  8765  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  8766  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  8767  00D9  0846               	movf	?___fttol+2,w
  8768  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  8769  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  8770  00DC  00AE               	movwf	(sprintf@val+2)^(0+128)
  8771  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  8772  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  8773  00DF  0845               	movf	?___fttol+1,w
  8774  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  8775  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  8776  00E2  00AD               	movwf	(sprintf@val+1)^(0+128)
  8777  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  8778  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  8779  00E5  0844               	movf	?___fttol,w
  8780  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  8781  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  8782  00E8  00AC               	movwf	sprintf@val^(0+128)
  8783                           
  8784                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -= (double)val;
  8785  00E9  082F               	movf	(sprintf@val+3)^(0+128),w
  8786  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  8787  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  8788  00EC  00A3               	movwf	___lltoft@c+3
  8789  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  8790  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  8791  00EF  082E               	movf	(sprintf@val+2)^(0+128),w
  8792  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  8793  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  8794  00F2  00A2               	movwf	___lltoft@c+2
  8795  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  8796  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  8797  00F5  082D               	movf	(sprintf@val+1)^(0+128),w
  8798  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  8799  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  8800  00F8  00A1               	movwf	___lltoft@c+1
  8801  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  8802  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  8803  00FB  082C               	movf	sprintf@val^(0+128),w
  8804  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  8805  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  8806  00FE  00A0               	movwf	___lltoft@c
  8807  00FF  160A  158A  26CF  120A  118A  	fcall	___lltoft
  8808  0104  1283               	bcf	3,5	;RP0=0, select bank0
  8809  0105  1303               	bcf	3,6	;RP1=0, select bank0
  8810  0106  0820               	movf	?___lltoft,w
  8811  0107  00D8               	movwf	___ftsub@f2
  8812  0108  0821               	movf	?___lltoft+1,w
  8813  0109  00D9               	movwf	___ftsub@f2+1
  8814  010A  0822               	movf	?___lltoft+2,w
  8815  010B  00DA               	movwf	___ftsub@f2+2
  8816  010C  1683               	bsf	3,5	;RP0=1, select bank1
  8817  010D  1303               	bcf	3,6	;RP1=0, select bank1
  8818  010E  0832               	movf	sprintf@fval^(0+128),w
  8819  010F  1283               	bcf	3,5	;RP0=0, select bank0
  8820  0110  1303               	bcf	3,6	;RP1=0, select bank0
  8821  0111  00DB               	movwf	___ftsub@f1
  8822  0112  1683               	bsf	3,5	;RP0=1, select bank1
  8823  0113  1303               	bcf	3,6	;RP1=0, select bank1
  8824  0114  0833               	movf	(sprintf@fval+1)^(0+128),w
  8825  0115  1283               	bcf	3,5	;RP0=0, select bank0
  8826  0116  1303               	bcf	3,6	;RP1=0, select bank0
  8827  0117  00DC               	movwf	___ftsub@f1+1
  8828  0118  1683               	bsf	3,5	;RP0=1, select bank1
  8829  0119  1303               	bcf	3,6	;RP1=0, select bank1
  8830  011A  0834               	movf	(sprintf@fval+2)^(0+128),w
  8831  011B  1283               	bcf	3,5	;RP0=0, select bank0
  8832  011C  1303               	bcf	3,6	;RP1=0, select bank0
  8833  011D  00DD               	movwf	___ftsub@f1+2
  8834  011E  160A  158A  2605  120A  118A  	fcall	___ftsub
  8835  0123  1283               	bcf	3,5	;RP0=0, select bank0
  8836  0124  1303               	bcf	3,6	;RP1=0, select bank0
  8837  0125  0858               	movf	?___ftsub,w
  8838  0126  1683               	bsf	3,5	;RP0=1, select bank1
  8839  0127  1303               	bcf	3,6	;RP1=0, select bank1
  8840  0128  00B2               	movwf	sprintf@fval^(0+128)
  8841  0129  1283               	bcf	3,5	;RP0=0, select bank0
  8842  012A  1303               	bcf	3,6	;RP1=0, select bank0
  8843  012B  0859               	movf	?___ftsub+1,w
  8844  012C  1683               	bsf	3,5	;RP0=1, select bank1
  8845  012D  1303               	bcf	3,6	;RP1=0, select bank1
  8846  012E  00B3               	movwf	(sprintf@fval+1)^(0+128)
  8847  012F  1283               	bcf	3,5	;RP0=0, select bank0
  8848  0130  1303               	bcf	3,6	;RP1=0, select bank0
  8849  0131  085A               	movf	?___ftsub+2,w
  8850  0132  1683               	bsf	3,5	;RP0=1, select bank1
  8851  0133  1303               	bcf	3,6	;RP1=0, select bank1
  8852  0134  00B4               	movwf	(sprintf@fval+2)^(0+128)
  8853  0135                     l3827:
  8854                           
  8855                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp = 0;
  8856  0135  01B0               	clrf	sprintf@eexp^(0+128)
  8857  0136  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  8858  0137                     l3829:
  8859                           
  8860                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c = 1 ; c != (siz
      +                          eof dpowers/sizeof dpowers[0]) ; c++)
  8861  0137  01B8               	clrf	sprintf@c^(0+128)
  8862  0138  0AB8               	incf	sprintf@c^(0+128),f
  8863  0139                     l3835:
  8864                           
  8865                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val < dpowers[c])
  8866  0139  0838               	movf	sprintf@c^(0+128),w
  8867  013A  1283               	bcf	3,5	;RP0=0, select bank0
  8868  013B  1303               	bcf	3,6	;RP1=0, select bank0
  8869  013C  00E7               	movwf	??_sprintf
  8870  013D  3001               	movlw	1
  8871  013E                     u5475:
  8872  013E  1003               	clrc
  8873  013F  0DE7               	rlf	??_sprintf,f
  8874  0140  3EFF               	addlw	-1
  8875  0141  1D03               	skipz
  8876  0142  293E               	goto	u5475
  8877  0143  1003               	clrc
  8878  0144  0D67               	rlf	??_sprintf,w
  8879  0145  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8880  0146  0084               	movwf	4
  8881  0147  160A  118A  200A  120A  118A  	fcall	stringdir
  8882  014C  00E8               	movwf	??_sprintf+1
  8883  014D  160A  118A  200A  120A  118A  	fcall	stringdir
  8884  0152  00E9               	movwf	??_sprintf+2
  8885  0153  160A  118A  200A  120A  118A  	fcall	stringdir
  8886  0158  00EA               	movwf	??_sprintf+3
  8887  0159  160A  118A  200A  120A  118A  	fcall	stringdir
  8888  015E  00EB               	movwf	??_sprintf+4
  8889  015F  086B               	movf	??_sprintf+4,w
  8890  0160  1683               	bsf	3,5	;RP0=1, select bank1
  8891  0161  1303               	bcf	3,6	;RP1=0, select bank1
  8892  0162  022F               	subwf	(sprintf@val+3)^(0+128),w
  8893  0163  1D03               	skipz
  8894  0164  297B               	goto	u5485
  8895  0165  1283               	bcf	3,5	;RP0=0, select bank0
  8896  0166  1303               	bcf	3,6	;RP1=0, select bank0
  8897  0167  086A               	movf	??_sprintf+3,w
  8898  0168  1683               	bsf	3,5	;RP0=1, select bank1
  8899  0169  1303               	bcf	3,6	;RP1=0, select bank1
  8900  016A  022E               	subwf	(sprintf@val+2)^(0+128),w
  8901  016B  1D03               	skipz
  8902  016C  297B               	goto	u5485
  8903  016D  1283               	bcf	3,5	;RP0=0, select bank0
  8904  016E  1303               	bcf	3,6	;RP1=0, select bank0
  8905  016F  0869               	movf	??_sprintf+2,w
  8906  0170  1683               	bsf	3,5	;RP0=1, select bank1
  8907  0171  1303               	bcf	3,6	;RP1=0, select bank1
  8908  0172  022D               	subwf	(sprintf@val+1)^(0+128),w
  8909  0173  1D03               	skipz
  8910  0174  297B               	goto	u5485
  8911  0175  1283               	bcf	3,5	;RP0=0, select bank0
  8912  0176  1303               	bcf	3,6	;RP1=0, select bank0
  8913  0177  0868               	movf	??_sprintf+1,w
  8914  0178  1683               	bsf	3,5	;RP0=1, select bank1
  8915  0179  1303               	bcf	3,6	;RP1=0, select bank1
  8916  017A  022C               	subwf	sprintf@val^(0+128),w
  8917  017B                     u5485:
  8918  017B  1803               	skipnc
  8919  017C  297E               	goto	u5481
  8920  017D  297F               	goto	u5480
  8921  017E                     u5481:
  8922  017E  2980               	goto	l3839
  8923  017F                     u5480:
  8924  017F  298E               	goto	l3841
  8925  0180                     l3839:
  8926  0180  3001               	movlw	1
  8927  0181  1283               	bcf	3,5	;RP0=0, select bank0
  8928  0182  1303               	bcf	3,6	;RP1=0, select bank0
  8929  0183  00E7               	movwf	??_sprintf
  8930  0184  0867               	movf	??_sprintf,w
  8931  0185  1683               	bsf	3,5	;RP0=1, select bank1
  8932  0186  1303               	bcf	3,6	;RP1=0, select bank1
  8933  0187  07B8               	addwf	sprintf@c^(0+128),f
  8934  0188  300A               	movlw	10
  8935  0189  0638               	xorwf	sprintf@c^(0+128),w
  8936  018A  1D03               	btfss	3,2
  8937  018B  298D               	goto	u5491
  8938  018C  298E               	goto	u5490
  8939  018D                     u5491:
  8940  018D  2939               	goto	l3835
  8941  018E                     u5490:
  8942  018E                     l3841:
  8943                           
  8944                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -= prec + c + e
      +                          exp;
  8945  018E  0838               	movf	sprintf@c^(0+128),w
  8946  018F  0736               	addwf	sprintf@prec^(0+128),w
  8947  0190  1283               	bcf	3,5	;RP0=0, select bank0
  8948  0191  1303               	bcf	3,6	;RP1=0, select bank0
  8949  0192  00E7               	movwf	??_sprintf
  8950  0193  1683               	bsf	3,5	;RP0=1, select bank1
  8951  0194  1303               	bcf	3,6	;RP1=0, select bank1
  8952  0195  0837               	movf	(sprintf@prec+1)^(0+128),w
  8953  0196  1803               	skipnc
  8954  0197  0A37               	incf	(sprintf@prec+1)^(0+128),w
  8955  0198  1283               	bcf	3,5	;RP0=0, select bank0
  8956  0199  1303               	bcf	3,6	;RP1=0, select bank0
  8957  019A  00E8               	movwf	??_sprintf+1
  8958  019B  1683               	bsf	3,5	;RP0=1, select bank1
  8959  019C  1303               	bcf	3,6	;RP1=0, select bank1
  8960  019D  0830               	movf	sprintf@eexp^(0+128),w
  8961  019E  1283               	bcf	3,5	;RP0=0, select bank0
  8962  019F  1303               	bcf	3,6	;RP1=0, select bank0
  8963  01A0  0767               	addwf	??_sprintf,w
  8964  01A1  00E9               	movwf	??_sprintf+2
  8965  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  8966  01A3  1303               	bcf	3,6	;RP1=0, select bank1
  8967  01A4  0831               	movf	(sprintf@eexp+1)^(0+128),w
  8968  01A5  1803               	skipnc
  8969  01A6  0A31               	incf	(sprintf@eexp+1)^(0+128),w
  8970  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  8971  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  8972  01A9  0768               	addwf	??_sprintf+1,w
  8973  01AA  00EA               	movwf	??_sprintf+3
  8974  01AB  0869               	movf	??_sprintf+2,w
  8975  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  8976  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  8977  01AE  02A6               	subwf	sprintf@width^(0+128),f
  8978  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  8979  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  8980  01B1  086A               	movf	??_sprintf+3,w
  8981  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  8982  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  8983  01B4  1C03               	skipc
  8984  01B5  03A7               	decf	(sprintf@width+1)^(0+128),f
  8985  01B6  02A7               	subwf	(sprintf@width+1)^(0+128),f
  8986                           
  8987                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  8988  01B7  0836               	movf	sprintf@prec^(0+128),w
  8989  01B8  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  8990  01B9  1903               	btfsc	3,2
  8991  01BA  29BC               	goto	u5501
  8992  01BB  29BD               	goto	u5500
  8993  01BC                     u5501:
  8994  01BC  29C3               	goto	l3845
  8995  01BD                     u5500:
  8996  01BD                     l3843:
  8997                           
  8998                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width--;
  8999  01BD  30FF               	movlw	255
  9000  01BE  07A6               	addwf	sprintf@width^(0+128),f
  9001  01BF  1803               	skipnc
  9002  01C0  0AA7               	incf	(sprintf@width+1)^(0+128),f
  9003  01C1  30FF               	movlw	255
  9004  01C2  07A7               	addwf	(sprintf@width+1)^(0+128),f
  9005  01C3                     l3845:
  9006                           
  9007                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag & 0x03)
  9008  01C3  3003               	movlw	3
  9009  01C4  0524               	andwf	sprintf@flag^(0+128),w
  9010  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  9011  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  9012  01C7  00E7               	movwf	??_sprintf
  9013  01C8  3000               	movlw	0
  9014  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  9015  01CA  1303               	bcf	3,6	;RP1=0, select bank1
  9016  01CB  0525               	andwf	(sprintf@flag+1)^(0+128),w
  9017  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  9018  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  9019  01CE  00E8               	movwf	??_sprintf+1
  9020  01CF  0867               	movf	??_sprintf,w
  9021  01D0  0468               	iorwf	??_sprintf+1,w
  9022  01D1  1903               	btfsc	3,2
  9023  01D2  29D4               	goto	u5511
  9024  01D3  29D5               	goto	u5510
  9025  01D4                     u5511:
  9026  01D4  29F2               	goto	l3855
  9027  01D5                     u5510:
  9028  01D5                     l3847:
  9029                           
  9030                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width--;
  9031  01D5  30FF               	movlw	255
  9032  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  9033  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  9034  01D8  07A6               	addwf	sprintf@width^(0+128),f
  9035  01D9  1803               	skipnc
  9036  01DA  0AA7               	incf	(sprintf@width+1)^(0+128),f
  9037  01DB  30FF               	movlw	255
  9038  01DC  07A7               	addwf	(sprintf@width+1)^(0+128),f
  9039  01DD  29F2               	goto	l3855
  9040  01DE                     l3849:
  9041                           
  9042                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp++ = (' ')));
  9043  01DE  3020               	movlw	32
  9044  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  9045  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  9046  01E1  00E7               	movwf	??_sprintf
  9047  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  9048  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  9049  01E4  0835               	movf	sprintf@sp^(0+128),w
  9050  01E5  0084               	movwf	4
  9051  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  9052  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  9053  01E8  0867               	movf	??_sprintf,w
  9054  01E9  1383               	bcf	3,7	;select IRP bank0
  9055  01EA  0080               	movwf	0
  9056  01EB                     l3851:
  9057  01EB  3001               	movlw	1
  9058  01EC  00E7               	movwf	??_sprintf
  9059  01ED  0867               	movf	??_sprintf,w
  9060  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  9061  01EF  1303               	bcf	3,6	;RP1=0, select bank1
  9062  01F0  07B5               	addwf	sprintf@sp^(0+128),f
  9063  01F1  29D5               	goto	l3847
  9064  01F2                     l3855:
  9065                           
  9066                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(width > 0) {
  9067  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  9068  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  9069  01F4  0827               	movf	(sprintf@width+1)^(0+128),w
  9070  01F5  3A80               	xorlw	128
  9071  01F6  00FF               	movwf	btemp+1
  9072  01F7  3080               	movlw	128
  9073  01F8  027F               	subwf	btemp+1,w
  9074  01F9  1D03               	skipz
  9075  01FA  29FD               	goto	u5525
  9076  01FB  3001               	movlw	1
  9077  01FC  0226               	subwf	sprintf@width^(0+128),w
  9078  01FD                     u5525:
  9079  01FD  1803               	skipnc
  9080  01FE  2A00               	goto	u5521
  9081  01FF  2A01               	goto	u5520
  9082  0200                     u5521:
  9083  0200  29DE               	goto	l3849
  9084  0201                     u5520:
  9085  0201                     l3857:
  9086                           
  9087                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x03)
  9088  0201  3003               	movlw	3
  9089  0202  1683               	bsf	3,5	;RP0=1, select bank1
  9090  0203  1303               	bcf	3,6	;RP1=0, select bank1
  9091  0204  0524               	andwf	sprintf@flag^(0+128),w
  9092  0205  1283               	bcf	3,5	;RP0=0, select bank0
  9093  0206  1303               	bcf	3,6	;RP1=0, select bank0
  9094  0207  00E7               	movwf	??_sprintf
  9095  0208  3000               	movlw	0
  9096  0209  1683               	bsf	3,5	;RP0=1, select bank1
  9097  020A  1303               	bcf	3,6	;RP1=0, select bank1
  9098  020B  0525               	andwf	(sprintf@flag+1)^(0+128),w
  9099  020C  1283               	bcf	3,5	;RP0=0, select bank0
  9100  020D  1303               	bcf	3,6	;RP1=0, select bank0
  9101  020E  00E8               	movwf	??_sprintf+1
  9102  020F  0867               	movf	??_sprintf,w
  9103  0210  0468               	iorwf	??_sprintf+1,w
  9104  0211  1903               	btfsc	3,2
  9105  0212  2A14               	goto	u5531
  9106  0213  2A15               	goto	u5530
  9107  0214                     u5531:
  9108  0214  2AB9               	goto	l390
  9109  0215                     u5530:
  9110  0215                     l3859:
  9111                           
  9112                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp++ = ('-')));
  9113  0215  302D               	movlw	45
  9114  0216  00E7               	movwf	??_sprintf
  9115  0217  1683               	bsf	3,5	;RP0=1, select bank1
  9116  0218  1303               	bcf	3,6	;RP1=0, select bank1
  9117  0219  0835               	movf	sprintf@sp^(0+128),w
  9118  021A  0084               	movwf	4
  9119  021B  1283               	bcf	3,5	;RP0=0, select bank0
  9120  021C  1303               	bcf	3,6	;RP1=0, select bank0
  9121  021D  0867               	movf	??_sprintf,w
  9122  021E  1383               	bcf	3,7	;select IRP bank0
  9123  021F  0080               	movwf	0
  9124  0220                     l3861:
  9125  0220  3001               	movlw	1
  9126  0221  00E7               	movwf	??_sprintf
  9127  0222  0867               	movf	??_sprintf,w
  9128  0223  1683               	bsf	3,5	;RP0=1, select bank1
  9129  0224  1303               	bcf	3,6	;RP1=0, select bank1
  9130  0225  07B5               	addwf	sprintf@sp^(0+128),f
  9131  0226  2AB9               	goto	l390
  9132  0227                     l3863:
  9133                           
  9134                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;D:\Microchip\xc8\v2
      +                          .31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = val/dpowers[c];
  9135  0227  0838               	movf	sprintf@c^(0+128),w
  9136  0228  1283               	bcf	3,5	;RP0=0, select bank0
  9137  0229  1303               	bcf	3,6	;RP1=0, select bank0
  9138  022A  00E7               	movwf	??_sprintf
  9139  022B  3001               	movlw	1
  9140  022C                     u5545:
  9141  022C  1003               	clrc
  9142  022D  0DE7               	rlf	??_sprintf,f
  9143  022E  3EFF               	addlw	-1
  9144  022F  1D03               	skipz
  9145  0230  2A2C               	goto	u5545
  9146  0231  1003               	clrc
  9147  0232  0D67               	rlf	??_sprintf,w
  9148  0233  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9149  0234  0084               	movwf	4
  9150  0235  160A  118A  200A  120A  118A  	fcall	stringdir
  9151  023A  00F2               	movwf	___lldiv@divisor
  9152  023B  160A  118A  200A  120A  118A  	fcall	stringdir
  9153  0240  00F3               	movwf	___lldiv@divisor+1
  9154  0241  160A  118A  200A  120A  118A  	fcall	stringdir
  9155  0246  00F4               	movwf	___lldiv@divisor+2
  9156  0247  160A  118A  200A  120A  118A  	fcall	stringdir
  9157  024C  00F5               	movwf	___lldiv@divisor+3
  9158  024D  1683               	bsf	3,5	;RP0=1, select bank1
  9159  024E  1303               	bcf	3,6	;RP1=0, select bank1
  9160  024F  082F               	movf	(sprintf@val+3)^(0+128),w
  9161  0250  00F9               	movwf	___lldiv@dividend+3
  9162  0251  082E               	movf	(sprintf@val+2)^(0+128),w
  9163  0252  00F8               	movwf	___lldiv@dividend+2
  9164  0253  082D               	movf	(sprintf@val+1)^(0+128),w
  9165  0254  00F7               	movwf	___lldiv@dividend+1
  9166  0255  082C               	movf	sprintf@val^(0+128),w
  9167  0256  00F6               	movwf	___lldiv@dividend
  9168  0257  160A  118A  2223  120A  118A  	fcall	___lldiv
  9169  025C  0875               	movf	?___lldiv+3,w
  9170  025D  1683               	bsf	3,5	;RP0=1, select bank1
  9171  025E  1303               	bcf	3,6	;RP1=0, select bank1
  9172  025F  00AB               	movwf	(sprintf@tmpval+3)^(0+128)
  9173  0260  0874               	movf	?___lldiv+2,w
  9174  0261  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  9175  0262  0873               	movf	?___lldiv+1,w
  9176  0263  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  9177  0264  0872               	movf	?___lldiv,w
  9178  0265  00A8               	movwf	sprintf@tmpval^(0+128)
  9179  0266                     l3865:
  9180                           
  9181                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval.vd %= 10;
  9182  0266  3000               	movlw	0
  9183  0267  1283               	bcf	3,5	;RP0=0, select bank0
  9184  0268  1303               	bcf	3,6	;RP1=0, select bank0
  9185  0269  00A8               	movwf	___llmod@divisor+3
  9186  026A  3000               	movlw	0
  9187  026B  00A7               	movwf	___llmod@divisor+2
  9188  026C  3000               	movlw	0
  9189  026D  00A6               	movwf	___llmod@divisor+1
  9190  026E  300A               	movlw	10
  9191  026F  00A5               	movwf	___llmod@divisor
  9192  0270  1683               	bsf	3,5	;RP0=1, select bank1
  9193  0271  1303               	bcf	3,6	;RP1=0, select bank1
  9194  0272  082B               	movf	(sprintf@tmpval+3)^(0+128),w
  9195  0273  1283               	bcf	3,5	;RP0=0, select bank0
  9196  0274  1303               	bcf	3,6	;RP1=0, select bank0
  9197  0275  00AC               	movwf	___llmod@dividend+3
  9198  0276  1683               	bsf	3,5	;RP0=1, select bank1
  9199  0277  1303               	bcf	3,6	;RP1=0, select bank1
  9200  0278  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  9201  0279  1283               	bcf	3,5	;RP0=0, select bank0
  9202  027A  1303               	bcf	3,6	;RP1=0, select bank0
  9203  027B  00AB               	movwf	___llmod@dividend+2
  9204  027C  1683               	bsf	3,5	;RP0=1, select bank1
  9205  027D  1303               	bcf	3,6	;RP1=0, select bank1
  9206  027E  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  9207  027F  1283               	bcf	3,5	;RP0=0, select bank0
  9208  0280  1303               	bcf	3,6	;RP1=0, select bank0
  9209  0281  00AA               	movwf	___llmod@dividend+1
  9210  0282  1683               	bsf	3,5	;RP0=1, select bank1
  9211  0283  1303               	bcf	3,6	;RP1=0, select bank1
  9212  0284  0828               	movf	sprintf@tmpval^(0+128),w
  9213  0285  1283               	bcf	3,5	;RP0=0, select bank0
  9214  0286  1303               	bcf	3,6	;RP1=0, select bank0
  9215  0287  00A9               	movwf	___llmod@dividend
  9216  0288  160A  118A  2174  120A  118A  	fcall	___llmod
  9217  028D  1283               	bcf	3,5	;RP0=0, select bank0
  9218  028E  1303               	bcf	3,6	;RP1=0, select bank0
  9219  028F  0828               	movf	?___llmod+3,w
  9220  0290  1683               	bsf	3,5	;RP0=1, select bank1
  9221  0291  1303               	bcf	3,6	;RP1=0, select bank1
  9222  0292  00AB               	movwf	(sprintf@tmpval+3)^(0+128)
  9223  0293  1283               	bcf	3,5	;RP0=0, select bank0
  9224  0294  1303               	bcf	3,6	;RP1=0, select bank0
  9225  0295  0827               	movf	?___llmod+2,w
  9226  0296  1683               	bsf	3,5	;RP0=1, select bank1
  9227  0297  1303               	bcf	3,6	;RP1=0, select bank1
  9228  0298  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  9229  0299  1283               	bcf	3,5	;RP0=0, select bank0
  9230  029A  1303               	bcf	3,6	;RP1=0, select bank0
  9231  029B  0826               	movf	?___llmod+1,w
  9232  029C  1683               	bsf	3,5	;RP0=1, select bank1
  9233  029D  1303               	bcf	3,6	;RP1=0, select bank1
  9234  029E  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  9235  029F  1283               	bcf	3,5	;RP0=0, select bank0
  9236  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  9237  02A1  0825               	movf	?___llmod,w
  9238  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  9239  02A3  1303               	bcf	3,6	;RP1=0, select bank1
  9240  02A4  00A8               	movwf	sprintf@tmpval^(0+128)
  9241  02A5                     l3867:
  9242                           
  9243                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp++ = ('0' + tmp
      +                          val.vd)));
  9244  02A5  0828               	movf	sprintf@tmpval^(0+128),w
  9245  02A6  3E30               	addlw	48
  9246  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  9247  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  9248  02A9  00E7               	movwf	??_sprintf
  9249  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  9250  02AB  1303               	bcf	3,6	;RP1=0, select bank1
  9251  02AC  0835               	movf	sprintf@sp^(0+128),w
  9252  02AD  0084               	movwf	4
  9253  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  9254  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  9255  02B0  0867               	movf	??_sprintf,w
  9256  02B1  1383               	bcf	3,7	;select IRP bank0
  9257  02B2  0080               	movwf	0
  9258  02B3  3001               	movlw	1
  9259  02B4  00E7               	movwf	??_sprintf
  9260  02B5  0867               	movf	??_sprintf,w
  9261  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  9262  02B7  1303               	bcf	3,6	;RP1=0, select bank1
  9263  02B8  07B5               	addwf	sprintf@sp^(0+128),f
  9264  02B9                     l390:	
  9265                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };D:\Microchip\xc8\v2
      +                          .31\pic\sources\c90\common\doprnt.c: 1232:    }
  9266                           
  9267                           
  9268                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c--) {
  9269  02B9  3001               	movlw	1
  9270  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  9271  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  9272  02BC  02B8               	subwf	sprintf@c^(0+128),f
  9273  02BD  0A38               	incf	sprintf@c^(0+128),w
  9274  02BE  1D03               	btfss	3,2
  9275  02BF  2AC1               	goto	u5551
  9276  02C0  2AC2               	goto	u5550
  9277  02C1                     u5551:
  9278  02C1  2A27               	goto	l3863
  9279  02C2                     u5550:
  9280  02C2  2ADC               	goto	l3875
  9281  02C3                     l3869:
  9282                           
  9283                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++ = ('0')));
  9284  02C3  3030               	movlw	48
  9285  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  9286  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  9287  02C6  00E7               	movwf	??_sprintf
  9288  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  9289  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  9290  02C9  0835               	movf	sprintf@sp^(0+128),w
  9291  02CA  0084               	movwf	4
  9292  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  9293  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  9294  02CD  0867               	movf	??_sprintf,w
  9295  02CE  1383               	bcf	3,7	;select IRP bank0
  9296  02CF  0080               	movwf	0
  9297  02D0                     l3871:
  9298  02D0  3001               	movlw	1
  9299  02D1  00E7               	movwf	??_sprintf
  9300  02D2  0867               	movf	??_sprintf,w
  9301  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  9302  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  9303  02D5  07B5               	addwf	sprintf@sp^(0+128),f
  9304  02D6                     l3873:
  9305                           
  9306                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9307  02D6  30FF               	movlw	255
  9308  02D7  07B0               	addwf	sprintf@eexp^(0+128),f
  9309  02D8  1803               	skipnc
  9310  02D9  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  9311  02DA  30FF               	movlw	255
  9312  02DB  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  9313  02DC                     l3875:
  9314                           
  9315                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(eexp > 0) {
  9316  02DC  0831               	movf	(sprintf@eexp+1)^(0+128),w
  9317  02DD  3A80               	xorlw	128
  9318  02DE  00FF               	movwf	btemp+1
  9319  02DF  3080               	movlw	128
  9320  02E0  027F               	subwf	btemp+1,w
  9321  02E1  1D03               	skipz
  9322  02E2  2AE5               	goto	u5565
  9323  02E3  3001               	movlw	1
  9324  02E4  0230               	subwf	sprintf@eexp^(0+128),w
  9325  02E5                     u5565:
  9326  02E5  1803               	skipnc
  9327  02E6  2AE8               	goto	u5561
  9328  02E7  2AE9               	goto	u5560
  9329  02E8                     u5561:
  9330  02E8  2AC3               	goto	l3869
  9331  02E9                     u5560:
  9332  02E9                     l3877:
  9333                           
  9334                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec > (int)((sizeo
      +                          f dpowers/sizeof dpowers[0])-2))
  9335  02E9  1683               	bsf	3,5	;RP0=1, select bank1
  9336  02EA  1303               	bcf	3,6	;RP1=0, select bank1
  9337  02EB  0837               	movf	(sprintf@prec+1)^(0+128),w
  9338  02EC  3A80               	xorlw	128
  9339  02ED  00FF               	movwf	btemp+1
  9340  02EE  3080               	movlw	128
  9341  02EF  027F               	subwf	btemp+1,w
  9342  02F0  1D03               	skipz
  9343  02F1  2AF4               	goto	u5575
  9344  02F2  3009               	movlw	9
  9345  02F3  0236               	subwf	sprintf@prec^(0+128),w
  9346  02F4                     u5575:
  9347  02F4  1C03               	skipc
  9348  02F5  2AF7               	goto	u5571
  9349  02F6  2AF8               	goto	u5570
  9350  02F7                     u5571:
  9351  02F7  2B01               	goto	l3881
  9352  02F8                     u5570:
  9353  02F8                     l3879:
  9354                           
  9355                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (sizeof dpowers/s
      +                          izeof dpowers[0])-2;
  9356  02F8  3008               	movlw	8
  9357  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  9358  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  9359  02FB  00E7               	movwf	??_sprintf
  9360  02FC  0867               	movf	??_sprintf,w
  9361  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  9362  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  9363  02FF  00B8               	movwf	sprintf@c^(0+128)
  9364  0300  2B0B               	goto	l397
  9365  0301                     l3881:
  9366                           
  9367                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (char)prec;
  9368  0301  1683               	bsf	3,5	;RP0=1, select bank1
  9369  0302  1303               	bcf	3,6	;RP1=0, select bank1
  9370  0303  0836               	movf	sprintf@prec^(0+128),w
  9371  0304  1283               	bcf	3,5	;RP0=0, select bank0
  9372  0305  1303               	bcf	3,6	;RP1=0, select bank0
  9373  0306  00E7               	movwf	??_sprintf
  9374  0307  0867               	movf	??_sprintf,w
  9375  0308  1683               	bsf	3,5	;RP0=1, select bank1
  9376  0309  1303               	bcf	3,6	;RP1=0, select bank1
  9377  030A  00B8               	movwf	sprintf@c^(0+128)
  9378  030B                     l397:
  9379                           
  9380                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= (int)c;
  9381  030B  0838               	movf	sprintf@c^(0+128),w
  9382  030C  1283               	bcf	3,5	;RP0=0, select bank0
  9383  030D  1303               	bcf	3,6	;RP1=0, select bank0
  9384  030E  00E7               	movwf	??_sprintf
  9385  030F  01E8               	clrf	??_sprintf+1
  9386  0310  0867               	movf	??_sprintf,w
  9387  0311  1683               	bsf	3,5	;RP0=1, select bank1
  9388  0312  1303               	bcf	3,6	;RP1=0, select bank1
  9389  0313  02B6               	subwf	sprintf@prec^(0+128),f
  9390  0314  1283               	bcf	3,5	;RP0=0, select bank0
  9391  0315  1303               	bcf	3,6	;RP1=0, select bank0
  9392  0316  0868               	movf	??_sprintf+1,w
  9393  0317  1683               	bsf	3,5	;RP0=1, select bank1
  9394  0318  1303               	bcf	3,6	;RP1=0, select bank1
  9395  0319  1C03               	skipc
  9396  031A  03B7               	decf	(sprintf@prec+1)^(0+128),f
  9397  031B  02B7               	subwf	(sprintf@prec+1)^(0+128),f
  9398  031C                     l3883:
  9399                           
  9400                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9401  031C  0838               	movf	sprintf@c^(0+128),w
  9402  031D  1903               	btfsc	3,2
  9403  031E  2B20               	goto	u5581
  9404  031F  2B21               	goto	u5580
  9405  0320                     u5581:
  9406  0320  2B34               	goto	l3889
  9407  0321                     u5580:
  9408  0321                     l3885:
  9409                           
  9410                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++ = ('.')));
  9411  0321  302E               	movlw	46
  9412  0322  1283               	bcf	3,5	;RP0=0, select bank0
  9413  0323  1303               	bcf	3,6	;RP1=0, select bank0
  9414  0324  00E7               	movwf	??_sprintf
  9415  0325  1683               	bsf	3,5	;RP0=1, select bank1
  9416  0326  1303               	bcf	3,6	;RP1=0, select bank1
  9417  0327  0835               	movf	sprintf@sp^(0+128),w
  9418  0328  0084               	movwf	4
  9419  0329  1283               	bcf	3,5	;RP0=0, select bank0
  9420  032A  1303               	bcf	3,6	;RP1=0, select bank0
  9421  032B  0867               	movf	??_sprintf,w
  9422  032C  1383               	bcf	3,7	;select IRP bank0
  9423  032D  0080               	movwf	0
  9424  032E                     l3887:
  9425  032E  3001               	movlw	1
  9426  032F  00E7               	movwf	??_sprintf
  9427  0330  0867               	movf	??_sprintf,w
  9428  0331  1683               	bsf	3,5	;RP0=1, select bank1
  9429  0332  1303               	bcf	3,6	;RP1=0, select bank1
  9430  0333  07B5               	addwf	sprintf@sp^(0+128),f
  9431  0334                     l3889:
  9432                           
  9433                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(
      +                          fval * scale((signed char)c));
  9434  0334  0838               	movf	sprintf@c^(0+128),w
  9435  0335  120A  158A  225D  120A  118A  	fcall	_scale
  9436  033A  1283               	bcf	3,5	;RP0=0, select bank0
  9437  033B  1303               	bcf	3,6	;RP1=0, select bank0
  9438  033C  083B               	movf	?_scale,w
  9439  033D  1683               	bsf	3,5	;RP0=1, select bank1
  9440  033E  1303               	bcf	3,6	;RP1=0, select bank1
  9441  033F  00A0               	movwf	_sprintf$1172^(0+128)
  9442  0340  1283               	bcf	3,5	;RP0=0, select bank0
  9443  0341  1303               	bcf	3,6	;RP1=0, select bank0
  9444  0342  083C               	movf	?_scale+1,w
  9445  0343  1683               	bsf	3,5	;RP0=1, select bank1
  9446  0344  1303               	bcf	3,6	;RP1=0, select bank1
  9447  0345  00A1               	movwf	(_sprintf$1172+1)^(0+128)
  9448  0346  1283               	bcf	3,5	;RP0=0, select bank0
  9449  0347  1303               	bcf	3,6	;RP1=0, select bank0
  9450  0348  083D               	movf	?_scale+2,w
  9451  0349  1683               	bsf	3,5	;RP0=1, select bank1
  9452  034A  1303               	bcf	3,6	;RP1=0, select bank1
  9453  034B  00A2               	movwf	(_sprintf$1172+2)^(0+128)
  9454  034C                     l3891:
  9455                           
  9456                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(
      +                          fval * scale((signed char)c));
  9457  034C  0820               	movf	_sprintf$1172^(0+128),w
  9458  034D  1283               	bcf	3,5	;RP0=0, select bank0
  9459  034E  1303               	bcf	3,6	;RP1=0, select bank0
  9460  034F  00AE               	movwf	___ftmul@f2
  9461  0350  1683               	bsf	3,5	;RP0=1, select bank1
  9462  0351  1303               	bcf	3,6	;RP1=0, select bank1
  9463  0352  0821               	movf	(_sprintf$1172+1)^(0+128),w
  9464  0353  1283               	bcf	3,5	;RP0=0, select bank0
  9465  0354  1303               	bcf	3,6	;RP1=0, select bank0
  9466  0355  00AF               	movwf	___ftmul@f2+1
  9467  0356  1683               	bsf	3,5	;RP0=1, select bank1
  9468  0357  1303               	bcf	3,6	;RP1=0, select bank1
  9469  0358  0822               	movf	(_sprintf$1172+2)^(0+128),w
  9470  0359  1283               	bcf	3,5	;RP0=0, select bank0
  9471  035A  1303               	bcf	3,6	;RP1=0, select bank0
  9472  035B  00B0               	movwf	___ftmul@f2+2
  9473  035C  1683               	bsf	3,5	;RP0=1, select bank1
  9474  035D  1303               	bcf	3,6	;RP1=0, select bank1
  9475  035E  0832               	movf	sprintf@fval^(0+128),w
  9476  035F  1283               	bcf	3,5	;RP0=0, select bank0
  9477  0360  1303               	bcf	3,6	;RP1=0, select bank0
  9478  0361  00AB               	movwf	___ftmul@f1
  9479  0362  1683               	bsf	3,5	;RP0=1, select bank1
  9480  0363  1303               	bcf	3,6	;RP1=0, select bank1
  9481  0364  0833               	movf	(sprintf@fval+1)^(0+128),w
  9482  0365  1283               	bcf	3,5	;RP0=0, select bank0
  9483  0366  1303               	bcf	3,6	;RP1=0, select bank0
  9484  0367  00AC               	movwf	___ftmul@f1+1
  9485  0368  1683               	bsf	3,5	;RP0=1, select bank1
  9486  0369  1303               	bcf	3,6	;RP1=0, select bank1
  9487  036A  0834               	movf	(sprintf@fval+2)^(0+128),w
  9488  036B  1283               	bcf	3,5	;RP0=0, select bank0
  9489  036C  1303               	bcf	3,6	;RP1=0, select bank0
  9490  036D  00AD               	movwf	___ftmul@f1+2
  9491  036E  160A  118A  24B9  120A  118A  	fcall	___ftmul
  9492  0373  1283               	bcf	3,5	;RP0=0, select bank0
  9493  0374  1303               	bcf	3,6	;RP1=0, select bank0
  9494  0375  082B               	movf	?___ftmul,w
  9495  0376  00C4               	movwf	___fttol@f1
  9496  0377  082C               	movf	?___ftmul+1,w
  9497  0378  00C5               	movwf	___fttol@f1+1
  9498  0379  082D               	movf	?___ftmul+2,w
  9499  037A  00C6               	movwf	___fttol@f1+2
  9500  037B  160A  118A  2370  120A  118A  	fcall	___fttol
  9501  0380  1283               	bcf	3,5	;RP0=0, select bank0
  9502  0381  1303               	bcf	3,6	;RP1=0, select bank0
  9503  0382  0847               	movf	?___fttol+3,w
  9504  0383  1683               	bsf	3,5	;RP0=1, select bank1
  9505  0384  1303               	bcf	3,6	;RP1=0, select bank1
  9506  0385  00AF               	movwf	(sprintf@val+3)^(0+128)
  9507  0386  1283               	bcf	3,5	;RP0=0, select bank0
  9508  0387  1303               	bcf	3,6	;RP1=0, select bank0
  9509  0388  0846               	movf	?___fttol+2,w
  9510  0389  1683               	bsf	3,5	;RP0=1, select bank1
  9511  038A  1303               	bcf	3,6	;RP1=0, select bank1
  9512  038B  00AE               	movwf	(sprintf@val+2)^(0+128)
  9513  038C  1283               	bcf	3,5	;RP0=0, select bank0
  9514  038D  1303               	bcf	3,6	;RP1=0, select bank0
  9515  038E  0845               	movf	?___fttol+1,w
  9516  038F  1683               	bsf	3,5	;RP0=1, select bank1
  9517  0390  1303               	bcf	3,6	;RP1=0, select bank1
  9518  0391  00AD               	movwf	(sprintf@val+1)^(0+128)
  9519  0392  1283               	bcf	3,5	;RP0=0, select bank0
  9520  0393  1303               	bcf	3,6	;RP1=0, select bank0
  9521  0394  0844               	movf	?___fttol,w
  9522  0395  1683               	bsf	3,5	;RP0=1, select bank1
  9523  0396  1303               	bcf	3,6	;RP1=0, select bank1
  9524  0397  00AC               	movwf	sprintf@val^(0+128)
  9525                           
  9526                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
  9527  0398  2C86               	goto	l3901
  9528  0399                     l3893:
  9529                           
  9530                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.vd = val/dpowe
      +                          rs[c];
  9531  0399  0838               	movf	sprintf@c^(0+128),w
  9532  039A  1283               	bcf	3,5	;RP0=0, select bank0
  9533  039B  1303               	bcf	3,6	;RP1=0, select bank0
  9534  039C  00E7               	movwf	??_sprintf
  9535  039D  3001               	movlw	1
  9536  039E                     u5595:
  9537  039E  1003               	clrc
  9538  039F  0DE7               	rlf	??_sprintf,f
  9539  03A0  3EFF               	addlw	-1
  9540  03A1  1D03               	skipz
  9541  03A2  2B9E               	goto	u5595
  9542  03A3  1003               	clrc
  9543  03A4  0D67               	rlf	??_sprintf,w
  9544  03A5  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9545  03A6  0084               	movwf	4
  9546  03A7  160A  118A  200A  120A  118A  	fcall	stringdir
  9547  03AC  00F2               	movwf	___lldiv@divisor
  9548  03AD  160A  118A  200A  120A  118A  	fcall	stringdir
  9549  03B2  00F3               	movwf	___lldiv@divisor+1
  9550  03B3  160A  118A  200A  120A  118A  	fcall	stringdir
  9551  03B8  00F4               	movwf	___lldiv@divisor+2
  9552  03B9  160A  118A  200A  120A  118A  	fcall	stringdir
  9553  03BE  00F5               	movwf	___lldiv@divisor+3
  9554  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  9555  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  9556  03C1  082F               	movf	(sprintf@val+3)^(0+128),w
  9557  03C2  00F9               	movwf	___lldiv@dividend+3
  9558  03C3  082E               	movf	(sprintf@val+2)^(0+128),w
  9559  03C4  00F8               	movwf	___lldiv@dividend+2
  9560  03C5  082D               	movf	(sprintf@val+1)^(0+128),w
  9561  03C6  00F7               	movwf	___lldiv@dividend+1
  9562  03C7  082C               	movf	sprintf@val^(0+128),w
  9563  03C8  00F6               	movwf	___lldiv@dividend
  9564  03C9  160A  118A  2223  120A  118A  	fcall	___lldiv
  9565  03CE  0875               	movf	?___lldiv+3,w
  9566  03CF  1683               	bsf	3,5	;RP0=1, select bank1
  9567  03D0  1303               	bcf	3,6	;RP1=0, select bank1
  9568  03D1  00AB               	movwf	(sprintf@tmpval+3)^(0+128)
  9569  03D2  0874               	movf	?___lldiv+2,w
  9570  03D3  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  9571  03D4  0873               	movf	?___lldiv+1,w
  9572  03D5  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  9573  03D6  0872               	movf	?___lldiv,w
  9574  03D7  00A8               	movwf	sprintf@tmpval^(0+128)
  9575  03D8                     l3895:
  9576                           
  9577                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.vd %= 10;
  9578  03D8  3000               	movlw	0
  9579  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  9580  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  9581  03DB  00A8               	movwf	___llmod@divisor+3
  9582  03DC  3000               	movlw	0
  9583  03DD  00A7               	movwf	___llmod@divisor+2
  9584  03DE  3000               	movlw	0
  9585  03DF  00A6               	movwf	___llmod@divisor+1
  9586  03E0  300A               	movlw	10
  9587  03E1  00A5               	movwf	___llmod@divisor
  9588  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  9589  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  9590  03E4  082B               	movf	(sprintf@tmpval+3)^(0+128),w
  9591  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  9592  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  9593  03E7  00AC               	movwf	___llmod@dividend+3
  9594  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  9595  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  9596  03EA  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  9597  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  9598  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  9599  03ED  00AB               	movwf	___llmod@dividend+2
  9600  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  9601  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  9602  03F0  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  9603  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  9604  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  9605  03F3  00AA               	movwf	___llmod@dividend+1
  9606  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  9607  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  9608  03F6  0828               	movf	sprintf@tmpval^(0+128),w
  9609  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  9610  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  9611  03F9  00A9               	movwf	___llmod@dividend
  9612  03FA  160A  118A  2174  120A  118A  	fcall	___llmod
  9613  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  9614  0400  1303               	bcf	3,6	;RP1=0, select bank0
  9615  0401  0828               	movf	?___llmod+3,w
  9616  0402  1683               	bsf	3,5	;RP0=1, select bank1
  9617  0403  1303               	bcf	3,6	;RP1=0, select bank1
  9618  0404  00AB               	movwf	(sprintf@tmpval+3)^(0+128)
  9619  0405  1283               	bcf	3,5	;RP0=0, select bank0
  9620  0406  1303               	bcf	3,6	;RP1=0, select bank0
  9621  0407  0827               	movf	?___llmod+2,w
  9622  0408  1683               	bsf	3,5	;RP0=1, select bank1
  9623  0409  1303               	bcf	3,6	;RP1=0, select bank1
  9624  040A  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  9625  040B  1283               	bcf	3,5	;RP0=0, select bank0
  9626  040C  1303               	bcf	3,6	;RP1=0, select bank0
  9627  040D  0826               	movf	?___llmod+1,w
  9628  040E  1683               	bsf	3,5	;RP0=1, select bank1
  9629  040F  1303               	bcf	3,6	;RP1=0, select bank1
  9630  0410  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  9631  0411  1283               	bcf	3,5	;RP0=0, select bank0
  9632  0412  1303               	bcf	3,6	;RP1=0, select bank0
  9633  0413  0825               	movf	?___llmod,w
  9634  0414  1683               	bsf	3,5	;RP0=1, select bank1
  9635  0415  1303               	bcf	3,6	;RP1=0, select bank1
  9636  0416  00A8               	movwf	sprintf@tmpval^(0+128)
  9637  0417                     l3897:
  9638                           
  9639                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++ = ('0' + tmpv
      +                          al.vd)));
  9640  0417  0828               	movf	sprintf@tmpval^(0+128),w
  9641  0418  3E30               	addlw	48
  9642  0419  1283               	bcf	3,5	;RP0=0, select bank0
  9643  041A  1303               	bcf	3,6	;RP1=0, select bank0
  9644  041B  00E7               	movwf	??_sprintf
  9645  041C  1683               	bsf	3,5	;RP0=1, select bank1
  9646  041D  1303               	bcf	3,6	;RP1=0, select bank1
  9647  041E  0835               	movf	sprintf@sp^(0+128),w
  9648  041F  0084               	movwf	4
  9649  0420  1283               	bcf	3,5	;RP0=0, select bank0
  9650  0421  1303               	bcf	3,6	;RP1=0, select bank0
  9651  0422  0867               	movf	??_sprintf,w
  9652  0423  1383               	bcf	3,7	;select IRP bank0
  9653  0424  0080               	movwf	0
  9654  0425  3001               	movlw	1
  9655  0426  00E7               	movwf	??_sprintf
  9656  0427  0867               	movf	??_sprintf,w
  9657  0428  1683               	bsf	3,5	;RP0=1, select bank1
  9658  0429  1303               	bcf	3,6	;RP1=0, select bank1
  9659  042A  07B5               	addwf	sprintf@sp^(0+128),f
  9660  042B                     l3899:
  9661                           
  9662                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= dpowers[c];
  9663  042B  0838               	movf	sprintf@c^(0+128),w
  9664  042C  1283               	bcf	3,5	;RP0=0, select bank0
  9665  042D  1303               	bcf	3,6	;RP1=0, select bank0
  9666  042E  00E7               	movwf	??_sprintf
  9667  042F  3001               	movlw	1
  9668  0430                     u5605:
  9669  0430  1003               	clrc
  9670  0431  0DE7               	rlf	??_sprintf,f
  9671  0432  3EFF               	addlw	-1
  9672  0433  1D03               	skipz
  9673  0434  2C30               	goto	u5605
  9674  0435  1003               	clrc
  9675  0436  0D67               	rlf	??_sprintf,w
  9676  0437  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9677  0438  0084               	movwf	4
  9678  0439  160A  118A  200A  120A  118A  	fcall	stringdir
  9679  043E  00A5               	movwf	___llmod@divisor
  9680  043F  160A  118A  200A  120A  118A  	fcall	stringdir
  9681  0444  00A6               	movwf	___llmod@divisor+1
  9682  0445  160A  118A  200A  120A  118A  	fcall	stringdir
  9683  044A  00A7               	movwf	___llmod@divisor+2
  9684  044B  160A  118A  200A  120A  118A  	fcall	stringdir
  9685  0450  00A8               	movwf	___llmod@divisor+3
  9686  0451  1683               	bsf	3,5	;RP0=1, select bank1
  9687  0452  1303               	bcf	3,6	;RP1=0, select bank1
  9688  0453  082F               	movf	(sprintf@val+3)^(0+128),w
  9689  0454  1283               	bcf	3,5	;RP0=0, select bank0
  9690  0455  1303               	bcf	3,6	;RP1=0, select bank0
  9691  0456  00AC               	movwf	___llmod@dividend+3
  9692  0457  1683               	bsf	3,5	;RP0=1, select bank1
  9693  0458  1303               	bcf	3,6	;RP1=0, select bank1
  9694  0459  082E               	movf	(sprintf@val+2)^(0+128),w
  9695  045A  1283               	bcf	3,5	;RP0=0, select bank0
  9696  045B  1303               	bcf	3,6	;RP1=0, select bank0
  9697  045C  00AB               	movwf	___llmod@dividend+2
  9698  045D  1683               	bsf	3,5	;RP0=1, select bank1
  9699  045E  1303               	bcf	3,6	;RP1=0, select bank1
  9700  045F  082D               	movf	(sprintf@val+1)^(0+128),w
  9701  0460  1283               	bcf	3,5	;RP0=0, select bank0
  9702  0461  1303               	bcf	3,6	;RP1=0, select bank0
  9703  0462  00AA               	movwf	___llmod@dividend+1
  9704  0463  1683               	bsf	3,5	;RP0=1, select bank1
  9705  0464  1303               	bcf	3,6	;RP1=0, select bank1
  9706  0465  082C               	movf	sprintf@val^(0+128),w
  9707  0466  1283               	bcf	3,5	;RP0=0, select bank0
  9708  0467  1303               	bcf	3,6	;RP1=0, select bank0
  9709  0468  00A9               	movwf	___llmod@dividend
  9710  0469  160A  118A  2174  120A  118A  	fcall	___llmod
  9711  046E  1283               	bcf	3,5	;RP0=0, select bank0
  9712  046F  1303               	bcf	3,6	;RP1=0, select bank0
  9713  0470  0828               	movf	?___llmod+3,w
  9714  0471  1683               	bsf	3,5	;RP0=1, select bank1
  9715  0472  1303               	bcf	3,6	;RP1=0, select bank1
  9716  0473  00AF               	movwf	(sprintf@val+3)^(0+128)
  9717  0474  1283               	bcf	3,5	;RP0=0, select bank0
  9718  0475  1303               	bcf	3,6	;RP1=0, select bank0
  9719  0476  0827               	movf	?___llmod+2,w
  9720  0477  1683               	bsf	3,5	;RP0=1, select bank1
  9721  0478  1303               	bcf	3,6	;RP1=0, select bank1
  9722  0479  00AE               	movwf	(sprintf@val+2)^(0+128)
  9723  047A  1283               	bcf	3,5	;RP0=0, select bank0
  9724  047B  1303               	bcf	3,6	;RP1=0, select bank0
  9725  047C  0826               	movf	?___llmod+1,w
  9726  047D  1683               	bsf	3,5	;RP0=1, select bank1
  9727  047E  1303               	bcf	3,6	;RP1=0, select bank1
  9728  047F  00AD               	movwf	(sprintf@val+1)^(0+128)
  9729  0480  1283               	bcf	3,5	;RP0=0, select bank0
  9730  0481  1303               	bcf	3,6	;RP1=0, select bank0
  9731  0482  0825               	movf	?___llmod,w
  9732  0483  1683               	bsf	3,5	;RP0=1, select bank1
  9733  0484  1303               	bcf	3,6	;RP1=0, select bank1
  9734  0485  00AC               	movwf	sprintf@val^(0+128)
  9735  0486                     l3901:
  9736                           
  9737                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
  9738  0486  3001               	movlw	1
  9739  0487  02B8               	subwf	sprintf@c^(0+128),f
  9740  0488  0A38               	incf	sprintf@c^(0+128),w
  9741  0489  1D03               	btfss	3,2
  9742  048A  2C8C               	goto	u5611
  9743  048B  2C8D               	goto	u5610
  9744  048C                     u5611:
  9745  048C  2B99               	goto	l3893
  9746  048D                     u5610:
  9747  048D  2CA7               	goto	l3909
  9748  048E                     l3903:
  9749                           
  9750                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++ = ('0')));
  9751  048E  3030               	movlw	48
  9752  048F  1283               	bcf	3,5	;RP0=0, select bank0
  9753  0490  1303               	bcf	3,6	;RP1=0, select bank0
  9754  0491  00E7               	movwf	??_sprintf
  9755  0492  1683               	bsf	3,5	;RP0=1, select bank1
  9756  0493  1303               	bcf	3,6	;RP1=0, select bank1
  9757  0494  0835               	movf	sprintf@sp^(0+128),w
  9758  0495  0084               	movwf	4
  9759  0496  1283               	bcf	3,5	;RP0=0, select bank0
  9760  0497  1303               	bcf	3,6	;RP1=0, select bank0
  9761  0498  0867               	movf	??_sprintf,w
  9762  0499  1383               	bcf	3,7	;select IRP bank0
  9763  049A  0080               	movwf	0
  9764  049B                     l3905:
  9765  049B  3001               	movlw	1
  9766  049C  00E7               	movwf	??_sprintf
  9767  049D  0867               	movf	??_sprintf,w
  9768  049E  1683               	bsf	3,5	;RP0=1, select bank1
  9769  049F  1303               	bcf	3,6	;RP1=0, select bank1
  9770  04A0  07B5               	addwf	sprintf@sp^(0+128),f
  9771  04A1                     l3907:
  9772                           
  9773                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  9774  04A1  30FF               	movlw	255
  9775  04A2  07B6               	addwf	sprintf@prec^(0+128),f
  9776  04A3  1803               	skipnc
  9777  04A4  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  9778  04A5  30FF               	movlw	255
  9779  04A6  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  9780  04A7                     l3909:
  9781                           
  9782                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(prec) {
  9783  04A7  0836               	movf	sprintf@prec^(0+128),w
  9784  04A8  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  9785  04A9  1D03               	btfss	3,2
  9786  04AA  2CAC               	goto	u5621
  9787  04AB  2CAD               	goto	u5620
  9788  04AC                     u5621:
  9789  04AC  2C8E               	goto	l3903
  9790  04AD                     u5620:
  9791  04AD  2EB7               	goto	l3989
  9792  04AE                     l3911:
  9793                           
  9794                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned long)(*(int *)__va_arg((*(i
      +                          nt **)ap), (int)0));
  9795  04AE  1683               	bsf	3,5	;RP0=1, select bank1
  9796  04AF  1303               	bcf	3,6	;RP1=0, select bank1
  9797  04B0  0823               	movf	sprintf@ap^(0+128),w
  9798  04B1  0084               	movwf	4
  9799  04B2  1383               	bcf	3,7	;select IRP bank0
  9800  04B3  0800               	movf	0,w
  9801  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  9802  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  9803  04B6  00E7               	movwf	??_sprintf
  9804  04B7  0A84               	incf	4,f
  9805  04B8  0800               	movf	0,w
  9806  04B9  00E8               	movwf	??_sprintf+1
  9807  04BA  0867               	movf	??_sprintf,w
  9808  04BB  1683               	bsf	3,5	;RP0=1, select bank1
  9809  04BC  1303               	bcf	3,6	;RP1=0, select bank1
  9810  04BD  00AC               	movwf	sprintf@val^(0+128)
  9811  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  9812  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  9813  04C0  0868               	movf	??_sprintf+1,w
  9814  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  9815  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  9816  04C3  00AD               	movwf	(sprintf@val+1)^(0+128)
  9817  04C4  3000               	movlw	0
  9818  04C5  1BAD               	btfsc	(sprintf@val+1)^(0+128),7
  9819  04C6  30FF               	movlw	255
  9820  04C7  00AE               	movwf	(sprintf@val+2)^(0+128)
  9821  04C8  00AF               	movwf	(sprintf@val+3)^(0+128)
  9822  04C9                     l3913:
  9823  04C9  3002               	movlw	2
  9824  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  9825  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  9826  04CC  00E7               	movwf	??_sprintf
  9827  04CD  0867               	movf	??_sprintf,w
  9828  04CE  1683               	bsf	3,5	;RP0=1, select bank1
  9829  04CF  1303               	bcf	3,6	;RP1=0, select bank1
  9830  04D0  07A3               	addwf	sprintf@ap^(0+128),f
  9831  04D1                     l3915:
  9832                           
  9833                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long)val < 0) {
  9834  04D1  1FAF               	btfss	(sprintf@val+3)^(0+128),7
  9835  04D2  2CD4               	goto	u5631
  9836  04D3  2CD5               	goto	u5630
  9837  04D4                     u5631:
  9838  04D4  2CE4               	goto	l3921
  9839  04D5                     u5630:
  9840  04D5                     l3917:
  9841                           
  9842                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
  9843  04D5  3003               	movlw	3
  9844  04D6  04A4               	iorwf	sprintf@flag^(0+128),f
  9845  04D7  3000               	movlw	0
  9846  04D8  04A5               	iorwf	(sprintf@flag+1)^(0+128),f
  9847  04D9                     l3919:
  9848                           
  9849                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
  9850  04D9  09AC               	comf	sprintf@val^(0+128),f
  9851  04DA  09AD               	comf	(sprintf@val+1)^(0+128),f
  9852  04DB  09AE               	comf	(sprintf@val+2)^(0+128),f
  9853  04DC  09AF               	comf	(sprintf@val+3)^(0+128),f
  9854  04DD  0AAC               	incf	sprintf@val^(0+128),f
  9855  04DE  1903               	skipnz
  9856  04DF  0AAD               	incf	(sprintf@val+1)^(0+128),f
  9857  04E0  1903               	skipnz
  9858  04E1  0AAE               	incf	(sprintf@val+2)^(0+128),f
  9859  04E2  1903               	skipnz
  9860  04E3  0AAF               	incf	(sprintf@val+3)^(0+128),f
  9861  04E4                     l3921:
  9862                           
  9863                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && val == 0)
  9864  04E4  0836               	movf	sprintf@prec^(0+128),w
  9865  04E5  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  9866  04E6  1D03               	btfss	3,2
  9867  04E7  2CE9               	goto	u5641
  9868  04E8  2CEA               	goto	u5640
  9869  04E9                     u5641:
  9870  04E9  2CF8               	goto	l3927
  9871  04EA                     u5640:
  9872  04EA                     l3923:
  9873  04EA  082F               	movf	(sprintf@val+3)^(0+128),w
  9874  04EB  042E               	iorwf	(sprintf@val+2)^(0+128),w
  9875  04EC  042D               	iorwf	(sprintf@val+1)^(0+128),w
  9876  04ED  042C               	iorwf	sprintf@val^(0+128),w
  9877  04EE  1D03               	skipz
  9878  04EF  2CF1               	goto	u5651
  9879  04F0  2CF2               	goto	u5650
  9880  04F1                     u5651:
  9881  04F1  2CF8               	goto	l3927
  9882  04F2                     u5650:
  9883  04F2                     l3925:
  9884                           
  9885                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  9886  04F2  3001               	movlw	1
  9887  04F3  07B6               	addwf	sprintf@prec^(0+128),f
  9888  04F4  1803               	skipnc
  9889  04F5  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  9890  04F6  3000               	movlw	0
  9891  04F7  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  9892  04F8                     l3927:
  9893                           
  9894                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeo
      +                          f dpowers/sizeof dpowers[0] ; c++)
  9895  04F8  01B8               	clrf	sprintf@c^(0+128)
  9896  04F9  0AB8               	incf	sprintf@c^(0+128),f
  9897  04FA                     l3933:
  9898                           
  9899                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowers[c])
  9900  04FA  0838               	movf	sprintf@c^(0+128),w
  9901  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  9902  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  9903  04FD  00E7               	movwf	??_sprintf
  9904  04FE  3001               	movlw	1
  9905  04FF                     u5665:
  9906  04FF  1003               	clrc
  9907  0500  0DE7               	rlf	??_sprintf,f
  9908  0501  3EFF               	addlw	-1
  9909  0502  1D03               	skipz
  9910  0503  2CFF               	goto	u5665
  9911  0504  1003               	clrc
  9912  0505  0D67               	rlf	??_sprintf,w
  9913  0506  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9914  0507  0084               	movwf	4
  9915  0508  160A  118A  200A  120A  118A  	fcall	stringdir
  9916  050D  00E8               	movwf	??_sprintf+1
  9917  050E  160A  118A  200A  120A  118A  	fcall	stringdir
  9918  0513  00E9               	movwf	??_sprintf+2
  9919  0514  160A  118A  200A  120A  118A  	fcall	stringdir
  9920  0519  00EA               	movwf	??_sprintf+3
  9921  051A  160A  118A  200A  120A  118A  	fcall	stringdir
  9922  051F  00EB               	movwf	??_sprintf+4
  9923  0520  086B               	movf	??_sprintf+4,w
  9924  0521  1683               	bsf	3,5	;RP0=1, select bank1
  9925  0522  1303               	bcf	3,6	;RP1=0, select bank1
  9926  0523  022F               	subwf	(sprintf@val+3)^(0+128),w
  9927  0524  1D03               	skipz
  9928  0525  2D3C               	goto	u5675
  9929  0526  1283               	bcf	3,5	;RP0=0, select bank0
  9930  0527  1303               	bcf	3,6	;RP1=0, select bank0
  9931  0528  086A               	movf	??_sprintf+3,w
  9932  0529  1683               	bsf	3,5	;RP0=1, select bank1
  9933  052A  1303               	bcf	3,6	;RP1=0, select bank1
  9934  052B  022E               	subwf	(sprintf@val+2)^(0+128),w
  9935  052C  1D03               	skipz
  9936  052D  2D3C               	goto	u5675
  9937  052E  1283               	bcf	3,5	;RP0=0, select bank0
  9938  052F  1303               	bcf	3,6	;RP1=0, select bank0
  9939  0530  0869               	movf	??_sprintf+2,w
  9940  0531  1683               	bsf	3,5	;RP0=1, select bank1
  9941  0532  1303               	bcf	3,6	;RP1=0, select bank1
  9942  0533  022D               	subwf	(sprintf@val+1)^(0+128),w
  9943  0534  1D03               	skipz
  9944  0535  2D3C               	goto	u5675
  9945  0536  1283               	bcf	3,5	;RP0=0, select bank0
  9946  0537  1303               	bcf	3,6	;RP1=0, select bank0
  9947  0538  0868               	movf	??_sprintf+1,w
  9948  0539  1683               	bsf	3,5	;RP0=1, select bank1
  9949  053A  1303               	bcf	3,6	;RP1=0, select bank1
  9950  053B  022C               	subwf	sprintf@val^(0+128),w
  9951  053C                     u5675:
  9952  053C  1803               	skipnc
  9953  053D  2D3F               	goto	u5671
  9954  053E  2D40               	goto	u5670
  9955  053F                     u5671:
  9956  053F  2D41               	goto	l3937
  9957  0540                     u5670:
  9958  0540  2D4F               	goto	l3939
  9959  0541                     l3937:
  9960  0541  3001               	movlw	1
  9961  0542  1283               	bcf	3,5	;RP0=0, select bank0
  9962  0543  1303               	bcf	3,6	;RP1=0, select bank0
  9963  0544  00E7               	movwf	??_sprintf
  9964  0545  0867               	movf	??_sprintf,w
  9965  0546  1683               	bsf	3,5	;RP0=1, select bank1
  9966  0547  1303               	bcf	3,6	;RP1=0, select bank1
  9967  0548  07B8               	addwf	sprintf@c^(0+128),f
  9968  0549  300A               	movlw	10
  9969  054A  0638               	xorwf	sprintf@c^(0+128),w
  9970  054B  1D03               	btfss	3,2
  9971  054C  2D4E               	goto	u5681
  9972  054D  2D4F               	goto	u5680
  9973  054E                     u5681:
  9974  054E  2CFA               	goto	l3933
  9975  054F                     u5680:
  9976  054F                     l3939:
  9977                           
  9978                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < prec)
  9979  054F  0837               	movf	(sprintf@prec+1)^(0+128),w
  9980  0550  3A80               	xorlw	128
  9981  0551  3C80               	sublw	128
  9982  0552  1D03               	skipz
  9983  0553  2D56               	goto	u5695
  9984  0554  0836               	movf	sprintf@prec^(0+128),w
  9985  0555  0238               	subwf	sprintf@c^(0+128),w
  9986  0556                     u5695:
  9987  0556  1803               	skipnc
  9988  0557  2D59               	goto	u5691
  9989  0558  2D5A               	goto	u5690
  9990  0559                     u5691:
  9991  0559  2D65               	goto	l3943
  9992  055A                     u5690:
  9993  055A                     l3941:
  9994                           
  9995                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (char)prec;
  9996  055A  1683               	bsf	3,5	;RP0=1, select bank1
  9997  055B  1303               	bcf	3,6	;RP1=0, select bank1
  9998  055C  0836               	movf	sprintf@prec^(0+128),w
  9999  055D  1283               	bcf	3,5	;RP0=0, select bank0
 10000  055E  1303               	bcf	3,6	;RP1=0, select bank0
 10001  055F  00E7               	movwf	??_sprintf
 10002  0560  0867               	movf	??_sprintf,w
 10003  0561  1683               	bsf	3,5	;RP0=1, select bank1
 10004  0562  1303               	bcf	3,6	;RP1=0, select bank1
 10005  0563  00B8               	movwf	sprintf@c^(0+128)
 10006  0564  2D89               	goto	l3947
 10007  0565                     l3943:
 10008  0565  1683               	bsf	3,5	;RP0=1, select bank1
 10009  0566  1303               	bcf	3,6	;RP1=0, select bank1
 10010  0567  0837               	movf	(sprintf@prec+1)^(0+128),w
 10011  0568  3A80               	xorlw	128
 10012  0569  1283               	bcf	3,5	;RP0=0, select bank0
 10013  056A  1303               	bcf	3,6	;RP1=0, select bank0
 10014  056B  00E7               	movwf	??_sprintf
 10015  056C  3080               	movlw	128
 10016  056D  0267               	subwf	??_sprintf,w
 10017  056E  1D03               	skipz
 10018  056F  2D74               	goto	u5705
 10019  0570  1683               	bsf	3,5	;RP0=1, select bank1
 10020  0571  1303               	bcf	3,6	;RP1=0, select bank1
 10021  0572  0838               	movf	sprintf@c^(0+128),w
 10022  0573  0236               	subwf	sprintf@prec^(0+128),w
 10023  0574                     u5705:
 10024  0574  1803               	skipnc
 10025  0575  2D77               	goto	u5701
 10026  0576  2D78               	goto	u5700
 10027  0577                     u5701:
 10028  0577  2D89               	goto	l3947
 10029  0578                     u5700:
 10030  0578                     l3945:
 10031                           
 10032                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c;
 10033  0578  1683               	bsf	3,5	;RP0=1, select bank1
 10034  0579  1303               	bcf	3,6	;RP1=0, select bank1
 10035  057A  0838               	movf	sprintf@c^(0+128),w
 10036  057B  1283               	bcf	3,5	;RP0=0, select bank0
 10037  057C  1303               	bcf	3,6	;RP1=0, select bank0
 10038  057D  00E7               	movwf	??_sprintf
 10039  057E  01E8               	clrf	??_sprintf+1
 10040  057F  0867               	movf	??_sprintf,w
 10041  0580  1683               	bsf	3,5	;RP0=1, select bank1
 10042  0581  1303               	bcf	3,6	;RP1=0, select bank1
 10043  0582  00B6               	movwf	sprintf@prec^(0+128)
 10044  0583  1283               	bcf	3,5	;RP0=0, select bank0
 10045  0584  1303               	bcf	3,6	;RP1=0, select bank0
 10046  0585  0868               	movf	??_sprintf+1,w
 10047  0586  1683               	bsf	3,5	;RP0=1, select bank1
 10048  0587  1303               	bcf	3,6	;RP1=0, select bank1
 10049  0588  00B7               	movwf	(sprintf@prec+1)^(0+128)
 10050  0589                     l3947:
 10051                           
 10052                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width && flag & 0x03
      +                          )
 10053  0589  1683               	bsf	3,5	;RP0=1, select bank1
 10054  058A  1303               	bcf	3,6	;RP1=0, select bank1
 10055  058B  0826               	movf	sprintf@width^(0+128),w
 10056  058C  0427               	iorwf	(sprintf@width+1)^(0+128),w
 10057  058D  1903               	btfsc	3,2
 10058  058E  2D90               	goto	u5711
 10059  058F  2D91               	goto	u5710
 10060  0590                     u5711:
 10061  0590  2DAB               	goto	l3953
 10062  0591                     u5710:
 10063  0591                     l3949:
 10064  0591  3003               	movlw	3
 10065  0592  0524               	andwf	sprintf@flag^(0+128),w
 10066  0593  1283               	bcf	3,5	;RP0=0, select bank0
 10067  0594  1303               	bcf	3,6	;RP1=0, select bank0
 10068  0595  00E7               	movwf	??_sprintf
 10069  0596  3000               	movlw	0
 10070  0597  1683               	bsf	3,5	;RP0=1, select bank1
 10071  0598  1303               	bcf	3,6	;RP1=0, select bank1
 10072  0599  0525               	andwf	(sprintf@flag+1)^(0+128),w
 10073  059A  1283               	bcf	3,5	;RP0=0, select bank0
 10074  059B  1303               	bcf	3,6	;RP1=0, select bank0
 10075  059C  00E8               	movwf	??_sprintf+1
 10076  059D  0867               	movf	??_sprintf,w
 10077  059E  0468               	iorwf	??_sprintf+1,w
 10078  059F  1903               	btfsc	3,2
 10079  05A0  2DA2               	goto	u5721
 10080  05A1  2DA3               	goto	u5720
 10081  05A2                     u5721:
 10082  05A2  2DAB               	goto	l3953
 10083  05A3                     u5720:
 10084  05A3                     l3951:
 10085                           
 10086                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10087  05A3  30FF               	movlw	255
 10088  05A4  1683               	bsf	3,5	;RP0=1, select bank1
 10089  05A5  1303               	bcf	3,6	;RP1=0, select bank1
 10090  05A6  07A6               	addwf	sprintf@width^(0+128),f
 10091  05A7  1803               	skipnc
 10092  05A8  0AA7               	incf	(sprintf@width+1)^(0+128),f
 10093  05A9  30FF               	movlw	255
 10094  05AA  07A7               	addwf	(sprintf@width+1)^(0+128),f
 10095  05AB                     l3953:
 10096                           
 10097                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag & 0x4000) {
 10098  05AB  1683               	bsf	3,5	;RP0=1, select bank1
 10099  05AC  1303               	bcf	3,6	;RP1=0, select bank1
 10100  05AD  1F25               	btfss	(sprintf@flag+1)^(0+128),6
 10101  05AE  2DB0               	goto	u5731
 10102  05AF  2DB1               	goto	u5730
 10103  05B0                     u5731:
 10104  05B0  2DD4               	goto	l3961
 10105  05B1                     u5730:
 10106  05B1                     l3955:
 10107                           
 10108                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width > prec)
 10109  05B1  0837               	movf	(sprintf@prec+1)^(0+128),w
 10110  05B2  3A80               	xorlw	128
 10111  05B3  1283               	bcf	3,5	;RP0=0, select bank0
 10112  05B4  1303               	bcf	3,6	;RP1=0, select bank0
 10113  05B5  00E7               	movwf	??_sprintf
 10114  05B6  1683               	bsf	3,5	;RP0=1, select bank1
 10115  05B7  1303               	bcf	3,6	;RP1=0, select bank1
 10116  05B8  0827               	movf	(sprintf@width+1)^(0+128),w
 10117  05B9  3A80               	xorlw	128
 10118  05BA  1283               	bcf	3,5	;RP0=0, select bank0
 10119  05BB  1303               	bcf	3,6	;RP1=0, select bank0
 10120  05BC  0267               	subwf	??_sprintf,w
 10121  05BD  1D03               	skipz
 10122  05BE  2DC3               	goto	u5745
 10123  05BF  1683               	bsf	3,5	;RP0=1, select bank1
 10124  05C0  1303               	bcf	3,6	;RP1=0, select bank1
 10125  05C1  0826               	movf	sprintf@width^(0+128),w
 10126  05C2  0236               	subwf	sprintf@prec^(0+128),w
 10127  05C3                     u5745:
 10128  05C3  1803               	skipnc
 10129  05C4  2DC6               	goto	u5741
 10130  05C5  2DC7               	goto	u5740
 10131  05C6                     u5741:
 10132  05C6  2DD0               	goto	l3959
 10133  05C7                     u5740:
 10134  05C7                     l3957:
 10135                           
 10136                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -= prec;
 10137  05C7  1683               	bsf	3,5	;RP0=1, select bank1
 10138  05C8  1303               	bcf	3,6	;RP1=0, select bank1
 10139  05C9  0836               	movf	sprintf@prec^(0+128),w
 10140  05CA  02A6               	subwf	sprintf@width^(0+128),f
 10141  05CB  0837               	movf	(sprintf@prec+1)^(0+128),w
 10142  05CC  1C03               	skipc
 10143  05CD  03A7               	decf	(sprintf@width+1)^(0+128),f
 10144  05CE  02A7               	subwf	(sprintf@width+1)^(0+128),f
 10145  05CF  2DD4               	goto	l3961
 10146  05D0                     l3959:
 10147                           
 10148                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width = 0;
 10149  05D0  1683               	bsf	3,5	;RP0=1, select bank1
 10150  05D1  1303               	bcf	3,6	;RP1=0, select bank1
 10151  05D2  01A6               	clrf	sprintf@width^(0+128)
 10152  05D3  01A7               	clrf	(sprintf@width+1)^(0+128)
 10153  05D4                     l3961:
 10154                           
 10155                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width > c)
 10156  05D4  0827               	movf	(sprintf@width+1)^(0+128),w
 10157  05D5  3A80               	xorlw	128
 10158  05D6  3C80               	sublw	128
 10159  05D7  1D03               	skipz
 10160  05D8  2DDB               	goto	u5755
 10161  05D9  0826               	movf	sprintf@width^(0+128),w
 10162  05DA  0238               	subwf	sprintf@c^(0+128),w
 10163  05DB                     u5755:
 10164  05DB  1803               	skipnc
 10165  05DC  2DDE               	goto	u5751
 10166  05DD  2DDF               	goto	u5750
 10167  05DE                     u5751:
 10168  05DE  2DF3               	goto	l3965
 10169  05DF                     u5750:
 10170  05DF                     l3963:
 10171                           
 10172                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -= c;
 10173  05DF  1683               	bsf	3,5	;RP0=1, select bank1
 10174  05E0  1303               	bcf	3,6	;RP1=0, select bank1
 10175  05E1  0838               	movf	sprintf@c^(0+128),w
 10176  05E2  1283               	bcf	3,5	;RP0=0, select bank0
 10177  05E3  1303               	bcf	3,6	;RP1=0, select bank0
 10178  05E4  00E7               	movwf	??_sprintf
 10179  05E5  01E8               	clrf	??_sprintf+1
 10180  05E6  0867               	movf	??_sprintf,w
 10181  05E7  1683               	bsf	3,5	;RP0=1, select bank1
 10182  05E8  1303               	bcf	3,6	;RP1=0, select bank1
 10183  05E9  02A6               	subwf	sprintf@width^(0+128),f
 10184  05EA  1283               	bcf	3,5	;RP0=0, select bank0
 10185  05EB  1303               	bcf	3,6	;RP1=0, select bank0
 10186  05EC  0868               	movf	??_sprintf+1,w
 10187  05ED  1683               	bsf	3,5	;RP0=1, select bank1
 10188  05EE  1303               	bcf	3,6	;RP1=0, select bank1
 10189  05EF  1C03               	skipc
 10190  05F0  03A7               	decf	(sprintf@width+1)^(0+128),f
 10191  05F1  02A7               	subwf	(sprintf@width+1)^(0+128),f
 10192  05F2  2DF7               	goto	l3967
 10193  05F3                     l3965:
 10194                           
 10195                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 0;
 10196  05F3  1683               	bsf	3,5	;RP0=1, select bank1
 10197  05F4  1303               	bcf	3,6	;RP1=0, select bank1
 10198  05F5  01A6               	clrf	sprintf@width^(0+128)
 10199  05F6  01A7               	clrf	(sprintf@width+1)^(0+128)
 10200  05F7                     l3967:
 10201                           
 10202                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10203  05F7  0826               	movf	sprintf@width^(0+128),w
 10204  05F8  0427               	iorwf	(sprintf@width+1)^(0+128),w
 10205  05F9  1903               	btfsc	3,2
 10206  05FA  2DFC               	goto	u5761
 10207  05FB  2DFD               	goto	u5760
 10208  05FC                     u5761:
 10209  05FC  2E1C               	goto	l3975
 10210  05FD                     u5760:
 10211  05FD                     l3969:
 10212                           
 10213                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp++ = (' ')));
 10214  05FD  3020               	movlw	32
 10215  05FE  1283               	bcf	3,5	;RP0=0, select bank0
 10216  05FF  1303               	bcf	3,6	;RP1=0, select bank0
 10217  0600  00E7               	movwf	??_sprintf
 10218  0601  1683               	bsf	3,5	;RP0=1, select bank1
 10219  0602  1303               	bcf	3,6	;RP1=0, select bank1
 10220  0603  0835               	movf	sprintf@sp^(0+128),w
 10221  0604  0084               	movwf	4
 10222  0605  1283               	bcf	3,5	;RP0=0, select bank0
 10223  0606  1303               	bcf	3,6	;RP1=0, select bank0
 10224  0607  0867               	movf	??_sprintf,w
 10225  0608  1383               	bcf	3,7	;select IRP bank0
 10226  0609  0080               	movwf	0
 10227  060A                     l3971:
 10228  060A  3001               	movlw	1
 10229  060B  00E7               	movwf	??_sprintf
 10230  060C  0867               	movf	??_sprintf,w
 10231  060D  1683               	bsf	3,5	;RP0=1, select bank1
 10232  060E  1303               	bcf	3,6	;RP1=0, select bank1
 10233  060F  07B5               	addwf	sprintf@sp^(0+128),f
 10234  0610                     l3973:
 10235  0610  30FF               	movlw	255
 10236  0611  07A6               	addwf	sprintf@width^(0+128),f
 10237  0612  1803               	skipnc
 10238  0613  0AA7               	incf	(sprintf@width+1)^(0+128),f
 10239  0614  30FF               	movlw	255
 10240  0615  07A7               	addwf	(sprintf@width+1)^(0+128),f
 10241  0616  0826               	movf	sprintf@width^(0+128),w
 10242  0617  0427               	iorwf	(sprintf@width+1)^(0+128),w
 10243  0618  1D03               	btfss	3,2
 10244  0619  2E1B               	goto	u5771
 10245  061A  2E1C               	goto	u5770
 10246  061B                     u5771:
 10247  061B  2DFD               	goto	l3969
 10248  061C                     u5770:
 10249  061C                     l3975:
 10250                           
 10251                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
 10252  061C  3003               	movlw	3
 10253  061D  0524               	andwf	sprintf@flag^(0+128),w
 10254  061E  1283               	bcf	3,5	;RP0=0, select bank0
 10255  061F  1303               	bcf	3,6	;RP1=0, select bank0
 10256  0620  00E7               	movwf	??_sprintf
 10257  0621  3000               	movlw	0
 10258  0622  1683               	bsf	3,5	;RP0=1, select bank1
 10259  0623  1303               	bcf	3,6	;RP1=0, select bank1
 10260  0624  0525               	andwf	(sprintf@flag+1)^(0+128),w
 10261  0625  1283               	bcf	3,5	;RP0=0, select bank0
 10262  0626  1303               	bcf	3,6	;RP1=0, select bank0
 10263  0627  00E8               	movwf	??_sprintf+1
 10264  0628  0867               	movf	??_sprintf,w
 10265  0629  0468               	iorwf	??_sprintf+1,w
 10266  062A  1903               	btfsc	3,2
 10267  062B  2E2D               	goto	u5781
 10268  062C  2E2E               	goto	u5780
 10269  062D                     u5781:
 10270  062D  2EA7               	goto	l3987
 10271  062E                     u5780:
 10272  062E                     l3977:
 10273                           
 10274                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
 10275  062E  302D               	movlw	45
 10276  062F  00E7               	movwf	??_sprintf
 10277  0630  1683               	bsf	3,5	;RP0=1, select bank1
 10278  0631  1303               	bcf	3,6	;RP1=0, select bank1
 10279  0632  0835               	movf	sprintf@sp^(0+128),w
 10280  0633  0084               	movwf	4
 10281  0634  1283               	bcf	3,5	;RP0=0, select bank0
 10282  0635  1303               	bcf	3,6	;RP1=0, select bank0
 10283  0636  0867               	movf	??_sprintf,w
 10284  0637  1383               	bcf	3,7	;select IRP bank0
 10285  0638  0080               	movwf	0
 10286  0639                     l3979:
 10287  0639  3001               	movlw	1
 10288  063A  00E7               	movwf	??_sprintf
 10289  063B  0867               	movf	??_sprintf,w
 10290  063C  1683               	bsf	3,5	;RP0=1, select bank1
 10291  063D  1303               	bcf	3,6	;RP1=0, select bank1
 10292  063E  07B5               	addwf	sprintf@sp^(0+128),f
 10293  063F  2EA7               	goto	l3987
 10294  0640                     l3981:
 10295                           
 10296                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpowers[(unsigned int)prec]) % 
      +                          10 + '0';
 10297  0640  3000               	movlw	0
 10298  0641  1283               	bcf	3,5	;RP0=0, select bank0
 10299  0642  1303               	bcf	3,6	;RP1=0, select bank0
 10300  0643  00A8               	movwf	___llmod@divisor+3
 10301  0644  3000               	movlw	0
 10302  0645  00A7               	movwf	___llmod@divisor+2
 10303  0646  3000               	movlw	0
 10304  0647  00A6               	movwf	___llmod@divisor+1
 10305  0648  300A               	movlw	10
 10306  0649  00A5               	movwf	___llmod@divisor
 10307  064A  1683               	bsf	3,5	;RP0=1, select bank1
 10308  064B  1303               	bcf	3,6	;RP1=0, select bank1
 10309  064C  0836               	movf	sprintf@prec^(0+128),w
 10310  064D  1283               	bcf	3,5	;RP0=0, select bank0
 10311  064E  1303               	bcf	3,6	;RP1=0, select bank0
 10312  064F  00E7               	movwf	??_sprintf
 10313  0650  3001               	movlw	1
 10314  0651                     u5795:
 10315  0651  1003               	clrc
 10316  0652  0DE7               	rlf	??_sprintf,f
 10317  0653  3EFF               	addlw	-1
 10318  0654  1D03               	skipz
 10319  0655  2E51               	goto	u5795
 10320  0656  1003               	clrc
 10321  0657  0D67               	rlf	??_sprintf,w
 10322  0658  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10323  0659  0084               	movwf	4
 10324  065A  160A  118A  200A  120A  118A  	fcall	stringdir
 10325  065F  00F2               	movwf	___lldiv@divisor
 10326  0660  160A  118A  200A  120A  118A  	fcall	stringdir
 10327  0665  00F3               	movwf	___lldiv@divisor+1
 10328  0666  160A  118A  200A  120A  118A  	fcall	stringdir
 10329  066B  00F4               	movwf	___lldiv@divisor+2
 10330  066C  160A  118A  200A  120A  118A  	fcall	stringdir
 10331  0671  00F5               	movwf	___lldiv@divisor+3
 10332  0672  1683               	bsf	3,5	;RP0=1, select bank1
 10333  0673  1303               	bcf	3,6	;RP1=0, select bank1
 10334  0674  082F               	movf	(sprintf@val+3)^(0+128),w
 10335  0675  00F9               	movwf	___lldiv@dividend+3
 10336  0676  082E               	movf	(sprintf@val+2)^(0+128),w
 10337  0677  00F8               	movwf	___lldiv@dividend+2
 10338  0678  082D               	movf	(sprintf@val+1)^(0+128),w
 10339  0679  00F7               	movwf	___lldiv@dividend+1
 10340  067A  082C               	movf	sprintf@val^(0+128),w
 10341  067B  00F6               	movwf	___lldiv@dividend
 10342  067C  160A  118A  2223  120A  118A  	fcall	___lldiv
 10343  0681  0875               	movf	?___lldiv+3,w
 10344  0682  1283               	bcf	3,5	;RP0=0, select bank0
 10345  0683  1303               	bcf	3,6	;RP1=0, select bank0
 10346  0684  00AC               	movwf	___llmod@dividend+3
 10347  0685  0874               	movf	?___lldiv+2,w
 10348  0686  00AB               	movwf	___llmod@dividend+2
 10349  0687  0873               	movf	?___lldiv+1,w
 10350  0688  00AA               	movwf	___llmod@dividend+1
 10351  0689  0872               	movf	?___lldiv,w
 10352  068A  00A9               	movwf	___llmod@dividend
 10353  068B  160A  118A  2174  120A  118A  	fcall	___llmod
 10354  0690  1283               	bcf	3,5	;RP0=0, select bank0
 10355  0691  1303               	bcf	3,6	;RP1=0, select bank0
 10356  0692  0825               	movf	?___llmod,w
 10357  0693  3E30               	addlw	48
 10358  0694  00E8               	movwf	??_sprintf+1
 10359  0695  0868               	movf	??_sprintf+1,w
 10360  0696  1683               	bsf	3,5	;RP0=1, select bank1
 10361  0697  1303               	bcf	3,6	;RP1=0, select bank1
 10362  0698  00B8               	movwf	sprintf@c^(0+128)
 10363  0699                     l3983:
 10364                           
 10365                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
 10366  0699  0838               	movf	sprintf@c^(0+128),w
 10367  069A  1283               	bcf	3,5	;RP0=0, select bank0
 10368  069B  1303               	bcf	3,6	;RP1=0, select bank0
 10369  069C  00E7               	movwf	??_sprintf
 10370  069D  1683               	bsf	3,5	;RP0=1, select bank1
 10371  069E  1303               	bcf	3,6	;RP1=0, select bank1
 10372  069F  0835               	movf	sprintf@sp^(0+128),w
 10373  06A0  0084               	movwf	4
 10374  06A1  1283               	bcf	3,5	;RP0=0, select bank0
 10375  06A2  1303               	bcf	3,6	;RP1=0, select bank0
 10376  06A3  0867               	movf	??_sprintf,w
 10377  06A4  1383               	bcf	3,7	;select IRP bank0
 10378  06A5  0080               	movwf	0
 10379  06A6  2E39               	goto	l3979
 10380  06A7                     l3987:
 10381                           
 10382                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
 10383  06A7  30FF               	movlw	255
 10384  06A8  1683               	bsf	3,5	;RP0=1, select bank1
 10385  06A9  1303               	bcf	3,6	;RP1=0, select bank1
 10386  06AA  07B6               	addwf	sprintf@prec^(0+128),f
 10387  06AB  1803               	skipnc
 10388  06AC  0AB7               	incf	(sprintf@prec+1)^(0+128),f
 10389  06AD  30FF               	movlw	255
 10390  06AE  07B7               	addwf	(sprintf@prec+1)^(0+128),f
 10391  06AF  0A36               	incf	sprintf@prec^(0+128),w
 10392  06B0  1D03               	skipz
 10393  06B1  2EB6               	goto	u5801
 10394  06B2  0A37               	incf	(sprintf@prec+1)^(0+128),w
 10395  06B3  1D03               	btfss	3,2
 10396  06B4  2EB6               	goto	u5801
 10397  06B5  2EB7               	goto	u5800
 10398  06B6                     u5801:
 10399  06B6  2E40               	goto	l3981
 10400  06B7                     u5800:
 10401  06B7                     l3989:
 10402                           
 10403                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
 10404  06B7  3001               	movlw	1
 10405  06B8  1283               	bcf	3,5	;RP0=0, select bank0
 10406  06B9  07DE               	addwf	sprintf@f,f
 10407  06BA  30FF               	movlw	-1
 10408  06BB  075E               	addwf	sprintf@f,w
 10409  06BC  0084               	movwf	4
 10410  06BD  160A  118A  200A  120A  118A  	fcall	stringdir
 10411  06C2  00E7               	movwf	??_sprintf
 10412  06C3  0867               	movf	??_sprintf,w
 10413  06C4  1683               	bsf	3,5	;RP0=1, select bank1
 10414  06C5  1303               	bcf	3,6	;RP1=0, select bank1
 10415  06C6  00B8               	movwf	sprintf@c^(0+128)
 10416  06C7  0838               	movf	sprintf@c^(0+128),w
 10417  06C8  1D03               	btfss	3,2
 10418  06C9  2ECB               	goto	u5811
 10419  06CA  2ECE               	goto	u5810
 10420  06CB                     u5811:
 10421  06CB  120A  158A  2D26   	goto	l3711
 10422  06CE                     u5810:
 10423  06CE                     l3991:
 10424                           
 10425                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10426  06CE  1683               	bsf	3,5	;RP0=1, select bank1
 10427  06CF  1303               	bcf	3,6	;RP1=0, select bank1
 10428  06D0  0835               	movf	sprintf@sp^(0+128),w
 10429  06D1  0084               	movwf	4
 10430  06D2  1383               	bcf	3,7	;select IRP bank0
 10431  06D3  0180               	clrf	0
 10432  06D4                     l427:
 10433  06D4  0008               	return
 10434  06D5                     __end_of_sprintf:

Data Sizes:
    Strings     53
    Constant    118
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     77      79
    BANK1            80     28      54
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_2(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> pantalla(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    USART_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> pantalla(BANK1[20]), STR_1(CODE[19]), 

    LCD_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[16]), pantalla(BANK1[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___lltoft
    _scale->___bmul
    ___awdiv->___awmod
    _fround->___bmul
    ___lwdiv->___lwmod
    ___bmul->___awdiv
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftsub->___lltoft
    _USART_Write_String->_USART_Write
    _LeerADC->___awtoft
    ___ftmul->___awtoft
    ___ftmul->___bmul
    ___awtoft->___ftpack
    _LCD_clear->_LCD_Command
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Command
    _LCD_Init->_LCD_Command
    _LCD_Command->_LCD_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___bmul->___awdiv
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _LeerADC->___ftmul
    ___ftmul->___bmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   48747
                                             25 BANK1      3     3      0
                       _Init_Receive
                      _Init_Transmit
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                          _LCD_clear
                            _LeerADC
                      _Set_Baud_Rate
                        _USART_Write
                 _USART_Write_String
                            _initADC
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    36      9   40244
                                             62 BANK0     15     6      9
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    8145
                                             27 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     932
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1042
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              16    13      3    7000
                                             27 BANK0     16    13      3
                             ___bmul
                            ___ftmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     477
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     631
                                              8 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     766
                                             10 COMMON     1     1      0
                                              8 BANK0      3     2      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     584
                                              2 COMMON     6     0      6
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              2 COMMON     6     0      6
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1382
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2505
                                             10 COMMON     1     1      0
                                              0 BANK0      5     1      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     752
                                              5 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     480
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             36 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4049
                                             56 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3823
                                             43 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              2 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     560
                                              2 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Write_String                                   4     2      2     218
                                              3 COMMON     4     2      2
                        _USART_Write
 ---------------------------------------------------------------------------------
 (2) _USART_Write                                          1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Set_Baud_Rate                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LeerADC                                              9     6      3    7402
                                             27 BANK0      9     6      3
                         _ADC_Select
                           ___awtoft
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    4776
                                             11 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2536
                                             10 COMMON     1     1      0
                                              0 BANK0      5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2338
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _ADC_Select                                           3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            0     0      0      62
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2     322
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0      62
                                              3 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     384
                                              6 COMMON     4     3      1
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      93
                                              6 COMMON     2     2      0
                        _LCD_Command
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      62
                                              3 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_Transmit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Receive                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Receive
   _Init_Transmit
   _LCD_Init
     _LCD_Command
       _LCD_Port
     _LCD_Port
   _LCD_Set_Cursor
     _LCD_Command
       _LCD_Port
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _LCD_clear
     _LCD_Command
       _LCD_Port
   _LeerADC
     _ADC_Select
     ___awtoft
       ___ftpack
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
   _Set_Baud_Rate
   _USART_Write
   _USART_Write_String
     _USART_Write
   _initADC
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      91       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1C      36       7       67.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      91      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 18:05:36 2021

     __size_of_Init_Transmit 000E                            pc 0002               ___bmul@product 0029  
               ?_LCD_Command 0070                           l92 07D6                           _V1 00BF  
                         _V2 00BC                           l99 1ECE                 ___awdiv@sign 0025  
                         fsr 0004          ___wmul@multiplicand 0074                 ___ftadd@exp1 0057  
               ___ftadd@exp2 0056                 ___ftadd@sign 0055                          l102 10F3  
                        l121 1D6C                          l105 1124                          l130 1173  
                        l202 1D66                          l211 1D87                          l124 1DE0  
                        l220 1EA2                          l205 07FD                          l118 10DC  
                        l142 1FB9                          l214 1D91                          l127 1D9E  
                        l208 1D7B                          l136 1E04                          l157 1DAB  
                        l431 1E36                          l335 0D17                          l328 0A5C  
                        l177 08B3                          l433 1E4E                          l427 06D4  
                        l357 0E0A                          l614 12F3                          l390 02B9  
                        l640 1679                          l720 147B                          l633 1E77  
                        l641 168C                          l457 0817                          l802 11C9  
                        l810 1F01                          l467 128A                          l627 1222  
                        l660 1330                          l740 159D                          l716 14B8  
                        l637 16C9                          l717 142A                          l397 030B  
                        l734 1F39                          l751 1D85                          l727 14AB  
                        l656 136F                          l680 1715                          l648 16BC  
                        l681 171F                          l761 13FB                          l682 1724  
                        l667 134B                          l691 1795                          l668 1355  
                        l669 136F                          l677 17FF                          l757 1E29  
                        l768 13DE                          l873 1FFF                          l883 1F73  
                        l893 1DBD                          _RE0 0048                          _RE1 0049  
                        _ISR 1D6D          __size_of_ADC_Select 009C                          fsr0 0004  
                        indf 0000                 ___awmod@sign 0078                         ?_ISR 0070  
             _LCD_Set_Cursor 1DE1                         l2201 12DF                         l2203 12E5  
                       l2211 11CA                         l2205 12EA                         l2221 11DA  
                       l2213 11CB                         l2207 12EF                         l2231 11F3  
                       l2223 11DF                         l2215 11CF                         l4001 1DE2  
                       l2401 1F4A                         l2233 11F7                         l2225 11E5  
                       l2241 1214                         l2217 11D4                         l4011 1DFE  
                       l4003 1DE7                         l2411 1F69                         l2403 1F4E  
                       l2171 1292                         l2243 1219                         l2235 1201  
                       l2227 11E8                         l2219 11D6                         l4005 1DEC  
                       l4013 1F74                         l2421 0819                         l3301 1300  
                       l2405 1F52                         l2413 1F6F                         l2181 12A6  
                       l2173 1297                         l2245 121E                         l2237 1207  
                       l2229 11EF                         l4021 06D5                         l4007 1DF3  
                       l4015 1F79                         l2431 0834                         l2423 081A  
                       l3311 131E                         l2407 1F5C                         l2191 12BC  
                       l2183 12A8                         l2175 1299                         l2167 128B  
                       l2239 120E                         l4031 0728                         l4023 06EE  
                       l4009 1DF9                         l4017 1F95                         l2441 0857  
                       l2433 083B                         l2425 081F                         l3321 134F  
                       l3313 1328                         l3305 1307                         l2417 1D87  
                       l3401 17BD                         l2409 1F62                         l2193 12C0  
                       l2185 12AE                         l2177 129D                         l2169 128E  
                       l4041 0787                         l4033 0731                         l4025 06F3  
                       l4019 1F9D                         l2451 087A                         l2443 085E  
                       l2435 0842                         l2427 0826                         l3323 1357  
                       l3315 1337                         l3307 1313                         l2419 1D8D  
                       l3411 17E4                         l3403 17BE                         l2611 159E  
                       l3331 0804                         l2195 12D1                         l2187 12B1  
                       l2179 12A2                         l4115 0E26                         l4051 07B1  
                       l4043 078D                         l4035 0737                         l4027 06F8  
                       l3501 10D8                         l4117 0887                         l2445 0865  
                       l2437 0849                         l2429 082D                         l3325 1369  
                       l3317 1341                         l3309 131A                         l3421 14D3  
                       l3405 17CE                         l2613 15B8                         l3341 0816  
                       l3333 0805                         l2197 12D7                         l2189 12B8  
                       l4061 07DC                         l4053 07BA                         l4045 0793  
                       l4037 073D                         l4029 0710                         l3511 1DD4  
                       l3503 1DBF                         l2447 086C                         l2439 0850  
                       l2455 087F                         l3327 136E                         l3319 1345  
                       l3431 1519                         l3423 14E4                         l3415 14B9  
                       l3407 17D2                         l3351 16F9                         l2631 161D  
                       l2623 15DA                         l3335 0809                         l2551 1DB4  
                       l2199 12D8                         l4055 07C0                         l4063 07DE  
                       l4047 0798                         l4039 077E                         l3329 1D68  
                       l3513 1DD7                         l3505 1DC2                         l2449 0873  
                       l3441 152E                         l3433 151A                         l3417 14CC  
                       l2721 1F24                         l2713 1F02                         l3409 17E2  
                       l3361 1716                         l3345 16CA                         l2641 1686  
                       l2633 1621                         l2625 160E                         l2617 15C1  
                       l3601 1462                         l3337 080D                         l2553 1DBA  
                       l4057 07C8                         l4049 07A0                         l3507 1DC8  
                       l3451 1558                         l3443 153E                         l3435 1520  
                       l3427 14EB                         l2723 1F26                         l2715 1F06  
                       l3371 172B                         l3363 171A                         l3355 1700  
                       l3347 16E9                         l2643 1690                         l2651 16AA  
                       l2635 162A                         l2627 1616                         l3603 146C  
                       l3339 080F                         l2395 1F3A                         l3515 08B7  
                       l2555 1DBC                         l2547 1DAD                         l4059 07CE  
                       l3509 1DCB                         l3461 1582                         l3453 155C  
                       l3445 1546                         l3437 1526                         l3429 1518  
                       l3701 10F0                         l2821 1EA3                         l2725 1F28  
                       l2717 1F13                         l2733 1D7C                         l3381 175D  
                       l3373 1738                         l3365 171E                         l3357 1705  
                       l3349 16EF                         l2637 1656                         l2629 1618  
                       l3605 146D                         l2397 1F40                         l3533 0A29  
                       l3517 08BD                         l3525 099A                         l2549 1DAE  
                       l3541 0A66                         l3631 1E50                         l3455 156C  
                       l3447 154E                         l3439 152A                         l3703 10F7  
                       l2831 1EB9                         l2823 1EAB                         l2727 1F36  
                       l2719 1F17                         l2735 1D83                         l3391 1783  
                       l3375 1742                         l3383 1764                         l3367 1723  
                       l3359 170B                         l2751 1383                         l2671 1E44  
                       l2663 1E2A                         l2639 1678                         l3623 14A0  
                       l3615 1487                         l3607 1475                         l3471 1FC7  
                       l2399 1F43                         l3527 09A0                         l3519 0980  
                       l3551 0B32                         l3543 0A6D                         l3711 0D26  
                       l3297 12F4                         l3633 1E56                         l3457 1574  
                       l3449 1554                         l3705 111E                         l2841 1D9F  
                       l2833 1EC0                         l2825 1EB1                         l2729 1F38  
                       l2737 1D85                         l3393 178F                         l3385 176A  
                       l3377 1748                         l3369 1725                         l3641 1E05  
                       l2761 13A5                         l2681 1238                         l2673 1E4A  
                       l2665 1E2C                         l2657 16B1                         l2649 1698  
                       l3625 14B0                         l3609 147F                         l3617 1499  
                       l3481 1FED                         l3473 1FCE                         l3465 1FBA  
                       l3529 0A0F                         l3561 0BC6                         l3537 0A60  
                       l3801 0FB1                         l3721 0D56                         l3713 0D2C  
                       l3491 10C5                         l3299 12F9                         l3635 1E5B  
                       l3459 157C                         l2843 1DA6                         l2835 1EC3  
                       l2827 1EB5                         l3395 1799                         l3387 1774  
                       l3379 1751                         l3643 1E0E                         l2763 13AC  
                       l2755 138C                         l2691 1272                         l2683 1245  
                       l3651 117E                         l2667 1E30                         l2659 16C1  
                       l3483 1FEE                         l3475 1FD2                         l3467 1FBE  
                       l3555 0B9E                         l3539 0A64                         l3811 0058  
                       l3803 0FEA                         l3723 0D5A                         l3731 0DA0  
                       l3715 0D39                         l3493 10C8                         l3637 1E5D  
                       l3629 1E4F                         l2861 1D62                         l2845 1DA8  
                       l2837 1EC6                         l2829 1EB6                         l3397 17A9  
                       l3389 177A                         l3645 1E10                         l2781 13D3  
                       l2773 13BA                         l2765 13AE                         l2757 139E  
                       l2749 1370                         l2693 1273                         l2685 1249  
                       l2677 1223                         l3661 11B2                         l3653 1181  
                       l2669 1E3D                         l3485 1FF5                         l3477 1FD6  
                       l3469 1FC4                         l3573 0CF7                         l3549 0B2B  
                       l3901 0486                         l3821 0098                         l3813 006F  
                       l3805 0021                         l3741 0DD1                         l3733 0DAE  
                       l3725 0D6F                         l3717 0D40                         l3709 0D1B  
                       l2863 07F0                         l3495 10CE                         l2839 1EC9  
                       l3399 17AD                         l2783 13E3                         l2767 13B2  
                       l2775 13CC                         l2759 139F                         l2695 127C  
                       l2687 1252                         l2679 1235                         l3663 11BB  
                       l3655 118E                         l3671 1ED6                         l3591 1431  
                       l3583 1418                         l3479 1FE7                         l3487 1FFB  
                       l3567 0C84                         l3559 0BBF                         l3903 048E  
                       l3823 00B3                         l3815 0078                         l3807 002A  
                       l3911 04AE                         l3743 0DEC                         l3735 0DB1  
                       l3727 0D8A                         l3719 0D44                         l2865 1D74  
                       l3681 1129                         l3497 10D1                         l2785 13E8  
                       l2689 1264                         l2697 1282                         l3657 1192  
                       l3665 11C1                         l3649 1174                         l3673 1EE3  
                       l3593 1440                         l3577 13FC                         l3569 0C8B  
                       l3921 04E4                         l3913 04C9                         l3905 049B  
                       l3841 018E                         l3817 0080                         l3809 0049  
                       l3825 00BA                         l3761 0E54                         l3753 0E0E  
                       l3745 0DF2                         l3737 0DB7                         l3729 0D90  
                       l3683 112F                         l3499 10D5                         l3691 1D92  
                       l2883 1E78                         l2787 13F3                         l3659 11A4  
                       l3675 1EE9                         l3595 1442                         l3579 140F  
                       l3923 04EA                         l3915 04D1                         l3907 04A1  
                       l3851 01EB                         l3843 01BD                         l3835 0139  
                       l3827 0135                         l3771 0E95                         l3763 0E5F  
                       l3755 0E34                         l3739 0DBC                         l3747 0E04  
                       l3685 1138                         l3693 10E0                         l2885 1E7A  
                       l3669 1ECF                         l3597 144B                         l3589 142B  
                       l3941 055A                         l3933 04FA                         l3925 04F2  
                       l3917 04D5                         l3909 04A7                         l3861 0220  
                       l3845 01C3                         l3829 0137                         l3781 0EE6  
                       l3773 0E99                         l3765 0E67                         l3757 0E4A  
                       l3749 0E08                         l3687 1146                         l3679 1125  
                       l3695 10E0                         l2887 1E8B                         l3599 1454  
                       l3951 05A3                         l3943 0565                         l3927 04F8  
                       l3919 04D9                         l3871 02D0                         l3863 0227  
                       l3847 01D5                         l3855 01F2                         l3839 0180  
                       l3791 0F65                         l3783 0F09                         l3775 0EA0  
                       l3767 0E7C                         l3759 0E50                         l3689 114C  
                       l3697 10E6                         l2889 1E8F                         l3961 05D4  
                       l3953 05AB                         l3945 0578                         l3937 0541  
                       l3881 0301                         l3873 02D6                         l3865 0266  
                       l3857 0201                         l3849 01DE                         l3793 0F7A  
                       l3785 0F0D                         l3777 0ECD                         l3769 0E91  
                       l3699 10E9                         l3971 060A                         l3963 05DF  
                       l3955 05B1                         l3947 0589                         l3939 054F  
                       l3891 034C                         l3883 031C                         l3875 02DC  
                       l3867 02A5                         l3859 0215                         l3795 0F83  
                       l3787 0F13                         l3779 0ED3                         l3981 0640  
                       l3973 0610                         l3965 05F3                         l3957 05C7  
                       l3949 0591                         l3893 0399                         l3885 0321  
                       l3877 02E9                         l3869 02C3                         l3797 0F9A  
                       l3789 0F2C                         l3983 0699                         l3975 061C  
                       l3967 05F7                         l3959 05D0                         l3895 03D8  
                       l3887 032E                         l3879 02F8                         l3799 0FA2  
                       l3991 06CE                         l3977 062E                         l3969 05FD  
                       l3897 0417                         l3889 0334                         l3979 0639  
                       l3987 06A7                         l3899 042B                         l3989 06B7  
                       STR_1 1086                         STR_2 1099                         STR_3 10AB  
                       u3000 1F52                         u3001 1F51                         u3010 1F5C  
                       u3011 1F5B                         u3030 1F6F                         u3031 1F6E  
                       u3015 1F58                         u3040 1D8D                         u3120 1DB4  
                       u2400 12D1                         u3041 1D8C                         u3025 1F63  
                       u3121 1DB3                         u2401 12D0                         u3130 1DBA  
                       u3131 1DB9                         u3300 1656                         u2420 12E5  
                       u2340 1292                         u3301 1655                         u2421 12E4  
                       u2405 12CD                         u2341 1291                         u3310 168C  
                       u2430 12EA                         u2350 129D                         u2510 1214  
                       u3311 168B                         u2431 12E9                         u2415 12D9  
                       u2351 129C                         u2511 1213                         u3320 1690  
                       u2360 12AE                         u2520 1219                         u2440 11CF  
                       u5000 0A6D                         u3321 168F                         u3305 1652  
                       u2361 12AD                         u2521 1218                         u2505 1208  
                       u2441 11CE                         u5001 0A6C                         u3330 1697  
                       u2450 11DA                         u5010 0B32                         u3331 1696  
                       u2451 11D9                         u5011 0B31                         u3420 1E4A  
                       u5100 147F                         u2380 12C0                         u2460 11E5  
                       u5020 0BC6                         u3421 1E49                         u3405 1E37  
                       u5101 147E                         u2381 12BF                         u2461 11E4  
                       u5021 0BC5                         u3510 1F06                         u3430 1235  
                       u3350 16A9                         u3270 15B8                         u5110 1486  
                       u5030 0C8B                         u3511 1F05                         u3431 1234  
                       u3415 1E3E                         u3351 16A8                         u3271 15B7  
                       u5111 1485                         u2375 12B2                         u5031 0C8A  
                       u3520 1F17                         u3360 16B0                         u3280 15D9  
                       u5040 140F                         u2480 11F7                         u3521 1F16  
                       u3361 16AF                         u3345 1699                         u3281 15D8  
                       u5041 140E                         u2481 11F6                         u4410 1319  
                       u3530 1F36                         u3610 13CB                         u3450 1249  
                       u5210 1192                         u5130 1498                         u5050 1429  
                       u2490 1201                         u4411 1318                         u3531 1F35  
                       u3611 13CA                         u3451 1248                         u5211 1191  
                       u5131 1497                         u5051 1428                         u2395 12C1  
                       u2491 1200                         u2475 11E9                         u3540 1D83  
                       u3620 13D2                         u5220 11A4                         u3380 16C1  
                       u5140 149F                         u4500 0809                         u5300 0DA0  
                       u4405 130C                         u3541 1D82                         u3621 13D1  
                       u3605 13BB                         u3445 123A                         u5221 11A3  
                       u5205 1183                         u3381 16C0                         u5141 149E  
                       u5125 1488                         u4501 0808                         u5301 0D9F  
                       u4430 1336                         u3470 1264                         u3390 1E30  
                       u5070 1462                         u4510 0816                         u5310 0DAE  
                       u4431 1335                         u3535 1F32                         u3471 1263  
                       u3391 1E2F                         u3375 16B3                         u3295 1623  
                       u5071 1461                         u4511 0815                         u2495 11FD  
                       u5311 0DAD                         u4600 1738                         u4520 16E9  
                       u3640 13E3                         u3560 1383                         u5240 11C1  
                       u5160 14B0                         u5400 0F9A                         u5320 0E03  
                       u4425 1329                         u4601 1737                         u4521 16E8  
                       u3641 13E2                         u3561 1382                         u3465 124B  
                       u5241 11C0                         u5225 11A0                         u5161 14AF  
                       u5065 144D                         u5401 0F99                         u5321 0E02  
                       u4450 1345                         u5170 1E56                         u4530 16EF  
                       u3650 13E8                         u3570 1397                         u3490 1282  
                       u5090 147B                         u5410 0FB1                         u5330 0E4A  
                       u4451 1344                         u5171 1E55                         u4531 16EE  
                       u3651 13E7                         u3635 13D5                         u3491 1281  
                       u3475 1260                         u5235 11B3                         u5155 14A2  
                       u5091 147A                         u5075 145E                         u5411 0FB0  
                       u5331 0E47                         u4460 134B                         u4380 12F9  
                       u4620 1748                         u4540 16F9                         u5180 1E0E  
                       u3580 13B2                         u5260 1EE9                         u5500 01BD  
                       u5420 0021                         u5340 0E50                         u4461 134A  
                       u4445 133A                         u4381 12F8                         u4621 1747  
                       u4541 16F8                         u5181 1E0D                         u3581 13B1  
                       u3485 1274                         u5261 1EE8                         u5085 146E  
                       u5501 01BC                         u5421 0FFA                         u5341 0E4F  
                       u4470 134F                         u4390 1300                         u5270 10F7  
                       u3750 1EA2                         u4710 1795                         u4630 1750  
                       u4550 1705                         u3590 13B9                         u5190 117E  
                       u5510 01D5                         u5430 002A                         u5350 0E7C  
                       u4471 134E                         u4391 12FF                         u5271 10F6  
                       u3751 1EA1                         u4711 1794                         u4631 174F  
                       u4615 1739                         u4551 1704                         u3591 13B8  
                       u3575 1393                         u5191 117D                         u5255 1ED7  
                       u5511 01D4                         u5431 0029                         u5415 0FAD  
                       u5351 0E7B                         u4480 1360                         u4800 152E  
                       u4720 1799                         u4560 170B                         u5520 0201  
                       u5440 0049                         u5360 0EA0                         u5280 0D2C  
                       u4801 152D                         u4721 1798                         u4705 1784  
                       u4561 170A                         u5521 0200                         u5441 0048  
                       u5425 0FF5                         u5361 0E9F                         u5281 0D2B  
                       u4490 136E                         u4730 17AD                         u4650 1763  
                       u4570 1715                         u5610 048D                         u5530 0215  
                       u5450 0058                         u5370 0EB6                         u5290 0D56  
                       u4491 136D                         u4811 1537                         u4731 17AC  
                       u4651 1762                         u4571 1714                         u5611 048C  
                       u5531 0214                         u5451 0057                         u5291 0D55  
                       u4812 153E                         u4660 176A                         u4580 171E  
                       u4900 1FC4                         u2980 1F40                         u5700 0578  
                       u5620 04AD                         u5460 006F                         u5380 0F0D  
                       _RCIF 0065                         u4485 135C                         u4741 17C7  
                       u4661 1769                         u4645 1752                         u4581 171D  
                       u4901 1FC3                         u2981 1F3F                         u5701 0577  
                       u5621 04AC                         u5605 0430                         u5525 01FD  
                       u5461 006E                         u5381 0F0C                         u4750 17D2  
                       u4742 17CE                         u4590 1723                         u5710 0591  
                       u5630 04D5                         u5550 02C2                         u5390 0F7A  
                       u4751 17D1                         u4591 1722                         u5711 0590  
                       u5631 04D4                         u5551 02C1                         u5455 0054  
                       u5391 0F79                         u5375 0EB1                         u4840 1554  
                       u4760 14CC                         u4680 177A                         u4920 1FD6  
                       u5800 06B7                         u5720 05A3                         u5640 04EA  
                       u5560 02E9                         u5480 017F                         u4841 1553  
                       u4825 153F                         u4761 14CB                         u4681 1779  
                       u4921 1FD5                         u5801 06B6                         u5721 05A2  
                       u5705 0574                         u5641 04E9                         u5561 02E8  
                       u5545 022C                         u5481 017E                         u4850 155C  
                       u4770 14E4                         u4690 1782                         u5810 06CE  
                       u5730 05B1                         u5650 04F2                         u5570 02F8  
                       u5490 018E                         u4851 155B                         u4835 1547  
                       u4771 14E3                         u4691 1781                         u4675 176B  
                       u4915 1FC8                         u2995 1F44                         u5811 06CB  
                       u5731 05B0                         u5651 04F1                         u5571 02F7  
                       u5491 018D                         u5475 013E                         u5820 1DE7  
                       u4780 14FB                         u4940 1FE7                         u5740 05C7  
                       u5580 0321                         i1l85 1D6D                         u5821 1DE6  
                       u4861 1565                         u4941 1FE6                         u5741 05C6  
                       u5581 0320                         u5565 02E5                         u5485 017B  
                       u5830 1DF9                         u4862 156C                         u4790 150D  
                       u5750 05DF                         u5670 0540                         u5831 1DF8  
                       u4935 1FD7                         u5751 05DE                         u5671 053F  
                       u5575 02F4                         u5840 1F83                         u4960 1FFB  
                       u5760 05FD                         u5680 054F                         u4785 14F7  
                       u4961 1FFA                         u4945 1FE3                         u5761 05FC  
                       u5745 05C3                         u5681 054E                         u5665 04FF  
                       u5850 1FA7                         u4890 1582                         u4970 08BD  
                       u5770 061C                         u5690 055A                         u4891 1581  
                       u4875 156D                         u4795 1509                         u4955 1FEF  
                       u4971 08BC                         u5771 061B                         u5755 05DB  
                       u5691 0559                         u5675 053C                         u5595 039E  
                       u5907 07E6                         u5860 1FB9                         u4980 09A0  
                       u5780 062E                         u5861 1FB8                         u4885 1575  
                       u5917 10ED                         u4981 099F                         u5781 062D  
                       u4990 0A64                         u5870 07C0                         u5927 10D3  
                       u4991 0A63                         u5695 0556                         u5871 07BF  
                       u5880 07CE                         u5937 10DA                         u5881 07CD  
                       u5890 07DC                         u5947 1133                         u5795 0651  
                       u5891 07DB                         u5957 1142                         u5967 1150  
                       u5977 1DCF                         u5987 1DDB                         _TRMT 04C1  
          ?_LCD_Write_String 0075  __size_of_USART_Write_String 002B                         _main 06D5  
               ___ftpack@arg 0072                 ___ftpack@exp 0075                         btemp 007E  
                       start 000C           ??_LCD_Write_String 0077           __size_of_LCD_clear 000D  
               _sprintf$1172 00A0              __end_of_LeerADC 1125            ___bmul@multiplier 002A  
               ___ftmul@cntr 0039                 ___ftmul@sign 003A                ?_Init_Receive 0070  
                      ??_ISR 0070                 ___fttol@exp1 0051                 ___fttol@lval 004D  
           __end_of_LCD_Init 1174             __end_of_LCD_Port 1D6D                        ?_main 0070  
            __end_of___awdiv 12F4              __end_of___ftadd 1800              __end_of___awmod 1223  
            __end_of___ftneg 1D86                        _ANSEL 0188              __end_of___lldiv 128B  
            __end_of___ftmul 159E              ___awdiv@divisor 0020              __end_of___llmod 11CA  
            __end_of___ftsub 1E2A              __end_of___fttol 13FC              __end_of___lwdiv 2000  
            __end_of___lwmod 1F74              ___awdiv@counter 0024                        _RCREG 001A  
                      _SPBRG 0099                        _PORTA 0005                        _PORTB 0006  
                      _PORTC 0007                        _PORTD 0008                        _PORTE 0009  
                      _TRISA 0085                        _TRISB 0086                        _TRISC 0087  
                      _TRISD 0088                        _TRISE 0089                        _TXREG 0019  
               ___lltoft@exp 0024       __end_of_LCD_Set_Cursor 1E05                _Init_Transmit 07F0  
            __end_of_initADC 1DAC                ___awtoft@sign 007A              __end_of_dpowers 1086  
                      _scale 0A5D              __end_of_isdigit 1DBE                ___ftpack@sign 0076  
                      _setup 1EA3                 LCD_Command@a 0075                        pclath 000A  
                      status 0003                        wtemp0 007E              __end_of_sprintf 06D5  
               USART_Write@a 0072               _LCD_Write_Char 10C4              __initialization 000F  
             ??_Init_Receive 0072                 __end_of_main 07F0                       ??_main 00B9  
              ___fttol@sign1 004C         __size_of__tdiv_to_l_ 00BD            __end_of_LCD_clear 1D9F  
             ?_Init_Transmit 0070              ?_LCD_Set_Cursor 0076                       _ADCON0 001F  
                     _ADCON1 009F             ___llmod@dividend 0029                       ?_scale 003B  
                     _ADRESH 001E             ___awdiv@dividend 0022                       ?_setup 0070  
           __end_of___awtoft 1E78             __end_of___ftpack 1370                       _ANSELH 0189  
           __end_of___lltoft 1F02                 ??_ADC_Select 0072                    ??_LeerADC 003E  
     __end_of_LCD_Write_Char 10DD             __end_of__powers_ 1037                       ___bmul 0801  
                     ___ftge 1F02                       ___wmul 1E2A                    ??___awdiv 0079  
                  ??___ftadd 0051                    ??___awmod 0076                    ??___ftneg 0075  
                  ??___lldiv 007A                    ??___ftmul 0031                    ??___llmod 002D  
                  ??___ftsub 007B                    ??___fttol 0048                    ??___lwdiv 0078  
                  ??___lwmod 0076                       _fround 08B4             ___awdiv@quotient 0026  
            ___awmod@divisor 0072              ___awmod@counter 0077         __size_of_LCD_Command 0023  
                  ??_initADC 0072        ___ftmul@f3_as_product 0036                    ??_isdigit 0072  
         __end_of_ADC_Select 08B4                       saved_w 007E                    ??_sprintf 0067  
            LCD_Set_Cursor@a 0079              LCD_Set_Cursor@x 0078              LCD_Set_Cursor@y 0076  
    __end_of__initialization 001D                    ?_LCD_Init 0070                    ?_LCD_Port 0070  
                 ___ftadd@f1 004B                   ___ftadd@f2 004E                   ___ftge@ff1 0072  
                 ___ftge@ff2 0075              ?_LCD_Write_Char 0070                   ___ftneg@f1 0072  
                 ___awtoft@c 0020                 ?_USART_Write 0070          ___bmul@multiplicand 0028  
                 ___ftmul@f1 002B                   ___ftmul@f2 002E                   ___ftsub@f1 005B  
                 ___ftsub@f2 0058                   ___fttol@f1 0044               __pcstackCOMMON 0070  
                  LCD_Port@a 0072                   ___lltoft@c 0020                __end_of_scale 0D18  
              __end_of_setup 1ECF       __size_of_Set_Baud_Rate 0005              ??_Init_Transmit 0072  
                 __div_to_l_ 159E         __end_of_Init_Receive 1D7C              __div_to_l_@exp1 002D  
            __div_to_l_@cntr 002C                      ??_scale 003E              __div_to_l_@quot 0028  
               sprintf@width 00A6                      ??_setup 0072                   __pbssBANK0 006D  
                 __pbssBANK1 00BC                   ??_LCD_Init 0076                   ??_LCD_Port 0072  
              __div_to_l_@f1 0072                __div_to_l_@f2 0075                   __pmaintext 06D5  
                    ?___bmul 0028                      ?___ftge 0072                      ?___wmul 0072  
                 __pintentry 0004                      ?_fround 003B    __size_of_LCD_Write_String 0046  
                  ?___awtoft 0020                    ?___ftpack 0072                    ?___lltoft 0020  
 __end_of_USART_Write_String 1EA3                   __stringtab 1000                _Set_Baud_Rate 1D62  
                    _LeerADC 10DD            __end_of__npowers_ 105E                   _scale$1171 0040  
            __size_of___bmul 0017              __size_of___ftge 0038                      ___awdiv 128B  
                    ___ftadd 16CA                      ___awmod 11CA                      ___ftneg 1D7C  
                    ___lldiv 1223              __size_of___wmul 0025                      ___ftmul 14B9  
                    ___llmod 1174                      ___ftsub 1E05                      ___fttol 1370  
                    ___lwdiv 1FBA                      ___lwmod 1F3A                   ??___awtoft 0023  
                 ??___ftpack 0077              __size_of_fround 01A9                   ??___lltoft 007A  
           ??_LCD_Set_Cursor 0077                      __ptext1 0D18                      __ptext2 0A5D  
                    __ptext3 11CA                      __ptext4 128B                      __ptext5 1DAC  
                    __ptext6 08B4                      __ptext7 1F3A                      __ptext8 1FBA  
                    __ptext9 0801                      _initADC 1D9F                 __size_of_ISR 0007  
                ?__div_to_l_ 0072                      _dpowers 105E                      _isdigit 1DAC  
           ___awmod@dividend 0074                      _sprintf 0D18                      clrloop0 10BD  
                  _LCD_clear 1D92         end_of_initialization 001D               ?_Set_Baud_Rate 0070  
            ___lldiv@divisor 0072              ___lldiv@counter 0024                    _RCSTAbits 0018  
                    psplit$0 C0036         __size_of_USART_Write 000C               __tdiv_to_l_@f1 0072  
             __tdiv_to_l_@f2 0075                ??__tdiv_to_l_ 0020        __size_of_Init_Receive 0008  
                  _TRISCbits 0087                   ?_LCD_clear 0070            LCD_Write_String@a 0075  
          LCD_Write_String@i 0020             ??_LCD_Write_Char 0073                    _TXSTAbits 0098  
          __size_of_LCD_Init 004F          __size_of__div_to_l_ 012C            __size_of_LCD_Port 0006  
                ___ftmul@exp 0035                 _Init_Receive 1D74                ??_LCD_Command 0073  
             __end_of___bmul 0818               __end_of___ftge 1F3A               __end_of___wmul 1E4F  
           _LCD_Write_String 1F74            pnum$text1_split_1 0036               __end_of_fround 0A5D  
        start_initialization 000F                  __end_of_ISR 1D74          __end_of__tdiv_to_l_ 14B9  
            ??_Set_Baud_Rate 0072              ___llmod@divisor 0025              ___llmod@counter 002E  
                   ??___bmul 007A                     ??___ftge 0078                     ??___wmul 0076  
            LCD_Write_Char@a 0074                     ??_fround 003E                sprintf@tmpval 00A8  
                 fround@prec 004A            __size_of___awtoft 0029            __size_of___ftpack 007C  
        __end_of_LCD_Command 1DE1            __size_of___lltoft 0033                  __pbssCOMMON 007B  
      __end_of_Init_Transmit 07FE                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00A0                  ??_LCD_clear 0076                  sprintf@flag 00A4  
                sprintf@eexp 00B0                     ?_LeerADC 003B                  sprintf@fval 00B2  
                sprintf@prec 00B6             ___lwdiv@dividend 0022           _USART_Write_String 1E78  
                   ?___awdiv 0020                     ?___ftadd 004B                     ?___awmod 0072  
                   ?___ftneg 0072                     ?___lldiv 0072                     ?___ftmul 002B  
                   ?___llmod 0025                     ?___ftsub 0058                    __npowers_ 1037  
                   ?___fttol 0044                     ?___lwdiv 0020                     ?___lwmod 0072  
                  __pstrings 1000          ?_USART_Write_String 0073                  __tdiv_to_l_ 13FC  
                   ?_initADC 0070                 ??__div_to_l_ 0020                     ?_isdigit 0070  
           ___lwdiv@quotient 0025                     ?_sprintf 005E               __size_of_scale 02BB  
             __size_of_setup 002C                  ADC_Select@a 0074         ??_USART_Write_String 0075  
          interrupt_function 0004                     _LCD_Init 1125               ___wmul@product 0076  
                   _LCD_Port 1D67                    clear_ram0 10BC                     _PIE1bits 008C  
                   _PIR1bits 000C           __end_of__div_to_l_ 16CA                    _valor_adc 007B  
                   LeerADC@a 0041                     LeerADC@x 0040                  _LCD_Command 1DBE  
                 _ADCON0bits 001F                  __stringbase 100F            ___wmul@multiplier 0072  
   __end_of_LCD_Write_String 1FBA                   _ADC_Select 0818             __size_of_LeerADC 0048  
              ??_USART_Write 0072             __size_of___awdiv 0069             __size_of___ftadd 0136  
           __size_of___awmod 0059             __size_of___ftneg 000A             __size_of___lldiv 0068  
           __size_of___ftmul 00E5             __size_of___llmod 0056             __size_of___ftsub 0025  
           __size_of___fttol 008C             __size_of___lwdiv 0046             __size_of___lwmod 003A  
                   ___awtoft 1E4F                     ___ftpack 12F4                  _fround$1170 0044  
                _fround$1169 0047           __end_of__stringtab 1010                     ___lltoft 1ECF  
                _isdigit$978 0072                   sprintf@val 00AC             __size_of_initADC 000D  
           __size_of_isdigit 0012              ___lwdiv@divisor 0020              ___lwdiv@counter 0024  
                   __ptext10 13FC                     __ptext11 159E                     __ptext20 1F02  
                   __ptext12 1E2A                     __ptext21 1EA3                     __ptext13 1ECF  
                   __ptext30 0818                     __ptext22 1D9F                     __ptext14 1174  
                   __ptext31 1D92                     __ptext23 1E78                     __ptext15 1223  
                   __ptext40 1D6D                     __ptext32 1F74                     __ptext24 1D86  
                   __ptext16 1370                     __ptext33 10C4                     __ptext25 1D62  
                   __ptext17 1E05                     __ptext34 1DE1                     __ptext26 10DD  
                   __ptext18 16CA                     __ptext35 1125                     __ptext27 14B9  
                   __ptext19 1D7C                     __ptext36 1DBE                     __ptext28 1E4F  
                   __ptext37 1D67                     __ptext29 12F4                     __ptext38 07F0  
                   __ptext39 1D74                     __powers_ 1010      __size_of_LCD_Set_Cursor 0024  
                   _contador 006E             __size_of_sprintf F9BD                __size_of_main 011B  
                  pnum$text1 000C                     _recibido 006D                     _pantalla 00C2  
        __end_of_USART_Write 1D92                   _INTCONbits 000B                     isdigit@c 0073  
                   scale@scl 0043        __end_of_Set_Baud_Rate 1D67                     intlevel1 0000  
                  sprintf@ap 00A3             __tdiv_to_l_@exp1 0029             __tdiv_to_l_@cntr 0028  
                  sprintf@sp 00B5             __tdiv_to_l_@quot 0024             ___lwmod@dividend 0074  
                ?_ADC_Select 0070             ___lldiv@dividend 0076                    stringcode 100A  
    __size_of_LCD_Write_Char 0019                 ?__tdiv_to_l_ 0072                     sprintf@c 00B8  
                   sprintf@f 005E          USART_Write_String@a 0073          USART_Write_String@i 0076  
           ___lldiv@quotient 0020              ___lwmod@divisor 0072              ___lwmod@counter 0077  
                   stringdir 100A                     stringtab 1000                  _USART_Write 1D86  
