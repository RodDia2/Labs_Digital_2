

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 00:58:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F887 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  0105                     	;# 
   150  0107                     	;# 
   151  0108                     	;# 
   152  0109                     	;# 
   153  010C                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  0185                     	;# 
   159  0187                     	;# 
   160  0188                     	;# 
   161  0189                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  001D                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  0081                     	;# 
   200  0085                     	;# 
   201  0086                     	;# 
   202  0087                     	;# 
   203  0088                     	;# 
   204  0089                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0095                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  0105                     	;# 
   228  0107                     	;# 
   229  0108                     	;# 
   230  0109                     	;# 
   231  010C                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010E                     	;# 
   235  010F                     	;# 
   236  0185                     	;# 
   237  0187                     	;# 
   238  0188                     	;# 
   239  0189                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  000E                     	;# 
   258  000F                     	;# 
   259  0010                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0014                     	;# 
   264  0015                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  001D                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  0081                     	;# 
   278  0085                     	;# 
   279  0086                     	;# 
   280  0087                     	;# 
   281  0088                     	;# 
   282  0089                     	;# 
   283  008C                     	;# 
   284  008D                     	;# 
   285  008E                     	;# 
   286  008F                     	;# 
   287  0090                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0094                     	;# 
   294  0095                     	;# 
   295  0096                     	;# 
   296  0097                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009A                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  009F                     	;# 
   305  0105                     	;# 
   306  0107                     	;# 
   307  0108                     	;# 
   308  0109                     	;# 
   309  010C                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  010F                     	;# 
   314  0185                     	;# 
   315  0187                     	;# 
   316  0188                     	;# 
   317  0189                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  0000                     	;# 
   321  0001                     	;# 
   322  0002                     	;# 
   323  0003                     	;# 
   324  0004                     	;# 
   325  0005                     	;# 
   326  0006                     	;# 
   327  0007                     	;# 
   328  0008                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  000E                     	;# 
   336  000F                     	;# 
   337  0010                     	;# 
   338  0011                     	;# 
   339  0012                     	;# 
   340  0013                     	;# 
   341  0014                     	;# 
   342  0015                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0017                     	;# 
   346  0018                     	;# 
   347  0019                     	;# 
   348  001A                     	;# 
   349  001B                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  001D                     	;# 
   353  001E                     	;# 
   354  001F                     	;# 
   355  0081                     	;# 
   356  0085                     	;# 
   357  0086                     	;# 
   358  0087                     	;# 
   359  0088                     	;# 
   360  0089                     	;# 
   361  008C                     	;# 
   362  008D                     	;# 
   363  008E                     	;# 
   364  008F                     	;# 
   365  0090                     	;# 
   366  0091                     	;# 
   367  0092                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0095                     	;# 
   373  0096                     	;# 
   374  0097                     	;# 
   375  0098                     	;# 
   376  0099                     	;# 
   377  009A                     	;# 
   378  009B                     	;# 
   379  009C                     	;# 
   380  009D                     	;# 
   381  009E                     	;# 
   382  009F                     	;# 
   383  0105                     	;# 
   384  0107                     	;# 
   385  0108                     	;# 
   386  0109                     	;# 
   387  010C                     	;# 
   388  010C                     	;# 
   389  010D                     	;# 
   390  010E                     	;# 
   391  010F                     	;# 
   392  0185                     	;# 
   393  0187                     	;# 
   394  0188                     	;# 
   395  0189                     	;# 
   396  018C                     	;# 
   397  018D                     	;# 
   398                           
   399                           	psect	strings
   400  0700                     __pstrings:
   401  0700                     stringtab:
   402  0700                     __stringtab:
   403                           
   404                           ;	String table - string pointers are 1 byte each
   405  0700  1BFF               	btfsc	btemp+1,7
   406  0701  2F0A               	ljmp	stringcode
   407  0702  1383               	bcf	3,7
   408  0703  187F               	btfsc	btemp+1,0
   409  0704  1783               	bsf	3,7
   410  0705  0800               	movf	0,w
   411  0706  0A84               	incf	4,f
   412  0707  1903               	skipnz
   413  0708  0AFF               	incf	btemp+1,f
   414  0709  0008               	return
   415  070A                     stringcode:
   416  070A                     stringdir:
   417  070A  3007               	movlw	high stringdir
   418  070B  008A               	movwf	10
   419  070C  0804               	movf	4,w
   420  070D  0A84               	incf	4,f
   421  070E  0782               	addwf	2,f
   422  070F                     __stringbase:
   423  070F  3400               	retlw	0
   424  0710                     __end_of__stringtab:
   425  0710                     __powers_:
   426  0710  3400               	retlw	0
   427  0711  3400               	retlw	0
   428  0712  3480               	retlw	128
   429  0713  343F               	retlw	63
   430  0714  3400               	retlw	0
   431  0715  3400               	retlw	0
   432  0716  3420               	retlw	32
   433  0717  3441               	retlw	65
   434  0718  3400               	retlw	0
   435  0719  3400               	retlw	0
   436  071A  34C8               	retlw	200
   437  071B  3442               	retlw	66
   438  071C  3400               	retlw	0
   439  071D  3400               	retlw	0
   440  071E  347A               	retlw	122
   441  071F  3444               	retlw	68
   442  0720  3400               	retlw	0
   443  0721  3440               	retlw	64
   444  0722  341C               	retlw	28
   445  0723  3446               	retlw	70
   446  0724  3400               	retlw	0
   447  0725  3450               	retlw	80
   448  0726  34C3               	retlw	195
   449  0727  3447               	retlw	71
   450  0728  3400               	retlw	0
   451  0729  3424               	retlw	36
   452  072A  3474               	retlw	116
   453  072B  3449               	retlw	73
   454  072C  3480               	retlw	128
   455  072D  3496               	retlw	150
   456  072E  3418               	retlw	24
   457  072F  344B               	retlw	75
   458  0730  3420               	retlw	32
   459  0731  34BC               	retlw	188
   460  0732  34BE               	retlw	190
   461  0733  344C               	retlw	76
   462  0734  3428               	retlw	40
   463  0735  346B               	retlw	107
   464  0736  346E               	retlw	110
   465  0737  344E               	retlw	78
   466  0738  34F9               	retlw	249
   467  0739  3402               	retlw	2
   468  073A  3415               	retlw	21
   469  073B  3450               	retlw	80
   470  073C  34EC               	retlw	236
   471  073D  3478               	retlw	120
   472  073E  34AD               	retlw	173
   473  073F  3460               	retlw	96
   474  0740  34CA               	retlw	202
   475  0741  34F2               	retlw	242
   476  0742  3449               	retlw	73
   477  0743  3471               	retlw	113
   478  0744                     __end_of__powers_:
   479  0744                     __npowers_:
   480  0744  3400               	retlw	0
   481  0745  3400               	retlw	0
   482  0746  3480               	retlw	128
   483  0747  343F               	retlw	63
   484  0748  34CD               	retlw	205
   485  0749  34CC               	retlw	204
   486  074A  34CC               	retlw	204
   487  074B  343D               	retlw	61
   488  074C  340A               	retlw	10
   489  074D  34D7               	retlw	215
   490  074E  3423               	retlw	35
   491  074F  343C               	retlw	60
   492  0750  346F               	retlw	111
   493  0751  3412               	retlw	18
   494  0752  3483               	retlw	131
   495  0753  343A               	retlw	58
   496  0754  3417               	retlw	23
   497  0755  34B7               	retlw	183
   498  0756  34D1               	retlw	209
   499  0757  3438               	retlw	56
   500  0758  34AC               	retlw	172
   501  0759  34C5               	retlw	197
   502  075A  3427               	retlw	39
   503  075B  3437               	retlw	55
   504  075C  34BD               	retlw	189
   505  075D  3437               	retlw	55
   506  075E  3486               	retlw	134
   507  075F  3435               	retlw	53
   508  0760  3495               	retlw	149
   509  0761  34BF               	retlw	191
   510  0762  34D6               	retlw	214
   511  0763  3433               	retlw	51
   512  0764  3477               	retlw	119
   513  0765  34CC               	retlw	204
   514  0766  342B               	retlw	43
   515  0767  3432               	retlw	50
   516  0768  345F               	retlw	95
   517  0769  3470               	retlw	112
   518  076A  3489               	retlw	137
   519  076B  3430               	retlw	48
   520  076C  34FF               	retlw	255
   521  076D  34E6               	retlw	230
   522  076E  34DB               	retlw	219
   523  076F  342E               	retlw	46
   524  0770  3408               	retlw	8
   525  0771  34E5               	retlw	229
   526  0772  343C               	retlw	60
   527  0773  341E               	retlw	30
   528  0774  3460               	retlw	96
   529  0775  3442               	retlw	66
   530  0776  34A2               	retlw	162
   531  0777  340D               	retlw	13
   532  0778                     __end_of__npowers_:
   533  0778                     _dpowers:
   534  0778  3401               	retlw	1
   535  0779  3400               	retlw	0
   536  077A  3400               	retlw	0
   537  077B  3400               	retlw	0
   538  077C  340A               	retlw	10
   539  077D  3400               	retlw	0
   540  077E  3400               	retlw	0
   541  077F  3400               	retlw	0
   542  0780  3464               	retlw	100
   543  0781  3400               	retlw	0
   544  0782  3400               	retlw	0
   545  0783  3400               	retlw	0
   546  0784  34E8               	retlw	232
   547  0785  3403               	retlw	3
   548  0786  3400               	retlw	0
   549  0787  3400               	retlw	0
   550  0788  3410               	retlw	16
   551  0789  3427               	retlw	39
   552  078A  3400               	retlw	0
   553  078B  3400               	retlw	0
   554  078C  34A0               	retlw	160
   555  078D  3486               	retlw	134
   556  078E  3401               	retlw	1
   557  078F  3400               	retlw	0
   558  0790  3440               	retlw	64
   559  0791  3442               	retlw	66
   560  0792  340F               	retlw	15
   561  0793  3400               	retlw	0
   562  0794  3480               	retlw	128
   563  0795  3496               	retlw	150
   564  0796  3498               	retlw	152
   565  0797  3400               	retlw	0
   566  0798  3400               	retlw	0
   567  0799  34E1               	retlw	225
   568  079A  34F5               	retlw	245
   569  079B  3405               	retlw	5
   570  079C  3400               	retlw	0
   571  079D  34CA               	retlw	202
   572  079E  349A               	retlw	154
   573  079F  343B               	retlw	59
   574  07A0                     __end_of_dpowers:
   575  001F                     _ADCON0	set	31
   576  000C                     _PIR1bits	set	12
   577  000B                     _INTCONbits	set	11
   578  001E                     _ADRESH	set	30
   579  001F                     _ADCON0bits	set	31
   580  0005                     _PORTA	set	5
   581  0008                     _PORTD	set	8
   582  0007                     _PORTC	set	7
   583  0006                     _PORTB	set	6
   584  0009                     _PORTE	set	9
   585  0049                     _RE1	set	73
   586  0048                     _RE0	set	72
   587  009F                     _ADCON1	set	159
   588  008C                     _PIE1bits	set	140
   589  0085                     _TRISA	set	133
   590  0088                     _TRISD	set	136
   591  0087                     _TRISC	set	135
   592  0086                     _TRISB	set	134
   593  0089                     _TRISE	set	137
   594  0189                     _ANSELH	set	393
   595  0188                     _ANSEL	set	392
   596  07A0                     STR_1:
   597  07A0  3425               	retlw	37	;'%'
   598  07A1  3431               	retlw	49	;'1'
   599  07A2  342E               	retlw	46	;'.'
   600  07A3  3432               	retlw	50	;'2'
   601  07A4  3466               	retlw	102	;'f'
   602  07A5  3420               	retlw	32	;' '
   603  07A6  3420               	retlw	32	;' '
   604  07A7  3420               	retlw	32	;' '
   605  07A8  3425               	retlw	37	;'%'
   606  07A9  3431               	retlw	49	;'1'
   607  07AA  342E               	retlw	46	;'.'
   608  07AB  3432               	retlw	50	;'2'
   609  07AC  3466               	retlw	102	;'f'
   610  07AD  3420               	retlw	32	;' '
   611  07AE  3420               	retlw	32	;' '
   612  07AF  3420               	retlw	32	;' '
   613  07B0  3425               	retlw	37	;'%'
   614  07B1  3464               	retlw	100	;'d'
   615  07B2  3400               	retlw	0
   616  07B3                     STR_2:
   617  07B3  3456               	retlw	86	;'V'
   618  07B4  3431               	retlw	49	;'1'
   619  07B5  3420               	retlw	32	;' '
   620  07B6  3420               	retlw	32	;' '
   621  07B7  3420               	retlw	32	;' '
   622  07B8  3456               	retlw	86	;'V'
   623  07B9  3432               	retlw	50	;'2'
   624  07BA  3420               	retlw	32	;' '
   625  07BB  3420               	retlw	32	;' '
   626  07BC  3420               	retlw	32	;' '
   627  07BD  3443               	retlw	67	;'C'
   628  07BE  344F               	retlw	79	;'O'
   629  07BF  344E               	retlw	78	;'N'
   630  07C0  3454               	retlw	84	;'T'
   631  07C1  3400               	retlw	0
   632                           
   633                           	psect	cinit
   634  000F                     start_initialization:	
   635                           ; #config settings
   636                           
   637  000F                     __initialization:
   638                           
   639                           ; Clear objects allocated to COMMON
   640  000F  01FB               	clrf	__pbssCOMMON& (0+127)
   641                           
   642                           ; Clear objects allocated to BANK1
   643  0010  1383               	bcf	3,7	;select IRP bank0
   644  0011  30D1               	movlw	low __pbssBANK1
   645  0012  0084               	movwf	4
   646  0013  30EE               	movlw	low (__pbssBANK1+29)
   647  0014  160A  158A  209A  120A  118A  	fcall	clear_ram0
   648  0019                     end_of_initialization:	
   649                           ;End of C runtime variable initialization code
   650                           
   651  0019                     __end_of__initialization:
   652  0019  0183               	clrf	3
   653  001A  160A  158A  2DE1   	ljmp	_main	;jump to C main() function
   654                           
   655                           	psect	bssCOMMON
   656  007B                     __pbssCOMMON:
   657  007B                     _valor_adc:
   658  007B                     	ds	1
   659                           
   660                           	psect	bssBANK1
   661  00D1                     __pbssBANK1:
   662  00D1                     _V2:
   663  00D1                     	ds	4
   664  00D5                     _V1:
   665  00D5                     	ds	4
   666  00D9                     _contador:
   667  00D9                     	ds	1
   668  00DA                     _pantalla:
   669  00DA                     	ds	20
   670                           
   671                           	psect	clrtext
   672  189A                     clear_ram0:	
   673                           ;	Called with FSR containing the base address, and
   674                           ;	W with the last address+1
   675                           
   676  189A  0064               	clrwdt	;clear the watchdog before getting into this loop
   677  189B                     clrloop0:
   678  189B  0180               	clrf	0	;clear RAM location pointed to by FSR
   679  189C  0A84               	incf	4,f	;increment pointer
   680  189D  0604               	xorwf	4,w	;XOR with final address
   681  189E  1903               	btfsc	3,2	;have we reached the end yet?
   682  189F  3400               	retlw	0	;all done for this memory range, return
   683  18A0  0604               	xorwf	4,w	;XOR again to restore value
   684  18A1  289B               	goto	clrloop0	;do the next byte
   685                           
   686                           	psect	cstackBANK1
   687  00A0                     __pcstackBANK1:
   688  00A0                     ?___flsub:
   689  00A0                     ___flsub@a:	
   690                           ; 4 bytes @ 0x0
   691                           
   692                           
   693                           ; 4 bytes @ 0x0
   694  00A0                     	ds	4
   695  00A4                     ___flsub@b:
   696                           
   697                           ; 4 bytes @ 0x4
   698  00A4                     	ds	4
   699  00A8                     ?_sprintf:
   700  00A8                     sprintf@f:	
   701                           ; 2 bytes @ 0x8
   702                           
   703                           
   704                           ; 1 bytes @ 0x8
   705  00A8                     	ds	11
   706  00B3                     _sprintf$979:
   707                           
   708                           ; 4 bytes @ 0x13
   709  00B3                     	ds	4
   710  00B7                     sprintf@ap:
   711                           
   712                           ; 1 bytes @ 0x17
   713  00B7                     	ds	1
   714  00B8                     sprintf@flag:
   715                           
   716                           ; 2 bytes @ 0x18
   717  00B8                     	ds	2
   718  00BA                     sprintf@width:
   719                           
   720                           ; 2 bytes @ 0x1A
   721  00BA                     	ds	2
   722  00BC                     sprintf@tmpval:
   723                           
   724                           ; 4 bytes @ 0x1C
   725  00BC                     	ds	4
   726  00C0                     sprintf@val:
   727                           
   728                           ; 4 bytes @ 0x20
   729  00C0                     	ds	4
   730  00C4                     sprintf@eexp:
   731                           
   732                           ; 2 bytes @ 0x24
   733  00C4                     	ds	2
   734  00C6                     sprintf@fval:
   735                           
   736                           ; 4 bytes @ 0x26
   737  00C6                     	ds	4
   738  00CA                     sprintf@sp:
   739                           
   740                           ; 1 bytes @ 0x2A
   741  00CA                     	ds	1
   742  00CB                     sprintf@prec:
   743                           
   744                           ; 2 bytes @ 0x2B
   745  00CB                     	ds	2
   746  00CD                     sprintf@c:
   747                           
   748                           ; 1 bytes @ 0x2D
   749  00CD                     	ds	1
   750  00CE                     ??_main:
   751                           
   752                           ; 1 bytes @ 0x2E
   753  00CE                     	ds	3
   754                           
   755                           	psect	cstackCOMMON
   756  0070                     __pcstackCOMMON:
   757  0070                     ?_isdigit:
   758  0070                     ?_setup:	
   759                           ; 1 bit 
   760                           
   761  0070                     ?_initADC:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?_LCD_Init:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_LCD_clear:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?_ADC_Select:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_LCD_Port:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ?_ISR:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ??_ISR:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ?_main:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     ?_LCD_Write_Char:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0070                     ?_LCD_Command:	
   789                           ; 1 bytes @ 0x0
   790                           
   791                           
   792                           ; 1 bytes @ 0x0
   793  0070                     	ds	2
   794  0072                     ?___fleq:
   795  0072                     ?___flge:	
   796                           ; 1 bit 
   797                           
   798  0072                     ??_setup:	
   799                           ; 1 bit 
   800                           
   801  0072                     ??_initADC:	
   802                           ; 1 bytes @ 0x2
   803                           
   804  0072                     ??_ADC_Select:	
   805                           ; 1 bytes @ 0x2
   806                           
   807  0072                     ??_LCD_Port:	
   808                           ; 1 bytes @ 0x2
   809                           
   810  0072                     ??_isdigit:	
   811                           ; 1 bytes @ 0x2
   812                           
   813  0072                     ?__Umul8_16:	
   814                           ; 1 bytes @ 0x2
   815                           
   816  0072                     ?___wmul:	
   817                           ; 2 bytes @ 0x2
   818                           
   819  0072                     ?___awmod:	
   820                           ; 2 bytes @ 0x2
   821                           
   822  0072                     ?___lwmod:	
   823                           ; 2 bytes @ 0x2
   824                           
   825  0072                     ?__tdiv_to_l_:	
   826                           ; 2 bytes @ 0x2
   827                           
   828  0072                     ?__div_to_l_:	
   829                           ; 4 bytes @ 0x2
   830                           
   831  0072                     ?___lldiv:	
   832                           ; 4 bytes @ 0x2
   833                           
   834  0072                     ?___flneg:	
   835                           ; 4 bytes @ 0x2
   836                           
   837  0072                     ?___xxtofl:	
   838                           ; 4 bytes @ 0x2
   839                           
   840  0072                     LCD_Port@a:	
   841                           ; 4 bytes @ 0x2
   842                           
   843  0072                     __Umul8_16@multiplicand:	
   844                           ; 1 bytes @ 0x2
   845                           
   846  0072                     _isdigit$803:	
   847                           ; 1 bytes @ 0x2
   848                           
   849  0072                     ___wmul@multiplier:	
   850                           ; 1 bytes @ 0x2
   851                           
   852  0072                     ___awmod@divisor:	
   853                           ; 2 bytes @ 0x2
   854                           
   855  0072                     ___lwmod@divisor:	
   856                           ; 2 bytes @ 0x2
   857                           
   858  0072                     ___lldiv@divisor:	
   859                           ; 2 bytes @ 0x2
   860                           
   861  0072                     __div_to_l_@f1:	
   862                           ; 4 bytes @ 0x2
   863                           
   864  0072                     ___fleq@ff1:	
   865                           ; 4 bytes @ 0x2
   866                           
   867  0072                     ___flge@ff1:	
   868                           ; 4 bytes @ 0x2
   869                           
   870  0072                     ___flneg@f1:	
   871                           ; 4 bytes @ 0x2
   872                           
   873  0072                     __tdiv_to_l_@f1:	
   874                           ; 4 bytes @ 0x2
   875                           
   876  0072                     ___xxtofl@val:	
   877                           ; 4 bytes @ 0x2
   878                           
   879                           
   880                           ; 4 bytes @ 0x2
   881  0072                     	ds	1
   882  0073                     ??_LCD_Write_Char:
   883  0073                     ??_LCD_Command:	
   884                           ; 1 bytes @ 0x3
   885                           
   886  0073                     isdigit@c:	
   887                           ; 1 bytes @ 0x3
   888                           
   889                           
   890                           ; 1 bytes @ 0x3
   891  0073                     	ds	1
   892  0074                     ??__Umul8_16:
   893  0074                     LCD_Write_Char@a:	
   894                           ; 1 bytes @ 0x4
   895                           
   896  0074                     ADC_Select@a:	
   897                           ; 1 bytes @ 0x4
   898                           
   899  0074                     ___wmul@multiplicand:	
   900                           ; 1 bytes @ 0x4
   901                           
   902  0074                     ___awmod@dividend:	
   903                           ; 2 bytes @ 0x4
   904                           
   905  0074                     ___lwmod@dividend:	
   906                           ; 2 bytes @ 0x4
   907                           
   908                           
   909                           ; 2 bytes @ 0x4
   910  0074                     	ds	1
   911  0075                     ?_LCD_Write_String:
   912  0075                     LCD_Command@a:	
   913                           ; 1 bytes @ 0x5
   914                           
   915  0075                     LCD_Write_String@a:	
   916                           ; 1 bytes @ 0x5
   917                           
   918                           
   919                           ; 2 bytes @ 0x5
   920  0075                     	ds	1
   921  0076                     ??_LCD_Init:
   922  0076                     ??_LCD_clear:	
   923                           ; 1 bytes @ 0x6
   924                           
   925  0076                     ?_LCD_Set_Cursor:	
   926                           ; 1 bytes @ 0x6
   927                           
   928  0076                     ??___wmul:	
   929                           ; 1 bytes @ 0x6
   930                           
   931  0076                     ??___awmod:	
   932                           ; 1 bytes @ 0x6
   933                           
   934  0076                     ??___flneg:	
   935                           ; 1 bytes @ 0x6
   936                           
   937  0076                     ??___lwmod:	
   938                           ; 1 bytes @ 0x6
   939                           
   940  0076                     ??___xxtofl:	
   941                           ; 1 bytes @ 0x6
   942                           
   943  0076                     LCD_Set_Cursor@y:	
   944                           ; 1 bytes @ 0x6
   945                           
   946  0076                     ___wmul@product:	
   947                           ; 1 bytes @ 0x6
   948                           
   949  0076                     __Umul8_16@product:	
   950                           ; 2 bytes @ 0x6
   951                           
   952  0076                     ___lldiv@dividend:	
   953                           ; 2 bytes @ 0x6
   954                           
   955  0076                     __div_to_l_@f2:	
   956                           ; 4 bytes @ 0x6
   957                           
   958  0076                     ___fleq@ff2:	
   959                           ; 4 bytes @ 0x6
   960                           
   961  0076                     ___flge@ff2:	
   962                           ; 4 bytes @ 0x6
   963                           
   964  0076                     __tdiv_to_l_@f2:	
   965                           ; 4 bytes @ 0x6
   966                           
   967                           
   968                           ; 4 bytes @ 0x6
   969  0076                     	ds	1
   970  0077                     ??_LCD_Set_Cursor:
   971  0077                     ??_LCD_Write_String:	
   972                           ; 1 bytes @ 0x7
   973                           
   974  0077                     ___awmod@counter:	
   975                           ; 1 bytes @ 0x7
   976                           
   977  0077                     ___lwmod@counter:	
   978                           ; 1 bytes @ 0x7
   979                           
   980                           
   981                           ; 1 bytes @ 0x7
   982  0077                     	ds	1
   983  0078                     ??___lwdiv:
   984  0078                     LCD_Set_Cursor@x:	
   985                           ; 1 bytes @ 0x8
   986                           
   987  0078                     ___awmod@sign:	
   988                           ; 1 bytes @ 0x8
   989                           
   990  0078                     __Umul8_16@word_mpld:	
   991                           ; 1 bytes @ 0x8
   992                           
   993                           
   994                           ; 2 bytes @ 0x8
   995  0078                     	ds	1
   996  0079                     ??___awdiv:
   997  0079                     LCD_Set_Cursor@a:	
   998                           ; 1 bytes @ 0x9
   999                           
  1000                           
  1001                           ; 1 bytes @ 0x9
  1002  0079                     	ds	1
  1003  007A                     ??__div_to_l_:
  1004  007A                     ??___lldiv:	
  1005                           ; 1 bytes @ 0xA
  1006                           
  1007  007A                     __Umul8_16@multiplier:	
  1008                           ; 1 bytes @ 0xA
  1009                           
  1010                           
  1011                           ; 1 bytes @ 0xA
  1012  007A                     	ds	1
  1013  007B                     ??___flsub:
  1014                           
  1015                           	psect	cstackBANK0
  1016  0020                     __pcstackBANK0:	
  1017                           ; 1 bytes @ 0xB
  1018                           
  1019  0020                     ??__tdiv_to_l_:
  1020  0020                     ??___fleq:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023  0020                     ??___flge:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026  0020                     ?___awdiv:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029  0020                     ?___lwdiv:	
  1030                           ; 2 bytes @ 0x0
  1031                           
  1032  0020                     ___xxtofl@sign:	
  1033                           ; 2 bytes @ 0x0
  1034                           
  1035  0020                     LCD_Write_String@i:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038  0020                     ___awdiv@divisor:	
  1039                           ; 2 bytes @ 0x0
  1040                           
  1041  0020                     ___lwdiv@divisor:	
  1042                           ; 2 bytes @ 0x0
  1043                           
  1044  0020                     ___lldiv@quotient:	
  1045                           ; 2 bytes @ 0x0
  1046                           
  1047  0020                     __div_to_l_@quot:	
  1048                           ; 4 bytes @ 0x0
  1049                           
  1050                           
  1051                           ; 4 bytes @ 0x0
  1052  0020                     	ds	1
  1053  0021                     ___xxtofl@exp:
  1054                           
  1055                           ; 1 bytes @ 0x1
  1056  0021                     	ds	1
  1057  0022                     ___awdiv@dividend:
  1058  0022                     ___lwdiv@dividend:	
  1059                           ; 2 bytes @ 0x2
  1060                           
  1061  0022                     ___xxtofl@arg:	
  1062                           ; 2 bytes @ 0x2
  1063                           
  1064                           
  1065                           ; 4 bytes @ 0x2
  1066  0022                     	ds	2
  1067  0024                     ___lldiv@counter:
  1068  0024                     ___awdiv@counter:	
  1069                           ; 1 bytes @ 0x4
  1070                           
  1071  0024                     __div_to_l_@cntr:	
  1072                           ; 1 bytes @ 0x4
  1073                           
  1074  0024                     ___lwdiv@counter:	
  1075                           ; 1 bytes @ 0x4
  1076                           
  1077  0024                     __tdiv_to_l_@quot:	
  1078                           ; 1 bytes @ 0x4
  1079                           
  1080                           
  1081                           ; 4 bytes @ 0x4
  1082  0024                     	ds	1
  1083  0025                     ?___llmod:
  1084  0025                     ___awdiv@sign:	
  1085                           ; 4 bytes @ 0x5
  1086                           
  1087  0025                     __div_to_l_@exp1:	
  1088                           ; 1 bytes @ 0x5
  1089                           
  1090  0025                     ___lwdiv@quotient:	
  1091                           ; 1 bytes @ 0x5
  1092                           
  1093  0025                     ___llmod@divisor:	
  1094                           ; 2 bytes @ 0x5
  1095                           
  1096                           
  1097                           ; 4 bytes @ 0x5
  1098  0025                     	ds	1
  1099  0026                     ___awdiv@quotient:
  1100                           
  1101                           ; 2 bytes @ 0x6
  1102  0026                     	ds	2
  1103  0028                     ?___flmul:
  1104  0028                     __tdiv_to_l_@cntr:	
  1105                           ; 4 bytes @ 0x8
  1106                           
  1107  0028                     ___flmul@b:	
  1108                           ; 1 bytes @ 0x8
  1109                           
  1110                           
  1111                           ; 4 bytes @ 0x8
  1112  0028                     	ds	1
  1113  0029                     __tdiv_to_l_@exp1:
  1114  0029                     ___llmod@dividend:	
  1115                           ; 1 bytes @ 0x9
  1116                           
  1117                           
  1118                           ; 4 bytes @ 0x9
  1119  0029                     	ds	3
  1120  002C                     ___flmul@a:
  1121                           
  1122                           ; 4 bytes @ 0xC
  1123  002C                     	ds	1
  1124  002D                     ??___llmod:
  1125                           
  1126                           ; 1 bytes @ 0xD
  1127  002D                     	ds	1
  1128  002E                     ___llmod@counter:
  1129                           
  1130                           ; 1 bytes @ 0xE
  1131  002E                     	ds	2
  1132  0030                     ??___flmul:
  1133                           
  1134                           ; 1 bytes @ 0x10
  1135  0030                     	ds	5
  1136  0035                     ___flmul@sign:
  1137                           
  1138                           ; 1 bytes @ 0x15
  1139  0035                     	ds	1
  1140  0036                     ___flmul@grs:
  1141                           
  1142                           ; 4 bytes @ 0x16
  1143  0036                     	ds	4
  1144  003A                     ___flmul@aexp:
  1145                           
  1146                           ; 1 bytes @ 0x1A
  1147  003A                     	ds	1
  1148  003B                     ___flmul@bexp:
  1149                           
  1150                           ; 1 bytes @ 0x1B
  1151  003B                     	ds	1
  1152  003C                     ___flmul@prod:
  1153                           
  1154                           ; 4 bytes @ 0x1C
  1155  003C                     	ds	4
  1156  0040                     ___flmul@temp:
  1157                           
  1158                           ; 2 bytes @ 0x20
  1159  0040                     	ds	2
  1160  0042                     ?_LeerADC:
  1161  0042                     ?_fround:	
  1162                           ; 4 bytes @ 0x22
  1163                           
  1164  0042                     ?_scale:	
  1165                           ; 4 bytes @ 0x22
  1166                           
  1167                           
  1168                           ; 4 bytes @ 0x22
  1169  0042                     	ds	4
  1170  0046                     ??_LeerADC:
  1171  0046                     ??_fround:	
  1172                           ; 1 bytes @ 0x26
  1173                           
  1174  0046                     ??_scale:	
  1175                           ; 1 bytes @ 0x26
  1176                           
  1177                           
  1178                           ; 1 bytes @ 0x26
  1179  0046                     	ds	4
  1180  004A                     LeerADC@x:
  1181                           
  1182                           ; 1 bytes @ 0x2A
  1183  004A                     	ds	1
  1184  004B                     LeerADC@a:
  1185                           
  1186                           ; 4 bytes @ 0x2B
  1187  004B                     	ds	2
  1188  004D                     _fround$977:
  1189                           
  1190                           ; 4 bytes @ 0x2D
  1191  004D                     	ds	3
  1192  0050                     _scale$978:
  1193                           
  1194                           ; 4 bytes @ 0x30
  1195  0050                     	ds	1
  1196  0051                     _fround$976:
  1197                           
  1198                           ; 4 bytes @ 0x31
  1199  0051                     	ds	3
  1200  0054                     scale@scl:
  1201                           
  1202                           ; 1 bytes @ 0x34
  1203  0054                     	ds	1
  1204  0055                     ?___fltol:
  1205  0055                     fround@prec:	
  1206                           ; 4 bytes @ 0x35
  1207                           
  1208  0055                     ___fltol@f1:	
  1209                           ; 1 bytes @ 0x35
  1210                           
  1211                           
  1212                           ; 4 bytes @ 0x35
  1213  0055                     	ds	1
  1214  0056                     ?___fladd:
  1215  0056                     ___fladd@b:	
  1216                           ; 4 bytes @ 0x36
  1217                           
  1218                           
  1219                           ; 4 bytes @ 0x36
  1220  0056                     	ds	3
  1221  0059                     ??___fltol:
  1222                           
  1223                           ; 1 bytes @ 0x39
  1224  0059                     	ds	1
  1225  005A                     ___fladd@a:
  1226                           
  1227                           ; 4 bytes @ 0x3A
  1228  005A                     	ds	4
  1229  005E                     ??___fladd:
  1230  005E                     ___fltol@sign1:	
  1231                           ; 1 bytes @ 0x3E
  1232                           
  1233                           
  1234                           ; 1 bytes @ 0x3E
  1235  005E                     	ds	1
  1236  005F                     ___fltol@exp1:
  1237                           
  1238                           ; 1 bytes @ 0x3F
  1239  005F                     	ds	7
  1240  0066                     ___fladd@signs:
  1241                           
  1242                           ; 1 bytes @ 0x46
  1243  0066                     	ds	1
  1244  0067                     ___fladd@aexp:
  1245                           
  1246                           ; 1 bytes @ 0x47
  1247  0067                     	ds	1
  1248  0068                     ___fladd@bexp:
  1249                           
  1250                           ; 1 bytes @ 0x48
  1251  0068                     	ds	1
  1252  0069                     ___fladd@grs:
  1253                           
  1254                           ; 1 bytes @ 0x49
  1255  0069                     	ds	1
  1256  006A                     ??_sprintf:
  1257                           
  1258                           ; 1 bytes @ 0x4A
  1259  006A                     	ds	5
  1260                           
  1261                           	psect	maintext
  1262  1DE1                     __pmaintext:	
  1263 ;;
  1264 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1265 ;;
  1266 ;; *************** function _main *****************
  1267 ;; Defined at:
  1268 ;;		line 80 in file "lab3_main.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : B00/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1282 ;;      Params:         0       0       0       0       0
  1283 ;;      Locals:         0       0       0       0       0
  1284 ;;      Temps:          0       0       3       0       0
  1285 ;;      Totals:         0       0       3       0       0
  1286 ;;Total ram usage:        3 bytes
  1287 ;; Hardware stack levels required when called:    5
  1288 ;; This function calls:
  1289 ;;		_LCD_Init
  1290 ;;		_LCD_Set_Cursor
  1291 ;;		_LCD_Write_String
  1292 ;;		_LCD_clear
  1293 ;;		_LeerADC
  1294 ;;		_initADC
  1295 ;;		_setup
  1296 ;;		_sprintf
  1297 ;; This function is called by:
  1298 ;;		Startup code after reset
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           
  1303                           ;psect for function _main
  1304  1DE1                     _main:
  1305  1DE1                     l4040:	
  1306                           ;incstack = 0
  1307                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1308                           
  1309                           
  1310                           ;lab3_main.c: 83:     setup();
  1311  1DE1  160A  158A  2115  160A  158A  	fcall	_setup
  1312                           
  1313                           ;lab3_main.c: 84:     initADC();
  1314  1DE6  160A  158A  20BA  160A  158A  	fcall	_initADC
  1315                           
  1316                           ;lab3_main.c: 85:     LCD_Init();
  1317  1DEB  160A  158A  2234  160A  158A  	fcall	_LCD_Init
  1318                           
  1319                           ;lab3_main.c: 86:     LCD_clear();
  1320  1DF0  160A  158A  20AD  160A  158A  	fcall	_LCD_clear
  1321  1DF5                     l4042:
  1322                           
  1323                           ;lab3_main.c: 94:         V1 = LeerADC(0);
  1324  1DF5  3000               	movlw	0
  1325  1DF6  160A  158A  2379  160A  158A  	fcall	_LeerADC
  1326  1DFB  1283               	bcf	3,5	;RP0=0, select bank0
  1327  1DFC  1303               	bcf	3,6	;RP1=0, select bank0
  1328  1DFD  0845               	movf	?_LeerADC+3,w
  1329  1DFE  1683               	bsf	3,5	;RP0=1, select bank1
  1330  1DFF  1303               	bcf	3,6	;RP1=0, select bank1
  1331  1E00  00D8               	movwf	(_V1+3)^(0+128)
  1332  1E01  1283               	bcf	3,5	;RP0=0, select bank0
  1333  1E02  1303               	bcf	3,6	;RP1=0, select bank0
  1334  1E03  0844               	movf	?_LeerADC+2,w
  1335  1E04  1683               	bsf	3,5	;RP0=1, select bank1
  1336  1E05  1303               	bcf	3,6	;RP1=0, select bank1
  1337  1E06  00D7               	movwf	(_V1+2)^(0+128)
  1338  1E07  1283               	bcf	3,5	;RP0=0, select bank0
  1339  1E08  1303               	bcf	3,6	;RP1=0, select bank0
  1340  1E09  0843               	movf	?_LeerADC+1,w
  1341  1E0A  1683               	bsf	3,5	;RP0=1, select bank1
  1342  1E0B  1303               	bcf	3,6	;RP1=0, select bank1
  1343  1E0C  00D6               	movwf	(_V1+1)^(0+128)
  1344  1E0D  1283               	bcf	3,5	;RP0=0, select bank0
  1345  1E0E  1303               	bcf	3,6	;RP1=0, select bank0
  1346  1E0F  0842               	movf	?_LeerADC,w
  1347  1E10  1683               	bsf	3,5	;RP0=1, select bank1
  1348  1E11  1303               	bcf	3,6	;RP1=0, select bank1
  1349  1E12  00D5               	movwf	_V1^(0+128)
  1350  1E13                     l4044:
  1351                           
  1352                           ;lab3_main.c: 95:         V2 = LeerADC(1);
  1353  1E13  3001               	movlw	1
  1354  1E14  160A  158A  2379  160A  158A  	fcall	_LeerADC
  1355  1E19  1283               	bcf	3,5	;RP0=0, select bank0
  1356  1E1A  1303               	bcf	3,6	;RP1=0, select bank0
  1357  1E1B  0845               	movf	?_LeerADC+3,w
  1358  1E1C  1683               	bsf	3,5	;RP0=1, select bank1
  1359  1E1D  1303               	bcf	3,6	;RP1=0, select bank1
  1360  1E1E  00D4               	movwf	(_V2+3)^(0+128)
  1361  1E1F  1283               	bcf	3,5	;RP0=0, select bank0
  1362  1E20  1303               	bcf	3,6	;RP1=0, select bank0
  1363  1E21  0844               	movf	?_LeerADC+2,w
  1364  1E22  1683               	bsf	3,5	;RP0=1, select bank1
  1365  1E23  1303               	bcf	3,6	;RP1=0, select bank1
  1366  1E24  00D3               	movwf	(_V2+2)^(0+128)
  1367  1E25  1283               	bcf	3,5	;RP0=0, select bank0
  1368  1E26  1303               	bcf	3,6	;RP1=0, select bank0
  1369  1E27  0843               	movf	?_LeerADC+1,w
  1370  1E28  1683               	bsf	3,5	;RP0=1, select bank1
  1371  1E29  1303               	bcf	3,6	;RP1=0, select bank1
  1372  1E2A  00D2               	movwf	(_V2+1)^(0+128)
  1373  1E2B  1283               	bcf	3,5	;RP0=0, select bank0
  1374  1E2C  1303               	bcf	3,6	;RP1=0, select bank0
  1375  1E2D  0842               	movf	?_LeerADC,w
  1376  1E2E  1683               	bsf	3,5	;RP0=1, select bank1
  1377  1E2F  1303               	bcf	3,6	;RP1=0, select bank1
  1378  1E30  00D1               	movwf	_V2^(0+128)
  1379  1E31                     l4046:
  1380                           
  1381                           ;lab3_main.c: 97:         sprintf(pantalla, "%1.2f   %1.2f   %d", V1,V2,contador);
  1382  1E31  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1383  1E32  00CE               	movwf	??_main^(0+128)
  1384  1E33  084E               	movf	??_main^(0+128),w
  1385  1E34  00A8               	movwf	sprintf@f^(0+128)
  1386  1E35  0858               	movf	(_V1+3)^(0+128),w
  1387  1E36  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1388  1E37  0857               	movf	(_V1+2)^(0+128),w
  1389  1E38  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1390  1E39  0856               	movf	(_V1+1)^(0+128),w
  1391  1E3A  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1392  1E3B  0855               	movf	_V1^(0+128),w
  1393  1E3C  00A9               	movwf	(?_sprintf^(0+128)+1)
  1394  1E3D  0854               	movf	(_V2+3)^(0+128),w
  1395  1E3E  00B0               	movwf	((?_sprintf+3)^(0+128)+5)
  1396  1E3F  0853               	movf	(_V2+2)^(0+128),w
  1397  1E40  00AF               	movwf	((?_sprintf+2)^(0+128)+5)
  1398  1E41  0852               	movf	(_V2+1)^(0+128),w
  1399  1E42  00AE               	movwf	((?_sprintf+1)^(0+128)+5)
  1400  1E43  0851               	movf	_V2^(0+128),w
  1401  1E44  00AD               	movwf	(?_sprintf^(0+128)+5)
  1402  1E45  3000               	movlw	0
  1403  1E46  00B1               	movwf	(?_sprintf^(0+128)+9)
  1404  1E47  00B2               	movwf	((?_sprintf+1)^(0+128)+9)
  1405  1E48  30DA               	movlw	(low (_pantalla| 0))& (0+255)
  1406  1E49  160A  118A  24F4  160A  158A  	fcall	_sprintf
  1407  1E4E                     l4048:
  1408                           
  1409                           ;lab3_main.c: 99:         LCD_clear();
  1410  1E4E  160A  158A  20AD  160A  158A  	fcall	_LCD_clear
  1411  1E53                     l4050:
  1412                           
  1413                           ;lab3_main.c: 100:         LCD_Set_Cursor(1,1);
  1414  1E53  01F6               	clrf	LCD_Set_Cursor@y
  1415  1E54  0AF6               	incf	LCD_Set_Cursor@y,f
  1416  1E55  3001               	movlw	1
  1417  1E56  160A  158A  2138  160A  158A  	fcall	_LCD_Set_Cursor
  1418  1E5B                     l4052:
  1419                           
  1420                           ;lab3_main.c: 101:         LCD_Write_String("V1   V2   CONT");
  1421  1E5B  30A4               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1422  1E5C  00F5               	movwf	LCD_Write_String@a
  1423  1E5D  3080               	movlw	128
  1424  1E5E  00F6               	movwf	LCD_Write_String@a+1
  1425  1E5F  160A  158A  21A8  160A  158A  	fcall	_LCD_Write_String
  1426                           
  1427                           ;lab3_main.c: 102:         LCD_Set_Cursor(2,1);
  1428  1E64  01F6               	clrf	LCD_Set_Cursor@y
  1429  1E65  0AF6               	incf	LCD_Set_Cursor@y,f
  1430  1E66  3002               	movlw	2
  1431  1E67  160A  158A  2138  160A  158A  	fcall	_LCD_Set_Cursor
  1432  1E6C                     l4054:
  1433                           
  1434                           ;lab3_main.c: 103:         LCD_Write_String(pantalla);
  1435  1E6C  30DA               	movlw	(low (_pantalla| 0))& (0+255)
  1436  1E6D  00F5               	movwf	LCD_Write_String@a
  1437  1E6E  3000               	movlw	0
  1438  1E6F  00F6               	movwf	LCD_Write_String@a+1
  1439  1E70  160A  158A  21A8  160A  158A  	fcall	_LCD_Write_String
  1440  1E75                     l4056:
  1441                           
  1442                           ;lab3_main.c: 104:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1443  1E75  3006               	movlw	6
  1444  1E76  1683               	bsf	3,5	;RP0=1, select bank1
  1445  1E77  1303               	bcf	3,6	;RP1=0, select bank1
  1446  1E78  00D0               	movwf	(??_main^(0+128)+2)
  1447  1E79  3013               	movlw	19
  1448  1E7A  00CF               	movwf	(??_main^(0+128)+1)
  1449  1E7B  30AD               	movlw	173
  1450  1E7C  00CE               	movwf	??_main^(0+128)
  1451  1E7D                     u6447:
  1452  1E7D  0BCE               	decfsz	??_main^(0+128),f
  1453  1E7E  2E7D               	goto	u6447
  1454  1E7F  0BCF               	decfsz	(??_main^(0+128)+1),f
  1455  1E80  2E7D               	goto	u6447
  1456  1E81  0BD0               	decfsz	(??_main^(0+128)+2),f
  1457  1E82  2E7D               	goto	u6447
  1458  1E83  2DF5               	goto	l4042
  1459  1E84  120A  118A  280C   	ljmp	start
  1460  1E87                     __end_of_main:
  1461                           
  1462                           	psect	text1
  1463  14F4                     __ptext1:	
  1464 ;; *************** function _sprintf *****************
  1465 ;; Defined at:
  1466 ;;		line 505 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  sp              1    wreg     PTR unsigned char 
  1469 ;;		 -> pantalla(20), 
  1470 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1471 ;;		 -> STR_1(19), 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  sp              1   42[BANK1 ] PTR unsigned char 
  1474 ;;		 -> pantalla(20), 
  1475 ;;  fval            4   38[BANK1 ] PTR unsigned char 
  1476 ;;  val             4   32[BANK1 ] unsigned long 
  1477 ;;  tmpval          4   28[BANK1 ] struct .
  1478 ;;  prec            2   43[BANK1 ] int 
  1479 ;;  eexp            2   36[BANK1 ] int 
  1480 ;;  width           2   26[BANK1 ] int 
  1481 ;;  flag            2   24[BANK1 ] unsigned short 
  1482 ;;  cp              2    0        PTR const unsigned char 
  1483 ;;  len             2    0        unsigned int 
  1484 ;;  c               1   45[BANK1 ] unsigned char 
  1485 ;;  ap              1   23[BANK1 ] PTR void [1]
  1486 ;;		 -> ?_sprintf(2), 
  1487 ;;  d               1    0        unsigned char 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  2    8[BANK1 ] int 
  1490 ;; Registers used:
  1491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1497 ;;      Params:         0       0      11       0       0
  1498 ;;      Locals:         0       0      27       0       0
  1499 ;;      Temps:          0       5       0       0       0
  1500 ;;      Totals:         0       5      38       0       0
  1501 ;;Total ram usage:       43 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; Hardware stack levels required when called:    4
  1504 ;; This function calls:
  1505 ;;		___awdiv
  1506 ;;		___fladd
  1507 ;;		___fleq
  1508 ;;		___flge
  1509 ;;		___flmul
  1510 ;;		___flneg
  1511 ;;		___flsub
  1512 ;;		___fltol
  1513 ;;		___lldiv
  1514 ;;		___llmod
  1515 ;;		___wmul
  1516 ;;		___xxtofl
  1517 ;;		__div_to_l_
  1518 ;;		__tdiv_to_l_
  1519 ;;		_fround
  1520 ;;		_isdigit
  1521 ;;		_scale
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function _sprintf
  1529  14F4                     _sprintf:
  1530                           
  1531                           ;incstack = 0
  1532                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1533                           ;sprintf@sp stored from wreg
  1534  14F4  1683               	bsf	3,5	;RP0=1, select bank1
  1535  14F5  1303               	bcf	3,6	;RP1=0, select bank1
  1536  14F6  00CA               	movwf	sprintf@sp^(0+128)
  1537  14F7                     l3726:
  1538                           
  1539                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const c
      +                          har * f, ...);D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 506: {;D:\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\Microchip\xc8\v2.31\pi
      +                          c\sources\c90\common\doprnt.c: 512:  char c;;D:\Microchip\xc8\v2.31\pic\sources\c90\comm
      +                          on\doprnt.c: 514:  int width;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 51
      +                          7:  int prec;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsigned sho
      +                          rt flag;
  1540  14F7  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1541  14F8  1283               	bcf	3,5	;RP0=0, select bank0
  1542  14F9  1303               	bcf	3,6	;RP1=0, select bank0
  1543  14FA  00EA               	movwf	??_sprintf
  1544  14FB  086A               	movf	??_sprintf,w
  1545  14FC  1683               	bsf	3,5	;RP0=1, select bank1
  1546  14FD  1303               	bcf	3,6	;RP1=0, select bank1
  1547  14FE  00B7               	movwf	sprintf@ap^(0+128)
  1548  14FF                     L1:
  1549                           
  1550                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1551  14FF  120A  118A  2EDA   	goto	l4008
  1552  1502                     l3728:
  1553                           
  1554                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  1555  1502  3025               	movlw	37
  1556  1503  064D               	xorwf	sprintf@c^(0+128),w
  1557  1504  1903               	btfsc	3,2
  1558  1505  2D07               	goto	u5861
  1559  1506  2D08               	goto	u5860
  1560  1507                     u5861:
  1561  1507  2D1C               	goto	l3734
  1562  1508                     u5860:
  1563  1508                     l3730:
  1564                           
  1565                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;D:\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1566  1508  084D               	movf	sprintf@c^(0+128),w
  1567  1509  1283               	bcf	3,5	;RP0=0, select bank0
  1568  150A  1303               	bcf	3,6	;RP1=0, select bank0
  1569  150B  00EA               	movwf	??_sprintf
  1570  150C  1683               	bsf	3,5	;RP0=1, select bank1
  1571  150D  1303               	bcf	3,6	;RP1=0, select bank1
  1572  150E  084A               	movf	sprintf@sp^(0+128),w
  1573  150F  0084               	movwf	4
  1574  1510  1283               	bcf	3,5	;RP0=0, select bank0
  1575  1511  1303               	bcf	3,6	;RP1=0, select bank0
  1576  1512  086A               	movf	??_sprintf,w
  1577  1513  1383               	bcf	3,7	;select IRP bank0
  1578  1514  0080               	movwf	0
  1579  1515                     l3732:
  1580  1515  3001               	movlw	1
  1581  1516  00EA               	movwf	??_sprintf
  1582  1517  086A               	movf	??_sprintf,w
  1583  1518  1683               	bsf	3,5	;RP0=1, select bank1
  1584  1519  1303               	bcf	3,6	;RP1=0, select bank1
  1585  151A  07CA               	addwf	sprintf@sp^(0+128),f
  1586                           
  1587                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1588  151B  2CFF               	goto	L1
  1589  151C                     l3734:
  1590                           
  1591                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1592  151C  01BA               	clrf	sprintf@width^(0+128)
  1593  151D  01BB               	clrf	(sprintf@width+1)^(0+128)
  1594                           
  1595                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1596  151E  01B8               	clrf	sprintf@flag^(0+128)
  1597  151F  01B9               	clrf	(sprintf@flag+1)^(0+128)
  1598  1520                     l3736:
  1599                           
  1600                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit((unsigned)*f)
      +                          ) {
  1601  1520  0828               	movf	sprintf@f^(0+128),w
  1602  1521  0084               	movwf	4
  1603  1522  120A  118A  270A  160A  118A  	fcall	stringdir
  1604  1527  160A  158A  20C7  160A  118A  	fcall	_isdigit
  1605  152C  1C03               	btfss	3,0
  1606  152D  2D2F               	goto	u5871
  1607  152E  2D30               	goto	u5870
  1608  152F                     u5871:
  1609  152F  2D7C               	goto	l3748
  1610  1530                     u5870:
  1611  1530                     l3738:
  1612                           
  1613                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0;
  1614  1530  1683               	bsf	3,5	;RP0=1, select bank1
  1615  1531  1303               	bcf	3,6	;RP1=0, select bank1
  1616  1532  01BA               	clrf	sprintf@width^(0+128)
  1617  1533  01BB               	clrf	(sprintf@width+1)^(0+128)
  1618  1534                     l3740:
  1619                           
  1620                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *= 10;
  1621  1534  300A               	movlw	10
  1622  1535  00F2               	movwf	___wmul@multiplier
  1623  1536  3000               	movlw	0
  1624  1537  00F3               	movwf	___wmul@multiplier+1
  1625  1538  1683               	bsf	3,5	;RP0=1, select bank1
  1626  1539  1303               	bcf	3,6	;RP1=0, select bank1
  1627  153A  083B               	movf	(sprintf@width+1)^(0+128),w
  1628  153B  00F5               	movwf	___wmul@multiplicand+1
  1629  153C  083A               	movf	sprintf@width^(0+128),w
  1630  153D  00F4               	movwf	___wmul@multiplicand
  1631  153E  160A  158A  215C  160A  118A  	fcall	___wmul
  1632  1543  0873               	movf	?___wmul+1,w
  1633  1544  1683               	bsf	3,5	;RP0=1, select bank1
  1634  1545  1303               	bcf	3,6	;RP1=0, select bank1
  1635  1546  00BB               	movwf	(sprintf@width+1)^(0+128)
  1636  1547  0872               	movf	?___wmul,w
  1637  1548  00BA               	movwf	sprintf@width^(0+128)
  1638  1549                     l3742:
  1639                           
  1640                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width += *f++ - '0'
      +                          ;
  1641  1549  0828               	movf	sprintf@f^(0+128),w
  1642  154A  0084               	movwf	4
  1643  154B  120A  118A  270A  160A  118A  	fcall	stringdir
  1644  1550  3ED0               	addlw	208
  1645  1551  1283               	bcf	3,5	;RP0=0, select bank0
  1646  1552  1303               	bcf	3,6	;RP1=0, select bank0
  1647  1553  00EA               	movwf	??_sprintf
  1648  1554  30FF               	movlw	255
  1649  1555  1803               	skipnc
  1650  1556  3000               	movlw	0
  1651  1557  00EB               	movwf	??_sprintf+1
  1652  1558  086A               	movf	??_sprintf,w
  1653  1559  1683               	bsf	3,5	;RP0=1, select bank1
  1654  155A  1303               	bcf	3,6	;RP1=0, select bank1
  1655  155B  07BA               	addwf	sprintf@width^(0+128),f
  1656  155C  1803               	skipnc
  1657  155D  0ABB               	incf	(sprintf@width+1)^(0+128),f
  1658  155E  1283               	bcf	3,5	;RP0=0, select bank0
  1659  155F  1303               	bcf	3,6	;RP1=0, select bank0
  1660  1560  086B               	movf	??_sprintf+1,w
  1661  1561  1683               	bsf	3,5	;RP0=1, select bank1
  1662  1562  1303               	bcf	3,6	;RP1=0, select bank1
  1663  1563  07BB               	addwf	(sprintf@width+1)^(0+128),f
  1664  1564                     l3744:
  1665  1564  3001               	movlw	1
  1666  1565  1283               	bcf	3,5	;RP0=0, select bank0
  1667  1566  1303               	bcf	3,6	;RP1=0, select bank0
  1668  1567  00EA               	movwf	??_sprintf
  1669  1568  086A               	movf	??_sprintf,w
  1670  1569  1683               	bsf	3,5	;RP0=1, select bank1
  1671  156A  1303               	bcf	3,6	;RP1=0, select bank1
  1672  156B  07A8               	addwf	sprintf@f^(0+128),f
  1673  156C                     l3746:
  1674                           
  1675                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(isdigit((unsign
      +                          ed)*f));
  1676  156C  0828               	movf	sprintf@f^(0+128),w
  1677  156D  0084               	movwf	4
  1678  156E  120A  118A  270A  160A  118A  	fcall	stringdir
  1679  1573  160A  158A  20C7  160A  118A  	fcall	_isdigit
  1680  1578  1803               	btfsc	3,0
  1681  1579  2D7B               	goto	u5881
  1682  157A  2D7C               	goto	u5880
  1683  157B                     u5881:
  1684  157B  2D34               	goto	l3740
  1685  157C                     u5880:
  1686  157C                     l3748:
  1687                           
  1688                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '.') {
  1689  157C  1683               	bsf	3,5	;RP0=1, select bank1
  1690  157D  1303               	bcf	3,6	;RP1=0, select bank1
  1691  157E  0828               	movf	sprintf@f^(0+128),w
  1692  157F  0084               	movwf	4
  1693  1580  120A  118A  270A  160A  118A  	fcall	stringdir
  1694  1585  3A2E               	xorlw	46
  1695  1586  1D03               	skipz
  1696  1587  2D89               	goto	u5891
  1697  1588  2D8A               	goto	u5890
  1698  1589                     u5891:
  1699  1589  2DDF               	goto	l3764
  1700  158A                     u5890:
  1701  158A                     l3750:
  1702                           
  1703                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0x4000;
  1704  158A  1739               	bsf	(sprintf@flag^(0+128)+1),6
  1705  158B                     l3752:
  1706                           
  1707                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1708  158B  3001               	movlw	1
  1709  158C  1283               	bcf	3,5	;RP0=0, select bank0
  1710  158D  1303               	bcf	3,6	;RP1=0, select bank0
  1711  158E  00EA               	movwf	??_sprintf
  1712  158F  086A               	movf	??_sprintf,w
  1713  1590  1683               	bsf	3,5	;RP0=1, select bank1
  1714  1591  1303               	bcf	3,6	;RP1=0, select bank1
  1715  1592  07A8               	addwf	sprintf@f^(0+128),f
  1716  1593                     l3754:
  1717                           
  1718                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1719  1593  01CB               	clrf	sprintf@prec^(0+128)
  1720  1594  01CC               	clrf	(sprintf@prec+1)^(0+128)
  1721                           
  1722                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigne
      +                          d)*f)) {
  1723  1595  2DCE               	goto	l3762
  1724  1596                     l3756:
  1725                           
  1726                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *= 10;
  1727  1596  300A               	movlw	10
  1728  1597  00F2               	movwf	___wmul@multiplier
  1729  1598  3000               	movlw	0
  1730  1599  00F3               	movwf	___wmul@multiplier+1
  1731  159A  1683               	bsf	3,5	;RP0=1, select bank1
  1732  159B  1303               	bcf	3,6	;RP1=0, select bank1
  1733  159C  084C               	movf	(sprintf@prec+1)^(0+128),w
  1734  159D  00F5               	movwf	___wmul@multiplicand+1
  1735  159E  084B               	movf	sprintf@prec^(0+128),w
  1736  159F  00F4               	movwf	___wmul@multiplicand
  1737  15A0  160A  158A  215C  160A  118A  	fcall	___wmul
  1738  15A5  0873               	movf	?___wmul+1,w
  1739  15A6  1683               	bsf	3,5	;RP0=1, select bank1
  1740  15A7  1303               	bcf	3,6	;RP1=0, select bank1
  1741  15A8  00CC               	movwf	(sprintf@prec+1)^(0+128)
  1742  15A9  0872               	movf	?___wmul,w
  1743  15AA  00CB               	movwf	sprintf@prec^(0+128)
  1744  15AB                     l3758:
  1745                           
  1746                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec += *f++ - '0'
      +                          ;
  1747  15AB  0828               	movf	sprintf@f^(0+128),w
  1748  15AC  0084               	movwf	4
  1749  15AD  120A  118A  270A  160A  118A  	fcall	stringdir
  1750  15B2  3ED0               	addlw	208
  1751  15B3  1283               	bcf	3,5	;RP0=0, select bank0
  1752  15B4  1303               	bcf	3,6	;RP1=0, select bank0
  1753  15B5  00EA               	movwf	??_sprintf
  1754  15B6  30FF               	movlw	255
  1755  15B7  1803               	skipnc
  1756  15B8  3000               	movlw	0
  1757  15B9  00EB               	movwf	??_sprintf+1
  1758  15BA  086A               	movf	??_sprintf,w
  1759  15BB  1683               	bsf	3,5	;RP0=1, select bank1
  1760  15BC  1303               	bcf	3,6	;RP1=0, select bank1
  1761  15BD  07CB               	addwf	sprintf@prec^(0+128),f
  1762  15BE  1803               	skipnc
  1763  15BF  0ACC               	incf	(sprintf@prec+1)^(0+128),f
  1764  15C0  1283               	bcf	3,5	;RP0=0, select bank0
  1765  15C1  1303               	bcf	3,6	;RP1=0, select bank0
  1766  15C2  086B               	movf	??_sprintf+1,w
  1767  15C3  1683               	bsf	3,5	;RP0=1, select bank1
  1768  15C4  1303               	bcf	3,6	;RP1=0, select bank1
  1769  15C5  07CC               	addwf	(sprintf@prec+1)^(0+128),f
  1770  15C6                     l3760:
  1771  15C6  3001               	movlw	1
  1772  15C7  1283               	bcf	3,5	;RP0=0, select bank0
  1773  15C8  1303               	bcf	3,6	;RP1=0, select bank0
  1774  15C9  00EA               	movwf	??_sprintf
  1775  15CA  086A               	movf	??_sprintf,w
  1776  15CB  1683               	bsf	3,5	;RP0=1, select bank1
  1777  15CC  1303               	bcf	3,6	;RP1=0, select bank1
  1778  15CD  07A8               	addwf	sprintf@f^(0+128),f
  1779  15CE                     l3762:
  1780                           
  1781                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigne
      +                          d)*f)) {
  1782  15CE  0828               	movf	sprintf@f^(0+128),w
  1783  15CF  0084               	movwf	4
  1784  15D0  120A  118A  270A  160A  118A  	fcall	stringdir
  1785  15D5  160A  158A  20C7  160A  118A  	fcall	_isdigit
  1786  15DA  1803               	btfsc	3,0
  1787  15DB  2DDD               	goto	u5901
  1788  15DC  2DDE               	goto	u5900
  1789  15DD                     u5901:
  1790  15DD  2D96               	goto	l3756
  1791  15DE                     u5900:
  1792  15DE  2DE7               	goto	l3770
  1793  15DF                     l3764:
  1794                           
  1795                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1796  15DF  01CB               	clrf	sprintf@prec^(0+128)
  1797  15E0  01CC               	clrf	(sprintf@prec+1)^(0+128)
  1798  15E1                     l3766:
  1799                           
  1800                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0x1000;
  1801  15E1  1639               	bsf	(sprintf@flag^(0+128)+1),4
  1802  15E2  2DE7               	goto	l3770
  1803  15E3                     l283:	
  1804                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1805                           
  1806                           
  1807                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0x400;
  1808  15E3  1683               	bsf	3,5	;RP0=1, select bank1
  1809  15E4  1303               	bcf	3,6	;RP1=0, select bank1
  1810  15E5  1539               	bsf	(sprintf@flag^(0+128)+1),2
  1811                           
  1812                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1813  15E6  2E0B               	goto	l3772
  1814  15E7                     l3770:
  1815  15E7  3001               	movlw	1
  1816  15E8  1683               	bsf	3,5	;RP0=1, select bank1
  1817  15E9  1303               	bcf	3,6	;RP1=0, select bank1
  1818  15EA  07A8               	addwf	sprintf@f^(0+128),f
  1819  15EB  30FF               	movlw	-1
  1820  15EC  0728               	addwf	sprintf@f^(0+128),w
  1821  15ED  0084               	movwf	4
  1822  15EE  120A  118A  270A  160A  118A  	fcall	stringdir
  1823  15F3  00CD               	movwf	sprintf@c^(0+128)
  1824  15F4  1283               	bcf	3,5	;RP0=0, select bank0
  1825  15F5  1303               	bcf	3,6	;RP1=0, select bank0
  1826  15F6  00EA               	movwf	??_sprintf
  1827  15F7  01EB               	clrf	??_sprintf+1
  1828                           
  1829                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1830                           ; Switch size 1, requested type "simple"
  1831                           ; Number of cases is 1, Range of values is 0 to 0
  1832                           ; switch strategies available:
  1833                           ; Name         Instructions Cycles
  1834                           ; simple_byte            4     3 (average)
  1835                           ; direct_byte           11     8 (fixed)
  1836                           ; jumptable            260     6 (fixed)
  1837                           ;	Chosen strategy is simple_byte
  1838  15F8  086B               	movf	??_sprintf+1,w
  1839  15F9  3A00               	xorlw	0	; case 0
  1840  15FA  1903               	skipnz
  1841  15FB  2DFD               	goto	l4108
  1842  15FC  2CFF               	goto	L1
  1843  15FD                     l4108:
  1844                           
  1845                           ; Switch size 1, requested type "simple"
  1846                           ; Number of cases is 4, Range of values is 0 to 105
  1847                           ; switch strategies available:
  1848                           ; Name         Instructions Cycles
  1849                           ; simple_byte           13     7 (average)
  1850                           ; jumptable            260     6 (fixed)
  1851                           ;	Chosen strategy is simple_byte
  1852  15FD  086A               	movf	??_sprintf,w
  1853  15FE  3A00               	xorlw	0	; case 0
  1854  15FF  1903               	skipnz
  1855  1600  2FFD               	goto	L3
  1856  1601  3A64               	xorlw	100	; case 100
  1857  1602  1903               	skipnz
  1858  1603  2E0B               	goto	l3772
  1859  1604  3A02               	xorlw	2	; case 102
  1860  1605  1903               	skipnz
  1861  1606  2DE3               	goto	l283
  1862  1607  3A0F               	xorlw	15	; case 105
  1863  1608  1903               	skipnz
  1864  1609  2E0B               	goto	l3772
  1865  160A  2CFF               	goto	L1
  1866  160B                     l3772:
  1867                           
  1868                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & (0x700)) {
  1869  160B  3000               	movlw	0
  1870  160C  1683               	bsf	3,5	;RP0=1, select bank1
  1871  160D  1303               	bcf	3,6	;RP1=0, select bank1
  1872  160E  0538               	andwf	sprintf@flag^(0+128),w
  1873  160F  1283               	bcf	3,5	;RP0=0, select bank0
  1874  1610  1303               	bcf	3,6	;RP1=0, select bank0
  1875  1611  00EA               	movwf	??_sprintf
  1876  1612  3007               	movlw	7
  1877  1613  1683               	bsf	3,5	;RP0=1, select bank1
  1878  1614  1303               	bcf	3,6	;RP1=0, select bank1
  1879  1615  0539               	andwf	(sprintf@flag+1)^(0+128),w
  1880  1616  1283               	bcf	3,5	;RP0=0, select bank0
  1881  1617  1303               	bcf	3,6	;RP1=0, select bank0
  1882  1618  00EB               	movwf	??_sprintf+1
  1883  1619  086A               	movf	??_sprintf,w
  1884  161A  046B               	iorwf	??_sprintf+1,w
  1885  161B  1903               	btfsc	3,2
  1886  161C  2E1E               	goto	u5911
  1887  161D  2E21               	goto	u5910
  1888  161E                     u5911:
  1889  161E  120A  118A  2CD1   	goto	l3930
  1890  1621                     u5910:
  1891  1621                     l3774:
  1892                           
  1893                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag & 0x1000)
  1894  1621  1683               	bsf	3,5	;RP0=1, select bank1
  1895  1622  1303               	bcf	3,6	;RP1=0, select bank1
  1896  1623  1E39               	btfss	(sprintf@flag+1)^(0+128),4
  1897  1624  2E26               	goto	u5921
  1898  1625  2E27               	goto	u5920
  1899  1626                     u5921:
  1900  1626  2E2B               	goto	l3778
  1901  1627                     u5920:
  1902  1627                     l3776:
  1903                           
  1904                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6;
  1905  1627  3006               	movlw	6
  1906  1628  00CB               	movwf	sprintf@prec^(0+128)
  1907  1629  3000               	movlw	0
  1908  162A  00CC               	movwf	(sprintf@prec^(0+128)+1)
  1909  162B                     l3778:
  1910                           
  1911                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*(double *)__va
      +                          _arg((*(double **)ap), (double)0));
  1912  162B  0837               	movf	sprintf@ap^(0+128),w
  1913  162C  0084               	movwf	4
  1914  162D  1383               	bcf	3,7	;select IRP bank0
  1915  162E  0800               	movf	0,w
  1916  162F  00C6               	movwf	sprintf@fval^(0+128)
  1917  1630  0A84               	incf	4,f
  1918  1631  0800               	movf	0,w
  1919  1632  00C7               	movwf	(sprintf@fval+1)^(0+128)
  1920  1633  0A84               	incf	4,f
  1921  1634  0800               	movf	0,w
  1922  1635  00C8               	movwf	(sprintf@fval+2)^(0+128)
  1923  1636  0A84               	incf	4,f
  1924  1637  0800               	movf	0,w
  1925  1638  00C9               	movwf	(sprintf@fval+3)^(0+128)
  1926  1639                     l3780:
  1927  1639  3004               	movlw	4
  1928  163A  1283               	bcf	3,5	;RP0=0, select bank0
  1929  163B  1303               	bcf	3,6	;RP1=0, select bank0
  1930  163C  00EA               	movwf	??_sprintf
  1931  163D  086A               	movf	??_sprintf,w
  1932  163E  1683               	bsf	3,5	;RP0=1, select bank1
  1933  163F  1303               	bcf	3,6	;RP1=0, select bank1
  1934  1640  07B7               	addwf	sprintf@ap^(0+128),f
  1935  1641                     l3782:
  1936                           
  1937                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval < 0.0) {
  1938  1641  0849               	movf	(sprintf@fval+3)^(0+128),w
  1939  1642  00F5               	movwf	___flge@ff1+3
  1940  1643  0848               	movf	(sprintf@fval+2)^(0+128),w
  1941  1644  00F4               	movwf	___flge@ff1+2
  1942  1645  0847               	movf	(sprintf@fval+1)^(0+128),w
  1943  1646  00F3               	movwf	___flge@ff1+1
  1944  1647  0846               	movf	sprintf@fval^(0+128),w
  1945  1648  00F2               	movwf	___flge@ff1
  1946  1649  3000               	movlw	0
  1947  164A  00F9               	movwf	___flge@ff2+3
  1948  164B  3000               	movlw	0
  1949  164C  00F8               	movwf	___flge@ff2+2
  1950  164D  3000               	movlw	0
  1951  164E  00F7               	movwf	___flge@ff2+1
  1952  164F  3000               	movlw	0
  1953  1650  00F6               	movwf	___flge@ff2
  1954  1651  160A  158A  253D  160A  118A  	fcall	___flge
  1955  1656  1803               	btfsc	3,0
  1956  1657  2E59               	goto	u5931
  1957  1658  2E5A               	goto	u5930
  1958  1659                     u5931:
  1959  1659  2E77               	goto	l3788
  1960  165A                     u5930:
  1961  165A                     l3784:
  1962                           
  1963                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -fval;
  1964  165A  1683               	bsf	3,5	;RP0=1, select bank1
  1965  165B  1303               	bcf	3,6	;RP1=0, select bank1
  1966  165C  0849               	movf	(sprintf@fval+3)^(0+128),w
  1967  165D  00F5               	movwf	___flneg@f1+3
  1968  165E  0848               	movf	(sprintf@fval+2)^(0+128),w
  1969  165F  00F4               	movwf	___flneg@f1+2
  1970  1660  0847               	movf	(sprintf@fval+1)^(0+128),w
  1971  1661  00F3               	movwf	___flneg@f1+1
  1972  1662  0846               	movf	sprintf@fval^(0+128),w
  1973  1663  00F2               	movwf	___flneg@f1
  1974  1664  160A  158A  20A2  160A  118A  	fcall	___flneg
  1975  1669  0875               	movf	?___flneg+3,w
  1976  166A  1683               	bsf	3,5	;RP0=1, select bank1
  1977  166B  1303               	bcf	3,6	;RP1=0, select bank1
  1978  166C  00C9               	movwf	(sprintf@fval+3)^(0+128)
  1979  166D  0874               	movf	?___flneg+2,w
  1980  166E  00C8               	movwf	(sprintf@fval+2)^(0+128)
  1981  166F  0873               	movf	?___flneg+1,w
  1982  1670  00C7               	movwf	(sprintf@fval+1)^(0+128)
  1983  1671  0872               	movf	?___flneg,w
  1984  1672  00C6               	movwf	sprintf@fval^(0+128)
  1985  1673                     l3786:
  1986                           
  1987                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 0x03;
  1988  1673  3003               	movlw	3
  1989  1674  04B8               	iorwf	sprintf@flag^(0+128),f
  1990  1675  3000               	movlw	0
  1991  1676  04B9               	iorwf	(sprintf@flag+1)^(0+128),f
  1992  1677                     l3788:
  1993                           
  1994                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1995  1677  1683               	bsf	3,5	;RP0=1, select bank1
  1996  1678  1303               	bcf	3,6	;RP1=0, select bank1
  1997  1679  01C4               	clrf	sprintf@eexp^(0+128)
  1998  167A  01C5               	clrf	(sprintf@eexp+1)^(0+128)
  1999  167B                     l3790:
  2000                           
  2001                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!=0) {
  2002  167B  0849               	movf	(sprintf@fval+3)^(0+128),w
  2003  167C  00F5               	movwf	___fleq@ff1+3
  2004  167D  0848               	movf	(sprintf@fval+2)^(0+128),w
  2005  167E  00F4               	movwf	___fleq@ff1+2
  2006  167F  0847               	movf	(sprintf@fval+1)^(0+128),w
  2007  1680  00F3               	movwf	___fleq@ff1+1
  2008  1681  0846               	movf	sprintf@fval^(0+128),w
  2009  1682  00F2               	movwf	___fleq@ff1
  2010  1683  3000               	movlw	0
  2011  1684  00F9               	movwf	___fleq@ff2+3
  2012  1685  3000               	movlw	0
  2013  1686  00F8               	movwf	___fleq@ff2+2
  2014  1687  3000               	movlw	0
  2015  1688  00F7               	movwf	___fleq@ff2+1
  2016  1689  3000               	movlw	0
  2017  168A  00F6               	movwf	___fleq@ff2
  2018  168B  160A  158A  2283  160A  118A  	fcall	___fleq
  2019  1690  1803               	btfsc	3,0
  2020  1691  2E93               	goto	u5941
  2021  1692  2E94               	goto	u5940
  2022  1693                     u5941:
  2023  1693  2F94               	goto	l3816
  2024  1694                     u5940:
  2025  1694                     l3792:
  2026                           
  2027                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*(&eexp) = (uns
      +                          igned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2028  1694  1003               	clrc
  2029  1695  1683               	bsf	3,5	;RP0=1, select bank1
  2030  1696  1303               	bcf	3,6	;RP1=0, select bank1
  2031  1697  0D48               	rlf	(sprintf@fval+2)^(0+128),w
  2032  1698  0D49               	rlf	(sprintf@fval+3)^(0+128),w
  2033  1699  3E82               	addlw	130
  2034  169A  00C4               	movwf	sprintf@eexp^(0+128)
  2035  169B  30FF               	movlw	255
  2036  169C  1803               	skipnc
  2037  169D  3000               	movlw	0
  2038  169E  00C5               	movwf	(sprintf@eexp^(0+128)+1)
  2039  169F                     l3794:
  2040                           
  2041                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2042  169F  30FF               	movlw	255
  2043  16A0  07C4               	addwf	sprintf@eexp^(0+128),f
  2044  16A1  1803               	skipnc
  2045  16A2  0AC5               	incf	(sprintf@eexp+1)^(0+128),f
  2046  16A3  30FF               	movlw	255
  2047  16A4  07C5               	addwf	(sprintf@eexp+1)^(0+128),f
  2048  16A5                     l3796:
  2049                           
  2050                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 3;
  2051  16A5  3003               	movlw	3
  2052  16A6  00F2               	movwf	___wmul@multiplier
  2053  16A7  3000               	movlw	0
  2054  16A8  00F3               	movwf	___wmul@multiplier+1
  2055  16A9  0845               	movf	(sprintf@eexp+1)^(0+128),w
  2056  16AA  00F5               	movwf	___wmul@multiplicand+1
  2057  16AB  0844               	movf	sprintf@eexp^(0+128),w
  2058  16AC  00F4               	movwf	___wmul@multiplicand
  2059  16AD  160A  158A  215C  160A  118A  	fcall	___wmul
  2060  16B2  0873               	movf	?___wmul+1,w
  2061  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  2062  16B4  1303               	bcf	3,6	;RP1=0, select bank1
  2063  16B5  00C5               	movwf	(sprintf@eexp+1)^(0+128)
  2064  16B6  0872               	movf	?___wmul,w
  2065  16B7  00C4               	movwf	sprintf@eexp^(0+128)
  2066  16B8                     l3798:
  2067                           
  2068                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 10;
  2069  16B8  300A               	movlw	10
  2070  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2071  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2072  16BB  00A0               	movwf	___awdiv@divisor
  2073  16BC  3000               	movlw	0
  2074  16BD  00A1               	movwf	___awdiv@divisor+1
  2075  16BE  1683               	bsf	3,5	;RP0=1, select bank1
  2076  16BF  1303               	bcf	3,6	;RP1=0, select bank1
  2077  16C0  0845               	movf	(sprintf@eexp+1)^(0+128),w
  2078  16C1  1283               	bcf	3,5	;RP0=0, select bank0
  2079  16C2  1303               	bcf	3,6	;RP1=0, select bank0
  2080  16C3  00A3               	movwf	___awdiv@dividend+1
  2081  16C4  1683               	bsf	3,5	;RP0=1, select bank1
  2082  16C5  1303               	bcf	3,6	;RP1=0, select bank1
  2083  16C6  0844               	movf	sprintf@eexp^(0+128),w
  2084  16C7  1283               	bcf	3,5	;RP0=0, select bank0
  2085  16C8  1303               	bcf	3,6	;RP1=0, select bank0
  2086  16C9  00A2               	movwf	___awdiv@dividend
  2087  16CA  160A  158A  2438  160A  118A  	fcall	___awdiv
  2088  16CF  1283               	bcf	3,5	;RP0=0, select bank0
  2089  16D0  1303               	bcf	3,6	;RP1=0, select bank0
  2090  16D1  0821               	movf	?___awdiv+1,w
  2091  16D2  1683               	bsf	3,5	;RP0=1, select bank1
  2092  16D3  1303               	bcf	3,6	;RP1=0, select bank1
  2093  16D4  00C5               	movwf	(sprintf@eexp+1)^(0+128)
  2094  16D5  1283               	bcf	3,5	;RP0=0, select bank0
  2095  16D6  1303               	bcf	3,6	;RP1=0, select bank0
  2096  16D7  0820               	movf	?___awdiv,w
  2097  16D8  1683               	bsf	3,5	;RP0=1, select bank1
  2098  16D9  1303               	bcf	3,6	;RP1=0, select bank1
  2099  16DA  00C4               	movwf	sprintf@eexp^(0+128)
  2100  16DB                     l3800:
  2101                           
  2102                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp < 0)
  2103  16DB  1FC5               	btfss	(sprintf@eexp+1)^(0+128),7
  2104  16DC  2EDE               	goto	u5951
  2105  16DD  2EDF               	goto	u5950
  2106  16DE                     u5951:
  2107  16DE  2EE5               	goto	l3804
  2108  16DF                     u5950:
  2109  16DF                     l3802:
  2110                           
  2111                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2112  16DF  30FF               	movlw	255
  2113  16E0  07C4               	addwf	sprintf@eexp^(0+128),f
  2114  16E1  1803               	skipnc
  2115  16E2  0AC5               	incf	(sprintf@eexp+1)^(0+128),f
  2116  16E3  30FF               	movlw	255
  2117  16E4  07C5               	addwf	(sprintf@eexp+1)^(0+128),f
  2118  16E5                     l3804:
  2119                           
  2120                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.integ = scale(-
      +                          eexp);
  2121  16E5  0344               	decf	sprintf@eexp^(0+128),w
  2122  16E6  3AFF               	xorlw	255
  2123  16E7  120A  158A  249D  160A  118A  	fcall	_scale
  2124  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2125  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2126  16EE  0845               	movf	?_scale+3,w
  2127  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2128  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2129  16F1  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
  2130  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2131  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2132  16F4  0844               	movf	?_scale+2,w
  2133  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2134  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2135  16F7  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
  2136  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2137  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2138  16FA  0843               	movf	?_scale+1,w
  2139  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2140  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2141  16FD  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
  2142  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2143  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2144  1700  0842               	movf	?_scale,w
  2145  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2146  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2147  1703  00BC               	movwf	sprintf@tmpval^(0+128)
  2148  1704                     l3806:
  2149                           
  2150                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.integ *= fval;
  2151  1704  0849               	movf	(sprintf@fval+3)^(0+128),w
  2152  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2153  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2154  1707  00AB               	movwf	___flmul@b+3
  2155  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2156  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2157  170A  0848               	movf	(sprintf@fval+2)^(0+128),w
  2158  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2159  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2160  170D  00AA               	movwf	___flmul@b+2
  2161  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2162  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2163  1710  0847               	movf	(sprintf@fval+1)^(0+128),w
  2164  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2165  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2166  1713  00A9               	movwf	___flmul@b+1
  2167  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2168  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2169  1716  0846               	movf	sprintf@fval^(0+128),w
  2170  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2171  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2172  1719  00A8               	movwf	___flmul@b
  2173  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2174  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2175  171C  083F               	movf	(sprintf@tmpval+3)^(0+128),w
  2176  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2177  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2178  171F  00AF               	movwf	___flmul@a+3
  2179  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2180  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2181  1722  083E               	movf	(sprintf@tmpval+2)^(0+128),w
  2182  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2183  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2184  1725  00AE               	movwf	___flmul@a+2
  2185  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2186  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2187  1728  083D               	movf	(sprintf@tmpval+1)^(0+128),w
  2188  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2189  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2190  172B  00AD               	movwf	___flmul@a+1
  2191  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2192  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2193  172E  083C               	movf	sprintf@tmpval^(0+128),w
  2194  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2195  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2196  1731  00AC               	movwf	___flmul@a
  2197  1732  120A  158A  213C  160A  118A  	fcall	___flmul
  2198  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2199  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2200  1739  082B               	movf	?___flmul+3,w
  2201  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2202  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2203  173C  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
  2204  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2205  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2206  173F  082A               	movf	?___flmul+2,w
  2207  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2208  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2209  1742  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
  2210  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2211  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2212  1745  0829               	movf	?___flmul+1,w
  2213  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2214  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2215  1748  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
  2216  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2217  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2218  174B  0828               	movf	?___flmul,w
  2219  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2220  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2221  174E  00BC               	movwf	sprintf@tmpval^(0+128)
  2222  174F                     l3808:
  2223                           
  2224                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpval.integ < 1.0)
  2225  174F  083F               	movf	(sprintf@tmpval+3)^(0+128),w
  2226  1750  00F5               	movwf	___flge@ff1+3
  2227  1751  083E               	movf	(sprintf@tmpval+2)^(0+128),w
  2228  1752  00F4               	movwf	___flge@ff1+2
  2229  1753  083D               	movf	(sprintf@tmpval+1)^(0+128),w
  2230  1754  00F3               	movwf	___flge@ff1+1
  2231  1755  083C               	movf	sprintf@tmpval^(0+128),w
  2232  1756  00F2               	movwf	___flge@ff1
  2233  1757  303F               	movlw	63
  2234  1758  00F9               	movwf	___flge@ff2+3
  2235  1759  3080               	movlw	128
  2236  175A  00F8               	movwf	___flge@ff2+2
  2237  175B  3000               	movlw	0
  2238  175C  00F7               	movwf	___flge@ff2+1
  2239  175D  3000               	movlw	0
  2240  175E  00F6               	movwf	___flge@ff2
  2241  175F  160A  158A  253D  160A  118A  	fcall	___flge
  2242  1764  1803               	btfsc	3,0
  2243  1765  2F67               	goto	u5961
  2244  1766  2F68               	goto	u5960
  2245  1767                     u5961:
  2246  1767  2F71               	goto	l3812
  2247  1768                     u5960:
  2248  1768                     l3810:
  2249                           
  2250                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2251  1768  30FF               	movlw	255
  2252  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2253  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2254  176B  07C4               	addwf	sprintf@eexp^(0+128),f
  2255  176C  1803               	skipnc
  2256  176D  0AC5               	incf	(sprintf@eexp+1)^(0+128),f
  2257  176E  30FF               	movlw	255
  2258  176F  07C5               	addwf	(sprintf@eexp+1)^(0+128),f
  2259  1770  2F94               	goto	l3816
  2260  1771                     l3812:
  2261  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2262  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2263  1773  083F               	movf	(sprintf@tmpval+3)^(0+128),w
  2264  1774  00F5               	movwf	___flge@ff1+3
  2265  1775  083E               	movf	(sprintf@tmpval+2)^(0+128),w
  2266  1776  00F4               	movwf	___flge@ff1+2
  2267  1777  083D               	movf	(sprintf@tmpval+1)^(0+128),w
  2268  1778  00F3               	movwf	___flge@ff1+1
  2269  1779  083C               	movf	sprintf@tmpval^(0+128),w
  2270  177A  00F2               	movwf	___flge@ff1
  2271  177B  3041               	movlw	65
  2272  177C  00F9               	movwf	___flge@ff2+3
  2273  177D  3020               	movlw	32
  2274  177E  00F8               	movwf	___flge@ff2+2
  2275  177F  3000               	movlw	0
  2276  1780  00F7               	movwf	___flge@ff2+1
  2277  1781  3000               	movlw	0
  2278  1782  00F6               	movwf	___flge@ff2
  2279  1783  160A  158A  253D  160A  118A  	fcall	___flge
  2280  1788  1C03               	btfss	3,0
  2281  1789  2F8B               	goto	u5971
  2282  178A  2F8C               	goto	u5970
  2283  178B                     u5971:
  2284  178B  2F94               	goto	l3816
  2285  178C                     u5970:
  2286  178C                     l3814:
  2287                           
  2288                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2289  178C  3001               	movlw	1
  2290  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2291  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2292  178F  07C4               	addwf	sprintf@eexp^(0+128),f
  2293  1790  1803               	skipnc
  2294  1791  0AC5               	incf	(sprintf@eexp+1)^(0+128),f
  2295  1792  3000               	movlw	0
  2296  1793  07C5               	addwf	(sprintf@eexp+1)^(0+128),f
  2297  1794                     l3816:
  2298                           
  2299                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(prec <= 12)
  2300  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2301  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2302  1796  084C               	movf	(sprintf@prec+1)^(0+128),w
  2303  1797  3A80               	xorlw	128
  2304  1798  00FF               	movwf	btemp+1
  2305  1799  3080               	movlw	128
  2306  179A  027F               	subwf	btemp+1,w
  2307  179B  1D03               	skipz
  2308  179C  2F9F               	goto	u5985
  2309  179D  300D               	movlw	13
  2310  179E  024B               	subwf	sprintf@prec^(0+128),w
  2311  179F                     u5985:
  2312  179F  1803               	skipnc
  2313  17A0  2FA2               	goto	u5981
  2314  17A1  2FA3               	goto	u5980
  2315  17A2                     u5981:
  2316  17A2  2FEA               	goto	l3820
  2317  17A3                     u5980:
  2318  17A3                     l3818:
  2319                           
  2320                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval += fround((uns
      +                          igned int)prec);
  2321  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2322  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2323  17A5  084B               	movf	sprintf@prec^(0+128),w
  2324  17A6  160A  118A  205F  160A  118A  	fcall	_fround
  2325  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2326  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2327  17AD  0845               	movf	?_fround+3,w
  2328  17AE  00D9               	movwf	___fladd@b+3
  2329  17AF  0844               	movf	?_fround+2,w
  2330  17B0  00D8               	movwf	___fladd@b+2
  2331  17B1  0843               	movf	?_fround+1,w
  2332  17B2  00D7               	movwf	___fladd@b+1
  2333  17B3  0842               	movf	?_fround,w
  2334  17B4  00D6               	movwf	___fladd@b
  2335  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2336  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2337  17B7  0849               	movf	(sprintf@fval+3)^(0+128),w
  2338  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2339  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2340  17BA  00DD               	movwf	___fladd@a+3
  2341  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2342  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2343  17BD  0848               	movf	(sprintf@fval+2)^(0+128),w
  2344  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2345  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2346  17C0  00DC               	movwf	___fladd@a+2
  2347  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2348  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2349  17C3  0847               	movf	(sprintf@fval+1)^(0+128),w
  2350  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2351  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2352  17C6  00DB               	movwf	___fladd@a+1
  2353  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2354  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2355  17C9  0846               	movf	sprintf@fval^(0+128),w
  2356  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2357  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2358  17CC  00DA               	movwf	___fladd@a
  2359  17CD  160A  118A  226C  160A  118A  	fcall	___fladd
  2360  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2361  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2362  17D4  0859               	movf	?___fladd+3,w
  2363  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2364  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2365  17D7  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2366  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2367  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2368  17DA  0858               	movf	?___fladd+2,w
  2369  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2370  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2371  17DD  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2372  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2373  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2374  17E0  0857               	movf	?___fladd+1,w
  2375  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2376  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2377  17E3  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2378  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2379  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2380  17E6  0856               	movf	?___fladd,w
  2381  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2382  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2383  17E9  00C6               	movwf	sprintf@fval^(0+128)
  2384  17EA                     l3820:
  2385                           
  2386                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eexp > 9)||(fval 
      +                          != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2387  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2388  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2389  17EC  0845               	movf	(sprintf@eexp+1)^(0+128),w
  2390  17ED  3A80               	xorlw	128
  2391  17EE  00FF               	movwf	btemp+1
  2392  17EF  3080               	movlw	128
  2393  17F0  027F               	subwf	btemp+1,w
  2394  17F1  1D03               	skipz
  2395  17F2  2FF5               	goto	u5995
  2396  17F3  300A               	movlw	10
  2397  17F4  0244               	subwf	sprintf@eexp^(0+128),w
  2398  17F5                     u5995:
  2399  17F5  1803               	skipnc
  2400  17F6  2FFA               	goto	u5991
  2401  17F7  120A  118A  281D   	goto	u5990
  2402  17FA                     u5991:
  2403  17FA  120A  118A  286E   	goto	l3828
  2404  17FD                     L3:
  2405  17FD                     L2:
  2406  17FD  120A  118A  2EF4   	ljmp	l4010
  2407                           
  2408                           	psect	text2
  2409  0C9D                     __ptext2:	
  2410 ;; *************** function _scale *****************
  2411 ;; Defined at:
  2412 ;;		line 433 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  scl             1    wreg     char 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  scl             1   52[BANK0 ] char 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  4   34[BANK0 ] char 
  2419 ;; Registers used:
  2420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2426 ;;      Params:         0       4       0       0       0
  2427 ;;      Locals:         0       5       0       0       0
  2428 ;;      Temps:          0      10       0       0       0
  2429 ;;      Totals:         0      19       0       0       0
  2430 ;;Total ram usage:       19 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; Hardware stack levels required when called:    3
  2433 ;; This function calls:
  2434 ;;		___awdiv
  2435 ;;		___awmod
  2436 ;;		___flmul
  2437 ;; This function is called by:
  2438 ;;		_sprintf
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           
  2443                           ;psect for function _scale
  2444  0C9D                     _scale:
  2445                           
  2446                           ;incstack = 0
  2447                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2448                           ;scale@scl stored from wreg
  2449  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2450  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2451  0C9F  00D4               	movwf	scale@scl
  2452  0CA0                     l2842:
  2453                           
  2454                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed char scl);D:\
      +                          Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;D:\Microchip\xc8\v2.31\pic\s
      +                          ources\c90\common\doprnt.c: 436:  if(scl < 0) {
  2455  0CA0  1FD4               	btfss	scale@scl,7
  2456  0CA1  2CA3               	goto	u4091
  2457  0CA2  2CA4               	goto	u4090
  2458  0CA3                     u4091:
  2459  0CA3  2E53               	goto	l2864
  2460  0CA4                     u4090:
  2461  0CA4                     l2844:
  2462                           
  2463                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl;
  2464  0CA4  09D4               	comf	scale@scl,f
  2465  0CA5  0AD4               	incf	scale@scl,f
  2466  0CA6                     l2846:
  2467                           
  2468                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=110)
  2469  0CA6  0854               	movf	scale@scl,w
  2470  0CA7  3A80               	xorlw	128
  2471  0CA8  3E12               	addlw	-238
  2472  0CA9  1C03               	skipc
  2473  0CAA  2CAC               	goto	u4101
  2474  0CAB  2CAD               	goto	u4100
  2475  0CAC                     u4101:
  2476  0CAC  2D97               	goto	l2854
  2477  0CAD                     u4100:
  2478  0CAD                     l2848:
  2479                           
  2480                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsig
      +                          ned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigne
      +                          d char)(scl%10)];
  2481  0CAD  300A               	movlw	10
  2482  0CAE  00A0               	movwf	___awdiv@divisor
  2483  0CAF  3000               	movlw	0
  2484  0CB0  00A1               	movwf	___awdiv@divisor+1
  2485  0CB1  0854               	movf	scale@scl,w
  2486  0CB2  00F4               	movwf	___awmod@dividend
  2487  0CB3  01F5               	clrf	___awmod@dividend+1
  2488  0CB4  1BF4               	btfsc	___awmod@dividend,7
  2489  0CB5  03F5               	decf	___awmod@dividend+1,f
  2490  0CB6  3064               	movlw	100
  2491  0CB7  00F2               	movwf	___awmod@divisor
  2492  0CB8  3000               	movlw	0
  2493  0CB9  00F3               	movwf	___awmod@divisor+1
  2494  0CBA  160A  118A  2006  120A  158A  	fcall	___awmod
  2495  0CBF  0873               	movf	?___awmod+1,w
  2496  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2497  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2498  0CC2  00A3               	movwf	___awdiv@dividend+1
  2499  0CC3  0872               	movf	?___awmod,w
  2500  0CC4  00A2               	movwf	___awdiv@dividend
  2501  0CC5  160A  158A  2438  120A  158A  	fcall	___awdiv
  2502  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2503  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2504  0CCC  0820               	movf	?___awdiv,w
  2505  0CCD  00C6               	movwf	??_scale
  2506  0CCE  3001               	movlw	1
  2507  0CCF                     u4115:
  2508  0CCF  1003               	clrc
  2509  0CD0  0DC6               	rlf	??_scale,f
  2510  0CD1  3EFF               	addlw	-1
  2511  0CD2  1D03               	skipz
  2512  0CD3  2CCF               	goto	u4115
  2513  0CD4  1003               	clrc
  2514  0CD5  0D46               	rlf	??_scale,w
  2515  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2516  0CD7  0084               	movwf	4
  2517  0CD8  120A  118A  270A  120A  158A  	fcall	stringdir
  2518  0CDD  00C7               	movwf	??_scale+1
  2519  0CDE  120A  118A  270A  120A  158A  	fcall	stringdir
  2520  0CE3  00C8               	movwf	??_scale+2
  2521  0CE4  120A  118A  270A  120A  158A  	fcall	stringdir
  2522  0CE9  00C9               	movwf	??_scale+3
  2523  0CEA  120A  118A  270A  120A  158A  	fcall	stringdir
  2524  0CEF  00CA               	movwf	??_scale+4
  2525  0CF0  084A               	movf	??_scale+4,w
  2526  0CF1  00AB               	movwf	___flmul@b+3
  2527  0CF2  0849               	movf	??_scale+3,w
  2528  0CF3  00AA               	movwf	___flmul@b+2
  2529  0CF4  0848               	movf	??_scale+2,w
  2530  0CF5  00A9               	movwf	___flmul@b+1
  2531  0CF6  0847               	movf	??_scale+1,w
  2532  0CF7  00A8               	movwf	___flmul@b
  2533  0CF8  3064               	movlw	100
  2534  0CF9  00A0               	movwf	___awdiv@divisor
  2535  0CFA  3000               	movlw	0
  2536  0CFB  00A1               	movwf	___awdiv@divisor+1
  2537  0CFC  0854               	movf	scale@scl,w
  2538  0CFD  00A2               	movwf	___awdiv@dividend
  2539  0CFE  01A3               	clrf	___awdiv@dividend+1
  2540  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2541  0D00  03A3               	decf	___awdiv@dividend+1,f
  2542  0D01  160A  158A  2438  120A  158A  	fcall	___awdiv
  2543  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2544  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2545  0D08  0820               	movf	?___awdiv,w
  2546  0D09  00CB               	movwf	??_scale+5
  2547  0D0A  3001               	movlw	1
  2548  0D0B                     u4125:
  2549  0D0B  1003               	clrc
  2550  0D0C  0DCB               	rlf	??_scale+5,f
  2551  0D0D  3EFF               	addlw	-1
  2552  0D0E  1D03               	skipz
  2553  0D0F  2D0B               	goto	u4125
  2554  0D10  1003               	clrc
  2555  0D11  0D4B               	rlf	??_scale+5,w
  2556  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2557  0D13  0084               	movwf	4
  2558  0D14  120A  118A  270A  120A  158A  	fcall	stringdir
  2559  0D19  00CC               	movwf	??_scale+6
  2560  0D1A  120A  118A  270A  120A  158A  	fcall	stringdir
  2561  0D1F  00CD               	movwf	??_scale+7
  2562  0D20  120A  118A  270A  120A  158A  	fcall	stringdir
  2563  0D25  00CE               	movwf	??_scale+8
  2564  0D26  120A  118A  270A  120A  158A  	fcall	stringdir
  2565  0D2B  00CF               	movwf	??_scale+9
  2566  0D2C  084F               	movf	??_scale+9,w
  2567  0D2D  00AF               	movwf	___flmul@a+3
  2568  0D2E  084E               	movf	??_scale+8,w
  2569  0D2F  00AE               	movwf	___flmul@a+2
  2570  0D30  084D               	movf	??_scale+7,w
  2571  0D31  00AD               	movwf	___flmul@a+1
  2572  0D32  084C               	movf	??_scale+6,w
  2573  0D33  00AC               	movwf	___flmul@a
  2574  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2575  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2576  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2577  0D3B  082B               	movf	?___flmul+3,w
  2578  0D3C  00D3               	movwf	_scale$978+3
  2579  0D3D  082A               	movf	?___flmul+2,w
  2580  0D3E  00D2               	movwf	_scale$978+2
  2581  0D3F  0829               	movf	?___flmul+1,w
  2582  0D40  00D1               	movwf	_scale$978+1
  2583  0D41  0828               	movf	?___flmul,w
  2584  0D42  00D0               	movwf	_scale$978
  2585                           
  2586                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsig
      +                          ned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigne
      +                          d char)(scl%10)];
  2587  0D43  300A               	movlw	10
  2588  0D44  00F2               	movwf	___awmod@divisor
  2589  0D45  3000               	movlw	0
  2590  0D46  00F3               	movwf	___awmod@divisor+1
  2591  0D47  0854               	movf	scale@scl,w
  2592  0D48  00F4               	movwf	___awmod@dividend
  2593  0D49  01F5               	clrf	___awmod@dividend+1
  2594  0D4A  1BF4               	btfsc	___awmod@dividend,7
  2595  0D4B  03F5               	decf	___awmod@dividend+1,f
  2596  0D4C  160A  118A  2006  120A  158A  	fcall	___awmod
  2597  0D51  0872               	movf	?___awmod,w
  2598  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2599  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2600  0D54  00C6               	movwf	??_scale
  2601  0D55  3001               	movlw	1
  2602  0D56                     u4135:
  2603  0D56  1003               	clrc
  2604  0D57  0DC6               	rlf	??_scale,f
  2605  0D58  3EFF               	addlw	-1
  2606  0D59  1D03               	skipz
  2607  0D5A  2D56               	goto	u4135
  2608  0D5B  1003               	clrc
  2609  0D5C  0D46               	rlf	??_scale,w
  2610  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2611  0D5E  0084               	movwf	4
  2612  0D5F  120A  118A  270A  120A  158A  	fcall	stringdir
  2613  0D64  00C7               	movwf	??_scale+1
  2614  0D65  120A  118A  270A  120A  158A  	fcall	stringdir
  2615  0D6A  00C8               	movwf	??_scale+2
  2616  0D6B  120A  118A  270A  120A  158A  	fcall	stringdir
  2617  0D70  00C9               	movwf	??_scale+3
  2618  0D71  120A  118A  270A  120A  158A  	fcall	stringdir
  2619  0D76  00CA               	movwf	??_scale+4
  2620  0D77  084A               	movf	??_scale+4,w
  2621  0D78  00AB               	movwf	___flmul@b+3
  2622  0D79  0849               	movf	??_scale+3,w
  2623  0D7A  00AA               	movwf	___flmul@b+2
  2624  0D7B  0848               	movf	??_scale+2,w
  2625  0D7C  00A9               	movwf	___flmul@b+1
  2626  0D7D  0847               	movf	??_scale+1,w
  2627  0D7E  00A8               	movwf	___flmul@b
  2628  0D7F  0853               	movf	_scale$978+3,w
  2629  0D80  00AF               	movwf	___flmul@a+3
  2630  0D81  0852               	movf	_scale$978+2,w
  2631  0D82  00AE               	movwf	___flmul@a+2
  2632  0D83  0851               	movf	_scale$978+1,w
  2633  0D84  00AD               	movwf	___flmul@a+1
  2634  0D85  0850               	movf	_scale$978,w
  2635  0D86  00AC               	movwf	___flmul@a
  2636  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2637  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2638  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2639  0D8E  082B               	movf	?___flmul+3,w
  2640  0D8F  00C5               	movwf	?_scale+3
  2641  0D90  082A               	movf	?___flmul+2,w
  2642  0D91  00C4               	movwf	?_scale+2
  2643  0D92  0829               	movf	?___flmul+1,w
  2644  0D93  00C3               	movwf	?_scale+1
  2645  0D94  0828               	movf	?___flmul,w
  2646  0D95  00C2               	movwf	?_scale
  2647  0D96  2FFF               	goto	l261
  2648  0D97                     l2854:
  2649  0D97  0854               	movf	scale@scl,w
  2650  0D98  3A80               	xorlw	128
  2651  0D99  3E75               	addlw	-139
  2652  0D9A  1C03               	skipc
  2653  0D9B  2D9D               	goto	u4141
  2654  0D9C  2D9E               	goto	u4140
  2655  0D9D                     u4141:
  2656  0D9D  2E26               	goto	l2860
  2657  0D9E                     u4140:
  2658  0D9E                     l2856:
  2659                           
  2660                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _npowers_[(unsig
      +                          ned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2661  0D9E  300A               	movlw	10
  2662  0D9F  00F2               	movwf	___awmod@divisor
  2663  0DA0  3000               	movlw	0
  2664  0DA1  00F3               	movwf	___awmod@divisor+1
  2665  0DA2  0854               	movf	scale@scl,w
  2666  0DA3  00F4               	movwf	___awmod@dividend
  2667  0DA4  01F5               	clrf	___awmod@dividend+1
  2668  0DA5  1BF4               	btfsc	___awmod@dividend,7
  2669  0DA6  03F5               	decf	___awmod@dividend+1,f
  2670  0DA7  160A  118A  2006  120A  158A  	fcall	___awmod
  2671  0DAC  0872               	movf	?___awmod,w
  2672  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2673  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2674  0DAF  00C6               	movwf	??_scale
  2675  0DB0  3001               	movlw	1
  2676  0DB1                     u4155:
  2677  0DB1  1003               	clrc
  2678  0DB2  0DC6               	rlf	??_scale,f
  2679  0DB3  3EFF               	addlw	-1
  2680  0DB4  1D03               	skipz
  2681  0DB5  2DB1               	goto	u4155
  2682  0DB6  1003               	clrc
  2683  0DB7  0D46               	rlf	??_scale,w
  2684  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2685  0DB9  0084               	movwf	4
  2686  0DBA  120A  118A  270A  120A  158A  	fcall	stringdir
  2687  0DBF  00C7               	movwf	??_scale+1
  2688  0DC0  120A  118A  270A  120A  158A  	fcall	stringdir
  2689  0DC5  00C8               	movwf	??_scale+2
  2690  0DC6  120A  118A  270A  120A  158A  	fcall	stringdir
  2691  0DCB  00C9               	movwf	??_scale+3
  2692  0DCC  120A  118A  270A  120A  158A  	fcall	stringdir
  2693  0DD1  00CA               	movwf	??_scale+4
  2694  0DD2  084A               	movf	??_scale+4,w
  2695  0DD3  00AB               	movwf	___flmul@b+3
  2696  0DD4  0849               	movf	??_scale+3,w
  2697  0DD5  00AA               	movwf	___flmul@b+2
  2698  0DD6  0848               	movf	??_scale+2,w
  2699  0DD7  00A9               	movwf	___flmul@b+1
  2700  0DD8  0847               	movf	??_scale+1,w
  2701  0DD9  00A8               	movwf	___flmul@b
  2702  0DDA  300A               	movlw	10
  2703  0DDB  00A0               	movwf	___awdiv@divisor
  2704  0DDC  3000               	movlw	0
  2705  0DDD  00A1               	movwf	___awdiv@divisor+1
  2706  0DDE  0854               	movf	scale@scl,w
  2707  0DDF  00A2               	movwf	___awdiv@dividend
  2708  0DE0  01A3               	clrf	___awdiv@dividend+1
  2709  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  2710  0DE2  03A3               	decf	___awdiv@dividend+1,f
  2711  0DE3  160A  158A  2438  120A  158A  	fcall	___awdiv
  2712  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2713  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2714  0DEA  0820               	movf	?___awdiv,w
  2715  0DEB  00CB               	movwf	??_scale+5
  2716  0DEC  3001               	movlw	1
  2717  0DED                     u4165:
  2718  0DED  1003               	clrc
  2719  0DEE  0DCB               	rlf	??_scale+5,f
  2720  0DEF  3EFF               	addlw	-1
  2721  0DF0  1D03               	skipz
  2722  0DF1  2DED               	goto	u4165
  2723  0DF2  1003               	clrc
  2724  0DF3  0D4B               	rlf	??_scale+5,w
  2725  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2726  0DF5  0084               	movwf	4
  2727  0DF6  120A  118A  270A  120A  158A  	fcall	stringdir
  2728  0DFB  00CC               	movwf	??_scale+6
  2729  0DFC  120A  118A  270A  120A  158A  	fcall	stringdir
  2730  0E01  00CD               	movwf	??_scale+7
  2731  0E02  120A  118A  270A  120A  158A  	fcall	stringdir
  2732  0E07  00CE               	movwf	??_scale+8
  2733  0E08  120A  118A  270A  120A  158A  	fcall	stringdir
  2734  0E0D  00CF               	movwf	??_scale+9
  2735  0E0E  084F               	movf	??_scale+9,w
  2736  0E0F  00AF               	movwf	___flmul@a+3
  2737  0E10  084E               	movf	??_scale+8,w
  2738  0E11  00AE               	movwf	___flmul@a+2
  2739  0E12  084D               	movf	??_scale+7,w
  2740  0E13  00AD               	movwf	___flmul@a+1
  2741  0E14  084C               	movf	??_scale+6,w
  2742  0E15  00AC               	movwf	___flmul@a
  2743  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2744  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2745  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2746  0E1D  082B               	movf	?___flmul+3,w
  2747  0E1E  00C5               	movwf	?_scale+3
  2748  0E1F  082A               	movf	?___flmul+2,w
  2749  0E20  00C4               	movwf	?_scale+2
  2750  0E21  0829               	movf	?___flmul+1,w
  2751  0E22  00C3               	movwf	?_scale+1
  2752  0E23  0828               	movf	?___flmul,w
  2753  0E24  00C2               	movwf	?_scale
  2754  0E25  2FFF               	goto	l261
  2755  0E26                     l2860:
  2756                           
  2757                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _npowers_[(unsign
      +                          ed char)scl];
  2758  0E26  0854               	movf	scale@scl,w
  2759  0E27  00C6               	movwf	??_scale
  2760  0E28  3001               	movlw	1
  2761  0E29                     u4175:
  2762  0E29  1003               	clrc
  2763  0E2A  0DC6               	rlf	??_scale,f
  2764  0E2B  3EFF               	addlw	-1
  2765  0E2C  1D03               	skipz
  2766  0E2D  2E29               	goto	u4175
  2767  0E2E  1003               	clrc
  2768  0E2F  0D46               	rlf	??_scale,w
  2769  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2770  0E31  0084               	movwf	4
  2771  0E32  120A  118A  270A  120A  158A  	fcall	stringdir
  2772  0E37  00C7               	movwf	??_scale+1
  2773  0E38  120A  118A  270A  120A  158A  	fcall	stringdir
  2774  0E3D  00C8               	movwf	??_scale+2
  2775  0E3E  120A  118A  270A  120A  158A  	fcall	stringdir
  2776  0E43  00C9               	movwf	??_scale+3
  2777  0E44  120A  118A  270A  120A  158A  	fcall	stringdir
  2778  0E49  00CA               	movwf	??_scale+4
  2779  0E4A  084A               	movf	??_scale+4,w
  2780  0E4B  00C5               	movwf	?_scale+3
  2781  0E4C  0849               	movf	??_scale+3,w
  2782  0E4D  00C4               	movwf	?_scale+2
  2783  0E4E  0848               	movf	??_scale+2,w
  2784  0E4F  00C3               	movwf	?_scale+1
  2785  0E50  0847               	movf	??_scale+1,w
  2786  0E51  00C2               	movwf	?_scale
  2787  0E52  2FFF               	goto	l261
  2788  0E53                     l2864:
  2789                           
  2790                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110)
  2791  0E53  0854               	movf	scale@scl,w
  2792  0E54  3A80               	xorlw	128
  2793  0E55  3E12               	addlw	-238
  2794  0E56  1C03               	skipc
  2795  0E57  2E59               	goto	u4181
  2796  0E58  2E5A               	goto	u4180
  2797  0E59                     u4181:
  2798  0E59  2F44               	goto	l2872
  2799  0E5A                     u4180:
  2800  0E5A                     l2866:
  2801                           
  2802                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigne
      +                          d char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned ch
      +                          ar)(scl%10)];
  2803  0E5A  300A               	movlw	10
  2804  0E5B  00A0               	movwf	___awdiv@divisor
  2805  0E5C  3000               	movlw	0
  2806  0E5D  00A1               	movwf	___awdiv@divisor+1
  2807  0E5E  0854               	movf	scale@scl,w
  2808  0E5F  00F4               	movwf	___awmod@dividend
  2809  0E60  01F5               	clrf	___awmod@dividend+1
  2810  0E61  1BF4               	btfsc	___awmod@dividend,7
  2811  0E62  03F5               	decf	___awmod@dividend+1,f
  2812  0E63  3064               	movlw	100
  2813  0E64  00F2               	movwf	___awmod@divisor
  2814  0E65  3000               	movlw	0
  2815  0E66  00F3               	movwf	___awmod@divisor+1
  2816  0E67  160A  118A  2006  120A  158A  	fcall	___awmod
  2817  0E6C  0873               	movf	?___awmod+1,w
  2818  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  2819  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  2820  0E6F  00A3               	movwf	___awdiv@dividend+1
  2821  0E70  0872               	movf	?___awmod,w
  2822  0E71  00A2               	movwf	___awdiv@dividend
  2823  0E72  160A  158A  2438  120A  158A  	fcall	___awdiv
  2824  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2825  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2826  0E79  0820               	movf	?___awdiv,w
  2827  0E7A  00C6               	movwf	??_scale
  2828  0E7B  3001               	movlw	1
  2829  0E7C                     u4195:
  2830  0E7C  1003               	clrc
  2831  0E7D  0DC6               	rlf	??_scale,f
  2832  0E7E  3EFF               	addlw	-1
  2833  0E7F  1D03               	skipz
  2834  0E80  2E7C               	goto	u4195
  2835  0E81  1003               	clrc
  2836  0E82  0D46               	rlf	??_scale,w
  2837  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2838  0E84  0084               	movwf	4
  2839  0E85  120A  118A  270A  120A  158A  	fcall	stringdir
  2840  0E8A  00C7               	movwf	??_scale+1
  2841  0E8B  120A  118A  270A  120A  158A  	fcall	stringdir
  2842  0E90  00C8               	movwf	??_scale+2
  2843  0E91  120A  118A  270A  120A  158A  	fcall	stringdir
  2844  0E96  00C9               	movwf	??_scale+3
  2845  0E97  120A  118A  270A  120A  158A  	fcall	stringdir
  2846  0E9C  00CA               	movwf	??_scale+4
  2847  0E9D  084A               	movf	??_scale+4,w
  2848  0E9E  00AB               	movwf	___flmul@b+3
  2849  0E9F  0849               	movf	??_scale+3,w
  2850  0EA0  00AA               	movwf	___flmul@b+2
  2851  0EA1  0848               	movf	??_scale+2,w
  2852  0EA2  00A9               	movwf	___flmul@b+1
  2853  0EA3  0847               	movf	??_scale+1,w
  2854  0EA4  00A8               	movwf	___flmul@b
  2855  0EA5  3064               	movlw	100
  2856  0EA6  00A0               	movwf	___awdiv@divisor
  2857  0EA7  3000               	movlw	0
  2858  0EA8  00A1               	movwf	___awdiv@divisor+1
  2859  0EA9  0854               	movf	scale@scl,w
  2860  0EAA  00A2               	movwf	___awdiv@dividend
  2861  0EAB  01A3               	clrf	___awdiv@dividend+1
  2862  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  2863  0EAD  03A3               	decf	___awdiv@dividend+1,f
  2864  0EAE  160A  158A  2438  120A  158A  	fcall	___awdiv
  2865  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  2866  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  2867  0EB5  0820               	movf	?___awdiv,w
  2868  0EB6  00CB               	movwf	??_scale+5
  2869  0EB7  3001               	movlw	1
  2870  0EB8                     u4205:
  2871  0EB8  1003               	clrc
  2872  0EB9  0DCB               	rlf	??_scale+5,f
  2873  0EBA  3EFF               	addlw	-1
  2874  0EBB  1D03               	skipz
  2875  0EBC  2EB8               	goto	u4205
  2876  0EBD  1003               	clrc
  2877  0EBE  0D4B               	rlf	??_scale+5,w
  2878  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2879  0EC0  0084               	movwf	4
  2880  0EC1  120A  118A  270A  120A  158A  	fcall	stringdir
  2881  0EC6  00CC               	movwf	??_scale+6
  2882  0EC7  120A  118A  270A  120A  158A  	fcall	stringdir
  2883  0ECC  00CD               	movwf	??_scale+7
  2884  0ECD  120A  118A  270A  120A  158A  	fcall	stringdir
  2885  0ED2  00CE               	movwf	??_scale+8
  2886  0ED3  120A  118A  270A  120A  158A  	fcall	stringdir
  2887  0ED8  00CF               	movwf	??_scale+9
  2888  0ED9  084F               	movf	??_scale+9,w
  2889  0EDA  00AF               	movwf	___flmul@a+3
  2890  0EDB  084E               	movf	??_scale+8,w
  2891  0EDC  00AE               	movwf	___flmul@a+2
  2892  0EDD  084D               	movf	??_scale+7,w
  2893  0EDE  00AD               	movwf	___flmul@a+1
  2894  0EDF  084C               	movf	??_scale+6,w
  2895  0EE0  00AC               	movwf	___flmul@a
  2896  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  2897  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  2898  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  2899  0EE8  082B               	movf	?___flmul+3,w
  2900  0EE9  00D3               	movwf	_scale$978+3
  2901  0EEA  082A               	movf	?___flmul+2,w
  2902  0EEB  00D2               	movwf	_scale$978+2
  2903  0EEC  0829               	movf	?___flmul+1,w
  2904  0EED  00D1               	movwf	_scale$978+1
  2905  0EEE  0828               	movf	?___flmul,w
  2906  0EEF  00D0               	movwf	_scale$978
  2907                           
  2908                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigne
      +                          d char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned ch
      +                          ar)(scl%10)];
  2909  0EF0  300A               	movlw	10
  2910  0EF1  00F2               	movwf	___awmod@divisor
  2911  0EF2  3000               	movlw	0
  2912  0EF3  00F3               	movwf	___awmod@divisor+1
  2913  0EF4  0854               	movf	scale@scl,w
  2914  0EF5  00F4               	movwf	___awmod@dividend
  2915  0EF6  01F5               	clrf	___awmod@dividend+1
  2916  0EF7  1BF4               	btfsc	___awmod@dividend,7
  2917  0EF8  03F5               	decf	___awmod@dividend+1,f
  2918  0EF9  160A  118A  2006  120A  158A  	fcall	___awmod
  2919  0EFE  0872               	movf	?___awmod,w
  2920  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  2921  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  2922  0F01  00C6               	movwf	??_scale
  2923  0F02  3001               	movlw	1
  2924  0F03                     u4215:
  2925  0F03  1003               	clrc
  2926  0F04  0DC6               	rlf	??_scale,f
  2927  0F05  3EFF               	addlw	-1
  2928  0F06  1D03               	skipz
  2929  0F07  2F03               	goto	u4215
  2930  0F08  1003               	clrc
  2931  0F09  0D46               	rlf	??_scale,w
  2932  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2933  0F0B  0084               	movwf	4
  2934  0F0C  120A  118A  270A  120A  158A  	fcall	stringdir
  2935  0F11  00C7               	movwf	??_scale+1
  2936  0F12  120A  118A  270A  120A  158A  	fcall	stringdir
  2937  0F17  00C8               	movwf	??_scale+2
  2938  0F18  120A  118A  270A  120A  158A  	fcall	stringdir
  2939  0F1D  00C9               	movwf	??_scale+3
  2940  0F1E  120A  118A  270A  120A  158A  	fcall	stringdir
  2941  0F23  00CA               	movwf	??_scale+4
  2942  0F24  084A               	movf	??_scale+4,w
  2943  0F25  00AB               	movwf	___flmul@b+3
  2944  0F26  0849               	movf	??_scale+3,w
  2945  0F27  00AA               	movwf	___flmul@b+2
  2946  0F28  0848               	movf	??_scale+2,w
  2947  0F29  00A9               	movwf	___flmul@b+1
  2948  0F2A  0847               	movf	??_scale+1,w
  2949  0F2B  00A8               	movwf	___flmul@b
  2950  0F2C  0853               	movf	_scale$978+3,w
  2951  0F2D  00AF               	movwf	___flmul@a+3
  2952  0F2E  0852               	movf	_scale$978+2,w
  2953  0F2F  00AE               	movwf	___flmul@a+2
  2954  0F30  0851               	movf	_scale$978+1,w
  2955  0F31  00AD               	movwf	___flmul@a+1
  2956  0F32  0850               	movf	_scale$978,w
  2957  0F33  00AC               	movwf	___flmul@a
  2958  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  2959  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2960  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2961  0F3B  082B               	movf	?___flmul+3,w
  2962  0F3C  00C5               	movwf	?_scale+3
  2963  0F3D  082A               	movf	?___flmul+2,w
  2964  0F3E  00C4               	movwf	?_scale+2
  2965  0F3F  0829               	movf	?___flmul+1,w
  2966  0F40  00C3               	movwf	?_scale+1
  2967  0F41  0828               	movf	?___flmul,w
  2968  0F42  00C2               	movwf	?_scale
  2969  0F43  2FFF               	goto	l261
  2970  0F44                     l2872:
  2971  0F44  0854               	movf	scale@scl,w
  2972  0F45  3A80               	xorlw	128
  2973  0F46  3E75               	addlw	-139
  2974  0F47  1C03               	skipc
  2975  0F48  2F4A               	goto	u4221
  2976  0F49  2F4B               	goto	u4220
  2977  0F4A                     u4221:
  2978  0F4A  2FD3               	goto	l2878
  2979  0F4B                     u4220:
  2980  0F4B                     l2874:
  2981                           
  2982                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _powers_[(unsigne
      +                          d char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2983  0F4B  300A               	movlw	10
  2984  0F4C  00F2               	movwf	___awmod@divisor
  2985  0F4D  3000               	movlw	0
  2986  0F4E  00F3               	movwf	___awmod@divisor+1
  2987  0F4F  0854               	movf	scale@scl,w
  2988  0F50  00F4               	movwf	___awmod@dividend
  2989  0F51  01F5               	clrf	___awmod@dividend+1
  2990  0F52  1BF4               	btfsc	___awmod@dividend,7
  2991  0F53  03F5               	decf	___awmod@dividend+1,f
  2992  0F54  160A  118A  2006  120A  158A  	fcall	___awmod
  2993  0F59  0872               	movf	?___awmod,w
  2994  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  2995  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  2996  0F5C  00C6               	movwf	??_scale
  2997  0F5D  3001               	movlw	1
  2998  0F5E                     u4235:
  2999  0F5E  1003               	clrc
  3000  0F5F  0DC6               	rlf	??_scale,f
  3001  0F60  3EFF               	addlw	-1
  3002  0F61  1D03               	skipz
  3003  0F62  2F5E               	goto	u4235
  3004  0F63  1003               	clrc
  3005  0F64  0D46               	rlf	??_scale,w
  3006  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3007  0F66  0084               	movwf	4
  3008  0F67  120A  118A  270A  120A  158A  	fcall	stringdir
  3009  0F6C  00C7               	movwf	??_scale+1
  3010  0F6D  120A  118A  270A  120A  158A  	fcall	stringdir
  3011  0F72  00C8               	movwf	??_scale+2
  3012  0F73  120A  118A  270A  120A  158A  	fcall	stringdir
  3013  0F78  00C9               	movwf	??_scale+3
  3014  0F79  120A  118A  270A  120A  158A  	fcall	stringdir
  3015  0F7E  00CA               	movwf	??_scale+4
  3016  0F7F  084A               	movf	??_scale+4,w
  3017  0F80  00AB               	movwf	___flmul@b+3
  3018  0F81  0849               	movf	??_scale+3,w
  3019  0F82  00AA               	movwf	___flmul@b+2
  3020  0F83  0848               	movf	??_scale+2,w
  3021  0F84  00A9               	movwf	___flmul@b+1
  3022  0F85  0847               	movf	??_scale+1,w
  3023  0F86  00A8               	movwf	___flmul@b
  3024  0F87  300A               	movlw	10
  3025  0F88  00A0               	movwf	___awdiv@divisor
  3026  0F89  3000               	movlw	0
  3027  0F8A  00A1               	movwf	___awdiv@divisor+1
  3028  0F8B  0854               	movf	scale@scl,w
  3029  0F8C  00A2               	movwf	___awdiv@dividend
  3030  0F8D  01A3               	clrf	___awdiv@dividend+1
  3031  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  3032  0F8F  03A3               	decf	___awdiv@dividend+1,f
  3033  0F90  160A  158A  2438  120A  158A  	fcall	___awdiv
  3034  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3035  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3036  0F97  0820               	movf	?___awdiv,w
  3037  0F98  00CB               	movwf	??_scale+5
  3038  0F99  3001               	movlw	1
  3039  0F9A                     u4245:
  3040  0F9A  1003               	clrc
  3041  0F9B  0DCB               	rlf	??_scale+5,f
  3042  0F9C  3EFF               	addlw	-1
  3043  0F9D  1D03               	skipz
  3044  0F9E  2F9A               	goto	u4245
  3045  0F9F  1003               	clrc
  3046  0FA0  0D4B               	rlf	??_scale+5,w
  3047  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3048  0FA2  0084               	movwf	4
  3049  0FA3  120A  118A  270A  120A  158A  	fcall	stringdir
  3050  0FA8  00CC               	movwf	??_scale+6
  3051  0FA9  120A  118A  270A  120A  158A  	fcall	stringdir
  3052  0FAE  00CD               	movwf	??_scale+7
  3053  0FAF  120A  118A  270A  120A  158A  	fcall	stringdir
  3054  0FB4  00CE               	movwf	??_scale+8
  3055  0FB5  120A  118A  270A  120A  158A  	fcall	stringdir
  3056  0FBA  00CF               	movwf	??_scale+9
  3057  0FBB  084F               	movf	??_scale+9,w
  3058  0FBC  00AF               	movwf	___flmul@a+3
  3059  0FBD  084E               	movf	??_scale+8,w
  3060  0FBE  00AE               	movwf	___flmul@a+2
  3061  0FBF  084D               	movf	??_scale+7,w
  3062  0FC0  00AD               	movwf	___flmul@a+1
  3063  0FC1  084C               	movf	??_scale+6,w
  3064  0FC2  00AC               	movwf	___flmul@a
  3065  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3066  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3067  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3068  0FCA  082B               	movf	?___flmul+3,w
  3069  0FCB  00C5               	movwf	?_scale+3
  3070  0FCC  082A               	movf	?___flmul+2,w
  3071  0FCD  00C4               	movwf	?_scale+2
  3072  0FCE  0829               	movf	?___flmul+1,w
  3073  0FCF  00C3               	movwf	?_scale+1
  3074  0FD0  0828               	movf	?___flmul,w
  3075  0FD1  00C2               	movwf	?_scale
  3076  0FD2  2FFF               	goto	l261
  3077  0FD3                     l2878:
  3078                           
  3079                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _powers_[(unsigned
      +                           char)scl];
  3080  0FD3  0854               	movf	scale@scl,w
  3081  0FD4  00C6               	movwf	??_scale
  3082  0FD5  3001               	movlw	1
  3083  0FD6                     u4255:
  3084  0FD6  1003               	clrc
  3085  0FD7  0DC6               	rlf	??_scale,f
  3086  0FD8  3EFF               	addlw	-1
  3087  0FD9  1D03               	skipz
  3088  0FDA  2FD6               	goto	u4255
  3089  0FDB  1003               	clrc
  3090  0FDC  0D46               	rlf	??_scale,w
  3091  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3092  0FDE  0084               	movwf	4
  3093  0FDF  120A  118A  270A  120A  158A  	fcall	stringdir
  3094  0FE4  00C7               	movwf	??_scale+1
  3095  0FE5  120A  118A  270A  120A  158A  	fcall	stringdir
  3096  0FEA  00C8               	movwf	??_scale+2
  3097  0FEB  120A  118A  270A  120A  158A  	fcall	stringdir
  3098  0FF0  00C9               	movwf	??_scale+3
  3099  0FF1  120A  118A  270A  120A  158A  	fcall	stringdir
  3100  0FF6  00CA               	movwf	??_scale+4
  3101  0FF7  084A               	movf	??_scale+4,w
  3102  0FF8  00C5               	movwf	?_scale+3
  3103  0FF9  0849               	movf	??_scale+3,w
  3104  0FFA  00C4               	movwf	?_scale+2
  3105  0FFB  0848               	movf	??_scale+2,w
  3106  0FFC  00C3               	movwf	?_scale+1
  3107  0FFD  0847               	movf	??_scale+1,w
  3108  0FFE  00C2               	movwf	?_scale
  3109  0FFF                     l261:
  3110  0FFF  0008               	return
  3111  1000                     __end_of_scale:
  3112                           
  3113                           	psect	text3
  3114  1006                     __ptext3:	
  3115 ;; *************** function ___awmod *****************
  3116 ;; Defined at:
  3117 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  divisor         2    2[COMMON] int 
  3120 ;;  dividend        2    4[COMMON] int 
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;  sign            1    8[COMMON] unsigned char 
  3123 ;;  counter         1    7[COMMON] unsigned char 
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  2    2[COMMON] int 
  3126 ;; Registers used:
  3127 ;;		wreg, status,2, status,0
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3133 ;;      Params:         4       0       0       0       0
  3134 ;;      Locals:         2       0       0       0       0
  3135 ;;      Temps:          1       0       0       0       0
  3136 ;;      Totals:         7       0       0       0       0
  3137 ;;Total ram usage:        7 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:    1
  3140 ;; This function calls:
  3141 ;;		Nothing
  3142 ;; This function is called by:
  3143 ;;		_scale
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           
  3148                           ;psect for function ___awmod
  3149  1006                     ___awmod:
  3150  1006                     l2340:	
  3151                           ;incstack = 0
  3152                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3153                           
  3154  1006  01F8               	clrf	___awmod@sign
  3155  1007                     l2342:
  3156  1007  1FF5               	btfss	___awmod@dividend+1,7
  3157  1008  280A               	goto	u2961
  3158  1009  280B               	goto	u2960
  3159  100A                     u2961:
  3160  100A  2812               	goto	l2348
  3161  100B                     u2960:
  3162  100B                     l2344:
  3163  100B  09F4               	comf	___awmod@dividend,f
  3164  100C  09F5               	comf	___awmod@dividend+1,f
  3165  100D  0AF4               	incf	___awmod@dividend,f
  3166  100E  1903               	skipnz
  3167  100F  0AF5               	incf	___awmod@dividend+1,f
  3168  1010                     l2346:
  3169  1010  01F8               	clrf	___awmod@sign
  3170  1011  0AF8               	incf	___awmod@sign,f
  3171  1012                     l2348:
  3172  1012  1FF3               	btfss	___awmod@divisor+1,7
  3173  1013  2815               	goto	u2971
  3174  1014  2816               	goto	u2970
  3175  1015                     u2971:
  3176  1015  281B               	goto	l2352
  3177  1016                     u2970:
  3178  1016                     l2350:
  3179  1016  09F2               	comf	___awmod@divisor,f
  3180  1017  09F3               	comf	___awmod@divisor+1,f
  3181  1018  0AF2               	incf	___awmod@divisor,f
  3182  1019  1903               	skipnz
  3183  101A  0AF3               	incf	___awmod@divisor+1,f
  3184  101B                     l2352:
  3185  101B  0872               	movf	___awmod@divisor,w
  3186  101C  0473               	iorwf	___awmod@divisor+1,w
  3187  101D  1903               	btfsc	3,2
  3188  101E  2820               	goto	u2981
  3189  101F  2821               	goto	u2980
  3190  1020                     u2981:
  3191  1020  2850               	goto	l2370
  3192  1021                     u2980:
  3193  1021                     l2354:
  3194  1021  01F7               	clrf	___awmod@counter
  3195  1022  0AF7               	incf	___awmod@counter,f
  3196  1023  282F               	goto	l2360
  3197  1024                     l2356:
  3198  1024  3001               	movlw	1
  3199  1025                     u2995:
  3200  1025  1003               	clrc
  3201  1026  0DF2               	rlf	___awmod@divisor,f
  3202  1027  0DF3               	rlf	___awmod@divisor+1,f
  3203  1028  3EFF               	addlw	-1
  3204  1029  1D03               	skipz
  3205  102A  2825               	goto	u2995
  3206  102B                     l2358:
  3207  102B  3001               	movlw	1
  3208  102C  00F6               	movwf	??___awmod
  3209  102D  0876               	movf	??___awmod,w
  3210  102E  07F7               	addwf	___awmod@counter,f
  3211  102F                     l2360:
  3212  102F  1FF3               	btfss	___awmod@divisor+1,7
  3213  1030  2832               	goto	u3001
  3214  1031  2833               	goto	u3000
  3215  1032                     u3001:
  3216  1032  2824               	goto	l2356
  3217  1033                     u3000:
  3218  1033                     l2362:
  3219  1033  0873               	movf	___awmod@divisor+1,w
  3220  1034  0275               	subwf	___awmod@dividend+1,w
  3221  1035  1D03               	skipz
  3222  1036  2839               	goto	u3015
  3223  1037  0872               	movf	___awmod@divisor,w
  3224  1038  0274               	subwf	___awmod@dividend,w
  3225  1039                     u3015:
  3226  1039  1C03               	skipc
  3227  103A  283C               	goto	u3011
  3228  103B  283D               	goto	u3010
  3229  103C                     u3011:
  3230  103C  2843               	goto	l2366
  3231  103D                     u3010:
  3232  103D                     l2364:
  3233  103D  0872               	movf	___awmod@divisor,w
  3234  103E  02F4               	subwf	___awmod@dividend,f
  3235  103F  0873               	movf	___awmod@divisor+1,w
  3236  1040  1C03               	skipc
  3237  1041  03F5               	decf	___awmod@dividend+1,f
  3238  1042  02F5               	subwf	___awmod@dividend+1,f
  3239  1043                     l2366:
  3240  1043  3001               	movlw	1
  3241  1044                     u3025:
  3242  1044  1003               	clrc
  3243  1045  0CF3               	rrf	___awmod@divisor+1,f
  3244  1046  0CF2               	rrf	___awmod@divisor,f
  3245  1047  3EFF               	addlw	-1
  3246  1048  1D03               	skipz
  3247  1049  2844               	goto	u3025
  3248  104A                     l2368:
  3249  104A  3001               	movlw	1
  3250  104B  02F7               	subwf	___awmod@counter,f
  3251  104C  1D03               	btfss	3,2
  3252  104D  284F               	goto	u3031
  3253  104E  2850               	goto	u3030
  3254  104F                     u3031:
  3255  104F  2833               	goto	l2362
  3256  1050                     u3030:
  3257  1050                     l2370:
  3258  1050  0878               	movf	___awmod@sign,w
  3259  1051  1903               	btfsc	3,2
  3260  1052  2854               	goto	u3041
  3261  1053  2855               	goto	u3040
  3262  1054                     u3041:
  3263  1054  285A               	goto	l2374
  3264  1055                     u3040:
  3265  1055                     l2372:
  3266  1055  09F4               	comf	___awmod@dividend,f
  3267  1056  09F5               	comf	___awmod@dividend+1,f
  3268  1057  0AF4               	incf	___awmod@dividend,f
  3269  1058  1903               	skipnz
  3270  1059  0AF5               	incf	___awmod@dividend+1,f
  3271  105A                     l2374:
  3272  105A  0875               	movf	___awmod@dividend+1,w
  3273  105B  00F3               	movwf	?___awmod+1
  3274  105C  0874               	movf	___awmod@dividend,w
  3275  105D  00F2               	movwf	?___awmod
  3276  105E                     l523:
  3277  105E  0008               	return
  3278  105F                     __end_of___awmod:
  3279                           
  3280                           	psect	text4
  3281  1C38                     __ptext4:	
  3282 ;; *************** function ___awdiv *****************
  3283 ;; Defined at:
  3284 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  divisor         2    0[BANK0 ] int 
  3287 ;;  dividend        2    2[BANK0 ] int 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  quotient        2    6[BANK0 ] int 
  3290 ;;  sign            1    5[BANK0 ] unsigned char 
  3291 ;;  counter         1    4[BANK0 ] unsigned char 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  2    0[BANK0 ] int 
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, status,0
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3301 ;;      Params:         0       4       0       0       0
  3302 ;;      Locals:         0       4       0       0       0
  3303 ;;      Temps:          1       0       0       0       0
  3304 ;;      Totals:         1       8       0       0       0
  3305 ;;Total ram usage:        9 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    1
  3308 ;; This function calls:
  3309 ;;		Nothing
  3310 ;; This function is called by:
  3311 ;;		_scale
  3312 ;;		_sprintf
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           
  3317                           ;psect for function ___awdiv
  3318  1C38                     ___awdiv:
  3319  1C38                     l2296:	
  3320                           ;incstack = 0
  3321                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3322                           
  3323  1C38  1283               	bcf	3,5	;RP0=0, select bank0
  3324  1C39  1303               	bcf	3,6	;RP1=0, select bank0
  3325  1C3A  01A5               	clrf	___awdiv@sign
  3326  1C3B                     l2298:
  3327  1C3B  1FA1               	btfss	___awdiv@divisor+1,7
  3328  1C3C  2C3E               	goto	u2861
  3329  1C3D  2C3F               	goto	u2860
  3330  1C3E                     u2861:
  3331  1C3E  2C46               	goto	l2304
  3332  1C3F                     u2860:
  3333  1C3F                     l2300:
  3334  1C3F  09A0               	comf	___awdiv@divisor,f
  3335  1C40  09A1               	comf	___awdiv@divisor+1,f
  3336  1C41  0AA0               	incf	___awdiv@divisor,f
  3337  1C42  1903               	skipnz
  3338  1C43  0AA1               	incf	___awdiv@divisor+1,f
  3339  1C44                     l2302:
  3340  1C44  01A5               	clrf	___awdiv@sign
  3341  1C45  0AA5               	incf	___awdiv@sign,f
  3342  1C46                     l2304:
  3343  1C46  1FA3               	btfss	___awdiv@dividend+1,7
  3344  1C47  2C49               	goto	u2871
  3345  1C48  2C4A               	goto	u2870
  3346  1C49                     u2871:
  3347  1C49  2C53               	goto	l2310
  3348  1C4A                     u2870:
  3349  1C4A                     l2306:
  3350  1C4A  09A2               	comf	___awdiv@dividend,f
  3351  1C4B  09A3               	comf	___awdiv@dividend+1,f
  3352  1C4C  0AA2               	incf	___awdiv@dividend,f
  3353  1C4D  1903               	skipnz
  3354  1C4E  0AA3               	incf	___awdiv@dividend+1,f
  3355  1C4F                     l2308:
  3356  1C4F  3001               	movlw	1
  3357  1C50  00F9               	movwf	??___awdiv
  3358  1C51  0879               	movf	??___awdiv,w
  3359  1C52  06A5               	xorwf	___awdiv@sign,f
  3360  1C53                     l2310:
  3361  1C53  01A6               	clrf	___awdiv@quotient
  3362  1C54  01A7               	clrf	___awdiv@quotient+1
  3363  1C55                     l2312:
  3364  1C55  0820               	movf	___awdiv@divisor,w
  3365  1C56  0421               	iorwf	___awdiv@divisor+1,w
  3366  1C57  1903               	btfsc	3,2
  3367  1C58  2C5A               	goto	u2881
  3368  1C59  2C5B               	goto	u2880
  3369  1C5A                     u2881:
  3370  1C5A  2C92               	goto	l2332
  3371  1C5B                     u2880:
  3372  1C5B                     l2314:
  3373  1C5B  01A4               	clrf	___awdiv@counter
  3374  1C5C  0AA4               	incf	___awdiv@counter,f
  3375  1C5D  2C69               	goto	l2320
  3376  1C5E                     l2316:
  3377  1C5E  3001               	movlw	1
  3378  1C5F                     u2895:
  3379  1C5F  1003               	clrc
  3380  1C60  0DA0               	rlf	___awdiv@divisor,f
  3381  1C61  0DA1               	rlf	___awdiv@divisor+1,f
  3382  1C62  3EFF               	addlw	-1
  3383  1C63  1D03               	skipz
  3384  1C64  2C5F               	goto	u2895
  3385  1C65                     l2318:
  3386  1C65  3001               	movlw	1
  3387  1C66  00F9               	movwf	??___awdiv
  3388  1C67  0879               	movf	??___awdiv,w
  3389  1C68  07A4               	addwf	___awdiv@counter,f
  3390  1C69                     l2320:
  3391  1C69  1FA1               	btfss	___awdiv@divisor+1,7
  3392  1C6A  2C6C               	goto	u2901
  3393  1C6B  2C6D               	goto	u2900
  3394  1C6C                     u2901:
  3395  1C6C  2C5E               	goto	l2316
  3396  1C6D                     u2900:
  3397  1C6D                     l2322:
  3398  1C6D  3001               	movlw	1
  3399  1C6E                     u2915:
  3400  1C6E  1003               	clrc
  3401  1C6F  0DA6               	rlf	___awdiv@quotient,f
  3402  1C70  0DA7               	rlf	___awdiv@quotient+1,f
  3403  1C71  3EFF               	addlw	-1
  3404  1C72  1D03               	skipz
  3405  1C73  2C6E               	goto	u2915
  3406  1C74  0821               	movf	___awdiv@divisor+1,w
  3407  1C75  0223               	subwf	___awdiv@dividend+1,w
  3408  1C76  1D03               	skipz
  3409  1C77  2C7A               	goto	u2925
  3410  1C78  0820               	movf	___awdiv@divisor,w
  3411  1C79  0222               	subwf	___awdiv@dividend,w
  3412  1C7A                     u2925:
  3413  1C7A  1C03               	skipc
  3414  1C7B  2C7D               	goto	u2921
  3415  1C7C  2C7E               	goto	u2920
  3416  1C7D                     u2921:
  3417  1C7D  2C85               	goto	l2328
  3418  1C7E                     u2920:
  3419  1C7E                     l2324:
  3420  1C7E  0820               	movf	___awdiv@divisor,w
  3421  1C7F  02A2               	subwf	___awdiv@dividend,f
  3422  1C80  0821               	movf	___awdiv@divisor+1,w
  3423  1C81  1C03               	skipc
  3424  1C82  03A3               	decf	___awdiv@dividend+1,f
  3425  1C83  02A3               	subwf	___awdiv@dividend+1,f
  3426  1C84                     l2326:
  3427  1C84  1426               	bsf	___awdiv@quotient,0
  3428  1C85                     l2328:
  3429  1C85  3001               	movlw	1
  3430  1C86                     u2935:
  3431  1C86  1003               	clrc
  3432  1C87  0CA1               	rrf	___awdiv@divisor+1,f
  3433  1C88  0CA0               	rrf	___awdiv@divisor,f
  3434  1C89  3EFF               	addlw	-1
  3435  1C8A  1D03               	skipz
  3436  1C8B  2C86               	goto	u2935
  3437  1C8C                     l2330:
  3438  1C8C  3001               	movlw	1
  3439  1C8D  02A4               	subwf	___awdiv@counter,f
  3440  1C8E  1D03               	btfss	3,2
  3441  1C8F  2C91               	goto	u2941
  3442  1C90  2C92               	goto	u2940
  3443  1C91                     u2941:
  3444  1C91  2C6D               	goto	l2322
  3445  1C92                     u2940:
  3446  1C92                     l2332:
  3447  1C92  0825               	movf	___awdiv@sign,w
  3448  1C93  1903               	btfsc	3,2
  3449  1C94  2C96               	goto	u2951
  3450  1C95  2C97               	goto	u2950
  3451  1C96                     u2951:
  3452  1C96  2C9C               	goto	l2336
  3453  1C97                     u2950:
  3454  1C97                     l2334:
  3455  1C97  09A6               	comf	___awdiv@quotient,f
  3456  1C98  09A7               	comf	___awdiv@quotient+1,f
  3457  1C99  0AA6               	incf	___awdiv@quotient,f
  3458  1C9A  1903               	skipnz
  3459  1C9B  0AA7               	incf	___awdiv@quotient+1,f
  3460  1C9C                     l2336:
  3461  1C9C  0827               	movf	___awdiv@quotient+1,w
  3462  1C9D  00A1               	movwf	?___awdiv+1
  3463  1C9E  0826               	movf	___awdiv@quotient,w
  3464  1C9F  00A0               	movwf	?___awdiv
  3465  1CA0                     l510:
  3466  1CA0  0008               	return
  3467  1CA1                     __end_of___awdiv:
  3468                           
  3469                           	psect	text5
  3470  18C7                     __ptext5:	
  3471 ;; *************** function _isdigit *****************
  3472 ;; Defined at:
  3473 ;;		line 8 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  c               1    wreg     unsigned char 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  c               1    3[COMMON] unsigned char 
  3478 ;; Return value:  Size  Location     Type
  3479 ;;		None               void
  3480 ;; Registers used:
  3481 ;;		wreg, status,2, status,0
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3487 ;;      Params:         0       0       0       0       0
  3488 ;;      Locals:         2       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0
  3490 ;;      Totals:         2       0       0       0       0
  3491 ;;Total ram usage:        2 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    1
  3494 ;; This function calls:
  3495 ;;		Nothing
  3496 ;; This function is called by:
  3497 ;;		_sprintf
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           
  3502                           ;psect for function _isdigit
  3503  18C7                     _isdigit:
  3504                           
  3505                           ;incstack = 0
  3506                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3507                           ;isdigit@c stored from wreg
  3508  18C7  00F3               	movwf	isdigit@c
  3509  18C8                     l2882:
  3510  18C8  01F2               	clrf	_isdigit$803
  3511  18C9                     l2884:
  3512  18C9  303A               	movlw	58
  3513  18CA  0273               	subwf	isdigit@c,w
  3514  18CB  1803               	skipnc
  3515  18CC  28CE               	goto	u4261
  3516  18CD  28CF               	goto	u4260
  3517  18CE                     u4261:
  3518  18CE  28D7               	goto	l2890
  3519  18CF                     u4260:
  3520  18CF                     l2886:
  3521  18CF  3030               	movlw	48
  3522  18D0  0273               	subwf	isdigit@c,w
  3523  18D1  1C03               	skipc
  3524  18D2  28D4               	goto	u4271
  3525  18D3  28D5               	goto	u4270
  3526  18D4                     u4271:
  3527  18D4  28D7               	goto	l2890
  3528  18D5                     u4270:
  3529  18D5                     l2888:
  3530  18D5  01F2               	clrf	_isdigit$803
  3531  18D6  0AF2               	incf	_isdigit$803,f
  3532  18D7                     l2890:
  3533  18D7  0C72               	rrf	_isdigit$803,w
  3534  18D8                     l844:
  3535  18D8  0008               	return
  3536  18D9                     __end_of_isdigit:
  3537                           
  3538                           	psect	text6
  3539  105F                     __ptext6:	
  3540 ;; *************** function _fround *****************
  3541 ;; Defined at:
  3542 ;;		line 417 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;  prec            1    wreg     unsigned char 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  prec            1   53[BANK0 ] unsigned char 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  4   34[BANK0 ] unsigned char 
  3549 ;; Registers used:
  3550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3556 ;;      Params:         0       4       0       0       0
  3557 ;;      Locals:         0       9       0       0       0
  3558 ;;      Temps:          0       7       0       0       0
  3559 ;;      Totals:         0      20       0       0       0
  3560 ;;Total ram usage:       20 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    3
  3563 ;; This function calls:
  3564 ;;		___flmul
  3565 ;;		___lwdiv
  3566 ;;		___lwmod
  3567 ;; This function is called by:
  3568 ;;		_sprintf
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           
  3573                           ;psect for function _fround
  3574  105F                     _fround:
  3575                           
  3576                           ;incstack = 0
  3577                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3578                           ;fround@prec stored from wreg
  3579  105F  1283               	bcf	3,5	;RP0=0, select bank0
  3580  1060  1303               	bcf	3,6	;RP1=0, select bank0
  3581  1061  00D5               	movwf	fround@prec
  3582  1062                     l3674:
  3583                           
  3584                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsigned char prec)
      +                          ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418: {;D:\Microchip\xc8\v2.31\p
      +                          ic\sources\c90\common\doprnt.c: 421:  if(prec>=110)
  3585  1062  306E               	movlw	110
  3586  1063  0255               	subwf	fround@prec,w
  3587  1064  1C03               	skipc
  3588  1065  2867               	goto	u5721
  3589  1066  2868               	goto	u5720
  3590  1067                     u5721:
  3591  1067  2977               	goto	l3682
  3592  1068                     u5720:
  3593  1068                     l3676:
  3594                           
  3595                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[p
      +                          rec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3596  1068  303F               	movlw	63
  3597  1069  00AB               	movwf	___flmul@b+3
  3598  106A  3000               	movlw	0
  3599  106B  00AA               	movwf	___flmul@b+2
  3600  106C  3000               	movlw	0
  3601  106D  00A9               	movwf	___flmul@b+1
  3602  106E  3000               	movlw	0
  3603  106F  00A8               	movwf	___flmul@b
  3604  1070  3064               	movlw	100
  3605  1071  00A0               	movwf	___lwdiv@divisor
  3606  1072  3000               	movlw	0
  3607  1073  00A1               	movwf	___lwdiv@divisor+1
  3608  1074  0855               	movf	fround@prec,w
  3609  1075  00C6               	movwf	??_fround
  3610  1076  01C7               	clrf	??_fround+1
  3611  1077  0846               	movf	??_fround,w
  3612  1078  00A2               	movwf	___lwdiv@dividend
  3613  1079  0847               	movf	??_fround+1,w
  3614  107A  00A3               	movwf	___lwdiv@dividend+1
  3615  107B  160A  158A  21EE  160A  118A  	fcall	___lwdiv
  3616  1080  1283               	bcf	3,5	;RP0=0, select bank0
  3617  1081  1303               	bcf	3,6	;RP1=0, select bank0
  3618  1082  0820               	movf	?___lwdiv,w
  3619  1083  00C8               	movwf	??_fround+2
  3620  1084  3001               	movlw	1
  3621  1085                     u5735:
  3622  1085  1003               	clrc
  3623  1086  0DC8               	rlf	??_fround+2,f
  3624  1087  3EFF               	addlw	-1
  3625  1088  1D03               	skipz
  3626  1089  2885               	goto	u5735
  3627  108A  1003               	clrc
  3628  108B  0D48               	rlf	??_fround+2,w
  3629  108C  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3630  108D  0084               	movwf	4
  3631  108E  120A  118A  270A  160A  118A  	fcall	stringdir
  3632  1093  00C9               	movwf	??_fround+3
  3633  1094  120A  118A  270A  160A  118A  	fcall	stringdir
  3634  1099  00CA               	movwf	??_fround+4
  3635  109A  120A  118A  270A  160A  118A  	fcall	stringdir
  3636  109F  00CB               	movwf	??_fround+5
  3637  10A0  120A  118A  270A  160A  118A  	fcall	stringdir
  3638  10A5  00CC               	movwf	??_fround+6
  3639  10A6  084C               	movf	??_fround+6,w
  3640  10A7  00AF               	movwf	___flmul@a+3
  3641  10A8  084B               	movf	??_fround+5,w
  3642  10A9  00AE               	movwf	___flmul@a+2
  3643  10AA  084A               	movf	??_fround+4,w
  3644  10AB  00AD               	movwf	___flmul@a+1
  3645  10AC  0849               	movf	??_fround+3,w
  3646  10AD  00AC               	movwf	___flmul@a
  3647  10AE  120A  158A  213C  160A  118A  	fcall	___flmul
  3648  10B3  1283               	bcf	3,5	;RP0=0, select bank0
  3649  10B4  1303               	bcf	3,6	;RP1=0, select bank0
  3650  10B5  082B               	movf	?___flmul+3,w
  3651  10B6  00D4               	movwf	_fround$976+3
  3652  10B7  082A               	movf	?___flmul+2,w
  3653  10B8  00D3               	movwf	_fround$976+2
  3654  10B9  0829               	movf	?___flmul+1,w
  3655  10BA  00D2               	movwf	_fround$976+1
  3656  10BB  0828               	movf	?___flmul,w
  3657  10BC  00D1               	movwf	_fround$976
  3658                           
  3659                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[p
      +                          rec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3660  10BD  300A               	movlw	10
  3661  10BE  00A0               	movwf	___lwdiv@divisor
  3662  10BF  3000               	movlw	0
  3663  10C0  00A1               	movwf	___lwdiv@divisor+1
  3664  10C1  0855               	movf	fround@prec,w
  3665  10C2  00C6               	movwf	??_fround
  3666  10C3  01C7               	clrf	??_fround+1
  3667  10C4  0846               	movf	??_fround,w
  3668  10C5  00F4               	movwf	___lwmod@dividend
  3669  10C6  0847               	movf	??_fround+1,w
  3670  10C7  00F5               	movwf	___lwmod@dividend+1
  3671  10C8  3064               	movlw	100
  3672  10C9  00F2               	movwf	___lwmod@divisor
  3673  10CA  3000               	movlw	0
  3674  10CB  00F3               	movwf	___lwmod@divisor+1
  3675  10CC  120A  118A  27C2  160A  118A  	fcall	___lwmod
  3676  10D1  0873               	movf	?___lwmod+1,w
  3677  10D2  1283               	bcf	3,5	;RP0=0, select bank0
  3678  10D3  1303               	bcf	3,6	;RP1=0, select bank0
  3679  10D4  00A3               	movwf	___lwdiv@dividend+1
  3680  10D5  0872               	movf	?___lwmod,w
  3681  10D6  00A2               	movwf	___lwdiv@dividend
  3682  10D7  160A  158A  21EE  160A  118A  	fcall	___lwdiv
  3683  10DC  1283               	bcf	3,5	;RP0=0, select bank0
  3684  10DD  1303               	bcf	3,6	;RP1=0, select bank0
  3685  10DE  0820               	movf	?___lwdiv,w
  3686  10DF  00C8               	movwf	??_fround+2
  3687  10E0  3001               	movlw	1
  3688  10E1                     u5745:
  3689  10E1  1003               	clrc
  3690  10E2  0DC8               	rlf	??_fround+2,f
  3691  10E3  3EFF               	addlw	-1
  3692  10E4  1D03               	skipz
  3693  10E5  28E1               	goto	u5745
  3694  10E6  1003               	clrc
  3695  10E7  0D48               	rlf	??_fround+2,w
  3696  10E8  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3697  10E9  0084               	movwf	4
  3698  10EA  120A  118A  270A  160A  118A  	fcall	stringdir
  3699  10EF  00C9               	movwf	??_fround+3
  3700  10F0  120A  118A  270A  160A  118A  	fcall	stringdir
  3701  10F5  00CA               	movwf	??_fround+4
  3702  10F6  120A  118A  270A  160A  118A  	fcall	stringdir
  3703  10FB  00CB               	movwf	??_fround+5
  3704  10FC  120A  118A  270A  160A  118A  	fcall	stringdir
  3705  1101  00CC               	movwf	??_fround+6
  3706  1102  084C               	movf	??_fround+6,w
  3707  1103  00AB               	movwf	___flmul@b+3
  3708  1104  084B               	movf	??_fround+5,w
  3709  1105  00AA               	movwf	___flmul@b+2
  3710  1106  084A               	movf	??_fround+4,w
  3711  1107  00A9               	movwf	___flmul@b+1
  3712  1108  0849               	movf	??_fround+3,w
  3713  1109  00A8               	movwf	___flmul@b
  3714  110A  0854               	movf	_fround$976+3,w
  3715  110B  00AF               	movwf	___flmul@a+3
  3716  110C  0853               	movf	_fround$976+2,w
  3717  110D  00AE               	movwf	___flmul@a+2
  3718  110E  0852               	movf	_fround$976+1,w
  3719  110F  00AD               	movwf	___flmul@a+1
  3720  1110  0851               	movf	_fround$976,w
  3721  1111  00AC               	movwf	___flmul@a
  3722  1112  120A  158A  213C  160A  118A  	fcall	___flmul
  3723  1117  1283               	bcf	3,5	;RP0=0, select bank0
  3724  1118  1303               	bcf	3,6	;RP1=0, select bank0
  3725  1119  082B               	movf	?___flmul+3,w
  3726  111A  00D0               	movwf	_fround$977+3
  3727  111B  082A               	movf	?___flmul+2,w
  3728  111C  00CF               	movwf	_fround$977+2
  3729  111D  0829               	movf	?___flmul+1,w
  3730  111E  00CE               	movwf	_fround$977+1
  3731  111F  0828               	movf	?___flmul,w
  3732  1120  00CD               	movwf	_fround$977
  3733                           
  3734                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[p
      +                          rec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3735  1121  300A               	movlw	10
  3736  1122  00F2               	movwf	___lwmod@divisor
  3737  1123  3000               	movlw	0
  3738  1124  00F3               	movwf	___lwmod@divisor+1
  3739  1125  0855               	movf	fround@prec,w
  3740  1126  00C6               	movwf	??_fround
  3741  1127  01C7               	clrf	??_fround+1
  3742  1128  0846               	movf	??_fround,w
  3743  1129  00F4               	movwf	___lwmod@dividend
  3744  112A  0847               	movf	??_fround+1,w
  3745  112B  00F5               	movwf	___lwmod@dividend+1
  3746  112C  120A  118A  27C2  160A  118A  	fcall	___lwmod
  3747  1131  0872               	movf	?___lwmod,w
  3748  1132  1283               	bcf	3,5	;RP0=0, select bank0
  3749  1133  1303               	bcf	3,6	;RP1=0, select bank0
  3750  1134  00C8               	movwf	??_fround+2
  3751  1135  3001               	movlw	1
  3752  1136                     u5755:
  3753  1136  1003               	clrc
  3754  1137  0DC8               	rlf	??_fround+2,f
  3755  1138  3EFF               	addlw	-1
  3756  1139  1D03               	skipz
  3757  113A  2936               	goto	u5755
  3758  113B  1003               	clrc
  3759  113C  0D48               	rlf	??_fround+2,w
  3760  113D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3761  113E  0084               	movwf	4
  3762  113F  120A  118A  270A  160A  118A  	fcall	stringdir
  3763  1144  00C9               	movwf	??_fround+3
  3764  1145  120A  118A  270A  160A  118A  	fcall	stringdir
  3765  114A  00CA               	movwf	??_fround+4
  3766  114B  120A  118A  270A  160A  118A  	fcall	stringdir
  3767  1150  00CB               	movwf	??_fround+5
  3768  1151  120A  118A  270A  160A  118A  	fcall	stringdir
  3769  1156  00CC               	movwf	??_fround+6
  3770  1157  084C               	movf	??_fround+6,w
  3771  1158  00AB               	movwf	___flmul@b+3
  3772  1159  084B               	movf	??_fround+5,w
  3773  115A  00AA               	movwf	___flmul@b+2
  3774  115B  084A               	movf	??_fround+4,w
  3775  115C  00A9               	movwf	___flmul@b+1
  3776  115D  0849               	movf	??_fround+3,w
  3777  115E  00A8               	movwf	___flmul@b
  3778  115F  0850               	movf	_fround$977+3,w
  3779  1160  00AF               	movwf	___flmul@a+3
  3780  1161  084F               	movf	_fround$977+2,w
  3781  1162  00AE               	movwf	___flmul@a+2
  3782  1163  084E               	movf	_fround$977+1,w
  3783  1164  00AD               	movwf	___flmul@a+1
  3784  1165  084D               	movf	_fround$977,w
  3785  1166  00AC               	movwf	___flmul@a
  3786  1167  120A  158A  213C  160A  118A  	fcall	___flmul
  3787  116C  1283               	bcf	3,5	;RP0=0, select bank0
  3788  116D  1303               	bcf	3,6	;RP1=0, select bank0
  3789  116E  082B               	movf	?___flmul+3,w
  3790  116F  00C5               	movwf	?_fround+3
  3791  1170  082A               	movf	?___flmul+2,w
  3792  1171  00C4               	movwf	?_fround+2
  3793  1172  0829               	movf	?___flmul+1,w
  3794  1173  00C3               	movwf	?_fround+1
  3795  1174  0828               	movf	?___flmul,w
  3796  1175  00C2               	movwf	?_fround
  3797  1176  2A6B               	goto	l254
  3798  1177                     l3682:
  3799  1177  300B               	movlw	11
  3800  1178  0255               	subwf	fround@prec,w
  3801  1179  1C03               	skipc
  3802  117A  297C               	goto	u5761
  3803  117B  297D               	goto	u5760
  3804  117C                     u5761:
  3805  117C  2A28               	goto	l3688
  3806  117D                     u5760:
  3807  117D                     l3684:
  3808                           
  3809                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[p
      +                          rec/10U+9U] * _npowers_[prec%10U];
  3810  117D  303F               	movlw	63
  3811  117E  00AB               	movwf	___flmul@b+3
  3812  117F  3000               	movlw	0
  3813  1180  00AA               	movwf	___flmul@b+2
  3814  1181  3000               	movlw	0
  3815  1182  00A9               	movwf	___flmul@b+1
  3816  1183  3000               	movlw	0
  3817  1184  00A8               	movwf	___flmul@b
  3818  1185  300A               	movlw	10
  3819  1186  00A0               	movwf	___lwdiv@divisor
  3820  1187  3000               	movlw	0
  3821  1188  00A1               	movwf	___lwdiv@divisor+1
  3822  1189  0855               	movf	fround@prec,w
  3823  118A  00C6               	movwf	??_fround
  3824  118B  01C7               	clrf	??_fround+1
  3825  118C  0846               	movf	??_fround,w
  3826  118D  00A2               	movwf	___lwdiv@dividend
  3827  118E  0847               	movf	??_fround+1,w
  3828  118F  00A3               	movwf	___lwdiv@dividend+1
  3829  1190  160A  158A  21EE  160A  118A  	fcall	___lwdiv
  3830  1195  1283               	bcf	3,5	;RP0=0, select bank0
  3831  1196  1303               	bcf	3,6	;RP1=0, select bank0
  3832  1197  0820               	movf	?___lwdiv,w
  3833  1198  00C8               	movwf	??_fround+2
  3834  1199  3001               	movlw	1
  3835  119A                     u5775:
  3836  119A  1003               	clrc
  3837  119B  0DC8               	rlf	??_fround+2,f
  3838  119C  3EFF               	addlw	-1
  3839  119D  1D03               	skipz
  3840  119E  299A               	goto	u5775
  3841  119F  1003               	clrc
  3842  11A0  0D48               	rlf	??_fround+2,w
  3843  11A1  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3844  11A2  0084               	movwf	4
  3845  11A3  120A  118A  270A  160A  118A  	fcall	stringdir
  3846  11A8  00C9               	movwf	??_fround+3
  3847  11A9  120A  118A  270A  160A  118A  	fcall	stringdir
  3848  11AE  00CA               	movwf	??_fround+4
  3849  11AF  120A  118A  270A  160A  118A  	fcall	stringdir
  3850  11B4  00CB               	movwf	??_fround+5
  3851  11B5  120A  118A  270A  160A  118A  	fcall	stringdir
  3852  11BA  00CC               	movwf	??_fround+6
  3853  11BB  084C               	movf	??_fround+6,w
  3854  11BC  00AF               	movwf	___flmul@a+3
  3855  11BD  084B               	movf	??_fround+5,w
  3856  11BE  00AE               	movwf	___flmul@a+2
  3857  11BF  084A               	movf	??_fround+4,w
  3858  11C0  00AD               	movwf	___flmul@a+1
  3859  11C1  0849               	movf	??_fround+3,w
  3860  11C2  00AC               	movwf	___flmul@a
  3861  11C3  120A  158A  213C  160A  118A  	fcall	___flmul
  3862  11C8  1283               	bcf	3,5	;RP0=0, select bank0
  3863  11C9  1303               	bcf	3,6	;RP1=0, select bank0
  3864  11CA  082B               	movf	?___flmul+3,w
  3865  11CB  00D4               	movwf	_fround$976+3
  3866  11CC  082A               	movf	?___flmul+2,w
  3867  11CD  00D3               	movwf	_fround$976+2
  3868  11CE  0829               	movf	?___flmul+1,w
  3869  11CF  00D2               	movwf	_fround$976+1
  3870  11D0  0828               	movf	?___flmul,w
  3871  11D1  00D1               	movwf	_fround$976
  3872                           
  3873                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[p
      +                          rec/10U+9U] * _npowers_[prec%10U];
  3874  11D2  300A               	movlw	10
  3875  11D3  00F2               	movwf	___lwmod@divisor
  3876  11D4  3000               	movlw	0
  3877  11D5  00F3               	movwf	___lwmod@divisor+1
  3878  11D6  0855               	movf	fround@prec,w
  3879  11D7  00C6               	movwf	??_fround
  3880  11D8  01C7               	clrf	??_fround+1
  3881  11D9  0846               	movf	??_fround,w
  3882  11DA  00F4               	movwf	___lwmod@dividend
  3883  11DB  0847               	movf	??_fround+1,w
  3884  11DC  00F5               	movwf	___lwmod@dividend+1
  3885  11DD  120A  118A  27C2  160A  118A  	fcall	___lwmod
  3886  11E2  0872               	movf	?___lwmod,w
  3887  11E3  1283               	bcf	3,5	;RP0=0, select bank0
  3888  11E4  1303               	bcf	3,6	;RP1=0, select bank0
  3889  11E5  00C8               	movwf	??_fround+2
  3890  11E6  3001               	movlw	1
  3891  11E7                     u5785:
  3892  11E7  1003               	clrc
  3893  11E8  0DC8               	rlf	??_fround+2,f
  3894  11E9  3EFF               	addlw	-1
  3895  11EA  1D03               	skipz
  3896  11EB  29E7               	goto	u5785
  3897  11EC  1003               	clrc
  3898  11ED  0D48               	rlf	??_fround+2,w
  3899  11EE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3900  11EF  0084               	movwf	4
  3901  11F0  120A  118A  270A  160A  118A  	fcall	stringdir
  3902  11F5  00C9               	movwf	??_fround+3
  3903  11F6  120A  118A  270A  160A  118A  	fcall	stringdir
  3904  11FB  00CA               	movwf	??_fround+4
  3905  11FC  120A  118A  270A  160A  118A  	fcall	stringdir
  3906  1201  00CB               	movwf	??_fround+5
  3907  1202  120A  118A  270A  160A  118A  	fcall	stringdir
  3908  1207  00CC               	movwf	??_fround+6
  3909  1208  084C               	movf	??_fround+6,w
  3910  1209  00AB               	movwf	___flmul@b+3
  3911  120A  084B               	movf	??_fround+5,w
  3912  120B  00AA               	movwf	___flmul@b+2
  3913  120C  084A               	movf	??_fround+4,w
  3914  120D  00A9               	movwf	___flmul@b+1
  3915  120E  0849               	movf	??_fround+3,w
  3916  120F  00A8               	movwf	___flmul@b
  3917  1210  0854               	movf	_fround$976+3,w
  3918  1211  00AF               	movwf	___flmul@a+3
  3919  1212  0853               	movf	_fround$976+2,w
  3920  1213  00AE               	movwf	___flmul@a+2
  3921  1214  0852               	movf	_fround$976+1,w
  3922  1215  00AD               	movwf	___flmul@a+1
  3923  1216  0851               	movf	_fround$976,w
  3924  1217  00AC               	movwf	___flmul@a
  3925  1218  120A  158A  213C  160A  118A  	fcall	___flmul
  3926  121D  1283               	bcf	3,5	;RP0=0, select bank0
  3927  121E  1303               	bcf	3,6	;RP1=0, select bank0
  3928  121F  082B               	movf	?___flmul+3,w
  3929  1220  00C5               	movwf	?_fround+3
  3930  1221  082A               	movf	?___flmul+2,w
  3931  1222  00C4               	movwf	?_fround+2
  3932  1223  0829               	movf	?___flmul+1,w
  3933  1224  00C3               	movwf	?_fround+1
  3934  1225  0828               	movf	?___flmul,w
  3935  1226  00C2               	movwf	?_fround
  3936  1227  2A6B               	goto	l254
  3937  1228                     l3688:
  3938                           
  3939                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 * _npowers_[pr
      +                          ec];
  3940  1228  303F               	movlw	63
  3941  1229  00AB               	movwf	___flmul@b+3
  3942  122A  3000               	movlw	0
  3943  122B  00AA               	movwf	___flmul@b+2
  3944  122C  3000               	movlw	0
  3945  122D  00A9               	movwf	___flmul@b+1
  3946  122E  3000               	movlw	0
  3947  122F  00A8               	movwf	___flmul@b
  3948  1230  0855               	movf	fround@prec,w
  3949  1231  00C6               	movwf	??_fround
  3950  1232  3001               	movlw	1
  3951  1233                     u5795:
  3952  1233  1003               	clrc
  3953  1234  0DC6               	rlf	??_fround,f
  3954  1235  3EFF               	addlw	-1
  3955  1236  1D03               	skipz
  3956  1237  2A33               	goto	u5795
  3957  1238  1003               	clrc
  3958  1239  0D46               	rlf	??_fround,w
  3959  123A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3960  123B  0084               	movwf	4
  3961  123C  120A  118A  270A  160A  118A  	fcall	stringdir
  3962  1241  00C7               	movwf	??_fround+1
  3963  1242  120A  118A  270A  160A  118A  	fcall	stringdir
  3964  1247  00C8               	movwf	??_fround+2
  3965  1248  120A  118A  270A  160A  118A  	fcall	stringdir
  3966  124D  00C9               	movwf	??_fround+3
  3967  124E  120A  118A  270A  160A  118A  	fcall	stringdir
  3968  1253  00CA               	movwf	??_fround+4
  3969  1254  084A               	movf	??_fround+4,w
  3970  1255  00AF               	movwf	___flmul@a+3
  3971  1256  0849               	movf	??_fround+3,w
  3972  1257  00AE               	movwf	___flmul@a+2
  3973  1258  0848               	movf	??_fround+2,w
  3974  1259  00AD               	movwf	___flmul@a+1
  3975  125A  0847               	movf	??_fround+1,w
  3976  125B  00AC               	movwf	___flmul@a
  3977  125C  120A  158A  213C  160A  118A  	fcall	___flmul
  3978  1261  1283               	bcf	3,5	;RP0=0, select bank0
  3979  1262  1303               	bcf	3,6	;RP1=0, select bank0
  3980  1263  082B               	movf	?___flmul+3,w
  3981  1264  00C5               	movwf	?_fround+3
  3982  1265  082A               	movf	?___flmul+2,w
  3983  1266  00C4               	movwf	?_fround+2
  3984  1267  0829               	movf	?___flmul+1,w
  3985  1268  00C3               	movwf	?_fround+1
  3986  1269  0828               	movf	?___flmul,w
  3987  126A  00C2               	movwf	?_fround
  3988  126B                     l254:
  3989  126B  0008               	return
  3990  126C                     __end_of_fround:
  3991                           
  3992                           	psect	text7
  3993  07C2                     __ptext7:	
  3994 ;; *************** function ___lwmod *****************
  3995 ;; Defined at:
  3996 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  divisor         2    2[COMMON] unsigned int 
  3999 ;;  dividend        2    4[COMMON] unsigned int 
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;  counter         1    7[COMMON] unsigned char 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  2    2[COMMON] unsigned int 
  4004 ;; Registers used:
  4005 ;;		wreg, status,2, status,0
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4011 ;;      Params:         4       0       0       0       0
  4012 ;;      Locals:         1       0       0       0       0
  4013 ;;      Temps:          1       0       0       0       0
  4014 ;;      Totals:         6       0       0       0       0
  4015 ;;Total ram usage:        6 bytes
  4016 ;; Hardware stack levels used:    1
  4017 ;; Hardware stack levels required when called:    1
  4018 ;; This function calls:
  4019 ;;		Nothing
  4020 ;; This function is called by:
  4021 ;;		_fround
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           
  4026                           ;psect for function ___lwmod
  4027  07C2                     ___lwmod:
  4028  07C2                     l2404:	
  4029                           ;incstack = 0
  4030                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4031                           
  4032  07C2  0872               	movf	___lwmod@divisor,w
  4033  07C3  0473               	iorwf	___lwmod@divisor+1,w
  4034  07C4  1903               	btfsc	3,2
  4035  07C5  2FC7               	goto	u3121
  4036  07C6  2FC8               	goto	u3120
  4037  07C7                     u3121:
  4038  07C7  2FF7               	goto	l2422
  4039  07C8                     u3120:
  4040  07C8                     l2406:
  4041  07C8  01F7               	clrf	___lwmod@counter
  4042  07C9  0AF7               	incf	___lwmod@counter,f
  4043  07CA  2FD6               	goto	l2412
  4044  07CB                     l2408:
  4045  07CB  3001               	movlw	1
  4046  07CC                     u3135:
  4047  07CC  1003               	clrc
  4048  07CD  0DF2               	rlf	___lwmod@divisor,f
  4049  07CE  0DF3               	rlf	___lwmod@divisor+1,f
  4050  07CF  3EFF               	addlw	-1
  4051  07D0  1D03               	skipz
  4052  07D1  2FCC               	goto	u3135
  4053  07D2                     l2410:
  4054  07D2  3001               	movlw	1
  4055  07D3  00F6               	movwf	??___lwmod
  4056  07D4  0876               	movf	??___lwmod,w
  4057  07D5  07F7               	addwf	___lwmod@counter,f
  4058  07D6                     l2412:
  4059  07D6  1FF3               	btfss	___lwmod@divisor+1,7
  4060  07D7  2FD9               	goto	u3141
  4061  07D8  2FDA               	goto	u3140
  4062  07D9                     u3141:
  4063  07D9  2FCB               	goto	l2408
  4064  07DA                     u3140:
  4065  07DA                     l2414:
  4066  07DA  0873               	movf	___lwmod@divisor+1,w
  4067  07DB  0275               	subwf	___lwmod@dividend+1,w
  4068  07DC  1D03               	skipz
  4069  07DD  2FE0               	goto	u3155
  4070  07DE  0872               	movf	___lwmod@divisor,w
  4071  07DF  0274               	subwf	___lwmod@dividend,w
  4072  07E0                     u3155:
  4073  07E0  1C03               	skipc
  4074  07E1  2FE3               	goto	u3151
  4075  07E2  2FE4               	goto	u3150
  4076  07E3                     u3151:
  4077  07E3  2FEA               	goto	l2418
  4078  07E4                     u3150:
  4079  07E4                     l2416:
  4080  07E4  0872               	movf	___lwmod@divisor,w
  4081  07E5  02F4               	subwf	___lwmod@dividend,f
  4082  07E6  0873               	movf	___lwmod@divisor+1,w
  4083  07E7  1C03               	skipc
  4084  07E8  03F5               	decf	___lwmod@dividend+1,f
  4085  07E9  02F5               	subwf	___lwmod@dividend+1,f
  4086  07EA                     l2418:
  4087  07EA  3001               	movlw	1
  4088  07EB                     u3165:
  4089  07EB  1003               	clrc
  4090  07EC  0CF3               	rrf	___lwmod@divisor+1,f
  4091  07ED  0CF2               	rrf	___lwmod@divisor,f
  4092  07EE  3EFF               	addlw	-1
  4093  07EF  1D03               	skipz
  4094  07F0  2FEB               	goto	u3165
  4095  07F1                     l2420:
  4096  07F1  3001               	movlw	1
  4097  07F2  02F7               	subwf	___lwmod@counter,f
  4098  07F3  1D03               	btfss	3,2
  4099  07F4  2FF6               	goto	u3171
  4100  07F5  2FF7               	goto	u3170
  4101  07F6                     u3171:
  4102  07F6  2FDA               	goto	l2414
  4103  07F7                     u3170:
  4104  07F7                     l2422:
  4105  07F7  0875               	movf	___lwmod@dividend+1,w
  4106  07F8  00F3               	movwf	?___lwmod+1
  4107  07F9  0874               	movf	___lwmod@dividend,w
  4108  07FA  00F2               	movwf	?___lwmod
  4109  07FB                     l673:
  4110  07FB  0008               	return
  4111  07FC                     __end_of___lwmod:
  4112                           
  4113                           	psect	text8
  4114  19EE                     __ptext8:	
  4115 ;; *************** function ___lwdiv *****************
  4116 ;; Defined at:
  4117 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;  divisor         2    0[BANK0 ] unsigned int 
  4120 ;;  dividend        2    2[BANK0 ] unsigned int 
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;  quotient        2    5[BANK0 ] unsigned int 
  4123 ;;  counter         1    4[BANK0 ] unsigned char 
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  2    0[BANK0 ] unsigned int 
  4126 ;; Registers used:
  4127 ;;		wreg, status,2, status,0
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4133 ;;      Params:         0       4       0       0       0
  4134 ;;      Locals:         0       3       0       0       0
  4135 ;;      Temps:          1       0       0       0       0
  4136 ;;      Totals:         1       7       0       0       0
  4137 ;;Total ram usage:        8 bytes
  4138 ;; Hardware stack levels used:    1
  4139 ;; Hardware stack levels required when called:    1
  4140 ;; This function calls:
  4141 ;;		Nothing
  4142 ;; This function is called by:
  4143 ;;		_fround
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           
  4148                           ;psect for function ___lwdiv
  4149  19EE                     ___lwdiv:
  4150  19EE                     l3624:	
  4151                           ;incstack = 0
  4152                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4153                           
  4154  19EE  1283               	bcf	3,5	;RP0=0, select bank0
  4155  19EF  1303               	bcf	3,6	;RP1=0, select bank0
  4156  19F0  01A5               	clrf	___lwdiv@quotient
  4157  19F1  01A6               	clrf	___lwdiv@quotient+1
  4158  19F2                     l3626:
  4159  19F2  0820               	movf	___lwdiv@divisor,w
  4160  19F3  0421               	iorwf	___lwdiv@divisor+1,w
  4161  19F4  1903               	btfsc	3,2
  4162  19F5  29F7               	goto	u5651
  4163  19F6  29F8               	goto	u5650
  4164  19F7                     u5651:
  4165  19F7  2A2F               	goto	l3646
  4166  19F8                     u5650:
  4167  19F8                     l3628:
  4168  19F8  01A4               	clrf	___lwdiv@counter
  4169  19F9  0AA4               	incf	___lwdiv@counter,f
  4170  19FA  2A06               	goto	l3634
  4171  19FB                     l3630:
  4172  19FB  3001               	movlw	1
  4173  19FC                     u5665:
  4174  19FC  1003               	clrc
  4175  19FD  0DA0               	rlf	___lwdiv@divisor,f
  4176  19FE  0DA1               	rlf	___lwdiv@divisor+1,f
  4177  19FF  3EFF               	addlw	-1
  4178  1A00  1D03               	skipz
  4179  1A01  29FC               	goto	u5665
  4180  1A02                     l3632:
  4181  1A02  3001               	movlw	1
  4182  1A03  00F8               	movwf	??___lwdiv
  4183  1A04  0878               	movf	??___lwdiv,w
  4184  1A05  07A4               	addwf	___lwdiv@counter,f
  4185  1A06                     l3634:
  4186  1A06  1FA1               	btfss	___lwdiv@divisor+1,7
  4187  1A07  2A09               	goto	u5671
  4188  1A08  2A0A               	goto	u5670
  4189  1A09                     u5671:
  4190  1A09  29FB               	goto	l3630
  4191  1A0A                     u5670:
  4192  1A0A                     l3636:
  4193  1A0A  3001               	movlw	1
  4194  1A0B                     u5685:
  4195  1A0B  1003               	clrc
  4196  1A0C  0DA5               	rlf	___lwdiv@quotient,f
  4197  1A0D  0DA6               	rlf	___lwdiv@quotient+1,f
  4198  1A0E  3EFF               	addlw	-1
  4199  1A0F  1D03               	skipz
  4200  1A10  2A0B               	goto	u5685
  4201  1A11  0821               	movf	___lwdiv@divisor+1,w
  4202  1A12  0223               	subwf	___lwdiv@dividend+1,w
  4203  1A13  1D03               	skipz
  4204  1A14  2A17               	goto	u5695
  4205  1A15  0820               	movf	___lwdiv@divisor,w
  4206  1A16  0222               	subwf	___lwdiv@dividend,w
  4207  1A17                     u5695:
  4208  1A17  1C03               	skipc
  4209  1A18  2A1A               	goto	u5691
  4210  1A19  2A1B               	goto	u5690
  4211  1A1A                     u5691:
  4212  1A1A  2A22               	goto	l3642
  4213  1A1B                     u5690:
  4214  1A1B                     l3638:
  4215  1A1B  0820               	movf	___lwdiv@divisor,w
  4216  1A1C  02A2               	subwf	___lwdiv@dividend,f
  4217  1A1D  0821               	movf	___lwdiv@divisor+1,w
  4218  1A1E  1C03               	skipc
  4219  1A1F  03A3               	decf	___lwdiv@dividend+1,f
  4220  1A20  02A3               	subwf	___lwdiv@dividend+1,f
  4221  1A21                     l3640:
  4222  1A21  1425               	bsf	___lwdiv@quotient,0
  4223  1A22                     l3642:
  4224  1A22  3001               	movlw	1
  4225  1A23                     u5705:
  4226  1A23  1003               	clrc
  4227  1A24  0CA1               	rrf	___lwdiv@divisor+1,f
  4228  1A25  0CA0               	rrf	___lwdiv@divisor,f
  4229  1A26  3EFF               	addlw	-1
  4230  1A27  1D03               	skipz
  4231  1A28  2A23               	goto	u5705
  4232  1A29                     l3644:
  4233  1A29  3001               	movlw	1
  4234  1A2A  02A4               	subwf	___lwdiv@counter,f
  4235  1A2B  1D03               	btfss	3,2
  4236  1A2C  2A2E               	goto	u5711
  4237  1A2D  2A2F               	goto	u5710
  4238  1A2E                     u5711:
  4239  1A2E  2A0A               	goto	l3636
  4240  1A2F                     u5710:
  4241  1A2F                     l3646:
  4242  1A2F  0826               	movf	___lwdiv@quotient+1,w
  4243  1A30  00A1               	movwf	?___lwdiv+1
  4244  1A31  0825               	movf	___lwdiv@quotient,w
  4245  1A32  00A0               	movwf	?___lwdiv
  4246  1A33                     l663:
  4247  1A33  0008               	return
  4248  1A34                     __end_of___lwdiv:
  4249                           
  4250                           	psect	text9
  4251  1F43                     __ptext9:	
  4252 ;; *************** function __tdiv_to_l_ *****************
  4253 ;; Defined at:
  4254 ;;		line 60 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  f1              4    2[COMMON] float 
  4257 ;;  f2              4    6[COMMON] float 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  quot            4    4[BANK0 ] unsigned long 
  4260 ;;  exp1            1    9[BANK0 ] unsigned char 
  4261 ;;  cntr            1    8[BANK0 ] unsigned char 
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  4    2[COMMON] unsigned long 
  4264 ;; Registers used:
  4265 ;;		wreg, status,2, status,0
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4271 ;;      Params:         8       0       0       0       0
  4272 ;;      Locals:         0       6       0       0       0
  4273 ;;      Temps:          0       4       0       0       0
  4274 ;;      Totals:         8      10       0       0       0
  4275 ;;Total ram usage:       18 bytes
  4276 ;; Hardware stack levels used:    1
  4277 ;; Hardware stack levels required when called:    1
  4278 ;; This function calls:
  4279 ;;		Nothing
  4280 ;; This function is called by:
  4281 ;;		_sprintf
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           
  4286                           ;psect for function __tdiv_to_l_
  4287  1F43                     __tdiv_to_l_:
  4288  1F43                     l2894:	
  4289                           ;incstack = 0
  4290                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4291                           
  4292  1F43  0872               	movf	__tdiv_to_l_@f1,w
  4293  1F44  1283               	bcf	3,5	;RP0=0, select bank0
  4294  1F45  1303               	bcf	3,6	;RP1=0, select bank0
  4295  1F46  00A0               	movwf	??__tdiv_to_l_
  4296  1F47  0873               	movf	__tdiv_to_l_@f1+1,w
  4297  1F48  00A1               	movwf	??__tdiv_to_l_+1
  4298  1F49  0874               	movf	__tdiv_to_l_@f1+2,w
  4299  1F4A  00A2               	movwf	??__tdiv_to_l_+2
  4300  1F4B  1003               	clrc
  4301  1F4C  0D21               	rlf	??__tdiv_to_l_+1,w
  4302  1F4D  0D22               	rlf	??__tdiv_to_l_+2,w
  4303  1F4E  00A3               	movwf	??__tdiv_to_l_+3
  4304  1F4F  0823               	movf	??__tdiv_to_l_+3,w
  4305  1F50  00A9               	movwf	__tdiv_to_l_@exp1
  4306  1F51  0829               	movf	__tdiv_to_l_@exp1,w
  4307  1F52  1D03               	btfss	3,2
  4308  1F53  2F55               	goto	u4281
  4309  1F54  2F56               	goto	u4280
  4310  1F55                     u4281:
  4311  1F55  2F5F               	goto	l2900
  4312  1F56                     u4280:
  4313  1F56                     l2896:
  4314  1F56  3000               	movlw	0
  4315  1F57  00F5               	movwf	?__tdiv_to_l_+3
  4316  1F58  3000               	movlw	0
  4317  1F59  00F4               	movwf	?__tdiv_to_l_+2
  4318  1F5A  3000               	movlw	0
  4319  1F5B  00F3               	movwf	?__tdiv_to_l_+1
  4320  1F5C  3000               	movlw	0
  4321  1F5D  00F2               	movwf	?__tdiv_to_l_
  4322  1F5E  2FFF               	goto	l574
  4323  1F5F                     l2900:
  4324  1F5F  0876               	movf	__tdiv_to_l_@f2,w
  4325  1F60  00A0               	movwf	??__tdiv_to_l_
  4326  1F61  0877               	movf	__tdiv_to_l_@f2+1,w
  4327  1F62  00A1               	movwf	??__tdiv_to_l_+1
  4328  1F63  0878               	movf	__tdiv_to_l_@f2+2,w
  4329  1F64  00A2               	movwf	??__tdiv_to_l_+2
  4330  1F65  1003               	clrc
  4331  1F66  0D21               	rlf	??__tdiv_to_l_+1,w
  4332  1F67  0D22               	rlf	??__tdiv_to_l_+2,w
  4333  1F68  00A3               	movwf	??__tdiv_to_l_+3
  4334  1F69  0823               	movf	??__tdiv_to_l_+3,w
  4335  1F6A  00A8               	movwf	__tdiv_to_l_@cntr
  4336  1F6B  0828               	movf	__tdiv_to_l_@cntr,w
  4337  1F6C  1D03               	btfss	3,2
  4338  1F6D  2F6F               	goto	u4291
  4339  1F6E  2F70               	goto	u4290
  4340  1F6F                     u4291:
  4341  1F6F  2F71               	goto	l575
  4342  1F70                     u4290:
  4343  1F70  2F56               	goto	l2896
  4344  1F71                     l575:
  4345  1F71  17F3               	bsf	__tdiv_to_l_@f1+1,7
  4346  1F72                     l2906:
  4347  1F72  30FF               	movlw	255
  4348  1F73  05F2               	andwf	__tdiv_to_l_@f1,f
  4349  1F74  30FF               	movlw	255
  4350  1F75  05F3               	andwf	__tdiv_to_l_@f1+1,f
  4351  1F76  3000               	movlw	0
  4352  1F77  05F4               	andwf	__tdiv_to_l_@f1+2,f
  4353  1F78                     l2908:
  4354  1F78  17F7               	bsf	__tdiv_to_l_@f2+1,7
  4355  1F79  30FF               	movlw	255
  4356  1F7A  05F6               	andwf	__tdiv_to_l_@f2,f
  4357  1F7B  30FF               	movlw	255
  4358  1F7C  05F7               	andwf	__tdiv_to_l_@f2+1,f
  4359  1F7D  3000               	movlw	0
  4360  1F7E  05F8               	andwf	__tdiv_to_l_@f2+2,f
  4361  1F7F  3000               	movlw	0
  4362  1F80  00A7               	movwf	__tdiv_to_l_@quot+3
  4363  1F81  3000               	movlw	0
  4364  1F82  00A6               	movwf	__tdiv_to_l_@quot+2
  4365  1F83  3000               	movlw	0
  4366  1F84  00A5               	movwf	__tdiv_to_l_@quot+1
  4367  1F85  3000               	movlw	0
  4368  1F86  00A4               	movwf	__tdiv_to_l_@quot
  4369  1F87                     l2910:
  4370  1F87  307F               	movlw	127
  4371  1F88  02A9               	subwf	__tdiv_to_l_@exp1,f
  4372  1F89                     l2912:
  4373  1F89  3098               	movlw	152
  4374  1F8A  0728               	addwf	__tdiv_to_l_@cntr,w
  4375  1F8B  00A0               	movwf	??__tdiv_to_l_
  4376  1F8C  0820               	movf	??__tdiv_to_l_,w
  4377  1F8D  02A9               	subwf	__tdiv_to_l_@exp1,f
  4378  1F8E  3018               	movlw	24
  4379  1F8F  00A0               	movwf	??__tdiv_to_l_
  4380  1F90  0820               	movf	??__tdiv_to_l_,w
  4381  1F91  00A8               	movwf	__tdiv_to_l_@cntr
  4382  1F92                     l2914:
  4383  1F92  3001               	movlw	1
  4384  1F93  00A0               	movwf	??__tdiv_to_l_
  4385  1F94                     u4305:
  4386  1F94  1003               	clrc
  4387  1F95  0DA4               	rlf	__tdiv_to_l_@quot,f
  4388  1F96  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  4389  1F97  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  4390  1F98  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  4391  1F99  0BA0               	decfsz	??__tdiv_to_l_,f
  4392  1F9A  2F94               	goto	u4305
  4393  1F9B                     l2916:
  4394  1F9B  0878               	movf	__tdiv_to_l_@f2+2,w
  4395  1F9C  0274               	subwf	__tdiv_to_l_@f1+2,w
  4396  1F9D  1D03               	skipz
  4397  1F9E  2FA5               	goto	u4315
  4398  1F9F  0877               	movf	__tdiv_to_l_@f2+1,w
  4399  1FA0  0273               	subwf	__tdiv_to_l_@f1+1,w
  4400  1FA1  1D03               	skipz
  4401  1FA2  2FA5               	goto	u4315
  4402  1FA3  0876               	movf	__tdiv_to_l_@f2,w
  4403  1FA4  0272               	subwf	__tdiv_to_l_@f1,w
  4404  1FA5                     u4315:
  4405  1FA5  1C03               	skipc
  4406  1FA6  2FA8               	goto	u4311
  4407  1FA7  2FA9               	goto	u4310
  4408  1FA8                     u4311:
  4409  1FA8  2FB4               	goto	l2922
  4410  1FA9                     u4310:
  4411  1FA9                     l2918:
  4412  1FA9  0876               	movf	__tdiv_to_l_@f2,w
  4413  1FAA  02F2               	subwf	__tdiv_to_l_@f1,f
  4414  1FAB  0877               	movf	__tdiv_to_l_@f2+1,w
  4415  1FAC  1C03               	skipc
  4416  1FAD  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  4417  1FAE  02F3               	subwf	__tdiv_to_l_@f1+1,f
  4418  1FAF  0878               	movf	__tdiv_to_l_@f2+2,w
  4419  1FB0  1C03               	skipc
  4420  1FB1  0A78               	incf	__tdiv_to_l_@f2+2,w
  4421  1FB2  02F4               	subwf	__tdiv_to_l_@f1+2,f
  4422  1FB3                     l2920:
  4423  1FB3  1424               	bsf	__tdiv_to_l_@quot,0
  4424  1FB4                     l2922:
  4425  1FB4  3001               	movlw	1
  4426  1FB5                     u4325:
  4427  1FB5  1003               	clrc
  4428  1FB6  0DF2               	rlf	__tdiv_to_l_@f1,f
  4429  1FB7  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  4430  1FB8  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  4431  1FB9  3EFF               	addlw	-1
  4432  1FBA  1D03               	skipz
  4433  1FBB  2FB5               	goto	u4325
  4434  1FBC                     l2924:
  4435  1FBC  3001               	movlw	1
  4436  1FBD  02A8               	subwf	__tdiv_to_l_@cntr,f
  4437  1FBE  1D03               	btfss	3,2
  4438  1FBF  2FC1               	goto	u4331
  4439  1FC0  2FC2               	goto	u4330
  4440  1FC1                     u4331:
  4441  1FC1  2F92               	goto	l2914
  4442  1FC2                     u4330:
  4443  1FC2                     l578:
  4444  1FC2  1FA9               	btfss	__tdiv_to_l_@exp1,7
  4445  1FC3  2FC5               	goto	u4341
  4446  1FC4  2FC6               	goto	u4340
  4447  1FC5                     u4341:
  4448  1FC5  2FE0               	goto	l2934
  4449  1FC6                     u4340:
  4450  1FC6                     l2926:
  4451  1FC6  0829               	movf	__tdiv_to_l_@exp1,w
  4452  1FC7  3A80               	xorlw	128
  4453  1FC8  3E97               	addlw	151
  4454  1FC9  1803               	skipnc
  4455  1FCA  2FCC               	goto	u4351
  4456  1FCB  2FCD               	goto	u4350
  4457  1FCC                     u4351:
  4458  1FCC  2FCE               	goto	l2932
  4459  1FCD                     u4350:
  4460  1FCD  2F56               	goto	l2896
  4461  1FCE                     l2932:
  4462  1FCE  3001               	movlw	1
  4463  1FCF                     u4365:
  4464  1FCF  1003               	clrc
  4465  1FD0  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  4466  1FD1  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  4467  1FD2  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  4468  1FD3  0CA4               	rrf	__tdiv_to_l_@quot,f
  4469  1FD4  3EFF               	addlw	-1
  4470  1FD5  1D03               	skipz
  4471  1FD6  2FCF               	goto	u4365
  4472  1FD7  3001               	movlw	1
  4473  1FD8  00A0               	movwf	??__tdiv_to_l_
  4474  1FD9  0820               	movf	??__tdiv_to_l_,w
  4475  1FDA  07A9               	addwf	__tdiv_to_l_@exp1,f
  4476  1FDB  1D03               	btfss	3,2
  4477  1FDC  2FDE               	goto	u4371
  4478  1FDD  2FDF               	goto	u4370
  4479  1FDE                     u4371:
  4480  1FDE  2FCE               	goto	l2932
  4481  1FDF                     u4370:
  4482  1FDF  2FF7               	goto	l2942
  4483  1FE0                     l2934:
  4484  1FE0  3018               	movlw	24
  4485  1FE1  0229               	subwf	__tdiv_to_l_@exp1,w
  4486  1FE2  1C03               	skipc
  4487  1FE3  2FE5               	goto	u4381
  4488  1FE4  2FE6               	goto	u4380
  4489  1FE5                     u4381:
  4490  1FE5  2FF2               	goto	l585
  4491  1FE6                     u4380:
  4492  1FE6  2F56               	goto	l2896
  4493  1FE7                     l2940:
  4494  1FE7  3001               	movlw	1
  4495  1FE8  00A0               	movwf	??__tdiv_to_l_
  4496  1FE9                     u4395:
  4497  1FE9  1003               	clrc
  4498  1FEA  0DA4               	rlf	__tdiv_to_l_@quot,f
  4499  1FEB  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  4500  1FEC  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  4501  1FED  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  4502  1FEE  0BA0               	decfsz	??__tdiv_to_l_,f
  4503  1FEF  2FE9               	goto	u4395
  4504  1FF0  3001               	movlw	1
  4505  1FF1  02A9               	subwf	__tdiv_to_l_@exp1,f
  4506  1FF2                     l585:
  4507  1FF2  0829               	movf	__tdiv_to_l_@exp1,w
  4508  1FF3  1D03               	btfss	3,2
  4509  1FF4  2FF6               	goto	u4401
  4510  1FF5  2FF7               	goto	u4400
  4511  1FF6                     u4401:
  4512  1FF6  2FE7               	goto	l2940
  4513  1FF7                     u4400:
  4514  1FF7                     l2942:
  4515  1FF7  0827               	movf	__tdiv_to_l_@quot+3,w
  4516  1FF8  00F5               	movwf	?__tdiv_to_l_+3
  4517  1FF9  0826               	movf	__tdiv_to_l_@quot+2,w
  4518  1FFA  00F4               	movwf	?__tdiv_to_l_+2
  4519  1FFB  0825               	movf	__tdiv_to_l_@quot+1,w
  4520  1FFC  00F3               	movwf	?__tdiv_to_l_+1
  4521  1FFD  0824               	movf	__tdiv_to_l_@quot,w
  4522  1FFE  00F2               	movwf	?__tdiv_to_l_
  4523  1FFF                     l574:
  4524  1FFF  0008               	return
  4525  2000                     __end_of__tdiv_to_l_:
  4526                           
  4527                           	psect	text10
  4528  087E                     __ptext10:	
  4529 ;; *************** function __div_to_l_ *****************
  4530 ;; Defined at:
  4531 ;;		line 60 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;  f1              4    2[COMMON] unsigned long 
  4534 ;;  f2              4    6[COMMON] unsigned long 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;  quot            4    0[BANK0 ] unsigned long 
  4537 ;;  exp1            1    5[BANK0 ] unsigned char 
  4538 ;;  cntr            1    4[BANK0 ] unsigned char 
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  4    2[COMMON] unsigned long 
  4541 ;; Registers used:
  4542 ;;		wreg, status,2, status,0
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4548 ;;      Params:         8       0       0       0       0
  4549 ;;      Locals:         0       6       0       0       0
  4550 ;;      Temps:          1       0       0       0       0
  4551 ;;      Totals:         9       6       0       0       0
  4552 ;;Total ram usage:       15 bytes
  4553 ;; Hardware stack levels used:    1
  4554 ;; Hardware stack levels required when called:    1
  4555 ;; This function calls:
  4556 ;;		Nothing
  4557 ;; This function is called by:
  4558 ;;		_sprintf
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           
  4563                           ;psect for function __div_to_l_
  4564  087E                     __div_to_l_:
  4565  087E                     l2946:	
  4566                           ;incstack = 0
  4567                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  4568                           
  4569  087E  1003               	clrc
  4570  087F  0D74               	rlf	__div_to_l_@f1+2,w
  4571  0880  0D75               	rlf	__div_to_l_@f1+3,w
  4572  0881  00FA               	movwf	??__div_to_l_
  4573  0882  087A               	movf	??__div_to_l_,w
  4574  0883  1283               	bcf	3,5	;RP0=0, select bank0
  4575  0884  1303               	bcf	3,6	;RP1=0, select bank0
  4576  0885  00A5               	movwf	__div_to_l_@exp1
  4577  0886  0825               	movf	__div_to_l_@exp1,w
  4578  0887  1D03               	btfss	3,2
  4579  0888  288A               	goto	u4411
  4580  0889  288B               	goto	u4410
  4581  088A                     u4411:
  4582  088A  2894               	goto	l2952
  4583  088B                     u4410:
  4584  088B                     l2948:
  4585  088B  3000               	movlw	0
  4586  088C  00F5               	movwf	?__div_to_l_+3
  4587  088D  3000               	movlw	0
  4588  088E  00F4               	movwf	?__div_to_l_+2
  4589  088F  3000               	movlw	0
  4590  0890  00F3               	movwf	?__div_to_l_+1
  4591  0891  3000               	movlw	0
  4592  0892  00F2               	movwf	?__div_to_l_
  4593  0893  293B               	goto	l527
  4594  0894                     l2952:
  4595  0894  1003               	clrc
  4596  0895  0D78               	rlf	__div_to_l_@f2+2,w
  4597  0896  0D79               	rlf	__div_to_l_@f2+3,w
  4598  0897  00FA               	movwf	??__div_to_l_
  4599  0898  087A               	movf	??__div_to_l_,w
  4600  0899  00A4               	movwf	__div_to_l_@cntr
  4601  089A  0824               	movf	__div_to_l_@cntr,w
  4602  089B  1D03               	btfss	3,2
  4603  089C  289E               	goto	u4421
  4604  089D  289F               	goto	u4420
  4605  089E                     u4421:
  4606  089E  28A0               	goto	l528
  4607  089F                     u4420:
  4608  089F  288B               	goto	l2948
  4609  08A0                     l528:
  4610  08A0  17F4               	bsf	__div_to_l_@f1+2,7
  4611  08A1                     l2958:
  4612  08A1  30FF               	movlw	255
  4613  08A2  05F2               	andwf	__div_to_l_@f1,f
  4614  08A3  30FF               	movlw	255
  4615  08A4  05F3               	andwf	__div_to_l_@f1+1,f
  4616  08A5  30FF               	movlw	255
  4617  08A6  05F4               	andwf	__div_to_l_@f1+2,f
  4618  08A7  3000               	movlw	0
  4619  08A8  05F5               	andwf	__div_to_l_@f1+3,f
  4620  08A9                     l2960:
  4621  08A9  17F8               	bsf	__div_to_l_@f2+2,7
  4622  08AA  30FF               	movlw	255
  4623  08AB  05F6               	andwf	__div_to_l_@f2,f
  4624  08AC  30FF               	movlw	255
  4625  08AD  05F7               	andwf	__div_to_l_@f2+1,f
  4626  08AE  30FF               	movlw	255
  4627  08AF  05F8               	andwf	__div_to_l_@f2+2,f
  4628  08B0  3000               	movlw	0
  4629  08B1  05F9               	andwf	__div_to_l_@f2+3,f
  4630  08B2  3000               	movlw	0
  4631  08B3  00A3               	movwf	__div_to_l_@quot+3
  4632  08B4  3000               	movlw	0
  4633  08B5  00A2               	movwf	__div_to_l_@quot+2
  4634  08B6  3000               	movlw	0
  4635  08B7  00A1               	movwf	__div_to_l_@quot+1
  4636  08B8  3000               	movlw	0
  4637  08B9  00A0               	movwf	__div_to_l_@quot
  4638  08BA                     l2962:
  4639  08BA  307F               	movlw	127
  4640  08BB  02A5               	subwf	__div_to_l_@exp1,f
  4641  08BC                     l2964:
  4642  08BC  30A0               	movlw	160
  4643  08BD  0724               	addwf	__div_to_l_@cntr,w
  4644  08BE  00FA               	movwf	??__div_to_l_
  4645  08BF  087A               	movf	??__div_to_l_,w
  4646  08C0  02A5               	subwf	__div_to_l_@exp1,f
  4647  08C1  3020               	movlw	32
  4648  08C2  00FA               	movwf	??__div_to_l_
  4649  08C3  087A               	movf	??__div_to_l_,w
  4650  08C4  00A4               	movwf	__div_to_l_@cntr
  4651  08C5                     l2966:
  4652  08C5  3001               	movlw	1
  4653  08C6  00FA               	movwf	??__div_to_l_
  4654  08C7                     u4435:
  4655  08C7  1003               	clrc
  4656  08C8  0DA0               	rlf	__div_to_l_@quot,f
  4657  08C9  0DA1               	rlf	__div_to_l_@quot+1,f
  4658  08CA  0DA2               	rlf	__div_to_l_@quot+2,f
  4659  08CB  0DA3               	rlf	__div_to_l_@quot+3,f
  4660  08CC  0BFA               	decfsz	??__div_to_l_,f
  4661  08CD  28C7               	goto	u4435
  4662  08CE                     l2968:
  4663  08CE  0879               	movf	__div_to_l_@f2+3,w
  4664  08CF  0275               	subwf	__div_to_l_@f1+3,w
  4665  08D0  1D03               	skipz
  4666  08D1  28DC               	goto	u4445
  4667  08D2  0878               	movf	__div_to_l_@f2+2,w
  4668  08D3  0274               	subwf	__div_to_l_@f1+2,w
  4669  08D4  1D03               	skipz
  4670  08D5  28DC               	goto	u4445
  4671  08D6  0877               	movf	__div_to_l_@f2+1,w
  4672  08D7  0273               	subwf	__div_to_l_@f1+1,w
  4673  08D8  1D03               	skipz
  4674  08D9  28DC               	goto	u4445
  4675  08DA  0876               	movf	__div_to_l_@f2,w
  4676  08DB  0272               	subwf	__div_to_l_@f1,w
  4677  08DC                     u4445:
  4678  08DC  1C03               	skipc
  4679  08DD  28DF               	goto	u4441
  4680  08DE  28E0               	goto	u4440
  4681  08DF                     u4441:
  4682  08DF  28EF               	goto	l2974
  4683  08E0                     u4440:
  4684  08E0                     l2970:
  4685  08E0  0876               	movf	__div_to_l_@f2,w
  4686  08E1  02F2               	subwf	__div_to_l_@f1,f
  4687  08E2  0877               	movf	__div_to_l_@f2+1,w
  4688  08E3  1C03               	skipc
  4689  08E4  0F77               	incfsz	__div_to_l_@f2+1,w
  4690  08E5  02F3               	subwf	__div_to_l_@f1+1,f
  4691  08E6  0878               	movf	__div_to_l_@f2+2,w
  4692  08E7  1C03               	skipc
  4693  08E8  0F78               	incfsz	__div_to_l_@f2+2,w
  4694  08E9  02F4               	subwf	__div_to_l_@f1+2,f
  4695  08EA  0879               	movf	__div_to_l_@f2+3,w
  4696  08EB  1C03               	skipc
  4697  08EC  0F79               	incfsz	__div_to_l_@f2+3,w
  4698  08ED  02F5               	subwf	__div_to_l_@f1+3,f
  4699  08EE                     l2972:
  4700  08EE  1420               	bsf	__div_to_l_@quot,0
  4701  08EF                     l2974:
  4702  08EF  3001               	movlw	1
  4703  08F0  00FA               	movwf	??__div_to_l_
  4704  08F1                     u4455:
  4705  08F1  1003               	clrc
  4706  08F2  0DF2               	rlf	__div_to_l_@f1,f
  4707  08F3  0DF3               	rlf	__div_to_l_@f1+1,f
  4708  08F4  0DF4               	rlf	__div_to_l_@f1+2,f
  4709  08F5  0DF5               	rlf	__div_to_l_@f1+3,f
  4710  08F6  0BFA               	decfsz	??__div_to_l_,f
  4711  08F7  28F1               	goto	u4455
  4712  08F8                     l2976:
  4713  08F8  3001               	movlw	1
  4714  08F9  02A4               	subwf	__div_to_l_@cntr,f
  4715  08FA  1D03               	btfss	3,2
  4716  08FB  28FD               	goto	u4461
  4717  08FC  28FE               	goto	u4460
  4718  08FD                     u4461:
  4719  08FD  28C5               	goto	l2966
  4720  08FE                     u4460:
  4721  08FE                     l531:
  4722  08FE  1FA5               	btfss	__div_to_l_@exp1,7
  4723  08FF  2901               	goto	u4471
  4724  0900  2902               	goto	u4470
  4725  0901                     u4471:
  4726  0901  291C               	goto	l2986
  4727  0902                     u4470:
  4728  0902                     l2978:
  4729  0902  0825               	movf	__div_to_l_@exp1,w
  4730  0903  3A80               	xorlw	128
  4731  0904  3E9F               	addlw	159
  4732  0905  1803               	skipnc
  4733  0906  2908               	goto	u4481
  4734  0907  2909               	goto	u4480
  4735  0908                     u4481:
  4736  0908  290A               	goto	l2984
  4737  0909                     u4480:
  4738  0909  288B               	goto	l2948
  4739  090A                     l2984:
  4740  090A  3001               	movlw	1
  4741  090B                     u4495:
  4742  090B  1003               	clrc
  4743  090C  0CA3               	rrf	__div_to_l_@quot+3,f
  4744  090D  0CA2               	rrf	__div_to_l_@quot+2,f
  4745  090E  0CA1               	rrf	__div_to_l_@quot+1,f
  4746  090F  0CA0               	rrf	__div_to_l_@quot,f
  4747  0910  3EFF               	addlw	-1
  4748  0911  1D03               	skipz
  4749  0912  290B               	goto	u4495
  4750  0913  3001               	movlw	1
  4751  0914  00FA               	movwf	??__div_to_l_
  4752  0915  087A               	movf	??__div_to_l_,w
  4753  0916  07A5               	addwf	__div_to_l_@exp1,f
  4754  0917  1D03               	btfss	3,2
  4755  0918  291A               	goto	u4501
  4756  0919  291B               	goto	u4500
  4757  091A                     u4501:
  4758  091A  290A               	goto	l2984
  4759  091B                     u4500:
  4760  091B  2933               	goto	l2994
  4761  091C                     l2986:
  4762  091C  3020               	movlw	32
  4763  091D  0225               	subwf	__div_to_l_@exp1,w
  4764  091E  1C03               	skipc
  4765  091F  2921               	goto	u4511
  4766  0920  2922               	goto	u4510
  4767  0921                     u4511:
  4768  0921  292E               	goto	l538
  4769  0922                     u4510:
  4770  0922  288B               	goto	l2948
  4771  0923                     l2992:
  4772  0923  3001               	movlw	1
  4773  0924  00FA               	movwf	??__div_to_l_
  4774  0925                     u4525:
  4775  0925  1003               	clrc
  4776  0926  0DA0               	rlf	__div_to_l_@quot,f
  4777  0927  0DA1               	rlf	__div_to_l_@quot+1,f
  4778  0928  0DA2               	rlf	__div_to_l_@quot+2,f
  4779  0929  0DA3               	rlf	__div_to_l_@quot+3,f
  4780  092A  0BFA               	decfsz	??__div_to_l_,f
  4781  092B  2925               	goto	u4525
  4782  092C  3001               	movlw	1
  4783  092D  02A5               	subwf	__div_to_l_@exp1,f
  4784  092E                     l538:
  4785  092E  0825               	movf	__div_to_l_@exp1,w
  4786  092F  1D03               	btfss	3,2
  4787  0930  2932               	goto	u4531
  4788  0931  2933               	goto	u4530
  4789  0932                     u4531:
  4790  0932  2923               	goto	l2992
  4791  0933                     u4530:
  4792  0933                     l2994:
  4793  0933  0823               	movf	__div_to_l_@quot+3,w
  4794  0934  00F5               	movwf	?__div_to_l_+3
  4795  0935  0822               	movf	__div_to_l_@quot+2,w
  4796  0936  00F4               	movwf	?__div_to_l_+2
  4797  0937  0821               	movf	__div_to_l_@quot+1,w
  4798  0938  00F3               	movwf	?__div_to_l_+1
  4799  0939  0820               	movf	__div_to_l_@quot,w
  4800  093A  00F2               	movwf	?__div_to_l_
  4801  093B                     l527:
  4802  093B  0008               	return
  4803  093C                     __end_of__div_to_l_:
  4804                           
  4805                           	psect	text11
  4806  195C                     __ptext11:	
  4807 ;; *************** function ___wmul *****************
  4808 ;; Defined at:
  4809 ;;		line 15 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  multiplier      2    2[COMMON] unsigned int 
  4812 ;;  multiplicand    2    4[COMMON] unsigned int 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  product         2    6[COMMON] unsigned int 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  2    2[COMMON] unsigned int 
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4824 ;;      Params:         4       0       0       0       0
  4825 ;;      Locals:         2       0       0       0       0
  4826 ;;      Temps:          0       0       0       0       0
  4827 ;;      Totals:         6       0       0       0       0
  4828 ;;Total ram usage:        6 bytes
  4829 ;; Hardware stack levels used:    1
  4830 ;; Hardware stack levels required when called:    1
  4831 ;; This function calls:
  4832 ;;		Nothing
  4833 ;; This function is called by:
  4834 ;;		_sprintf
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           
  4839                           ;psect for function ___wmul
  4840  195C                     ___wmul:
  4841  195C                     l2998:	
  4842                           ;incstack = 0
  4843                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4844                           
  4845  195C  01F6               	clrf	___wmul@product
  4846  195D  01F7               	clrf	___wmul@product+1
  4847  195E                     l3000:
  4848  195E  1C72               	btfss	___wmul@multiplier,0
  4849  195F  2961               	goto	u4541
  4850  1960  2962               	goto	u4540
  4851  1961                     u4541:
  4852  1961  2968               	goto	l357
  4853  1962                     u4540:
  4854  1962                     l3002:
  4855  1962  0874               	movf	___wmul@multiplicand,w
  4856  1963  07F6               	addwf	___wmul@product,f
  4857  1964  1803               	skipnc
  4858  1965  0AF7               	incf	___wmul@product+1,f
  4859  1966  0875               	movf	___wmul@multiplicand+1,w
  4860  1967  07F7               	addwf	___wmul@product+1,f
  4861  1968                     l357:
  4862  1968  3001               	movlw	1
  4863  1969                     u4555:
  4864  1969  1003               	clrc
  4865  196A  0DF4               	rlf	___wmul@multiplicand,f
  4866  196B  0DF5               	rlf	___wmul@multiplicand+1,f
  4867  196C  3EFF               	addlw	-1
  4868  196D  1D03               	skipz
  4869  196E  2969               	goto	u4555
  4870  196F                     l3004:
  4871  196F  3001               	movlw	1
  4872  1970                     u4565:
  4873  1970  1003               	clrc
  4874  1971  0CF3               	rrf	___wmul@multiplier+1,f
  4875  1972  0CF2               	rrf	___wmul@multiplier,f
  4876  1973  3EFF               	addlw	-1
  4877  1974  1D03               	skipz
  4878  1975  2970               	goto	u4565
  4879  1976                     l3006:
  4880  1976  0872               	movf	___wmul@multiplier,w
  4881  1977  0473               	iorwf	___wmul@multiplier+1,w
  4882  1978  1D03               	btfss	3,2
  4883  1979  297B               	goto	u4571
  4884  197A  297C               	goto	u4570
  4885  197B                     u4571:
  4886  197B  295E               	goto	l3000
  4887  197C                     u4570:
  4888  197C                     l3008:
  4889  197C  0877               	movf	___wmul@product+1,w
  4890  197D  00F3               	movwf	?___wmul+1
  4891  197E  0876               	movf	___wmul@product,w
  4892  197F  00F2               	movwf	?___wmul
  4893  1980                     l359:
  4894  1980  0008               	return
  4895  1981                     __end_of___wmul:
  4896                           
  4897                           	psect	text12
  4898  1B23                     __ptext12:	
  4899 ;; *************** function ___llmod *****************
  4900 ;; Defined at:
  4901 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;  divisor         4    5[BANK0 ] unsigned long 
  4904 ;;  dividend        4    9[BANK0 ] unsigned long 
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;  counter         1   14[BANK0 ] unsigned char 
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  4    5[BANK0 ] unsigned long 
  4909 ;; Registers used:
  4910 ;;		wreg, status,2, status,0
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4916 ;;      Params:         0       8       0       0       0
  4917 ;;      Locals:         0       1       0       0       0
  4918 ;;      Temps:          0       1       0       0       0
  4919 ;;      Totals:         0      10       0       0       0
  4920 ;;Total ram usage:       10 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    1
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_sprintf
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           
  4931                           ;psect for function ___llmod
  4932  1B23                     ___llmod:
  4933  1B23                     l3692:	
  4934                           ;incstack = 0
  4935                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4936                           
  4937  1B23  1283               	bcf	3,5	;RP0=0, select bank0
  4938  1B24  1303               	bcf	3,6	;RP1=0, select bank0
  4939  1B25  0828               	movf	___llmod@divisor+3,w
  4940  1B26  0427               	iorwf	___llmod@divisor+2,w
  4941  1B27  0426               	iorwf	___llmod@divisor+1,w
  4942  1B28  0425               	iorwf	___llmod@divisor,w
  4943  1B29  1903               	skipnz
  4944  1B2A  2B2C               	goto	u5801
  4945  1B2B  2B2D               	goto	u5800
  4946  1B2C                     u5801:
  4947  1B2C  2B70               	goto	l3708
  4948  1B2D                     u5800:
  4949  1B2D                     l3694:
  4950  1B2D  01AE               	clrf	___llmod@counter
  4951  1B2E  0AAE               	incf	___llmod@counter,f
  4952  1B2F  2B3D               	goto	l3698
  4953  1B30                     l3696:
  4954  1B30  3001               	movlw	1
  4955  1B31  00AD               	movwf	??___llmod
  4956  1B32                     u5815:
  4957  1B32  1003               	clrc
  4958  1B33  0DA5               	rlf	___llmod@divisor,f
  4959  1B34  0DA6               	rlf	___llmod@divisor+1,f
  4960  1B35  0DA7               	rlf	___llmod@divisor+2,f
  4961  1B36  0DA8               	rlf	___llmod@divisor+3,f
  4962  1B37  0BAD               	decfsz	??___llmod,f
  4963  1B38  2B32               	goto	u5815
  4964  1B39  3001               	movlw	1
  4965  1B3A  00AD               	movwf	??___llmod
  4966  1B3B  082D               	movf	??___llmod,w
  4967  1B3C  07AE               	addwf	___llmod@counter,f
  4968  1B3D                     l3698:
  4969  1B3D  1FA8               	btfss	___llmod@divisor+3,7
  4970  1B3E  2B40               	goto	u5821
  4971  1B3F  2B41               	goto	u5820
  4972  1B40                     u5821:
  4973  1B40  2B30               	goto	l3696
  4974  1B41                     u5820:
  4975  1B41                     l3700:
  4976  1B41  0828               	movf	___llmod@divisor+3,w
  4977  1B42  022C               	subwf	___llmod@dividend+3,w
  4978  1B43  1D03               	skipz
  4979  1B44  2B4F               	goto	u5835
  4980  1B45  0827               	movf	___llmod@divisor+2,w
  4981  1B46  022B               	subwf	___llmod@dividend+2,w
  4982  1B47  1D03               	skipz
  4983  1B48  2B4F               	goto	u5835
  4984  1B49  0826               	movf	___llmod@divisor+1,w
  4985  1B4A  022A               	subwf	___llmod@dividend+1,w
  4986  1B4B  1D03               	skipz
  4987  1B4C  2B4F               	goto	u5835
  4988  1B4D  0825               	movf	___llmod@divisor,w
  4989  1B4E  0229               	subwf	___llmod@dividend,w
  4990  1B4F                     u5835:
  4991  1B4F  1C03               	skipc
  4992  1B50  2B52               	goto	u5831
  4993  1B51  2B53               	goto	u5830
  4994  1B52                     u5831:
  4995  1B52  2B61               	goto	l3704
  4996  1B53                     u5830:
  4997  1B53                     l3702:
  4998  1B53  0825               	movf	___llmod@divisor,w
  4999  1B54  02A9               	subwf	___llmod@dividend,f
  5000  1B55  0826               	movf	___llmod@divisor+1,w
  5001  1B56  1C03               	skipc
  5002  1B57  0F26               	incfsz	___llmod@divisor+1,w
  5003  1B58  02AA               	subwf	___llmod@dividend+1,f
  5004  1B59  0827               	movf	___llmod@divisor+2,w
  5005  1B5A  1C03               	skipc
  5006  1B5B  0F27               	incfsz	___llmod@divisor+2,w
  5007  1B5C  02AB               	subwf	___llmod@dividend+2,f
  5008  1B5D  0828               	movf	___llmod@divisor+3,w
  5009  1B5E  1C03               	skipc
  5010  1B5F  0F28               	incfsz	___llmod@divisor+3,w
  5011  1B60  02AC               	subwf	___llmod@dividend+3,f
  5012  1B61                     l3704:
  5013  1B61  3001               	movlw	1
  5014  1B62                     u5845:
  5015  1B62  1003               	clrc
  5016  1B63  0CA8               	rrf	___llmod@divisor+3,f
  5017  1B64  0CA7               	rrf	___llmod@divisor+2,f
  5018  1B65  0CA6               	rrf	___llmod@divisor+1,f
  5019  1B66  0CA5               	rrf	___llmod@divisor,f
  5020  1B67  3EFF               	addlw	-1
  5021  1B68  1D03               	skipz
  5022  1B69  2B62               	goto	u5845
  5023  1B6A                     l3706:
  5024  1B6A  3001               	movlw	1
  5025  1B6B  02AE               	subwf	___llmod@counter,f
  5026  1B6C  1D03               	btfss	3,2
  5027  1B6D  2B6F               	goto	u5851
  5028  1B6E  2B70               	goto	u5850
  5029  1B6F                     u5851:
  5030  1B6F  2B41               	goto	l3700
  5031  1B70                     u5850:
  5032  1B70                     l3708:
  5033  1B70  082C               	movf	___llmod@dividend+3,w
  5034  1B71  00A8               	movwf	?___llmod+3
  5035  1B72  082B               	movf	___llmod@dividend+2,w
  5036  1B73  00A7               	movwf	?___llmod+2
  5037  1B74  082A               	movf	___llmod@dividend+1,w
  5038  1B75  00A6               	movwf	?___llmod+1
  5039  1B76  0829               	movf	___llmod@dividend,w
  5040  1B77  00A5               	movwf	?___llmod
  5041  1B78                     l613:
  5042  1B78  0008               	return
  5043  1B79                     __end_of___llmod:
  5044                           
  5045                           	psect	text13
  5046  1BD0                     __ptext13:	
  5047 ;; *************** function ___lldiv *****************
  5048 ;; Defined at:
  5049 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;  divisor         4    2[COMMON] unsigned long 
  5052 ;;  dividend        4    6[COMMON] unsigned long 
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  quotient        4    0[BANK0 ] unsigned long 
  5055 ;;  counter         1    4[BANK0 ] unsigned char 
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  4    2[COMMON] unsigned long 
  5058 ;; Registers used:
  5059 ;;		wreg, status,2, status,0
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5065 ;;      Params:         8       0       0       0       0
  5066 ;;      Locals:         0       5       0       0       0
  5067 ;;      Temps:          1       0       0       0       0
  5068 ;;      Totals:         9       5       0       0       0
  5069 ;;Total ram usage:       14 bytes
  5070 ;; Hardware stack levels used:    1
  5071 ;; Hardware stack levels required when called:    1
  5072 ;; This function calls:
  5073 ;;		Nothing
  5074 ;; This function is called by:
  5075 ;;		_sprintf
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           
  5080                           ;psect for function ___lldiv
  5081  1BD0                     ___lldiv:
  5082  1BD0                     l3012:	
  5083                           ;incstack = 0
  5084                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5085                           
  5086  1BD0  3000               	movlw	0
  5087  1BD1  1283               	bcf	3,5	;RP0=0, select bank0
  5088  1BD2  1303               	bcf	3,6	;RP1=0, select bank0
  5089  1BD3  00A3               	movwf	___lldiv@quotient+3
  5090  1BD4  3000               	movlw	0
  5091  1BD5  00A2               	movwf	___lldiv@quotient+2
  5092  1BD6  3000               	movlw	0
  5093  1BD7  00A1               	movwf	___lldiv@quotient+1
  5094  1BD8  3000               	movlw	0
  5095  1BD9  00A0               	movwf	___lldiv@quotient
  5096  1BDA  0875               	movf	___lldiv@divisor+3,w
  5097  1BDB  0474               	iorwf	___lldiv@divisor+2,w
  5098  1BDC  0473               	iorwf	___lldiv@divisor+1,w
  5099  1BDD  0472               	iorwf	___lldiv@divisor,w
  5100  1BDE  1903               	skipnz
  5101  1BDF  2BE1               	goto	u4581
  5102  1BE0  2BE2               	goto	u4580
  5103  1BE1                     u4581:
  5104  1BE1  2C2F               	goto	l3032
  5105  1BE2                     u4580:
  5106  1BE2                     l3014:
  5107  1BE2  01A4               	clrf	___lldiv@counter
  5108  1BE3  0AA4               	incf	___lldiv@counter,f
  5109  1BE4  2BF2               	goto	l3018
  5110  1BE5                     l3016:
  5111  1BE5  3001               	movlw	1
  5112  1BE6  00FA               	movwf	??___lldiv
  5113  1BE7                     u4595:
  5114  1BE7  1003               	clrc
  5115  1BE8  0DF2               	rlf	___lldiv@divisor,f
  5116  1BE9  0DF3               	rlf	___lldiv@divisor+1,f
  5117  1BEA  0DF4               	rlf	___lldiv@divisor+2,f
  5118  1BEB  0DF5               	rlf	___lldiv@divisor+3,f
  5119  1BEC  0BFA               	decfsz	??___lldiv,f
  5120  1BED  2BE7               	goto	u4595
  5121  1BEE  3001               	movlw	1
  5122  1BEF  00FA               	movwf	??___lldiv
  5123  1BF0  087A               	movf	??___lldiv,w
  5124  1BF1  07A4               	addwf	___lldiv@counter,f
  5125  1BF2                     l3018:
  5126  1BF2  1FF5               	btfss	___lldiv@divisor+3,7
  5127  1BF3  2BF5               	goto	u4601
  5128  1BF4  2BF6               	goto	u4600
  5129  1BF5                     u4601:
  5130  1BF5  2BE5               	goto	l3016
  5131  1BF6                     u4600:
  5132  1BF6                     l3020:
  5133  1BF6  3001               	movlw	1
  5134  1BF7  00FA               	movwf	??___lldiv
  5135  1BF8                     u4615:
  5136  1BF8  1003               	clrc
  5137  1BF9  0DA0               	rlf	___lldiv@quotient,f
  5138  1BFA  0DA1               	rlf	___lldiv@quotient+1,f
  5139  1BFB  0DA2               	rlf	___lldiv@quotient+2,f
  5140  1BFC  0DA3               	rlf	___lldiv@quotient+3,f
  5141  1BFD  0BFA               	decfsz	??___lldiv,f
  5142  1BFE  2BF8               	goto	u4615
  5143  1BFF                     l3022:
  5144  1BFF  0875               	movf	___lldiv@divisor+3,w
  5145  1C00  0279               	subwf	___lldiv@dividend+3,w
  5146  1C01  1D03               	skipz
  5147  1C02  2C0D               	goto	u4625
  5148  1C03  0874               	movf	___lldiv@divisor+2,w
  5149  1C04  0278               	subwf	___lldiv@dividend+2,w
  5150  1C05  1D03               	skipz
  5151  1C06  2C0D               	goto	u4625
  5152  1C07  0873               	movf	___lldiv@divisor+1,w
  5153  1C08  0277               	subwf	___lldiv@dividend+1,w
  5154  1C09  1D03               	skipz
  5155  1C0A  2C0D               	goto	u4625
  5156  1C0B  0872               	movf	___lldiv@divisor,w
  5157  1C0C  0276               	subwf	___lldiv@dividend,w
  5158  1C0D                     u4625:
  5159  1C0D  1C03               	skipc
  5160  1C0E  2C10               	goto	u4621
  5161  1C0F  2C11               	goto	u4620
  5162  1C10                     u4621:
  5163  1C10  2C20               	goto	l3028
  5164  1C11                     u4620:
  5165  1C11                     l3024:
  5166  1C11  0872               	movf	___lldiv@divisor,w
  5167  1C12  02F6               	subwf	___lldiv@dividend,f
  5168  1C13  0873               	movf	___lldiv@divisor+1,w
  5169  1C14  1C03               	skipc
  5170  1C15  0F73               	incfsz	___lldiv@divisor+1,w
  5171  1C16  02F7               	subwf	___lldiv@dividend+1,f
  5172  1C17  0874               	movf	___lldiv@divisor+2,w
  5173  1C18  1C03               	skipc
  5174  1C19  0F74               	incfsz	___lldiv@divisor+2,w
  5175  1C1A  02F8               	subwf	___lldiv@dividend+2,f
  5176  1C1B  0875               	movf	___lldiv@divisor+3,w
  5177  1C1C  1C03               	skipc
  5178  1C1D  0F75               	incfsz	___lldiv@divisor+3,w
  5179  1C1E  02F9               	subwf	___lldiv@dividend+3,f
  5180  1C1F                     l3026:
  5181  1C1F  1420               	bsf	___lldiv@quotient,0
  5182  1C20                     l3028:
  5183  1C20  3001               	movlw	1
  5184  1C21                     u4635:
  5185  1C21  1003               	clrc
  5186  1C22  0CF5               	rrf	___lldiv@divisor+3,f
  5187  1C23  0CF4               	rrf	___lldiv@divisor+2,f
  5188  1C24  0CF3               	rrf	___lldiv@divisor+1,f
  5189  1C25  0CF2               	rrf	___lldiv@divisor,f
  5190  1C26  3EFF               	addlw	-1
  5191  1C27  1D03               	skipz
  5192  1C28  2C21               	goto	u4635
  5193  1C29                     l3030:
  5194  1C29  3001               	movlw	1
  5195  1C2A  02A4               	subwf	___lldiv@counter,f
  5196  1C2B  1D03               	btfss	3,2
  5197  1C2C  2C2E               	goto	u4641
  5198  1C2D  2C2F               	goto	u4640
  5199  1C2E                     u4641:
  5200  1C2E  2BF6               	goto	l3020
  5201  1C2F                     u4640:
  5202  1C2F                     l3032:
  5203  1C2F  0823               	movf	___lldiv@quotient+3,w
  5204  1C30  00F5               	movwf	?___lldiv+3
  5205  1C31  0822               	movf	___lldiv@quotient+2,w
  5206  1C32  00F4               	movwf	?___lldiv+2
  5207  1C33  0821               	movf	___lldiv@quotient+1,w
  5208  1C34  00F3               	movwf	?___lldiv+1
  5209  1C35  0820               	movf	___lldiv@quotient,w
  5210  1C36  00F2               	movwf	?___lldiv
  5211  1C37                     l393:
  5212  1C37  0008               	return
  5213  1C38                     __end_of___lldiv:
  5214                           
  5215                           	psect	text14
  5216  0802                     __ptext14:	
  5217 ;; *************** function ___fltol *****************
  5218 ;; Defined at:
  5219 ;;		line 43 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;  f1              4   53[BANK0 ] unsigned long 
  5222 ;; Auto vars:     Size  Location     Type
  5223 ;;  exp1            1   63[BANK0 ] unsigned char 
  5224 ;;  sign1           1   62[BANK0 ] unsigned char 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  4   53[BANK0 ] long 
  5227 ;; Registers used:
  5228 ;;		wreg, status,2, status,0
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5234 ;;      Params:         0       4       0       0       0
  5235 ;;      Locals:         0       2       0       0       0
  5236 ;;      Temps:          0       5       0       0       0
  5237 ;;      Totals:         0      11       0       0       0
  5238 ;;Total ram usage:       11 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:    1
  5241 ;; This function calls:
  5242 ;;		Nothing
  5243 ;; This function is called by:
  5244 ;;		_sprintf
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           
  5249                           ;psect for function ___fltol
  5250  0802                     ___fltol:
  5251  0802                     l3076:	
  5252                           ;incstack = 0
  5253                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5254                           
  5255  0802  1003               	clrc
  5256  0803  1283               	bcf	3,5	;RP0=0, select bank0
  5257  0804  1303               	bcf	3,6	;RP1=0, select bank0
  5258  0805  0D57               	rlf	___fltol@f1+2,w
  5259  0806  0D58               	rlf	___fltol@f1+3,w
  5260  0807  00D9               	movwf	??___fltol
  5261  0808  0859               	movf	??___fltol,w
  5262  0809  00DF               	movwf	___fltol@exp1
  5263  080A  085F               	movf	___fltol@exp1,w
  5264  080B  1D03               	btfss	3,2
  5265  080C  280E               	goto	u4761
  5266  080D  280F               	goto	u4760
  5267  080E                     u4761:
  5268  080E  2818               	goto	l3082
  5269  080F                     u4760:
  5270  080F                     l3078:
  5271  080F  3000               	movlw	0
  5272  0810  00D8               	movwf	?___fltol+3
  5273  0811  3000               	movlw	0
  5274  0812  00D7               	movwf	?___fltol+2
  5275  0813  3000               	movlw	0
  5276  0814  00D6               	movwf	?___fltol+1
  5277  0815  3000               	movlw	0
  5278  0816  00D5               	movwf	?___fltol
  5279  0817  287D               	goto	l560
  5280  0818                     l3082:
  5281  0818  0855               	movf	___fltol@f1,w
  5282  0819  00D9               	movwf	??___fltol
  5283  081A  0856               	movf	___fltol@f1+1,w
  5284  081B  00DA               	movwf	??___fltol+1
  5285  081C  0857               	movf	___fltol@f1+2,w
  5286  081D  00DB               	movwf	??___fltol+2
  5287  081E  0858               	movf	___fltol@f1+3,w
  5288  081F  00DC               	movwf	??___fltol+3
  5289  0820  301F               	movlw	31
  5290  0821                     u4775:
  5291  0821  1003               	clrc
  5292  0822  0CDC               	rrf	??___fltol+3,f
  5293  0823  0CDB               	rrf	??___fltol+2,f
  5294  0824  0CDA               	rrf	??___fltol+1,f
  5295  0825  0CD9               	rrf	??___fltol,f
  5296  0826                     u4770:
  5297  0826  3EFF               	addlw	-1
  5298  0827  1D03               	skipz
  5299  0828  2821               	goto	u4775
  5300  0829  0859               	movf	??___fltol,w
  5301  082A  00DD               	movwf	??___fltol+4
  5302  082B  085D               	movf	??___fltol+4,w
  5303  082C  00DE               	movwf	___fltol@sign1
  5304  082D                     l3084:
  5305  082D  17D7               	bsf	___fltol@f1+2,7
  5306  082E                     l3086:
  5307  082E  30FF               	movlw	255
  5308  082F  05D5               	andwf	___fltol@f1,f
  5309  0830  30FF               	movlw	255
  5310  0831  05D6               	andwf	___fltol@f1+1,f
  5311  0832  30FF               	movlw	255
  5312  0833  05D7               	andwf	___fltol@f1+2,f
  5313  0834  3000               	movlw	0
  5314  0835  05D8               	andwf	___fltol@f1+3,f
  5315  0836                     l3088:
  5316  0836  3096               	movlw	150
  5317  0837  02DF               	subwf	___fltol@exp1,f
  5318  0838                     l3090:
  5319  0838  1FDF               	btfss	___fltol@exp1,7
  5320  0839  283B               	goto	u4781
  5321  083A  283C               	goto	u4780
  5322  083B                     u4781:
  5323  083B  2856               	goto	l3100
  5324  083C                     u4780:
  5325  083C                     l3092:
  5326  083C  085F               	movf	___fltol@exp1,w
  5327  083D  3A80               	xorlw	128
  5328  083E  3E97               	addlw	151
  5329  083F  1803               	skipnc
  5330  0840  2842               	goto	u4791
  5331  0841  2843               	goto	u4790
  5332  0842                     u4791:
  5333  0842  2844               	goto	l3098
  5334  0843                     u4790:
  5335  0843  280F               	goto	l3078
  5336  0844                     l3098:
  5337  0844  3001               	movlw	1
  5338  0845                     u4805:
  5339  0845  1003               	clrc
  5340  0846  0CD8               	rrf	___fltol@f1+3,f
  5341  0847  0CD7               	rrf	___fltol@f1+2,f
  5342  0848  0CD6               	rrf	___fltol@f1+1,f
  5343  0849  0CD5               	rrf	___fltol@f1,f
  5344  084A  3EFF               	addlw	-1
  5345  084B  1D03               	skipz
  5346  084C  2845               	goto	u4805
  5347  084D  3001               	movlw	1
  5348  084E  00D9               	movwf	??___fltol
  5349  084F  0859               	movf	??___fltol,w
  5350  0850  07DF               	addwf	___fltol@exp1,f
  5351  0851  1D03               	btfss	3,2
  5352  0852  2854               	goto	u4811
  5353  0853  2855               	goto	u4810
  5354  0854                     u4811:
  5355  0854  2844               	goto	l3098
  5356  0855                     u4810:
  5357  0855  286D               	goto	l3108
  5358  0856                     l3100:
  5359  0856  3020               	movlw	32
  5360  0857  025F               	subwf	___fltol@exp1,w
  5361  0858  1C03               	skipc
  5362  0859  285B               	goto	u4821
  5363  085A  285C               	goto	u4820
  5364  085B                     u4821:
  5365  085B  2868               	goto	l567
  5366  085C                     u4820:
  5367  085C  280F               	goto	l3078
  5368  085D                     l3106:
  5369  085D  3001               	movlw	1
  5370  085E  00D9               	movwf	??___fltol
  5371  085F                     u4835:
  5372  085F  1003               	clrc
  5373  0860  0DD5               	rlf	___fltol@f1,f
  5374  0861  0DD6               	rlf	___fltol@f1+1,f
  5375  0862  0DD7               	rlf	___fltol@f1+2,f
  5376  0863  0DD8               	rlf	___fltol@f1+3,f
  5377  0864  0BD9               	decfsz	??___fltol,f
  5378  0865  285F               	goto	u4835
  5379  0866  3001               	movlw	1
  5380  0867  02DF               	subwf	___fltol@exp1,f
  5381  0868                     l567:
  5382  0868  085F               	movf	___fltol@exp1,w
  5383  0869  1D03               	btfss	3,2
  5384  086A  286C               	goto	u4841
  5385  086B  286D               	goto	u4840
  5386  086C                     u4841:
  5387  086C  285D               	goto	l3106
  5388  086D                     u4840:
  5389  086D                     l3108:
  5390  086D  085E               	movf	___fltol@sign1,w
  5391  086E  1903               	btfsc	3,2
  5392  086F  2871               	goto	u4851
  5393  0870  2872               	goto	u4850
  5394  0871                     u4851:
  5395  0871  287D               	goto	l570
  5396  0872                     u4850:
  5397  0872                     l3110:
  5398  0872  09D5               	comf	___fltol@f1,f
  5399  0873  09D6               	comf	___fltol@f1+1,f
  5400  0874  09D7               	comf	___fltol@f1+2,f
  5401  0875  09D8               	comf	___fltol@f1+3,f
  5402  0876  0AD5               	incf	___fltol@f1,f
  5403  0877  1903               	skipnz
  5404  0878  0AD6               	incf	___fltol@f1+1,f
  5405  0879  1903               	skipnz
  5406  087A  0AD7               	incf	___fltol@f1+2,f
  5407  087B  1903               	skipnz
  5408  087C  0AD8               	incf	___fltol@f1+3,f
  5409  087D                     l570:
  5410  087D                     l560:
  5411  087D  0008               	return
  5412  087E                     __end_of___fltol:
  5413                           
  5414                           	psect	text15
  5415  1AD3                     __ptext15:	
  5416 ;; *************** function ___flsub *****************
  5417 ;; Defined at:
  5418 ;;		line 242 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;  a               4    0[BANK1 ] long 
  5421 ;;  b               4    4[BANK1 ] long 
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;		None
  5424 ;; Return value:  Size  Location     Type
  5425 ;;                  4    0[BANK1 ] long 
  5426 ;; Registers used:
  5427 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5428 ;; Tracked objects:
  5429 ;;		On entry : 0/0
  5430 ;;		On exit  : 0/0
  5431 ;;		Unchanged: 0/0
  5432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5433 ;;      Params:         0       0       8       0       0
  5434 ;;      Locals:         0       0       0       0       0
  5435 ;;      Temps:          0       0       0       0       0
  5436 ;;      Totals:         0       0       8       0       0
  5437 ;;Total ram usage:        8 bytes
  5438 ;; Hardware stack levels used:    1
  5439 ;; Hardware stack levels required when called:    2
  5440 ;; This function calls:
  5441 ;;		___fladd
  5442 ;; This function is called by:
  5443 ;;		_sprintf
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           
  5448                           ;psect for function ___flsub
  5449  1AD3                     ___flsub:
  5450  1AD3                     l3132:	
  5451                           ;incstack = 0
  5452                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5453                           
  5454  1AD3  3080               	movlw	128
  5455  1AD4  1683               	bsf	3,5	;RP0=1, select bank1
  5456  1AD5  1303               	bcf	3,6	;RP1=0, select bank1
  5457  1AD6  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5458  1AD7                     l3134:
  5459  1AD7  0827               	movf	(___flsub@b+3)^(0+128),w
  5460  1AD8  1283               	bcf	3,5	;RP0=0, select bank0
  5461  1AD9  1303               	bcf	3,6	;RP1=0, select bank0
  5462  1ADA  00D9               	movwf	___fladd@b+3
  5463  1ADB  1683               	bsf	3,5	;RP0=1, select bank1
  5464  1ADC  1303               	bcf	3,6	;RP1=0, select bank1
  5465  1ADD  0826               	movf	(___flsub@b+2)^(0+128),w
  5466  1ADE  1283               	bcf	3,5	;RP0=0, select bank0
  5467  1ADF  1303               	bcf	3,6	;RP1=0, select bank0
  5468  1AE0  00D8               	movwf	___fladd@b+2
  5469  1AE1  1683               	bsf	3,5	;RP0=1, select bank1
  5470  1AE2  1303               	bcf	3,6	;RP1=0, select bank1
  5471  1AE3  0825               	movf	(___flsub@b+1)^(0+128),w
  5472  1AE4  1283               	bcf	3,5	;RP0=0, select bank0
  5473  1AE5  1303               	bcf	3,6	;RP1=0, select bank0
  5474  1AE6  00D7               	movwf	___fladd@b+1
  5475  1AE7  1683               	bsf	3,5	;RP0=1, select bank1
  5476  1AE8  1303               	bcf	3,6	;RP1=0, select bank1
  5477  1AE9  0824               	movf	___flsub@b^(0+128),w
  5478  1AEA  1283               	bcf	3,5	;RP0=0, select bank0
  5479  1AEB  1303               	bcf	3,6	;RP1=0, select bank0
  5480  1AEC  00D6               	movwf	___fladd@b
  5481  1AED  1683               	bsf	3,5	;RP0=1, select bank1
  5482  1AEE  1303               	bcf	3,6	;RP1=0, select bank1
  5483  1AEF  0823               	movf	(___flsub@a+3)^(0+128),w
  5484  1AF0  1283               	bcf	3,5	;RP0=0, select bank0
  5485  1AF1  1303               	bcf	3,6	;RP1=0, select bank0
  5486  1AF2  00DD               	movwf	___fladd@a+3
  5487  1AF3  1683               	bsf	3,5	;RP0=1, select bank1
  5488  1AF4  1303               	bcf	3,6	;RP1=0, select bank1
  5489  1AF5  0822               	movf	(___flsub@a+2)^(0+128),w
  5490  1AF6  1283               	bcf	3,5	;RP0=0, select bank0
  5491  1AF7  1303               	bcf	3,6	;RP1=0, select bank0
  5492  1AF8  00DC               	movwf	___fladd@a+2
  5493  1AF9  1683               	bsf	3,5	;RP0=1, select bank1
  5494  1AFA  1303               	bcf	3,6	;RP1=0, select bank1
  5495  1AFB  0821               	movf	(___flsub@a+1)^(0+128),w
  5496  1AFC  1283               	bcf	3,5	;RP0=0, select bank0
  5497  1AFD  1303               	bcf	3,6	;RP1=0, select bank0
  5498  1AFE  00DB               	movwf	___fladd@a+1
  5499  1AFF  1683               	bsf	3,5	;RP0=1, select bank1
  5500  1B00  1303               	bcf	3,6	;RP1=0, select bank1
  5501  1B01  0820               	movf	___flsub@a^(0+128),w
  5502  1B02  1283               	bcf	3,5	;RP0=0, select bank0
  5503  1B03  1303               	bcf	3,6	;RP1=0, select bank0
  5504  1B04  00DA               	movwf	___fladd@a
  5505  1B05  160A  118A  226C  160A  158A  	fcall	___fladd
  5506  1B0A  1283               	bcf	3,5	;RP0=0, select bank0
  5507  1B0B  1303               	bcf	3,6	;RP1=0, select bank0
  5508  1B0C  0859               	movf	?___fladd+3,w
  5509  1B0D  1683               	bsf	3,5	;RP0=1, select bank1
  5510  1B0E  1303               	bcf	3,6	;RP1=0, select bank1
  5511  1B0F  00A3               	movwf	(?___flsub+3)^(0+128)
  5512  1B10  1283               	bcf	3,5	;RP0=0, select bank0
  5513  1B11  1303               	bcf	3,6	;RP1=0, select bank0
  5514  1B12  0858               	movf	?___fladd+2,w
  5515  1B13  1683               	bsf	3,5	;RP0=1, select bank1
  5516  1B14  1303               	bcf	3,6	;RP1=0, select bank1
  5517  1B15  00A2               	movwf	(?___flsub+2)^(0+128)
  5518  1B16  1283               	bcf	3,5	;RP0=0, select bank0
  5519  1B17  1303               	bcf	3,6	;RP1=0, select bank0
  5520  1B18  0857               	movf	?___fladd+1,w
  5521  1B19  1683               	bsf	3,5	;RP0=1, select bank1
  5522  1B1A  1303               	bcf	3,6	;RP1=0, select bank1
  5523  1B1B  00A1               	movwf	(?___flsub+1)^(0+128)
  5524  1B1C  1283               	bcf	3,5	;RP0=0, select bank0
  5525  1B1D  1303               	bcf	3,6	;RP1=0, select bank0
  5526  1B1E  0856               	movf	?___fladd,w
  5527  1B1F  1683               	bsf	3,5	;RP0=1, select bank1
  5528  1B20  1303               	bcf	3,6	;RP1=0, select bank1
  5529  1B21  00A0               	movwf	?___flsub^(0+128)
  5530  1B22                     l730:
  5531  1B22  0008               	return
  5532  1B23                     __end_of___flsub:
  5533                           
  5534                           	psect	text16
  5535  126C                     __ptext16:	
  5536 ;; *************** function ___fladd *****************
  5537 ;; Defined at:
  5538 ;;		line 10 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;  b               4   54[BANK0 ] long 
  5541 ;;  a               4   58[BANK0 ] long 
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;  grs             1   73[BANK0 ] unsigned char 
  5544 ;;  bexp            1   72[BANK0 ] unsigned char 
  5545 ;;  aexp            1   71[BANK0 ] unsigned char 
  5546 ;;  signs           1   70[BANK0 ] unsigned char 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  4   54[BANK0 ] unsigned char 
  5549 ;; Registers used:
  5550 ;;		wreg, status,2, status,0, btemp+1
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5556 ;;      Params:         0       8       0       0       0
  5557 ;;      Locals:         0       4       0       0       0
  5558 ;;      Temps:          0       8       0       0       0
  5559 ;;      Totals:         0      20       0       0       0
  5560 ;;Total ram usage:       20 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    1
  5563 ;; This function calls:
  5564 ;;		Nothing
  5565 ;; This function is called by:
  5566 ;;		_sprintf
  5567 ;;		___flsub
  5568 ;; This function uses a non-reentrant model
  5569 ;;
  5570                           
  5571                           
  5572                           ;psect for function ___fladd
  5573  126C                     ___fladd:
  5574  126C                     l2426:	
  5575                           ;incstack = 0
  5576                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5577                           
  5578  126C  1283               	bcf	3,5	;RP0=0, select bank0
  5579  126D  1303               	bcf	3,6	;RP1=0, select bank0
  5580  126E  0859               	movf	___fladd@b+3,w
  5581  126F  3980               	andlw	128
  5582  1270  00DE               	movwf	??___fladd
  5583  1271  085E               	movf	??___fladd,w
  5584  1272  00E6               	movwf	___fladd@signs
  5585  1273                     l2428:
  5586  1273  0859               	movf	___fladd@b+3,w
  5587  1274  00DE               	movwf	??___fladd
  5588  1275  075E               	addwf	??___fladd,w
  5589  1276  00DF               	movwf	??___fladd+1
  5590  1277  085F               	movf	??___fladd+1,w
  5591  1278  00E8               	movwf	___fladd@bexp
  5592  1279                     l2430:
  5593  1279  1FD8               	btfss	___fladd@b+2,7
  5594  127A  2A7C               	goto	u3181
  5595  127B  2A7D               	goto	u3180
  5596  127C                     u3181:
  5597  127C  2A7E               	goto	l2434
  5598  127D                     u3180:
  5599  127D                     l2432:
  5600  127D  1468               	bsf	___fladd@bexp,0
  5601  127E                     l2434:
  5602  127E  0868               	movf	___fladd@bexp,w
  5603  127F  1903               	btfsc	3,2
  5604  1280  2A82               	goto	u3191
  5605  1281  2A83               	goto	u3190
  5606  1282                     u3191:
  5607  1282  2A93               	goto	l2444
  5608  1283                     u3190:
  5609  1283                     l2436:
  5610  1283  0A68               	incf	___fladd@bexp,w
  5611  1284  1D03               	btfss	3,2
  5612  1285  2A87               	goto	u3201
  5613  1286  2A88               	goto	u3200
  5614  1287                     u3201:
  5615  1287  2A90               	goto	l2440
  5616  1288                     u3200:
  5617  1288                     l2438:
  5618  1288  3000               	movlw	0
  5619  1289  00D9               	movwf	___fladd@b+3
  5620  128A  3000               	movlw	0
  5621  128B  00D8               	movwf	___fladd@b+2
  5622  128C  3000               	movlw	0
  5623  128D  00D7               	movwf	___fladd@b+1
  5624  128E  3000               	movlw	0
  5625  128F  00D6               	movwf	___fladd@b
  5626  1290                     l2440:
  5627  1290  17D8               	bsf	___fladd@b+2,7
  5628  1291                     l2442:
  5629  1291  01D9               	clrf	___fladd@b+3
  5630  1292  2A9B               	goto	l2446
  5631  1293                     l2444:
  5632  1293  3000               	movlw	0
  5633  1294  00D9               	movwf	___fladd@b+3
  5634  1295  3000               	movlw	0
  5635  1296  00D8               	movwf	___fladd@b+2
  5636  1297  3000               	movlw	0
  5637  1298  00D7               	movwf	___fladd@b+1
  5638  1299  3000               	movlw	0
  5639  129A  00D6               	movwf	___fladd@b
  5640  129B                     l2446:
  5641  129B  085D               	movf	___fladd@a+3,w
  5642  129C  3980               	andlw	128
  5643  129D  00DE               	movwf	??___fladd
  5644  129E  085E               	movf	??___fladd,w
  5645  129F  00E7               	movwf	___fladd@aexp
  5646  12A0                     l2448:
  5647  12A0  0867               	movf	___fladd@aexp,w
  5648  12A1  0666               	xorwf	___fladd@signs,w
  5649  12A2  1903               	skipnz
  5650  12A3  2AA5               	goto	u3211
  5651  12A4  2AA6               	goto	u3210
  5652  12A5                     u3211:
  5653  12A5  2AA7               	goto	l2452
  5654  12A6                     u3210:
  5655  12A6                     l2450:
  5656  12A6  1766               	bsf	___fladd@signs,6
  5657  12A7                     l2452:
  5658  12A7  085D               	movf	___fladd@a+3,w
  5659  12A8  00DE               	movwf	??___fladd
  5660  12A9  075E               	addwf	??___fladd,w
  5661  12AA  00DF               	movwf	??___fladd+1
  5662  12AB  085F               	movf	??___fladd+1,w
  5663  12AC  00E7               	movwf	___fladd@aexp
  5664  12AD                     l2454:
  5665  12AD  1FDC               	btfss	___fladd@a+2,7
  5666  12AE  2AB0               	goto	u3221
  5667  12AF  2AB1               	goto	u3220
  5668  12B0                     u3221:
  5669  12B0  2AB2               	goto	l2458
  5670  12B1                     u3220:
  5671  12B1                     l2456:
  5672  12B1  1467               	bsf	___fladd@aexp,0
  5673  12B2                     l2458:
  5674  12B2  0867               	movf	___fladd@aexp,w
  5675  12B3  1903               	btfsc	3,2
  5676  12B4  2AB6               	goto	u3231
  5677  12B5  2AB7               	goto	u3230
  5678  12B6                     u3231:
  5679  12B6  2AC7               	goto	l2468
  5680  12B7                     u3230:
  5681  12B7                     l2460:
  5682  12B7  0A67               	incf	___fladd@aexp,w
  5683  12B8  1D03               	btfss	3,2
  5684  12B9  2ABB               	goto	u3241
  5685  12BA  2ABC               	goto	u3240
  5686  12BB                     u3241:
  5687  12BB  2AC4               	goto	l2464
  5688  12BC                     u3240:
  5689  12BC                     l2462:
  5690  12BC  3000               	movlw	0
  5691  12BD  00DD               	movwf	___fladd@a+3
  5692  12BE  3000               	movlw	0
  5693  12BF  00DC               	movwf	___fladd@a+2
  5694  12C0  3000               	movlw	0
  5695  12C1  00DB               	movwf	___fladd@a+1
  5696  12C2  3000               	movlw	0
  5697  12C3  00DA               	movwf	___fladd@a
  5698  12C4                     l2464:
  5699  12C4  17DC               	bsf	___fladd@a+2,7
  5700  12C5                     l2466:
  5701  12C5  01DD               	clrf	___fladd@a+3
  5702  12C6  2ACF               	goto	l684
  5703  12C7                     l2468:
  5704  12C7  3000               	movlw	0
  5705  12C8  00DD               	movwf	___fladd@a+3
  5706  12C9  3000               	movlw	0
  5707  12CA  00DC               	movwf	___fladd@a+2
  5708  12CB  3000               	movlw	0
  5709  12CC  00DB               	movwf	___fladd@a+1
  5710  12CD  3000               	movlw	0
  5711  12CE  00DA               	movwf	___fladd@a
  5712  12CF                     l684:
  5713  12CF  0868               	movf	___fladd@bexp,w
  5714  12D0  0267               	subwf	___fladd@aexp,w
  5715  12D1  1803               	skipnc
  5716  12D2  2AD4               	goto	u3251
  5717  12D3  2AD5               	goto	u3250
  5718  12D4                     u3251:
  5719  12D4  2B19               	goto	l2504
  5720  12D5                     u3250:
  5721  12D5                     l2470:
  5722  12D5  1F66               	btfss	___fladd@signs,6
  5723  12D6  2AD8               	goto	u3261
  5724  12D7  2AD9               	goto	u3260
  5725  12D8                     u3261:
  5726  12D8  2ADD               	goto	l2474
  5727  12D9                     u3260:
  5728  12D9                     l2472:
  5729  12D9  3080               	movlw	128
  5730  12DA  00DE               	movwf	??___fladd
  5731  12DB  085E               	movf	??___fladd,w
  5732  12DC  06E6               	xorwf	___fladd@signs,f
  5733  12DD                     l2474:
  5734  12DD  0868               	movf	___fladd@bexp,w
  5735  12DE  00DE               	movwf	??___fladd
  5736  12DF  085E               	movf	??___fladd,w
  5737  12E0  00E9               	movwf	___fladd@grs
  5738  12E1                     l2476:
  5739  12E1  0867               	movf	___fladd@aexp,w
  5740  12E2  00DE               	movwf	??___fladd
  5741  12E3  085E               	movf	??___fladd,w
  5742  12E4  00E8               	movwf	___fladd@bexp
  5743  12E5                     l2478:
  5744  12E5  0869               	movf	___fladd@grs,w
  5745  12E6  00DE               	movwf	??___fladd
  5746  12E7  085E               	movf	??___fladd,w
  5747  12E8  00E7               	movwf	___fladd@aexp
  5748  12E9                     l2480:
  5749  12E9  0856               	movf	___fladd@b,w
  5750  12EA  00DE               	movwf	??___fladd
  5751  12EB  085E               	movf	??___fladd,w
  5752  12EC  00E9               	movwf	___fladd@grs
  5753  12ED                     l2482:
  5754  12ED  085A               	movf	___fladd@a,w
  5755  12EE  00DE               	movwf	??___fladd
  5756  12EF  085E               	movf	??___fladd,w
  5757  12F0  00D6               	movwf	___fladd@b
  5758  12F1                     l2484:
  5759  12F1  0869               	movf	___fladd@grs,w
  5760  12F2  00DE               	movwf	??___fladd
  5761  12F3  085E               	movf	??___fladd,w
  5762  12F4  00DA               	movwf	___fladd@a
  5763  12F5                     l2486:
  5764  12F5  0857               	movf	___fladd@b+1,w
  5765  12F6  00DE               	movwf	??___fladd
  5766  12F7  085E               	movf	??___fladd,w
  5767  12F8  00E9               	movwf	___fladd@grs
  5768  12F9                     l2488:
  5769  12F9  085B               	movf	___fladd@a+1,w
  5770  12FA  00DE               	movwf	??___fladd
  5771  12FB  085E               	movf	??___fladd,w
  5772  12FC  00D7               	movwf	___fladd@b+1
  5773  12FD                     l2490:
  5774  12FD  0869               	movf	___fladd@grs,w
  5775  12FE  00DE               	movwf	??___fladd
  5776  12FF  085E               	movf	??___fladd,w
  5777  1300  00DB               	movwf	___fladd@a+1
  5778  1301                     l2492:
  5779  1301  0858               	movf	___fladd@b+2,w
  5780  1302  00DE               	movwf	??___fladd
  5781  1303  085E               	movf	??___fladd,w
  5782  1304  00E9               	movwf	___fladd@grs
  5783  1305                     l2494:
  5784  1305  085C               	movf	___fladd@a+2,w
  5785  1306  00DE               	movwf	??___fladd
  5786  1307  085E               	movf	??___fladd,w
  5787  1308  00D8               	movwf	___fladd@b+2
  5788  1309                     l2496:
  5789  1309  0869               	movf	___fladd@grs,w
  5790  130A  00DE               	movwf	??___fladd
  5791  130B  085E               	movf	??___fladd,w
  5792  130C  00DC               	movwf	___fladd@a+2
  5793  130D                     l2498:
  5794  130D  0859               	movf	___fladd@b+3,w
  5795  130E  00DE               	movwf	??___fladd
  5796  130F  085E               	movf	??___fladd,w
  5797  1310  00E9               	movwf	___fladd@grs
  5798  1311                     l2500:
  5799  1311  085D               	movf	___fladd@a+3,w
  5800  1312  00DE               	movwf	??___fladd
  5801  1313  085E               	movf	??___fladd,w
  5802  1314  00D9               	movwf	___fladd@b+3
  5803  1315                     l2502:
  5804  1315  0869               	movf	___fladd@grs,w
  5805  1316  00DE               	movwf	??___fladd
  5806  1317  085E               	movf	??___fladd,w
  5807  1318  00DD               	movwf	___fladd@a+3
  5808  1319                     l2504:
  5809  1319  01E9               	clrf	___fladd@grs
  5810  131A                     l2506:
  5811  131A  0867               	movf	___fladd@aexp,w
  5812  131B  00DE               	movwf	??___fladd
  5813  131C  01DF               	clrf	??___fladd+1
  5814  131D  085F               	movf	??___fladd+1,w
  5815  131E  00E1               	movwf	??___fladd+3
  5816  131F  0868               	movf	___fladd@bexp,w
  5817  1320  025E               	subwf	??___fladd,w
  5818  1321  00E0               	movwf	??___fladd+2
  5819  1322  1C03               	skipc
  5820  1323  03E1               	decf	??___fladd+3,f
  5821  1324  0861               	movf	??___fladd+3,w
  5822  1325  3A80               	xorlw	128
  5823  1326  00FF               	movwf	btemp+1
  5824  1327  3080               	movlw	128
  5825  1328  027F               	subwf	btemp+1,w
  5826  1329  1D03               	skipz
  5827  132A  2B2D               	goto	u3275
  5828  132B  301A               	movlw	26
  5829  132C  0260               	subwf	??___fladd+2,w
  5830  132D                     u3275:
  5831  132D  1C03               	skipc
  5832  132E  2B30               	goto	u3271
  5833  132F  2B31               	goto	u3270
  5834  1330                     u3271:
  5835  1330  2B6E               	goto	l2522
  5836  1331                     u3270:
  5837  1331                     l2508:
  5838  1331  1283               	bcf	3,5	;RP0=0, select bank0
  5839  1332  1303               	bcf	3,6	;RP1=0, select bank0
  5840  1333  0859               	movf	___fladd@b+3,w
  5841  1334  0458               	iorwf	___fladd@b+2,w
  5842  1335  0457               	iorwf	___fladd@b+1,w
  5843  1336  0456               	iorwf	___fladd@b,w
  5844  1337  1D03               	skipz
  5845  1338  2B3A               	goto	u3281
  5846  1339  2B3C               	goto	u3280
  5847  133A                     u3281:
  5848  133A  3001               	movlw	1
  5849  133B  2B3D               	goto	u3290
  5850  133C                     u3280:
  5851  133C  3000               	movlw	0
  5852  133D                     u3290:
  5853  133D  00DE               	movwf	??___fladd
  5854  133E  085E               	movf	??___fladd,w
  5855  133F  00E9               	movwf	___fladd@grs
  5856  1340  3000               	movlw	0
  5857  1341  00D9               	movwf	___fladd@b+3
  5858  1342  3000               	movlw	0
  5859  1343  00D8               	movwf	___fladd@b+2
  5860  1344  3000               	movlw	0
  5861  1345  00D7               	movwf	___fladd@b+1
  5862  1346  3000               	movlw	0
  5863  1347  00D6               	movwf	___fladd@b
  5864  1348  0867               	movf	___fladd@aexp,w
  5865  1349  00DE               	movwf	??___fladd
  5866  134A  085E               	movf	??___fladd,w
  5867  134B  00E8               	movwf	___fladd@bexp
  5868  134C  2B76               	goto	l688
  5869  134D                     l690:
  5870  134D  1C69               	btfss	___fladd@grs,0
  5871  134E  2B50               	goto	u3301
  5872  134F  2B51               	goto	u3300
  5873  1350                     u3301:
  5874  1350  2B5A               	goto	l2512
  5875  1351                     u3300:
  5876  1351                     l2510:
  5877  1351  0869               	movf	___fladd@grs,w
  5878  1352  00DE               	movwf	??___fladd
  5879  1353  1003               	clrc
  5880  1354  0C5E               	rrf	??___fladd,w
  5881  1355  3801               	iorlw	1
  5882  1356  00DF               	movwf	??___fladd+1
  5883  1357  085F               	movf	??___fladd+1,w
  5884  1358  00E9               	movwf	___fladd@grs
  5885  1359  2B5C               	goto	l2514
  5886  135A                     l2512:
  5887  135A  1003               	clrc
  5888  135B  0CE9               	rrf	___fladd@grs,f
  5889  135C                     l2514:
  5890  135C  1C56               	btfss	___fladd@b,0
  5891  135D  2B5F               	goto	u3311
  5892  135E  2B60               	goto	u3310
  5893  135F                     u3311:
  5894  135F  2B61               	goto	l2518
  5895  1360                     u3310:
  5896  1360                     l2516:
  5897  1360  17E9               	bsf	___fladd@grs,7
  5898  1361                     l2518:
  5899  1361  3001               	movlw	1
  5900  1362  00DE               	movwf	??___fladd
  5901  1363                     u3325:
  5902  1363  0D59               	rlf	___fladd@b+3,w
  5903  1364  0CD9               	rrf	___fladd@b+3,f
  5904  1365  0CD8               	rrf	___fladd@b+2,f
  5905  1366  0CD7               	rrf	___fladd@b+1,f
  5906  1367  0CD6               	rrf	___fladd@b,f
  5907  1368  0BDE               	decfsz	??___fladd& (0+127),f
  5908  1369  2B63               	goto	u3325
  5909  136A                     l2520:
  5910  136A  3001               	movlw	1
  5911  136B  00DE               	movwf	??___fladd
  5912  136C  085E               	movf	??___fladd,w
  5913  136D  07E8               	addwf	___fladd@bexp,f
  5914  136E                     l2522:
  5915  136E  1283               	bcf	3,5	;RP0=0, select bank0
  5916  136F  1303               	bcf	3,6	;RP1=0, select bank0
  5917  1370  0867               	movf	___fladd@aexp,w
  5918  1371  0268               	subwf	___fladd@bexp,w
  5919  1372  1C03               	skipc
  5920  1373  2B75               	goto	u3331
  5921  1374  2B76               	goto	u3330
  5922  1375                     u3331:
  5923  1375  2B4D               	goto	l690
  5924  1376                     u3330:
  5925  1376                     l688:
  5926  1376  1B66               	btfsc	___fladd@signs,6
  5927  1377  2B79               	goto	u3341
  5928  1378  2B7A               	goto	u3340
  5929  1379                     u3341:
  5930  1379  2BC5               	goto	l2548
  5931  137A                     u3340:
  5932  137A                     l2524:
  5933  137A  0868               	movf	___fladd@bexp,w
  5934  137B  1D03               	btfss	3,2
  5935  137C  2B7E               	goto	u3351
  5936  137D  2B7F               	goto	u3350
  5937  137E                     u3351:
  5938  137E  2B88               	goto	l2530
  5939  137F                     u3350:
  5940  137F                     l2526:
  5941  137F  3000               	movlw	0
  5942  1380  00D9               	movwf	?___fladd+3
  5943  1381  3000               	movlw	0
  5944  1382  00D8               	movwf	?___fladd+2
  5945  1383  3000               	movlw	0
  5946  1384  00D7               	movwf	?___fladd+1
  5947  1385  3000               	movlw	0
  5948  1386  00D6               	movwf	?___fladd
  5949  1387  2CF3               	goto	l697
  5950  1388                     l2530:
  5951  1388  085A               	movf	___fladd@a,w
  5952  1389  07D6               	addwf	___fladd@b,f
  5953  138A  085B               	movf	___fladd@a+1,w
  5954  138B  1103               	clrz
  5955  138C  1803               	skipnc
  5956  138D  3E01               	addlw	1
  5957  138E  1903               	skipnz
  5958  138F  2B91               	goto	u3361
  5959  1390  07D7               	addwf	___fladd@b+1,f
  5960  1391                     u3361:
  5961  1391  085C               	movf	___fladd@a+2,w
  5962  1392  1103               	clrz
  5963  1393  1803               	skipnc
  5964  1394  3E01               	addlw	1
  5965  1395  1903               	skipnz
  5966  1396  2B98               	goto	u3362
  5967  1397  07D8               	addwf	___fladd@b+2,f
  5968  1398                     u3362:
  5969  1398  085D               	movf	___fladd@a+3,w
  5970  1399  1103               	clrz
  5971  139A  1803               	skipnc
  5972  139B  3E01               	addlw	1
  5973  139C  1903               	skipnz
  5974  139D  2B9F               	goto	u3363
  5975  139E  07D9               	addwf	___fladd@b+3,f
  5976  139F                     u3363:
  5977  139F                     l2532:
  5978  139F  1C59               	btfss	___fladd@b+3,0
  5979  13A0  2BA2               	goto	u3371
  5980  13A1  2BA3               	goto	u3370
  5981  13A2                     u3371:
  5982  13A2  2C79               	goto	l2582
  5983  13A3                     u3370:
  5984  13A3                     l2534:
  5985  13A3  1C69               	btfss	___fladd@grs,0
  5986  13A4  2BA6               	goto	u3381
  5987  13A5  2BA7               	goto	u3380
  5988  13A6                     u3381:
  5989  13A6  2BB0               	goto	l2538
  5990  13A7                     u3380:
  5991  13A7                     l2536:
  5992  13A7  0869               	movf	___fladd@grs,w
  5993  13A8  00DE               	movwf	??___fladd
  5994  13A9  1003               	clrc
  5995  13AA  0C5E               	rrf	??___fladd,w
  5996  13AB  3801               	iorlw	1
  5997  13AC  00DF               	movwf	??___fladd+1
  5998  13AD  085F               	movf	??___fladd+1,w
  5999  13AE  00E9               	movwf	___fladd@grs
  6000  13AF  2BB2               	goto	l2540
  6001  13B0                     l2538:
  6002  13B0  1003               	clrc
  6003  13B1  0CE9               	rrf	___fladd@grs,f
  6004  13B2                     l2540:
  6005  13B2  1C56               	btfss	___fladd@b,0
  6006  13B3  2BB5               	goto	u3391
  6007  13B4  2BB6               	goto	u3390
  6008  13B5                     u3391:
  6009  13B5  2BB7               	goto	l2544
  6010  13B6                     u3390:
  6011  13B6                     l2542:
  6012  13B6  17E9               	bsf	___fladd@grs,7
  6013  13B7                     l2544:
  6014  13B7  3001               	movlw	1
  6015  13B8  00DE               	movwf	??___fladd
  6016  13B9                     u3405:
  6017  13B9  0D59               	rlf	___fladd@b+3,w
  6018  13BA  0CD9               	rrf	___fladd@b+3,f
  6019  13BB  0CD8               	rrf	___fladd@b+2,f
  6020  13BC  0CD7               	rrf	___fladd@b+1,f
  6021  13BD  0CD6               	rrf	___fladd@b,f
  6022  13BE  0BDE               	decfsz	??___fladd& (0+127),f
  6023  13BF  2BB9               	goto	u3405
  6024  13C0                     l2546:
  6025  13C0  3001               	movlw	1
  6026  13C1  00DE               	movwf	??___fladd
  6027  13C2  085E               	movf	??___fladd,w
  6028  13C3  07E8               	addwf	___fladd@bexp,f
  6029  13C4  2C79               	goto	l2582
  6030  13C5                     l2548:
  6031  13C5  0859               	movf	___fladd@b+3,w
  6032  13C6  3A80               	xorlw	128
  6033  13C7  00FF               	movwf	btemp+1
  6034  13C8  085D               	movf	___fladd@a+3,w
  6035  13C9  3A80               	xorlw	128
  6036  13CA  027F               	subwf	btemp+1,w
  6037  13CB  1D03               	skipz
  6038  13CC  2BD7               	goto	u3413
  6039  13CD  085C               	movf	___fladd@a+2,w
  6040  13CE  0258               	subwf	___fladd@b+2,w
  6041  13CF  1D03               	skipz
  6042  13D0  2BD7               	goto	u3413
  6043  13D1  085B               	movf	___fladd@a+1,w
  6044  13D2  0257               	subwf	___fladd@b+1,w
  6045  13D3  1D03               	skipz
  6046  13D4  2BD7               	goto	u3413
  6047  13D5  085A               	movf	___fladd@a,w
  6048  13D6  0256               	subwf	___fladd@b,w
  6049  13D7                     u3413:
  6050  13D7  1803               	skipnc
  6051  13D8  2BDA               	goto	u3411
  6052  13D9  2BDB               	goto	u3410
  6053  13DA                     u3411:
  6054  13DA  2C33               	goto	l2558
  6055  13DB                     u3410:
  6056  13DB                     l2550:
  6057  13DB  30FF               	movlw	255
  6058  13DC  00DE               	movwf	??___fladd
  6059  13DD  30FF               	movlw	255
  6060  13DE  00DF               	movwf	??___fladd+1
  6061  13DF  30FF               	movlw	255
  6062  13E0  00E0               	movwf	??___fladd+2
  6063  13E1  30FF               	movlw	255
  6064  13E2  00E1               	movwf	??___fladd+3
  6065  13E3  085A               	movf	___fladd@a,w
  6066  13E4  00E2               	movwf	??___fladd+4
  6067  13E5  085B               	movf	___fladd@a+1,w
  6068  13E6  00E3               	movwf	??___fladd+5
  6069  13E7  085C               	movf	___fladd@a+2,w
  6070  13E8  00E4               	movwf	??___fladd+6
  6071  13E9  085D               	movf	___fladd@a+3,w
  6072  13EA  00E5               	movwf	??___fladd+7
  6073  13EB  0856               	movf	___fladd@b,w
  6074  13EC  02E2               	subwf	??___fladd+4,f
  6075  13ED  0857               	movf	___fladd@b+1,w
  6076  13EE  1C03               	skipc
  6077  13EF  0F57               	incfsz	___fladd@b+1,w
  6078  13F0  2BF2               	goto	u3421
  6079  13F1  2BF3               	goto	u3422
  6080  13F2                     u3421:
  6081  13F2  02E3               	subwf	??___fladd+5,f
  6082  13F3                     u3422:
  6083  13F3  0858               	movf	___fladd@b+2,w
  6084  13F4  1C03               	skipc
  6085  13F5  0F58               	incfsz	___fladd@b+2,w
  6086  13F6  2BF8               	goto	u3423
  6087  13F7  2BF9               	goto	u3424
  6088  13F8                     u3423:
  6089  13F8  02E4               	subwf	??___fladd+6,f
  6090  13F9                     u3424:
  6091  13F9  0859               	movf	___fladd@b+3,w
  6092  13FA  1C03               	skipc
  6093  13FB  0F59               	incfsz	___fladd@b+3,w
  6094  13FC  2BFE               	goto	u3425
  6095  13FD  2BFF               	goto	u3426
  6096  13FE                     u3425:
  6097  13FE  02E5               	subwf	??___fladd+7,f
  6098  13FF                     u3426:
  6099  13FF  0862               	movf	??___fladd+4,w
  6100  1400  07DE               	addwf	??___fladd,f
  6101  1401  0863               	movf	??___fladd+5,w
  6102  1402  1803               	skipnc
  6103  1403  0F63               	incfsz	??___fladd+5,w
  6104  1404  2C06               	goto	u3430
  6105  1405  2C07               	goto	u3431
  6106  1406                     u3430:
  6107  1406  07DF               	addwf	??___fladd+1,f
  6108  1407                     u3431:
  6109  1407  0864               	movf	??___fladd+6,w
  6110  1408  1803               	skipnc
  6111  1409  0F64               	incfsz	??___fladd+6,w
  6112  140A  2C0C               	goto	u3432
  6113  140B  2C0D               	goto	u3433
  6114  140C                     u3432:
  6115  140C  07E0               	addwf	??___fladd+2,f
  6116  140D                     u3433:
  6117  140D  0865               	movf	??___fladd+7,w
  6118  140E  1803               	skipnc
  6119  140F  0A65               	incf	??___fladd+7,w
  6120  1410  07E1               	addwf	??___fladd+3,f
  6121  1411  0861               	movf	??___fladd+3,w
  6122  1412  00D9               	movwf	___fladd@b+3
  6123  1413  0860               	movf	??___fladd+2,w
  6124  1414  00D8               	movwf	___fladd@b+2
  6125  1415  085F               	movf	??___fladd+1,w
  6126  1416  00D7               	movwf	___fladd@b+1
  6127  1417  085E               	movf	??___fladd,w
  6128  1418  00D6               	movwf	___fladd@b
  6129  1419                     l2552:
  6130  1419  3080               	movlw	128
  6131  141A  00DE               	movwf	??___fladd
  6132  141B  085E               	movf	??___fladd,w
  6133  141C  06E6               	xorwf	___fladd@signs,f
  6134  141D  09E9               	comf	___fladd@grs,f
  6135  141E  0AE9               	incf	___fladd@grs,f
  6136  141F                     l2554:
  6137  141F  0869               	movf	___fladd@grs,w
  6138  1420  1D03               	btfss	3,2
  6139  1421  2C23               	goto	u3441
  6140  1422  2C24               	goto	u3440
  6141  1423                     u3441:
  6142  1423  2C41               	goto	l705
  6143  1424                     u3440:
  6144  1424                     l2556:
  6145  1424  3001               	movlw	1
  6146  1425  07D6               	addwf	___fladd@b,f
  6147  1426  3000               	movlw	0
  6148  1427  1803               	skipnc
  6149  1428  3001               	movlw	1
  6150  1429  07D7               	addwf	___fladd@b+1,f
  6151  142A  3000               	movlw	0
  6152  142B  1803               	skipnc
  6153  142C  3001               	movlw	1
  6154  142D  07D8               	addwf	___fladd@b+2,f
  6155  142E  3000               	movlw	0
  6156  142F  1803               	skipnc
  6157  1430  3001               	movlw	1
  6158  1431  07D9               	addwf	___fladd@b+3,f
  6159  1432  2C41               	goto	l705
  6160  1433                     l2558:
  6161  1433  085A               	movf	___fladd@a,w
  6162  1434  02D6               	subwf	___fladd@b,f
  6163  1435  085B               	movf	___fladd@a+1,w
  6164  1436  1C03               	skipc
  6165  1437  0F5B               	incfsz	___fladd@a+1,w
  6166  1438  02D7               	subwf	___fladd@b+1,f
  6167  1439  085C               	movf	___fladd@a+2,w
  6168  143A  1C03               	skipc
  6169  143B  0F5C               	incfsz	___fladd@a+2,w
  6170  143C  02D8               	subwf	___fladd@b+2,f
  6171  143D  085D               	movf	___fladd@a+3,w
  6172  143E  1C03               	skipc
  6173  143F  0F5D               	incfsz	___fladd@a+3,w
  6174  1440  02D9               	subwf	___fladd@b+3,f
  6175  1441                     l705:
  6176  1441  0859               	movf	___fladd@b+3,w
  6177  1442  0458               	iorwf	___fladd@b+2,w
  6178  1443  0457               	iorwf	___fladd@b+1,w
  6179  1444  0456               	iorwf	___fladd@b,w
  6180  1445  1D03               	skipz
  6181  1446  2C48               	goto	u3451
  6182  1447  2C49               	goto	u3450
  6183  1448                     u3451:
  6184  1448  2C75               	goto	l2580
  6185  1449                     u3450:
  6186  1449                     l2560:
  6187  1449  0869               	movf	___fladd@grs,w
  6188  144A  1D03               	btfss	3,2
  6189  144B  2C4D               	goto	u3461
  6190  144C  2C4E               	goto	u3460
  6191  144D                     u3461:
  6192  144D  2C75               	goto	l2580
  6193  144E                     u3460:
  6194  144E                     l2562:
  6195  144E  3000               	movlw	0
  6196  144F  00D9               	movwf	?___fladd+3
  6197  1450  3000               	movlw	0
  6198  1451  00D8               	movwf	?___fladd+2
  6199  1452  3000               	movlw	0
  6200  1453  00D7               	movwf	?___fladd+1
  6201  1454  3000               	movlw	0
  6202  1455  00D6               	movwf	?___fladd
  6203  1456  2CF3               	goto	l697
  6204  1457                     l2566:
  6205  1457  3001               	movlw	1
  6206  1458  00DE               	movwf	??___fladd
  6207  1459                     u3475:
  6208  1459  1003               	clrc
  6209  145A  0DD6               	rlf	___fladd@b,f
  6210  145B  0DD7               	rlf	___fladd@b+1,f
  6211  145C  0DD8               	rlf	___fladd@b+2,f
  6212  145D  0DD9               	rlf	___fladd@b+3,f
  6213  145E  0BDE               	decfsz	??___fladd,f
  6214  145F  2C59               	goto	u3475
  6215  1460                     l2568:
  6216  1460  1FE9               	btfss	___fladd@grs,7
  6217  1461  2C63               	goto	u3481
  6218  1462  2C64               	goto	u3480
  6219  1463                     u3481:
  6220  1463  2C65               	goto	l709
  6221  1464                     u3480:
  6222  1464                     l2570:
  6223  1464  1456               	bsf	___fladd@b,0
  6224  1465                     l709:
  6225  1465  1C69               	btfss	___fladd@grs,0
  6226  1466  2C68               	goto	u3491
  6227  1467  2C69               	goto	u3490
  6228  1468                     u3491:
  6229  1468  2C6C               	goto	l2574
  6230  1469                     u3490:
  6231  1469                     l2572:
  6232  1469  1403               	setc
  6233  146A  0DE9               	rlf	___fladd@grs,f
  6234  146B  2C6E               	goto	l2576
  6235  146C                     l2574:
  6236  146C  1003               	clrc
  6237  146D  0DE9               	rlf	___fladd@grs,f
  6238  146E                     l2576:
  6239  146E  0868               	movf	___fladd@bexp,w
  6240  146F  1903               	btfsc	3,2
  6241  1470  2C72               	goto	u3501
  6242  1471  2C73               	goto	u3500
  6243  1472                     u3501:
  6244  1472  2C75               	goto	l2580
  6245  1473                     u3500:
  6246  1473                     l2578:
  6247  1473  3001               	movlw	1
  6248  1474  02E8               	subwf	___fladd@bexp,f
  6249  1475                     l2580:
  6250  1475  1FD8               	btfss	___fladd@b+2,7
  6251  1476  2C78               	goto	u3511
  6252  1477  2C79               	goto	u3510
  6253  1478                     u3511:
  6254  1478  2C57               	goto	l2566
  6255  1479                     u3510:
  6256  1479                     l2582:
  6257  1479  01E7               	clrf	___fladd@aexp
  6258  147A                     l2584:
  6259  147A  1FE9               	btfss	___fladd@grs,7
  6260  147B  2C7D               	goto	u3521
  6261  147C  2C7E               	goto	u3520
  6262  147D                     u3521:
  6263  147D  2C8C               	goto	l2592
  6264  147E                     u3520:
  6265  147E                     l2586:
  6266  147E  0869               	movf	___fladd@grs,w
  6267  147F  397F               	andlw	127
  6268  1480  1903               	btfsc	3,2
  6269  1481  2C83               	goto	u3531
  6270  1482  2C84               	goto	u3530
  6271  1483                     u3531:
  6272  1483  2C87               	goto	l715
  6273  1484                     u3530:
  6274  1484                     l2588:
  6275  1484  01E7               	clrf	___fladd@aexp
  6276  1485  0AE7               	incf	___fladd@aexp,f
  6277  1486  2C8C               	goto	l2592
  6278  1487                     l715:
  6279  1487  1C56               	btfss	___fladd@b,0
  6280  1488  2C8A               	goto	u3541
  6281  1489  2C8B               	goto	u3540
  6282  148A                     u3541:
  6283  148A  2C8C               	goto	l2592
  6284  148B                     u3540:
  6285  148B  2C84               	goto	l2588
  6286  148C                     l2592:
  6287  148C  0867               	movf	___fladd@aexp,w
  6288  148D  1903               	btfsc	3,2
  6289  148E  2C90               	goto	u3551
  6290  148F  2C91               	goto	u3550
  6291  1490                     u3551:
  6292  1490  2CC5               	goto	l718
  6293  1491                     u3550:
  6294  1491                     l2594:
  6295  1491  3001               	movlw	1
  6296  1492  07D6               	addwf	___fladd@b,f
  6297  1493  3000               	movlw	0
  6298  1494  1803               	skipnc
  6299  1495  3001               	movlw	1
  6300  1496  07D7               	addwf	___fladd@b+1,f
  6301  1497  3000               	movlw	0
  6302  1498  1803               	skipnc
  6303  1499  3001               	movlw	1
  6304  149A  07D8               	addwf	___fladd@b+2,f
  6305  149B  3000               	movlw	0
  6306  149C  1803               	skipnc
  6307  149D  3001               	movlw	1
  6308  149E  07D9               	addwf	___fladd@b+3,f
  6309  149F                     l2596:
  6310  149F  1C59               	btfss	___fladd@b+3,0
  6311  14A0  2CA2               	goto	u3561
  6312  14A1  2CA3               	goto	u3560
  6313  14A2                     u3561:
  6314  14A2  2CC5               	goto	l718
  6315  14A3                     u3560:
  6316  14A3                     l2598:
  6317  14A3  0856               	movf	___fladd@b,w
  6318  14A4  00DE               	movwf	??___fladd
  6319  14A5  0857               	movf	___fladd@b+1,w
  6320  14A6  00DF               	movwf	??___fladd+1
  6321  14A7  0858               	movf	___fladd@b+2,w
  6322  14A8  00E0               	movwf	??___fladd+2
  6323  14A9  0859               	movf	___fladd@b+3,w
  6324  14AA  00E1               	movwf	??___fladd+3
  6325  14AB  3001               	movlw	1
  6326  14AC  00E2               	movwf	??___fladd+4
  6327  14AD                     u3575:
  6328  14AD  0D61               	rlf	??___fladd+3,w
  6329  14AE  0CE1               	rrf	??___fladd+3,f
  6330  14AF  0CE0               	rrf	??___fladd+2,f
  6331  14B0  0CDF               	rrf	??___fladd+1,f
  6332  14B1  0CDE               	rrf	??___fladd,f
  6333  14B2                     u3570:
  6334  14B2  0BE2               	decfsz	??___fladd+4,f
  6335  14B3  2CAD               	goto	u3575
  6336  14B4  0861               	movf	??___fladd+3,w
  6337  14B5  00D9               	movwf	___fladd@b+3
  6338  14B6  0860               	movf	??___fladd+2,w
  6339  14B7  00D8               	movwf	___fladd@b+2
  6340  14B8  085F               	movf	??___fladd+1,w
  6341  14B9  00D7               	movwf	___fladd@b+1
  6342  14BA  085E               	movf	??___fladd,w
  6343  14BB  00D6               	movwf	___fladd@b
  6344  14BC  0A68               	incf	___fladd@bexp,w
  6345  14BD  1903               	btfsc	3,2
  6346  14BE  2CC0               	goto	u3581
  6347  14BF  2CC1               	goto	u3580
  6348  14C0                     u3581:
  6349  14C0  2CC5               	goto	l718
  6350  14C1                     u3580:
  6351  14C1                     l2600:
  6352  14C1  3001               	movlw	1
  6353  14C2  00DE               	movwf	??___fladd
  6354  14C3  085E               	movf	??___fladd,w
  6355  14C4  07E8               	addwf	___fladd@bexp,f
  6356  14C5                     l718:
  6357  14C5  0A68               	incf	___fladd@bexp,w
  6358  14C6  1903               	btfsc	3,2
  6359  14C7  2CC9               	goto	u3591
  6360  14C8  2CCA               	goto	u3590
  6361  14C9                     u3591:
  6362  14C9  2CCF               	goto	l2604
  6363  14CA                     u3590:
  6364  14CA                     l2602:
  6365  14CA  0868               	movf	___fladd@bexp,w
  6366  14CB  1D03               	btfss	3,2
  6367  14CC  2CCE               	goto	u3601
  6368  14CD  2CCF               	goto	u3600
  6369  14CE                     u3601:
  6370  14CE  2CDD               	goto	l2610
  6371  14CF                     u3600:
  6372  14CF                     l2604:
  6373  14CF  3000               	movlw	0
  6374  14D0  00D9               	movwf	___fladd@b+3
  6375  14D1  3000               	movlw	0
  6376  14D2  00D8               	movwf	___fladd@b+2
  6377  14D3  3000               	movlw	0
  6378  14D4  00D7               	movwf	___fladd@b+1
  6379  14D5  3000               	movlw	0
  6380  14D6  00D6               	movwf	___fladd@b
  6381  14D7                     l2606:
  6382  14D7  0868               	movf	___fladd@bexp,w
  6383  14D8  1D03               	btfss	3,2
  6384  14D9  2CDB               	goto	u3611
  6385  14DA  2CDC               	goto	u3610
  6386  14DB                     u3611:
  6387  14DB  2CDD               	goto	l2610
  6388  14DC                     u3610:
  6389  14DC                     l2608:
  6390  14DC  01E6               	clrf	___fladd@signs
  6391  14DD                     l2610:
  6392  14DD  1C68               	btfss	___fladd@bexp,0
  6393  14DE  2CE0               	goto	u3621
  6394  14DF  2CE1               	goto	u3620
  6395  14E0                     u3621:
  6396  14E0  2CE3               	goto	l2614
  6397  14E1                     u3620:
  6398  14E1                     l2612:
  6399  14E1  17D8               	bsf	___fladd@b+2,7
  6400  14E2  2CE7               	goto	l726
  6401  14E3                     l2614:
  6402  14E3  307F               	movlw	127
  6403  14E4  00DE               	movwf	??___fladd
  6404  14E5  085E               	movf	??___fladd,w
  6405  14E6  05D8               	andwf	___fladd@b+2,f
  6406  14E7                     l726:
  6407  14E7  0868               	movf	___fladd@bexp,w
  6408  14E8  00DE               	movwf	??___fladd
  6409  14E9  1003               	clrc
  6410  14EA  0C5E               	rrf	??___fladd,w
  6411  14EB  00DF               	movwf	??___fladd+1
  6412  14EC  085F               	movf	??___fladd+1,w
  6413  14ED  00D9               	movwf	___fladd@b+3
  6414  14EE                     l2616:
  6415  14EE  1FE6               	btfss	___fladd@signs,7
  6416  14EF  2CF1               	goto	u3631
  6417  14F0  2CF2               	goto	u3630
  6418  14F1                     u3631:
  6419  14F1  2CF3               	goto	l727
  6420  14F2                     u3630:
  6421  14F2                     l2618:
  6422  14F2  17D9               	bsf	___fladd@b+3,7
  6423  14F3                     l727:
  6424  14F3                     l697:
  6425  14F3  0008               	return
  6426  14F4                     __end_of___fladd:
  6427                           
  6428                           	psect	text17
  6429  18A2                     __ptext17:	
  6430 ;; *************** function ___flneg *****************
  6431 ;; Defined at:
  6432 ;;		line 15 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;  f1              4    2[COMMON] unsigned char 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;		None
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  4    2[COMMON] unsigned char 
  6439 ;; Registers used:
  6440 ;;		wreg
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6446 ;;      Params:         4       0       0       0       0
  6447 ;;      Locals:         0       0       0       0       0
  6448 ;;      Temps:          0       0       0       0       0
  6449 ;;      Totals:         4       0       0       0       0
  6450 ;;Total ram usage:        4 bytes
  6451 ;; Hardware stack levels used:    1
  6452 ;; Hardware stack levels required when called:    1
  6453 ;; This function calls:
  6454 ;;		Nothing
  6455 ;; This function is called by:
  6456 ;;		_sprintf
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           
  6461                           ;psect for function ___flneg
  6462  18A2                     ___flneg:
  6463  18A2                     l3068:	
  6464                           ;incstack = 0
  6465                           ; Regs used in ___flneg: [wreg]
  6466                           
  6467  18A2  0875               	movf	___flneg@f1+3,w
  6468  18A3  0474               	iorwf	___flneg@f1+2,w
  6469  18A4  0473               	iorwf	___flneg@f1+1,w
  6470  18A5  0472               	iorwf	___flneg@f1,w
  6471  18A6  1903               	skipnz
  6472  18A7  28A9               	goto	u4751
  6473  18A8  28AA               	goto	u4750
  6474  18A9                     u4751:
  6475  18A9  28AC               	goto	l3072
  6476  18AA                     u4750:
  6477  18AA                     l3070:
  6478  18AA  3080               	movlw	128
  6479  18AB  06F5               	xorwf	___flneg@f1+3,f
  6480  18AC                     l3072:
  6481  18AC                     l556:
  6482  18AC  0008               	return
  6483  18AD                     __end_of___flneg:
  6484                           
  6485                           	psect	text18
  6486  1D3D                     __ptext18:	
  6487 ;; *************** function ___flge *****************
  6488 ;; Defined at:
  6489 ;;		line 4 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  ff1             4    2[COMMON] unsigned char 
  6492 ;;  ff2             4    6[COMMON] unsigned char 
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;		None
  6495 ;; Return value:  Size  Location     Type
  6496 ;;		None               void
  6497 ;; Registers used:
  6498 ;;		wreg, status,2, status,0
  6499 ;; Tracked objects:
  6500 ;;		On entry : 0/0
  6501 ;;		On exit  : 0/0
  6502 ;;		Unchanged: 0/0
  6503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6504 ;;      Params:         8       0       0       0       0
  6505 ;;      Locals:         0       0       0       0       0
  6506 ;;      Temps:          0       4       0       0       0
  6507 ;;      Totals:         8       4       0       0       0
  6508 ;;Total ram usage:       12 bytes
  6509 ;; Hardware stack levels used:    1
  6510 ;; Hardware stack levels required when called:    1
  6511 ;; This function calls:
  6512 ;;		Nothing
  6513 ;; This function is called by:
  6514 ;;		_sprintf
  6515 ;; This function uses a non-reentrant model
  6516 ;;
  6517                           
  6518                           
  6519                           ;psect for function ___flge
  6520  1D3D                     ___flge:
  6521  1D3D                     l3048:	
  6522                           ;incstack = 0
  6523                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6524                           
  6525  1D3D  3000               	movlw	0
  6526  1D3E  0572               	andwf	___flge@ff1,w
  6527  1D3F  1283               	bcf	3,5	;RP0=0, select bank0
  6528  1D40  1303               	bcf	3,6	;RP1=0, select bank0
  6529  1D41  00A0               	movwf	??___flge
  6530  1D42  3000               	movlw	0
  6531  1D43  0573               	andwf	___flge@ff1+1,w
  6532  1D44  00A1               	movwf	??___flge+1
  6533  1D45  3080               	movlw	128
  6534  1D46  0574               	andwf	___flge@ff1+2,w
  6535  1D47  00A2               	movwf	??___flge+2
  6536  1D48  307F               	movlw	127
  6537  1D49  0575               	andwf	___flge@ff1+3,w
  6538  1D4A  00A3               	movwf	??___flge+3
  6539  1D4B  0823               	movf	??___flge+3,w
  6540  1D4C  0422               	iorwf	??___flge+2,w
  6541  1D4D  0421               	iorwf	??___flge+1,w
  6542  1D4E  0420               	iorwf	??___flge,w
  6543  1D4F  1D03               	skipz
  6544  1D50  2D52               	goto	u4681
  6545  1D51  2D53               	goto	u4680
  6546  1D52                     u4681:
  6547  1D52  2D5B               	goto	l548
  6548  1D53                     u4680:
  6549  1D53                     l3050:
  6550  1D53  3000               	movlw	0
  6551  1D54  00F5               	movwf	___flge@ff1+3
  6552  1D55  3000               	movlw	0
  6553  1D56  00F4               	movwf	___flge@ff1+2
  6554  1D57  3000               	movlw	0
  6555  1D58  00F3               	movwf	___flge@ff1+1
  6556  1D59  3000               	movlw	0
  6557  1D5A  00F2               	movwf	___flge@ff1
  6558  1D5B                     l548:
  6559  1D5B  3000               	movlw	0
  6560  1D5C  0576               	andwf	___flge@ff2,w
  6561  1D5D  00A0               	movwf	??___flge
  6562  1D5E  3000               	movlw	0
  6563  1D5F  0577               	andwf	___flge@ff2+1,w
  6564  1D60  00A1               	movwf	??___flge+1
  6565  1D61  3080               	movlw	128
  6566  1D62  0578               	andwf	___flge@ff2+2,w
  6567  1D63  00A2               	movwf	??___flge+2
  6568  1D64  307F               	movlw	127
  6569  1D65  0579               	andwf	___flge@ff2+3,w
  6570  1D66  00A3               	movwf	??___flge+3
  6571  1D67  0823               	movf	??___flge+3,w
  6572  1D68  0422               	iorwf	??___flge+2,w
  6573  1D69  0421               	iorwf	??___flge+1,w
  6574  1D6A  0420               	iorwf	??___flge,w
  6575  1D6B  1D03               	skipz
  6576  1D6C  2D6E               	goto	u4691
  6577  1D6D  2D6F               	goto	u4690
  6578  1D6E                     u4691:
  6579  1D6E  2D77               	goto	l3054
  6580  1D6F                     u4690:
  6581  1D6F                     l3052:
  6582  1D6F  3000               	movlw	0
  6583  1D70  00F9               	movwf	___flge@ff2+3
  6584  1D71  3000               	movlw	0
  6585  1D72  00F8               	movwf	___flge@ff2+2
  6586  1D73  3000               	movlw	0
  6587  1D74  00F7               	movwf	___flge@ff2+1
  6588  1D75  3000               	movlw	0
  6589  1D76  00F6               	movwf	___flge@ff2
  6590  1D77                     l3054:
  6591  1D77  1FF5               	btfss	___flge@ff1+3,7
  6592  1D78  2D7A               	goto	u4701
  6593  1D79  2D7B               	goto	u4700
  6594  1D7A                     u4701:
  6595  1D7A  2D9F               	goto	l3058
  6596  1D7B                     u4700:
  6597  1D7B                     l3056:
  6598  1D7B  3000               	movlw	0
  6599  1D7C  00A0               	movwf	??___flge
  6600  1D7D  3000               	movlw	0
  6601  1D7E  00A1               	movwf	??___flge+1
  6602  1D7F  3000               	movlw	0
  6603  1D80  00A2               	movwf	??___flge+2
  6604  1D81  3080               	movlw	128
  6605  1D82  00A3               	movwf	??___flge+3
  6606  1D83  0872               	movf	___flge@ff1,w
  6607  1D84  02A0               	subwf	??___flge,f
  6608  1D85  0873               	movf	___flge@ff1+1,w
  6609  1D86  1C03               	skipc
  6610  1D87  0F73               	incfsz	___flge@ff1+1,w
  6611  1D88  2D8A               	goto	u4711
  6612  1D89  2D8B               	goto	u4712
  6613  1D8A                     u4711:
  6614  1D8A  02A1               	subwf	??___flge+1,f
  6615  1D8B                     u4712:
  6616  1D8B  0874               	movf	___flge@ff1+2,w
  6617  1D8C  1C03               	skipc
  6618  1D8D  0F74               	incfsz	___flge@ff1+2,w
  6619  1D8E  2D90               	goto	u4713
  6620  1D8F  2D91               	goto	u4714
  6621  1D90                     u4713:
  6622  1D90  02A2               	subwf	??___flge+2,f
  6623  1D91                     u4714:
  6624  1D91  0875               	movf	___flge@ff1+3,w
  6625  1D92  1C03               	skipc
  6626  1D93  0F75               	incfsz	___flge@ff1+3,w
  6627  1D94  2D96               	goto	u4715
  6628  1D95  2D97               	goto	u4716
  6629  1D96                     u4715:
  6630  1D96  02A3               	subwf	??___flge+3,f
  6631  1D97                     u4716:
  6632  1D97  0823               	movf	??___flge+3,w
  6633  1D98  00F5               	movwf	___flge@ff1+3
  6634  1D99  0822               	movf	??___flge+2,w
  6635  1D9A  00F4               	movwf	___flge@ff1+2
  6636  1D9B  0821               	movf	??___flge+1,w
  6637  1D9C  00F3               	movwf	___flge@ff1+1
  6638  1D9D  0820               	movf	??___flge,w
  6639  1D9E  00F2               	movwf	___flge@ff1
  6640  1D9F                     l3058:
  6641  1D9F  1FF9               	btfss	___flge@ff2+3,7
  6642  1DA0  2DA2               	goto	u4721
  6643  1DA1  2DA3               	goto	u4720
  6644  1DA2                     u4721:
  6645  1DA2  2DC7               	goto	l551
  6646  1DA3                     u4720:
  6647  1DA3                     l3060:
  6648  1DA3  3000               	movlw	0
  6649  1DA4  00A0               	movwf	??___flge
  6650  1DA5  3000               	movlw	0
  6651  1DA6  00A1               	movwf	??___flge+1
  6652  1DA7  3000               	movlw	0
  6653  1DA8  00A2               	movwf	??___flge+2
  6654  1DA9  3080               	movlw	128
  6655  1DAA  00A3               	movwf	??___flge+3
  6656  1DAB  0876               	movf	___flge@ff2,w
  6657  1DAC  02A0               	subwf	??___flge,f
  6658  1DAD  0877               	movf	___flge@ff2+1,w
  6659  1DAE  1C03               	skipc
  6660  1DAF  0F77               	incfsz	___flge@ff2+1,w
  6661  1DB0  2DB2               	goto	u4731
  6662  1DB1  2DB3               	goto	u4732
  6663  1DB2                     u4731:
  6664  1DB2  02A1               	subwf	??___flge+1,f
  6665  1DB3                     u4732:
  6666  1DB3  0878               	movf	___flge@ff2+2,w
  6667  1DB4  1C03               	skipc
  6668  1DB5  0F78               	incfsz	___flge@ff2+2,w
  6669  1DB6  2DB8               	goto	u4733
  6670  1DB7  2DB9               	goto	u4734
  6671  1DB8                     u4733:
  6672  1DB8  02A2               	subwf	??___flge+2,f
  6673  1DB9                     u4734:
  6674  1DB9  0879               	movf	___flge@ff2+3,w
  6675  1DBA  1C03               	skipc
  6676  1DBB  0F79               	incfsz	___flge@ff2+3,w
  6677  1DBC  2DBE               	goto	u4735
  6678  1DBD  2DBF               	goto	u4736
  6679  1DBE                     u4735:
  6680  1DBE  02A3               	subwf	??___flge+3,f
  6681  1DBF                     u4736:
  6682  1DBF  0823               	movf	??___flge+3,w
  6683  1DC0  00F9               	movwf	___flge@ff2+3
  6684  1DC1  0822               	movf	??___flge+2,w
  6685  1DC2  00F8               	movwf	___flge@ff2+2
  6686  1DC3  0821               	movf	??___flge+1,w
  6687  1DC4  00F7               	movwf	___flge@ff2+1
  6688  1DC5  0820               	movf	??___flge,w
  6689  1DC6  00F6               	movwf	___flge@ff2
  6690  1DC7                     l551:
  6691  1DC7  3080               	movlw	128
  6692  1DC8  06F5               	xorwf	___flge@ff1+3,f
  6693  1DC9  3080               	movlw	128
  6694  1DCA  06F9               	xorwf	___flge@ff2+3,f
  6695  1DCB  0879               	movf	___flge@ff2+3,w
  6696  1DCC  0275               	subwf	___flge@ff1+3,w
  6697  1DCD  1D03               	skipz
  6698  1DCE  2DD9               	goto	u4745
  6699  1DCF  0878               	movf	___flge@ff2+2,w
  6700  1DD0  0274               	subwf	___flge@ff1+2,w
  6701  1DD1  1D03               	skipz
  6702  1DD2  2DD9               	goto	u4745
  6703  1DD3  0877               	movf	___flge@ff2+1,w
  6704  1DD4  0273               	subwf	___flge@ff1+1,w
  6705  1DD5  1D03               	skipz
  6706  1DD6  2DD9               	goto	u4745
  6707  1DD7  0876               	movf	___flge@ff2,w
  6708  1DD8  0272               	subwf	___flge@ff1,w
  6709  1DD9                     u4745:
  6710  1DD9  1803               	skipnc
  6711  1DDA  2DDC               	goto	u4741
  6712  1DDB  2DDD               	goto	u4740
  6713  1DDC                     u4741:
  6714  1DDC  2DDF               	goto	l3064
  6715  1DDD                     u4740:
  6716  1DDD                     l3062:
  6717  1DDD  1003               	clrc
  6718  1DDE  2DE0               	goto	l552
  6719  1DDF                     l3064:
  6720  1DDF  1403               	setc
  6721  1DE0                     l552:
  6722  1DE0  0008               	return
  6723  1DE1                     __end_of___flge:
  6724                           
  6725                           	psect	text19
  6726  1A83                     __ptext19:	
  6727 ;; *************** function ___fleq *****************
  6728 ;; Defined at:
  6729 ;;		line 4 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;  ff1             4    2[COMMON] unsigned char 
  6732 ;;  ff2             4    6[COMMON] unsigned char 
  6733 ;; Auto vars:     Size  Location     Type
  6734 ;;		None
  6735 ;; Return value:  Size  Location     Type
  6736 ;;		None               void
  6737 ;; Registers used:
  6738 ;;		wreg, status,2, status,0
  6739 ;; Tracked objects:
  6740 ;;		On entry : 0/0
  6741 ;;		On exit  : 0/0
  6742 ;;		Unchanged: 0/0
  6743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6744 ;;      Params:         8       0       0       0       0
  6745 ;;      Locals:         0       0       0       0       0
  6746 ;;      Temps:          0       4       0       0       0
  6747 ;;      Totals:         8       4       0       0       0
  6748 ;;Total ram usage:       12 bytes
  6749 ;; Hardware stack levels used:    1
  6750 ;; Hardware stack levels required when called:    1
  6751 ;; This function calls:
  6752 ;;		Nothing
  6753 ;; This function is called by:
  6754 ;;		_sprintf
  6755 ;; This function uses a non-reentrant model
  6756 ;;
  6757                           
  6758                           
  6759                           ;psect for function ___fleq
  6760  1A83                     ___fleq:
  6761  1A83                     l3036:	
  6762                           ;incstack = 0
  6763                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  6764                           
  6765  1A83  3000               	movlw	0
  6766  1A84  0572               	andwf	___fleq@ff1,w
  6767  1A85  1283               	bcf	3,5	;RP0=0, select bank0
  6768  1A86  1303               	bcf	3,6	;RP1=0, select bank0
  6769  1A87  00A0               	movwf	??___fleq
  6770  1A88  3000               	movlw	0
  6771  1A89  0573               	andwf	___fleq@ff1+1,w
  6772  1A8A  00A1               	movwf	??___fleq+1
  6773  1A8B  3080               	movlw	128
  6774  1A8C  0574               	andwf	___fleq@ff1+2,w
  6775  1A8D  00A2               	movwf	??___fleq+2
  6776  1A8E  307F               	movlw	127
  6777  1A8F  0575               	andwf	___fleq@ff1+3,w
  6778  1A90  00A3               	movwf	??___fleq+3
  6779  1A91  0823               	movf	??___fleq+3,w
  6780  1A92  0422               	iorwf	??___fleq+2,w
  6781  1A93  0421               	iorwf	??___fleq+1,w
  6782  1A94  0420               	iorwf	??___fleq,w
  6783  1A95  1D03               	skipz
  6784  1A96  2A98               	goto	u4651
  6785  1A97  2A99               	goto	u4650
  6786  1A98                     u4651:
  6787  1A98  2AA1               	goto	l543
  6788  1A99                     u4650:
  6789  1A99                     l3038:
  6790  1A99  3000               	movlw	0
  6791  1A9A  00F5               	movwf	___fleq@ff1+3
  6792  1A9B  3000               	movlw	0
  6793  1A9C  00F4               	movwf	___fleq@ff1+2
  6794  1A9D  3000               	movlw	0
  6795  1A9E  00F3               	movwf	___fleq@ff1+1
  6796  1A9F  3000               	movlw	0
  6797  1AA0  00F2               	movwf	___fleq@ff1
  6798  1AA1                     l543:
  6799  1AA1  3000               	movlw	0
  6800  1AA2  0576               	andwf	___fleq@ff2,w
  6801  1AA3  00A0               	movwf	??___fleq
  6802  1AA4  3000               	movlw	0
  6803  1AA5  0577               	andwf	___fleq@ff2+1,w
  6804  1AA6  00A1               	movwf	??___fleq+1
  6805  1AA7  3080               	movlw	128
  6806  1AA8  0578               	andwf	___fleq@ff2+2,w
  6807  1AA9  00A2               	movwf	??___fleq+2
  6808  1AAA  307F               	movlw	127
  6809  1AAB  0579               	andwf	___fleq@ff2+3,w
  6810  1AAC  00A3               	movwf	??___fleq+3
  6811  1AAD  0823               	movf	??___fleq+3,w
  6812  1AAE  0422               	iorwf	??___fleq+2,w
  6813  1AAF  0421               	iorwf	??___fleq+1,w
  6814  1AB0  0420               	iorwf	??___fleq,w
  6815  1AB1  1D03               	skipz
  6816  1AB2  2AB4               	goto	u4661
  6817  1AB3  2AB5               	goto	u4660
  6818  1AB4                     u4661:
  6819  1AB4  2ABD               	goto	l544
  6820  1AB5                     u4660:
  6821  1AB5                     l3040:
  6822  1AB5  3000               	movlw	0
  6823  1AB6  00F9               	movwf	___fleq@ff2+3
  6824  1AB7  3000               	movlw	0
  6825  1AB8  00F8               	movwf	___fleq@ff2+2
  6826  1AB9  3000               	movlw	0
  6827  1ABA  00F7               	movwf	___fleq@ff2+1
  6828  1ABB  3000               	movlw	0
  6829  1ABC  00F6               	movwf	___fleq@ff2
  6830  1ABD                     l544:
  6831  1ABD  0879               	movf	___fleq@ff2+3,w
  6832  1ABE  0675               	xorwf	___fleq@ff1+3,w
  6833  1ABF  1D03               	skipz
  6834  1AC0  2ACB               	goto	u4675
  6835  1AC1  0878               	movf	___fleq@ff2+2,w
  6836  1AC2  0674               	xorwf	___fleq@ff1+2,w
  6837  1AC3  1D03               	skipz
  6838  1AC4  2ACB               	goto	u4675
  6839  1AC5  0877               	movf	___fleq@ff2+1,w
  6840  1AC6  0673               	xorwf	___fleq@ff1+1,w
  6841  1AC7  1D03               	skipz
  6842  1AC8  2ACB               	goto	u4675
  6843  1AC9  0876               	movf	___fleq@ff2,w
  6844  1ACA  0672               	xorwf	___fleq@ff1,w
  6845  1ACB                     u4675:
  6846  1ACB  1903               	skipnz
  6847  1ACC  2ACE               	goto	u4671
  6848  1ACD  2ACF               	goto	u4670
  6849  1ACE                     u4671:
  6850  1ACE  2AD1               	goto	l3044
  6851  1ACF                     u4670:
  6852  1ACF                     l3042:
  6853  1ACF  1003               	clrc
  6854  1AD0  2AD2               	goto	l545
  6855  1AD1                     l3044:
  6856  1AD1  1403               	setc
  6857  1AD2                     l545:
  6858  1AD2  0008               	return
  6859  1AD3                     __end_of___fleq:
  6860                           
  6861                           	psect	text20
  6862  1915                     __ptext20:	
  6863 ;; *************** function _setup *****************
  6864 ;; Defined at:
  6865 ;;		line 114 in file "lab3_main.c"
  6866 ;; Parameters:    Size  Location     Type
  6867 ;;		None
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;		None
  6870 ;; Return value:  Size  Location     Type
  6871 ;;                  1    wreg      void 
  6872 ;; Registers used:
  6873 ;;		wreg, status,2
  6874 ;; Tracked objects:
  6875 ;;		On entry : 0/0
  6876 ;;		On exit  : 0/0
  6877 ;;		Unchanged: 0/0
  6878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6879 ;;      Params:         0       0       0       0       0
  6880 ;;      Locals:         0       0       0       0       0
  6881 ;;      Temps:          0       0       0       0       0
  6882 ;;      Totals:         0       0       0       0       0
  6883 ;;Total ram usage:        0 bytes
  6884 ;; Hardware stack levels used:    1
  6885 ;; Hardware stack levels required when called:    1
  6886 ;; This function calls:
  6887 ;;		Nothing
  6888 ;; This function is called by:
  6889 ;;		_main
  6890 ;; This function uses a non-reentrant model
  6891 ;;
  6892                           
  6893                           
  6894                           ;psect for function _setup
  6895  1915                     _setup:
  6896  1915                     l3182:	
  6897                           ;incstack = 0
  6898                           ; Regs used in _setup: [wreg+status,2]
  6899                           
  6900                           
  6901                           ;lab3_main.c: 118:     TRISE = 0;
  6902  1915  1683               	bsf	3,5	;RP0=1, select bank1
  6903  1916  1303               	bcf	3,6	;RP1=0, select bank1
  6904  1917  0189               	clrf	9	;volatile
  6905                           
  6906                           ;lab3_main.c: 119:     PORTE = 0;
  6907  1918  1283               	bcf	3,5	;RP0=0, select bank0
  6908  1919  1303               	bcf	3,6	;RP1=0, select bank0
  6909  191A  0189               	clrf	9	;volatile
  6910  191B                     l3184:
  6911                           
  6912                           ;lab3_main.c: 120:     ANSEL = 0b00000011;
  6913  191B  3003               	movlw	3
  6914  191C  1683               	bsf	3,5	;RP0=1, select bank3
  6915  191D  1703               	bsf	3,6	;RP1=1, select bank3
  6916  191E  0088               	movwf	8	;volatile
  6917  191F                     l3186:
  6918                           
  6919                           ;lab3_main.c: 121:     ANSELH = 0;
  6920  191F  0189               	clrf	9	;volatile
  6921  1920                     l3188:
  6922                           
  6923                           ;lab3_main.c: 122:     TRISB = 0;
  6924  1920  1683               	bsf	3,5	;RP0=1, select bank1
  6925  1921  1303               	bcf	3,6	;RP1=0, select bank1
  6926  1922  0186               	clrf	6	;volatile
  6927  1923                     l3190:
  6928                           
  6929                           ;lab3_main.c: 123:     PORTB = 0;
  6930  1923  1283               	bcf	3,5	;RP0=0, select bank0
  6931  1924  1303               	bcf	3,6	;RP1=0, select bank0
  6932  1925  0186               	clrf	6	;volatile
  6933  1926                     l3192:
  6934                           
  6935                           ;lab3_main.c: 124:     TRISC = 0;
  6936  1926  1683               	bsf	3,5	;RP0=1, select bank1
  6937  1927  1303               	bcf	3,6	;RP1=0, select bank1
  6938  1928  0187               	clrf	7	;volatile
  6939  1929                     l3194:
  6940                           
  6941                           ;lab3_main.c: 125:     PORTC = 0;
  6942  1929  1283               	bcf	3,5	;RP0=0, select bank0
  6943  192A  1303               	bcf	3,6	;RP1=0, select bank0
  6944  192B  0187               	clrf	7	;volatile
  6945  192C                     l3196:
  6946                           
  6947                           ;lab3_main.c: 126:     TRISD = 0;
  6948  192C  1683               	bsf	3,5	;RP0=1, select bank1
  6949  192D  1303               	bcf	3,6	;RP1=0, select bank1
  6950  192E  0188               	clrf	8	;volatile
  6951  192F                     l3198:
  6952                           
  6953                           ;lab3_main.c: 127:     PORTD = 0;
  6954  192F  1283               	bcf	3,5	;RP0=0, select bank0
  6955  1930  1303               	bcf	3,6	;RP1=0, select bank0
  6956  1931  0188               	clrf	8	;volatile
  6957  1932                     l3200:
  6958                           
  6959                           ;lab3_main.c: 128:     PORTA = 0;
  6960  1932  0185               	clrf	5	;volatile
  6961  1933                     l3202:
  6962                           
  6963                           ;lab3_main.c: 129:     TRISA = 0b00000011;
  6964  1933  3003               	movlw	3
  6965  1934  1683               	bsf	3,5	;RP0=1, select bank1
  6966  1935  1303               	bcf	3,6	;RP1=0, select bank1
  6967  1936  0085               	movwf	5	;volatile
  6968  1937                     l74:
  6969  1937  0008               	return
  6970  1938                     __end_of_setup:
  6971                           
  6972                           	psect	text21
  6973  18BA                     __ptext21:	
  6974 ;; *************** function _initADC *****************
  6975 ;; Defined at:
  6976 ;;		line 6 in file "ADC.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;		None
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;		None
  6981 ;; Return value:  Size  Location     Type
  6982 ;;                  1    wreg      void 
  6983 ;; Registers used:
  6984 ;;		wreg, status,2
  6985 ;; Tracked objects:
  6986 ;;		On entry : 0/0
  6987 ;;		On exit  : 0/0
  6988 ;;		Unchanged: 0/0
  6989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6990 ;;      Params:         0       0       0       0       0
  6991 ;;      Locals:         0       0       0       0       0
  6992 ;;      Temps:          0       0       0       0       0
  6993 ;;      Totals:         0       0       0       0       0
  6994 ;;Total ram usage:        0 bytes
  6995 ;; Hardware stack levels used:    1
  6996 ;; Hardware stack levels required when called:    1
  6997 ;; This function calls:
  6998 ;;		Nothing
  6999 ;; This function is called by:
  7000 ;;		_main
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           
  7004                           
  7005                           ;psect for function _initADC
  7006  18BA                     _initADC:
  7007  18BA                     l3204:	
  7008                           ;incstack = 0
  7009                           ; Regs used in _initADC: [wreg+status,2]
  7010                           
  7011                           
  7012                           ;ADC.c: 12:     INTCONbits.PEIE = 1;
  7013  18BA  170B               	bsf	11,6	;volatile
  7014                           
  7015                           ;ADC.c: 13:     PIE1bits.ADIE = 1;
  7016  18BB  1683               	bsf	3,5	;RP0=1, select bank1
  7017  18BC  1303               	bcf	3,6	;RP1=0, select bank1
  7018  18BD  170C               	bsf	12,6	;volatile
  7019                           
  7020                           ;ADC.c: 14:     PIR1bits.ADIF = 0;
  7021  18BE  1283               	bcf	3,5	;RP0=0, select bank0
  7022  18BF  1303               	bcf	3,6	;RP1=0, select bank0
  7023  18C0  130C               	bcf	12,6	;volatile
  7024  18C1                     l3206:
  7025                           
  7026                           ;ADC.c: 15:     ADCON0 = 0b01000001;
  7027  18C1  3041               	movlw	65
  7028  18C2  009F               	movwf	31	;volatile
  7029  18C3                     l3208:
  7030                           
  7031                           ;ADC.c: 16:     ADCON1 = 0b00000000;
  7032  18C3  1683               	bsf	3,5	;RP0=1, select bank1
  7033  18C4  1303               	bcf	3,6	;RP1=0, select bank1
  7034  18C5  019F               	clrf	31	;volatile
  7035  18C6                     l132:
  7036  18C6  0008               	return
  7037  18C7                     __end_of_initADC:
  7038                           
  7039                           	psect	text22
  7040  1B79                     __ptext22:	
  7041 ;; *************** function _LeerADC *****************
  7042 ;; Defined at:
  7043 ;;		line 142 in file "lab3_main.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;  x               1    wreg     unsigned char 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  x               1   42[BANK0 ] unsigned char 
  7048 ;;  a               4   43[BANK0 ] float 
  7049 ;; Return value:  Size  Location     Type
  7050 ;;                  4   34[BANK0 ] float 
  7051 ;; Registers used:
  7052 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7053 ;; Tracked objects:
  7054 ;;		On entry : 0/0
  7055 ;;		On exit  : 0/0
  7056 ;;		Unchanged: 0/0
  7057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7058 ;;      Params:         0       4       0       0       0
  7059 ;;      Locals:         0       5       0       0       0
  7060 ;;      Temps:          0       4       0       0       0
  7061 ;;      Totals:         0      13       0       0       0
  7062 ;;Total ram usage:       13 bytes
  7063 ;; Hardware stack levels used:    1
  7064 ;; Hardware stack levels required when called:    3
  7065 ;; This function calls:
  7066 ;;		_ADC_Select
  7067 ;;		___flmul
  7068 ;;		___xxtofl
  7069 ;; This function is called by:
  7070 ;;		_main
  7071 ;; This function uses a non-reentrant model
  7072 ;;
  7073                           
  7074                           
  7075                           ;psect for function _LeerADC
  7076  1B79                     _LeerADC:
  7077                           
  7078                           ;incstack = 0
  7079                           ; Regs used in _LeerADC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7080                           ;LeerADC@x stored from wreg
  7081  1B79  1283               	bcf	3,5	;RP0=0, select bank0
  7082  1B7A  1303               	bcf	3,6	;RP1=0, select bank0
  7083  1B7B  00CA               	movwf	LeerADC@x
  7084  1B7C                     l3224:
  7085  1B7C                     l3226:
  7086                           
  7087                           ;lab3_main.c: 144:     ADC_Select(x);
  7088  1B7C  084A               	movf	LeerADC@x,w
  7089  1B7D  160A  158A  24A1  160A  158A  	fcall	_ADC_Select
  7090  1B82                     l3228:
  7091                           
  7092                           ;lab3_main.c: 145:     ADCON0bits.ADON=1;
  7093  1B82  1283               	bcf	3,5	;RP0=0, select bank0
  7094  1B83  1303               	bcf	3,6	;RP1=0, select bank0
  7095  1B84  141F               	bsf	31,0	;volatile
  7096  1B85                     l3230:
  7097                           
  7098                           ;lab3_main.c: 146:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  7099  1B85  300C               	movlw	12
  7100  1B86  1283               	bcf	3,5	;RP0=0, select bank0
  7101  1B87  1303               	bcf	3,6	;RP1=0, select bank0
  7102  1B88  00C6               	movwf	??_LeerADC
  7103  1B89                     u6457:
  7104  1B89  0BC6               	decfsz	??_LeerADC,f
  7105  1B8A  2B89               	goto	u6457
  7106  1B8B  0000               	nop
  7107  1B8C                     l3232:
  7108                           
  7109                           ;lab3_main.c: 147:     ADCON0bits.GO=1;
  7110  1B8C  1283               	bcf	3,5	;RP0=0, select bank0
  7111  1B8D  1303               	bcf	3,6	;RP1=0, select bank0
  7112  1B8E  149F               	bsf	31,1	;volatile
  7113  1B8F                     l77:	
  7114                           ;lab3_main.c: 148:     while(ADCON0bits.GO_DONE==1){};
  7115                           
  7116  1B8F  189F               	btfsc	31,1	;volatile
  7117  1B90  2B92               	goto	u5061
  7118  1B91  2B93               	goto	u5060
  7119  1B92                     u5061:
  7120  1B92  2B8F               	goto	l77
  7121  1B93                     u5060:
  7122  1B93                     l3234:
  7123                           
  7124                           ;lab3_main.c: 150:     a = ADRESH * 0.0196;
  7125  1B93  303C               	movlw	60
  7126  1B94  00AB               	movwf	___flmul@b+3
  7127  1B95  30A0               	movlw	160
  7128  1B96  00AA               	movwf	___flmul@b+2
  7129  1B97  3090               	movlw	144
  7130  1B98  00A9               	movwf	___flmul@b+1
  7131  1B99  302E               	movlw	46
  7132  1B9A  00A8               	movwf	___flmul@b
  7133  1B9B  081E               	movf	30,w	;volatile
  7134  1B9C  00C6               	movwf	??_LeerADC
  7135  1B9D  01C7               	clrf	??_LeerADC+1
  7136  1B9E  01C8               	clrf	??_LeerADC+2
  7137  1B9F  01C9               	clrf	??_LeerADC+3
  7138  1BA0  0849               	movf	??_LeerADC+3,w
  7139  1BA1  00F5               	movwf	___xxtofl@val+3
  7140  1BA2  0848               	movf	??_LeerADC+2,w
  7141  1BA3  00F4               	movwf	___xxtofl@val+2
  7142  1BA4  0847               	movf	??_LeerADC+1,w
  7143  1BA5  00F3               	movwf	___xxtofl@val+1
  7144  1BA6  0846               	movf	??_LeerADC,w
  7145  1BA7  00F2               	movwf	___xxtofl@val
  7146  1BA8  3001               	movlw	1
  7147  1BA9  160A  158A  2687  160A  158A  	fcall	___xxtofl
  7148  1BAE  0875               	movf	?___xxtofl+3,w
  7149  1BAF  1283               	bcf	3,5	;RP0=0, select bank0
  7150  1BB0  1303               	bcf	3,6	;RP1=0, select bank0
  7151  1BB1  00AF               	movwf	___flmul@a+3
  7152  1BB2  0874               	movf	?___xxtofl+2,w
  7153  1BB3  00AE               	movwf	___flmul@a+2
  7154  1BB4  0873               	movf	?___xxtofl+1,w
  7155  1BB5  00AD               	movwf	___flmul@a+1
  7156  1BB6  0872               	movf	?___xxtofl,w
  7157  1BB7  00AC               	movwf	___flmul@a
  7158  1BB8  120A  158A  213C  160A  158A  	fcall	___flmul
  7159  1BBD  1283               	bcf	3,5	;RP0=0, select bank0
  7160  1BBE  1303               	bcf	3,6	;RP1=0, select bank0
  7161  1BBF  082B               	movf	?___flmul+3,w
  7162  1BC0  00CE               	movwf	LeerADC@a+3
  7163  1BC1  082A               	movf	?___flmul+2,w
  7164  1BC2  00CD               	movwf	LeerADC@a+2
  7165  1BC3  0829               	movf	?___flmul+1,w
  7166  1BC4  00CC               	movwf	LeerADC@a+1
  7167  1BC5  0828               	movf	?___flmul,w
  7168  1BC6  00CB               	movwf	LeerADC@a
  7169  1BC7                     l3236:
  7170                           
  7171                           ;lab3_main.c: 151:     return a;
  7172  1BC7  084E               	movf	LeerADC@a+3,w
  7173  1BC8  00C5               	movwf	?_LeerADC+3
  7174  1BC9  084D               	movf	LeerADC@a+2,w
  7175  1BCA  00C4               	movwf	?_LeerADC+2
  7176  1BCB  084C               	movf	LeerADC@a+1,w
  7177  1BCC  00C3               	movwf	?_LeerADC+1
  7178  1BCD  084B               	movf	LeerADC@a,w
  7179  1BCE  00C2               	movwf	?_LeerADC
  7180  1BCF                     l80:
  7181  1BCF  0008               	return
  7182  1BD0                     __end_of_LeerADC:
  7183                           
  7184                           	psect	text23
  7185  1E87                     __ptext23:	
  7186 ;; *************** function ___xxtofl *****************
  7187 ;; Defined at:
  7188 ;;		line 10 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7189 ;; Parameters:    Size  Location     Type
  7190 ;;  sign            1    wreg     unsigned char 
  7191 ;;  val             4    2[COMMON] long 
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;  sign            1    0[BANK0 ] unsigned char 
  7194 ;;  arg             4    2[BANK0 ] unsigned long 
  7195 ;;  exp             1    1[BANK0 ] unsigned char 
  7196 ;; Return value:  Size  Location     Type
  7197 ;;                  4    2[COMMON] unsigned char 
  7198 ;; Registers used:
  7199 ;;		wreg, status,2, status,0
  7200 ;; Tracked objects:
  7201 ;;		On entry : 0/0
  7202 ;;		On exit  : 0/0
  7203 ;;		Unchanged: 0/0
  7204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7205 ;;      Params:         4       0       0       0       0
  7206 ;;      Locals:         0       6       0       0       0
  7207 ;;      Temps:          4       0       0       0       0
  7208 ;;      Totals:         8       6       0       0       0
  7209 ;;Total ram usage:       14 bytes
  7210 ;; Hardware stack levels used:    1
  7211 ;; Hardware stack levels required when called:    1
  7212 ;; This function calls:
  7213 ;;		Nothing
  7214 ;; This function is called by:
  7215 ;;		_LeerADC
  7216 ;;		_sprintf
  7217 ;; This function uses a non-reentrant model
  7218 ;;
  7219                           
  7220                           
  7221                           ;psect for function ___xxtofl
  7222  1E87                     ___xxtofl:
  7223                           
  7224                           ;incstack = 0
  7225                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7226                           ;___xxtofl@sign stored from wreg
  7227  1E87  1283               	bcf	3,5	;RP0=0, select bank0
  7228  1E88  1303               	bcf	3,6	;RP1=0, select bank0
  7229  1E89  00A0               	movwf	___xxtofl@sign
  7230  1E8A                     l3138:
  7231  1E8A  0820               	movf	___xxtofl@sign,w
  7232  1E8B  1903               	btfsc	3,2
  7233  1E8C  2E8E               	goto	u4921
  7234  1E8D  2E8F               	goto	u4920
  7235  1E8E                     u4921:
  7236  1E8E  2EA3               	goto	l3144
  7237  1E8F                     u4920:
  7238  1E8F                     l3140:
  7239  1E8F  1FF5               	btfss	___xxtofl@val+3,7
  7240  1E90  2E92               	goto	u4931
  7241  1E91  2E93               	goto	u4930
  7242  1E92                     u4931:
  7243  1E92  2EA3               	goto	l3144
  7244  1E93                     u4930:
  7245  1E93                     l3142:
  7246  1E93  0972               	comf	___xxtofl@val,w
  7247  1E94  00A2               	movwf	___xxtofl@arg
  7248  1E95  0973               	comf	___xxtofl@val+1,w
  7249  1E96  00A3               	movwf	___xxtofl@arg+1
  7250  1E97  0974               	comf	___xxtofl@val+2,w
  7251  1E98  00A4               	movwf	___xxtofl@arg+2
  7252  1E99  0975               	comf	___xxtofl@val+3,w
  7253  1E9A  00A5               	movwf	___xxtofl@arg+3
  7254  1E9B  0AA2               	incf	___xxtofl@arg,f
  7255  1E9C  1903               	skipnz
  7256  1E9D  0AA3               	incf	___xxtofl@arg+1,f
  7257  1E9E  1903               	skipnz
  7258  1E9F  0AA4               	incf	___xxtofl@arg+2,f
  7259  1EA0  1903               	skipnz
  7260  1EA1  0AA5               	incf	___xxtofl@arg+3,f
  7261  1EA2  2EAB               	goto	l824
  7262  1EA3                     l3144:
  7263  1EA3  0875               	movf	___xxtofl@val+3,w
  7264  1EA4  00A5               	movwf	___xxtofl@arg+3
  7265  1EA5  0874               	movf	___xxtofl@val+2,w
  7266  1EA6  00A4               	movwf	___xxtofl@arg+2
  7267  1EA7  0873               	movf	___xxtofl@val+1,w
  7268  1EA8  00A3               	movwf	___xxtofl@arg+1
  7269  1EA9  0872               	movf	___xxtofl@val,w
  7270  1EAA  00A2               	movwf	___xxtofl@arg
  7271  1EAB                     l824:
  7272  1EAB  0875               	movf	___xxtofl@val+3,w
  7273  1EAC  0474               	iorwf	___xxtofl@val+2,w
  7274  1EAD  0473               	iorwf	___xxtofl@val+1,w
  7275  1EAE  0472               	iorwf	___xxtofl@val,w
  7276  1EAF  1D03               	skipz
  7277  1EB0  2EB2               	goto	u4941
  7278  1EB1  2EB3               	goto	u4940
  7279  1EB2                     u4941:
  7280  1EB2  2EBC               	goto	l3150
  7281  1EB3                     u4940:
  7282  1EB3                     l3146:
  7283  1EB3  3000               	movlw	0
  7284  1EB4  00F5               	movwf	?___xxtofl+3
  7285  1EB5  3000               	movlw	0
  7286  1EB6  00F4               	movwf	?___xxtofl+2
  7287  1EB7  3000               	movlw	0
  7288  1EB8  00F3               	movwf	?___xxtofl+1
  7289  1EB9  3000               	movlw	0
  7290  1EBA  00F2               	movwf	?___xxtofl
  7291  1EBB  2F42               	goto	l826
  7292  1EBC                     l3150:
  7293  1EBC  3096               	movlw	150
  7294  1EBD  00F6               	movwf	??___xxtofl
  7295  1EBE  0876               	movf	??___xxtofl,w
  7296  1EBF  00A1               	movwf	___xxtofl@exp
  7297  1EC0  2ECE               	goto	l3154
  7298  1EC1                     l3152:
  7299  1EC1  3001               	movlw	1
  7300  1EC2  00F6               	movwf	??___xxtofl
  7301  1EC3  0876               	movf	??___xxtofl,w
  7302  1EC4  07A1               	addwf	___xxtofl@exp,f
  7303  1EC5  3001               	movlw	1
  7304  1EC6                     u4955:
  7305  1EC6  1003               	clrc
  7306  1EC7  0CA5               	rrf	___xxtofl@arg+3,f
  7307  1EC8  0CA4               	rrf	___xxtofl@arg+2,f
  7308  1EC9  0CA3               	rrf	___xxtofl@arg+1,f
  7309  1ECA  0CA2               	rrf	___xxtofl@arg,f
  7310  1ECB  3EFF               	addlw	-1
  7311  1ECC  1D03               	skipz
  7312  1ECD  2EC6               	goto	u4955
  7313  1ECE                     l3154:
  7314  1ECE  30FE               	movlw	254
  7315  1ECF  0525               	andwf	___xxtofl@arg+3,w
  7316  1ED0  1D03               	btfss	3,2
  7317  1ED1  2ED3               	goto	u4961
  7318  1ED2  2ED4               	goto	u4960
  7319  1ED3                     u4961:
  7320  1ED3  2EC1               	goto	l3152
  7321  1ED4                     u4960:
  7322  1ED4  2EF0               	goto	l830
  7323  1ED5                     l3156:
  7324  1ED5  3001               	movlw	1
  7325  1ED6  00F6               	movwf	??___xxtofl
  7326  1ED7  0876               	movf	??___xxtofl,w
  7327  1ED8  07A1               	addwf	___xxtofl@exp,f
  7328  1ED9                     l3158:
  7329  1ED9  3001               	movlw	1
  7330  1EDA  07A2               	addwf	___xxtofl@arg,f
  7331  1EDB  3000               	movlw	0
  7332  1EDC  1803               	skipnc
  7333  1EDD  3001               	movlw	1
  7334  1EDE  07A3               	addwf	___xxtofl@arg+1,f
  7335  1EDF  3000               	movlw	0
  7336  1EE0  1803               	skipnc
  7337  1EE1  3001               	movlw	1
  7338  1EE2  07A4               	addwf	___xxtofl@arg+2,f
  7339  1EE3  3000               	movlw	0
  7340  1EE4  1803               	skipnc
  7341  1EE5  3001               	movlw	1
  7342  1EE6  07A5               	addwf	___xxtofl@arg+3,f
  7343  1EE7                     l3160:
  7344  1EE7  3001               	movlw	1
  7345  1EE8                     u4975:
  7346  1EE8  1003               	clrc
  7347  1EE9  0CA5               	rrf	___xxtofl@arg+3,f
  7348  1EEA  0CA4               	rrf	___xxtofl@arg+2,f
  7349  1EEB  0CA3               	rrf	___xxtofl@arg+1,f
  7350  1EEC  0CA2               	rrf	___xxtofl@arg,f
  7351  1EED  3EFF               	addlw	-1
  7352  1EEE  1D03               	skipz
  7353  1EEF  2EE8               	goto	u4975
  7354  1EF0                     l830:
  7355  1EF0  30FF               	movlw	255
  7356  1EF1  0525               	andwf	___xxtofl@arg+3,w
  7357  1EF2  1D03               	btfss	3,2
  7358  1EF3  2EF5               	goto	u4981
  7359  1EF4  2EF6               	goto	u4980
  7360  1EF5                     u4981:
  7361  1EF5  2ED5               	goto	l3156
  7362  1EF6                     u4980:
  7363  1EF6  2F02               	goto	l3164
  7364  1EF7                     l3162:
  7365  1EF7  3001               	movlw	1
  7366  1EF8  02A1               	subwf	___xxtofl@exp,f
  7367  1EF9  3001               	movlw	1
  7368  1EFA  00F6               	movwf	??___xxtofl
  7369  1EFB                     u4995:
  7370  1EFB  1003               	clrc
  7371  1EFC  0DA2               	rlf	___xxtofl@arg,f
  7372  1EFD  0DA3               	rlf	___xxtofl@arg+1,f
  7373  1EFE  0DA4               	rlf	___xxtofl@arg+2,f
  7374  1EFF  0DA5               	rlf	___xxtofl@arg+3,f
  7375  1F00  0BF6               	decfsz	??___xxtofl,f
  7376  1F01  2EFB               	goto	u4995
  7377  1F02                     l3164:
  7378  1F02  1BA4               	btfsc	___xxtofl@arg+2,7
  7379  1F03  2F05               	goto	u5001
  7380  1F04  2F06               	goto	u5000
  7381  1F05                     u5001:
  7382  1F05  2F0C               	goto	l837
  7383  1F06                     u5000:
  7384  1F06                     l3166:
  7385  1F06  3002               	movlw	2
  7386  1F07  0221               	subwf	___xxtofl@exp,w
  7387  1F08  1803               	skipnc
  7388  1F09  2F0B               	goto	u5011
  7389  1F0A  2F0C               	goto	u5010
  7390  1F0B                     u5011:
  7391  1F0B  2EF7               	goto	l3162
  7392  1F0C                     u5010:
  7393  1F0C                     l837:
  7394  1F0C  1821               	btfsc	___xxtofl@exp,0
  7395  1F0D  2F0F               	goto	u5021
  7396  1F0E  2F10               	goto	u5020
  7397  1F0F                     u5021:
  7398  1F0F  2F18               	goto	l838
  7399  1F10                     u5020:
  7400  1F10                     l3168:
  7401  1F10  30FF               	movlw	255
  7402  1F11  05A2               	andwf	___xxtofl@arg,f
  7403  1F12  30FF               	movlw	255
  7404  1F13  05A3               	andwf	___xxtofl@arg+1,f
  7405  1F14  307F               	movlw	127
  7406  1F15  05A4               	andwf	___xxtofl@arg+2,f
  7407  1F16  30FF               	movlw	255
  7408  1F17  05A5               	andwf	___xxtofl@arg+3,f
  7409  1F18                     l838:
  7410  1F18  1003               	clrc
  7411  1F19  0CA1               	rrf	___xxtofl@exp,f
  7412  1F1A                     l3170:
  7413  1F1A  0821               	movf	___xxtofl@exp,w
  7414  1F1B  00F6               	movwf	??___xxtofl
  7415  1F1C  01F7               	clrf	??___xxtofl+1
  7416  1F1D  01F8               	clrf	??___xxtofl+2
  7417  1F1E  01F9               	clrf	??___xxtofl+3
  7418  1F1F  3018               	movlw	24
  7419  1F20                     u5035:
  7420  1F20  1003               	clrc
  7421  1F21  0DF6               	rlf	??___xxtofl,f
  7422  1F22  0DF7               	rlf	??___xxtofl+1,f
  7423  1F23  0DF8               	rlf	??___xxtofl+2,f
  7424  1F24  0DF9               	rlf	??___xxtofl+3,f
  7425  1F25                     u5030:
  7426  1F25  3EFF               	addlw	-1
  7427  1F26  1D03               	skipz
  7428  1F27  2F20               	goto	u5035
  7429  1F28  0876               	movf	??___xxtofl,w
  7430  1F29  04A2               	iorwf	___xxtofl@arg,f
  7431  1F2A  0877               	movf	??___xxtofl+1,w
  7432  1F2B  04A3               	iorwf	___xxtofl@arg+1,f
  7433  1F2C  0878               	movf	??___xxtofl+2,w
  7434  1F2D  04A4               	iorwf	___xxtofl@arg+2,f
  7435  1F2E  0879               	movf	??___xxtofl+3,w
  7436  1F2F  04A5               	iorwf	___xxtofl@arg+3,f
  7437  1F30                     l3172:
  7438  1F30  0820               	movf	___xxtofl@sign,w
  7439  1F31  1903               	btfsc	3,2
  7440  1F32  2F34               	goto	u5041
  7441  1F33  2F35               	goto	u5040
  7442  1F34                     u5041:
  7443  1F34  2F3A               	goto	l3178
  7444  1F35                     u5040:
  7445  1F35                     l3174:
  7446  1F35  1FF5               	btfss	___xxtofl@val+3,7
  7447  1F36  2F38               	goto	u5051
  7448  1F37  2F39               	goto	u5050
  7449  1F38                     u5051:
  7450  1F38  2F3A               	goto	l3178
  7451  1F39                     u5050:
  7452  1F39                     l3176:
  7453  1F39  17A5               	bsf	___xxtofl@arg+3,7
  7454  1F3A                     l3178:
  7455  1F3A  0825               	movf	___xxtofl@arg+3,w
  7456  1F3B  00F5               	movwf	?___xxtofl+3
  7457  1F3C  0824               	movf	___xxtofl@arg+2,w
  7458  1F3D  00F4               	movwf	?___xxtofl+2
  7459  1F3E  0823               	movf	___xxtofl@arg+1,w
  7460  1F3F  00F3               	movwf	?___xxtofl+1
  7461  1F40  0822               	movf	___xxtofl@arg,w
  7462  1F41  00F2               	movwf	?___xxtofl
  7463  1F42                     l826:
  7464  1F42  0008               	return
  7465  1F43                     __end_of___xxtofl:
  7466                           
  7467                           	psect	text24
  7468  093C                     __ptext24:	
  7469 ;; *************** function ___flmul *****************
  7470 ;; Defined at:
  7471 ;;		line 8 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;  b               4    8[BANK0 ] unsigned char 
  7474 ;;  a               4   12[BANK0 ] unsigned char 
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;  prod            4   28[BANK0 ] struct .
  7477 ;;  grs             4   22[BANK0 ] unsigned long 
  7478 ;;  temp            2   32[BANK0 ] struct .
  7479 ;;  bexp            1   27[BANK0 ] unsigned char 
  7480 ;;  aexp            1   26[BANK0 ] unsigned char 
  7481 ;;  sign            1   21[BANK0 ] unsigned char 
  7482 ;; Return value:  Size  Location     Type
  7483 ;;                  4    8[BANK0 ] unsigned char 
  7484 ;; Registers used:
  7485 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7486 ;; Tracked objects:
  7487 ;;		On entry : 0/0
  7488 ;;		On exit  : 0/0
  7489 ;;		Unchanged: 0/0
  7490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7491 ;;      Params:         0       8       0       0       0
  7492 ;;      Locals:         0      13       0       0       0
  7493 ;;      Temps:          0       5       0       0       0
  7494 ;;      Totals:         0      26       0       0       0
  7495 ;;Total ram usage:       26 bytes
  7496 ;; Hardware stack levels used:    1
  7497 ;; Hardware stack levels required when called:    2
  7498 ;; This function calls:
  7499 ;;		__Umul8_16
  7500 ;; This function is called by:
  7501 ;;		_LeerADC
  7502 ;;		_fround
  7503 ;;		_scale
  7504 ;;		_sprintf
  7505 ;; This function uses a non-reentrant model
  7506 ;;
  7507                           
  7508                           
  7509                           ;psect for function ___flmul
  7510  093C                     ___flmul:
  7511  093C                     l2620:	
  7512                           ;incstack = 0
  7513                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7514                           
  7515  093C  1283               	bcf	3,5	;RP0=0, select bank0
  7516  093D  1303               	bcf	3,6	;RP1=0, select bank0
  7517  093E  082B               	movf	___flmul@b+3,w
  7518  093F  3980               	andlw	128
  7519  0940  00B0               	movwf	??___flmul
  7520  0941  0830               	movf	??___flmul,w
  7521  0942  00B5               	movwf	___flmul@sign
  7522  0943                     l2622:
  7523  0943  082B               	movf	___flmul@b+3,w
  7524  0944  00B0               	movwf	??___flmul
  7525  0945  0730               	addwf	??___flmul,w
  7526  0946  00B1               	movwf	??___flmul+1
  7527  0947  0831               	movf	??___flmul+1,w
  7528  0948  00BB               	movwf	___flmul@bexp
  7529  0949                     l2624:
  7530  0949  1FAA               	btfss	___flmul@b+2,7
  7531  094A  294C               	goto	u3641
  7532  094B  294D               	goto	u3640
  7533  094C                     u3641:
  7534  094C  294E               	goto	l2628
  7535  094D                     u3640:
  7536  094D                     l2626:
  7537  094D  143B               	bsf	___flmul@bexp,0
  7538  094E                     l2628:
  7539  094E  083B               	movf	___flmul@bexp,w
  7540  094F  1903               	btfsc	3,2
  7541  0950  2952               	goto	u3651
  7542  0951  2953               	goto	u3650
  7543  0952                     u3651:
  7544  0952  2962               	goto	l2636
  7545  0953                     u3650:
  7546  0953                     l2630:
  7547  0953  0A3B               	incf	___flmul@bexp,w
  7548  0954  1D03               	btfss	3,2
  7549  0955  2957               	goto	u3661
  7550  0956  2958               	goto	u3660
  7551  0957                     u3661:
  7552  0957  2960               	goto	l2634
  7553  0958                     u3660:
  7554  0958                     l2632:
  7555  0958  3000               	movlw	0
  7556  0959  00AB               	movwf	___flmul@b+3
  7557  095A  3000               	movlw	0
  7558  095B  00AA               	movwf	___flmul@b+2
  7559  095C  3000               	movlw	0
  7560  095D  00A9               	movwf	___flmul@b+1
  7561  095E  3000               	movlw	0
  7562  095F  00A8               	movwf	___flmul@b
  7563  0960                     l2634:
  7564  0960  17AA               	bsf	___flmul@b+2,7
  7565  0961  296A               	goto	l2638
  7566  0962                     l2636:
  7567  0962  3000               	movlw	0
  7568  0963  00AB               	movwf	___flmul@b+3
  7569  0964  3000               	movlw	0
  7570  0965  00AA               	movwf	___flmul@b+2
  7571  0966  3000               	movlw	0
  7572  0967  00A9               	movwf	___flmul@b+1
  7573  0968  3000               	movlw	0
  7574  0969  00A8               	movwf	___flmul@b
  7575  096A                     l2638:
  7576  096A  082F               	movf	___flmul@a+3,w
  7577  096B  3980               	andlw	128
  7578  096C  00B0               	movwf	??___flmul
  7579  096D  0830               	movf	??___flmul,w
  7580  096E  06B5               	xorwf	___flmul@sign,f
  7581  096F                     l2640:
  7582  096F  082F               	movf	___flmul@a+3,w
  7583  0970  00B0               	movwf	??___flmul
  7584  0971  0730               	addwf	??___flmul,w
  7585  0972  00B1               	movwf	??___flmul+1
  7586  0973  0831               	movf	??___flmul+1,w
  7587  0974  00BA               	movwf	___flmul@aexp
  7588  0975                     l2642:
  7589  0975  1FAE               	btfss	___flmul@a+2,7
  7590  0976  2978               	goto	u3671
  7591  0977  2979               	goto	u3670
  7592  0978                     u3671:
  7593  0978  297A               	goto	l2646
  7594  0979                     u3670:
  7595  0979                     l2644:
  7596  0979  143A               	bsf	___flmul@aexp,0
  7597  097A                     l2646:
  7598  097A  083A               	movf	___flmul@aexp,w
  7599  097B  1903               	btfsc	3,2
  7600  097C  297E               	goto	u3681
  7601  097D  297F               	goto	u3680
  7602  097E                     u3681:
  7603  097E  298E               	goto	l2654
  7604  097F                     u3680:
  7605  097F                     l2648:
  7606  097F  0A3A               	incf	___flmul@aexp,w
  7607  0980  1D03               	btfss	3,2
  7608  0981  2983               	goto	u3691
  7609  0982  2984               	goto	u3690
  7610  0983                     u3691:
  7611  0983  298C               	goto	l2652
  7612  0984                     u3690:
  7613  0984                     l2650:
  7614  0984  3000               	movlw	0
  7615  0985  00AF               	movwf	___flmul@a+3
  7616  0986  3000               	movlw	0
  7617  0987  00AE               	movwf	___flmul@a+2
  7618  0988  3000               	movlw	0
  7619  0989  00AD               	movwf	___flmul@a+1
  7620  098A  3000               	movlw	0
  7621  098B  00AC               	movwf	___flmul@a
  7622  098C                     l2652:
  7623  098C  17AE               	bsf	___flmul@a+2,7
  7624  098D  2996               	goto	l2656
  7625  098E                     l2654:
  7626  098E  3000               	movlw	0
  7627  098F  00AF               	movwf	___flmul@a+3
  7628  0990  3000               	movlw	0
  7629  0991  00AE               	movwf	___flmul@a+2
  7630  0992  3000               	movlw	0
  7631  0993  00AD               	movwf	___flmul@a+1
  7632  0994  3000               	movlw	0
  7633  0995  00AC               	movwf	___flmul@a
  7634  0996                     l2656:
  7635  0996  083A               	movf	___flmul@aexp,w
  7636  0997  1903               	btfsc	3,2
  7637  0998  299A               	goto	u3701
  7638  0999  299B               	goto	u3700
  7639  099A                     u3701:
  7640  099A  29A0               	goto	l2660
  7641  099B                     u3700:
  7642  099B                     l2658:
  7643  099B  083B               	movf	___flmul@bexp,w
  7644  099C  1D03               	btfss	3,2
  7645  099D  299F               	goto	u3711
  7646  099E  29A0               	goto	u3710
  7647  099F                     u3711:
  7648  099F  29A9               	goto	l2664
  7649  09A0                     u3710:
  7650  09A0                     l2660:
  7651  09A0  3000               	movlw	0
  7652  09A1  00AB               	movwf	?___flmul+3
  7653  09A2  3000               	movlw	0
  7654  09A3  00AA               	movwf	?___flmul+2
  7655  09A4  3000               	movlw	0
  7656  09A5  00A9               	movwf	?___flmul+1
  7657  09A6  3000               	movlw	0
  7658  09A7  00A8               	movwf	?___flmul
  7659  09A8  2C9C               	goto	l780
  7660  09A9                     l2664:
  7661  09A9  0828               	movf	___flmul@b,w
  7662  09AA  00B0               	movwf	??___flmul
  7663  09AB  0830               	movf	??___flmul,w
  7664  09AC  00F2               	movwf	__Umul8_16@multiplicand
  7665  09AD  082E               	movf	___flmul@a+2,w
  7666  09AE  160A  158A  2181  120A  158A  	fcall	__Umul8_16
  7667  09B3  0873               	movf	?__Umul8_16+1,w
  7668  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  7669  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  7670  09B6  00C1               	movwf	___flmul@temp+1
  7671  09B7  0872               	movf	?__Umul8_16,w
  7672  09B8  00C0               	movwf	___flmul@temp
  7673  09B9                     l2666:
  7674  09B9  0840               	movf	___flmul@temp,w
  7675  09BA  00B0               	movwf	??___flmul
  7676  09BB  01B1               	clrf	??___flmul+1
  7677  09BC  01B2               	clrf	??___flmul+2
  7678  09BD  01B3               	clrf	??___flmul+3
  7679  09BE  0833               	movf	??___flmul+3,w
  7680  09BF  00B9               	movwf	___flmul@grs+3
  7681  09C0  0832               	movf	??___flmul+2,w
  7682  09C1  00B8               	movwf	___flmul@grs+2
  7683  09C2  0831               	movf	??___flmul+1,w
  7684  09C3  00B7               	movwf	___flmul@grs+1
  7685  09C4  0830               	movf	??___flmul,w
  7686  09C5  00B6               	movwf	___flmul@grs
  7687  09C6                     l2668:
  7688  09C6  0841               	movf	___flmul@temp+1,w
  7689  09C7  00B0               	movwf	??___flmul
  7690  09C8  01B1               	clrf	??___flmul+1
  7691  09C9  01B2               	clrf	??___flmul+2
  7692  09CA  01B3               	clrf	??___flmul+3
  7693  09CB  0833               	movf	??___flmul+3,w
  7694  09CC  00BF               	movwf	___flmul@prod+3
  7695  09CD  0832               	movf	??___flmul+2,w
  7696  09CE  00BE               	movwf	___flmul@prod+2
  7697  09CF  0831               	movf	??___flmul+1,w
  7698  09D0  00BD               	movwf	___flmul@prod+1
  7699  09D1  0830               	movf	??___flmul,w
  7700  09D2  00BC               	movwf	___flmul@prod
  7701  09D3  0829               	movf	___flmul@b+1,w
  7702  09D4  00B0               	movwf	??___flmul
  7703  09D5  0830               	movf	??___flmul,w
  7704  09D6  00F2               	movwf	__Umul8_16@multiplicand
  7705  09D7  082D               	movf	___flmul@a+1,w
  7706  09D8  160A  158A  2181  120A  158A  	fcall	__Umul8_16
  7707  09DD  0873               	movf	?__Umul8_16+1,w
  7708  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  7709  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  7710  09E0  00C1               	movwf	___flmul@temp+1
  7711  09E1  0872               	movf	?__Umul8_16,w
  7712  09E2  00C0               	movwf	___flmul@temp
  7713  09E3                     l2670:
  7714  09E3  0840               	movf	___flmul@temp,w
  7715  09E4  00B0               	movwf	??___flmul
  7716  09E5  01B1               	clrf	??___flmul+1
  7717  09E6  01B2               	clrf	??___flmul+2
  7718  09E7  01B3               	clrf	??___flmul+3
  7719  09E8  0830               	movf	??___flmul,w
  7720  09E9  07B6               	addwf	___flmul@grs,f
  7721  09EA  0831               	movf	??___flmul+1,w
  7722  09EB  1103               	clrz
  7723  09EC  1803               	skipnc
  7724  09ED  3E01               	addlw	1
  7725  09EE  1903               	skipnz
  7726  09EF  29F1               	goto	u3721
  7727  09F0  07B7               	addwf	___flmul@grs+1,f
  7728  09F1                     u3721:
  7729  09F1  0832               	movf	??___flmul+2,w
  7730  09F2  1103               	clrz
  7731  09F3  1803               	skipnc
  7732  09F4  3E01               	addlw	1
  7733  09F5  1903               	skipnz
  7734  09F6  29F8               	goto	u3722
  7735  09F7  07B8               	addwf	___flmul@grs+2,f
  7736  09F8                     u3722:
  7737  09F8  0833               	movf	??___flmul+3,w
  7738  09F9  1103               	clrz
  7739  09FA  1803               	skipnc
  7740  09FB  3E01               	addlw	1
  7741  09FC  1903               	skipnz
  7742  09FD  29FF               	goto	u3723
  7743  09FE  07B9               	addwf	___flmul@grs+3,f
  7744  09FF                     u3723:
  7745  09FF                     l2672:
  7746  09FF  0841               	movf	___flmul@temp+1,w
  7747  0A00  00B0               	movwf	??___flmul
  7748  0A01  01B1               	clrf	??___flmul+1
  7749  0A02  01B2               	clrf	??___flmul+2
  7750  0A03  01B3               	clrf	??___flmul+3
  7751  0A04  0830               	movf	??___flmul,w
  7752  0A05  07BC               	addwf	___flmul@prod,f
  7753  0A06  0831               	movf	??___flmul+1,w
  7754  0A07  1103               	clrz
  7755  0A08  1803               	skipnc
  7756  0A09  3E01               	addlw	1
  7757  0A0A  1903               	skipnz
  7758  0A0B  2A0D               	goto	u3731
  7759  0A0C  07BD               	addwf	___flmul@prod+1,f
  7760  0A0D                     u3731:
  7761  0A0D  0832               	movf	??___flmul+2,w
  7762  0A0E  1103               	clrz
  7763  0A0F  1803               	skipnc
  7764  0A10  3E01               	addlw	1
  7765  0A11  1903               	skipnz
  7766  0A12  2A14               	goto	u3732
  7767  0A13  07BE               	addwf	___flmul@prod+2,f
  7768  0A14                     u3732:
  7769  0A14  0833               	movf	??___flmul+3,w
  7770  0A15  1103               	clrz
  7771  0A16  1803               	skipnc
  7772  0A17  3E01               	addlw	1
  7773  0A18  1903               	skipnz
  7774  0A19  2A1B               	goto	u3733
  7775  0A1A  07BF               	addwf	___flmul@prod+3,f
  7776  0A1B                     u3733:
  7777  0A1B  082A               	movf	___flmul@b+2,w
  7778  0A1C  00B0               	movwf	??___flmul
  7779  0A1D  0830               	movf	??___flmul,w
  7780  0A1E  00F2               	movwf	__Umul8_16@multiplicand
  7781  0A1F  082C               	movf	___flmul@a,w
  7782  0A20  160A  158A  2181  120A  158A  	fcall	__Umul8_16
  7783  0A25  0873               	movf	?__Umul8_16+1,w
  7784  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  7785  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  7786  0A28  00C1               	movwf	___flmul@temp+1
  7787  0A29  0872               	movf	?__Umul8_16,w
  7788  0A2A  00C0               	movwf	___flmul@temp
  7789  0A2B                     l2674:
  7790  0A2B  0840               	movf	___flmul@temp,w
  7791  0A2C  00B0               	movwf	??___flmul
  7792  0A2D  01B1               	clrf	??___flmul+1
  7793  0A2E  01B2               	clrf	??___flmul+2
  7794  0A2F  01B3               	clrf	??___flmul+3
  7795  0A30  0830               	movf	??___flmul,w
  7796  0A31  07B6               	addwf	___flmul@grs,f
  7797  0A32  0831               	movf	??___flmul+1,w
  7798  0A33  1103               	clrz
  7799  0A34  1803               	skipnc
  7800  0A35  3E01               	addlw	1
  7801  0A36  1903               	skipnz
  7802  0A37  2A39               	goto	u3741
  7803  0A38  07B7               	addwf	___flmul@grs+1,f
  7804  0A39                     u3741:
  7805  0A39  0832               	movf	??___flmul+2,w
  7806  0A3A  1103               	clrz
  7807  0A3B  1803               	skipnc
  7808  0A3C  3E01               	addlw	1
  7809  0A3D  1903               	skipnz
  7810  0A3E  2A40               	goto	u3742
  7811  0A3F  07B8               	addwf	___flmul@grs+2,f
  7812  0A40                     u3742:
  7813  0A40  0833               	movf	??___flmul+3,w
  7814  0A41  1103               	clrz
  7815  0A42  1803               	skipnc
  7816  0A43  3E01               	addlw	1
  7817  0A44  1903               	skipnz
  7818  0A45  2A47               	goto	u3743
  7819  0A46  07B9               	addwf	___flmul@grs+3,f
  7820  0A47                     u3743:
  7821  0A47                     l2676:
  7822  0A47  0841               	movf	___flmul@temp+1,w
  7823  0A48  00B0               	movwf	??___flmul
  7824  0A49  01B1               	clrf	??___flmul+1
  7825  0A4A  01B2               	clrf	??___flmul+2
  7826  0A4B  01B3               	clrf	??___flmul+3
  7827  0A4C  0830               	movf	??___flmul,w
  7828  0A4D  07BC               	addwf	___flmul@prod,f
  7829  0A4E  0831               	movf	??___flmul+1,w
  7830  0A4F  1103               	clrz
  7831  0A50  1803               	skipnc
  7832  0A51  3E01               	addlw	1
  7833  0A52  1903               	skipnz
  7834  0A53  2A55               	goto	u3751
  7835  0A54  07BD               	addwf	___flmul@prod+1,f
  7836  0A55                     u3751:
  7837  0A55  0832               	movf	??___flmul+2,w
  7838  0A56  1103               	clrz
  7839  0A57  1803               	skipnc
  7840  0A58  3E01               	addlw	1
  7841  0A59  1903               	skipnz
  7842  0A5A  2A5C               	goto	u3752
  7843  0A5B  07BE               	addwf	___flmul@prod+2,f
  7844  0A5C                     u3752:
  7845  0A5C  0833               	movf	??___flmul+3,w
  7846  0A5D  1103               	clrz
  7847  0A5E  1803               	skipnc
  7848  0A5F  3E01               	addlw	1
  7849  0A60  1903               	skipnz
  7850  0A61  2A63               	goto	u3753
  7851  0A62  07BF               	addwf	___flmul@prod+3,f
  7852  0A63                     u3753:
  7853  0A63                     l2678:
  7854  0A63  3008               	movlw	8
  7855  0A64  00B0               	movwf	??___flmul
  7856  0A65                     u3765:
  7857  0A65  1003               	clrc
  7858  0A66  0DB6               	rlf	___flmul@grs,f
  7859  0A67  0DB7               	rlf	___flmul@grs+1,f
  7860  0A68  0DB8               	rlf	___flmul@grs+2,f
  7861  0A69  0DB9               	rlf	___flmul@grs+3,f
  7862  0A6A  0BB0               	decfsz	??___flmul,f
  7863  0A6B  2A65               	goto	u3765
  7864  0A6C                     l2680:
  7865  0A6C  0829               	movf	___flmul@b+1,w
  7866  0A6D  00B0               	movwf	??___flmul
  7867  0A6E  0830               	movf	??___flmul,w
  7868  0A6F  00F2               	movwf	__Umul8_16@multiplicand
  7869  0A70  082C               	movf	___flmul@a,w
  7870  0A71  160A  158A  2181  120A  158A  	fcall	__Umul8_16
  7871  0A76  0873               	movf	?__Umul8_16+1,w
  7872  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  7873  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  7874  0A79  00C1               	movwf	___flmul@temp+1
  7875  0A7A  0872               	movf	?__Umul8_16,w
  7876  0A7B  00C0               	movwf	___flmul@temp
  7877  0A7C                     l2682:
  7878  0A7C  0840               	movf	___flmul@temp,w
  7879  0A7D  00B0               	movwf	??___flmul
  7880  0A7E  0841               	movf	___flmul@temp+1,w
  7881  0A7F  00B1               	movwf	??___flmul+1
  7882  0A80  01B2               	clrf	??___flmul+2
  7883  0A81  01B3               	clrf	??___flmul+3
  7884  0A82  0830               	movf	??___flmul,w
  7885  0A83  07B6               	addwf	___flmul@grs,f
  7886  0A84  0831               	movf	??___flmul+1,w
  7887  0A85  1103               	clrz
  7888  0A86  1803               	skipnc
  7889  0A87  3E01               	addlw	1
  7890  0A88  1903               	skipnz
  7891  0A89  2A8B               	goto	u3771
  7892  0A8A  07B7               	addwf	___flmul@grs+1,f
  7893  0A8B                     u3771:
  7894  0A8B  0832               	movf	??___flmul+2,w
  7895  0A8C  1103               	clrz
  7896  0A8D  1803               	skipnc
  7897  0A8E  3E01               	addlw	1
  7898  0A8F  1903               	skipnz
  7899  0A90  2A92               	goto	u3772
  7900  0A91  07B8               	addwf	___flmul@grs+2,f
  7901  0A92                     u3772:
  7902  0A92  0833               	movf	??___flmul+3,w
  7903  0A93  1103               	clrz
  7904  0A94  1803               	skipnc
  7905  0A95  3E01               	addlw	1
  7906  0A96  1903               	skipnz
  7907  0A97  2A99               	goto	u3773
  7908  0A98  07B9               	addwf	___flmul@grs+3,f
  7909  0A99                     u3773:
  7910  0A99                     l2684:
  7911  0A99  0828               	movf	___flmul@b,w
  7912  0A9A  00B0               	movwf	??___flmul
  7913  0A9B  0830               	movf	??___flmul,w
  7914  0A9C  00F2               	movwf	__Umul8_16@multiplicand
  7915  0A9D  082D               	movf	___flmul@a+1,w
  7916  0A9E  160A  158A  2181  120A  158A  	fcall	__Umul8_16
  7917  0AA3  0873               	movf	?__Umul8_16+1,w
  7918  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  7919  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  7920  0AA6  00C1               	movwf	___flmul@temp+1
  7921  0AA7  0872               	movf	?__Umul8_16,w
  7922  0AA8  00C0               	movwf	___flmul@temp
  7923  0AA9                     l2686:
  7924  0AA9  0840               	movf	___flmul@temp,w
  7925  0AAA  00B0               	movwf	??___flmul
  7926  0AAB  0841               	movf	___flmul@temp+1,w
  7927  0AAC  00B1               	movwf	??___flmul+1
  7928  0AAD  01B2               	clrf	??___flmul+2
  7929  0AAE  01B3               	clrf	??___flmul+3
  7930  0AAF  0830               	movf	??___flmul,w
  7931  0AB0  07B6               	addwf	___flmul@grs,f
  7932  0AB1  0831               	movf	??___flmul+1,w
  7933  0AB2  1103               	clrz
  7934  0AB3  1803               	skipnc
  7935  0AB4  3E01               	addlw	1
  7936  0AB5  1903               	skipnz
  7937  0AB6  2AB8               	goto	u3781
  7938  0AB7  07B7               	addwf	___flmul@grs+1,f
  7939  0AB8                     u3781:
  7940  0AB8  0832               	movf	??___flmul+2,w
  7941  0AB9  1103               	clrz
  7942  0ABA  1803               	skipnc
  7943  0ABB  3E01               	addlw	1
  7944  0ABC  1903               	skipnz
  7945  0ABD  2ABF               	goto	u3782
  7946  0ABE  07B8               	addwf	___flmul@grs+2,f
  7947  0ABF                     u3782:
  7948  0ABF  0833               	movf	??___flmul+3,w
  7949  0AC0  1103               	clrz
  7950  0AC1  1803               	skipnc
  7951  0AC2  3E01               	addlw	1
  7952  0AC3  1903               	skipnz
  7953  0AC4  2AC6               	goto	u3783
  7954  0AC5  07B9               	addwf	___flmul@grs+3,f
  7955  0AC6                     u3783:
  7956  0AC6                     l2688:
  7957  0AC6  3008               	movlw	8
  7958  0AC7  00B0               	movwf	??___flmul
  7959  0AC8                     u3795:
  7960  0AC8  1003               	clrc
  7961  0AC9  0DB6               	rlf	___flmul@grs,f
  7962  0ACA  0DB7               	rlf	___flmul@grs+1,f
  7963  0ACB  0DB8               	rlf	___flmul@grs+2,f
  7964  0ACC  0DB9               	rlf	___flmul@grs+3,f
  7965  0ACD  0BB0               	decfsz	??___flmul,f
  7966  0ACE  2AC8               	goto	u3795
  7967  0ACF  0828               	movf	___flmul@b,w
  7968  0AD0  00B0               	movwf	??___flmul
  7969  0AD1  0830               	movf	??___flmul,w
  7970  0AD2  00F2               	movwf	__Umul8_16@multiplicand
  7971  0AD3  082C               	movf	___flmul@a,w
  7972  0AD4  160A  158A  2181  120A  158A  	fcall	__Umul8_16
  7973  0AD9  0873               	movf	?__Umul8_16+1,w
  7974  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  7975  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  7976  0ADC  00C1               	movwf	___flmul@temp+1
  7977  0ADD  0872               	movf	?__Umul8_16,w
  7978  0ADE  00C0               	movwf	___flmul@temp
  7979  0ADF                     l2690:
  7980  0ADF  0840               	movf	___flmul@temp,w
  7981  0AE0  00B0               	movwf	??___flmul
  7982  0AE1  0841               	movf	___flmul@temp+1,w
  7983  0AE2  00B1               	movwf	??___flmul+1
  7984  0AE3  01B2               	clrf	??___flmul+2
  7985  0AE4  01B3               	clrf	??___flmul+3
  7986  0AE5  0830               	movf	??___flmul,w
  7987  0AE6  07B6               	addwf	___flmul@grs,f
  7988  0AE7  0831               	movf	??___flmul+1,w
  7989  0AE8  1103               	clrz
  7990  0AE9  1803               	skipnc
  7991  0AEA  3E01               	addlw	1
  7992  0AEB  1903               	skipnz
  7993  0AEC  2AEE               	goto	u3801
  7994  0AED  07B7               	addwf	___flmul@grs+1,f
  7995  0AEE                     u3801:
  7996  0AEE  0832               	movf	??___flmul+2,w
  7997  0AEF  1103               	clrz
  7998  0AF0  1803               	skipnc
  7999  0AF1  3E01               	addlw	1
  8000  0AF2  1903               	skipnz
  8001  0AF3  2AF5               	goto	u3802
  8002  0AF4  07B8               	addwf	___flmul@grs+2,f
  8003  0AF5                     u3802:
  8004  0AF5  0833               	movf	??___flmul+3,w
  8005  0AF6  1103               	clrz
  8006  0AF7  1803               	skipnc
  8007  0AF8  3E01               	addlw	1
  8008  0AF9  1903               	skipnz
  8009  0AFA  2AFC               	goto	u3803
  8010  0AFB  07B9               	addwf	___flmul@grs+3,f
  8011  0AFC                     u3803:
  8012  0AFC                     l2692:
  8013  0AFC  0829               	movf	___flmul@b+1,w
  8014  0AFD  00B0               	movwf	??___flmul
  8015  0AFE  0830               	movf	??___flmul,w
  8016  0AFF  00F2               	movwf	__Umul8_16@multiplicand
  8017  0B00  082E               	movf	___flmul@a+2,w
  8018  0B01  160A  158A  2181  120A  158A  	fcall	__Umul8_16
  8019  0B06  0873               	movf	?__Umul8_16+1,w
  8020  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  8021  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  8022  0B09  00C1               	movwf	___flmul@temp+1
  8023  0B0A  0872               	movf	?__Umul8_16,w
  8024  0B0B  00C0               	movwf	___flmul@temp
  8025  0B0C  0840               	movf	___flmul@temp,w
  8026  0B0D  00B0               	movwf	??___flmul
  8027  0B0E  0841               	movf	___flmul@temp+1,w
  8028  0B0F  00B1               	movwf	??___flmul+1
  8029  0B10  01B2               	clrf	??___flmul+2
  8030  0B11  01B3               	clrf	??___flmul+3
  8031  0B12  0830               	movf	??___flmul,w
  8032  0B13  07BC               	addwf	___flmul@prod,f
  8033  0B14  0831               	movf	??___flmul+1,w
  8034  0B15  1103               	clrz
  8035  0B16  1803               	skipnc
  8036  0B17  3E01               	addlw	1
  8037  0B18  1903               	skipnz
  8038  0B19  2B1B               	goto	u3811
  8039  0B1A  07BD               	addwf	___flmul@prod+1,f
  8040  0B1B                     u3811:
  8041  0B1B  0832               	movf	??___flmul+2,w
  8042  0B1C  1103               	clrz
  8043  0B1D  1803               	skipnc
  8044  0B1E  3E01               	addlw	1
  8045  0B1F  1903               	skipnz
  8046  0B20  2B22               	goto	u3812
  8047  0B21  07BE               	addwf	___flmul@prod+2,f
  8048  0B22                     u3812:
  8049  0B22  0833               	movf	??___flmul+3,w
  8050  0B23  1103               	clrz
  8051  0B24  1803               	skipnc
  8052  0B25  3E01               	addlw	1
  8053  0B26  1903               	skipnz
  8054  0B27  2B29               	goto	u3813
  8055  0B28  07BF               	addwf	___flmul@prod+3,f
  8056  0B29                     u3813:
  8057  0B29                     l2694:
  8058  0B29  082A               	movf	___flmul@b+2,w
  8059  0B2A  00B0               	movwf	??___flmul
  8060  0B2B  0830               	movf	??___flmul,w
  8061  0B2C  00F2               	movwf	__Umul8_16@multiplicand
  8062  0B2D  082D               	movf	___flmul@a+1,w
  8063  0B2E  160A  158A  2181  120A  158A  	fcall	__Umul8_16
  8064  0B33  0873               	movf	?__Umul8_16+1,w
  8065  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  8066  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  8067  0B36  00C1               	movwf	___flmul@temp+1
  8068  0B37  0872               	movf	?__Umul8_16,w
  8069  0B38  00C0               	movwf	___flmul@temp
  8070  0B39                     l2696:
  8071  0B39  0840               	movf	___flmul@temp,w
  8072  0B3A  00B0               	movwf	??___flmul
  8073  0B3B  0841               	movf	___flmul@temp+1,w
  8074  0B3C  00B1               	movwf	??___flmul+1
  8075  0B3D  01B2               	clrf	??___flmul+2
  8076  0B3E  01B3               	clrf	??___flmul+3
  8077  0B3F  0830               	movf	??___flmul,w
  8078  0B40  07BC               	addwf	___flmul@prod,f
  8079  0B41  0831               	movf	??___flmul+1,w
  8080  0B42  1103               	clrz
  8081  0B43  1803               	skipnc
  8082  0B44  3E01               	addlw	1
  8083  0B45  1903               	skipnz
  8084  0B46  2B48               	goto	u3821
  8085  0B47  07BD               	addwf	___flmul@prod+1,f
  8086  0B48                     u3821:
  8087  0B48  0832               	movf	??___flmul+2,w
  8088  0B49  1103               	clrz
  8089  0B4A  1803               	skipnc
  8090  0B4B  3E01               	addlw	1
  8091  0B4C  1903               	skipnz
  8092  0B4D  2B4F               	goto	u3822
  8093  0B4E  07BE               	addwf	___flmul@prod+2,f
  8094  0B4F                     u3822:
  8095  0B4F  0833               	movf	??___flmul+3,w
  8096  0B50  1103               	clrz
  8097  0B51  1803               	skipnc
  8098  0B52  3E01               	addlw	1
  8099  0B53  1903               	skipnz
  8100  0B54  2B56               	goto	u3823
  8101  0B55  07BF               	addwf	___flmul@prod+3,f
  8102  0B56                     u3823:
  8103  0B56  082A               	movf	___flmul@b+2,w
  8104  0B57  00B0               	movwf	??___flmul
  8105  0B58  0830               	movf	??___flmul,w
  8106  0B59  00F2               	movwf	__Umul8_16@multiplicand
  8107  0B5A  082E               	movf	___flmul@a+2,w
  8108  0B5B  160A  158A  2181  120A  158A  	fcall	__Umul8_16
  8109  0B60  0873               	movf	?__Umul8_16+1,w
  8110  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8111  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8112  0B63  00C1               	movwf	___flmul@temp+1
  8113  0B64  0872               	movf	?__Umul8_16,w
  8114  0B65  00C0               	movwf	___flmul@temp
  8115  0B66                     l2698:
  8116  0B66  0840               	movf	___flmul@temp,w
  8117  0B67  00B0               	movwf	??___flmul
  8118  0B68  0841               	movf	___flmul@temp+1,w
  8119  0B69  00B1               	movwf	??___flmul+1
  8120  0B6A  01B2               	clrf	??___flmul+2
  8121  0B6B  01B3               	clrf	??___flmul+3
  8122  0B6C  3008               	movlw	8
  8123  0B6D                     u3835:
  8124  0B6D  1003               	clrc
  8125  0B6E  0DB0               	rlf	??___flmul,f
  8126  0B6F  0DB1               	rlf	??___flmul+1,f
  8127  0B70  0DB2               	rlf	??___flmul+2,f
  8128  0B71  0DB3               	rlf	??___flmul+3,f
  8129  0B72                     u3830:
  8130  0B72  3EFF               	addlw	-1
  8131  0B73  1D03               	skipz
  8132  0B74  2B6D               	goto	u3835
  8133  0B75  0830               	movf	??___flmul,w
  8134  0B76  07BC               	addwf	___flmul@prod,f
  8135  0B77  0831               	movf	??___flmul+1,w
  8136  0B78  1103               	clrz
  8137  0B79  1803               	skipnc
  8138  0B7A  3E01               	addlw	1
  8139  0B7B  1903               	skipnz
  8140  0B7C  2B7E               	goto	u3841
  8141  0B7D  07BD               	addwf	___flmul@prod+1,f
  8142  0B7E                     u3841:
  8143  0B7E  0832               	movf	??___flmul+2,w
  8144  0B7F  1103               	clrz
  8145  0B80  1803               	skipnc
  8146  0B81  3E01               	addlw	1
  8147  0B82  1903               	skipnz
  8148  0B83  2B85               	goto	u3842
  8149  0B84  07BE               	addwf	___flmul@prod+2,f
  8150  0B85                     u3842:
  8151  0B85  0833               	movf	??___flmul+3,w
  8152  0B86  1103               	clrz
  8153  0B87  1803               	skipnc
  8154  0B88  3E01               	addlw	1
  8155  0B89  1903               	skipnz
  8156  0B8A  2B8C               	goto	u3843
  8157  0B8B  07BF               	addwf	___flmul@prod+3,f
  8158  0B8C                     u3843:
  8159  0B8C                     l2700:
  8160  0B8C  0836               	movf	___flmul@grs,w
  8161  0B8D  00B0               	movwf	??___flmul
  8162  0B8E  0837               	movf	___flmul@grs+1,w
  8163  0B8F  00B1               	movwf	??___flmul+1
  8164  0B90  0838               	movf	___flmul@grs+2,w
  8165  0B91  00B2               	movwf	??___flmul+2
  8166  0B92  0839               	movf	___flmul@grs+3,w
  8167  0B93  00B3               	movwf	??___flmul+3
  8168  0B94  3018               	movlw	24
  8169  0B95                     u3855:
  8170  0B95  1003               	clrc
  8171  0B96  0CB3               	rrf	??___flmul+3,f
  8172  0B97  0CB2               	rrf	??___flmul+2,f
  8173  0B98  0CB1               	rrf	??___flmul+1,f
  8174  0B99  0CB0               	rrf	??___flmul,f
  8175  0B9A                     u3850:
  8176  0B9A  3EFF               	addlw	-1
  8177  0B9B  1D03               	skipz
  8178  0B9C  2B95               	goto	u3855
  8179  0B9D  0830               	movf	??___flmul,w
  8180  0B9E  07BC               	addwf	___flmul@prod,f
  8181  0B9F  0831               	movf	??___flmul+1,w
  8182  0BA0  1103               	clrz
  8183  0BA1  1803               	skipnc
  8184  0BA2  3E01               	addlw	1
  8185  0BA3  1903               	skipnz
  8186  0BA4  2BA6               	goto	u3861
  8187  0BA5  07BD               	addwf	___flmul@prod+1,f
  8188  0BA6                     u3861:
  8189  0BA6  0832               	movf	??___flmul+2,w
  8190  0BA7  1103               	clrz
  8191  0BA8  1803               	skipnc
  8192  0BA9  3E01               	addlw	1
  8193  0BAA  1903               	skipnz
  8194  0BAB  2BAD               	goto	u3862
  8195  0BAC  07BE               	addwf	___flmul@prod+2,f
  8196  0BAD                     u3862:
  8197  0BAD  0833               	movf	??___flmul+3,w
  8198  0BAE  1103               	clrz
  8199  0BAF  1803               	skipnc
  8200  0BB0  3E01               	addlw	1
  8201  0BB1  1903               	skipnz
  8202  0BB2  2BB4               	goto	u3863
  8203  0BB3  07BF               	addwf	___flmul@prod+3,f
  8204  0BB4                     u3863:
  8205  0BB4                     l2702:
  8206  0BB4  3008               	movlw	8
  8207  0BB5  00B0               	movwf	??___flmul
  8208  0BB6                     u3875:
  8209  0BB6  1003               	clrc
  8210  0BB7  0DB6               	rlf	___flmul@grs,f
  8211  0BB8  0DB7               	rlf	___flmul@grs+1,f
  8212  0BB9  0DB8               	rlf	___flmul@grs+2,f
  8213  0BBA  0DB9               	rlf	___flmul@grs+3,f
  8214  0BBB  0BB0               	decfsz	??___flmul,f
  8215  0BBC  2BB6               	goto	u3875
  8216  0BBD                     l2704:
  8217  0BBD  083B               	movf	___flmul@bexp,w
  8218  0BBE  073A               	addwf	___flmul@aexp,w
  8219  0BBF  00B0               	movwf	??___flmul
  8220  0BC0  01B1               	clrf	??___flmul+1
  8221  0BC1  0DB1               	rlf	??___flmul+1,f
  8222  0BC2  0830               	movf	??___flmul,w
  8223  0BC3  3E82               	addlw	130
  8224  0BC4  00C0               	movwf	___flmul@temp
  8225  0BC5  0831               	movf	??___flmul+1,w
  8226  0BC6  1803               	skipnc
  8227  0BC7  3E01               	addlw	1
  8228  0BC8  3EFF               	addlw	255
  8229  0BC9  00C1               	movwf	___flmul@temp+1
  8230  0BCA  2BE8               	goto	l2716
  8231  0BCB                     l2706:
  8232  0BCB  3001               	movlw	1
  8233  0BCC  00B0               	movwf	??___flmul
  8234  0BCD                     u3885:
  8235  0BCD  1003               	clrc
  8236  0BCE  0DBC               	rlf	___flmul@prod,f
  8237  0BCF  0DBD               	rlf	___flmul@prod+1,f
  8238  0BD0  0DBE               	rlf	___flmul@prod+2,f
  8239  0BD1  0DBF               	rlf	___flmul@prod+3,f
  8240  0BD2  0BB0               	decfsz	??___flmul,f
  8241  0BD3  2BCD               	goto	u3885
  8242  0BD4                     l2708:
  8243  0BD4  1FB9               	btfss	___flmul@grs+3,7
  8244  0BD5  2BD7               	goto	u3891
  8245  0BD6  2BD8               	goto	u3890
  8246  0BD7                     u3891:
  8247  0BD7  2BD9               	goto	l2712
  8248  0BD8                     u3890:
  8249  0BD8                     l2710:
  8250  0BD8  143C               	bsf	___flmul@prod,0
  8251  0BD9                     l2712:
  8252  0BD9  3001               	movlw	1
  8253  0BDA  00B0               	movwf	??___flmul
  8254  0BDB                     u3905:
  8255  0BDB  1003               	clrc
  8256  0BDC  0DB6               	rlf	___flmul@grs,f
  8257  0BDD  0DB7               	rlf	___flmul@grs+1,f
  8258  0BDE  0DB8               	rlf	___flmul@grs+2,f
  8259  0BDF  0DB9               	rlf	___flmul@grs+3,f
  8260  0BE0  0BB0               	decfsz	??___flmul,f
  8261  0BE1  2BDB               	goto	u3905
  8262  0BE2                     l2714:
  8263  0BE2  30FF               	movlw	255
  8264  0BE3  07C0               	addwf	___flmul@temp,f
  8265  0BE4  1803               	skipnc
  8266  0BE5  0AC1               	incf	___flmul@temp+1,f
  8267  0BE6  30FF               	movlw	255
  8268  0BE7  07C1               	addwf	___flmul@temp+1,f
  8269  0BE8                     l2716:
  8270  0BE8  1FBE               	btfss	___flmul@prod+2,7
  8271  0BE9  2BEB               	goto	u3911
  8272  0BEA  2BEC               	goto	u3910
  8273  0BEB                     u3911:
  8274  0BEB  2BCB               	goto	l2706
  8275  0BEC                     u3910:
  8276  0BEC                     l2718:
  8277  0BEC  01BA               	clrf	___flmul@aexp
  8278  0BED                     l2720:
  8279  0BED  1FB9               	btfss	___flmul@grs+3,7
  8280  0BEE  2BF0               	goto	u3921
  8281  0BEF  2BF1               	goto	u3920
  8282  0BF0                     u3921:
  8283  0BF0  2C0D               	goto	l2728
  8284  0BF1                     u3920:
  8285  0BF1                     l2722:
  8286  0BF1  30FF               	movlw	255
  8287  0BF2  0536               	andwf	___flmul@grs,w
  8288  0BF3  00B0               	movwf	??___flmul
  8289  0BF4  30FF               	movlw	255
  8290  0BF5  0537               	andwf	___flmul@grs+1,w
  8291  0BF6  00B1               	movwf	??___flmul+1
  8292  0BF7  30FF               	movlw	255
  8293  0BF8  0538               	andwf	___flmul@grs+2,w
  8294  0BF9  00B2               	movwf	??___flmul+2
  8295  0BFA  307F               	movlw	127
  8296  0BFB  0539               	andwf	___flmul@grs+3,w
  8297  0BFC  00B3               	movwf	??___flmul+3
  8298  0BFD  0833               	movf	??___flmul+3,w
  8299  0BFE  0432               	iorwf	??___flmul+2,w
  8300  0BFF  0431               	iorwf	??___flmul+1,w
  8301  0C00  0430               	iorwf	??___flmul,w
  8302  0C01  1903               	skipnz
  8303  0C02  2C04               	goto	u3931
  8304  0C03  2C05               	goto	u3930
  8305  0C04                     u3931:
  8306  0C04  2C08               	goto	l786
  8307  0C05                     u3930:
  8308  0C05                     l2724:
  8309  0C05  01BA               	clrf	___flmul@aexp
  8310  0C06  0ABA               	incf	___flmul@aexp,f
  8311  0C07  2C0D               	goto	l2728
  8312  0C08                     l786:
  8313  0C08  1C3C               	btfss	___flmul@prod,0
  8314  0C09  2C0B               	goto	u3941
  8315  0C0A  2C0C               	goto	u3940
  8316  0C0B                     u3941:
  8317  0C0B  2C0D               	goto	l2728
  8318  0C0C                     u3940:
  8319  0C0C  2C05               	goto	l2724
  8320  0C0D                     l2728:
  8321  0C0D  083A               	movf	___flmul@aexp,w
  8322  0C0E  1903               	btfsc	3,2
  8323  0C0F  2C11               	goto	u3951
  8324  0C10  2C12               	goto	u3950
  8325  0C11                     u3951:
  8326  0C11  2C43               	goto	l2738
  8327  0C12                     u3950:
  8328  0C12                     l2730:
  8329  0C12  3001               	movlw	1
  8330  0C13  07BC               	addwf	___flmul@prod,f
  8331  0C14  3000               	movlw	0
  8332  0C15  1803               	skipnc
  8333  0C16  3001               	movlw	1
  8334  0C17  07BD               	addwf	___flmul@prod+1,f
  8335  0C18  3000               	movlw	0
  8336  0C19  1803               	skipnc
  8337  0C1A  3001               	movlw	1
  8338  0C1B  07BE               	addwf	___flmul@prod+2,f
  8339  0C1C  3000               	movlw	0
  8340  0C1D  1803               	skipnc
  8341  0C1E  3001               	movlw	1
  8342  0C1F  07BF               	addwf	___flmul@prod+3,f
  8343  0C20                     l2732:
  8344  0C20  1C3F               	btfss	___flmul@prod+3,0
  8345  0C21  2C23               	goto	u3961
  8346  0C22  2C24               	goto	u3960
  8347  0C23                     u3961:
  8348  0C23  2C43               	goto	l2738
  8349  0C24                     u3960:
  8350  0C24                     l2734:
  8351  0C24  083C               	movf	___flmul@prod,w
  8352  0C25  00B0               	movwf	??___flmul
  8353  0C26  083D               	movf	___flmul@prod+1,w
  8354  0C27  00B1               	movwf	??___flmul+1
  8355  0C28  083E               	movf	___flmul@prod+2,w
  8356  0C29  00B2               	movwf	??___flmul+2
  8357  0C2A  083F               	movf	___flmul@prod+3,w
  8358  0C2B  00B3               	movwf	??___flmul+3
  8359  0C2C  3001               	movlw	1
  8360  0C2D  00B4               	movwf	??___flmul+4
  8361  0C2E                     u3975:
  8362  0C2E  0D33               	rlf	??___flmul+3,w
  8363  0C2F  0CB3               	rrf	??___flmul+3,f
  8364  0C30  0CB2               	rrf	??___flmul+2,f
  8365  0C31  0CB1               	rrf	??___flmul+1,f
  8366  0C32  0CB0               	rrf	??___flmul,f
  8367  0C33                     u3970:
  8368  0C33  0BB4               	decfsz	??___flmul+4,f
  8369  0C34  2C2E               	goto	u3975
  8370  0C35  0833               	movf	??___flmul+3,w
  8371  0C36  00BF               	movwf	___flmul@prod+3
  8372  0C37  0832               	movf	??___flmul+2,w
  8373  0C38  00BE               	movwf	___flmul@prod+2
  8374  0C39  0831               	movf	??___flmul+1,w
  8375  0C3A  00BD               	movwf	___flmul@prod+1
  8376  0C3B  0830               	movf	??___flmul,w
  8377  0C3C  00BC               	movwf	___flmul@prod
  8378  0C3D                     l2736:
  8379  0C3D  3001               	movlw	1
  8380  0C3E  07C0               	addwf	___flmul@temp,f
  8381  0C3F  1803               	skipnc
  8382  0C40  0AC1               	incf	___flmul@temp+1,f
  8383  0C41  3000               	movlw	0
  8384  0C42  07C1               	addwf	___flmul@temp+1,f
  8385  0C43                     l2738:
  8386  0C43  0841               	movf	___flmul@temp+1,w
  8387  0C44  3A80               	xorlw	128
  8388  0C45  00FF               	movwf	btemp+1
  8389  0C46  3080               	movlw	128
  8390  0C47  027F               	subwf	btemp+1,w
  8391  0C48  1D03               	skipz
  8392  0C49  2C4C               	goto	u3985
  8393  0C4A  30FF               	movlw	255
  8394  0C4B  0240               	subwf	___flmul@temp,w
  8395  0C4C                     u3985:
  8396  0C4C  1C03               	skipc
  8397  0C4D  2C4F               	goto	u3981
  8398  0C4E  2C50               	goto	u3980
  8399  0C4F                     u3981:
  8400  0C4F  2C5B               	goto	l2742
  8401  0C50                     u3980:
  8402  0C50                     l2740:
  8403  0C50  307F               	movlw	127
  8404  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  8405  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  8406  0C53  00BF               	movwf	___flmul@prod+3
  8407  0C54  3080               	movlw	128
  8408  0C55  00BE               	movwf	___flmul@prod+2
  8409  0C56  3000               	movlw	0
  8410  0C57  00BD               	movwf	___flmul@prod+1
  8411  0C58  3000               	movlw	0
  8412  0C59  00BC               	movwf	___flmul@prod
  8413  0C5A  2C90               	goto	l792
  8414  0C5B                     l2742:
  8415  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  8416  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  8417  0C5D  0841               	movf	___flmul@temp+1,w
  8418  0C5E  3A80               	xorlw	128
  8419  0C5F  00FF               	movwf	btemp+1
  8420  0C60  3080               	movlw	128
  8421  0C61  027F               	subwf	btemp+1,w
  8422  0C62  1D03               	skipz
  8423  0C63  2C66               	goto	u3995
  8424  0C64  3001               	movlw	1
  8425  0C65  0240               	subwf	___flmul@temp,w
  8426  0C66                     u3995:
  8427  0C66  1803               	skipnc
  8428  0C67  2C69               	goto	u3991
  8429  0C68  2C6A               	goto	u3990
  8430  0C69                     u3991:
  8431  0C69  2C76               	goto	l2748
  8432  0C6A                     u3990:
  8433  0C6A                     l2744:
  8434  0C6A  3000               	movlw	0
  8435  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  8436  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  8437  0C6D  00BF               	movwf	___flmul@prod+3
  8438  0C6E  3000               	movlw	0
  8439  0C6F  00BE               	movwf	___flmul@prod+2
  8440  0C70  3000               	movlw	0
  8441  0C71  00BD               	movwf	___flmul@prod+1
  8442  0C72  3000               	movlw	0
  8443  0C73  00BC               	movwf	___flmul@prod
  8444  0C74                     l2746:
  8445  0C74  01B5               	clrf	___flmul@sign
  8446  0C75  2C90               	goto	l792
  8447  0C76                     l2748:
  8448  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  8449  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  8450  0C78  0840               	movf	___flmul@temp,w
  8451  0C79  00B0               	movwf	??___flmul
  8452  0C7A  0830               	movf	??___flmul,w
  8453  0C7B  00BB               	movwf	___flmul@bexp
  8454  0C7C  30FF               	movlw	255
  8455  0C7D  05BC               	andwf	___flmul@prod,f
  8456  0C7E  30FF               	movlw	255
  8457  0C7F  05BD               	andwf	___flmul@prod+1,f
  8458  0C80  307F               	movlw	127
  8459  0C81  05BE               	andwf	___flmul@prod+2,f
  8460  0C82  3000               	movlw	0
  8461  0C83  05BF               	andwf	___flmul@prod+3,f
  8462  0C84                     l2750:
  8463  0C84  1C3B               	btfss	___flmul@bexp,0
  8464  0C85  2C87               	goto	u4001
  8465  0C86  2C88               	goto	u4000
  8466  0C87                     u4001:
  8467  0C87  2C89               	goto	l2754
  8468  0C88                     u4000:
  8469  0C88                     l2752:
  8470  0C88  17BE               	bsf	___flmul@prod+2,7
  8471  0C89                     l2754:
  8472  0C89  083B               	movf	___flmul@bexp,w
  8473  0C8A  00B0               	movwf	??___flmul
  8474  0C8B  1003               	clrc
  8475  0C8C  0C30               	rrf	??___flmul,w
  8476  0C8D  00B1               	movwf	??___flmul+1
  8477  0C8E  0831               	movf	??___flmul+1,w
  8478  0C8F  00BF               	movwf	___flmul@prod+3
  8479  0C90                     l792:
  8480  0C90  0835               	movf	___flmul@sign,w
  8481  0C91  00B0               	movwf	??___flmul
  8482  0C92  0830               	movf	??___flmul,w
  8483  0C93  04BF               	iorwf	___flmul@prod+3,f
  8484  0C94                     l2756:
  8485  0C94  083F               	movf	___flmul@prod+3,w
  8486  0C95  00AB               	movwf	?___flmul+3
  8487  0C96  083E               	movf	___flmul@prod+2,w
  8488  0C97  00AA               	movwf	?___flmul+2
  8489  0C98  083D               	movf	___flmul@prod+1,w
  8490  0C99  00A9               	movwf	?___flmul+1
  8491  0C9A  083C               	movf	___flmul@prod,w
  8492  0C9B  00A8               	movwf	?___flmul
  8493  0C9C                     l780:
  8494  0C9C  0008               	return
  8495  0C9D                     __end_of___flmul:
  8496                           
  8497                           	psect	text25
  8498  1981                     __ptext25:	
  8499 ;; *************** function __Umul8_16 *****************
  8500 ;; Defined at:
  8501 ;;		line 4 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;  multiplier      1    wreg     unsigned char 
  8504 ;;  multiplicand    1    2[COMMON] unsigned char 
  8505 ;; Auto vars:     Size  Location     Type
  8506 ;;  multiplier      1   10[COMMON] unsigned char 
  8507 ;;  word_mpld       2    8[COMMON] unsigned int 
  8508 ;;  product         2    6[COMMON] unsigned int 
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  2    2[COMMON] unsigned int 
  8511 ;; Registers used:
  8512 ;;		wreg, status,2, status,0
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8518 ;;      Params:         2       0       0       0       0
  8519 ;;      Locals:         5       0       0       0       0
  8520 ;;      Temps:          2       0       0       0       0
  8521 ;;      Totals:         9       0       0       0       0
  8522 ;;Total ram usage:        9 bytes
  8523 ;; Hardware stack levels used:    1
  8524 ;; Hardware stack levels required when called:    1
  8525 ;; This function calls:
  8526 ;;		Nothing
  8527 ;; This function is called by:
  8528 ;;		___flmul
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           
  8532                           
  8533                           ;psect for function __Umul8_16
  8534  1981                     __Umul8_16:
  8535                           
  8536                           ;incstack = 0
  8537                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8538                           ;__Umul8_16@multiplier stored from wreg
  8539  1981  00FA               	movwf	__Umul8_16@multiplier
  8540  1982                     l2280:
  8541  1982  01F6               	clrf	__Umul8_16@product
  8542  1983  01F7               	clrf	__Umul8_16@product+1
  8543  1984                     l2282:
  8544  1984  0872               	movf	__Umul8_16@multiplicand,w
  8545  1985  00F4               	movwf	??__Umul8_16
  8546  1986  01F5               	clrf	??__Umul8_16+1
  8547  1987  0874               	movf	??__Umul8_16,w
  8548  1988  00F8               	movwf	__Umul8_16@word_mpld
  8549  1989  0875               	movf	??__Umul8_16+1,w
  8550  198A  00F9               	movwf	__Umul8_16@word_mpld+1
  8551  198B                     l2284:
  8552  198B  1C7A               	btfss	__Umul8_16@multiplier,0
  8553  198C  298E               	goto	u2831
  8554  198D  298F               	goto	u2830
  8555  198E                     u2831:
  8556  198E  2995               	goto	l799
  8557  198F                     u2830:
  8558  198F                     l2286:
  8559  198F  0878               	movf	__Umul8_16@word_mpld,w
  8560  1990  07F6               	addwf	__Umul8_16@product,f
  8561  1991  1803               	skipnc
  8562  1992  0AF7               	incf	__Umul8_16@product+1,f
  8563  1993  0879               	movf	__Umul8_16@word_mpld+1,w
  8564  1994  07F7               	addwf	__Umul8_16@product+1,f
  8565  1995                     l799:
  8566  1995  3001               	movlw	1
  8567  1996                     u2845:
  8568  1996  1003               	clrc
  8569  1997  0DF8               	rlf	__Umul8_16@word_mpld,f
  8570  1998  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  8571  1999  3EFF               	addlw	-1
  8572  199A  1D03               	skipz
  8573  199B  2996               	goto	u2845
  8574  199C  1003               	clrc
  8575  199D  0CFA               	rrf	__Umul8_16@multiplier,f
  8576  199E                     l2288:
  8577  199E  087A               	movf	__Umul8_16@multiplier,w
  8578  199F  1D03               	btfss	3,2
  8579  19A0  29A2               	goto	u2851
  8580  19A1  29A3               	goto	u2850
  8581  19A2                     u2851:
  8582  19A2  298B               	goto	l2284
  8583  19A3                     u2850:
  8584  19A3                     l2290:
  8585  19A3  0877               	movf	__Umul8_16@product+1,w
  8586  19A4  00F3               	movwf	?__Umul8_16+1
  8587  19A5  0876               	movf	__Umul8_16@product,w
  8588  19A6  00F2               	movwf	?__Umul8_16
  8589  19A7                     l801:
  8590  19A7  0008               	return
  8591  19A8                     __end_of__Umul8_16:
  8592                           
  8593                           	psect	text26
  8594  1CA1                     __ptext26:	
  8595 ;; *************** function _ADC_Select *****************
  8596 ;; Defined at:
  8597 ;;		line 19 in file "ADC.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;  a               1    wreg     unsigned char 
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;  a               1    4[COMMON] unsigned char 
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  1    wreg      void 
  8604 ;; Registers used:
  8605 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8611 ;;      Params:         0       0       0       0       0
  8612 ;;      Locals:         1       0       0       0       0
  8613 ;;      Temps:          2       0       0       0       0
  8614 ;;      Totals:         3       0       0       0       0
  8615 ;;Total ram usage:        3 bytes
  8616 ;; Hardware stack levels used:    1
  8617 ;; Hardware stack levels required when called:    1
  8618 ;; This function calls:
  8619 ;;		Nothing
  8620 ;; This function is called by:
  8621 ;;		_LeerADC
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           
  8626                           ;psect for function _ADC_Select
  8627  1CA1                     _ADC_Select:
  8628                           
  8629                           ;incstack = 0
  8630                           ; Regs used in _ADC_Select: [wreg-fsr0h+status,2+status,0]
  8631                           ;ADC_Select@a stored from wreg
  8632  1CA1  00F4               	movwf	ADC_Select@a
  8633  1CA2                     l2760:
  8634                           
  8635                           ;ADC.c: 20:     switch(a){
  8636  1CA2  2D08               	goto	l2794
  8637  1CA3                     l2762:
  8638  1CA3  30C3               	movlw	-61
  8639  1CA4  1283               	bcf	3,5	;RP0=0, select bank0
  8640  1CA5  1303               	bcf	3,6	;RP1=0, select bank0
  8641  1CA6  059F               	andwf	31,f	;volatile
  8642  1CA7  2D3C               	goto	l152
  8643  1CA8                     l2764:
  8644  1CA8  1283               	bcf	3,5	;RP0=0, select bank0
  8645  1CA9  1303               	bcf	3,6	;RP1=0, select bank0
  8646  1CAA  081F               	movf	31,w	;volatile
  8647  1CAB  39C3               	andlw	-61
  8648  1CAC  3804               	iorlw	4
  8649  1CAD  009F               	movwf	31	;volatile
  8650  1CAE  2D3C               	goto	l152
  8651  1CAF                     l2766:
  8652  1CAF  1283               	bcf	3,5	;RP0=0, select bank0
  8653  1CB0  1303               	bcf	3,6	;RP1=0, select bank0
  8654  1CB1  081F               	movf	31,w	;volatile
  8655  1CB2  39C3               	andlw	-61
  8656  1CB3  3808               	iorlw	8
  8657  1CB4  009F               	movwf	31	;volatile
  8658  1CB5  2D3C               	goto	l152
  8659  1CB6                     l2768:
  8660  1CB6  1283               	bcf	3,5	;RP0=0, select bank0
  8661  1CB7  1303               	bcf	3,6	;RP1=0, select bank0
  8662  1CB8  081F               	movf	31,w	;volatile
  8663  1CB9  39C3               	andlw	-61
  8664  1CBA  380C               	iorlw	12
  8665  1CBB  009F               	movwf	31	;volatile
  8666  1CBC  2D3C               	goto	l152
  8667  1CBD                     l2770:
  8668  1CBD  1283               	bcf	3,5	;RP0=0, select bank0
  8669  1CBE  1303               	bcf	3,6	;RP1=0, select bank0
  8670  1CBF  081F               	movf	31,w	;volatile
  8671  1CC0  39C3               	andlw	-61
  8672  1CC1  3810               	iorlw	16
  8673  1CC2  009F               	movwf	31	;volatile
  8674  1CC3  2D3C               	goto	l152
  8675  1CC4                     l2772:
  8676  1CC4  1283               	bcf	3,5	;RP0=0, select bank0
  8677  1CC5  1303               	bcf	3,6	;RP1=0, select bank0
  8678  1CC6  081F               	movf	31,w	;volatile
  8679  1CC7  39C3               	andlw	-61
  8680  1CC8  3814               	iorlw	20
  8681  1CC9  009F               	movwf	31	;volatile
  8682  1CCA  2D3C               	goto	l152
  8683  1CCB                     l2774:
  8684  1CCB  1283               	bcf	3,5	;RP0=0, select bank0
  8685  1CCC  1303               	bcf	3,6	;RP1=0, select bank0
  8686  1CCD  081F               	movf	31,w	;volatile
  8687  1CCE  39C3               	andlw	-61
  8688  1CCF  3818               	iorlw	24
  8689  1CD0  009F               	movwf	31	;volatile
  8690  1CD1  2D3C               	goto	l152
  8691  1CD2                     l2776:
  8692  1CD2  1283               	bcf	3,5	;RP0=0, select bank0
  8693  1CD3  1303               	bcf	3,6	;RP1=0, select bank0
  8694  1CD4  081F               	movf	31,w	;volatile
  8695  1CD5  39C3               	andlw	-61
  8696  1CD6  381C               	iorlw	28
  8697  1CD7  009F               	movwf	31	;volatile
  8698  1CD8  2D3C               	goto	l152
  8699  1CD9                     l2778:
  8700  1CD9  1283               	bcf	3,5	;RP0=0, select bank0
  8701  1CDA  1303               	bcf	3,6	;RP1=0, select bank0
  8702  1CDB  081F               	movf	31,w	;volatile
  8703  1CDC  39C3               	andlw	-61
  8704  1CDD  3820               	iorlw	32
  8705  1CDE  009F               	movwf	31	;volatile
  8706  1CDF  2D3C               	goto	l152
  8707  1CE0                     l2780:
  8708  1CE0  1283               	bcf	3,5	;RP0=0, select bank0
  8709  1CE1  1303               	bcf	3,6	;RP1=0, select bank0
  8710  1CE2  081F               	movf	31,w	;volatile
  8711  1CE3  39C3               	andlw	-61
  8712  1CE4  3824               	iorlw	36
  8713  1CE5  009F               	movwf	31	;volatile
  8714  1CE6  2D3C               	goto	l152
  8715  1CE7                     l2782:
  8716  1CE7  1283               	bcf	3,5	;RP0=0, select bank0
  8717  1CE8  1303               	bcf	3,6	;RP1=0, select bank0
  8718  1CE9  081F               	movf	31,w	;volatile
  8719  1CEA  39C3               	andlw	-61
  8720  1CEB  3828               	iorlw	40
  8721  1CEC  009F               	movwf	31	;volatile
  8722  1CED  2D3C               	goto	l152
  8723  1CEE                     l2784:
  8724  1CEE  1283               	bcf	3,5	;RP0=0, select bank0
  8725  1CEF  1303               	bcf	3,6	;RP1=0, select bank0
  8726  1CF0  081F               	movf	31,w	;volatile
  8727  1CF1  39C3               	andlw	-61
  8728  1CF2  382C               	iorlw	44
  8729  1CF3  009F               	movwf	31	;volatile
  8730  1CF4  2D3C               	goto	l152
  8731  1CF5                     l2786:
  8732  1CF5  1283               	bcf	3,5	;RP0=0, select bank0
  8733  1CF6  1303               	bcf	3,6	;RP1=0, select bank0
  8734  1CF7  081F               	movf	31,w	;volatile
  8735  1CF8  39C3               	andlw	-61
  8736  1CF9  3830               	iorlw	48
  8737  1CFA  009F               	movwf	31	;volatile
  8738  1CFB  2D3C               	goto	l152
  8739  1CFC                     l2788:
  8740  1CFC  1283               	bcf	3,5	;RP0=0, select bank0
  8741  1CFD  1303               	bcf	3,6	;RP1=0, select bank0
  8742  1CFE  081F               	movf	31,w	;volatile
  8743  1CFF  39C3               	andlw	-61
  8744  1D00  3834               	iorlw	52
  8745  1D01  009F               	movwf	31	;volatile
  8746  1D02  2D3C               	goto	l152
  8747  1D03                     l2790:
  8748  1D03  30C3               	movlw	-61
  8749  1D04  1283               	bcf	3,5	;RP0=0, select bank0
  8750  1D05  1303               	bcf	3,6	;RP1=0, select bank0
  8751  1D06  059F               	andwf	31,f	;volatile
  8752  1D07  2D3C               	goto	l152
  8753  1D08                     l2794:
  8754  1D08  0874               	movf	ADC_Select@a,w
  8755  1D09  00F2               	movwf	??_ADC_Select
  8756  1D0A  01F3               	clrf	??_ADC_Select+1
  8757                           
  8758                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8759                           ; Switch size 1, requested type "simple"
  8760                           ; Number of cases is 1, Range of values is 0 to 0
  8761                           ; switch strategies available:
  8762                           ; Name         Instructions Cycles
  8763                           ; simple_byte            4     3 (average)
  8764                           ; direct_byte           11     8 (fixed)
  8765                           ; jumptable            260     6 (fixed)
  8766                           ;	Chosen strategy is simple_byte
  8767  1D0B  0873               	movf	??_ADC_Select+1,w
  8768  1D0C  3A00               	xorlw	0	; case 0
  8769  1D0D  1903               	skipnz
  8770  1D0E  2D10               	goto	l4110
  8771  1D0F  2D03               	goto	l2790
  8772  1D10                     l4110:
  8773                           
  8774                           ; Switch size 1, requested type "simple"
  8775                           ; Number of cases is 14, Range of values is 0 to 13
  8776                           ; switch strategies available:
  8777                           ; Name         Instructions Cycles
  8778                           ; simple_byte           43    22 (average)
  8779                           ; direct_byte           50     8 (fixed)
  8780                           ; jumptable            260     6 (fixed)
  8781                           ;	Chosen strategy is simple_byte
  8782  1D10  0872               	movf	??_ADC_Select,w
  8783  1D11  3A00               	xorlw	0	; case 0
  8784  1D12  1903               	skipnz
  8785  1D13  2CA3               	goto	l2762
  8786  1D14  3A01               	xorlw	1	; case 1
  8787  1D15  1903               	skipnz
  8788  1D16  2CA8               	goto	l2764
  8789  1D17  3A03               	xorlw	3	; case 2
  8790  1D18  1903               	skipnz
  8791  1D19  2CAF               	goto	l2766
  8792  1D1A  3A01               	xorlw	1	; case 3
  8793  1D1B  1903               	skipnz
  8794  1D1C  2CB6               	goto	l2768
  8795  1D1D  3A07               	xorlw	7	; case 4
  8796  1D1E  1903               	skipnz
  8797  1D1F  2CBD               	goto	l2770
  8798  1D20  3A01               	xorlw	1	; case 5
  8799  1D21  1903               	skipnz
  8800  1D22  2CC4               	goto	l2772
  8801  1D23  3A03               	xorlw	3	; case 6
  8802  1D24  1903               	skipnz
  8803  1D25  2CCB               	goto	l2774
  8804  1D26  3A01               	xorlw	1	; case 7
  8805  1D27  1903               	skipnz
  8806  1D28  2CD2               	goto	l2776
  8807  1D29  3A0F               	xorlw	15	; case 8
  8808  1D2A  1903               	skipnz
  8809  1D2B  2CD9               	goto	l2778
  8810  1D2C  3A01               	xorlw	1	; case 9
  8811  1D2D  1903               	skipnz
  8812  1D2E  2CE0               	goto	l2780
  8813  1D2F  3A03               	xorlw	3	; case 10
  8814  1D30  1903               	skipnz
  8815  1D31  2CE7               	goto	l2782
  8816  1D32  3A01               	xorlw	1	; case 11
  8817  1D33  1903               	skipnz
  8818  1D34  2CEE               	goto	l2784
  8819  1D35  3A07               	xorlw	7	; case 12
  8820  1D36  1903               	skipnz
  8821  1D37  2CF5               	goto	l2786
  8822  1D38  3A01               	xorlw	1	; case 13
  8823  1D39  1903               	skipnz
  8824  1D3A  2CFC               	goto	l2788
  8825  1D3B  2D03               	goto	l2790
  8826  1D3C                     l152:
  8827  1D3C  0008               	return
  8828  1D3D                     __end_of_ADC_Select:
  8829                           
  8830                           	psect	text27
  8831  18AD                     __ptext27:	
  8832 ;; *************** function _LCD_clear *****************
  8833 ;; Defined at:
  8834 ;;		line 40 in file "LCD.c"
  8835 ;; Parameters:    Size  Location     Type
  8836 ;;		None
  8837 ;; Auto vars:     Size  Location     Type
  8838 ;;		None
  8839 ;; Return value:  Size  Location     Type
  8840 ;;                  1    wreg      void 
  8841 ;; Registers used:
  8842 ;;		wreg, status,2, status,0, pclath, cstack
  8843 ;; Tracked objects:
  8844 ;;		On entry : 0/0
  8845 ;;		On exit  : 0/0
  8846 ;;		Unchanged: 0/0
  8847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8848 ;;      Params:         0       0       0       0       0
  8849 ;;      Locals:         0       0       0       0       0
  8850 ;;      Temps:          0       0       0       0       0
  8851 ;;      Totals:         0       0       0       0       0
  8852 ;;Total ram usage:        0 bytes
  8853 ;; Hardware stack levels used:    1
  8854 ;; Hardware stack levels required when called:    3
  8855 ;; This function calls:
  8856 ;;		_LCD_Command
  8857 ;; This function is called by:
  8858 ;;		_main
  8859 ;; This function uses a non-reentrant model
  8860 ;;
  8861                           
  8862                           
  8863                           ;psect for function _LCD_clear
  8864  18AD                     _LCD_clear:
  8865  18AD                     l3724:	
  8866                           ;incstack = 0
  8867                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  8868                           
  8869                           
  8870                           ;LCD.c: 41:     LCD_Command(0);
  8871  18AD  3000               	movlw	0
  8872  18AE  160A  158A  20F2  160A  158A  	fcall	_LCD_Command
  8873                           
  8874                           ;LCD.c: 42:     LCD_Command(1);
  8875  18B3  3001               	movlw	1
  8876  18B4  160A  158A  20F2  160A  158A  	fcall	_LCD_Command
  8877  18B9                     l102:
  8878  18B9  0008               	return
  8879  18BA                     __end_of_LCD_clear:
  8880                           
  8881                           	psect	text28
  8882  19A8                     __ptext28:	
  8883 ;; *************** function _LCD_Write_String *****************
  8884 ;; Defined at:
  8885 ;;		line 76 in file "LCD.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;  a               2    5[COMMON] PTR unsigned char 
  8888 ;;		 -> STR_2(15), pantalla(20), 
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;  i               2    0[BANK0 ] int 
  8891 ;; Return value:  Size  Location     Type
  8892 ;;                  1    wreg      void 
  8893 ;; Registers used:
  8894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8895 ;; Tracked objects:
  8896 ;;		On entry : 0/0
  8897 ;;		On exit  : 0/0
  8898 ;;		Unchanged: 0/0
  8899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8900 ;;      Params:         2       0       0       0       0
  8901 ;;      Locals:         0       2       0       0       0
  8902 ;;      Temps:          3       0       0       0       0
  8903 ;;      Totals:         5       2       0       0       0
  8904 ;;Total ram usage:        7 bytes
  8905 ;; Hardware stack levels used:    1
  8906 ;; Hardware stack levels required when called:    3
  8907 ;; This function calls:
  8908 ;;		_LCD_Write_Char
  8909 ;; This function is called by:
  8910 ;;		_main
  8911 ;; This function uses a non-reentrant model
  8912 ;;
  8913                           
  8914                           
  8915                           ;psect for function _LCD_Write_String
  8916  19A8                     _LCD_Write_String:
  8917  19A8                     l4032:	
  8918                           ;incstack = 0
  8919                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8920                           
  8921                           
  8922                           ;LCD.c: 77:  int i;;LCD.c: 78:  for(i=0;a[i]!='\0';i++)
  8923  19A8  1283               	bcf	3,5	;RP0=0, select bank0
  8924  19A9  1303               	bcf	3,6	;RP1=0, select bank0
  8925  19AA  01A0               	clrf	LCD_Write_String@i
  8926  19AB  01A1               	clrf	LCD_Write_String@i+1
  8927  19AC  29D1               	goto	l4038
  8928  19AD                     l4034:
  8929                           
  8930                           ;LCD.c: 79:     LCD_Write_Char(a[i]);
  8931  19AD  0820               	movf	LCD_Write_String@i,w
  8932  19AE  0775               	addwf	LCD_Write_String@a,w
  8933  19AF  00F8               	movwf	??_LCD_Write_String+1
  8934  19B0  0876               	movf	LCD_Write_String@a+1,w
  8935  19B1  00F7               	movwf	??_LCD_Write_String
  8936  19B2  1803               	skipnc
  8937  19B3  0AF7               	incf	??_LCD_Write_String,f
  8938  19B4  1FA0               	btfss	LCD_Write_String@i,7
  8939  19B5  29B7               	goto	u6410
  8940  19B6  03F7               	decf	??_LCD_Write_String,f
  8941  19B7                     u6410:
  8942  19B7  0877               	movf	??_LCD_Write_String,w
  8943  19B8  00F9               	movwf	??_LCD_Write_String+2
  8944  19B9  0879               	movf	??_LCD_Write_String+2,w
  8945  19BA  1283               	bcf	3,5	;RP0=0, select bank0
  8946  19BB  1303               	bcf	3,6	;RP1=0, select bank0
  8947  19BC  00FF               	movwf	btemp+1
  8948  19BD  0878               	movf	??_LCD_Write_String+1,w
  8949  19BE  0084               	movwf	4
  8950  19BF  120A  118A  2700  160A  158A  	fcall	stringtab
  8951  19C4  160A  158A  20D9  160A  158A  	fcall	_LCD_Write_Char
  8952  19C9                     l4036:
  8953  19C9  3001               	movlw	1
  8954  19CA  1283               	bcf	3,5	;RP0=0, select bank0
  8955  19CB  1303               	bcf	3,6	;RP1=0, select bank0
  8956  19CC  07A0               	addwf	LCD_Write_String@i,f
  8957  19CD  1803               	skipnc
  8958  19CE  0AA1               	incf	LCD_Write_String@i+1,f
  8959  19CF  3000               	movlw	0
  8960  19D0  07A1               	addwf	LCD_Write_String@i+1,f
  8961  19D1                     l4038:
  8962  19D1  0820               	movf	LCD_Write_String@i,w
  8963  19D2  0775               	addwf	LCD_Write_String@a,w
  8964  19D3  00F8               	movwf	??_LCD_Write_String+1
  8965  19D4  0876               	movf	LCD_Write_String@a+1,w
  8966  19D5  00F7               	movwf	??_LCD_Write_String
  8967  19D6  1803               	skipnc
  8968  19D7  0AF7               	incf	??_LCD_Write_String,f
  8969  19D8  1FA0               	btfss	LCD_Write_String@i,7
  8970  19D9  29DB               	goto	u6420
  8971  19DA  03F7               	decf	??_LCD_Write_String,f
  8972  19DB                     u6420:
  8973  19DB  0877               	movf	??_LCD_Write_String,w
  8974  19DC  00F9               	movwf	??_LCD_Write_String+2
  8975  19DD  0879               	movf	??_LCD_Write_String+2,w
  8976  19DE  1283               	bcf	3,5	;RP0=0, select bank0
  8977  19DF  1303               	bcf	3,6	;RP1=0, select bank0
  8978  19E0  00FF               	movwf	btemp+1
  8979  19E1  0878               	movf	??_LCD_Write_String+1,w
  8980  19E2  0084               	movwf	4
  8981  19E3  120A  118A  2700  160A  158A  	fcall	stringtab
  8982  19E8  3A00               	xorlw	0
  8983  19E9  1D03               	skipz
  8984  19EA  29EC               	goto	u6431
  8985  19EB  29ED               	goto	u6430
  8986  19EC                     u6431:
  8987  19EC  29AD               	goto	l4034
  8988  19ED                     u6430:
  8989  19ED                     l117:
  8990  19ED  0008               	return
  8991  19EE                     __end_of_LCD_Write_String:
  8992                           
  8993                           	psect	text29
  8994  18D9                     __ptext29:	
  8995 ;; *************** function _LCD_Write_Char *****************
  8996 ;; Defined at:
  8997 ;;		line 9 in file "LCD.c"
  8998 ;; Parameters:    Size  Location     Type
  8999 ;;  a               1    wreg     unsigned char 
  9000 ;; Auto vars:     Size  Location     Type
  9001 ;;  a               1    4[COMMON] unsigned char 
  9002 ;; Return value:  Size  Location     Type
  9003 ;;                  1    wreg      void 
  9004 ;; Registers used:
  9005 ;;		wreg, status,2, status,0, pclath, cstack
  9006 ;; Tracked objects:
  9007 ;;		On entry : 0/0
  9008 ;;		On exit  : 0/0
  9009 ;;		Unchanged: 0/0
  9010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9011 ;;      Params:         0       0       0       0       0
  9012 ;;      Locals:         1       0       0       0       0
  9013 ;;      Temps:          1       0       0       0       0
  9014 ;;      Totals:         2       0       0       0       0
  9015 ;;Total ram usage:        2 bytes
  9016 ;; Hardware stack levels used:    1
  9017 ;; Hardware stack levels required when called:    2
  9018 ;; This function calls:
  9019 ;;		_LCD_Port
  9020 ;; This function is called by:
  9021 ;;		_LCD_Write_String
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           
  9026                           ;psect for function _LCD_Write_Char
  9027  18D9                     _LCD_Write_Char:
  9028                           
  9029                           ;incstack = 0
  9030                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9031                           ;LCD_Write_Char@a stored from wreg
  9032  18D9  00F4               	movwf	LCD_Write_Char@a
  9033  18DA                     l3650:
  9034                           
  9035                           ;LCD.c: 10:     RE0 = 1;
  9036  18DA  1283               	bcf	3,5	;RP0=0, select bank0
  9037  18DB  1303               	bcf	3,6	;RP1=0, select bank0
  9038  18DC  1409               	bsf	9,0	;volatile
  9039  18DD                     l3652:
  9040                           
  9041                           ;LCD.c: 11:     LCD_Port(a);
  9042  18DD  0874               	movf	LCD_Write_Char@a,w
  9043  18DE  160A  118A  2000  160A  158A  	fcall	_LCD_Port
  9044  18E3                     l3654:
  9045                           
  9046                           ;LCD.c: 12:     RE1 = 1;
  9047  18E3  1283               	bcf	3,5	;RP0=0, select bank0
  9048  18E4  1303               	bcf	3,6	;RP1=0, select bank0
  9049  18E5  1489               	bsf	9,1	;volatile
  9050  18E6                     l3656:
  9051                           
  9052                           ;LCD.c: 13:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  9053  18E6  300D               	movlw	13
  9054  18E7  00F3               	movwf	??_LCD_Write_Char
  9055  18E8                     u6467:
  9056  18E8  0BF3               	decfsz	??_LCD_Write_Char,f
  9057  18E9  28E8               	goto	u6467
  9058  18EA                     l3658:
  9059                           
  9060                           ;LCD.c: 14:     RE1 = 0;
  9061  18EA  1283               	bcf	3,5	;RP0=0, select bank0
  9062  18EB  1303               	bcf	3,6	;RP1=0, select bank0
  9063  18EC  1089               	bcf	9,1	;volatile
  9064  18ED                     l3660:
  9065                           
  9066                           ;LCD.c: 15:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  9067  18ED  3003               	movlw	3
  9068  18EE  00F3               	movwf	??_LCD_Write_Char
  9069  18EF                     u6477:
  9070  18EF  0BF3               	decfsz	??_LCD_Write_Char,f
  9071  18F0  28EF               	goto	u6477
  9072  18F1                     l93:
  9073  18F1  0008               	return
  9074  18F2                     __end_of_LCD_Write_Char:
  9075                           
  9076                           	psect	text30
  9077  1938                     __ptext30:	
  9078 ;; *************** function _LCD_Set_Cursor *****************
  9079 ;; Defined at:
  9080 ;;		line 62 in file "LCD.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;  x               1    wreg     unsigned char 
  9083 ;;  y               1    6[COMMON] unsigned char 
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;  x               1    8[COMMON] unsigned char 
  9086 ;;  a               1    9[COMMON] unsigned char 
  9087 ;; Return value:  Size  Location     Type
  9088 ;;                  1    wreg      void 
  9089 ;; Registers used:
  9090 ;;		wreg, status,2, status,0, pclath, cstack
  9091 ;; Tracked objects:
  9092 ;;		On entry : 0/0
  9093 ;;		On exit  : 0/0
  9094 ;;		Unchanged: 0/0
  9095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9096 ;;      Params:         1       0       0       0       0
  9097 ;;      Locals:         2       0       0       0       0
  9098 ;;      Temps:          1       0       0       0       0
  9099 ;;      Totals:         4       0       0       0       0
  9100 ;;Total ram usage:        4 bytes
  9101 ;; Hardware stack levels used:    1
  9102 ;; Hardware stack levels required when called:    3
  9103 ;; This function calls:
  9104 ;;		_LCD_Command
  9105 ;; This function is called by:
  9106 ;;		_main
  9107 ;; This function uses a non-reentrant model
  9108 ;;
  9109                           
  9110                           
  9111                           ;psect for function _LCD_Set_Cursor
  9112  1938                     _LCD_Set_Cursor:
  9113                           
  9114                           ;incstack = 0
  9115                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9116                           ;LCD_Set_Cursor@x stored from wreg
  9117  1938  00F8               	movwf	LCD_Set_Cursor@x
  9118  1939                     l4020:
  9119                           
  9120                           ;LCD.c: 63:  char a;;LCD.c: 64:  if(x == 1)
  9121  1939  0378               	decf	LCD_Set_Cursor@x,w
  9122  193A  1D03               	btfss	3,2
  9123  193B  293D               	goto	u6391
  9124  193C  293E               	goto	u6390
  9125  193D                     u6391:
  9126  193D  294A               	goto	l4026
  9127  193E                     u6390:
  9128  193E                     l4022:
  9129                           
  9130                           ;LCD.c: 65:  {;LCD.c: 66:         a = 0x80 + y;
  9131  193E  0876               	movf	LCD_Set_Cursor@y,w
  9132  193F  3E80               	addlw	128
  9133  1940  00F7               	movwf	??_LCD_Set_Cursor
  9134  1941  0877               	movf	??_LCD_Set_Cursor,w
  9135  1942  00F9               	movwf	LCD_Set_Cursor@a
  9136  1943                     l4024:
  9137                           
  9138                           ;LCD.c: 67:   LCD_Command(a);
  9139  1943  0879               	movf	LCD_Set_Cursor@a,w
  9140  1944  160A  158A  20F2  160A  158A  	fcall	_LCD_Command
  9141                           
  9142                           ;LCD.c: 68:  }
  9143  1949  295B               	goto	l111
  9144  194A                     l4026:
  9145  194A  3002               	movlw	2
  9146  194B  0678               	xorwf	LCD_Set_Cursor@x,w
  9147  194C  1D03               	btfss	3,2
  9148  194D  294F               	goto	u6401
  9149  194E  2950               	goto	u6400
  9150  194F                     u6401:
  9151  194F  295B               	goto	l111
  9152  1950                     u6400:
  9153  1950                     l4028:
  9154                           
  9155                           ;LCD.c: 70:  {;LCD.c: 71:   a = 0xC0 + y;
  9156  1950  0876               	movf	LCD_Set_Cursor@y,w
  9157  1951  3EC0               	addlw	192
  9158  1952  00F7               	movwf	??_LCD_Set_Cursor
  9159  1953  0877               	movf	??_LCD_Set_Cursor,w
  9160  1954  00F9               	movwf	LCD_Set_Cursor@a
  9161  1955                     l4030:
  9162                           
  9163                           ;LCD.c: 72:   LCD_Command(a);
  9164  1955  0879               	movf	LCD_Set_Cursor@a,w
  9165  1956  160A  158A  20F2  160A  158A  	fcall	_LCD_Command
  9166  195B                     l111:
  9167  195B  0008               	return
  9168  195C                     __end_of_LCD_Set_Cursor:
  9169                           
  9170                           	psect	text31
  9171  1A34                     __ptext31:	
  9172 ;; *************** function _LCD_Init *****************
  9173 ;; Defined at:
  9174 ;;		line 45 in file "LCD.c"
  9175 ;; Parameters:    Size  Location     Type
  9176 ;;		None
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;		None
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  1    wreg      void 
  9181 ;; Registers used:
  9182 ;;		wreg, status,2, status,0, pclath, cstack
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9188 ;;      Params:         0       0       0       0       0
  9189 ;;      Locals:         0       0       0       0       0
  9190 ;;      Temps:          2       0       0       0       0
  9191 ;;      Totals:         2       0       0       0       0
  9192 ;;Total ram usage:        2 bytes
  9193 ;; Hardware stack levels used:    1
  9194 ;; Hardware stack levels required when called:    3
  9195 ;; This function calls:
  9196 ;;		_LCD_Command
  9197 ;;		_LCD_Port
  9198 ;; This function is called by:
  9199 ;;		_main
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           
  9204                           ;psect for function _LCD_Init
  9205  1A34                     _LCD_Init:
  9206  1A34                     l3712:	
  9207                           ;incstack = 0
  9208                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9209                           
  9210                           
  9211                           ;LCD.c: 46:     RE0=0;
  9212  1A34  1283               	bcf	3,5	;RP0=0, select bank0
  9213  1A35  1303               	bcf	3,6	;RP1=0, select bank0
  9214  1A36  1009               	bcf	9,0	;volatile
  9215                           
  9216                           ;LCD.c: 47:     RE1=0;
  9217  1A37  1089               	bcf	9,1	;volatile
  9218  1A38                     l3714:
  9219                           
  9220                           ;LCD.c: 48:     LCD_Port(0x00);
  9221  1A38  3000               	movlw	0
  9222  1A39  160A  118A  2000  160A  158A  	fcall	_LCD_Port
  9223  1A3E                     l3716:
  9224                           
  9225                           ;LCD.c: 49:     _delay((unsigned long)((20)*(4000000/4000.0)));
  9226  1A3E  301A               	movlw	26
  9227  1A3F  00F7               	movwf	??_LCD_Init+1
  9228  1A40  30F8               	movlw	248
  9229  1A41  00F6               	movwf	??_LCD_Init
  9230  1A42                     u6487:
  9231  1A42  0BF6               	decfsz	??_LCD_Init,f
  9232  1A43  2A42               	goto	u6487
  9233  1A44  0BF7               	decfsz	??_LCD_Init+1,f
  9234  1A45  2A42               	goto	u6487
  9235  1A46  0000               	nop
  9236  1A47                     l3718:
  9237                           
  9238                           ;LCD.c: 50:     LCD_Command(0x30);
  9239  1A47  3030               	movlw	48
  9240  1A48  160A  158A  20F2  160A  158A  	fcall	_LCD_Command
  9241                           
  9242                           ;LCD.c: 51:     _delay((unsigned long)((5)*(4000000/4000.0)));
  9243  1A4D  3007               	movlw	7
  9244  1A4E  00F7               	movwf	??_LCD_Init+1
  9245  1A4F  307D               	movlw	125
  9246  1A50  00F6               	movwf	??_LCD_Init
  9247  1A51                     u6497:
  9248  1A51  0BF6               	decfsz	??_LCD_Init,f
  9249  1A52  2A51               	goto	u6497
  9250  1A53  0BF7               	decfsz	??_LCD_Init+1,f
  9251  1A54  2A51               	goto	u6497
  9252  1A55                     l3720:
  9253                           
  9254                           ;LCD.c: 52:     LCD_Command(0x30);
  9255  1A55  3030               	movlw	48
  9256  1A56  160A  158A  20F2  160A  158A  	fcall	_LCD_Command
  9257  1A5B                     l3722:
  9258                           
  9259                           ;LCD.c: 53:     _delay((unsigned long)((11)*(4000000/4000.0)));
  9260  1A5B  300F               	movlw	15
  9261  1A5C  00F7               	movwf	??_LCD_Init+1
  9262  1A5D  3047               	movlw	71
  9263  1A5E  00F6               	movwf	??_LCD_Init
  9264  1A5F                     u6507:
  9265  1A5F  0BF6               	decfsz	??_LCD_Init,f
  9266  1A60  2A5F               	goto	u6507
  9267  1A61  0BF7               	decfsz	??_LCD_Init+1,f
  9268  1A62  2A5F               	goto	u6507
  9269  1A63  2A64               	nop2
  9270                           
  9271                           ;LCD.c: 54:     LCD_Command(0x30);
  9272  1A64  3030               	movlw	48
  9273  1A65  160A  158A  20F2  160A  158A  	fcall	_LCD_Command
  9274                           
  9275                           ;LCD.c: 55:     LCD_Command(0x38);
  9276  1A6A  3038               	movlw	56
  9277  1A6B  160A  158A  20F2  160A  158A  	fcall	_LCD_Command
  9278                           
  9279                           ;LCD.c: 56:     LCD_Command(0x0C);
  9280  1A70  300C               	movlw	12
  9281  1A71  160A  158A  20F2  160A  158A  	fcall	_LCD_Command
  9282                           
  9283                           ;LCD.c: 57:     LCD_Command(0x01);
  9284  1A76  3001               	movlw	1
  9285  1A77  160A  158A  20F2  160A  158A  	fcall	_LCD_Command
  9286                           
  9287                           ;LCD.c: 58:     LCD_Command(0x06);
  9288  1A7C  3006               	movlw	6
  9289  1A7D  160A  158A  20F2  160A  158A  	fcall	_LCD_Command
  9290  1A82                     l105:
  9291  1A82  0008               	return
  9292  1A83                     __end_of_LCD_Init:
  9293                           
  9294                           	psect	text32
  9295  18F2                     __ptext32:	
  9296 ;; *************** function _LCD_Command *****************
  9297 ;; Defined at:
  9298 ;;		line 31 in file "LCD.c"
  9299 ;; Parameters:    Size  Location     Type
  9300 ;;  a               1    wreg     unsigned char 
  9301 ;; Auto vars:     Size  Location     Type
  9302 ;;  a               1    5[COMMON] unsigned char 
  9303 ;; Return value:  Size  Location     Type
  9304 ;;                  1    wreg      void 
  9305 ;; Registers used:
  9306 ;;		wreg, status,2, status,0, pclath, cstack
  9307 ;; Tracked objects:
  9308 ;;		On entry : 0/0
  9309 ;;		On exit  : 0/0
  9310 ;;		Unchanged: 0/0
  9311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9312 ;;      Params:         0       0       0       0       0
  9313 ;;      Locals:         1       0       0       0       0
  9314 ;;      Temps:          2       0       0       0       0
  9315 ;;      Totals:         3       0       0       0       0
  9316 ;;Total ram usage:        3 bytes
  9317 ;; Hardware stack levels used:    1
  9318 ;; Hardware stack levels required when called:    2
  9319 ;; This function calls:
  9320 ;;		_LCD_Port
  9321 ;; This function is called by:
  9322 ;;		_LCD_clear
  9323 ;;		_LCD_Init
  9324 ;;		_LCD_Set_Cursor
  9325 ;; This function uses a non-reentrant model
  9326 ;;
  9327                           
  9328                           
  9329                           ;psect for function _LCD_Command
  9330  18F2                     _LCD_Command:
  9331                           
  9332                           ;incstack = 0
  9333                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  9334                           ;LCD_Command@a stored from wreg
  9335  18F2  00F5               	movwf	LCD_Command@a
  9336  18F3                     l3662:
  9337                           
  9338                           ;LCD.c: 32:     RE0=0;
  9339  18F3  1283               	bcf	3,5	;RP0=0, select bank0
  9340  18F4  1303               	bcf	3,6	;RP1=0, select bank0
  9341  18F5  1009               	bcf	9,0	;volatile
  9342  18F6                     l3664:
  9343                           
  9344                           ;LCD.c: 33:     LCD_Port(a);
  9345  18F6  0875               	movf	LCD_Command@a,w
  9346  18F7  160A  118A  2000  160A  158A  	fcall	_LCD_Port
  9347  18FC                     l3666:
  9348                           
  9349                           ;LCD.c: 34:     RE1=1;
  9350  18FC  1283               	bcf	3,5	;RP0=0, select bank0
  9351  18FD  1303               	bcf	3,6	;RP1=0, select bank0
  9352  18FE  1489               	bsf	9,1	;volatile
  9353  18FF                     l3668:
  9354                           
  9355                           ;LCD.c: 35:     _delay((unsigned long)((4)*(4000000/4000.0)));
  9356  18FF  3006               	movlw	6
  9357  1900  00F4               	movwf	??_LCD_Command+1
  9358  1901  3030               	movlw	48
  9359  1902  00F3               	movwf	??_LCD_Command
  9360  1903                     u6517:
  9361  1903  0BF3               	decfsz	??_LCD_Command,f
  9362  1904  2903               	goto	u6517
  9363  1905  0BF4               	decfsz	??_LCD_Command+1,f
  9364  1906  2903               	goto	u6517
  9365  1907  0000               	nop
  9366  1908                     l3670:
  9367                           
  9368                           ;LCD.c: 36:     RE1=0;
  9369  1908  1283               	bcf	3,5	;RP0=0, select bank0
  9370  1909  1303               	bcf	3,6	;RP1=0, select bank0
  9371  190A  1089               	bcf	9,1	;volatile
  9372  190B                     l3672:
  9373                           
  9374                           ;LCD.c: 37:     _delay((unsigned long)((2)*(4000000/4000.0)));
  9375  190B  3003               	movlw	3
  9376  190C  00F4               	movwf	??_LCD_Command+1
  9377  190D  3097               	movlw	151
  9378  190E  00F3               	movwf	??_LCD_Command
  9379  190F                     u6527:
  9380  190F  0BF3               	decfsz	??_LCD_Command,f
  9381  1910  290F               	goto	u6527
  9382  1911  0BF4               	decfsz	??_LCD_Command+1,f
  9383  1912  290F               	goto	u6527
  9384  1913  2914               	nop2
  9385  1914                     l99:
  9386  1914  0008               	return
  9387  1915                     __end_of_LCD_Command:
  9388                           
  9389                           	psect	text33
  9390  1000                     __ptext33:	
  9391 ;; *************** function _LCD_Port *****************
  9392 ;; Defined at:
  9393 ;;		line 18 in file "LCD.c"
  9394 ;; Parameters:    Size  Location     Type
  9395 ;;  a               1    wreg     unsigned char 
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;  a               1    2[COMMON] unsigned char 
  9398 ;; Return value:  Size  Location     Type
  9399 ;;                  1    wreg      void 
  9400 ;; Registers used:
  9401 ;;		wreg
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9407 ;;      Params:         0       0       0       0       0
  9408 ;;      Locals:         1       0       0       0       0
  9409 ;;      Temps:          0       0       0       0       0
  9410 ;;      Totals:         1       0       0       0       0
  9411 ;;Total ram usage:        1 bytes
  9412 ;; Hardware stack levels used:    1
  9413 ;; Hardware stack levels required when called:    1
  9414 ;; This function calls:
  9415 ;;		Nothing
  9416 ;; This function is called by:
  9417 ;;		_LCD_Write_Char
  9418 ;;		_LCD_Command
  9419 ;;		_LCD_Init
  9420 ;; This function uses a non-reentrant model
  9421 ;;
  9422                           
  9423                           
  9424                           ;psect for function _LCD_Port
  9425  1000                     _LCD_Port:
  9426                           
  9427                           ;incstack = 0
  9428                           ; Regs used in _LCD_Port: [wreg]
  9429                           ;LCD_Port@a stored from wreg
  9430  1000  00F2               	movwf	LCD_Port@a
  9431  1001                     l3622:
  9432                           
  9433                           ;LCD.c: 19:     PORTD = a;
  9434  1001  0872               	movf	LCD_Port@a,w
  9435  1002  1283               	bcf	3,5	;RP0=0, select bank0
  9436  1003  1303               	bcf	3,6	;RP1=0, select bank0
  9437  1004  0088               	movwf	8	;volatile
  9438  1005                     l96:
  9439  1005  0008               	return
  9440  1006                     __end_of_LCD_Port:
  9441                           
  9442                           	psect	text34
  9443  1893                     __ptext34:	
  9444 ;; *************** function _ISR *****************
  9445 ;; Defined at:
  9446 ;;		line 61 in file "lab3_main.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;		None
  9449 ;; Auto vars:     Size  Location     Type
  9450 ;;		None
  9451 ;; Return value:  Size  Location     Type
  9452 ;;                  1    wreg      void 
  9453 ;; Registers used:
  9454 ;;		None
  9455 ;; Tracked objects:
  9456 ;;		On entry : 0/0
  9457 ;;		On exit  : 0/0
  9458 ;;		Unchanged: 0/0
  9459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9460 ;;      Params:         0       0       0       0       0
  9461 ;;      Locals:         0       0       0       0       0
  9462 ;;      Temps:          2       0       0       0       0
  9463 ;;      Totals:         2       0       0       0       0
  9464 ;;Total ram usage:        2 bytes
  9465 ;; Hardware stack levels used:    1
  9466 ;; This function calls:
  9467 ;;		Nothing
  9468 ;; This function is called by:
  9469 ;;		Interrupt level 1
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473                           
  9474                           ;psect for function _ISR
  9475  1893                     _ISR:
  9476  1893                     i1l63:
  9477  1893  0871               	movf	??_ISR+1,w
  9478  1894  008A               	movwf	10
  9479  1895  0E70               	swapf	??_ISR,w
  9480  1896  0083               	movwf	3
  9481  1897  0EFE               	swapf	btemp,f
  9482  1898  0E7E               	swapf	btemp,w
  9483  1899  0009               	retfie
  9484  189A                     __end_of_ISR:
  9485  007E                     btemp	set	126	;btemp
  9486  007E                     wtemp0	set	126
  9487                           
  9488                           	psect	intentry
  9489  0004                     __pintentry:	
  9490                           ;incstack = 0
  9491                           ; Regs used in _ISR: []
  9492                           
  9493  0004                     interrupt_function:
  9494  007E                     saved_w	set	btemp
  9495  0004  00FE               	movwf	btemp
  9496  0005  0E03               	swapf	3,w
  9497  0006  00F0               	movwf	??_ISR
  9498  0007  080A               	movf	10,w
  9499  0008  00F1               	movwf	??_ISR+1
  9500  0009  160A  158A  2893   	ljmp	_ISR
  9501                           
  9502                           	psect	config
  9503                           
  9504                           ;Config register CONFIG1 @ 0x2007
  9505                           ;	Oscillator Selection bits
  9506                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  9507                           ;	Watchdog Timer Enable bit
  9508                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9509                           ;	Power-up Timer Enable bit
  9510                           ;	PWRTE = OFF, PWRT disabled
  9511                           ;	RE3/MCLR pin function select bit
  9512                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9513                           ;	Code Protection bit
  9514                           ;	CP = OFF, Program memory code protection is disabled
  9515                           ;	Data Code Protection bit
  9516                           ;	CPD = OFF, Data memory code protection is disabled
  9517                           ;	Brown Out Reset Selection bits
  9518                           ;	BOREN = ON, BOR enabled
  9519                           ;	Internal External Switchover bit
  9520                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9521                           ;	Fail-Safe Clock Monitor Enabled bit
  9522                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9523                           ;	Low Voltage Programming Enable bit
  9524                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9525                           ;	In-Circuit Debugger Mode bit
  9526                           ;	DEBUG = 0x1, unprogrammed default
  9527  2007                     	org	8199
  9528  2007  23D1               	dw	9169
  9529                           
  9530                           ;Config register CONFIG2 @ 0x2008
  9531                           ;	Brown-out Reset Selection bit
  9532                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9533                           ;	Flash Program Memory Self Write Enable bits
  9534                           ;	WRT = OFF, Write protection off
  9535  2008                     	org	8200
  9536  2008  3FFF               	dw	16383
  9537                           
  9538                           	psect	text1_split_1
  9539  001D                     u5990:
  9540  001D                     l3822:
  9541  001D  1683               	bsf	3,5	;RP0=1, select bank1
  9542  001E  1303               	bcf	3,6	;RP1=0, select bank1
  9543  001F  0849               	movf	(sprintf@fval+3)^(0+128),w
  9544  0020  00F5               	movwf	___fleq@ff1+3
  9545  0021  0848               	movf	(sprintf@fval+2)^(0+128),w
  9546  0022  00F4               	movwf	___fleq@ff1+2
  9547  0023  0847               	movf	(sprintf@fval+1)^(0+128),w
  9548  0024  00F3               	movwf	___fleq@ff1+1
  9549  0025  0846               	movf	sprintf@fval^(0+128),w
  9550  0026  00F2               	movwf	___fleq@ff1
  9551  0027  3000               	movlw	0
  9552  0028  00F9               	movwf	___fleq@ff2+3
  9553  0029  3000               	movlw	0
  9554  002A  00F8               	movwf	___fleq@ff2+2
  9555  002B  3000               	movlw	0
  9556  002C  00F7               	movwf	___fleq@ff2+1
  9557  002D  3000               	movlw	0
  9558  002E  00F6               	movwf	___fleq@ff2
  9559  002F  160A  158A  2283  120A  118A  	fcall	___fleq
  9560  0034  1803               	btfsc	3,0
  9561  0035  2837               	goto	u6001
  9562  0036  2838               	goto	u6000
  9563  0037                     u6001:
  9564  0037  28E0               	goto	l3842
  9565  0038                     u6000:
  9566  0038                     l3824:
  9567  0038  1683               	bsf	3,5	;RP0=1, select bank1
  9568  0039  1303               	bcf	3,6	;RP1=0, select bank1
  9569  003A  0849               	movf	(sprintf@fval+3)^(0+128),w
  9570  003B  1283               	bcf	3,5	;RP0=0, select bank0
  9571  003C  1303               	bcf	3,6	;RP1=0, select bank0
  9572  003D  00D8               	movwf	___fltol@f1+3
  9573  003E  1683               	bsf	3,5	;RP0=1, select bank1
  9574  003F  1303               	bcf	3,6	;RP1=0, select bank1
  9575  0040  0848               	movf	(sprintf@fval+2)^(0+128),w
  9576  0041  1283               	bcf	3,5	;RP0=0, select bank0
  9577  0042  1303               	bcf	3,6	;RP1=0, select bank0
  9578  0043  00D7               	movwf	___fltol@f1+2
  9579  0044  1683               	bsf	3,5	;RP0=1, select bank1
  9580  0045  1303               	bcf	3,6	;RP1=0, select bank1
  9581  0046  0847               	movf	(sprintf@fval+1)^(0+128),w
  9582  0047  1283               	bcf	3,5	;RP0=0, select bank0
  9583  0048  1303               	bcf	3,6	;RP1=0, select bank0
  9584  0049  00D6               	movwf	___fltol@f1+1
  9585  004A  1683               	bsf	3,5	;RP0=1, select bank1
  9586  004B  1303               	bcf	3,6	;RP1=0, select bank1
  9587  004C  0846               	movf	sprintf@fval^(0+128),w
  9588  004D  1283               	bcf	3,5	;RP0=0, select bank0
  9589  004E  1303               	bcf	3,6	;RP1=0, select bank0
  9590  004F  00D5               	movwf	___fltol@f1
  9591  0050  120A  158A  2002  120A  118A  	fcall	___fltol
  9592  0055  1283               	bcf	3,5	;RP0=0, select bank0
  9593  0056  1303               	bcf	3,6	;RP1=0, select bank0
  9594  0057  0858               	movf	?___fltol+3,w
  9595  0058  0457               	iorwf	?___fltol+2,w
  9596  0059  0456               	iorwf	?___fltol+1,w
  9597  005A  0455               	iorwf	?___fltol,w
  9598  005B  1D03               	skipz
  9599  005C  285E               	goto	u6011
  9600  005D  285F               	goto	u6010
  9601  005E                     u6011:
  9602  005E  28E0               	goto	l3842
  9603  005F                     u6010:
  9604  005F                     l3826:
  9605  005F  1683               	bsf	3,5	;RP0=1, select bank1
  9606  0060  1303               	bcf	3,6	;RP1=0, select bank1
  9607  0061  0845               	movf	(sprintf@eexp+1)^(0+128),w
  9608  0062  3A80               	xorlw	128
  9609  0063  00FF               	movwf	btemp+1
  9610  0064  3080               	movlw	128
  9611  0065  027F               	subwf	btemp+1,w
  9612  0066  1D03               	skipz
  9613  0067  286A               	goto	u6025
  9614  0068  3002               	movlw	2
  9615  0069  0244               	subwf	sprintf@eexp^(0+128),w
  9616  006A                     u6025:
  9617  006A  1C03               	skipc
  9618  006B  286D               	goto	u6021
  9619  006C  286E               	goto	u6020
  9620  006D                     u6021:
  9621  006D  28E0               	goto	l3842
  9622  006E                     u6020:
  9623  006E                     l3828:
  9624                           
  9625                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmpval.integ < 4.
      +                          294967296){
  9626  006E  1683               	bsf	3,5	;RP0=1, select bank1
  9627  006F  1303               	bcf	3,6	;RP1=0, select bank1
  9628  0070  083F               	movf	(sprintf@tmpval+3)^(0+128),w
  9629  0071  00F5               	movwf	___flge@ff1+3
  9630  0072  083E               	movf	(sprintf@tmpval+2)^(0+128),w
  9631  0073  00F4               	movwf	___flge@ff1+2
  9632  0074  083D               	movf	(sprintf@tmpval+1)^(0+128),w
  9633  0075  00F3               	movwf	___flge@ff1+1
  9634  0076  083C               	movf	sprintf@tmpval^(0+128),w
  9635  0077  00F2               	movwf	___flge@ff1
  9636  0078  3040               	movlw	64
  9637  0079  00F9               	movwf	___flge@ff2+3
  9638  007A  3089               	movlw	137
  9639  007B  00F8               	movwf	___flge@ff2+2
  9640  007C  3070               	movlw	112
  9641  007D  00F7               	movwf	___flge@ff2+1
  9642  007E  305F               	movlw	95
  9643  007F  00F6               	movwf	___flge@ff2
  9644  0080  160A  158A  253D  120A  118A  	fcall	___flge
  9645  0085  1803               	btfsc	3,0
  9646  0086  2888               	goto	u6031
  9647  0087  2889               	goto	u6030
  9648  0088                     u6031:
  9649  0088  2892               	goto	l3832
  9650  0089                     u6030:
  9651  0089                     l3830:
  9652                           
  9653                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp -= (sizeof dpo
      +                          wers/sizeof dpowers[0])-1;
  9654  0089  30F7               	movlw	247
  9655  008A  1683               	bsf	3,5	;RP0=1, select bank1
  9656  008B  1303               	bcf	3,6	;RP1=0, select bank1
  9657  008C  07C4               	addwf	sprintf@eexp^(0+128),f
  9658  008D  1803               	skipnc
  9659  008E  0AC5               	incf	(sprintf@eexp+1)^(0+128),f
  9660  008F  30FF               	movlw	255
  9661  0090  07C5               	addwf	(sprintf@eexp+1)^(0+128),f
  9662                           
  9663                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9664  0091  289A               	goto	l3834
  9665  0092                     l3832:
  9666                           
  9667                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp -= (sizeof dpo
      +                          wers/sizeof dpowers[0])-2;
  9668  0092  30F8               	movlw	248
  9669  0093  1683               	bsf	3,5	;RP0=1, select bank1
  9670  0094  1303               	bcf	3,6	;RP1=0, select bank1
  9671  0095  07C4               	addwf	sprintf@eexp^(0+128),f
  9672  0096  1803               	skipnc
  9673  0097  0AC5               	incf	(sprintf@eexp+1)^(0+128),f
  9674  0098  30FF               	movlw	255
  9675  0099  07C5               	addwf	(sprintf@eexp+1)^(0+128),f
  9676  009A                     l3834:
  9677                           
  9678                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = ((sizeof(doubl
      +                          e)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9679  009A  0844               	movf	sprintf@eexp^(0+128),w
  9680  009B  120A  158A  249D  120A  118A  	fcall	_scale
  9681  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  9682  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  9683  00A2  0845               	movf	?_scale+3,w
  9684  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  9685  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  9686  00A5  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
  9687  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  9688  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  9689  00A8  0844               	movf	?_scale+2,w
  9690  00A9  1683               	bsf	3,5	;RP0=1, select bank1
  9691  00AA  1303               	bcf	3,6	;RP1=0, select bank1
  9692  00AB  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
  9693  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  9694  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  9695  00AE  0843               	movf	?_scale+1,w
  9696  00AF  1683               	bsf	3,5	;RP0=1, select bank1
  9697  00B0  1303               	bcf	3,6	;RP1=0, select bank1
  9698  00B1  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
  9699  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  9700  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  9701  00B4  0842               	movf	?_scale,w
  9702  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  9703  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  9704  00B7  00BC               	movwf	sprintf@tmpval^(0+128)
  9705  00B8                     l3836:
  9706  00B8  0849               	movf	(sprintf@fval+3)^(0+128),w
  9707  00B9  00F5               	movwf	__div_to_l_@f1+3
  9708  00BA  0848               	movf	(sprintf@fval+2)^(0+128),w
  9709  00BB  00F4               	movwf	__div_to_l_@f1+2
  9710  00BC  0847               	movf	(sprintf@fval+1)^(0+128),w
  9711  00BD  00F3               	movwf	__div_to_l_@f1+1
  9712  00BE  0846               	movf	sprintf@fval^(0+128),w
  9713  00BF  00F2               	movwf	__div_to_l_@f1
  9714  00C0  083F               	movf	(sprintf@tmpval+3)^(0+128),w
  9715  00C1  00F9               	movwf	__div_to_l_@f2+3
  9716  00C2  083E               	movf	(sprintf@tmpval+2)^(0+128),w
  9717  00C3  00F8               	movwf	__div_to_l_@f2+2
  9718  00C4  083D               	movf	(sprintf@tmpval+1)^(0+128),w
  9719  00C5  00F7               	movwf	__div_to_l_@f2+1
  9720  00C6  083C               	movf	sprintf@tmpval^(0+128),w
  9721  00C7  00F6               	movwf	__div_to_l_@f2
  9722  00C8  120A  158A  207E  120A  118A  	fcall	__div_to_l_
  9723  00CD  0875               	movf	?__div_to_l_+3,w
  9724  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  9725  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  9726  00D0  00C3               	movwf	(sprintf@val+3)^(0+128)
  9727  00D1  0874               	movf	?__div_to_l_+2,w
  9728  00D2  00C2               	movwf	(sprintf@val+2)^(0+128)
  9729  00D3  0873               	movf	?__div_to_l_+1,w
  9730  00D4  00C1               	movwf	(sprintf@val+1)^(0+128)
  9731  00D5  0872               	movf	?__div_to_l_,w
  9732  00D6  00C0               	movwf	sprintf@val^(0+128)
  9733  00D7                     l3840:
  9734                           
  9735                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval = 0.0;
  9736  00D7  3000               	movlw	0
  9737  00D8  00C9               	movwf	(sprintf@fval+3)^(0+128)
  9738  00D9  3000               	movlw	0
  9739  00DA  00C8               	movwf	(sprintf@fval+2)^(0+128)
  9740  00DB  3000               	movlw	0
  9741  00DC  00C7               	movwf	(sprintf@fval+1)^(0+128)
  9742  00DD  3000               	movlw	0
  9743  00DE  00C6               	movwf	sprintf@fval^(0+128)
  9744                           
  9745                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else {
  9746  00DF  2946               	goto	l3848
  9747  00E0                     l3842:
  9748                           
  9749                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = (unsigned long
      +                          )fval;
  9750  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  9751  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  9752  00E2  0849               	movf	(sprintf@fval+3)^(0+128),w
  9753  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  9754  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  9755  00E5  00D8               	movwf	___fltol@f1+3
  9756  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  9757  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  9758  00E8  0848               	movf	(sprintf@fval+2)^(0+128),w
  9759  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  9760  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  9761  00EB  00D7               	movwf	___fltol@f1+2
  9762  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  9763  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  9764  00EE  0847               	movf	(sprintf@fval+1)^(0+128),w
  9765  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  9766  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  9767  00F1  00D6               	movwf	___fltol@f1+1
  9768  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  9769  00F3  1303               	bcf	3,6	;RP1=0, select bank1
  9770  00F4  0846               	movf	sprintf@fval^(0+128),w
  9771  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  9772  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  9773  00F7  00D5               	movwf	___fltol@f1
  9774  00F8  120A  158A  2002  120A  118A  	fcall	___fltol
  9775  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  9776  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  9777  00FF  0858               	movf	?___fltol+3,w
  9778  0100  1683               	bsf	3,5	;RP0=1, select bank1
  9779  0101  1303               	bcf	3,6	;RP1=0, select bank1
  9780  0102  00C3               	movwf	(sprintf@val+3)^(0+128)
  9781  0103  1283               	bcf	3,5	;RP0=0, select bank0
  9782  0104  1303               	bcf	3,6	;RP1=0, select bank0
  9783  0105  0857               	movf	?___fltol+2,w
  9784  0106  1683               	bsf	3,5	;RP0=1, select bank1
  9785  0107  1303               	bcf	3,6	;RP1=0, select bank1
  9786  0108  00C2               	movwf	(sprintf@val+2)^(0+128)
  9787  0109  1283               	bcf	3,5	;RP0=0, select bank0
  9788  010A  1303               	bcf	3,6	;RP1=0, select bank0
  9789  010B  0856               	movf	?___fltol+1,w
  9790  010C  1683               	bsf	3,5	;RP0=1, select bank1
  9791  010D  1303               	bcf	3,6	;RP1=0, select bank1
  9792  010E  00C1               	movwf	(sprintf@val+1)^(0+128)
  9793  010F  1283               	bcf	3,5	;RP0=0, select bank0
  9794  0110  1303               	bcf	3,6	;RP1=0, select bank0
  9795  0111  0855               	movf	?___fltol,w
  9796  0112  1683               	bsf	3,5	;RP0=1, select bank1
  9797  0113  1303               	bcf	3,6	;RP1=0, select bank1
  9798  0114  00C0               	movwf	sprintf@val^(0+128)
  9799  0115                     l3844:
  9800                           
  9801                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -= (double)val;
  9802  0115  0843               	movf	(sprintf@val+3)^(0+128),w
  9803  0116  00F5               	movwf	___xxtofl@val+3
  9804  0117  0842               	movf	(sprintf@val+2)^(0+128),w
  9805  0118  00F4               	movwf	___xxtofl@val+2
  9806  0119  0841               	movf	(sprintf@val+1)^(0+128),w
  9807  011A  00F3               	movwf	___xxtofl@val+1
  9808  011B  0840               	movf	sprintf@val^(0+128),w
  9809  011C  00F2               	movwf	___xxtofl@val
  9810  011D  3000               	movlw	0
  9811  011E  160A  158A  2687  120A  118A  	fcall	___xxtofl
  9812  0123  0875               	movf	?___xxtofl+3,w
  9813  0124  1683               	bsf	3,5	;RP0=1, select bank1
  9814  0125  1303               	bcf	3,6	;RP1=0, select bank1
  9815  0126  00A3               	movwf	(___flsub@a+3)^(0+128)
  9816  0127  0874               	movf	?___xxtofl+2,w
  9817  0128  00A2               	movwf	(___flsub@a+2)^(0+128)
  9818  0129  0873               	movf	?___xxtofl+1,w
  9819  012A  00A1               	movwf	(___flsub@a+1)^(0+128)
  9820  012B  0872               	movf	?___xxtofl,w
  9821  012C  00A0               	movwf	___flsub@a^(0+128)
  9822  012D  0849               	movf	(sprintf@fval+3)^(0+128),w
  9823  012E  00A7               	movwf	(___flsub@b+3)^(0+128)
  9824  012F  0848               	movf	(sprintf@fval+2)^(0+128),w
  9825  0130  00A6               	movwf	(___flsub@b+2)^(0+128)
  9826  0131  0847               	movf	(sprintf@fval+1)^(0+128),w
  9827  0132  00A5               	movwf	(___flsub@b+1)^(0+128)
  9828  0133  0846               	movf	sprintf@fval^(0+128),w
  9829  0134  00A4               	movwf	___flsub@b^(0+128)
  9830  0135  160A  158A  22D3  120A  118A  	fcall	___flsub
  9831  013A  1683               	bsf	3,5	;RP0=1, select bank1
  9832  013B  1303               	bcf	3,6	;RP1=0, select bank1
  9833  013C  0823               	movf	(?___flsub+3)^(0+128),w
  9834  013D  00C9               	movwf	(sprintf@fval+3)^(0+128)
  9835  013E  0822               	movf	(?___flsub+2)^(0+128),w
  9836  013F  00C8               	movwf	(sprintf@fval+2)^(0+128)
  9837  0140  0821               	movf	(?___flsub+1)^(0+128),w
  9838  0141  00C7               	movwf	(sprintf@fval+1)^(0+128)
  9839  0142  0820               	movf	?___flsub^(0+128),w
  9840  0143  00C6               	movwf	sprintf@fval^(0+128)
  9841  0144                     l3846:
  9842                           
  9843                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp = 0;
  9844  0144  01C4               	clrf	sprintf@eexp^(0+128)
  9845  0145  01C5               	clrf	(sprintf@eexp+1)^(0+128)
  9846  0146                     l3848:
  9847                           
  9848                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c = 1 ; c != (siz
      +                          eof dpowers/sizeof dpowers[0]) ; c++)
  9849  0146  01CD               	clrf	sprintf@c^(0+128)
  9850  0147  0ACD               	incf	sprintf@c^(0+128),f
  9851  0148                     l3854:
  9852                           
  9853                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val < dpowers[c])
  9854  0148  084D               	movf	sprintf@c^(0+128),w
  9855  0149  1283               	bcf	3,5	;RP0=0, select bank0
  9856  014A  1303               	bcf	3,6	;RP1=0, select bank0
  9857  014B  00EA               	movwf	??_sprintf
  9858  014C  3001               	movlw	1
  9859  014D                     u6045:
  9860  014D  1003               	clrc
  9861  014E  0DEA               	rlf	??_sprintf,f
  9862  014F  3EFF               	addlw	-1
  9863  0150  1D03               	skipz
  9864  0151  294D               	goto	u6045
  9865  0152  1003               	clrc
  9866  0153  0D6A               	rlf	??_sprintf,w
  9867  0154  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9868  0155  0084               	movwf	4
  9869  0156  120A  118A  270A  120A  118A  	fcall	stringdir
  9870  015B  00EB               	movwf	??_sprintf+1
  9871  015C  120A  118A  270A  120A  118A  	fcall	stringdir
  9872  0161  00EC               	movwf	??_sprintf+2
  9873  0162  120A  118A  270A  120A  118A  	fcall	stringdir
  9874  0167  00ED               	movwf	??_sprintf+3
  9875  0168  120A  118A  270A  120A  118A  	fcall	stringdir
  9876  016D  00EE               	movwf	??_sprintf+4
  9877  016E  086E               	movf	??_sprintf+4,w
  9878  016F  1683               	bsf	3,5	;RP0=1, select bank1
  9879  0170  1303               	bcf	3,6	;RP1=0, select bank1
  9880  0171  0243               	subwf	(sprintf@val+3)^(0+128),w
  9881  0172  1D03               	skipz
  9882  0173  298A               	goto	u6055
  9883  0174  1283               	bcf	3,5	;RP0=0, select bank0
  9884  0175  1303               	bcf	3,6	;RP1=0, select bank0
  9885  0176  086D               	movf	??_sprintf+3,w
  9886  0177  1683               	bsf	3,5	;RP0=1, select bank1
  9887  0178  1303               	bcf	3,6	;RP1=0, select bank1
  9888  0179  0242               	subwf	(sprintf@val+2)^(0+128),w
  9889  017A  1D03               	skipz
  9890  017B  298A               	goto	u6055
  9891  017C  1283               	bcf	3,5	;RP0=0, select bank0
  9892  017D  1303               	bcf	3,6	;RP1=0, select bank0
  9893  017E  086C               	movf	??_sprintf+2,w
  9894  017F  1683               	bsf	3,5	;RP0=1, select bank1
  9895  0180  1303               	bcf	3,6	;RP1=0, select bank1
  9896  0181  0241               	subwf	(sprintf@val+1)^(0+128),w
  9897  0182  1D03               	skipz
  9898  0183  298A               	goto	u6055
  9899  0184  1283               	bcf	3,5	;RP0=0, select bank0
  9900  0185  1303               	bcf	3,6	;RP1=0, select bank0
  9901  0186  086B               	movf	??_sprintf+1,w
  9902  0187  1683               	bsf	3,5	;RP0=1, select bank1
  9903  0188  1303               	bcf	3,6	;RP1=0, select bank1
  9904  0189  0240               	subwf	sprintf@val^(0+128),w
  9905  018A                     u6055:
  9906  018A  1803               	skipnc
  9907  018B  298D               	goto	u6051
  9908  018C  298E               	goto	u6050
  9909  018D                     u6051:
  9910  018D  298F               	goto	l3858
  9911  018E                     u6050:
  9912  018E  299D               	goto	l3860
  9913  018F                     l3858:
  9914  018F  3001               	movlw	1
  9915  0190  1283               	bcf	3,5	;RP0=0, select bank0
  9916  0191  1303               	bcf	3,6	;RP1=0, select bank0
  9917  0192  00EA               	movwf	??_sprintf
  9918  0193  086A               	movf	??_sprintf,w
  9919  0194  1683               	bsf	3,5	;RP0=1, select bank1
  9920  0195  1303               	bcf	3,6	;RP1=0, select bank1
  9921  0196  07CD               	addwf	sprintf@c^(0+128),f
  9922  0197  300A               	movlw	10
  9923  0198  064D               	xorwf	sprintf@c^(0+128),w
  9924  0199  1D03               	btfss	3,2
  9925  019A  299C               	goto	u6061
  9926  019B  299D               	goto	u6060
  9927  019C                     u6061:
  9928  019C  2948               	goto	l3854
  9929  019D                     u6060:
  9930  019D                     l3860:
  9931                           
  9932                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -= prec + c + e
      +                          exp;
  9933  019D  084D               	movf	sprintf@c^(0+128),w
  9934  019E  074B               	addwf	sprintf@prec^(0+128),w
  9935  019F  1283               	bcf	3,5	;RP0=0, select bank0
  9936  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  9937  01A1  00EA               	movwf	??_sprintf
  9938  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  9939  01A3  1303               	bcf	3,6	;RP1=0, select bank1
  9940  01A4  084C               	movf	(sprintf@prec+1)^(0+128),w
  9941  01A5  1803               	skipnc
  9942  01A6  0A4C               	incf	(sprintf@prec+1)^(0+128),w
  9943  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  9944  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  9945  01A9  00EB               	movwf	??_sprintf+1
  9946  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  9947  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  9948  01AC  0844               	movf	sprintf@eexp^(0+128),w
  9949  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  9950  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  9951  01AF  076A               	addwf	??_sprintf,w
  9952  01B0  00EC               	movwf	??_sprintf+2
  9953  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  9954  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  9955  01B3  0845               	movf	(sprintf@eexp+1)^(0+128),w
  9956  01B4  1803               	skipnc
  9957  01B5  0A45               	incf	(sprintf@eexp+1)^(0+128),w
  9958  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  9959  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  9960  01B8  076B               	addwf	??_sprintf+1,w
  9961  01B9  00ED               	movwf	??_sprintf+3
  9962  01BA  086C               	movf	??_sprintf+2,w
  9963  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  9964  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  9965  01BD  02BA               	subwf	sprintf@width^(0+128),f
  9966  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  9967  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  9968  01C0  086D               	movf	??_sprintf+3,w
  9969  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  9970  01C2  1303               	bcf	3,6	;RP1=0, select bank1
  9971  01C3  1C03               	skipc
  9972  01C4  03BB               	decf	(sprintf@width+1)^(0+128),f
  9973  01C5  02BB               	subwf	(sprintf@width+1)^(0+128),f
  9974                           
  9975                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9976  01C6  084B               	movf	sprintf@prec^(0+128),w
  9977  01C7  044C               	iorwf	(sprintf@prec+1)^(0+128),w
  9978  01C8  1903               	btfsc	3,2
  9979  01C9  29CB               	goto	u6071
  9980  01CA  29CC               	goto	u6070
  9981  01CB                     u6071:
  9982  01CB  29D2               	goto	l3864
  9983  01CC                     u6070:
  9984  01CC                     l3862:
  9985                           
  9986                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width--;
  9987  01CC  30FF               	movlw	255
  9988  01CD  07BA               	addwf	sprintf@width^(0+128),f
  9989  01CE  1803               	skipnc
  9990  01CF  0ABB               	incf	(sprintf@width+1)^(0+128),f
  9991  01D0  30FF               	movlw	255
  9992  01D1  07BB               	addwf	(sprintf@width+1)^(0+128),f
  9993  01D2                     l3864:
  9994                           
  9995                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag & 0x03)
  9996  01D2  3003               	movlw	3
  9997  01D3  0538               	andwf	sprintf@flag^(0+128),w
  9998  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  9999  01D5  1303               	bcf	3,6	;RP1=0, select bank0
 10000  01D6  00EA               	movwf	??_sprintf
 10001  01D7  3000               	movlw	0
 10002  01D8  1683               	bsf	3,5	;RP0=1, select bank1
 10003  01D9  1303               	bcf	3,6	;RP1=0, select bank1
 10004  01DA  0539               	andwf	(sprintf@flag+1)^(0+128),w
 10005  01DB  1283               	bcf	3,5	;RP0=0, select bank0
 10006  01DC  1303               	bcf	3,6	;RP1=0, select bank0
 10007  01DD  00EB               	movwf	??_sprintf+1
 10008  01DE  086A               	movf	??_sprintf,w
 10009  01DF  046B               	iorwf	??_sprintf+1,w
 10010  01E0  1903               	btfsc	3,2
 10011  01E1  29E3               	goto	u6081
 10012  01E2  29E4               	goto	u6080
 10013  01E3                     u6081:
 10014  01E3  2A01               	goto	l3874
 10015  01E4                     u6080:
 10016  01E4                     l3866:
 10017                           
 10018                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width--;
 10019  01E4  30FF               	movlw	255
 10020  01E5  1683               	bsf	3,5	;RP0=1, select bank1
 10021  01E6  1303               	bcf	3,6	;RP1=0, select bank1
 10022  01E7  07BA               	addwf	sprintf@width^(0+128),f
 10023  01E8  1803               	skipnc
 10024  01E9  0ABB               	incf	(sprintf@width+1)^(0+128),f
 10025  01EA  30FF               	movlw	255
 10026  01EB  07BB               	addwf	(sprintf@width+1)^(0+128),f
 10027  01EC  2A01               	goto	l3874
 10028  01ED                     l3868:
 10029                           
 10030                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp++ = (' ')));
 10031  01ED  3020               	movlw	32
 10032  01EE  1283               	bcf	3,5	;RP0=0, select bank0
 10033  01EF  1303               	bcf	3,6	;RP1=0, select bank0
 10034  01F0  00EA               	movwf	??_sprintf
 10035  01F1  1683               	bsf	3,5	;RP0=1, select bank1
 10036  01F2  1303               	bcf	3,6	;RP1=0, select bank1
 10037  01F3  084A               	movf	sprintf@sp^(0+128),w
 10038  01F4  0084               	movwf	4
 10039  01F5  1283               	bcf	3,5	;RP0=0, select bank0
 10040  01F6  1303               	bcf	3,6	;RP1=0, select bank0
 10041  01F7  086A               	movf	??_sprintf,w
 10042  01F8  1383               	bcf	3,7	;select IRP bank0
 10043  01F9  0080               	movwf	0
 10044  01FA                     l3870:
 10045  01FA  3001               	movlw	1
 10046  01FB  00EA               	movwf	??_sprintf
 10047  01FC  086A               	movf	??_sprintf,w
 10048  01FD  1683               	bsf	3,5	;RP0=1, select bank1
 10049  01FE  1303               	bcf	3,6	;RP1=0, select bank1
 10050  01FF  07CA               	addwf	sprintf@sp^(0+128),f
 10051  0200  29E4               	goto	l3866
 10052  0201                     l3874:
 10053                           
 10054                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(width > 0) {
 10055  0201  1683               	bsf	3,5	;RP0=1, select bank1
 10056  0202  1303               	bcf	3,6	;RP1=0, select bank1
 10057  0203  083B               	movf	(sprintf@width+1)^(0+128),w
 10058  0204  3A80               	xorlw	128
 10059  0205  00FF               	movwf	btemp+1
 10060  0206  3080               	movlw	128
 10061  0207  027F               	subwf	btemp+1,w
 10062  0208  1D03               	skipz
 10063  0209  2A0C               	goto	u6095
 10064  020A  3001               	movlw	1
 10065  020B  023A               	subwf	sprintf@width^(0+128),w
 10066  020C                     u6095:
 10067  020C  1803               	skipnc
 10068  020D  2A0F               	goto	u6091
 10069  020E  2A10               	goto	u6090
 10070  020F                     u6091:
 10071  020F  29ED               	goto	l3868
 10072  0210                     u6090:
 10073  0210                     l3876:
 10074                           
 10075                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x03)
 10076  0210  3003               	movlw	3
 10077  0211  1683               	bsf	3,5	;RP0=1, select bank1
 10078  0212  1303               	bcf	3,6	;RP1=0, select bank1
 10079  0213  0538               	andwf	sprintf@flag^(0+128),w
 10080  0214  1283               	bcf	3,5	;RP0=0, select bank0
 10081  0215  1303               	bcf	3,6	;RP1=0, select bank0
 10082  0216  00EA               	movwf	??_sprintf
 10083  0217  3000               	movlw	0
 10084  0218  1683               	bsf	3,5	;RP0=1, select bank1
 10085  0219  1303               	bcf	3,6	;RP1=0, select bank1
 10086  021A  0539               	andwf	(sprintf@flag+1)^(0+128),w
 10087  021B  1283               	bcf	3,5	;RP0=0, select bank0
 10088  021C  1303               	bcf	3,6	;RP1=0, select bank0
 10089  021D  00EB               	movwf	??_sprintf+1
 10090  021E  086A               	movf	??_sprintf,w
 10091  021F  046B               	iorwf	??_sprintf+1,w
 10092  0220  1903               	btfsc	3,2
 10093  0221  2A23               	goto	u6101
 10094  0222  2A24               	goto	u6100
 10095  0223                     u6101:
 10096  0223  2AC8               	goto	l316
 10097  0224                     u6100:
 10098  0224                     l3878:
 10099                           
 10100                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp++ = ('-')));
 10101  0224  302D               	movlw	45
 10102  0225  00EA               	movwf	??_sprintf
 10103  0226  1683               	bsf	3,5	;RP0=1, select bank1
 10104  0227  1303               	bcf	3,6	;RP1=0, select bank1
 10105  0228  084A               	movf	sprintf@sp^(0+128),w
 10106  0229  0084               	movwf	4
 10107  022A  1283               	bcf	3,5	;RP0=0, select bank0
 10108  022B  1303               	bcf	3,6	;RP1=0, select bank0
 10109  022C  086A               	movf	??_sprintf,w
 10110  022D  1383               	bcf	3,7	;select IRP bank0
 10111  022E  0080               	movwf	0
 10112  022F                     l3880:
 10113  022F  3001               	movlw	1
 10114  0230  00EA               	movwf	??_sprintf
 10115  0231  086A               	movf	??_sprintf,w
 10116  0232  1683               	bsf	3,5	;RP0=1, select bank1
 10117  0233  1303               	bcf	3,6	;RP1=0, select bank1
 10118  0234  07CA               	addwf	sprintf@sp^(0+128),f
 10119  0235  2AC8               	goto	l316
 10120  0236                     l3882:
 10121                           
 10122                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;D:\Microchip\xc8\v2
      +                          .31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = val/dpowers[c];
 10123  0236  084D               	movf	sprintf@c^(0+128),w
 10124  0237  1283               	bcf	3,5	;RP0=0, select bank0
 10125  0238  1303               	bcf	3,6	;RP1=0, select bank0
 10126  0239  00EA               	movwf	??_sprintf
 10127  023A  3001               	movlw	1
 10128  023B                     u6115:
 10129  023B  1003               	clrc
 10130  023C  0DEA               	rlf	??_sprintf,f
 10131  023D  3EFF               	addlw	-1
 10132  023E  1D03               	skipz
 10133  023F  2A3B               	goto	u6115
 10134  0240  1003               	clrc
 10135  0241  0D6A               	rlf	??_sprintf,w
 10136  0242  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10137  0243  0084               	movwf	4
 10138  0244  120A  118A  270A  120A  118A  	fcall	stringdir
 10139  0249  00F2               	movwf	___lldiv@divisor
 10140  024A  120A  118A  270A  120A  118A  	fcall	stringdir
 10141  024F  00F3               	movwf	___lldiv@divisor+1
 10142  0250  120A  118A  270A  120A  118A  	fcall	stringdir
 10143  0255  00F4               	movwf	___lldiv@divisor+2
 10144  0256  120A  118A  270A  120A  118A  	fcall	stringdir
 10145  025B  00F5               	movwf	___lldiv@divisor+3
 10146  025C  1683               	bsf	3,5	;RP0=1, select bank1
 10147  025D  1303               	bcf	3,6	;RP1=0, select bank1
 10148  025E  0843               	movf	(sprintf@val+3)^(0+128),w
 10149  025F  00F9               	movwf	___lldiv@dividend+3
 10150  0260  0842               	movf	(sprintf@val+2)^(0+128),w
 10151  0261  00F8               	movwf	___lldiv@dividend+2
 10152  0262  0841               	movf	(sprintf@val+1)^(0+128),w
 10153  0263  00F7               	movwf	___lldiv@dividend+1
 10154  0264  0840               	movf	sprintf@val^(0+128),w
 10155  0265  00F6               	movwf	___lldiv@dividend
 10156  0266  160A  158A  23D0  120A  118A  	fcall	___lldiv
 10157  026B  0875               	movf	?___lldiv+3,w
 10158  026C  1683               	bsf	3,5	;RP0=1, select bank1
 10159  026D  1303               	bcf	3,6	;RP1=0, select bank1
 10160  026E  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
 10161  026F  0874               	movf	?___lldiv+2,w
 10162  0270  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
 10163  0271  0873               	movf	?___lldiv+1,w
 10164  0272  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
 10165  0273  0872               	movf	?___lldiv,w
 10166  0274  00BC               	movwf	sprintf@tmpval^(0+128)
 10167  0275                     l3884:
 10168                           
 10169                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval.vd %= 10;
 10170  0275  3000               	movlw	0
 10171  0276  1283               	bcf	3,5	;RP0=0, select bank0
 10172  0277  1303               	bcf	3,6	;RP1=0, select bank0
 10173  0278  00A8               	movwf	___llmod@divisor+3
 10174  0279  3000               	movlw	0
 10175  027A  00A7               	movwf	___llmod@divisor+2
 10176  027B  3000               	movlw	0
 10177  027C  00A6               	movwf	___llmod@divisor+1
 10178  027D  300A               	movlw	10
 10179  027E  00A5               	movwf	___llmod@divisor
 10180  027F  1683               	bsf	3,5	;RP0=1, select bank1
 10181  0280  1303               	bcf	3,6	;RP1=0, select bank1
 10182  0281  083F               	movf	(sprintf@tmpval+3)^(0+128),w
 10183  0282  1283               	bcf	3,5	;RP0=0, select bank0
 10184  0283  1303               	bcf	3,6	;RP1=0, select bank0
 10185  0284  00AC               	movwf	___llmod@dividend+3
 10186  0285  1683               	bsf	3,5	;RP0=1, select bank1
 10187  0286  1303               	bcf	3,6	;RP1=0, select bank1
 10188  0287  083E               	movf	(sprintf@tmpval+2)^(0+128),w
 10189  0288  1283               	bcf	3,5	;RP0=0, select bank0
 10190  0289  1303               	bcf	3,6	;RP1=0, select bank0
 10191  028A  00AB               	movwf	___llmod@dividend+2
 10192  028B  1683               	bsf	3,5	;RP0=1, select bank1
 10193  028C  1303               	bcf	3,6	;RP1=0, select bank1
 10194  028D  083D               	movf	(sprintf@tmpval+1)^(0+128),w
 10195  028E  1283               	bcf	3,5	;RP0=0, select bank0
 10196  028F  1303               	bcf	3,6	;RP1=0, select bank0
 10197  0290  00AA               	movwf	___llmod@dividend+1
 10198  0291  1683               	bsf	3,5	;RP0=1, select bank1
 10199  0292  1303               	bcf	3,6	;RP1=0, select bank1
 10200  0293  083C               	movf	sprintf@tmpval^(0+128),w
 10201  0294  1283               	bcf	3,5	;RP0=0, select bank0
 10202  0295  1303               	bcf	3,6	;RP1=0, select bank0
 10203  0296  00A9               	movwf	___llmod@dividend
 10204  0297  160A  158A  2323  120A  118A  	fcall	___llmod
 10205  029C  1283               	bcf	3,5	;RP0=0, select bank0
 10206  029D  1303               	bcf	3,6	;RP1=0, select bank0
 10207  029E  0828               	movf	?___llmod+3,w
 10208  029F  1683               	bsf	3,5	;RP0=1, select bank1
 10209  02A0  1303               	bcf	3,6	;RP1=0, select bank1
 10210  02A1  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
 10211  02A2  1283               	bcf	3,5	;RP0=0, select bank0
 10212  02A3  1303               	bcf	3,6	;RP1=0, select bank0
 10213  02A4  0827               	movf	?___llmod+2,w
 10214  02A5  1683               	bsf	3,5	;RP0=1, select bank1
 10215  02A6  1303               	bcf	3,6	;RP1=0, select bank1
 10216  02A7  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
 10217  02A8  1283               	bcf	3,5	;RP0=0, select bank0
 10218  02A9  1303               	bcf	3,6	;RP1=0, select bank0
 10219  02AA  0826               	movf	?___llmod+1,w
 10220  02AB  1683               	bsf	3,5	;RP0=1, select bank1
 10221  02AC  1303               	bcf	3,6	;RP1=0, select bank1
 10222  02AD  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
 10223  02AE  1283               	bcf	3,5	;RP0=0, select bank0
 10224  02AF  1303               	bcf	3,6	;RP1=0, select bank0
 10225  02B0  0825               	movf	?___llmod,w
 10226  02B1  1683               	bsf	3,5	;RP0=1, select bank1
 10227  02B2  1303               	bcf	3,6	;RP1=0, select bank1
 10228  02B3  00BC               	movwf	sprintf@tmpval^(0+128)
 10229  02B4                     l3886:
 10230                           
 10231                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp++ = ('0' + tmp
      +                          val.vd)));
 10232  02B4  083C               	movf	sprintf@tmpval^(0+128),w
 10233  02B5  3E30               	addlw	48
 10234  02B6  1283               	bcf	3,5	;RP0=0, select bank0
 10235  02B7  1303               	bcf	3,6	;RP1=0, select bank0
 10236  02B8  00EA               	movwf	??_sprintf
 10237  02B9  1683               	bsf	3,5	;RP0=1, select bank1
 10238  02BA  1303               	bcf	3,6	;RP1=0, select bank1
 10239  02BB  084A               	movf	sprintf@sp^(0+128),w
 10240  02BC  0084               	movwf	4
 10241  02BD  1283               	bcf	3,5	;RP0=0, select bank0
 10242  02BE  1303               	bcf	3,6	;RP1=0, select bank0
 10243  02BF  086A               	movf	??_sprintf,w
 10244  02C0  1383               	bcf	3,7	;select IRP bank0
 10245  02C1  0080               	movwf	0
 10246  02C2  3001               	movlw	1
 10247  02C3  00EA               	movwf	??_sprintf
 10248  02C4  086A               	movf	??_sprintf,w
 10249  02C5  1683               	bsf	3,5	;RP0=1, select bank1
 10250  02C6  1303               	bcf	3,6	;RP1=0, select bank1
 10251  02C7  07CA               	addwf	sprintf@sp^(0+128),f
 10252  02C8                     l316:	
 10253                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };D:\Microchip\xc8\v2
      +                          .31\pic\sources\c90\common\doprnt.c: 1232:    }
 10254                           
 10255                           
 10256                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c--) {
 10257  02C8  3001               	movlw	1
 10258  02C9  1683               	bsf	3,5	;RP0=1, select bank1
 10259  02CA  1303               	bcf	3,6	;RP1=0, select bank1
 10260  02CB  02CD               	subwf	sprintf@c^(0+128),f
 10261  02CC  0A4D               	incf	sprintf@c^(0+128),w
 10262  02CD  1D03               	btfss	3,2
 10263  02CE  2AD0               	goto	u6121
 10264  02CF  2AD1               	goto	u6120
 10265  02D0                     u6121:
 10266  02D0  2A36               	goto	l3882
 10267  02D1                     u6120:
 10268  02D1  2AEB               	goto	l3894
 10269  02D2                     l3888:
 10270                           
 10271                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++ = ('0')));
 10272  02D2  3030               	movlw	48
 10273  02D3  1283               	bcf	3,5	;RP0=0, select bank0
 10274  02D4  1303               	bcf	3,6	;RP1=0, select bank0
 10275  02D5  00EA               	movwf	??_sprintf
 10276  02D6  1683               	bsf	3,5	;RP0=1, select bank1
 10277  02D7  1303               	bcf	3,6	;RP1=0, select bank1
 10278  02D8  084A               	movf	sprintf@sp^(0+128),w
 10279  02D9  0084               	movwf	4
 10280  02DA  1283               	bcf	3,5	;RP0=0, select bank0
 10281  02DB  1303               	bcf	3,6	;RP1=0, select bank0
 10282  02DC  086A               	movf	??_sprintf,w
 10283  02DD  1383               	bcf	3,7	;select IRP bank0
 10284  02DE  0080               	movwf	0
 10285  02DF                     l3890:
 10286  02DF  3001               	movlw	1
 10287  02E0  00EA               	movwf	??_sprintf
 10288  02E1  086A               	movf	??_sprintf,w
 10289  02E2  1683               	bsf	3,5	;RP0=1, select bank1
 10290  02E3  1303               	bcf	3,6	;RP1=0, select bank1
 10291  02E4  07CA               	addwf	sprintf@sp^(0+128),f
 10292  02E5                     l3892:
 10293                           
 10294                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10295  02E5  30FF               	movlw	255
 10296  02E6  07C4               	addwf	sprintf@eexp^(0+128),f
 10297  02E7  1803               	skipnc
 10298  02E8  0AC5               	incf	(sprintf@eexp+1)^(0+128),f
 10299  02E9  30FF               	movlw	255
 10300  02EA  07C5               	addwf	(sprintf@eexp+1)^(0+128),f
 10301  02EB                     l3894:
 10302                           
 10303                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(eexp > 0) {
 10304  02EB  0845               	movf	(sprintf@eexp+1)^(0+128),w
 10305  02EC  3A80               	xorlw	128
 10306  02ED  00FF               	movwf	btemp+1
 10307  02EE  3080               	movlw	128
 10308  02EF  027F               	subwf	btemp+1,w
 10309  02F0  1D03               	skipz
 10310  02F1  2AF4               	goto	u6135
 10311  02F2  3001               	movlw	1
 10312  02F3  0244               	subwf	sprintf@eexp^(0+128),w
 10313  02F4                     u6135:
 10314  02F4  1803               	skipnc
 10315  02F5  2AF7               	goto	u6131
 10316  02F6  2AF8               	goto	u6130
 10317  02F7                     u6131:
 10318  02F7  2AD2               	goto	l3888
 10319  02F8                     u6130:
 10320  02F8                     l3896:
 10321                           
 10322                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec > (int)((sizeo
      +                          f dpowers/sizeof dpowers[0])-2))
 10323  02F8  1683               	bsf	3,5	;RP0=1, select bank1
 10324  02F9  1303               	bcf	3,6	;RP1=0, select bank1
 10325  02FA  084C               	movf	(sprintf@prec+1)^(0+128),w
 10326  02FB  3A80               	xorlw	128
 10327  02FC  00FF               	movwf	btemp+1
 10328  02FD  3080               	movlw	128
 10329  02FE  027F               	subwf	btemp+1,w
 10330  02FF  1D03               	skipz
 10331  0300  2B03               	goto	u6145
 10332  0301  3009               	movlw	9
 10333  0302  024B               	subwf	sprintf@prec^(0+128),w
 10334  0303                     u6145:
 10335  0303  1C03               	skipc
 10336  0304  2B06               	goto	u6141
 10337  0305  2B07               	goto	u6140
 10338  0306                     u6141:
 10339  0306  2B10               	goto	l3900
 10340  0307                     u6140:
 10341  0307                     l3898:
 10342                           
 10343                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (sizeof dpowers/s
      +                          izeof dpowers[0])-2;
 10344  0307  3008               	movlw	8
 10345  0308  1283               	bcf	3,5	;RP0=0, select bank0
 10346  0309  1303               	bcf	3,6	;RP1=0, select bank0
 10347  030A  00EA               	movwf	??_sprintf
 10348  030B  086A               	movf	??_sprintf,w
 10349  030C  1683               	bsf	3,5	;RP0=1, select bank1
 10350  030D  1303               	bcf	3,6	;RP1=0, select bank1
 10351  030E  00CD               	movwf	sprintf@c^(0+128)
 10352  030F  2B1A               	goto	l323
 10353  0310                     l3900:
 10354                           
 10355                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (char)prec;
 10356  0310  1683               	bsf	3,5	;RP0=1, select bank1
 10357  0311  1303               	bcf	3,6	;RP1=0, select bank1
 10358  0312  084B               	movf	sprintf@prec^(0+128),w
 10359  0313  1283               	bcf	3,5	;RP0=0, select bank0
 10360  0314  1303               	bcf	3,6	;RP1=0, select bank0
 10361  0315  00EA               	movwf	??_sprintf
 10362  0316  086A               	movf	??_sprintf,w
 10363  0317  1683               	bsf	3,5	;RP0=1, select bank1
 10364  0318  1303               	bcf	3,6	;RP1=0, select bank1
 10365  0319  00CD               	movwf	sprintf@c^(0+128)
 10366  031A                     l323:
 10367                           
 10368                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= (int)c;
 10369  031A  084D               	movf	sprintf@c^(0+128),w
 10370  031B  1283               	bcf	3,5	;RP0=0, select bank0
 10371  031C  1303               	bcf	3,6	;RP1=0, select bank0
 10372  031D  00EA               	movwf	??_sprintf
 10373  031E  01EB               	clrf	??_sprintf+1
 10374  031F  086A               	movf	??_sprintf,w
 10375  0320  1683               	bsf	3,5	;RP0=1, select bank1
 10376  0321  1303               	bcf	3,6	;RP1=0, select bank1
 10377  0322  02CB               	subwf	sprintf@prec^(0+128),f
 10378  0323  1283               	bcf	3,5	;RP0=0, select bank0
 10379  0324  1303               	bcf	3,6	;RP1=0, select bank0
 10380  0325  086B               	movf	??_sprintf+1,w
 10381  0326  1683               	bsf	3,5	;RP0=1, select bank1
 10382  0327  1303               	bcf	3,6	;RP1=0, select bank1
 10383  0328  1C03               	skipc
 10384  0329  03CC               	decf	(sprintf@prec+1)^(0+128),f
 10385  032A  02CC               	subwf	(sprintf@prec+1)^(0+128),f
 10386  032B                     l3902:
 10387                           
 10388                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10389  032B  084D               	movf	sprintf@c^(0+128),w
 10390  032C  1903               	btfsc	3,2
 10391  032D  2B2F               	goto	u6151
 10392  032E  2B30               	goto	u6150
 10393  032F                     u6151:
 10394  032F  2B43               	goto	l3908
 10395  0330                     u6150:
 10396  0330                     l3904:
 10397                           
 10398                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++ = ('.')));
 10399  0330  302E               	movlw	46
 10400  0331  1283               	bcf	3,5	;RP0=0, select bank0
 10401  0332  1303               	bcf	3,6	;RP1=0, select bank0
 10402  0333  00EA               	movwf	??_sprintf
 10403  0334  1683               	bsf	3,5	;RP0=1, select bank1
 10404  0335  1303               	bcf	3,6	;RP1=0, select bank1
 10405  0336  084A               	movf	sprintf@sp^(0+128),w
 10406  0337  0084               	movwf	4
 10407  0338  1283               	bcf	3,5	;RP0=0, select bank0
 10408  0339  1303               	bcf	3,6	;RP1=0, select bank0
 10409  033A  086A               	movf	??_sprintf,w
 10410  033B  1383               	bcf	3,7	;select IRP bank0
 10411  033C  0080               	movwf	0
 10412  033D                     l3906:
 10413  033D  3001               	movlw	1
 10414  033E  00EA               	movwf	??_sprintf
 10415  033F  086A               	movf	??_sprintf,w
 10416  0340  1683               	bsf	3,5	;RP0=1, select bank1
 10417  0341  1303               	bcf	3,6	;RP1=0, select bank1
 10418  0342  07CA               	addwf	sprintf@sp^(0+128),f
 10419  0343                     l3908:
 10420                           
 10421                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(
      +                          fval * scale((signed char)c));
 10422  0343  084D               	movf	sprintf@c^(0+128),w
 10423  0344  120A  158A  249D  120A  118A  	fcall	_scale
 10424  0349  1283               	bcf	3,5	;RP0=0, select bank0
 10425  034A  1303               	bcf	3,6	;RP1=0, select bank0
 10426  034B  0845               	movf	?_scale+3,w
 10427  034C  1683               	bsf	3,5	;RP0=1, select bank1
 10428  034D  1303               	bcf	3,6	;RP1=0, select bank1
 10429  034E  00B6               	movwf	(_sprintf$979+3)^(0+128)
 10430  034F  1283               	bcf	3,5	;RP0=0, select bank0
 10431  0350  1303               	bcf	3,6	;RP1=0, select bank0
 10432  0351  0844               	movf	?_scale+2,w
 10433  0352  1683               	bsf	3,5	;RP0=1, select bank1
 10434  0353  1303               	bcf	3,6	;RP1=0, select bank1
 10435  0354  00B5               	movwf	(_sprintf$979+2)^(0+128)
 10436  0355  1283               	bcf	3,5	;RP0=0, select bank0
 10437  0356  1303               	bcf	3,6	;RP1=0, select bank0
 10438  0357  0843               	movf	?_scale+1,w
 10439  0358  1683               	bsf	3,5	;RP0=1, select bank1
 10440  0359  1303               	bcf	3,6	;RP1=0, select bank1
 10441  035A  00B4               	movwf	(_sprintf$979+1)^(0+128)
 10442  035B  1283               	bcf	3,5	;RP0=0, select bank0
 10443  035C  1303               	bcf	3,6	;RP1=0, select bank0
 10444  035D  0842               	movf	?_scale,w
 10445  035E  1683               	bsf	3,5	;RP0=1, select bank1
 10446  035F  1303               	bcf	3,6	;RP1=0, select bank1
 10447  0360  00B3               	movwf	_sprintf$979^(0+128)
 10448  0361                     l3910:
 10449                           
 10450                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(
      +                          fval * scale((signed char)c));
 10451  0361  0836               	movf	(_sprintf$979+3)^(0+128),w
 10452  0362  1283               	bcf	3,5	;RP0=0, select bank0
 10453  0363  1303               	bcf	3,6	;RP1=0, select bank0
 10454  0364  00AF               	movwf	___flmul@a+3
 10455  0365  1683               	bsf	3,5	;RP0=1, select bank1
 10456  0366  1303               	bcf	3,6	;RP1=0, select bank1
 10457  0367  0835               	movf	(_sprintf$979+2)^(0+128),w
 10458  0368  1283               	bcf	3,5	;RP0=0, select bank0
 10459  0369  1303               	bcf	3,6	;RP1=0, select bank0
 10460  036A  00AE               	movwf	___flmul@a+2
 10461  036B  1683               	bsf	3,5	;RP0=1, select bank1
 10462  036C  1303               	bcf	3,6	;RP1=0, select bank1
 10463  036D  0834               	movf	(_sprintf$979+1)^(0+128),w
 10464  036E  1283               	bcf	3,5	;RP0=0, select bank0
 10465  036F  1303               	bcf	3,6	;RP1=0, select bank0
 10466  0370  00AD               	movwf	___flmul@a+1
 10467  0371  1683               	bsf	3,5	;RP0=1, select bank1
 10468  0372  1303               	bcf	3,6	;RP1=0, select bank1
 10469  0373  0833               	movf	_sprintf$979^(0+128),w
 10470  0374  1283               	bcf	3,5	;RP0=0, select bank0
 10471  0375  1303               	bcf	3,6	;RP1=0, select bank0
 10472  0376  00AC               	movwf	___flmul@a
 10473  0377  1683               	bsf	3,5	;RP0=1, select bank1
 10474  0378  1303               	bcf	3,6	;RP1=0, select bank1
 10475  0379  0849               	movf	(sprintf@fval+3)^(0+128),w
 10476  037A  1283               	bcf	3,5	;RP0=0, select bank0
 10477  037B  1303               	bcf	3,6	;RP1=0, select bank0
 10478  037C  00AB               	movwf	___flmul@b+3
 10479  037D  1683               	bsf	3,5	;RP0=1, select bank1
 10480  037E  1303               	bcf	3,6	;RP1=0, select bank1
 10481  037F  0848               	movf	(sprintf@fval+2)^(0+128),w
 10482  0380  1283               	bcf	3,5	;RP0=0, select bank0
 10483  0381  1303               	bcf	3,6	;RP1=0, select bank0
 10484  0382  00AA               	movwf	___flmul@b+2
 10485  0383  1683               	bsf	3,5	;RP0=1, select bank1
 10486  0384  1303               	bcf	3,6	;RP1=0, select bank1
 10487  0385  0847               	movf	(sprintf@fval+1)^(0+128),w
 10488  0386  1283               	bcf	3,5	;RP0=0, select bank0
 10489  0387  1303               	bcf	3,6	;RP1=0, select bank0
 10490  0388  00A9               	movwf	___flmul@b+1
 10491  0389  1683               	bsf	3,5	;RP0=1, select bank1
 10492  038A  1303               	bcf	3,6	;RP1=0, select bank1
 10493  038B  0846               	movf	sprintf@fval^(0+128),w
 10494  038C  1283               	bcf	3,5	;RP0=0, select bank0
 10495  038D  1303               	bcf	3,6	;RP1=0, select bank0
 10496  038E  00A8               	movwf	___flmul@b
 10497  038F  120A  158A  213C  120A  118A  	fcall	___flmul
 10498  0394  1283               	bcf	3,5	;RP0=0, select bank0
 10499  0395  1303               	bcf	3,6	;RP1=0, select bank0
 10500  0396  082B               	movf	?___flmul+3,w
 10501  0397  00D8               	movwf	___fltol@f1+3
 10502  0398  082A               	movf	?___flmul+2,w
 10503  0399  00D7               	movwf	___fltol@f1+2
 10504  039A  0829               	movf	?___flmul+1,w
 10505  039B  00D6               	movwf	___fltol@f1+1
 10506  039C  0828               	movf	?___flmul,w
 10507  039D  00D5               	movwf	___fltol@f1
 10508  039E  120A  158A  2002  120A  118A  	fcall	___fltol
 10509  03A3  1283               	bcf	3,5	;RP0=0, select bank0
 10510  03A4  1303               	bcf	3,6	;RP1=0, select bank0
 10511  03A5  0858               	movf	?___fltol+3,w
 10512  03A6  1683               	bsf	3,5	;RP0=1, select bank1
 10513  03A7  1303               	bcf	3,6	;RP1=0, select bank1
 10514  03A8  00C3               	movwf	(sprintf@val+3)^(0+128)
 10515  03A9  1283               	bcf	3,5	;RP0=0, select bank0
 10516  03AA  1303               	bcf	3,6	;RP1=0, select bank0
 10517  03AB  0857               	movf	?___fltol+2,w
 10518  03AC  1683               	bsf	3,5	;RP0=1, select bank1
 10519  03AD  1303               	bcf	3,6	;RP1=0, select bank1
 10520  03AE  00C2               	movwf	(sprintf@val+2)^(0+128)
 10521  03AF  1283               	bcf	3,5	;RP0=0, select bank0
 10522  03B0  1303               	bcf	3,6	;RP1=0, select bank0
 10523  03B1  0856               	movf	?___fltol+1,w
 10524  03B2  1683               	bsf	3,5	;RP0=1, select bank1
 10525  03B3  1303               	bcf	3,6	;RP1=0, select bank1
 10526  03B4  00C1               	movwf	(sprintf@val+1)^(0+128)
 10527  03B5  1283               	bcf	3,5	;RP0=0, select bank0
 10528  03B6  1303               	bcf	3,6	;RP1=0, select bank0
 10529  03B7  0855               	movf	?___fltol,w
 10530  03B8  1683               	bsf	3,5	;RP0=1, select bank1
 10531  03B9  1303               	bcf	3,6	;RP1=0, select bank1
 10532  03BA  00C0               	movwf	sprintf@val^(0+128)
 10533                           
 10534                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
 10535  03BB  2CA9               	goto	l3920
 10536  03BC                     l3912:
 10537                           
 10538                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.vd = val/dpowe
      +                          rs[c];
 10539  03BC  084D               	movf	sprintf@c^(0+128),w
 10540  03BD  1283               	bcf	3,5	;RP0=0, select bank0
 10541  03BE  1303               	bcf	3,6	;RP1=0, select bank0
 10542  03BF  00EA               	movwf	??_sprintf
 10543  03C0  3001               	movlw	1
 10544  03C1                     u6165:
 10545  03C1  1003               	clrc
 10546  03C2  0DEA               	rlf	??_sprintf,f
 10547  03C3  3EFF               	addlw	-1
 10548  03C4  1D03               	skipz
 10549  03C5  2BC1               	goto	u6165
 10550  03C6  1003               	clrc
 10551  03C7  0D6A               	rlf	??_sprintf,w
 10552  03C8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10553  03C9  0084               	movwf	4
 10554  03CA  120A  118A  270A  120A  118A  	fcall	stringdir
 10555  03CF  00F2               	movwf	___lldiv@divisor
 10556  03D0  120A  118A  270A  120A  118A  	fcall	stringdir
 10557  03D5  00F3               	movwf	___lldiv@divisor+1
 10558  03D6  120A  118A  270A  120A  118A  	fcall	stringdir
 10559  03DB  00F4               	movwf	___lldiv@divisor+2
 10560  03DC  120A  118A  270A  120A  118A  	fcall	stringdir
 10561  03E1  00F5               	movwf	___lldiv@divisor+3
 10562  03E2  1683               	bsf	3,5	;RP0=1, select bank1
 10563  03E3  1303               	bcf	3,6	;RP1=0, select bank1
 10564  03E4  0843               	movf	(sprintf@val+3)^(0+128),w
 10565  03E5  00F9               	movwf	___lldiv@dividend+3
 10566  03E6  0842               	movf	(sprintf@val+2)^(0+128),w
 10567  03E7  00F8               	movwf	___lldiv@dividend+2
 10568  03E8  0841               	movf	(sprintf@val+1)^(0+128),w
 10569  03E9  00F7               	movwf	___lldiv@dividend+1
 10570  03EA  0840               	movf	sprintf@val^(0+128),w
 10571  03EB  00F6               	movwf	___lldiv@dividend
 10572  03EC  160A  158A  23D0  120A  118A  	fcall	___lldiv
 10573  03F1  0875               	movf	?___lldiv+3,w
 10574  03F2  1683               	bsf	3,5	;RP0=1, select bank1
 10575  03F3  1303               	bcf	3,6	;RP1=0, select bank1
 10576  03F4  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
 10577  03F5  0874               	movf	?___lldiv+2,w
 10578  03F6  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
 10579  03F7  0873               	movf	?___lldiv+1,w
 10580  03F8  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
 10581  03F9  0872               	movf	?___lldiv,w
 10582  03FA  00BC               	movwf	sprintf@tmpval^(0+128)
 10583  03FB                     l3914:
 10584                           
 10585                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.vd %= 10;
 10586  03FB  3000               	movlw	0
 10587  03FC  1283               	bcf	3,5	;RP0=0, select bank0
 10588  03FD  1303               	bcf	3,6	;RP1=0, select bank0
 10589  03FE  00A8               	movwf	___llmod@divisor+3
 10590  03FF  3000               	movlw	0
 10591  0400  00A7               	movwf	___llmod@divisor+2
 10592  0401  3000               	movlw	0
 10593  0402  00A6               	movwf	___llmod@divisor+1
 10594  0403  300A               	movlw	10
 10595  0404  00A5               	movwf	___llmod@divisor
 10596  0405  1683               	bsf	3,5	;RP0=1, select bank1
 10597  0406  1303               	bcf	3,6	;RP1=0, select bank1
 10598  0407  083F               	movf	(sprintf@tmpval+3)^(0+128),w
 10599  0408  1283               	bcf	3,5	;RP0=0, select bank0
 10600  0409  1303               	bcf	3,6	;RP1=0, select bank0
 10601  040A  00AC               	movwf	___llmod@dividend+3
 10602  040B  1683               	bsf	3,5	;RP0=1, select bank1
 10603  040C  1303               	bcf	3,6	;RP1=0, select bank1
 10604  040D  083E               	movf	(sprintf@tmpval+2)^(0+128),w
 10605  040E  1283               	bcf	3,5	;RP0=0, select bank0
 10606  040F  1303               	bcf	3,6	;RP1=0, select bank0
 10607  0410  00AB               	movwf	___llmod@dividend+2
 10608  0411  1683               	bsf	3,5	;RP0=1, select bank1
 10609  0412  1303               	bcf	3,6	;RP1=0, select bank1
 10610  0413  083D               	movf	(sprintf@tmpval+1)^(0+128),w
 10611  0414  1283               	bcf	3,5	;RP0=0, select bank0
 10612  0415  1303               	bcf	3,6	;RP1=0, select bank0
 10613  0416  00AA               	movwf	___llmod@dividend+1
 10614  0417  1683               	bsf	3,5	;RP0=1, select bank1
 10615  0418  1303               	bcf	3,6	;RP1=0, select bank1
 10616  0419  083C               	movf	sprintf@tmpval^(0+128),w
 10617  041A  1283               	bcf	3,5	;RP0=0, select bank0
 10618  041B  1303               	bcf	3,6	;RP1=0, select bank0
 10619  041C  00A9               	movwf	___llmod@dividend
 10620  041D  160A  158A  2323  120A  118A  	fcall	___llmod
 10621  0422  1283               	bcf	3,5	;RP0=0, select bank0
 10622  0423  1303               	bcf	3,6	;RP1=0, select bank0
 10623  0424  0828               	movf	?___llmod+3,w
 10624  0425  1683               	bsf	3,5	;RP0=1, select bank1
 10625  0426  1303               	bcf	3,6	;RP1=0, select bank1
 10626  0427  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
 10627  0428  1283               	bcf	3,5	;RP0=0, select bank0
 10628  0429  1303               	bcf	3,6	;RP1=0, select bank0
 10629  042A  0827               	movf	?___llmod+2,w
 10630  042B  1683               	bsf	3,5	;RP0=1, select bank1
 10631  042C  1303               	bcf	3,6	;RP1=0, select bank1
 10632  042D  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
 10633  042E  1283               	bcf	3,5	;RP0=0, select bank0
 10634  042F  1303               	bcf	3,6	;RP1=0, select bank0
 10635  0430  0826               	movf	?___llmod+1,w
 10636  0431  1683               	bsf	3,5	;RP0=1, select bank1
 10637  0432  1303               	bcf	3,6	;RP1=0, select bank1
 10638  0433  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
 10639  0434  1283               	bcf	3,5	;RP0=0, select bank0
 10640  0435  1303               	bcf	3,6	;RP1=0, select bank0
 10641  0436  0825               	movf	?___llmod,w
 10642  0437  1683               	bsf	3,5	;RP0=1, select bank1
 10643  0438  1303               	bcf	3,6	;RP1=0, select bank1
 10644  0439  00BC               	movwf	sprintf@tmpval^(0+128)
 10645  043A                     l3916:
 10646                           
 10647                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++ = ('0' + tmpv
      +                          al.vd)));
 10648  043A  083C               	movf	sprintf@tmpval^(0+128),w
 10649  043B  3E30               	addlw	48
 10650  043C  1283               	bcf	3,5	;RP0=0, select bank0
 10651  043D  1303               	bcf	3,6	;RP1=0, select bank0
 10652  043E  00EA               	movwf	??_sprintf
 10653  043F  1683               	bsf	3,5	;RP0=1, select bank1
 10654  0440  1303               	bcf	3,6	;RP1=0, select bank1
 10655  0441  084A               	movf	sprintf@sp^(0+128),w
 10656  0442  0084               	movwf	4
 10657  0443  1283               	bcf	3,5	;RP0=0, select bank0
 10658  0444  1303               	bcf	3,6	;RP1=0, select bank0
 10659  0445  086A               	movf	??_sprintf,w
 10660  0446  1383               	bcf	3,7	;select IRP bank0
 10661  0447  0080               	movwf	0
 10662  0448  3001               	movlw	1
 10663  0449  00EA               	movwf	??_sprintf
 10664  044A  086A               	movf	??_sprintf,w
 10665  044B  1683               	bsf	3,5	;RP0=1, select bank1
 10666  044C  1303               	bcf	3,6	;RP1=0, select bank1
 10667  044D  07CA               	addwf	sprintf@sp^(0+128),f
 10668  044E                     l3918:
 10669                           
 10670                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= dpowers[c];
 10671  044E  084D               	movf	sprintf@c^(0+128),w
 10672  044F  1283               	bcf	3,5	;RP0=0, select bank0
 10673  0450  1303               	bcf	3,6	;RP1=0, select bank0
 10674  0451  00EA               	movwf	??_sprintf
 10675  0452  3001               	movlw	1
 10676  0453                     u6175:
 10677  0453  1003               	clrc
 10678  0454  0DEA               	rlf	??_sprintf,f
 10679  0455  3EFF               	addlw	-1
 10680  0456  1D03               	skipz
 10681  0457  2C53               	goto	u6175
 10682  0458  1003               	clrc
 10683  0459  0D6A               	rlf	??_sprintf,w
 10684  045A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10685  045B  0084               	movwf	4
 10686  045C  120A  118A  270A  120A  118A  	fcall	stringdir
 10687  0461  00A5               	movwf	___llmod@divisor
 10688  0462  120A  118A  270A  120A  118A  	fcall	stringdir
 10689  0467  00A6               	movwf	___llmod@divisor+1
 10690  0468  120A  118A  270A  120A  118A  	fcall	stringdir
 10691  046D  00A7               	movwf	___llmod@divisor+2
 10692  046E  120A  118A  270A  120A  118A  	fcall	stringdir
 10693  0473  00A8               	movwf	___llmod@divisor+3
 10694  0474  1683               	bsf	3,5	;RP0=1, select bank1
 10695  0475  1303               	bcf	3,6	;RP1=0, select bank1
 10696  0476  0843               	movf	(sprintf@val+3)^(0+128),w
 10697  0477  1283               	bcf	3,5	;RP0=0, select bank0
 10698  0478  1303               	bcf	3,6	;RP1=0, select bank0
 10699  0479  00AC               	movwf	___llmod@dividend+3
 10700  047A  1683               	bsf	3,5	;RP0=1, select bank1
 10701  047B  1303               	bcf	3,6	;RP1=0, select bank1
 10702  047C  0842               	movf	(sprintf@val+2)^(0+128),w
 10703  047D  1283               	bcf	3,5	;RP0=0, select bank0
 10704  047E  1303               	bcf	3,6	;RP1=0, select bank0
 10705  047F  00AB               	movwf	___llmod@dividend+2
 10706  0480  1683               	bsf	3,5	;RP0=1, select bank1
 10707  0481  1303               	bcf	3,6	;RP1=0, select bank1
 10708  0482  0841               	movf	(sprintf@val+1)^(0+128),w
 10709  0483  1283               	bcf	3,5	;RP0=0, select bank0
 10710  0484  1303               	bcf	3,6	;RP1=0, select bank0
 10711  0485  00AA               	movwf	___llmod@dividend+1
 10712  0486  1683               	bsf	3,5	;RP0=1, select bank1
 10713  0487  1303               	bcf	3,6	;RP1=0, select bank1
 10714  0488  0840               	movf	sprintf@val^(0+128),w
 10715  0489  1283               	bcf	3,5	;RP0=0, select bank0
 10716  048A  1303               	bcf	3,6	;RP1=0, select bank0
 10717  048B  00A9               	movwf	___llmod@dividend
 10718  048C  160A  158A  2323  120A  118A  	fcall	___llmod
 10719  0491  1283               	bcf	3,5	;RP0=0, select bank0
 10720  0492  1303               	bcf	3,6	;RP1=0, select bank0
 10721  0493  0828               	movf	?___llmod+3,w
 10722  0494  1683               	bsf	3,5	;RP0=1, select bank1
 10723  0495  1303               	bcf	3,6	;RP1=0, select bank1
 10724  0496  00C3               	movwf	(sprintf@val+3)^(0+128)
 10725  0497  1283               	bcf	3,5	;RP0=0, select bank0
 10726  0498  1303               	bcf	3,6	;RP1=0, select bank0
 10727  0499  0827               	movf	?___llmod+2,w
 10728  049A  1683               	bsf	3,5	;RP0=1, select bank1
 10729  049B  1303               	bcf	3,6	;RP1=0, select bank1
 10730  049C  00C2               	movwf	(sprintf@val+2)^(0+128)
 10731  049D  1283               	bcf	3,5	;RP0=0, select bank0
 10732  049E  1303               	bcf	3,6	;RP1=0, select bank0
 10733  049F  0826               	movf	?___llmod+1,w
 10734  04A0  1683               	bsf	3,5	;RP0=1, select bank1
 10735  04A1  1303               	bcf	3,6	;RP1=0, select bank1
 10736  04A2  00C1               	movwf	(sprintf@val+1)^(0+128)
 10737  04A3  1283               	bcf	3,5	;RP0=0, select bank0
 10738  04A4  1303               	bcf	3,6	;RP1=0, select bank0
 10739  04A5  0825               	movf	?___llmod,w
 10740  04A6  1683               	bsf	3,5	;RP0=1, select bank1
 10741  04A7  1303               	bcf	3,6	;RP1=0, select bank1
 10742  04A8  00C0               	movwf	sprintf@val^(0+128)
 10743  04A9                     l3920:
 10744                           
 10745                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
 10746  04A9  3001               	movlw	1
 10747  04AA  02CD               	subwf	sprintf@c^(0+128),f
 10748  04AB  0A4D               	incf	sprintf@c^(0+128),w
 10749  04AC  1D03               	btfss	3,2
 10750  04AD  2CAF               	goto	u6181
 10751  04AE  2CB0               	goto	u6180
 10752  04AF                     u6181:
 10753  04AF  2BBC               	goto	l3912
 10754  04B0                     u6180:
 10755  04B0  2CCA               	goto	l3928
 10756  04B1                     l3922:
 10757                           
 10758                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++ = ('0')));
 10759  04B1  3030               	movlw	48
 10760  04B2  1283               	bcf	3,5	;RP0=0, select bank0
 10761  04B3  1303               	bcf	3,6	;RP1=0, select bank0
 10762  04B4  00EA               	movwf	??_sprintf
 10763  04B5  1683               	bsf	3,5	;RP0=1, select bank1
 10764  04B6  1303               	bcf	3,6	;RP1=0, select bank1
 10765  04B7  084A               	movf	sprintf@sp^(0+128),w
 10766  04B8  0084               	movwf	4
 10767  04B9  1283               	bcf	3,5	;RP0=0, select bank0
 10768  04BA  1303               	bcf	3,6	;RP1=0, select bank0
 10769  04BB  086A               	movf	??_sprintf,w
 10770  04BC  1383               	bcf	3,7	;select IRP bank0
 10771  04BD  0080               	movwf	0
 10772  04BE                     l3924:
 10773  04BE  3001               	movlw	1
 10774  04BF  00EA               	movwf	??_sprintf
 10775  04C0  086A               	movf	??_sprintf,w
 10776  04C1  1683               	bsf	3,5	;RP0=1, select bank1
 10777  04C2  1303               	bcf	3,6	;RP1=0, select bank1
 10778  04C3  07CA               	addwf	sprintf@sp^(0+128),f
 10779  04C4                     l3926:
 10780                           
 10781                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10782  04C4  30FF               	movlw	255
 10783  04C5  07CB               	addwf	sprintf@prec^(0+128),f
 10784  04C6  1803               	skipnc
 10785  04C7  0ACC               	incf	(sprintf@prec+1)^(0+128),f
 10786  04C8  30FF               	movlw	255
 10787  04C9  07CC               	addwf	(sprintf@prec+1)^(0+128),f
 10788  04CA                     l3928:
 10789                           
 10790                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(prec) {
 10791  04CA  084B               	movf	sprintf@prec^(0+128),w
 10792  04CB  044C               	iorwf	(sprintf@prec+1)^(0+128),w
 10793  04CC  1D03               	btfss	3,2
 10794  04CD  2CCF               	goto	u6191
 10795  04CE  2CD0               	goto	u6190
 10796  04CF                     u6191:
 10797  04CF  2CB1               	goto	l3922
 10798  04D0                     u6190:
 10799  04D0  2EDA               	goto	l4008
 10800  04D1                     l3930:
 10801                           
 10802                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned long)(*(int *)__va_arg((*(i
      +                          nt **)ap), (int)0));
 10803  04D1  1683               	bsf	3,5	;RP0=1, select bank1
 10804  04D2  1303               	bcf	3,6	;RP1=0, select bank1
 10805  04D3  0837               	movf	sprintf@ap^(0+128),w
 10806  04D4  0084               	movwf	4
 10807  04D5  1383               	bcf	3,7	;select IRP bank0
 10808  04D6  0800               	movf	0,w
 10809  04D7  1283               	bcf	3,5	;RP0=0, select bank0
 10810  04D8  1303               	bcf	3,6	;RP1=0, select bank0
 10811  04D9  00EA               	movwf	??_sprintf
 10812  04DA  0A84               	incf	4,f
 10813  04DB  0800               	movf	0,w
 10814  04DC  00EB               	movwf	??_sprintf+1
 10815  04DD  086A               	movf	??_sprintf,w
 10816  04DE  1683               	bsf	3,5	;RP0=1, select bank1
 10817  04DF  1303               	bcf	3,6	;RP1=0, select bank1
 10818  04E0  00C0               	movwf	sprintf@val^(0+128)
 10819  04E1  1283               	bcf	3,5	;RP0=0, select bank0
 10820  04E2  1303               	bcf	3,6	;RP1=0, select bank0
 10821  04E3  086B               	movf	??_sprintf+1,w
 10822  04E4  1683               	bsf	3,5	;RP0=1, select bank1
 10823  04E5  1303               	bcf	3,6	;RP1=0, select bank1
 10824  04E6  00C1               	movwf	(sprintf@val+1)^(0+128)
 10825  04E7  3000               	movlw	0
 10826  04E8  1BC1               	btfsc	(sprintf@val+1)^(0+128),7
 10827  04E9  30FF               	movlw	255
 10828  04EA  00C2               	movwf	(sprintf@val+2)^(0+128)
 10829  04EB  00C3               	movwf	(sprintf@val+3)^(0+128)
 10830  04EC                     l3932:
 10831  04EC  3002               	movlw	2
 10832  04ED  1283               	bcf	3,5	;RP0=0, select bank0
 10833  04EE  1303               	bcf	3,6	;RP1=0, select bank0
 10834  04EF  00EA               	movwf	??_sprintf
 10835  04F0  086A               	movf	??_sprintf,w
 10836  04F1  1683               	bsf	3,5	;RP0=1, select bank1
 10837  04F2  1303               	bcf	3,6	;RP1=0, select bank1
 10838  04F3  07B7               	addwf	sprintf@ap^(0+128),f
 10839  04F4                     l3934:
 10840                           
 10841                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long)val < 0) {
 10842  04F4  1FC3               	btfss	(sprintf@val+3)^(0+128),7
 10843  04F5  2CF7               	goto	u6201
 10844  04F6  2CF8               	goto	u6200
 10845  04F7                     u6201:
 10846  04F7  2D07               	goto	l3940
 10847  04F8                     u6200:
 10848  04F8                     l3936:
 10849                           
 10850                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
 10851  04F8  3003               	movlw	3
 10852  04F9  04B8               	iorwf	sprintf@flag^(0+128),f
 10853  04FA  3000               	movlw	0
 10854  04FB  04B9               	iorwf	(sprintf@flag+1)^(0+128),f
 10855  04FC                     l3938:
 10856                           
 10857                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
 10858  04FC  09C0               	comf	sprintf@val^(0+128),f
 10859  04FD  09C1               	comf	(sprintf@val+1)^(0+128),f
 10860  04FE  09C2               	comf	(sprintf@val+2)^(0+128),f
 10861  04FF  09C3               	comf	(sprintf@val+3)^(0+128),f
 10862  0500  0AC0               	incf	sprintf@val^(0+128),f
 10863  0501  1903               	skipnz
 10864  0502  0AC1               	incf	(sprintf@val+1)^(0+128),f
 10865  0503  1903               	skipnz
 10866  0504  0AC2               	incf	(sprintf@val+2)^(0+128),f
 10867  0505  1903               	skipnz
 10868  0506  0AC3               	incf	(sprintf@val+3)^(0+128),f
 10869  0507                     l3940:
 10870                           
 10871                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && val == 0)
 10872  0507  084B               	movf	sprintf@prec^(0+128),w
 10873  0508  044C               	iorwf	(sprintf@prec+1)^(0+128),w
 10874  0509  1D03               	btfss	3,2
 10875  050A  2D0C               	goto	u6211
 10876  050B  2D0D               	goto	u6210
 10877  050C                     u6211:
 10878  050C  2D1B               	goto	l3946
 10879  050D                     u6210:
 10880  050D                     l3942:
 10881  050D  0843               	movf	(sprintf@val+3)^(0+128),w
 10882  050E  0442               	iorwf	(sprintf@val+2)^(0+128),w
 10883  050F  0441               	iorwf	(sprintf@val+1)^(0+128),w
 10884  0510  0440               	iorwf	sprintf@val^(0+128),w
 10885  0511  1D03               	skipz
 10886  0512  2D14               	goto	u6221
 10887  0513  2D15               	goto	u6220
 10888  0514                     u6221:
 10889  0514  2D1B               	goto	l3946
 10890  0515                     u6220:
 10891  0515                     l3944:
 10892                           
 10893                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10894  0515  3001               	movlw	1
 10895  0516  07CB               	addwf	sprintf@prec^(0+128),f
 10896  0517  1803               	skipnc
 10897  0518  0ACC               	incf	(sprintf@prec+1)^(0+128),f
 10898  0519  3000               	movlw	0
 10899  051A  07CC               	addwf	(sprintf@prec+1)^(0+128),f
 10900  051B                     l3946:
 10901                           
 10902                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeo
      +                          f dpowers/sizeof dpowers[0] ; c++)
 10903  051B  01CD               	clrf	sprintf@c^(0+128)
 10904  051C  0ACD               	incf	sprintf@c^(0+128),f
 10905  051D                     l3952:
 10906                           
 10907                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowers[c])
 10908  051D  084D               	movf	sprintf@c^(0+128),w
 10909  051E  1283               	bcf	3,5	;RP0=0, select bank0
 10910  051F  1303               	bcf	3,6	;RP1=0, select bank0
 10911  0520  00EA               	movwf	??_sprintf
 10912  0521  3001               	movlw	1
 10913  0522                     u6235:
 10914  0522  1003               	clrc
 10915  0523  0DEA               	rlf	??_sprintf,f
 10916  0524  3EFF               	addlw	-1
 10917  0525  1D03               	skipz
 10918  0526  2D22               	goto	u6235
 10919  0527  1003               	clrc
 10920  0528  0D6A               	rlf	??_sprintf,w
 10921  0529  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10922  052A  0084               	movwf	4
 10923  052B  120A  118A  270A  120A  118A  	fcall	stringdir
 10924  0530  00EB               	movwf	??_sprintf+1
 10925  0531  120A  118A  270A  120A  118A  	fcall	stringdir
 10926  0536  00EC               	movwf	??_sprintf+2
 10927  0537  120A  118A  270A  120A  118A  	fcall	stringdir
 10928  053C  00ED               	movwf	??_sprintf+3
 10929  053D  120A  118A  270A  120A  118A  	fcall	stringdir
 10930  0542  00EE               	movwf	??_sprintf+4
 10931  0543  086E               	movf	??_sprintf+4,w
 10932  0544  1683               	bsf	3,5	;RP0=1, select bank1
 10933  0545  1303               	bcf	3,6	;RP1=0, select bank1
 10934  0546  0243               	subwf	(sprintf@val+3)^(0+128),w
 10935  0547  1D03               	skipz
 10936  0548  2D5F               	goto	u6245
 10937  0549  1283               	bcf	3,5	;RP0=0, select bank0
 10938  054A  1303               	bcf	3,6	;RP1=0, select bank0
 10939  054B  086D               	movf	??_sprintf+3,w
 10940  054C  1683               	bsf	3,5	;RP0=1, select bank1
 10941  054D  1303               	bcf	3,6	;RP1=0, select bank1
 10942  054E  0242               	subwf	(sprintf@val+2)^(0+128),w
 10943  054F  1D03               	skipz
 10944  0550  2D5F               	goto	u6245
 10945  0551  1283               	bcf	3,5	;RP0=0, select bank0
 10946  0552  1303               	bcf	3,6	;RP1=0, select bank0
 10947  0553  086C               	movf	??_sprintf+2,w
 10948  0554  1683               	bsf	3,5	;RP0=1, select bank1
 10949  0555  1303               	bcf	3,6	;RP1=0, select bank1
 10950  0556  0241               	subwf	(sprintf@val+1)^(0+128),w
 10951  0557  1D03               	skipz
 10952  0558  2D5F               	goto	u6245
 10953  0559  1283               	bcf	3,5	;RP0=0, select bank0
 10954  055A  1303               	bcf	3,6	;RP1=0, select bank0
 10955  055B  086B               	movf	??_sprintf+1,w
 10956  055C  1683               	bsf	3,5	;RP0=1, select bank1
 10957  055D  1303               	bcf	3,6	;RP1=0, select bank1
 10958  055E  0240               	subwf	sprintf@val^(0+128),w
 10959  055F                     u6245:
 10960  055F  1803               	skipnc
 10961  0560  2D62               	goto	u6241
 10962  0561  2D63               	goto	u6240
 10963  0562                     u6241:
 10964  0562  2D64               	goto	l3956
 10965  0563                     u6240:
 10966  0563  2D72               	goto	l3958
 10967  0564                     l3956:
 10968  0564  3001               	movlw	1
 10969  0565  1283               	bcf	3,5	;RP0=0, select bank0
 10970  0566  1303               	bcf	3,6	;RP1=0, select bank0
 10971  0567  00EA               	movwf	??_sprintf
 10972  0568  086A               	movf	??_sprintf,w
 10973  0569  1683               	bsf	3,5	;RP0=1, select bank1
 10974  056A  1303               	bcf	3,6	;RP1=0, select bank1
 10975  056B  07CD               	addwf	sprintf@c^(0+128),f
 10976  056C  300A               	movlw	10
 10977  056D  064D               	xorwf	sprintf@c^(0+128),w
 10978  056E  1D03               	btfss	3,2
 10979  056F  2D71               	goto	u6251
 10980  0570  2D72               	goto	u6250
 10981  0571                     u6251:
 10982  0571  2D1D               	goto	l3952
 10983  0572                     u6250:
 10984  0572                     l3958:
 10985                           
 10986                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < prec)
 10987  0572  084C               	movf	(sprintf@prec+1)^(0+128),w
 10988  0573  3A80               	xorlw	128
 10989  0574  3C80               	sublw	128
 10990  0575  1D03               	skipz
 10991  0576  2D79               	goto	u6265
 10992  0577  084B               	movf	sprintf@prec^(0+128),w
 10993  0578  024D               	subwf	sprintf@c^(0+128),w
 10994  0579                     u6265:
 10995  0579  1803               	skipnc
 10996  057A  2D7C               	goto	u6261
 10997  057B  2D7D               	goto	u6260
 10998  057C                     u6261:
 10999  057C  2D88               	goto	l3962
 11000  057D                     u6260:
 11001  057D                     l3960:
 11002                           
 11003                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (char)prec;
 11004  057D  1683               	bsf	3,5	;RP0=1, select bank1
 11005  057E  1303               	bcf	3,6	;RP1=0, select bank1
 11006  057F  084B               	movf	sprintf@prec^(0+128),w
 11007  0580  1283               	bcf	3,5	;RP0=0, select bank0
 11008  0581  1303               	bcf	3,6	;RP1=0, select bank0
 11009  0582  00EA               	movwf	??_sprintf
 11010  0583  086A               	movf	??_sprintf,w
 11011  0584  1683               	bsf	3,5	;RP0=1, select bank1
 11012  0585  1303               	bcf	3,6	;RP1=0, select bank1
 11013  0586  00CD               	movwf	sprintf@c^(0+128)
 11014  0587  2DAC               	goto	l3966
 11015  0588                     l3962:
 11016  0588  1683               	bsf	3,5	;RP0=1, select bank1
 11017  0589  1303               	bcf	3,6	;RP1=0, select bank1
 11018  058A  084C               	movf	(sprintf@prec+1)^(0+128),w
 11019  058B  3A80               	xorlw	128
 11020  058C  1283               	bcf	3,5	;RP0=0, select bank0
 11021  058D  1303               	bcf	3,6	;RP1=0, select bank0
 11022  058E  00EA               	movwf	??_sprintf
 11023  058F  3080               	movlw	128
 11024  0590  026A               	subwf	??_sprintf,w
 11025  0591  1D03               	skipz
 11026  0592  2D97               	goto	u6275
 11027  0593  1683               	bsf	3,5	;RP0=1, select bank1
 11028  0594  1303               	bcf	3,6	;RP1=0, select bank1
 11029  0595  084D               	movf	sprintf@c^(0+128),w
 11030  0596  024B               	subwf	sprintf@prec^(0+128),w
 11031  0597                     u6275:
 11032  0597  1803               	skipnc
 11033  0598  2D9A               	goto	u6271
 11034  0599  2D9B               	goto	u6270
 11035  059A                     u6271:
 11036  059A  2DAC               	goto	l3966
 11037  059B                     u6270:
 11038  059B                     l3964:
 11039                           
 11040                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c;
 11041  059B  1683               	bsf	3,5	;RP0=1, select bank1
 11042  059C  1303               	bcf	3,6	;RP1=0, select bank1
 11043  059D  084D               	movf	sprintf@c^(0+128),w
 11044  059E  1283               	bcf	3,5	;RP0=0, select bank0
 11045  059F  1303               	bcf	3,6	;RP1=0, select bank0
 11046  05A0  00EA               	movwf	??_sprintf
 11047  05A1  01EB               	clrf	??_sprintf+1
 11048  05A2  086A               	movf	??_sprintf,w
 11049  05A3  1683               	bsf	3,5	;RP0=1, select bank1
 11050  05A4  1303               	bcf	3,6	;RP1=0, select bank1
 11051  05A5  00CB               	movwf	sprintf@prec^(0+128)
 11052  05A6  1283               	bcf	3,5	;RP0=0, select bank0
 11053  05A7  1303               	bcf	3,6	;RP1=0, select bank0
 11054  05A8  086B               	movf	??_sprintf+1,w
 11055  05A9  1683               	bsf	3,5	;RP0=1, select bank1
 11056  05AA  1303               	bcf	3,6	;RP1=0, select bank1
 11057  05AB  00CC               	movwf	(sprintf@prec+1)^(0+128)
 11058  05AC                     l3966:
 11059                           
 11060                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width && flag & 0x03
      +                          )
 11061  05AC  1683               	bsf	3,5	;RP0=1, select bank1
 11062  05AD  1303               	bcf	3,6	;RP1=0, select bank1
 11063  05AE  083A               	movf	sprintf@width^(0+128),w
 11064  05AF  043B               	iorwf	(sprintf@width+1)^(0+128),w
 11065  05B0  1903               	btfsc	3,2
 11066  05B1  2DB3               	goto	u6281
 11067  05B2  2DB4               	goto	u6280
 11068  05B3                     u6281:
 11069  05B3  2DCE               	goto	l3972
 11070  05B4                     u6280:
 11071  05B4                     l3968:
 11072  05B4  3003               	movlw	3
 11073  05B5  0538               	andwf	sprintf@flag^(0+128),w
 11074  05B6  1283               	bcf	3,5	;RP0=0, select bank0
 11075  05B7  1303               	bcf	3,6	;RP1=0, select bank0
 11076  05B8  00EA               	movwf	??_sprintf
 11077  05B9  3000               	movlw	0
 11078  05BA  1683               	bsf	3,5	;RP0=1, select bank1
 11079  05BB  1303               	bcf	3,6	;RP1=0, select bank1
 11080  05BC  0539               	andwf	(sprintf@flag+1)^(0+128),w
 11081  05BD  1283               	bcf	3,5	;RP0=0, select bank0
 11082  05BE  1303               	bcf	3,6	;RP1=0, select bank0
 11083  05BF  00EB               	movwf	??_sprintf+1
 11084  05C0  086A               	movf	??_sprintf,w
 11085  05C1  046B               	iorwf	??_sprintf+1,w
 11086  05C2  1903               	btfsc	3,2
 11087  05C3  2DC5               	goto	u6291
 11088  05C4  2DC6               	goto	u6290
 11089  05C5                     u6291:
 11090  05C5  2DCE               	goto	l3972
 11091  05C6                     u6290:
 11092  05C6                     l3970:
 11093                           
 11094                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11095  05C6  30FF               	movlw	255
 11096  05C7  1683               	bsf	3,5	;RP0=1, select bank1
 11097  05C8  1303               	bcf	3,6	;RP1=0, select bank1
 11098  05C9  07BA               	addwf	sprintf@width^(0+128),f
 11099  05CA  1803               	skipnc
 11100  05CB  0ABB               	incf	(sprintf@width+1)^(0+128),f
 11101  05CC  30FF               	movlw	255
 11102  05CD  07BB               	addwf	(sprintf@width+1)^(0+128),f
 11103  05CE                     l3972:
 11104                           
 11105                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag & 0x4000) {
 11106  05CE  1683               	bsf	3,5	;RP0=1, select bank1
 11107  05CF  1303               	bcf	3,6	;RP1=0, select bank1
 11108  05D0  1F39               	btfss	(sprintf@flag+1)^(0+128),6
 11109  05D1  2DD3               	goto	u6301
 11110  05D2  2DD4               	goto	u6300
 11111  05D3                     u6301:
 11112  05D3  2DF7               	goto	l3980
 11113  05D4                     u6300:
 11114  05D4                     l3974:
 11115                           
 11116                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width > prec)
 11117  05D4  084C               	movf	(sprintf@prec+1)^(0+128),w
 11118  05D5  3A80               	xorlw	128
 11119  05D6  1283               	bcf	3,5	;RP0=0, select bank0
 11120  05D7  1303               	bcf	3,6	;RP1=0, select bank0
 11121  05D8  00EA               	movwf	??_sprintf
 11122  05D9  1683               	bsf	3,5	;RP0=1, select bank1
 11123  05DA  1303               	bcf	3,6	;RP1=0, select bank1
 11124  05DB  083B               	movf	(sprintf@width+1)^(0+128),w
 11125  05DC  3A80               	xorlw	128
 11126  05DD  1283               	bcf	3,5	;RP0=0, select bank0
 11127  05DE  1303               	bcf	3,6	;RP1=0, select bank0
 11128  05DF  026A               	subwf	??_sprintf,w
 11129  05E0  1D03               	skipz
 11130  05E1  2DE6               	goto	u6315
 11131  05E2  1683               	bsf	3,5	;RP0=1, select bank1
 11132  05E3  1303               	bcf	3,6	;RP1=0, select bank1
 11133  05E4  083A               	movf	sprintf@width^(0+128),w
 11134  05E5  024B               	subwf	sprintf@prec^(0+128),w
 11135  05E6                     u6315:
 11136  05E6  1803               	skipnc
 11137  05E7  2DE9               	goto	u6311
 11138  05E8  2DEA               	goto	u6310
 11139  05E9                     u6311:
 11140  05E9  2DF3               	goto	l3978
 11141  05EA                     u6310:
 11142  05EA                     l3976:
 11143                           
 11144                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -= prec;
 11145  05EA  1683               	bsf	3,5	;RP0=1, select bank1
 11146  05EB  1303               	bcf	3,6	;RP1=0, select bank1
 11147  05EC  084B               	movf	sprintf@prec^(0+128),w
 11148  05ED  02BA               	subwf	sprintf@width^(0+128),f
 11149  05EE  084C               	movf	(sprintf@prec+1)^(0+128),w
 11150  05EF  1C03               	skipc
 11151  05F0  03BB               	decf	(sprintf@width+1)^(0+128),f
 11152  05F1  02BB               	subwf	(sprintf@width+1)^(0+128),f
 11153  05F2  2DF7               	goto	l3980
 11154  05F3                     l3978:
 11155                           
 11156                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width = 0;
 11157  05F3  1683               	bsf	3,5	;RP0=1, select bank1
 11158  05F4  1303               	bcf	3,6	;RP1=0, select bank1
 11159  05F5  01BA               	clrf	sprintf@width^(0+128)
 11160  05F6  01BB               	clrf	(sprintf@width+1)^(0+128)
 11161  05F7                     l3980:
 11162                           
 11163                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width > c)
 11164  05F7  083B               	movf	(sprintf@width+1)^(0+128),w
 11165  05F8  3A80               	xorlw	128
 11166  05F9  3C80               	sublw	128
 11167  05FA  1D03               	skipz
 11168  05FB  2DFE               	goto	u6325
 11169  05FC  083A               	movf	sprintf@width^(0+128),w
 11170  05FD  024D               	subwf	sprintf@c^(0+128),w
 11171  05FE                     u6325:
 11172  05FE  1803               	skipnc
 11173  05FF  2E01               	goto	u6321
 11174  0600  2E02               	goto	u6320
 11175  0601                     u6321:
 11176  0601  2E16               	goto	l3984
 11177  0602                     u6320:
 11178  0602                     l3982:
 11179                           
 11180                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -= c;
 11181  0602  1683               	bsf	3,5	;RP0=1, select bank1
 11182  0603  1303               	bcf	3,6	;RP1=0, select bank1
 11183  0604  084D               	movf	sprintf@c^(0+128),w
 11184  0605  1283               	bcf	3,5	;RP0=0, select bank0
 11185  0606  1303               	bcf	3,6	;RP1=0, select bank0
 11186  0607  00EA               	movwf	??_sprintf
 11187  0608  01EB               	clrf	??_sprintf+1
 11188  0609  086A               	movf	??_sprintf,w
 11189  060A  1683               	bsf	3,5	;RP0=1, select bank1
 11190  060B  1303               	bcf	3,6	;RP1=0, select bank1
 11191  060C  02BA               	subwf	sprintf@width^(0+128),f
 11192  060D  1283               	bcf	3,5	;RP0=0, select bank0
 11193  060E  1303               	bcf	3,6	;RP1=0, select bank0
 11194  060F  086B               	movf	??_sprintf+1,w
 11195  0610  1683               	bsf	3,5	;RP0=1, select bank1
 11196  0611  1303               	bcf	3,6	;RP1=0, select bank1
 11197  0612  1C03               	skipc
 11198  0613  03BB               	decf	(sprintf@width+1)^(0+128),f
 11199  0614  02BB               	subwf	(sprintf@width+1)^(0+128),f
 11200  0615  2E1A               	goto	l3986
 11201  0616                     l3984:
 11202                           
 11203                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 0;
 11204  0616  1683               	bsf	3,5	;RP0=1, select bank1
 11205  0617  1303               	bcf	3,6	;RP1=0, select bank1
 11206  0618  01BA               	clrf	sprintf@width^(0+128)
 11207  0619  01BB               	clrf	(sprintf@width+1)^(0+128)
 11208  061A                     l3986:
 11209                           
 11210                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11211  061A  083A               	movf	sprintf@width^(0+128),w
 11212  061B  043B               	iorwf	(sprintf@width+1)^(0+128),w
 11213  061C  1903               	btfsc	3,2
 11214  061D  2E1F               	goto	u6331
 11215  061E  2E20               	goto	u6330
 11216  061F                     u6331:
 11217  061F  2E3F               	goto	l3994
 11218  0620                     u6330:
 11219  0620                     l3988:
 11220                           
 11221                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp++ = (' ')));
 11222  0620  3020               	movlw	32
 11223  0621  1283               	bcf	3,5	;RP0=0, select bank0
 11224  0622  1303               	bcf	3,6	;RP1=0, select bank0
 11225  0623  00EA               	movwf	??_sprintf
 11226  0624  1683               	bsf	3,5	;RP0=1, select bank1
 11227  0625  1303               	bcf	3,6	;RP1=0, select bank1
 11228  0626  084A               	movf	sprintf@sp^(0+128),w
 11229  0627  0084               	movwf	4
 11230  0628  1283               	bcf	3,5	;RP0=0, select bank0
 11231  0629  1303               	bcf	3,6	;RP1=0, select bank0
 11232  062A  086A               	movf	??_sprintf,w
 11233  062B  1383               	bcf	3,7	;select IRP bank0
 11234  062C  0080               	movwf	0
 11235  062D                     l3990:
 11236  062D  3001               	movlw	1
 11237  062E  00EA               	movwf	??_sprintf
 11238  062F  086A               	movf	??_sprintf,w
 11239  0630  1683               	bsf	3,5	;RP0=1, select bank1
 11240  0631  1303               	bcf	3,6	;RP1=0, select bank1
 11241  0632  07CA               	addwf	sprintf@sp^(0+128),f
 11242  0633                     l3992:
 11243  0633  30FF               	movlw	255
 11244  0634  07BA               	addwf	sprintf@width^(0+128),f
 11245  0635  1803               	skipnc
 11246  0636  0ABB               	incf	(sprintf@width+1)^(0+128),f
 11247  0637  30FF               	movlw	255
 11248  0638  07BB               	addwf	(sprintf@width+1)^(0+128),f
 11249  0639  083A               	movf	sprintf@width^(0+128),w
 11250  063A  043B               	iorwf	(sprintf@width+1)^(0+128),w
 11251  063B  1D03               	btfss	3,2
 11252  063C  2E3E               	goto	u6341
 11253  063D  2E3F               	goto	u6340
 11254  063E                     u6341:
 11255  063E  2E20               	goto	l3988
 11256  063F                     u6340:
 11257  063F                     l3994:
 11258                           
 11259                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
 11260  063F  3003               	movlw	3
 11261  0640  0538               	andwf	sprintf@flag^(0+128),w
 11262  0641  1283               	bcf	3,5	;RP0=0, select bank0
 11263  0642  1303               	bcf	3,6	;RP1=0, select bank0
 11264  0643  00EA               	movwf	??_sprintf
 11265  0644  3000               	movlw	0
 11266  0645  1683               	bsf	3,5	;RP0=1, select bank1
 11267  0646  1303               	bcf	3,6	;RP1=0, select bank1
 11268  0647  0539               	andwf	(sprintf@flag+1)^(0+128),w
 11269  0648  1283               	bcf	3,5	;RP0=0, select bank0
 11270  0649  1303               	bcf	3,6	;RP1=0, select bank0
 11271  064A  00EB               	movwf	??_sprintf+1
 11272  064B  086A               	movf	??_sprintf,w
 11273  064C  046B               	iorwf	??_sprintf+1,w
 11274  064D  1903               	btfsc	3,2
 11275  064E  2E50               	goto	u6351
 11276  064F  2E51               	goto	u6350
 11277  0650                     u6351:
 11278  0650  2ECA               	goto	l4006
 11279  0651                     u6350:
 11280  0651                     l3996:
 11281                           
 11282                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
 11283  0651  302D               	movlw	45
 11284  0652  00EA               	movwf	??_sprintf
 11285  0653  1683               	bsf	3,5	;RP0=1, select bank1
 11286  0654  1303               	bcf	3,6	;RP1=0, select bank1
 11287  0655  084A               	movf	sprintf@sp^(0+128),w
 11288  0656  0084               	movwf	4
 11289  0657  1283               	bcf	3,5	;RP0=0, select bank0
 11290  0658  1303               	bcf	3,6	;RP1=0, select bank0
 11291  0659  086A               	movf	??_sprintf,w
 11292  065A  1383               	bcf	3,7	;select IRP bank0
 11293  065B  0080               	movwf	0
 11294  065C                     l3998:
 11295  065C  3001               	movlw	1
 11296  065D  00EA               	movwf	??_sprintf
 11297  065E  086A               	movf	??_sprintf,w
 11298  065F  1683               	bsf	3,5	;RP0=1, select bank1
 11299  0660  1303               	bcf	3,6	;RP1=0, select bank1
 11300  0661  07CA               	addwf	sprintf@sp^(0+128),f
 11301  0662  2ECA               	goto	l4006
 11302  0663                     l4000:
 11303                           
 11304                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpowers[(unsigned int)prec]) % 
      +                          10 + '0';
 11305  0663  3000               	movlw	0
 11306  0664  1283               	bcf	3,5	;RP0=0, select bank0
 11307  0665  1303               	bcf	3,6	;RP1=0, select bank0
 11308  0666  00A8               	movwf	___llmod@divisor+3
 11309  0667  3000               	movlw	0
 11310  0668  00A7               	movwf	___llmod@divisor+2
 11311  0669  3000               	movlw	0
 11312  066A  00A6               	movwf	___llmod@divisor+1
 11313  066B  300A               	movlw	10
 11314  066C  00A5               	movwf	___llmod@divisor
 11315  066D  1683               	bsf	3,5	;RP0=1, select bank1
 11316  066E  1303               	bcf	3,6	;RP1=0, select bank1
 11317  066F  084B               	movf	sprintf@prec^(0+128),w
 11318  0670  1283               	bcf	3,5	;RP0=0, select bank0
 11319  0671  1303               	bcf	3,6	;RP1=0, select bank0
 11320  0672  00EA               	movwf	??_sprintf
 11321  0673  3001               	movlw	1
 11322  0674                     u6365:
 11323  0674  1003               	clrc
 11324  0675  0DEA               	rlf	??_sprintf,f
 11325  0676  3EFF               	addlw	-1
 11326  0677  1D03               	skipz
 11327  0678  2E74               	goto	u6365
 11328  0679  1003               	clrc
 11329  067A  0D6A               	rlf	??_sprintf,w
 11330  067B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11331  067C  0084               	movwf	4
 11332  067D  120A  118A  270A  120A  118A  	fcall	stringdir
 11333  0682  00F2               	movwf	___lldiv@divisor
 11334  0683  120A  118A  270A  120A  118A  	fcall	stringdir
 11335  0688  00F3               	movwf	___lldiv@divisor+1
 11336  0689  120A  118A  270A  120A  118A  	fcall	stringdir
 11337  068E  00F4               	movwf	___lldiv@divisor+2
 11338  068F  120A  118A  270A  120A  118A  	fcall	stringdir
 11339  0694  00F5               	movwf	___lldiv@divisor+3
 11340  0695  1683               	bsf	3,5	;RP0=1, select bank1
 11341  0696  1303               	bcf	3,6	;RP1=0, select bank1
 11342  0697  0843               	movf	(sprintf@val+3)^(0+128),w
 11343  0698  00F9               	movwf	___lldiv@dividend+3
 11344  0699  0842               	movf	(sprintf@val+2)^(0+128),w
 11345  069A  00F8               	movwf	___lldiv@dividend+2
 11346  069B  0841               	movf	(sprintf@val+1)^(0+128),w
 11347  069C  00F7               	movwf	___lldiv@dividend+1
 11348  069D  0840               	movf	sprintf@val^(0+128),w
 11349  069E  00F6               	movwf	___lldiv@dividend
 11350  069F  160A  158A  23D0  120A  118A  	fcall	___lldiv
 11351  06A4  0875               	movf	?___lldiv+3,w
 11352  06A5  1283               	bcf	3,5	;RP0=0, select bank0
 11353  06A6  1303               	bcf	3,6	;RP1=0, select bank0
 11354  06A7  00AC               	movwf	___llmod@dividend+3
 11355  06A8  0874               	movf	?___lldiv+2,w
 11356  06A9  00AB               	movwf	___llmod@dividend+2
 11357  06AA  0873               	movf	?___lldiv+1,w
 11358  06AB  00AA               	movwf	___llmod@dividend+1
 11359  06AC  0872               	movf	?___lldiv,w
 11360  06AD  00A9               	movwf	___llmod@dividend
 11361  06AE  160A  158A  2323  120A  118A  	fcall	___llmod
 11362  06B3  1283               	bcf	3,5	;RP0=0, select bank0
 11363  06B4  1303               	bcf	3,6	;RP1=0, select bank0
 11364  06B5  0825               	movf	?___llmod,w
 11365  06B6  3E30               	addlw	48
 11366  06B7  00EB               	movwf	??_sprintf+1
 11367  06B8  086B               	movf	??_sprintf+1,w
 11368  06B9  1683               	bsf	3,5	;RP0=1, select bank1
 11369  06BA  1303               	bcf	3,6	;RP1=0, select bank1
 11370  06BB  00CD               	movwf	sprintf@c^(0+128)
 11371  06BC                     l4002:
 11372                           
 11373                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
 11374  06BC  084D               	movf	sprintf@c^(0+128),w
 11375  06BD  1283               	bcf	3,5	;RP0=0, select bank0
 11376  06BE  1303               	bcf	3,6	;RP1=0, select bank0
 11377  06BF  00EA               	movwf	??_sprintf
 11378  06C0  1683               	bsf	3,5	;RP0=1, select bank1
 11379  06C1  1303               	bcf	3,6	;RP1=0, select bank1
 11380  06C2  084A               	movf	sprintf@sp^(0+128),w
 11381  06C3  0084               	movwf	4
 11382  06C4  1283               	bcf	3,5	;RP0=0, select bank0
 11383  06C5  1303               	bcf	3,6	;RP1=0, select bank0
 11384  06C6  086A               	movf	??_sprintf,w
 11385  06C7  1383               	bcf	3,7	;select IRP bank0
 11386  06C8  0080               	movwf	0
 11387  06C9  2E5C               	goto	l3998
 11388  06CA                     l4006:
 11389                           
 11390                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
 11391  06CA  30FF               	movlw	255
 11392  06CB  1683               	bsf	3,5	;RP0=1, select bank1
 11393  06CC  1303               	bcf	3,6	;RP1=0, select bank1
 11394  06CD  07CB               	addwf	sprintf@prec^(0+128),f
 11395  06CE  1803               	skipnc
 11396  06CF  0ACC               	incf	(sprintf@prec+1)^(0+128),f
 11397  06D0  30FF               	movlw	255
 11398  06D1  07CC               	addwf	(sprintf@prec+1)^(0+128),f
 11399  06D2  0A4B               	incf	sprintf@prec^(0+128),w
 11400  06D3  1D03               	skipz
 11401  06D4  2ED9               	goto	u6371
 11402  06D5  0A4C               	incf	(sprintf@prec+1)^(0+128),w
 11403  06D6  1D03               	btfss	3,2
 11404  06D7  2ED9               	goto	u6371
 11405  06D8  2EDA               	goto	u6370
 11406  06D9                     u6371:
 11407  06D9  2E63               	goto	l4000
 11408  06DA                     u6370:
 11409  06DA                     l4008:
 11410                           
 11411                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
 11412  06DA  3001               	movlw	1
 11413  06DB  1683               	bsf	3,5	;RP0=1, select bank1
 11414  06DC  1303               	bcf	3,6	;RP1=0, select bank1
 11415  06DD  07A8               	addwf	sprintf@f^(0+128),f
 11416  06DE  30FF               	movlw	-1
 11417  06DF  0728               	addwf	sprintf@f^(0+128),w
 11418  06E0  0084               	movwf	4
 11419  06E1  120A  118A  270A  120A  118A  	fcall	stringdir
 11420  06E6  1283               	bcf	3,5	;RP0=0, select bank0
 11421  06E7  1303               	bcf	3,6	;RP1=0, select bank0
 11422  06E8  00EA               	movwf	??_sprintf
 11423  06E9  086A               	movf	??_sprintf,w
 11424  06EA  1683               	bsf	3,5	;RP0=1, select bank1
 11425  06EB  1303               	bcf	3,6	;RP1=0, select bank1
 11426  06EC  00CD               	movwf	sprintf@c^(0+128)
 11427  06ED  084D               	movf	sprintf@c^(0+128),w
 11428  06EE  1D03               	btfss	3,2
 11429  06EF  2EF1               	goto	u6381
 11430  06F0  2EF4               	goto	u6380
 11431  06F1                     u6381:
 11432  06F1  160A  118A  2D02   	goto	l3728
 11433  06F4                     u6380:
 11434  06F4                     l4010:
 11435                           
 11436                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11437  06F4  1683               	bsf	3,5	;RP0=1, select bank1
 11438  06F5  1303               	bcf	3,6	;RP1=0, select bank1
 11439  06F6  084A               	movf	sprintf@sp^(0+128),w
 11440  06F7  0084               	movwf	4
 11441  06F8  1383               	bcf	3,7	;select IRP bank0
 11442  06F9  0180               	clrf	0
 11443  06FA                     l353:
 11444  06FA  0008               	return
 11445  06FB                     __end_of_sprintf:

Data Sizes:
    Strings     34
    Constant    144
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     79      79
    BANK1            80     49      78
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> pantalla(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    LCD_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[15]), pantalla(BANK1[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___flmul->__Umul8_16
    _LCD_clear->_LCD_Command
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Command
    _LCD_Init->_LCD_Command
    _LCD_Command->_LCD_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _LeerADC->___flmul
    ___flmul->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   39958
                                             46 BANK1      3     3      0
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                          _LCD_clear
                            _LeerADC
                            _initADC
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             48    37     11   33910
                                             74 BANK0      5     5      0
                                              8 BANK1     38    27     11
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6291
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              8 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     952
                                              5 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LeerADC                                             13     9      4    5087
                                             34 BANK0     13     9      4
                         _ADC_Select
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Select                                           3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            0     0      0      62
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2     372
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0      62
                                              3 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     434
                                              6 COMMON     4     3      1
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      93
                                              6 COMMON     2     2      0
                        _LCD_Command
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      62
                                              3 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Command
       _LCD_Port
     _LCD_Port
   _LCD_Set_Cursor
     _LCD_Command
       _LCD_Port
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _LCD_clear
     _LCD_Command
       _LCD_Port
   _LeerADC
     _ADC_Select
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _initADC
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     31      4E       7       97.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 00:58:21 2021

                        pc 0002               ?_LCD_Command 0070                         l80 1BCF  
                       l74 1937                         l93 18F1                         l77 1B8F  
                       l96 1005                         _V1 00D5                         _V2 00D1  
                       l99 1914               ___awdiv@sign 0025                         fsr 0004  
      ___wmul@multiplicand 0074        __Umul8_16@word_mpld 0078                        l102 18B9  
                      l111 195B                        l105 1A82                        l132 18C6  
                      l117 19ED                        l152 1D3C                        l323 031A  
                      l316 02C8                        l261 0FFF                        l254 126B  
                      l510 1CA0                        l353 06FA                        l531 08FE  
                      l523 105E                        l283 15E3                        l613 1B78  
                      l357 1968                        l543 1AA1                        l551 1DC7  
                      l359 1980                        l527 093B                        l544 1ABD  
                      l552 1DE0                        l560 087D                        l528 08A0  
                      l801 19A7                        l545 1AD2                        l705 1441  
                      l393 1C37                        l730 1B22                        l570 087D  
                      l538 092E                        l715 1487                        l548 1D5B  
                      l556 18AC                        l709 1465                        l830 1EF0  
                      l726 14E7                        l718 14C5                        l574 1FFF  
                      l727 14F3                        l567 0868                        l575 1F71  
                      l663 1A33                        l824 1EAB                        l585 1FF2  
                      l673 07FB                        l826 1F42                        l690 134D  
                      l578 1FC2                        l780 0C9C                        l684 12CF  
                      l844 18D8                        l837 1F0C                        l838 1F18  
                      l792 0C90                        l688 1376                        l697 14F3  
                      l786 0C08                        l799 1995                        _RE0 0048  
                      _RE1 0049                        _ISR 1893        __size_of_ADC_Select 009C  
                      fsr0 0004                        indf 0000               ___awmod@sign 0078  
             ___flmul@aexp 003A               ___flmul@bexp 003B                _sprintf$979 00B3  
             ___flmul@sign 0035               ___flmul@temp 0040               ___flmul@prod 003C  
                     ?_ISR 0070             _LCD_Set_Cursor 1938               ___fltol@exp1 005F  
                     l3000 195E                       l3002 1962                       l3100 0856  
                     l3020 1BF6                       l3012 1BD0                       l3004 196F  
                     l2300 1C3F                       l3110 0872                       l3030 1C29  
                     l3022 1BFF                       l3014 1BE2                       l3006 1976  
                     l2310 1C53                       l2302 1C44                       l3200 1932  
                     l3040 1AB5                       l3024 1C11                       l3016 1BE5  
                     l3032 1C2F                       l3008 197C                       l2320 1C69  
                     l2312 1C55                       l2304 1C46                       l4000 0663  
                     l3202 1933                       l3042 1ACF                       l3050 1D53  
                     l3106 085D                       l3026 1C1F                       l3018 1BF2  
                     l2410 07D2                       l2330 1C8C                       l2322 1C6D  
                     l2314 1C5B                       l2306 1C4A                       l4002 06BC  
                     l4010 06F4                       l4020 1939                       l3140 1E8F  
                     l3204 18BA                       l3044 1AD1                       l3036 1A83  
                     l3060 1DA3                       l3052 1D6F                       l2500 1311  
                     l3132 1AD3                       l3108 086D                       l3028 1C20  
                     l2420 07F1                       l2412 07D6                       l2404 07C2  
                     l2324 1C7E                       l2316 1C5E                       l2332 1C92  
                     l2308 1C4F                       l2340 1006                       l4030 1955  
                     l4022 193E                       l4110 1D10                       l3150 1EBC  
                     l3142 1E93                       l3230 1B85                       l3206 18C1  
                     l3038 1A99                       l3062 1DDD                       l3054 1D77  
                     l3070 18AA                       l2510 1351                       l2502 1315  
                     l2430 1279                       l3134 1AD7                       l2414 07DA  
                     l2406 07C8                       l2422 07F7                       l2334 1C97  
                     l2326 1C84                       l2318 1C65                       l2350 1016  
                     l2342 1007                       l4006 06CA                       l4024 1943  
                     l4032 19A8                       l2280 1982                       l3160 1EE7  
                     l3152 1EC1                       l3144 1EA3                       l3232 1B8C  
                     l3224 1B7C                       l3208 18C3                       l3064 1DDF  
                     l3056 1D7B                       l3048 1D3D                       l3072 18AC  
                     l2600 14C1                       l2520 136A                       l2512 135A  
                     l2504 1319                       l2440 1290                       l2432 127D  
                     l2416 07E4                       l2408 07CB                       l2336 1C9C  
                     l2328 1C85                       l2360 102F                       l2352 101B  
                     l2344 100B                       l4008 06DA                       l4040 1DE1  
                     l4026 194A                       l4034 19AD                       l2290 19A3  
                     l2282 1984                       l3170 1F1A                       l3162 1EF7  
                     l3154 1ECE                       l3146 1EB3                       l3138 1E8A  
                     l3234 1B93                       l3226 1B7C                       l3058 1D9F  
                     l2610 14DD                       l2602 14CA                       l2530 1388  
                     l2514 135C                       l2522 136E                       l2506 131A  
                     l2450 12A6                       l2442 1291                       l2434 127E  
                     l2426 126C                       l3090 0838                       l3082 0818  
                     l2418 07EA                       l2362 1033                       l2354 1021  
                     l2370 1050                       l2346 1010                       l4050 1E53  
                     l4042 1DF5                       l4028 1950                       l4036 19C9  
                     l2284 198B                       l2700 0B8C                       l2620 093C  
                     l3172 1F30                       l3164 1F02                       l3156 1ED5  
                     l3236 1BC7                       l3228 1B82                       l3068 18A2  
                     l2612 14E1                       l2604 14CF                       l2540 13B2  
                     l2532 139F                       l2524 137A                       l2516 1360  
                     l2508 1331                       l2460 12B7                       l2452 12A7  
                     l2436 1283                       l2444 1293                       l2428 1273  
                     l3092 083C                       l3084 082D                       l3076 0802  
                     l2372 1055                       l2364 103D                       l2356 1024  
                     l2348 1012                       l4108 15FD                       l4052 1E5B  
                     l4044 1E13                       l4038 19D1                       l2286 198F  
                     l2710 0BD8                       l2702 0BB4                       l2630 0953  
                     l2622 0943                       l3174 1F35                       l3166 1F06  
                     l3158 1ED9                       l3190 1923                       l3182 1915  
                     l2614 14E3                       l2606 14D7                       l2550 13DB  
                     l2542 13B6                       l2534 13A3                       l2526 137F  
                     l2518 1361                       l2470 12D5                       l2462 12BC  
                     l2454 12AD                       l2446 129B                       l2438 1288  
                     l3086 082E                       l3078 080F                       l2374 105A  
                     l2366 1043                       l2358 102B                       l4054 1E6C  
                     l4046 1E31                       l2288 199E                       l2720 0BED  
                     l2712 0BD9                       l2704 0BBD                       l2640 096F  
                     l2632 0958                       l2624 0949                       l3176 1F39  
                     l3168 1F10                       l3192 1926                       l3184 191B  
                     l2616 14EE                       l2608 14DC                       l2560 1449  
                     l2552 1419                       l2544 13B7                       l2536 13A7  
                     l2480 12E9                       l2472 12D9                       l2464 12C4  
                     l2456 12B1                       l2448 12A0                       l3088 0836  
                     l2296 1C38                       l2368 104A                       l4056 1E75  
                     l4048 1E4E                       l2730 0C12                       l2722 0BF1  
                     l2714 0BE2                       l2706 0BCB                       l2650 0984  
                     l2642 0975                       l2634 0960                       l2626 094D  
                     l3178 1F3A                       l3194 1929                       l3186 191F  
                     l2618 14F2                       l2570 1464                       l2562 144E  
                     l2554 141F                       l2546 13C0                       l2538 13B0  
                     l2490 12FD                       l2482 12ED                       l2474 12DD  
                     l2466 12C5                       l2458 12B2                       l3098 0844  
                     l2298 1C3B                       l2740 0C50                       l2732 0C20  
                     l2724 0C05                       l2708 0BD4                       l2716 0BE8  
                     l2660 09A0                       l2652 098C                       l2644 0979  
                     l2636 0962                       l2628 094E                       l3196 192C  
                     l3188 1920                       l2572 1469                       l2580 1475  
                     l2556 1424                       l2548 13C5                       l2492 1301  
                     l2484 12F1                       l2476 12E1                       l2468 12C7  
                     l3700 1B41                       l2900 1F5F                       l3622 1001  
                     l2750 0C84                       l2742 0C5B                       l2734 0C24  
                     l2718 0BEC                       l2670 09E3                       l2654 098E  
                     l2646 097A                       l2638 096A                       l3198 192F  
                     l2574 146C                       l2566 1457                       l2558 1433  
                     l2582 1479                       l2494 1305                       l2486 12F5  
                     l2478 12E5                       l3702 1B53                       l2910 1F87  
                     l3630 19FB                       l3720 1A55                       l3712 1A34  
                     l2760 1CA2                       l2752 0C88                       l2744 0C6A  
                     l2736 0C3D                       l2728 0C0D                       l2680 0A6C  
                     l2672 09FF                       l2664 09A9                       l2656 0996  
                     l2648 097F                       l2592 148C                       l2584 147A  
                     l2576 146E                       l2568 1460                       l2496 1309  
                     l2488 12F9                       l3704 1B61                       l2920 1FB3  
                     l2912 1F89                       l3640 1A21                       l3632 1A02  
                     l3624 19EE                       l3800 16DB                       l3722 1A5B  
                     l3714 1A38                       l3650 18DA                       l2770 1CBD  
                     l2762 1CA3                       l2754 0C89                       l2746 0C74  
                     l2738 0C43                       l2690 0ADF                       l2682 0A7C  
                     l2674 0A2B                       l2666 09B9                       l2658 099B  
                     l2594 1491                       l2586 147E                       l2578 1473  
                     l2498 130D                       l3706 1B6A                       l2922 1FB4  
                     l2914 1F92                       l2906 1F72                       l3642 1A22  
                     l3634 1A06                       l3626 19F2                       l2842 0CA0  
                     l3810 1768                       l3802 16DF                       l3730 1508  
                     l3716 1A3E                       l3660 18ED                       l3652 18DD  
                     l3724 18AD                       l2780 1CE0                       l2772 1CC4  
                     l2764 1CA8                       l2756 0C94                       l2748 0C76  
                     l2692 0AFC                       l2684 0A99                       l2676 0A47  
                     l2668 09C6                       l2596 149F                       l2588 1484  
                     l3708 1B70                       l2940 1FE7                       l2932 1FCE  
                     l2924 1FBC                       l2916 1F9B                       l2908 1F78  
                     l3644 1A29                       l3636 1A0A                       l3628 19F8  
                     l2860 0E26                       l2844 0CA4                       l3900 0310  
                     l3820 17EA                       l3812 1771                       l3804 16E5  
                     l3740 1534                       l3732 1515                       l3670 1908  
                     l3662 18F3                       l3718 1A47                       l3654 18E3  
                     l2790 1D03                       l2782 1CE7                       l2774 1CCB  
                     l2766 1CAF                       l2694 0B29                       l2686 0AA9  
                     l2678 0A63                       l2598 14A3                       l2942 1FF7  
                     l2926 1FC6                       l2934 1FE0                       l2918 1FA9  
                     l3638 1A1B                       l3646 1A2F                       l2854 0D97  
                     l2846 0CA6                       l3910 0361                       l3902 032B  
                     l3830 0089                       l3822 001D                       l3814 178C  
                     l3806 1704                       l3750 158A                       l3742 1549  
                     l3734 151C                       l3726 14F7                       l3672 190B  
                     l3664 18F6                       l3656 18E6                       l2784 1CEE  
                     l2776 1CD2                       l2768 1CB6                       l2696 0B39  
                     l2688 0AC6                       l2960 08A9                       l2952 0894  
                     l2872 0F44                       l2856 0D9E                       l2848 0CAD  
                     l2864 0E53                       l3912 03BC                       l3920 04A9  
                     l3904 0330                       l3840 00D7                       l3832 0092  
                     l3824 0038                       l3808 174F                       l3816 1794  
                     l3760 15C6                       l3752 158B                       l3744 1564  
                     l3736 1520                       l3728 1502                       l3666 18FC  
                     l3658 18EA                       l2786 1CF5                       l2778 1CD9  
                     l2794 1D08                       l2698 0B66                       l2970 08E0  
                     l2962 08BA                       l2946 087E                       l3682 1177  
                     l3674 1062                       l2890 18D7                       l2882 18C8  
                     l2874 0F4B                       l2866 0E5A                       l3922 04B1  
                     l3914 03FB                       l3906 033D                       l3834 009A  
                     l3826 005F                       l3842 00E0                       l3818 17A3  
                     l3930 04D1                       l3770 15E7                       l3762 15CE  
                     l3754 1593                       l3746 156C                       l3738 1530  
                     l3668 18FF                       l2788 1CFC                       l3692 1B23  
                     l2972 08EE                       l2964 08BC                       l2948 088B  
                     l3684 117D                       l3676 1068                       l2884 18C9  
                     l3940 0507                       l3932 04EC                       l3924 04BE  
                     l3916 043A                       l3908 0343                       l3860 019D  
                     l3844 0115                       l3836 00B8                       l3828 006E  
                     l3780 1639                       l3772 160B                       l3756 1596  
                     l3764 15DF                       l3748 157C                       l3694 1B2D  
                     l2974 08EF                       l2966 08C5                       l2958 08A1  
                     l2894 1F43                       l2886 18CF                       l2878 0FD3  
                     l3942 050D                       l3934 04F4                       l3926 04C4  
                     l3918 044E                       l3870 01FA                       l3862 01CC  
                     l3854 0148                       l3846 0144                       l3790 167B  
                     l3782 1641                       l3774 1621                       l3766 15E1  
                     l3758 15AB                       l3696 1B30                       l2992 0923  
                     l2984 090A                       l2976 08F8                       l2968 08CE  
                     l2896 1F56                       l3688 1228                       l2888 18D5  
                     l3960 057D                       l3952 051D                       l3944 0515  
                     l3936 04F8                       l3928 04CA                       l3880 022F  
                     l3864 01D2                       l3848 0146                       l3792 1694  
                     l3784 165A                       l3776 1627                       l3698 1B3D  
                     l2994 0933                       l2978 0902                       l2986 091C  
                     l3970 05C6                       l3962 0588                       l3946 051B  
                     l3938 04FC                       l3890 02DF                       l3882 0236  
                     l3866 01E4                       l3874 0201                       l3858 018F  
                     l3794 169F                       l3786 1673                       l3778 162B  
                     l3980 05F7                       l3972 05CE                       l3964 059B  
                     l3956 0564                       l3892 02E5                       l3884 0275  
                     l3876 0210                       l3868 01ED                       l3796 16A5  
                     l3788 1677                       l2998 195C                       l3990 062D  
                     l3982 0602                       l3974 05D4                       l3966 05AC  
                     l3958 0572                       l3894 02EB                       l3886 02B4  
                     l3878 0224                       l3798 16B8                       l3992 0633  
                     l3984 0616                       l3976 05EA                       l3968 05B4  
                     l3896 02F8                       l3888 02D2                       l3994 063F  
                     l3986 061A                       l3978 05F3                       l3898 0307  
                     l3996 0651                       l3988 0620                       l3998 065C  
                     STR_1 07A0                       STR_2 07B3                       u3000 1033  
                     u3001 1032                       u3010 103D                       u3011 103C  
                     u3030 1050                       u3031 104F                       u3015 1039  
                     u4000 0C88                       u3200 1288                       u3120 07C8  
                     u3040 1055                       u4001 0C87                       u3201 1287  
                     u3121 07C7                       u3041 1054                       u3025 1044  
                     u3210 12A6                       u3211 12A5                       u3300 1351  
                     u3220 12B1                       u3140 07DA                       u4100 0CAD  
                     u3301 1350                       u3221 12B0                       u3141 07D9  
                     u4101 0CAC                       u3310 1360                       u3230 12B7  
                     u3150 07E4                       u3311 135F                       u3231 12B6  
                     u3151 07E3                       u3135 07CC                       u5000 1F06  
                     u3240 12BC                       u5001 1F05                       u3241 12BB  
                     u5010 1F0C                       u3410 13DB                       u3330 1376  
                     u3250 12D5                       u3170 07F7                       u5011 1F0B  
                     u3411 13DA                       u3331 1375                       u3251 12D4  
                     u3171 07F6                       u3155 07E0                       u4115 0CCF  
                     u5020 1F10                       u3500 1473                       u3340 137A  
                     u3260 12D9                       u3180 127D                       u4220 0F4B  
                     u4140 0D9E                       u5021 1F0F                       u3501 1472  
                     u3421 13F2                       u3413 13D7                       u3405 13B9  
                     u3341 1379                       u3325 1363                       u3261 12D8  
                     u3181 127C                       u3165 07EB                       u4221 0F4A  
                     u4205 0EB8                       u4141 0D9D                       u4125 0D0B  
                     u5030 1F25                       u3510 1479                       u3430 1406  
                     u3422 13F3                       u3350 137F                       u3270 1331  
                     u3190 1283                       u4310 1FA9                       u3511 1478  
                     u3431 1407                       u3423 13F8                       u3351 137E  
                     u3271 1330                       u3191 1282                       u4311 1FA8  
                     u4215 0F03                       u4135 0D56                       u5040 1F35  
                     u3600 14CF                       u3520 147E                       u3440 1424  
                     u3432 140C                       u3424 13F9                       u3280 133C  
                     u4400 1FF7                       u6000 0038                       u5041 1F34  
                     u3601 14CE                       u3521 147D                       u3441 1423  
                     u3433 140D                       u3425 13FE                       u3361 1391  
                     u3281 133A                       u4401 1FF6                       u4305 1F94  
                     u6001 0037                       u5050 1F39                       u3610 14DC  
                     u3530 1484                       u3450 1449                       u3426 13FF  
                     u3370 13A3                       u3362 1398                       u3290 133D  
                     u4410 088B                       u4330 1FC2                       u4090 0CA4  
                     u6010 005F                       u5051 1F38                       u5035 1F20  
                     u3611 14DB                       u3531 1483                       u3451 1448  
                     u3371 13A2                       u3363 139F                       u3275 132D  
                     u4411 088A                       u4331 1FC1                       u4315 1FA5  
                     u4235 0F5E                       u4155 0DB1                       u4091 0CA3  
                     u6011 005E                       u3700 099B                       u5060 1B93  
                     u3620 14E1                       u3540 148B                       u3460 144E  
                     u3380 13A7                       u4500 091B                       u4420 089F  
                     u4340 1FC6                       u4260 18CF                       u2900 1C6D  
                     u4180 0E5A                       u6100 0224                       u6020 006E  
                     u3701 099A                       u5061 1B92                       u3621 14E0  
                     u3541 148A                       u3461 144D                       u3381 13A6  
                     u4501 091A                       u4421 089E                       u4341 1FC5  
                     u4325 1FB5                       u4261 18CE                       u2901 1C6C  
                     u4245 0F9A                       u4181 0E59                       u4165 0DED  
                     u6101 0223                       u6021 006D                       u2830 198F  
                     u3710 09A0                       u3630 14F2                       u3550 1491  
                     u3390 13B6                       u4510 0922                       u4350 1FCD  
                     u4270 18D5                       u6030 0089                       u2831 198E  
                     u3711 099F                       u3631 14F1                       u3551 1490  
                     u3391 13B5                       u4511 0921                       u4351 1FCC  
                     u4271 18D4                       u4255 0FD6                       u4175 0E29  
                     u6031 0088                       u3640 094D                       u3560 14A3  
                     u3480 1464                       u4600 1BF6                       u4440 08E0  
                     u4280 1F56                       u2920 1C7E                       u6200 04F8  
                     u6120 02D1                       u3801 0AEE                       u3721 09F1  
                     u3641 094C                       u3561 14A2                       u3481 1463  
                     u4601 1BF5                       u4441 08DF                       u4281 1F55  
                     u2921 1C7D                       u6201 04F7                       u6121 02D0  
                     u6025 006A                       u2850 19A3                       u3802 0AF5  
                     u3722 09F8                       u3650 0953                       u3570 14B2  
                     u3490 1469                       u4530 0933                       u4370 1FDF  
                     u4290 1F70                       u6210 050D                       u6130 02F8  
                     u6050 018E                       u2851 19A2                       u3811 0B1B  
                     u3803 0AFC                       u3731 0A0D                       u3723 09FF  
                     u3651 0952                       u3491 1468                       u3475 1459  
                     u4531 0932                       u4435 08C7                       u4371 1FDE  
                     u4291 1F6F                       u2915 1C6E                       u4195 0E7C  
                     u6211 050C                       u6131 02F7                       u6115 023B  
                     u6051 018D                       u3812 0B22                       u3732 0A14  
                     u3660 0958                       u4700 1D7B                       u3580 14C1  
                     u4620 1C11                       u4540 1962                       u4460 08FE  
                     u4380 1FE6                       u2940 1C92                       u2860 1C3F  
                     u6300 05D4                       u6220 0515                       u6140 0307  
                     u6060 019D                       u2845 1996                       u3821 0B48  
                     u3813 0B29                       u3741 0A39                       u3733 0A1B  
                     u3661 0957                       u4701 1D7A                       u3581 14C0  
                     u4621 1C10                       u4541 1961                       u4525 0925  
                     u4461 08FD                       u4445 08DC                       u4381 1FE5  
                     u4365 1FCF                       u2941 1C91                       u2925 1C7A  
                     u2861 1C3E                       u6301 05D3                       u6221 0514  
                     u6141 0306                       u6061 019C                       u6045 014D  
                     u3910 0BEC                       u3830 0B72                       u3822 0B4F  
                     u3742 0A40                       u3670 0979                       u3590 14CA  
                     u4470 0902                       u2950 1C97                       u2870 1C4A  
                     u6310 05EA                       u6150 0330                       u6070 01CC  
                     u3911 0BEB                       u3823 0B56                       u3751 0A55  
                     u3743 0A47                       u3671 0978                       u4711 1D8A  
                     u3591 14C9                       u3575 14AD                       u4615 1BF8  
                     u4471 0901                       u4455 08F1                       u2951 1C96  
                     u2935 1C86                       u2871 1C49                       u6311 05E9  
                     u6151 032F                       u6135 02F4                       u6071 01CB  
                     u6055 018A                       u6400 1950                       u3920 0BF1  
                     u3752 0A5C                       u3680 097F                       u4720 1DA3  
                     u4712 1D8B                       u4640 1C2F                       u4480 0909  
                     u2880 1C5B                       u2960 100B                       u6320 0602  
                     u6240 0563                       u6080 01E4                       u6401 194F  
                     u3921 0BF0                       u3905 0BDB                       u3841 0B7E  
                     u3753 0A63                       u3681 097E                       u4721 1DA2  
                     u4713 1D90                       u4641 1C2E                       u4625 1C0D  
                     u4481 0908                       u2881 1C5A                       u2961 100A  
                     u6321 0601                       u6241 0562                       u6145 0303  
                     u6081 01E3                       u6410 19B7                       u3930 0C05  
                     u3850 0B9A                       u3842 0B85                       u3690 0984  
                     u4650 1A99                       u4714 1D91                       u4810 0855  
                     u4570 197C                       u2970 1016                       u6330 0620  
                     u6250 0572                       u6090 0210                       u3931 0C04  
                     u3843 0B8C                       u3835 0B6D                       u3771 0A8B  
                     u3691 0983                       u4651 1A98                       u4731 1DB2  
                     u4715 1D96                       u4811 0854                       u4635 1C21  
                     u4571 197B                       u4555 1969                       u4395 1FE9  
                     u2971 1015                       u6331 061F                       u6315 05E6  
                     u6251 0571                       u6235 0522                       u6091 020F  
                     u6420 19DB                       u3940 0C0C                       u3772 0A92  
                     u4660 1AB5                       u4740 1DDD                       u4732 1DB3  
                     u4716 1D97                       u4820 085C                       u4580 1BE2  
                     u2980 1021                       u6340 063F                       u6260 057D  
                     u6180 04B0                       u3941 0C0B                       u3861 0BA6  
                     u3781 0AB8                       u3773 0A99                       u3765 0A65  
                     u4661 1AB4                       u4741 1DDC                       u4733 1DB8  
                     u4821 085B                       u4805 0845                       u4581 1BE1  
                     u4565 1970                       u2981 1020                       u6341 063E  
                     u6325 05FE                       u6261 057C                       u6245 055F  
                     u6181 04AF                       u6165 03C1                       u6430 19ED  
                     u3950 0C12                       u3862 0BAD                       u3782 0ABF  
                     u4670 1ACF                       u4734 1DB9                       u4750 18AA  
                     u5710 1A2F                       u6350 0651                       u6270 059B  
                     u6190 04D0                       i1l63 1893                       u6431 19EC  
                     u3951 0C11                       u3863 0BB4                       u3855 0B95  
                     u3783 0AC6                       u4671 1ACE                       u4735 1DBE  
                     u4751 18A9                       u4495 090B                       u5711 1A2E  
                     u2895 1C5F                       u6351 0650                       u6271 059A  
                     u6191 04CF                       u6175 0453                       u6095 020C  
                     u3960 0C24                       u4920 1E8F                       u4736 1DBF  
                     u4680 1D53                       u4840 086D                       u4760 080F  
                     u5800 1B2D                       u5720 1068                       u6280 05B4  
                     u3961 0C23                       u4921 1E8E                       u4745 1DD9  
                     u4681 1D52                       u4841 086C                       u4761 080E  
                     u5801 1B2C                       u5705 1A23                       u5721 1067  
                     u6281 05B3                       u6265 0579                       u3970 0C33  
                     u3890 0BD8                       u4930 1E93                       u4690 1D6F  
                     u4850 0872                       u4770 0826                       u5650 19F8  
                     u6370 06DA                       u6290 05C6                       u6507 1A5F  
                     u3891 0BD7                       u3875 0BB6                       u3795 0AC8  
                     u4931 1E92                       u4675 1ACB                       u4691 1D6E  
                     u4851 0871                       u4835 085F                       u4595 1BE7  
                     u5651 19F7                       u2995 1025                       u6371 06D9  
                     u6291 05C5                       u6275 0597                       u3980 0C50  
                     u4940 1EB3                       u4780 083C                       u5820 1B41  
                     u6380 06F4                       u5900 15DE                       u6517 1903  
                     u3981 0C4F                       u3885 0BCD                       u4941 1EB2  
                     u4781 083B                       u5821 1B40                       u6381 06F1  
                     u6365 0674                       u5901 15DD                       u6390 193E  
                     u3990 0C6A                       u4790 0843                       u5830 1B53  
                     u5670 1A0A                       u5910 1621                       u6527 190F  
                     u6391 193D                       u3991 0C69                       u3975 0C2E  
                     u4791 0842                       u4775 0821                       u5831 1B52  
                     u5815 1B32                       u5671 1A09                       u5735 1085  
                     u5911 161E                       u6447 1E7D                       u4960 1ED4  
                     u5760 117D                       u5920 1627                       u3985 0C4C  
                     u4961 1ED3                       u6457 1B89                       u5665 19FC  
                     u5761 117C                       u5745 10E1                       u5921 1626  
                     u5850 1B70                       u5690 1A1B                       u5930 165A  
                     u6467 18E8                       u3995 0C66                       u4955 1EC6  
                     u5851 1B6F                       u5835 1B4F                       u5691 1A1A  
                     u5755 1136                       u5931 1659                       u4980 1EF6  
                     u5940 1694                       u5860 1508                       u6477 18EF  
                     u4981 1EF5                       u5845 1B62                       u5685 1A0B  
                     u5941 1693                       u5861 1507                       u5950 16DF  
                     u5870 1530                       u6487 1A42                       u4975 1EE8  
                     u5695 1A17                       u5775 119A                       u5951 16DE  
                     u5871 152F                       u5960 1768                       u5880 157C  
                     u6497 1A51                       u5785 11E7                       u5961 1767  
                     u5881 157B                       u5970 178C                       u5890 158A  
                     u4995 1EFB                       u5795 1233                       u5971 178B  
                     u5891 1589                       u5980 17A3                       u5981 17A2  
                     u5990 001D                       u5991 17FA                       u5985 179F  
                     u5995 17F5          ?_LCD_Write_String 0075                       _main 1DE1  
                     btemp 007E                       start 000C         ??_LCD_Write_String 0077  
       __size_of_LCD_clear 000D            __end_of_LeerADC 1BD0                      ??_ISR 0070  
         __end_of_LCD_Init 1A83           __end_of_LCD_Port 1006              ___fltol@sign1 005E  
          __end_of___fladd 14F4                      ?_main 0070            __end_of___awdiv 1CA1  
          __end_of___flneg 18AD            __end_of___awmod 105F            __end_of___flmul 0C9D  
          __end_of___flsub 1B23            __end_of___fltol 087E                      _ANSEL 0188  
          __end_of___lldiv 1C38            ___awdiv@divisor 0020            __end_of___llmod 1B79  
          __end_of___lwdiv 1A34            __end_of___lwmod 07FC            ___awdiv@counter 0024  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089     __end_of_LCD_Set_Cursor 195C            __end_of_initADC 18C7  
          __end_of_dpowers 07A0                      _scale 0C9D            __end_of_isdigit 18D9  
                    _setup 1915               LCD_Command@a 0075                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 06FB  
           _LCD_Write_Char 18D9            __initialization 000F               __end_of_main 1E87  
                   ??_main 00CE       __size_of__tdiv_to_l_ 00BD          __end_of_LCD_clear 18BA  
          ?_LCD_Set_Cursor 0076                     _ADCON0 001F                     _ADCON1 009F  
         ___llmod@dividend 0029                     ?_scale 0042                     _ADRESH 001E  
         ___awdiv@dividend 0022                     ?_setup 0070                     _ANSELH 0189  
             ??_ADC_Select 0072                  ??_LeerADC 0046           __end_of___xxtofl 1F43  
   __end_of_LCD_Write_Char 18F2           __end_of__powers_ 0744                     ___flge 1D3D  
                   ___fleq 1A83                  ??___fladd 005E                     ___wmul 195C  
                ??___awdiv 0079                  ??___flneg 0076                  ??___awmod 0076  
                ??___flmul 0030                  ??___flsub 007B                  ??___fltol 0059  
                ??___lldiv 007A                  ??___llmod 002D                  ??___lwdiv 0078  
                ??___lwmod 0076                     _fround 105F           ___awdiv@quotient 0026  
          ___awmod@divisor 0072            ___awmod@counter 0077       __size_of_LCD_Command 0023  
                ??_initADC 0072                  ??_isdigit 0072         __end_of_ADC_Select 1D3D  
       __size_of__Umul8_16 0027                     saved_w 007E                  ??_sprintf 006A  
          LCD_Set_Cursor@a 0079            LCD_Set_Cursor@x 0078            LCD_Set_Cursor@y 0076  
               ___flge@ff1 0072                 ___flge@ff2 0076               ___xxtofl@arg 0022  
             ___xxtofl@exp 0021               ___xxtofl@val 0072                 ___fleq@ff1 0072  
               ___fleq@ff2 0076    __end_of__initialization 0019                  ?_LCD_Init 0070  
               ___flneg@f1 0072                  ?_LCD_Port 0070                 ___fltol@f1 0055  
          ?_LCD_Write_Char 0070             __pcstackCOMMON 0070                  LCD_Port@a 0072  
            __end_of_scale 1000              __end_of_setup 1938                 __div_to_l_ 087E  
          __div_to_l_@exp1 0025            __div_to_l_@cntr 0024                    ??_scale 0046  
          __div_to_l_@quot 0020               sprintf@width 00BA                    ??_setup 0072  
               __pbssBANK1 00D1                 ??_LCD_Init 0076                 ??_LCD_Port 0072  
            __div_to_l_@f1 0072              __div_to_l_@f2 0076          __end_of__Umul8_16 19A8  
               __pmaintext 1DE1                    ?___flge 0072                    ?___fleq 0072  
                  ?___wmul 0072                 __pintentry 0004                    ?_fround 0042  
__size_of_LCD_Write_String 0046                  ?___xxtofl 0072                 __stringtab 0700  
                  _LeerADC 1B79          __end_of__npowers_ 0778            __size_of___flge 00A4  
          __size_of___fleq 0050                    ___fladd 126C                    ___awdiv 1C38  
                  ___flneg 18A2                    ___awmod 1006                    ___flmul 093C  
                  ___flsub 1AD3                    ___fltol 0802                    ___lldiv 1BD0  
          __size_of___wmul 0025                    ___llmod 1B23                    ___lwdiv 19EE  
               _fround$976 0051                 _fround$977 004D                    ___lwmod 07C2  
          __size_of_fround 020D           ??_LCD_Set_Cursor 0077                    __ptext1 14F4  
                  __ptext2 0C9D                    __ptext3 1006                    __ptext4 1C38  
                  __ptext5 18C7                    __ptext6 105F                    __ptext7 07C2  
                  __ptext8 19EE                    __ptext9 1F43                    _initADC 18BA  
             __size_of_ISR 0007                ?__div_to_l_ 0072                    _dpowers 0778  
                  _isdigit 18C7                 ??___xxtofl 0076           ___awmod@dividend 0074  
                  _sprintf 14F4                    clrloop0 189B                  _LCD_clear 18AD  
     end_of_initialization 0019            ___lldiv@divisor 0072            ___lldiv@counter 0024  
                  psplit$0 B002F             __tdiv_to_l_@f1 0072             __tdiv_to_l_@f2 0076  
            ??__tdiv_to_l_ 0020                ___fladd@grs 0069              ___xxtofl@sign 0020  
               ?_LCD_clear 0070          LCD_Write_String@a 0075          LCD_Write_String@i 0020  
         ??_LCD_Write_Char 0073                ___flmul@grs 0036          __size_of_LCD_Init 004F  
      __size_of__div_to_l_ 00BE          __size_of_LCD_Port 0006              ??_LCD_Command 0073  
           __end_of___flge 1DE1             __end_of___fleq 1AD3             __end_of___wmul 1981  
         _LCD_Write_String 19A8          pnum$text1_split_1 002F             __end_of_fround 126C  
      start_initialization 000F                __end_of_ISR 189A        __end_of__tdiv_to_l_ 2000  
          ___llmod@divisor 0025            ___llmod@counter 002E                   ??___flge 0020  
                 ??___fleq 0020                   ??___wmul 0076                  __Umul8_16 1981  
          LCD_Write_Char@a 0074                   ??_fround 0046              sprintf@tmpval 00BC  
                ___fladd@a 005A                  ___fladd@b 0056                 fround@prec 0055  
      __end_of_LCD_Command 1915                  ___flmul@a 002C                  ___flmul@b 0028  
              __pbssCOMMON 007B                  ___flsub@a 00A0                  ___flsub@b 00A4  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00BC                ??_LCD_clear 0076                sprintf@flag 00B8  
              sprintf@eexp 00C4                   ?_LeerADC 0042                sprintf@fval 00C6  
              sprintf@prec 00CB           ___lwdiv@dividend 0022                   ?___fladd 0056  
                 ?___awdiv 0020                   ?___flneg 0072                   ?___awmod 0072  
                 ?___flmul 0028                   ?___flsub 00A0                   ?___fltol 0055  
                 ?___lldiv 0072                   ?___llmod 0025                  __npowers_ 0744  
               ?__Umul8_16 0072                   ?___lwdiv 0020                   ?___lwmod 0072  
                __pstrings 0700                __tdiv_to_l_ 1F43                   ?_initADC 0070  
             ??__div_to_l_ 007A                   ?_isdigit 0070                  _scale$978 0050  
         ___lwdiv@quotient 0025                   ?_sprintf 00A8             __size_of_scale 0363  
           __size_of_setup 0023                ADC_Select@a 0074          interrupt_function 0004  
                 _LCD_Init 1A34             ___wmul@product 0076                   _LCD_Port 1000  
                clear_ram0 189A                   _PIE1bits 008C                   _PIR1bits 000C  
       __end_of__div_to_l_ 093C                  _valor_adc 007B                   LeerADC@a 004B  
                 LeerADC@x 004A                _LCD_Command 18F2                 _ADCON0bits 001F  
              __stringbase 070F          ___wmul@multiplier 0072   __end_of_LCD_Write_String 19EE  
               _ADC_Select 1CA1           __size_of_LeerADC 0057                ??__Umul8_16 0074  
         __size_of___fladd 0288           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 0059           __size_of___flmul 0361           __size_of___flsub 0050  
         __size_of___fltol 007C           __size_of___lldiv 0068           __size_of___llmod 0056  
         __size_of___lwdiv 0046           __size_of___lwmod 003A         __end_of__stringtab 0710  
              _isdigit$803 0072                 sprintf@val 00C0           __size_of_initADC 000D  
                 ___xxtofl 1E87           __size_of_isdigit 0012            ___lwdiv@divisor 0020  
          ___lwdiv@counter 0024                   __ptext10 087E                   __ptext11 195C  
                 __ptext20 1915                   __ptext12 1B23                   __ptext21 18BA  
                 __ptext13 1BD0                   __ptext30 1938                   __ptext22 1B79  
                 __ptext14 0802                   __ptext31 1A34                   __ptext23 1E87  
                 __ptext15 1AD3                   __ptext32 18F2                   __ptext24 093C  
                 __ptext16 126C                   __ptext33 1000                   __ptext25 1981  
                 __ptext17 18A2                   __ptext34 1893                   __ptext26 1CA1  
                 __ptext18 1D3D                   __ptext27 18AD                   __ptext19 1A83  
                 __ptext28 19A8                   __ptext29 18D9                   __powers_ 0710  
  __size_of_LCD_Set_Cursor 0024                   _contador 00D9           __size_of_sprintf F207  
            __size_of_main 00A6                  pnum$text1 000B                   _pantalla 00DA  
               _INTCONbits 000B                   isdigit@c 0073                   scale@scl 0054  
                 intlevel1 0000                  sprintf@ap 00B7           __tdiv_to_l_@exp1 0029  
         __tdiv_to_l_@cntr 0028                  sprintf@sp 00CA           __tdiv_to_l_@quot 0024  
         ___lwmod@dividend 0074                ?_ADC_Select 0070           ___lldiv@dividend 0076  
                stringcode 070A    __size_of_LCD_Write_Char 0019               ?__tdiv_to_l_ 0072  
   __Umul8_16@multiplicand 0072                   sprintf@c 00CD                   sprintf@f 00A8  
         ___lldiv@quotient 0020            ___lwmod@divisor 0072            ___lwmod@counter 0077  
                 stringdir 070A                   stringtab 0700              ___fladd@signs 0066  
             ___fladd@aexp 0067               ___fladd@bexp 0068       __Umul8_16@multiplier 007A  
        __Umul8_16@product 0076  
