

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 15:25:29 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F887 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0088                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0105                     	;# 
   156  0107                     	;# 
   157  0108                     	;# 
   158  0109                     	;# 
   159  010C                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0185                     	;# 
   165  0187                     	;# 
   166  0188                     	;# 
   167  0189                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  0105                     	;# 
   234  0107                     	;# 
   235  0108                     	;# 
   236  0109                     	;# 
   237  010C                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  0185                     	;# 
   243  0187                     	;# 
   244  0188                     	;# 
   245  0189                     	;# 
   246  018C                     	;# 
   247  018D                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  000E                     	;# 
   263  000E                     	;# 
   264  000F                     	;# 
   265  0010                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0013                     	;# 
   269  0014                     	;# 
   270  0015                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0017                     	;# 
   274  0018                     	;# 
   275  0019                     	;# 
   276  001A                     	;# 
   277  001B                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  001D                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  0081                     	;# 
   284  0085                     	;# 
   285  0086                     	;# 
   286  0087                     	;# 
   287  0088                     	;# 
   288  0089                     	;# 
   289  008C                     	;# 
   290  008D                     	;# 
   291  008E                     	;# 
   292  008F                     	;# 
   293  0090                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009E                     	;# 
   310  009F                     	;# 
   311  0105                     	;# 
   312  0107                     	;# 
   313  0108                     	;# 
   314  0109                     	;# 
   315  010C                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  010F                     	;# 
   320  0185                     	;# 
   321  0187                     	;# 
   322  0188                     	;# 
   323  0189                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  008F                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0094                     	;# 
   378  0095                     	;# 
   379  0096                     	;# 
   380  0097                     	;# 
   381  0098                     	;# 
   382  0099                     	;# 
   383  009A                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  0105                     	;# 
   390  0107                     	;# 
   391  0108                     	;# 
   392  0109                     	;# 
   393  010C                     	;# 
   394  010C                     	;# 
   395  010D                     	;# 
   396  010E                     	;# 
   397  010F                     	;# 
   398  0185                     	;# 
   399  0187                     	;# 
   400  0188                     	;# 
   401  0189                     	;# 
   402  018C                     	;# 
   403  018D                     	;# 
   404  0000                     	;# 
   405  0001                     	;# 
   406  0002                     	;# 
   407  0003                     	;# 
   408  0004                     	;# 
   409  0005                     	;# 
   410  0006                     	;# 
   411  0007                     	;# 
   412  0008                     	;# 
   413  0009                     	;# 
   414  000A                     	;# 
   415  000B                     	;# 
   416  000C                     	;# 
   417  000D                     	;# 
   418  000E                     	;# 
   419  000E                     	;# 
   420  000F                     	;# 
   421  0010                     	;# 
   422  0011                     	;# 
   423  0012                     	;# 
   424  0013                     	;# 
   425  0014                     	;# 
   426  0015                     	;# 
   427  0015                     	;# 
   428  0016                     	;# 
   429  0017                     	;# 
   430  0018                     	;# 
   431  0019                     	;# 
   432  001A                     	;# 
   433  001B                     	;# 
   434  001B                     	;# 
   435  001C                     	;# 
   436  001D                     	;# 
   437  001E                     	;# 
   438  001F                     	;# 
   439  0081                     	;# 
   440  0085                     	;# 
   441  0086                     	;# 
   442  0087                     	;# 
   443  0088                     	;# 
   444  0089                     	;# 
   445  008C                     	;# 
   446  008D                     	;# 
   447  008E                     	;# 
   448  008F                     	;# 
   449  0090                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0094                     	;# 
   456  0095                     	;# 
   457  0096                     	;# 
   458  0097                     	;# 
   459  0098                     	;# 
   460  0099                     	;# 
   461  009A                     	;# 
   462  009B                     	;# 
   463  009C                     	;# 
   464  009D                     	;# 
   465  009E                     	;# 
   466  009F                     	;# 
   467  0105                     	;# 
   468  0107                     	;# 
   469  0108                     	;# 
   470  0109                     	;# 
   471  010C                     	;# 
   472  010C                     	;# 
   473  010D                     	;# 
   474  010E                     	;# 
   475  010F                     	;# 
   476  0185                     	;# 
   477  0187                     	;# 
   478  0188                     	;# 
   479  0189                     	;# 
   480  018C                     	;# 
   481  018D                     	;# 
   482                           
   483                           	psect	strings
   484  0800                     __pstrings:
   485  0800                     stringtab:
   486  0800                     __stringtab:
   487                           
   488                           ;	String table - string pointers are 1 byte each
   489  0800  1BFF               	btfsc	btemp+1,7
   490  0801  280A               	ljmp	stringcode
   491  0802  1383               	bcf	3,7
   492  0803  187F               	btfsc	btemp+1,0
   493  0804  1783               	bsf	3,7
   494  0805  0800               	movf	0,w
   495  0806  0A84               	incf	4,f
   496  0807  1903               	skipnz
   497  0808  0AFF               	incf	btemp+1,f
   498  0809  0008               	return
   499  080A                     stringcode:
   500  080A                     stringdir:
   501  080A  3008               	movlw	high stringdir
   502  080B  008A               	movwf	10
   503  080C  0804               	movf	4,w
   504  080D  0A84               	incf	4,f
   505  080E  0782               	addwf	2,f
   506  080F                     __stringbase:
   507  080F  3400               	retlw	0
   508  0810                     __end_of__stringtab:
   509  0810                     __powers_:
   510  0810  3400               	retlw	0
   511  0811  3400               	retlw	0
   512  0812  3480               	retlw	128
   513  0813  343F               	retlw	63
   514  0814  3400               	retlw	0
   515  0815  3400               	retlw	0
   516  0816  3420               	retlw	32
   517  0817  3441               	retlw	65
   518  0818  3400               	retlw	0
   519  0819  3400               	retlw	0
   520  081A  34C8               	retlw	200
   521  081B  3442               	retlw	66
   522  081C  3400               	retlw	0
   523  081D  3400               	retlw	0
   524  081E  347A               	retlw	122
   525  081F  3444               	retlw	68
   526  0820  3400               	retlw	0
   527  0821  3440               	retlw	64
   528  0822  341C               	retlw	28
   529  0823  3446               	retlw	70
   530  0824  3400               	retlw	0
   531  0825  3450               	retlw	80
   532  0826  34C3               	retlw	195
   533  0827  3447               	retlw	71
   534  0828  3400               	retlw	0
   535  0829  3424               	retlw	36
   536  082A  3474               	retlw	116
   537  082B  3449               	retlw	73
   538  082C  3480               	retlw	128
   539  082D  3496               	retlw	150
   540  082E  3418               	retlw	24
   541  082F  344B               	retlw	75
   542  0830  3420               	retlw	32
   543  0831  34BC               	retlw	188
   544  0832  34BE               	retlw	190
   545  0833  344C               	retlw	76
   546  0834  3428               	retlw	40
   547  0835  346B               	retlw	107
   548  0836  346E               	retlw	110
   549  0837  344E               	retlw	78
   550  0838  34F9               	retlw	249
   551  0839  3402               	retlw	2
   552  083A  3415               	retlw	21
   553  083B  3450               	retlw	80
   554  083C  34EC               	retlw	236
   555  083D  3478               	retlw	120
   556  083E  34AD               	retlw	173
   557  083F  3460               	retlw	96
   558  0840  34CA               	retlw	202
   559  0841  34F2               	retlw	242
   560  0842  3449               	retlw	73
   561  0843  3471               	retlw	113
   562  0844                     __end_of__powers_:
   563  0844                     __npowers_:
   564  0844  3400               	retlw	0
   565  0845  3400               	retlw	0
   566  0846  3480               	retlw	128
   567  0847  343F               	retlw	63
   568  0848  34CD               	retlw	205
   569  0849  34CC               	retlw	204
   570  084A  34CC               	retlw	204
   571  084B  343D               	retlw	61
   572  084C  340A               	retlw	10
   573  084D  34D7               	retlw	215
   574  084E  3423               	retlw	35
   575  084F  343C               	retlw	60
   576  0850  346F               	retlw	111
   577  0851  3412               	retlw	18
   578  0852  3483               	retlw	131
   579  0853  343A               	retlw	58
   580  0854  3417               	retlw	23
   581  0855  34B7               	retlw	183
   582  0856  34D1               	retlw	209
   583  0857  3438               	retlw	56
   584  0858  34AC               	retlw	172
   585  0859  34C5               	retlw	197
   586  085A  3427               	retlw	39
   587  085B  3437               	retlw	55
   588  085C  34BD               	retlw	189
   589  085D  3437               	retlw	55
   590  085E  3486               	retlw	134
   591  085F  3435               	retlw	53
   592  0860  3495               	retlw	149
   593  0861  34BF               	retlw	191
   594  0862  34D6               	retlw	214
   595  0863  3433               	retlw	51
   596  0864  3477               	retlw	119
   597  0865  34CC               	retlw	204
   598  0866  342B               	retlw	43
   599  0867  3432               	retlw	50
   600  0868  345F               	retlw	95
   601  0869  3470               	retlw	112
   602  086A  3489               	retlw	137
   603  086B  3430               	retlw	48
   604  086C  34FF               	retlw	255
   605  086D  34E6               	retlw	230
   606  086E  34DB               	retlw	219
   607  086F  342E               	retlw	46
   608  0870  3408               	retlw	8
   609  0871  34E5               	retlw	229
   610  0872  343C               	retlw	60
   611  0873  341E               	retlw	30
   612  0874  3460               	retlw	96
   613  0875  3442               	retlw	66
   614  0876  34A2               	retlw	162
   615  0877  340D               	retlw	13
   616  0878                     __end_of__npowers_:
   617  0878                     _dpowers:
   618  0878  3401               	retlw	1
   619  0879  3400               	retlw	0
   620  087A  3400               	retlw	0
   621  087B  3400               	retlw	0
   622  087C  340A               	retlw	10
   623  087D  3400               	retlw	0
   624  087E  3400               	retlw	0
   625  087F  3400               	retlw	0
   626  0880  3464               	retlw	100
   627  0881  3400               	retlw	0
   628  0882  3400               	retlw	0
   629  0883  3400               	retlw	0
   630  0884  34E8               	retlw	232
   631  0885  3403               	retlw	3
   632  0886  3400               	retlw	0
   633  0887  3400               	retlw	0
   634  0888  3410               	retlw	16
   635  0889  3427               	retlw	39
   636  088A  3400               	retlw	0
   637  088B  3400               	retlw	0
   638  088C  34A0               	retlw	160
   639  088D  3486               	retlw	134
   640  088E  3401               	retlw	1
   641  088F  3400               	retlw	0
   642  0890  3440               	retlw	64
   643  0891  3442               	retlw	66
   644  0892  340F               	retlw	15
   645  0893  3400               	retlw	0
   646  0894  3480               	retlw	128
   647  0895  3496               	retlw	150
   648  0896  3498               	retlw	152
   649  0897  3400               	retlw	0
   650  0898  3400               	retlw	0
   651  0899  34E1               	retlw	225
   652  089A  34F5               	retlw	245
   653  089B  3405               	retlw	5
   654  089C  3400               	retlw	0
   655  089D  34CA               	retlw	202
   656  089E  349A               	retlw	154
   657  089F  343B               	retlw	59
   658  08A0                     __end_of_dpowers:
   659  001A                     _RCREG	set	26
   660  0019                     _TXREG	set	25
   661  0018                     _RCSTAbits	set	24
   662  001F                     _ADCON0	set	31
   663  001E                     _ADRESH	set	30
   664  001F                     _ADCON0bits	set	31
   665  000C                     _PIR1bits	set	12
   666  000B                     _INTCONbits	set	11
   667  0005                     _PORTA	set	5
   668  0008                     _PORTD	set	8
   669  0007                     _PORTC	set	7
   670  0006                     _PORTB	set	6
   671  0009                     _PORTE	set	9
   672  00C4                     _CREN	set	196
   673  00C7                     _SPEN	set	199
   674  0049                     _RE1	set	73
   675  0048                     _RE0	set	72
   676  0065                     _RCIF	set	101
   677  0087                     _TRISCbits	set	135
   678  0098                     _TXSTAbits	set	152
   679  0099                     _SPBRG	set	153
   680  009F                     _ADCON1	set	159
   681  008C                     _PIE1bits	set	140
   682  0085                     _TRISA	set	133
   683  0088                     _TRISD	set	136
   684  0087                     _TRISC	set	135
   685  0086                     _TRISB	set	134
   686  0089                     _TRISE	set	137
   687  04C5                     _TXEN	set	1221
   688  043E                     _TRISC6	set	1086
   689  043F                     _TRISC7	set	1087
   690  04C4                     _SYNC	set	1220
   691  04C2                     _BRGH	set	1218
   692  04C1                     _TRMT	set	1217
   693  0189                     _ANSELH	set	393
   694  0188                     _ANSEL	set	392
   695  08A0                     STR_1:
   696  08A0  3425               	retlw	37	;'%'
   697  08A1  3431               	retlw	49	;'1'
   698  08A2  342E               	retlw	46	;'.'
   699  08A3  3432               	retlw	50	;'2'
   700  08A4  3466               	retlw	102	;'f'
   701  08A5  3420               	retlw	32	;' '
   702  08A6  3420               	retlw	32	;' '
   703  08A7  3420               	retlw	32	;' '
   704  08A8  3425               	retlw	37	;'%'
   705  08A9  3431               	retlw	49	;'1'
   706  08AA  342E               	retlw	46	;'.'
   707  08AB  3432               	retlw	50	;'2'
   708  08AC  3466               	retlw	102	;'f'
   709  08AD  3420               	retlw	32	;' '
   710  08AE  3420               	retlw	32	;' '
   711  08AF  3420               	retlw	32	;' '
   712  08B0  3425               	retlw	37	;'%'
   713  08B1  3464               	retlw	100	;'d'
   714  08B2  3400               	retlw	0
   715  08B3                     STR_2:
   716  08B3  3456               	retlw	86	;'V'
   717  08B4  3431               	retlw	49	;'1'
   718  08B5  3420               	retlw	32	;' '
   719  08B6  3420               	retlw	32	;' '
   720  08B7  3420               	retlw	32	;' '
   721  08B8  3456               	retlw	86	;'V'
   722  08B9  3432               	retlw	50	;'2'
   723  08BA  3420               	retlw	32	;' '
   724  08BB  3420               	retlw	32	;' '
   725  08BC  3420               	retlw	32	;' '
   726  08BD  3443               	retlw	67	;'C'
   727  08BE  344F               	retlw	79	;'O'
   728  08BF  344E               	retlw	78	;'N'
   729  08C0  3454               	retlw	84	;'T'
   730  08C1  3400               	retlw	0
   731                           
   732                           	psect	cinit
   733  000F                     start_initialization:	
   734                           ; #config settings
   735                           
   736  000F                     __initialization:
   737                           
   738                           ; Clear objects allocated to COMMON
   739  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   740  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   741                           
   742                           ; Clear objects allocated to BANK1
   743  0011  1383               	bcf	3,7	;select IRP bank0
   744  0012  30D3               	movlw	low __pbssBANK1
   745  0013  0084               	movwf	4
   746  0014  30F0               	movlw	low (__pbssBANK1+29)
   747  0015  160A  158A  205C  120A  118A  	fcall	clear_ram0
   748  001A                     end_of_initialization:	
   749                           ;End of C runtime variable initialization code
   750                           
   751  001A                     __end_of__initialization:
   752  001A  0183               	clrf	3
   753  001B  120A  118A  2EA0   	ljmp	_main	;jump to C main() function
   754                           
   755                           	psect	bssCOMMON
   756  0079                     __pbssCOMMON:
   757  0079                     _recibido:
   758  0079                     	ds	1
   759  007A                     _valor_adc:
   760  007A                     	ds	1
   761                           
   762                           	psect	bssBANK1
   763  00D3                     __pbssBANK1:
   764  00D3                     _V2:
   765  00D3                     	ds	4
   766  00D7                     _V1:
   767  00D7                     	ds	4
   768  00DB                     _contador:
   769  00DB                     	ds	1
   770  00DC                     _pantalla:
   771  00DC                     	ds	20
   772                           
   773                           	psect	clrtext
   774  185C                     clear_ram0:	
   775                           ;	Called with FSR containing the base address, and
   776                           ;	W with the last address+1
   777                           
   778  185C  0064               	clrwdt	;clear the watchdog before getting into this loop
   779  185D                     clrloop0:
   780  185D  0180               	clrf	0	;clear RAM location pointed to by FSR
   781  185E  0A84               	incf	4,f	;increment pointer
   782  185F  0604               	xorwf	4,w	;XOR with final address
   783  1860  1903               	btfsc	3,2	;have we reached the end yet?
   784  1861  3400               	retlw	0	;all done for this memory range, return
   785  1862  0604               	xorwf	4,w	;XOR again to restore value
   786  1863  285D               	goto	clrloop0	;do the next byte
   787                           
   788                           	psect	cstackBANK1
   789  00A0                     __pcstackBANK1:
   790  00A0                     ?___flsub:
   791  00A0                     ___flsub@a:	
   792                           ; 4 bytes @ 0x0
   793                           
   794                           
   795                           ; 4 bytes @ 0x0
   796  00A0                     	ds	4
   797  00A4                     ___flsub@b:
   798                           
   799                           ; 4 bytes @ 0x4
   800  00A4                     	ds	4
   801  00A8                     ?_sprintf:
   802  00A8                     sprintf@f:	
   803                           ; 2 bytes @ 0x8
   804                           
   805                           
   806                           ; 1 bytes @ 0x8
   807  00A8                     	ds	11
   808  00B3                     ??_sprintf:
   809                           
   810                           ; 1 bytes @ 0x13
   811  00B3                     	ds	5
   812  00B8                     _sprintf$1240:
   813                           
   814                           ; 4 bytes @ 0x18
   815  00B8                     	ds	4
   816  00BC                     sprintf@ap:
   817                           
   818                           ; 1 bytes @ 0x1C
   819  00BC                     	ds	1
   820  00BD                     sprintf@flag:
   821                           
   822                           ; 2 bytes @ 0x1D
   823  00BD                     	ds	2
   824  00BF                     sprintf@width:
   825                           
   826                           ; 2 bytes @ 0x1F
   827  00BF                     	ds	2
   828  00C1                     sprintf@tmpval:
   829                           
   830                           ; 4 bytes @ 0x21
   831  00C1                     	ds	4
   832  00C5                     sprintf@val:
   833                           
   834                           ; 4 bytes @ 0x25
   835  00C5                     	ds	4
   836  00C9                     sprintf@eexp:
   837                           
   838                           ; 2 bytes @ 0x29
   839  00C9                     	ds	2
   840  00CB                     sprintf@fval:
   841                           
   842                           ; 4 bytes @ 0x2B
   843  00CB                     	ds	4
   844  00CF                     sprintf@sp:
   845                           
   846                           ; 1 bytes @ 0x2F
   847  00CF                     	ds	1
   848  00D0                     sprintf@prec:
   849                           
   850                           ; 2 bytes @ 0x30
   851  00D0                     	ds	2
   852  00D2                     sprintf@c:
   853                           
   854                           ; 1 bytes @ 0x32
   855  00D2                     	ds	1
   856                           
   857                           	psect	cstackCOMMON
   858  0070                     __pcstackCOMMON:
   859  0070                     ?_isdigit:
   860  0070                     ?_USART_Read:	
   861                           ; 1 bit 
   862                           
   863  0070                     ??_USART_Read:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     ?_setup:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0070                     ?_initADC:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0070                     ?_LCD_Init:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  0070                     ?_LCD_clear:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  0070                     ?_Set_Baud_Rate:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  0070                     ?_Init_Transmit:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0070                     ?_Init_Receive:	
   885                           ; 1 bytes @ 0x0
   886                           
   887  0070                     ?_USART_Write_String:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  0070                     ?_USART_Write:	
   891                           ; 1 bytes @ 0x0
   892                           
   893  0070                     ?_ADC_Select:	
   894                           ; 1 bytes @ 0x0
   895                           
   896  0070                     ?_LCD_Port:	
   897                           ; 1 bytes @ 0x0
   898                           
   899  0070                     ?_ISR:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  0070                     ??_ISR:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0070                     ?_main:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ?_LCD_Write_Char:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     ?_LCD_Command:	
   912                           ; 1 bytes @ 0x0
   913                           
   914                           
   915                           ; 1 bytes @ 0x0
   916  0070                     	ds	3
   917  0073                     ??_setup:
   918  0073                     ??_initADC:	
   919                           ; 1 bytes @ 0x3
   920                           
   921  0073                     ??_Set_Baud_Rate:	
   922                           ; 1 bytes @ 0x3
   923                           
   924  0073                     ??_Init_Transmit:	
   925                           ; 1 bytes @ 0x3
   926                           
   927  0073                     ??_Init_Receive:	
   928                           ; 1 bytes @ 0x3
   929                           
   930  0073                     ??_USART_Write:	
   931                           ; 1 bytes @ 0x3
   932                           
   933  0073                     ??_ADC_Select:	
   934                           ; 1 bytes @ 0x3
   935                           
   936  0073                     ??_LCD_Port:	
   937                           ; 1 bytes @ 0x3
   938                           
   939  0073                     ??_isdigit:	
   940                           ; 1 bytes @ 0x3
   941                           
   942  0073                     ??__tdiv_to_l_:	
   943                           ; 1 bytes @ 0x3
   944                           
   945  0073                     ??__div_to_l_:	
   946                           ; 1 bytes @ 0x3
   947                           
   948  0073                     ??___lldiv:	
   949                           ; 1 bytes @ 0x3
   950                           
   951  0073                     ??___fleq:	
   952                           ; 1 bytes @ 0x3
   953                           
   954  0073                     ??___flge:	
   955                           ; 1 bytes @ 0x3
   956                           
   957  0073                     ?__Umul8_16:	
   958                           ; 1 bytes @ 0x3
   959                           
   960  0073                     ?___wmul:	
   961                           ; 2 bytes @ 0x3
   962                           
   963  0073                     ?___awmod:	
   964                           ; 2 bytes @ 0x3
   965                           
   966  0073                     ?___lwmod:	
   967                           ; 2 bytes @ 0x3
   968                           
   969  0073                     ?___flneg:	
   970                           ; 2 bytes @ 0x3
   971                           
   972  0073                     ?___xxtofl:	
   973                           ; 4 bytes @ 0x3
   974                           
   975  0073                     LCD_Port@a:	
   976                           ; 4 bytes @ 0x3
   977                           
   978  0073                     USART_Write@a:	
   979                           ; 1 bytes @ 0x3
   980                           
   981  0073                     __Umul8_16@multiplicand:	
   982                           ; 1 bytes @ 0x3
   983                           
   984  0073                     _isdigit$1061:	
   985                           ; 1 bytes @ 0x3
   986                           
   987  0073                     ___wmul@multiplier:	
   988                           ; 1 bytes @ 0x3
   989                           
   990  0073                     ___awmod@divisor:	
   991                           ; 2 bytes @ 0x3
   992                           
   993  0073                     ___lwmod@divisor:	
   994                           ; 2 bytes @ 0x3
   995                           
   996  0073                     ___flneg@f1:	
   997                           ; 2 bytes @ 0x3
   998                           
   999  0073                     ___xxtofl@val:	
  1000                           ; 4 bytes @ 0x3
  1001                           
  1002                           
  1003                           ; 4 bytes @ 0x3
  1004  0073                     	ds	1
  1005  0074                     ??_USART_Write_String:
  1006  0074                     ??_LCD_Write_Char:	
  1007                           ; 1 bytes @ 0x4
  1008                           
  1009  0074                     ??_LCD_Command:	
  1010                           ; 1 bytes @ 0x4
  1011                           
  1012  0074                     isdigit@c:	
  1013                           ; 1 bytes @ 0x4
  1014                           
  1015  0074                     ___lldiv@quotient:	
  1016                           ; 1 bytes @ 0x4
  1017                           
  1018                           
  1019                           ; 4 bytes @ 0x4
  1020  0074                     	ds	1
  1021  0075                     ??__Umul8_16:
  1022  0075                     LCD_Write_Char@a:	
  1023                           ; 1 bytes @ 0x5
  1024                           
  1025  0075                     ADC_Select@a:	
  1026                           ; 1 bytes @ 0x5
  1027                           
  1028  0075                     USART_Write_String@a:	
  1029                           ; 1 bytes @ 0x5
  1030                           
  1031  0075                     ___wmul@multiplicand:	
  1032                           ; 1 bytes @ 0x5
  1033                           
  1034  0075                     ___awmod@dividend:	
  1035                           ; 2 bytes @ 0x5
  1036                           
  1037  0075                     ___lwmod@dividend:	
  1038                           ; 2 bytes @ 0x5
  1039                           
  1040                           
  1041                           ; 2 bytes @ 0x5
  1042  0075                     	ds	1
  1043  0076                     ?_LCD_Write_String:
  1044  0076                     LCD_Command@a:	
  1045                           ; 1 bytes @ 0x6
  1046                           
  1047  0076                     USART_Write_String@i:	
  1048                           ; 1 bytes @ 0x6
  1049                           
  1050  0076                     LCD_Write_String@a:	
  1051                           ; 1 bytes @ 0x6
  1052                           
  1053                           
  1054                           ; 2 bytes @ 0x6
  1055  0076                     	ds	1
  1056  0077                     ??_LCD_Init:
  1057  0077                     ??_LCD_clear:	
  1058                           ; 1 bytes @ 0x7
  1059                           
  1060  0077                     ?_LCD_Set_Cursor:	
  1061                           ; 1 bytes @ 0x7
  1062                           
  1063  0077                     ??___wmul:	
  1064                           ; 1 bytes @ 0x7
  1065                           
  1066  0077                     ??___awmod:	
  1067                           ; 1 bytes @ 0x7
  1068                           
  1069  0077                     ??___flneg:	
  1070                           ; 1 bytes @ 0x7
  1071                           
  1072  0077                     ??___lwmod:	
  1073                           ; 1 bytes @ 0x7
  1074                           
  1075  0077                     LCD_Set_Cursor@y:	
  1076                           ; 1 bytes @ 0x7
  1077                           
  1078  0077                     ___wmul@product:	
  1079                           ; 1 bytes @ 0x7
  1080                           
  1081                           
  1082                           ; 2 bytes @ 0x7
  1083  0077                     	ds	1
  1084  0078                     ??_LCD_Set_Cursor:
  1085  0078                     ??___awdiv:	
  1086                           ; 1 bytes @ 0x8
  1087                           
  1088  0078                     ___lldiv@counter:	
  1089                           ; 1 bytes @ 0x8
  1090                           
  1091  0078                     ___lwmod@counter:	
  1092                           ; 1 bytes @ 0x8
  1093                           
  1094                           
  1095                           ; 1 bytes @ 0x8
  1096  0078                     	ds	1
  1097  0079                     ??___flsub:
  1098                           
  1099                           	psect	cstackBANK0
  1100  0020                     __pcstackBANK0:	
  1101                           ; 1 bytes @ 0x9
  1102                           
  1103  0020                     ?___fleq:
  1104  0020                     ?___flge:	
  1105                           ; 1 bit 
  1106                           
  1107  0020                     ??_LCD_Write_String:	
  1108                           ; 1 bit 
  1109                           
  1110  0020                     ??___xxtofl:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0020                     ?___lwdiv:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116  0020                     ?__tdiv_to_l_:	
  1117                           ; 2 bytes @ 0x0
  1118                           
  1119  0020                     ?__div_to_l_:	
  1120                           ; 4 bytes @ 0x0
  1121                           
  1122  0020                     ?___lldiv:	
  1123                           ; 4 bytes @ 0x0
  1124                           
  1125  0020                     LCD_Set_Cursor@x:	
  1126                           ; 4 bytes @ 0x0
  1127                           
  1128  0020                     ___awmod@counter:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0020                     ___lwdiv@divisor:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0020                     __Umul8_16@product:	
  1135                           ; 2 bytes @ 0x0
  1136                           
  1137  0020                     ___lldiv@divisor:	
  1138                           ; 2 bytes @ 0x0
  1139                           
  1140  0020                     __div_to_l_@f1:	
  1141                           ; 4 bytes @ 0x0
  1142                           
  1143  0020                     ___fleq@ff1:	
  1144                           ; 4 bytes @ 0x0
  1145                           
  1146  0020                     ___flge@ff1:	
  1147                           ; 4 bytes @ 0x0
  1148                           
  1149  0020                     __tdiv_to_l_@f1:	
  1150                           ; 4 bytes @ 0x0
  1151                           
  1152                           
  1153                           ; 4 bytes @ 0x0
  1154  0020                     	ds	1
  1155  0021                     LCD_Set_Cursor@a:
  1156  0021                     ___awmod@sign:	
  1157                           ; 1 bytes @ 0x1
  1158                           
  1159                           
  1160                           ; 1 bytes @ 0x1
  1161  0021                     	ds	1
  1162  0022                     ?___awdiv:
  1163  0022                     ___awdiv@divisor:	
  1164                           ; 2 bytes @ 0x2
  1165                           
  1166  0022                     ___lwdiv@dividend:	
  1167                           ; 2 bytes @ 0x2
  1168                           
  1169  0022                     __Umul8_16@word_mpld:	
  1170                           ; 2 bytes @ 0x2
  1171                           
  1172                           
  1173                           ; 2 bytes @ 0x2
  1174  0022                     	ds	1
  1175  0023                     LCD_Write_String@i:
  1176                           
  1177                           ; 2 bytes @ 0x3
  1178  0023                     	ds	1
  1179  0024                     ??___lwdiv:
  1180  0024                     __Umul8_16@multiplier:	
  1181                           ; 1 bytes @ 0x4
  1182                           
  1183  0024                     ___xxtofl@sign:	
  1184                           ; 1 bytes @ 0x4
  1185                           
  1186  0024                     ___awdiv@dividend:	
  1187                           ; 1 bytes @ 0x4
  1188                           
  1189  0024                     ___lldiv@dividend:	
  1190                           ; 2 bytes @ 0x4
  1191                           
  1192  0024                     __div_to_l_@f2:	
  1193                           ; 4 bytes @ 0x4
  1194                           
  1195  0024                     ___fleq@ff2:	
  1196                           ; 4 bytes @ 0x4
  1197                           
  1198  0024                     ___flge@ff2:	
  1199                           ; 4 bytes @ 0x4
  1200                           
  1201  0024                     __tdiv_to_l_@f2:	
  1202                           ; 4 bytes @ 0x4
  1203                           
  1204                           
  1205                           ; 4 bytes @ 0x4
  1206  0024                     	ds	1
  1207  0025                     ___lwdiv@counter:
  1208  0025                     ___xxtofl@exp:	
  1209                           ; 1 bytes @ 0x5
  1210                           
  1211                           
  1212                           ; 1 bytes @ 0x5
  1213  0025                     	ds	1
  1214  0026                     ___awdiv@counter:
  1215  0026                     ___lwdiv@quotient:	
  1216                           ; 1 bytes @ 0x6
  1217                           
  1218  0026                     ___xxtofl@arg:	
  1219                           ; 2 bytes @ 0x6
  1220                           
  1221                           
  1222                           ; 4 bytes @ 0x6
  1223  0026                     	ds	1
  1224  0027                     ___awdiv@sign:
  1225                           
  1226                           ; 1 bytes @ 0x7
  1227  0027                     	ds	1
  1228  0028                     ?___llmod:
  1229  0028                     ___awdiv@quotient:	
  1230                           ; 4 bytes @ 0x8
  1231                           
  1232  0028                     __div_to_l_@quot:	
  1233                           ; 2 bytes @ 0x8
  1234                           
  1235  0028                     __tdiv_to_l_@quot:	
  1236                           ; 4 bytes @ 0x8
  1237                           
  1238  0028                     ___llmod@divisor:	
  1239                           ; 4 bytes @ 0x8
  1240                           
  1241                           
  1242                           ; 4 bytes @ 0x8
  1243  0028                     	ds	2
  1244  002A                     ?___flmul:
  1245  002A                     ___flmul@b:	
  1246                           ; 4 bytes @ 0xA
  1247                           
  1248                           
  1249                           ; 4 bytes @ 0xA
  1250  002A                     	ds	2
  1251  002C                     __div_to_l_@cntr:
  1252  002C                     __tdiv_to_l_@cntr:	
  1253                           ; 1 bytes @ 0xC
  1254                           
  1255  002C                     ___llmod@dividend:	
  1256                           ; 1 bytes @ 0xC
  1257                           
  1258                           
  1259                           ; 4 bytes @ 0xC
  1260  002C                     	ds	1
  1261  002D                     __div_to_l_@exp1:
  1262  002D                     __tdiv_to_l_@exp1:	
  1263                           ; 1 bytes @ 0xD
  1264                           
  1265                           
  1266                           ; 1 bytes @ 0xD
  1267  002D                     	ds	1
  1268  002E                     ___flmul@a:
  1269                           
  1270                           ; 4 bytes @ 0xE
  1271  002E                     	ds	2
  1272  0030                     ??___llmod:
  1273                           
  1274                           ; 1 bytes @ 0x10
  1275  0030                     	ds	1
  1276  0031                     ___llmod@counter:
  1277                           
  1278                           ; 1 bytes @ 0x11
  1279  0031                     	ds	1
  1280  0032                     ??___flmul:
  1281                           
  1282                           ; 1 bytes @ 0x12
  1283  0032                     	ds	5
  1284  0037                     ___flmul@sign:
  1285                           
  1286                           ; 1 bytes @ 0x17
  1287  0037                     	ds	1
  1288  0038                     ___flmul@grs:
  1289                           
  1290                           ; 4 bytes @ 0x18
  1291  0038                     	ds	4
  1292  003C                     ___flmul@aexp:
  1293                           
  1294                           ; 1 bytes @ 0x1C
  1295  003C                     	ds	1
  1296  003D                     ___flmul@bexp:
  1297                           
  1298                           ; 1 bytes @ 0x1D
  1299  003D                     	ds	1
  1300  003E                     ___flmul@prod:
  1301                           
  1302                           ; 4 bytes @ 0x1E
  1303  003E                     	ds	4
  1304  0042                     ___flmul@temp:
  1305                           
  1306                           ; 2 bytes @ 0x22
  1307  0042                     	ds	2
  1308  0044                     ?_LeerADC:
  1309  0044                     ?_fround:	
  1310                           ; 4 bytes @ 0x24
  1311                           
  1312  0044                     ?_scale:	
  1313                           ; 4 bytes @ 0x24
  1314                           
  1315                           
  1316                           ; 4 bytes @ 0x24
  1317  0044                     	ds	4
  1318  0048                     ??_LeerADC:
  1319  0048                     ??_fround:	
  1320                           ; 1 bytes @ 0x28
  1321                           
  1322  0048                     ??_scale:	
  1323                           ; 1 bytes @ 0x28
  1324                           
  1325                           
  1326                           ; 1 bytes @ 0x28
  1327  0048                     	ds	4
  1328  004C                     LeerADC@x:
  1329                           
  1330                           ; 1 bytes @ 0x2C
  1331  004C                     	ds	1
  1332  004D                     LeerADC@a:
  1333                           
  1334                           ; 4 bytes @ 0x2D
  1335  004D                     	ds	2
  1336  004F                     _fround$1238:
  1337                           
  1338                           ; 4 bytes @ 0x2F
  1339  004F                     	ds	3
  1340  0052                     _scale$1239:
  1341                           
  1342                           ; 4 bytes @ 0x32
  1343  0052                     	ds	1
  1344  0053                     _fround$1237:
  1345                           
  1346                           ; 4 bytes @ 0x33
  1347  0053                     	ds	3
  1348  0056                     scale@scl:
  1349                           
  1350                           ; 1 bytes @ 0x36
  1351  0056                     	ds	1
  1352  0057                     ?___fltol:
  1353  0057                     fround@prec:	
  1354                           ; 4 bytes @ 0x37
  1355                           
  1356  0057                     ___fltol@f1:	
  1357                           ; 1 bytes @ 0x37
  1358                           
  1359                           
  1360                           ; 4 bytes @ 0x37
  1361  0057                     	ds	1
  1362  0058                     ?___fladd:
  1363  0058                     ___fladd@b:	
  1364                           ; 4 bytes @ 0x38
  1365                           
  1366                           
  1367                           ; 4 bytes @ 0x38
  1368  0058                     	ds	3
  1369  005B                     ??___fltol:
  1370                           
  1371                           ; 1 bytes @ 0x3B
  1372  005B                     	ds	1
  1373  005C                     ___fladd@a:
  1374                           
  1375                           ; 4 bytes @ 0x3C
  1376  005C                     	ds	4
  1377  0060                     ??___fladd:
  1378  0060                     ___fltol@sign1:	
  1379                           ; 1 bytes @ 0x40
  1380                           
  1381                           
  1382                           ; 1 bytes @ 0x40
  1383  0060                     	ds	1
  1384  0061                     ___fltol@exp1:
  1385                           
  1386                           ; 1 bytes @ 0x41
  1387  0061                     	ds	7
  1388  0068                     ___fladd@signs:
  1389                           
  1390                           ; 1 bytes @ 0x48
  1391  0068                     	ds	1
  1392  0069                     ___fladd@aexp:
  1393                           
  1394                           ; 1 bytes @ 0x49
  1395  0069                     	ds	1
  1396  006A                     ___fladd@bexp:
  1397                           
  1398                           ; 1 bytes @ 0x4A
  1399  006A                     	ds	1
  1400  006B                     ___fladd@grs:
  1401                           
  1402                           ; 1 bytes @ 0x4B
  1403  006B                     	ds	1
  1404  006C                     ??_main:
  1405                           
  1406                           ; 1 bytes @ 0x4C
  1407  006C                     	ds	3
  1408                           
  1409                           	psect	maintext
  1410  06A0                     __pmaintext:	
  1411 ;;
  1412 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1413 ;;
  1414 ;; *************** function _main *****************
  1415 ;; Defined at:
  1416 ;;		line 87 in file "lab3_main.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : B00/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1430 ;;      Params:         0       0       0       0       0
  1431 ;;      Locals:         0       0       0       0       0
  1432 ;;      Temps:          0       3       0       0       0
  1433 ;;      Totals:         0       3       0       0       0
  1434 ;;Total ram usage:        3 bytes
  1435 ;; Hardware stack levels required when called:    6
  1436 ;; This function calls:
  1437 ;;		_Init_Receive
  1438 ;;		_Init_Transmit
  1439 ;;		_LCD_Init
  1440 ;;		_LCD_Set_Cursor
  1441 ;;		_LCD_Write_String
  1442 ;;		_LCD_clear
  1443 ;;		_LeerADC
  1444 ;;		_Set_Baud_Rate
  1445 ;;		_USART_Write
  1446 ;;		_USART_Write_String
  1447 ;;		_initADC
  1448 ;;		_setup
  1449 ;;		_sprintf
  1450 ;; This function is called by:
  1451 ;;		Startup code after reset
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           
  1456                           ;psect for function _main
  1457  06A0                     _main:
  1458  06A0                     l4554:	
  1459                           ;incstack = 0
  1460                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1461                           
  1462                           
  1463                           ;lab3_main.c: 90:     setup();
  1464  06A0  160A  158A  2168  120A  118A  	fcall	_setup
  1465                           
  1466                           ;lab3_main.c: 91:     initADC();
  1467  06A5  120A  118A  27F3  120A  118A  	fcall	_initADC
  1468                           
  1469                           ;lab3_main.c: 92:     LCD_Init();
  1470  06AA  160A  158A  2285  120A  118A  	fcall	_LCD_Init
  1471                           
  1472                           ;lab3_main.c: 93:     LCD_clear();
  1473  06AF  160A  158A  207B  120A  118A  	fcall	_LCD_clear
  1474                           
  1475                           ;lab3_main.c: 95:     Set_Baud_Rate();
  1476  06B4  160A  158A  2047  120A  118A  	fcall	_Set_Baud_Rate
  1477  06B9                     l4556:
  1478                           
  1479                           ;lab3_main.c: 97:     Init_Transmit();
  1480  06B9  120A  158A  20C5  120A  118A  	fcall	_Init_Transmit
  1481  06BE                     l4558:
  1482                           
  1483                           ;lab3_main.c: 99:     Init_Receive();
  1484  06BE  160A  158A  2054  120A  118A  	fcall	_Init_Receive
  1485  06C3                     l4560:
  1486                           
  1487                           ;lab3_main.c: 109:         V1 = LeerADC(0);
  1488  06C3  3000               	movlw	0
  1489  06C4  160A  158A  23CA  120A  118A  	fcall	_LeerADC
  1490  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1491  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1492  06CB  0847               	movf	?_LeerADC+3,w
  1493  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  1494  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  1495  06CE  00DA               	movwf	(_V1+3)^(0+128)
  1496  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1497  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1498  06D1  0846               	movf	?_LeerADC+2,w
  1499  06D2  1683               	bsf	3,5	;RP0=1, select bank1
  1500  06D3  1303               	bcf	3,6	;RP1=0, select bank1
  1501  06D4  00D9               	movwf	(_V1+2)^(0+128)
  1502  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  1503  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  1504  06D7  0845               	movf	?_LeerADC+1,w
  1505  06D8  1683               	bsf	3,5	;RP0=1, select bank1
  1506  06D9  1303               	bcf	3,6	;RP1=0, select bank1
  1507  06DA  00D8               	movwf	(_V1+1)^(0+128)
  1508  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  1509  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  1510  06DD  0844               	movf	?_LeerADC,w
  1511  06DE  1683               	bsf	3,5	;RP0=1, select bank1
  1512  06DF  1303               	bcf	3,6	;RP1=0, select bank1
  1513  06E0  00D7               	movwf	_V1^(0+128)
  1514  06E1                     l4562:
  1515                           
  1516                           ;lab3_main.c: 110:         V2 = LeerADC(1);
  1517  06E1  3001               	movlw	1
  1518  06E2  160A  158A  23CA  120A  118A  	fcall	_LeerADC
  1519  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1520  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1521  06E9  0847               	movf	?_LeerADC+3,w
  1522  06EA  1683               	bsf	3,5	;RP0=1, select bank1
  1523  06EB  1303               	bcf	3,6	;RP1=0, select bank1
  1524  06EC  00D6               	movwf	(_V2+3)^(0+128)
  1525  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  1526  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  1527  06EF  0846               	movf	?_LeerADC+2,w
  1528  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  1529  06F1  1303               	bcf	3,6	;RP1=0, select bank1
  1530  06F2  00D5               	movwf	(_V2+2)^(0+128)
  1531  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  1532  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  1533  06F5  0845               	movf	?_LeerADC+1,w
  1534  06F6  1683               	bsf	3,5	;RP0=1, select bank1
  1535  06F7  1303               	bcf	3,6	;RP1=0, select bank1
  1536  06F8  00D4               	movwf	(_V2+1)^(0+128)
  1537  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  1538  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  1539  06FB  0844               	movf	?_LeerADC,w
  1540  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  1541  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  1542  06FE  00D3               	movwf	_V2^(0+128)
  1543  06FF                     l4564:
  1544                           
  1545                           ;lab3_main.c: 117:         sprintf(pantalla, "%1.2f   %1.2f   %d", V1,V2,contador);
  1546  06FF  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1547  0700  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0701  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0702  00EC               	movwf	??_main
  1550  0703  086C               	movf	??_main,w
  1551  0704  1683               	bsf	3,5	;RP0=1, select bank1
  1552  0705  1303               	bcf	3,6	;RP1=0, select bank1
  1553  0706  00A8               	movwf	sprintf@f^(0+128)
  1554  0707  085A               	movf	(_V1+3)^(0+128),w
  1555  0708  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1556  0709  0859               	movf	(_V1+2)^(0+128),w
  1557  070A  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1558  070B  0858               	movf	(_V1+1)^(0+128),w
  1559  070C  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1560  070D  0857               	movf	_V1^(0+128),w
  1561  070E  00A9               	movwf	(?_sprintf^(0+128)+1)
  1562  070F  0856               	movf	(_V2+3)^(0+128),w
  1563  0710  00B0               	movwf	((?_sprintf+3)^(0+128)+5)
  1564  0711  0855               	movf	(_V2+2)^(0+128),w
  1565  0712  00AF               	movwf	((?_sprintf+2)^(0+128)+5)
  1566  0713  0854               	movf	(_V2+1)^(0+128),w
  1567  0714  00AE               	movwf	((?_sprintf+1)^(0+128)+5)
  1568  0715  0853               	movf	_V2^(0+128),w
  1569  0716  00AD               	movwf	(?_sprintf^(0+128)+5)
  1570  0717  085B               	movf	_contador^(0+128),w
  1571  0718  1283               	bcf	3,5	;RP0=0, select bank0
  1572  0719  1303               	bcf	3,6	;RP1=0, select bank0
  1573  071A  00ED               	movwf	??_main+1
  1574  071B  01EE               	clrf	??_main+2
  1575  071C  086D               	movf	??_main+1,w
  1576  071D  1683               	bsf	3,5	;RP0=1, select bank1
  1577  071E  1303               	bcf	3,6	;RP1=0, select bank1
  1578  071F  00B1               	movwf	(?_sprintf^(0+128)+9)
  1579  0720  1283               	bcf	3,5	;RP0=0, select bank0
  1580  0721  1303               	bcf	3,6	;RP1=0, select bank0
  1581  0722  086E               	movf	??_main+2,w
  1582  0723  1683               	bsf	3,5	;RP0=1, select bank1
  1583  0724  1303               	bcf	3,6	;RP1=0, select bank1
  1584  0725  00B2               	movwf	((?_sprintf+1)^(0+128)+9)
  1585  0726  30DC               	movlw	(low (_pantalla| 0))& (0+255)
  1586  0727  160A  118A  24F6  120A  118A  	fcall	_sprintf
  1587  072C                     l4566:
  1588                           
  1589                           ;lab3_main.c: 119:         USART_Write_String(pantalla);
  1590  072C  30DC               	movlw	(low (_pantalla| 0))& (0+255)
  1591  072D  160A  158A  20B3  120A  118A  	fcall	_USART_Write_String
  1592  0732                     l4568:
  1593                           
  1594                           ;lab3_main.c: 122:         USART_Write(13);
  1595  0732  300D               	movlw	13
  1596  0733  160A  158A  206F  120A  118A  	fcall	_USART_Write
  1597  0738                     l4570:
  1598                           
  1599                           ;lab3_main.c: 123:         USART_Write(10);
  1600  0738  300A               	movlw	10
  1601  0739  160A  158A  206F  120A  118A  	fcall	_USART_Write
  1602  073E                     l4572:
  1603                           
  1604                           ;lab3_main.c: 125:         LCD_clear();
  1605  073E  160A  158A  207B  120A  118A  	fcall	_LCD_clear
  1606  0743                     l4574:
  1607                           
  1608                           ;lab3_main.c: 126:         LCD_Set_Cursor(1,1);
  1609  0743  01F7               	clrf	LCD_Set_Cursor@y
  1610  0744  0AF7               	incf	LCD_Set_Cursor@y,f
  1611  0745  3001               	movlw	1
  1612  0746  160A  158A  2119  120A  118A  	fcall	_LCD_Set_Cursor
  1613  074B                     l4576:
  1614                           
  1615                           ;lab3_main.c: 127:         LCD_Write_String("V1   V2   CONT");
  1616  074B  30A4               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1617  074C  00F6               	movwf	LCD_Write_String@a
  1618  074D  3080               	movlw	128
  1619  074E  00F7               	movwf	LCD_Write_String@a+1
  1620  074F  160A  158A  21F9  120A  118A  	fcall	_LCD_Write_String
  1621  0754                     l4578:
  1622                           
  1623                           ;lab3_main.c: 128:         LCD_Set_Cursor(2,1);
  1624  0754  01F7               	clrf	LCD_Set_Cursor@y
  1625  0755  0AF7               	incf	LCD_Set_Cursor@y,f
  1626  0756  3002               	movlw	2
  1627  0757  160A  158A  2119  120A  118A  	fcall	_LCD_Set_Cursor
  1628  075C                     l4580:
  1629                           
  1630                           ;lab3_main.c: 129:         LCD_Write_String(pantalla);
  1631  075C  30DC               	movlw	(low (_pantalla| 0))& (0+255)
  1632  075D  00F6               	movwf	LCD_Write_String@a
  1633  075E  3000               	movlw	0
  1634  075F  00F7               	movwf	LCD_Write_String@a+1
  1635  0760  160A  158A  21F9  120A  118A  	fcall	_LCD_Write_String
  1636  0765                     l4582:
  1637                           
  1638                           ;lab3_main.c: 131:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1639  0765  3006               	movlw	6
  1640  0766  1283               	bcf	3,5	;RP0=0, select bank0
  1641  0767  1303               	bcf	3,6	;RP1=0, select bank0
  1642  0768  00EE               	movwf	??_main+2
  1643  0769  3013               	movlw	19
  1644  076A  00ED               	movwf	??_main+1
  1645  076B  30AD               	movlw	173
  1646  076C  00EC               	movwf	??_main
  1647  076D                     u7427:
  1648  076D  0BEC               	decfsz	??_main,f
  1649  076E  2F6D               	goto	u7427
  1650  076F  0BED               	decfsz	??_main+1,f
  1651  0770  2F6D               	goto	u7427
  1652  0771  0BEE               	decfsz	??_main+2,f
  1653  0772  2F6D               	goto	u7427
  1654  0773  2EC3               	goto	l4560
  1655  0774  120A  118A  280C   	ljmp	start
  1656  0777                     __end_of_main:
  1657                           
  1658                           	psect	text1
  1659  14F6                     __ptext1:	
  1660 ;; *************** function _sprintf *****************
  1661 ;; Defined at:
  1662 ;;		line 505 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  sp              1    wreg     PTR unsigned char 
  1665 ;;		 -> pantalla(20), 
  1666 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1667 ;;		 -> STR_1(19), 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  sp              1   47[BANK1 ] PTR unsigned char 
  1670 ;;		 -> pantalla(20), 
  1671 ;;  fval            4   43[BANK1 ] PTR unsigned char 
  1672 ;;  val             4   37[BANK1 ] unsigned long 
  1673 ;;  tmpval          4   33[BANK1 ] struct .
  1674 ;;  prec            2   48[BANK1 ] int 
  1675 ;;  eexp            2   41[BANK1 ] int 
  1676 ;;  width           2   31[BANK1 ] int 
  1677 ;;  flag            2   29[BANK1 ] unsigned short 
  1678 ;;  cp              2    0        PTR const unsigned char 
  1679 ;;  len             2    0        unsigned int 
  1680 ;;  c               1   50[BANK1 ] unsigned char 
  1681 ;;  ap              1   28[BANK1 ] PTR void [1]
  1682 ;;		 -> ?_sprintf(2), 
  1683 ;;  d               1    0        unsigned char 
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  2    8[BANK1 ] int 
  1686 ;; Registers used:
  1687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1693 ;;      Params:         0       0      11       0       0
  1694 ;;      Locals:         0       0      27       0       0
  1695 ;;      Temps:          0       0       5       0       0
  1696 ;;      Totals:         0       0      43       0       0
  1697 ;;Total ram usage:       43 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    5
  1700 ;; This function calls:
  1701 ;;		___awdiv
  1702 ;;		___fladd
  1703 ;;		___fleq
  1704 ;;		___flge
  1705 ;;		___flmul
  1706 ;;		___flneg
  1707 ;;		___flsub
  1708 ;;		___fltol
  1709 ;;		___lldiv
  1710 ;;		___llmod
  1711 ;;		___wmul
  1712 ;;		___xxtofl
  1713 ;;		__div_to_l_
  1714 ;;		__tdiv_to_l_
  1715 ;;		_fround
  1716 ;;		_isdigit
  1717 ;;		_scale
  1718 ;; This function is called by:
  1719 ;;		_main
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           
  1724                           ;psect for function _sprintf
  1725  14F6                     _sprintf:
  1726                           
  1727                           ;incstack = 0
  1728                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1729                           ;sprintf@sp stored from wreg
  1730  14F6  1683               	bsf	3,5	;RP0=1, select bank1
  1731  14F7  1303               	bcf	3,6	;RP1=0, select bank1
  1732  14F8  00CF               	movwf	sprintf@sp^(0+128)
  1733  14F9                     l4240:
  1734                           
  1735                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const c
      +                          har * f, ...);D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 506: {;D:\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\Microchip\xc8\v2.31\pi
      +                          c\sources\c90\common\doprnt.c: 512:  char c;;D:\Microchip\xc8\v2.31\pic\sources\c90\comm
      +                          on\doprnt.c: 514:  int width;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 51
      +                          7:  int prec;;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsigned sho
      +                          rt flag;
  1736  14F9  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1737  14FA  00B3               	movwf	??_sprintf^(0+128)
  1738  14FB  0833               	movf	??_sprintf^(0+128),w
  1739  14FC  00BC               	movwf	sprintf@ap^(0+128)
  1740  14FD                     L1:
  1741                           
  1742                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1743  14FD  120A  118A  2E87   	goto	l4522
  1744  1500                     l4242:
  1745                           
  1746                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  1747  1500  3025               	movlw	37
  1748  1501  0652               	xorwf	sprintf@c^(0+128),w
  1749  1502  1903               	btfsc	3,2
  1750  1503  2D05               	goto	u6841
  1751  1504  2D06               	goto	u6840
  1752  1505                     u6841:
  1753  1505  2D12               	goto	l4248
  1754  1506                     u6840:
  1755  1506                     l4244:
  1756                           
  1757                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;D:\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1758  1506  0852               	movf	sprintf@c^(0+128),w
  1759  1507  00B3               	movwf	??_sprintf^(0+128)
  1760  1508  084F               	movf	sprintf@sp^(0+128),w
  1761  1509  0084               	movwf	4
  1762  150A  0833               	movf	??_sprintf^(0+128),w
  1763  150B  1383               	bcf	3,7	;select IRP bank0
  1764  150C  0080               	movwf	0
  1765  150D                     l4246:
  1766  150D  3001               	movlw	1
  1767  150E  00B3               	movwf	??_sprintf^(0+128)
  1768  150F  0833               	movf	??_sprintf^(0+128),w
  1769  1510  07CF               	addwf	sprintf@sp^(0+128),f
  1770                           
  1771                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1772  1511  2CFD               	goto	L1
  1773  1512                     l4248:
  1774                           
  1775                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1776  1512  01BF               	clrf	sprintf@width^(0+128)
  1777  1513  01C0               	clrf	(sprintf@width+1)^(0+128)
  1778                           
  1779                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1780  1514  01BD               	clrf	sprintf@flag^(0+128)
  1781  1515  01BE               	clrf	(sprintf@flag+1)^(0+128)
  1782  1516                     l4250:
  1783                           
  1784                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit((unsigned)*f)
      +                          ) {
  1785  1516  0828               	movf	sprintf@f^(0+128),w
  1786  1517  0084               	movwf	4
  1787  1518  120A  158A  200A  160A  118A  	fcall	stringdir
  1788  151D  160A  158A  2088  160A  118A  	fcall	_isdigit
  1789  1522  1C03               	btfss	3,0
  1790  1523  2D25               	goto	u6851
  1791  1524  2D26               	goto	u6850
  1792  1525                     u6851:
  1793  1525  2D66               	goto	l4262
  1794  1526                     u6850:
  1795  1526                     l4252:
  1796                           
  1797                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0;
  1798  1526  1683               	bsf	3,5	;RP0=1, select bank1
  1799  1527  1303               	bcf	3,6	;RP1=0, select bank1
  1800  1528  01BF               	clrf	sprintf@width^(0+128)
  1801  1529  01C0               	clrf	(sprintf@width+1)^(0+128)
  1802  152A                     l4254:
  1803                           
  1804                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *= 10;
  1805  152A  300A               	movlw	10
  1806  152B  00F3               	movwf	___wmul@multiplier
  1807  152C  3000               	movlw	0
  1808  152D  00F4               	movwf	___wmul@multiplier+1
  1809  152E  1683               	bsf	3,5	;RP0=1, select bank1
  1810  152F  1303               	bcf	3,6	;RP1=0, select bank1
  1811  1530  0840               	movf	(sprintf@width+1)^(0+128),w
  1812  1531  00F6               	movwf	___wmul@multiplicand+1
  1813  1532  083F               	movf	sprintf@width^(0+128),w
  1814  1533  00F5               	movwf	___wmul@multiplicand
  1815  1534  160A  158A  20F4  160A  118A  	fcall	___wmul
  1816  1539  0874               	movf	?___wmul+1,w
  1817  153A  1683               	bsf	3,5	;RP0=1, select bank1
  1818  153B  1303               	bcf	3,6	;RP1=0, select bank1
  1819  153C  00C0               	movwf	(sprintf@width+1)^(0+128)
  1820  153D  0873               	movf	?___wmul,w
  1821  153E  00BF               	movwf	sprintf@width^(0+128)
  1822  153F                     l4256:
  1823                           
  1824                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width += *f++ - '0'
      +                          ;
  1825  153F  0828               	movf	sprintf@f^(0+128),w
  1826  1540  0084               	movwf	4
  1827  1541  120A  158A  200A  160A  118A  	fcall	stringdir
  1828  1546  3ED0               	addlw	208
  1829  1547  00B3               	movwf	??_sprintf^(0+128)
  1830  1548  30FF               	movlw	255
  1831  1549  1803               	skipnc
  1832  154A  3000               	movlw	0
  1833  154B  00B4               	movwf	(??_sprintf^(0+128)+1)
  1834  154C  0833               	movf	??_sprintf^(0+128),w
  1835  154D  07BF               	addwf	sprintf@width^(0+128),f
  1836  154E  1803               	skipnc
  1837  154F  0AC0               	incf	(sprintf@width+1)^(0+128),f
  1838  1550  0834               	movf	(??_sprintf+1)^(0+128),w
  1839  1551  07C0               	addwf	(sprintf@width+1)^(0+128),f
  1840  1552                     l4258:
  1841  1552  3001               	movlw	1
  1842  1553  00B3               	movwf	??_sprintf^(0+128)
  1843  1554  0833               	movf	??_sprintf^(0+128),w
  1844  1555  07A8               	addwf	sprintf@f^(0+128),f
  1845  1556                     l4260:
  1846                           
  1847                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(isdigit((unsign
      +                          ed)*f));
  1848  1556  0828               	movf	sprintf@f^(0+128),w
  1849  1557  0084               	movwf	4
  1850  1558  120A  158A  200A  160A  118A  	fcall	stringdir
  1851  155D  160A  158A  2088  160A  118A  	fcall	_isdigit
  1852  1562  1803               	btfsc	3,0
  1853  1563  2D65               	goto	u6861
  1854  1564  2D66               	goto	u6860
  1855  1565                     u6861:
  1856  1565  2D2A               	goto	l4254
  1857  1566                     u6860:
  1858  1566                     l4262:
  1859                           
  1860                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '.') {
  1861  1566  1683               	bsf	3,5	;RP0=1, select bank1
  1862  1567  1303               	bcf	3,6	;RP1=0, select bank1
  1863  1568  0828               	movf	sprintf@f^(0+128),w
  1864  1569  0084               	movwf	4
  1865  156A  120A  158A  200A  160A  118A  	fcall	stringdir
  1866  156F  3A2E               	xorlw	46
  1867  1570  1D03               	skipz
  1868  1571  2D73               	goto	u6871
  1869  1572  2D74               	goto	u6870
  1870  1573                     u6871:
  1871  1573  2DB9               	goto	l4278
  1872  1574                     u6870:
  1873  1574                     l4264:
  1874                           
  1875                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0x4000;
  1876  1574  173E               	bsf	(sprintf@flag^(0+128)+1),6
  1877  1575                     l4266:
  1878                           
  1879                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1880  1575  3001               	movlw	1
  1881  1576  00B3               	movwf	??_sprintf^(0+128)
  1882  1577  0833               	movf	??_sprintf^(0+128),w
  1883  1578  07A8               	addwf	sprintf@f^(0+128),f
  1884  1579                     l4268:
  1885                           
  1886                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1887  1579  01D0               	clrf	sprintf@prec^(0+128)
  1888  157A  01D1               	clrf	(sprintf@prec+1)^(0+128)
  1889                           
  1890                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigne
      +                          d)*f)) {
  1891  157B  2DA8               	goto	l4276
  1892  157C                     l4270:
  1893                           
  1894                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *= 10;
  1895  157C  300A               	movlw	10
  1896  157D  00F3               	movwf	___wmul@multiplier
  1897  157E  3000               	movlw	0
  1898  157F  00F4               	movwf	___wmul@multiplier+1
  1899  1580  1683               	bsf	3,5	;RP0=1, select bank1
  1900  1581  1303               	bcf	3,6	;RP1=0, select bank1
  1901  1582  0851               	movf	(sprintf@prec+1)^(0+128),w
  1902  1583  00F6               	movwf	___wmul@multiplicand+1
  1903  1584  0850               	movf	sprintf@prec^(0+128),w
  1904  1585  00F5               	movwf	___wmul@multiplicand
  1905  1586  160A  158A  20F4  160A  118A  	fcall	___wmul
  1906  158B  0874               	movf	?___wmul+1,w
  1907  158C  1683               	bsf	3,5	;RP0=1, select bank1
  1908  158D  1303               	bcf	3,6	;RP1=0, select bank1
  1909  158E  00D1               	movwf	(sprintf@prec+1)^(0+128)
  1910  158F  0873               	movf	?___wmul,w
  1911  1590  00D0               	movwf	sprintf@prec^(0+128)
  1912  1591                     l4272:
  1913                           
  1914                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec += *f++ - '0'
      +                          ;
  1915  1591  0828               	movf	sprintf@f^(0+128),w
  1916  1592  0084               	movwf	4
  1917  1593  120A  158A  200A  160A  118A  	fcall	stringdir
  1918  1598  3ED0               	addlw	208
  1919  1599  00B3               	movwf	??_sprintf^(0+128)
  1920  159A  30FF               	movlw	255
  1921  159B  1803               	skipnc
  1922  159C  3000               	movlw	0
  1923  159D  00B4               	movwf	(??_sprintf^(0+128)+1)
  1924  159E  0833               	movf	??_sprintf^(0+128),w
  1925  159F  07D0               	addwf	sprintf@prec^(0+128),f
  1926  15A0  1803               	skipnc
  1927  15A1  0AD1               	incf	(sprintf@prec+1)^(0+128),f
  1928  15A2  0834               	movf	(??_sprintf+1)^(0+128),w
  1929  15A3  07D1               	addwf	(sprintf@prec+1)^(0+128),f
  1930  15A4                     l4274:
  1931  15A4  3001               	movlw	1
  1932  15A5  00B3               	movwf	??_sprintf^(0+128)
  1933  15A6  0833               	movf	??_sprintf^(0+128),w
  1934  15A7  07A8               	addwf	sprintf@f^(0+128),f
  1935  15A8                     l4276:
  1936                           
  1937                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigne
      +                          d)*f)) {
  1938  15A8  0828               	movf	sprintf@f^(0+128),w
  1939  15A9  0084               	movwf	4
  1940  15AA  120A  158A  200A  160A  118A  	fcall	stringdir
  1941  15AF  160A  158A  2088  160A  118A  	fcall	_isdigit
  1942  15B4  1803               	btfsc	3,0
  1943  15B5  2DB7               	goto	u6881
  1944  15B6  2DB8               	goto	u6880
  1945  15B7                     u6881:
  1946  15B7  2D7C               	goto	l4270
  1947  15B8                     u6880:
  1948  15B8  2DBF               	goto	l4284
  1949  15B9                     l4278:
  1950                           
  1951                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1952  15B9  01D0               	clrf	sprintf@prec^(0+128)
  1953  15BA  01D1               	clrf	(sprintf@prec+1)^(0+128)
  1954  15BB                     l4280:
  1955                           
  1956                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0x1000;
  1957  15BB  163E               	bsf	(sprintf@flag^(0+128)+1),4
  1958  15BC  2DBF               	goto	l4284
  1959  15BD                     l377:	
  1960                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1961                           
  1962                           
  1963                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0x400;
  1964  15BD  153E               	bsf	(sprintf@flag^(0+128)+1),2
  1965                           
  1966                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1967  15BE  2DE1               	goto	l4286
  1968  15BF                     l4284:
  1969  15BF  3001               	movlw	1
  1970  15C0  1683               	bsf	3,5	;RP0=1, select bank1
  1971  15C1  1303               	bcf	3,6	;RP1=0, select bank1
  1972  15C2  07A8               	addwf	sprintf@f^(0+128),f
  1973  15C3  30FF               	movlw	-1
  1974  15C4  0728               	addwf	sprintf@f^(0+128),w
  1975  15C5  0084               	movwf	4
  1976  15C6  120A  158A  200A  160A  118A  	fcall	stringdir
  1977  15CB  00D2               	movwf	sprintf@c^(0+128)
  1978  15CC  00B3               	movwf	??_sprintf^(0+128)
  1979  15CD  01B4               	clrf	(??_sprintf^(0+128)+1)
  1980                           
  1981                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1982                           ; Switch size 1, requested type "simple"
  1983                           ; Number of cases is 1, Range of values is 0 to 0
  1984                           ; switch strategies available:
  1985                           ; Name         Instructions Cycles
  1986                           ; simple_byte            4     3 (average)
  1987                           ; direct_byte           11     8 (fixed)
  1988                           ; jumptable            260     6 (fixed)
  1989                           ;	Chosen strategy is simple_byte
  1990  15CE  0834               	movf	(??_sprintf+1)^(0+128),w
  1991  15CF  3A00               	xorlw	0	; case 0
  1992  15D0  1903               	skipnz
  1993  15D1  2DD3               	goto	l4634
  1994  15D2  2CFD               	goto	L1
  1995  15D3                     l4634:
  1996                           
  1997                           ; Switch size 1, requested type "simple"
  1998                           ; Number of cases is 4, Range of values is 0 to 105
  1999                           ; switch strategies available:
  2000                           ; Name         Instructions Cycles
  2001                           ; simple_byte           13     7 (average)
  2002                           ; jumptable            260     6 (fixed)
  2003                           ;	Chosen strategy is simple_byte
  2004  15D3  0833               	movf	??_sprintf^(0+128),w
  2005  15D4  3A00               	xorlw	0	; case 0
  2006  15D5  1903               	skipnz
  2007  15D6  2FFD               	goto	L3
  2008  15D7  3A64               	xorlw	100	; case 100
  2009  15D8  1903               	skipnz
  2010  15D9  2DE1               	goto	l4286
  2011  15DA  3A02               	xorlw	2	; case 102
  2012  15DB  1903               	skipnz
  2013  15DC  2DBD               	goto	l377
  2014  15DD  3A0F               	xorlw	15	; case 105
  2015  15DE  1903               	skipnz
  2016  15DF  2DE1               	goto	l4286
  2017  15E0  2CFD               	goto	L1
  2018  15E1                     l4286:
  2019                           
  2020                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & (0x700)) {
  2021  15E1  3000               	movlw	0
  2022  15E2  053D               	andwf	sprintf@flag^(0+128),w
  2023  15E3  00B3               	movwf	??_sprintf^(0+128)
  2024  15E4  3007               	movlw	7
  2025  15E5  053E               	andwf	(sprintf@flag+1)^(0+128),w
  2026  15E6  00B4               	movwf	(??_sprintf+1)^(0+128)
  2027  15E7  0833               	movf	??_sprintf^(0+128),w
  2028  15E8  0434               	iorwf	(??_sprintf^(0+128)+1),w
  2029  15E9  1903               	btfsc	3,2
  2030  15EA  2DEC               	goto	u6891
  2031  15EB  2DEF               	goto	u6890
  2032  15EC                     u6891:
  2033  15EC  120A  118A  2CD8   	goto	l4444
  2034  15EF                     u6890:
  2035  15EF                     l4288:
  2036                           
  2037                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag & 0x1000)
  2038  15EF  1E3E               	btfss	(sprintf@flag+1)^(0+128),4
  2039  15F0  2DF2               	goto	u6901
  2040  15F1  2DF3               	goto	u6900
  2041  15F2                     u6901:
  2042  15F2  2DF7               	goto	l4292
  2043  15F3                     u6900:
  2044  15F3                     l4290:
  2045                           
  2046                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6;
  2047  15F3  3006               	movlw	6
  2048  15F4  00D0               	movwf	sprintf@prec^(0+128)
  2049  15F5  3000               	movlw	0
  2050  15F6  00D1               	movwf	(sprintf@prec^(0+128)+1)
  2051  15F7                     l4292:
  2052                           
  2053                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*(double *)__va
      +                          _arg((*(double **)ap), (double)0));
  2054  15F7  083C               	movf	sprintf@ap^(0+128),w
  2055  15F8  0084               	movwf	4
  2056  15F9  1383               	bcf	3,7	;select IRP bank0
  2057  15FA  0800               	movf	0,w
  2058  15FB  00CB               	movwf	sprintf@fval^(0+128)
  2059  15FC  0A84               	incf	4,f
  2060  15FD  0800               	movf	0,w
  2061  15FE  00CC               	movwf	(sprintf@fval+1)^(0+128)
  2062  15FF  0A84               	incf	4,f
  2063  1600  0800               	movf	0,w
  2064  1601  00CD               	movwf	(sprintf@fval+2)^(0+128)
  2065  1602  0A84               	incf	4,f
  2066  1603  0800               	movf	0,w
  2067  1604  00CE               	movwf	(sprintf@fval+3)^(0+128)
  2068  1605                     l4294:
  2069  1605  3004               	movlw	4
  2070  1606  00B3               	movwf	??_sprintf^(0+128)
  2071  1607  0833               	movf	??_sprintf^(0+128),w
  2072  1608  07BC               	addwf	sprintf@ap^(0+128),f
  2073  1609                     l4296:
  2074                           
  2075                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval < 0.0) {
  2076  1609  084E               	movf	(sprintf@fval+3)^(0+128),w
  2077  160A  1283               	bcf	3,5	;RP0=0, select bank0
  2078  160B  1303               	bcf	3,6	;RP1=0, select bank0
  2079  160C  00A3               	movwf	___flge@ff1+3
  2080  160D  1683               	bsf	3,5	;RP0=1, select bank1
  2081  160E  1303               	bcf	3,6	;RP1=0, select bank1
  2082  160F  084D               	movf	(sprintf@fval+2)^(0+128),w
  2083  1610  1283               	bcf	3,5	;RP0=0, select bank0
  2084  1611  1303               	bcf	3,6	;RP1=0, select bank0
  2085  1612  00A2               	movwf	___flge@ff1+2
  2086  1613  1683               	bsf	3,5	;RP0=1, select bank1
  2087  1614  1303               	bcf	3,6	;RP1=0, select bank1
  2088  1615  084C               	movf	(sprintf@fval+1)^(0+128),w
  2089  1616  1283               	bcf	3,5	;RP0=0, select bank0
  2090  1617  1303               	bcf	3,6	;RP1=0, select bank0
  2091  1618  00A1               	movwf	___flge@ff1+1
  2092  1619  1683               	bsf	3,5	;RP0=1, select bank1
  2093  161A  1303               	bcf	3,6	;RP1=0, select bank1
  2094  161B  084B               	movf	sprintf@fval^(0+128),w
  2095  161C  1283               	bcf	3,5	;RP0=0, select bank0
  2096  161D  1303               	bcf	3,6	;RP1=0, select bank0
  2097  161E  00A0               	movwf	___flge@ff1
  2098  161F  3000               	movlw	0
  2099  1620  00A7               	movwf	___flge@ff2+3
  2100  1621  3000               	movlw	0
  2101  1622  00A6               	movwf	___flge@ff2+2
  2102  1623  3000               	movlw	0
  2103  1624  00A5               	movwf	___flge@ff2+1
  2104  1625  3000               	movlw	0
  2105  1626  00A4               	movwf	___flge@ff2
  2106  1627  160A  158A  2525  160A  118A  	fcall	___flge
  2107  162C  1803               	btfsc	3,0
  2108  162D  2E2F               	goto	u6911
  2109  162E  2E30               	goto	u6910
  2110  162F                     u6911:
  2111  162F  2E4D               	goto	l4302
  2112  1630                     u6910:
  2113  1630                     l4298:
  2114                           
  2115                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -fval;
  2116  1630  1683               	bsf	3,5	;RP0=1, select bank1
  2117  1631  1303               	bcf	3,6	;RP1=0, select bank1
  2118  1632  084E               	movf	(sprintf@fval+3)^(0+128),w
  2119  1633  00F6               	movwf	___flneg@f1+3
  2120  1634  084D               	movf	(sprintf@fval+2)^(0+128),w
  2121  1635  00F5               	movwf	___flneg@f1+2
  2122  1636  084C               	movf	(sprintf@fval+1)^(0+128),w
  2123  1637  00F4               	movwf	___flneg@f1+1
  2124  1638  084B               	movf	sprintf@fval^(0+128),w
  2125  1639  00F3               	movwf	___flneg@f1
  2126  163A  160A  158A  2064  160A  118A  	fcall	___flneg
  2127  163F  0876               	movf	?___flneg+3,w
  2128  1640  1683               	bsf	3,5	;RP0=1, select bank1
  2129  1641  1303               	bcf	3,6	;RP1=0, select bank1
  2130  1642  00CE               	movwf	(sprintf@fval+3)^(0+128)
  2131  1643  0875               	movf	?___flneg+2,w
  2132  1644  00CD               	movwf	(sprintf@fval+2)^(0+128)
  2133  1645  0874               	movf	?___flneg+1,w
  2134  1646  00CC               	movwf	(sprintf@fval+1)^(0+128)
  2135  1647  0873               	movf	?___flneg,w
  2136  1648  00CB               	movwf	sprintf@fval^(0+128)
  2137  1649                     l4300:
  2138                           
  2139                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 0x03;
  2140  1649  3003               	movlw	3
  2141  164A  04BD               	iorwf	sprintf@flag^(0+128),f
  2142  164B  3000               	movlw	0
  2143  164C  04BE               	iorwf	(sprintf@flag+1)^(0+128),f
  2144  164D                     l4302:
  2145                           
  2146                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2147  164D  1683               	bsf	3,5	;RP0=1, select bank1
  2148  164E  1303               	bcf	3,6	;RP1=0, select bank1
  2149  164F  01C9               	clrf	sprintf@eexp^(0+128)
  2150  1650  01CA               	clrf	(sprintf@eexp+1)^(0+128)
  2151  1651                     l4304:
  2152                           
  2153                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!=0) {
  2154  1651  084E               	movf	(sprintf@fval+3)^(0+128),w
  2155  1652  1283               	bcf	3,5	;RP0=0, select bank0
  2156  1653  1303               	bcf	3,6	;RP1=0, select bank0
  2157  1654  00A3               	movwf	___fleq@ff1+3
  2158  1655  1683               	bsf	3,5	;RP0=1, select bank1
  2159  1656  1303               	bcf	3,6	;RP1=0, select bank1
  2160  1657  084D               	movf	(sprintf@fval+2)^(0+128),w
  2161  1658  1283               	bcf	3,5	;RP0=0, select bank0
  2162  1659  1303               	bcf	3,6	;RP1=0, select bank0
  2163  165A  00A2               	movwf	___fleq@ff1+2
  2164  165B  1683               	bsf	3,5	;RP0=1, select bank1
  2165  165C  1303               	bcf	3,6	;RP1=0, select bank1
  2166  165D  084C               	movf	(sprintf@fval+1)^(0+128),w
  2167  165E  1283               	bcf	3,5	;RP0=0, select bank0
  2168  165F  1303               	bcf	3,6	;RP1=0, select bank0
  2169  1660  00A1               	movwf	___fleq@ff1+1
  2170  1661  1683               	bsf	3,5	;RP0=1, select bank1
  2171  1662  1303               	bcf	3,6	;RP1=0, select bank1
  2172  1663  084B               	movf	sprintf@fval^(0+128),w
  2173  1664  1283               	bcf	3,5	;RP0=0, select bank0
  2174  1665  1303               	bcf	3,6	;RP1=0, select bank0
  2175  1666  00A0               	movwf	___fleq@ff1
  2176  1667  3000               	movlw	0
  2177  1668  00A7               	movwf	___fleq@ff2+3
  2178  1669  3000               	movlw	0
  2179  166A  00A6               	movwf	___fleq@ff2+2
  2180  166B  3000               	movlw	0
  2181  166C  00A5               	movwf	___fleq@ff2+1
  2182  166D  3000               	movlw	0
  2183  166E  00A4               	movwf	___fleq@ff2
  2184  166F  160A  158A  22D4  160A  118A  	fcall	___fleq
  2185  1674  1803               	btfsc	3,0
  2186  1675  2E77               	goto	u6921
  2187  1676  2E78               	goto	u6920
  2188  1677                     u6921:
  2189  1677  2F94               	goto	l4330
  2190  1678                     u6920:
  2191  1678                     l4306:
  2192                           
  2193                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*(&eexp) = (uns
      +                          igned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2194  1678  1003               	clrc
  2195  1679  1683               	bsf	3,5	;RP0=1, select bank1
  2196  167A  1303               	bcf	3,6	;RP1=0, select bank1
  2197  167B  0D4D               	rlf	(sprintf@fval+2)^(0+128),w
  2198  167C  0D4E               	rlf	(sprintf@fval+3)^(0+128),w
  2199  167D  3E82               	addlw	130
  2200  167E  00C9               	movwf	sprintf@eexp^(0+128)
  2201  167F  30FF               	movlw	255
  2202  1680  1803               	skipnc
  2203  1681  3000               	movlw	0
  2204  1682  00CA               	movwf	(sprintf@eexp^(0+128)+1)
  2205  1683                     l4308:
  2206                           
  2207                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2208  1683  30FF               	movlw	255
  2209  1684  07C9               	addwf	sprintf@eexp^(0+128),f
  2210  1685  1803               	skipnc
  2211  1686  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  2212  1687  30FF               	movlw	255
  2213  1688  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  2214  1689                     l4310:
  2215                           
  2216                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 3;
  2217  1689  3003               	movlw	3
  2218  168A  00F3               	movwf	___wmul@multiplier
  2219  168B  3000               	movlw	0
  2220  168C  00F4               	movwf	___wmul@multiplier+1
  2221  168D  084A               	movf	(sprintf@eexp+1)^(0+128),w
  2222  168E  00F6               	movwf	___wmul@multiplicand+1
  2223  168F  0849               	movf	sprintf@eexp^(0+128),w
  2224  1690  00F5               	movwf	___wmul@multiplicand
  2225  1691  160A  158A  20F4  160A  118A  	fcall	___wmul
  2226  1696  0874               	movf	?___wmul+1,w
  2227  1697  1683               	bsf	3,5	;RP0=1, select bank1
  2228  1698  1303               	bcf	3,6	;RP1=0, select bank1
  2229  1699  00CA               	movwf	(sprintf@eexp+1)^(0+128)
  2230  169A  0873               	movf	?___wmul,w
  2231  169B  00C9               	movwf	sprintf@eexp^(0+128)
  2232  169C                     l4312:
  2233                           
  2234                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 10;
  2235  169C  300A               	movlw	10
  2236  169D  1283               	bcf	3,5	;RP0=0, select bank0
  2237  169E  1303               	bcf	3,6	;RP1=0, select bank0
  2238  169F  00A2               	movwf	___awdiv@divisor
  2239  16A0  3000               	movlw	0
  2240  16A1  00A3               	movwf	___awdiv@divisor+1
  2241  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  2242  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  2243  16A4  084A               	movf	(sprintf@eexp+1)^(0+128),w
  2244  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  2245  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  2246  16A7  00A5               	movwf	___awdiv@dividend+1
  2247  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  2248  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  2249  16AA  0849               	movf	sprintf@eexp^(0+128),w
  2250  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  2251  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  2252  16AD  00A4               	movwf	___awdiv@dividend
  2253  16AE  120A  158A  20D3  160A  118A  	fcall	___awdiv
  2254  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  2255  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  2256  16B5  0823               	movf	?___awdiv+1,w
  2257  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  2258  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  2259  16B8  00CA               	movwf	(sprintf@eexp+1)^(0+128)
  2260  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2261  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2262  16BB  0822               	movf	?___awdiv,w
  2263  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  2264  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  2265  16BE  00C9               	movwf	sprintf@eexp^(0+128)
  2266  16BF                     l4314:
  2267                           
  2268                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp < 0)
  2269  16BF  1FCA               	btfss	(sprintf@eexp+1)^(0+128),7
  2270  16C0  2EC2               	goto	u6931
  2271  16C1  2EC3               	goto	u6930
  2272  16C2                     u6931:
  2273  16C2  2EC9               	goto	l4318
  2274  16C3                     u6930:
  2275  16C3                     l4316:
  2276                           
  2277                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2278  16C3  30FF               	movlw	255
  2279  16C4  07C9               	addwf	sprintf@eexp^(0+128),f
  2280  16C5  1803               	skipnc
  2281  16C6  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  2282  16C7  30FF               	movlw	255
  2283  16C8  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  2284  16C9                     l4318:
  2285                           
  2286                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.integ = scale(-
      +                          eexp);
  2287  16C9  0349               	decf	sprintf@eexp^(0+128),w
  2288  16CA  3AFF               	xorlw	255
  2289  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  2290  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  2291  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  2292  16D2  0847               	movf	?_scale+3,w
  2293  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  2294  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  2295  16D5  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  2296  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  2297  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  2298  16D8  0846               	movf	?_scale+2,w
  2299  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  2300  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  2301  16DB  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  2302  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  2303  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  2304  16DE  0845               	movf	?_scale+1,w
  2305  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  2306  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  2307  16E1  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  2308  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  2309  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  2310  16E4  0844               	movf	?_scale,w
  2311  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  2312  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  2313  16E7  00C1               	movwf	sprintf@tmpval^(0+128)
  2314  16E8                     l4320:
  2315                           
  2316                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.integ *= fval;
  2317  16E8  084E               	movf	(sprintf@fval+3)^(0+128),w
  2318  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  2319  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  2320  16EB  00AD               	movwf	___flmul@b+3
  2321  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  2322  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  2323  16EE  084D               	movf	(sprintf@fval+2)^(0+128),w
  2324  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2325  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2326  16F1  00AC               	movwf	___flmul@b+2
  2327  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  2328  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  2329  16F4  084C               	movf	(sprintf@fval+1)^(0+128),w
  2330  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  2331  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  2332  16F7  00AB               	movwf	___flmul@b+1
  2333  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  2334  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  2335  16FA  084B               	movf	sprintf@fval^(0+128),w
  2336  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  2337  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  2338  16FD  00AA               	movwf	___flmul@b
  2339  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  2340  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  2341  1700  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  2342  1701  1283               	bcf	3,5	;RP0=0, select bank0
  2343  1702  1303               	bcf	3,6	;RP1=0, select bank0
  2344  1703  00B1               	movwf	___flmul@a+3
  2345  1704  1683               	bsf	3,5	;RP0=1, select bank1
  2346  1705  1303               	bcf	3,6	;RP1=0, select bank1
  2347  1706  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  2348  1707  1283               	bcf	3,5	;RP0=0, select bank0
  2349  1708  1303               	bcf	3,6	;RP1=0, select bank0
  2350  1709  00B0               	movwf	___flmul@a+2
  2351  170A  1683               	bsf	3,5	;RP0=1, select bank1
  2352  170B  1303               	bcf	3,6	;RP1=0, select bank1
  2353  170C  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  2354  170D  1283               	bcf	3,5	;RP0=0, select bank0
  2355  170E  1303               	bcf	3,6	;RP1=0, select bank0
  2356  170F  00AF               	movwf	___flmul@a+1
  2357  1710  1683               	bsf	3,5	;RP0=1, select bank1
  2358  1711  1303               	bcf	3,6	;RP1=0, select bank1
  2359  1712  0841               	movf	sprintf@tmpval^(0+128),w
  2360  1713  1283               	bcf	3,5	;RP0=0, select bank0
  2361  1714  1303               	bcf	3,6	;RP1=0, select bank0
  2362  1715  00AE               	movwf	___flmul@a
  2363  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  2364  171B  1283               	bcf	3,5	;RP0=0, select bank0
  2365  171C  1303               	bcf	3,6	;RP1=0, select bank0
  2366  171D  082D               	movf	?___flmul+3,w
  2367  171E  1683               	bsf	3,5	;RP0=1, select bank1
  2368  171F  1303               	bcf	3,6	;RP1=0, select bank1
  2369  1720  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  2370  1721  1283               	bcf	3,5	;RP0=0, select bank0
  2371  1722  1303               	bcf	3,6	;RP1=0, select bank0
  2372  1723  082C               	movf	?___flmul+2,w
  2373  1724  1683               	bsf	3,5	;RP0=1, select bank1
  2374  1725  1303               	bcf	3,6	;RP1=0, select bank1
  2375  1726  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  2376  1727  1283               	bcf	3,5	;RP0=0, select bank0
  2377  1728  1303               	bcf	3,6	;RP1=0, select bank0
  2378  1729  082B               	movf	?___flmul+1,w
  2379  172A  1683               	bsf	3,5	;RP0=1, select bank1
  2380  172B  1303               	bcf	3,6	;RP1=0, select bank1
  2381  172C  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  2382  172D  1283               	bcf	3,5	;RP0=0, select bank0
  2383  172E  1303               	bcf	3,6	;RP1=0, select bank0
  2384  172F  082A               	movf	?___flmul,w
  2385  1730  1683               	bsf	3,5	;RP0=1, select bank1
  2386  1731  1303               	bcf	3,6	;RP1=0, select bank1
  2387  1732  00C1               	movwf	sprintf@tmpval^(0+128)
  2388  1733                     l4322:
  2389                           
  2390                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpval.integ < 1.0)
  2391  1733  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  2392  1734  1283               	bcf	3,5	;RP0=0, select bank0
  2393  1735  1303               	bcf	3,6	;RP1=0, select bank0
  2394  1736  00A3               	movwf	___flge@ff1+3
  2395  1737  1683               	bsf	3,5	;RP0=1, select bank1
  2396  1738  1303               	bcf	3,6	;RP1=0, select bank1
  2397  1739  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  2398  173A  1283               	bcf	3,5	;RP0=0, select bank0
  2399  173B  1303               	bcf	3,6	;RP1=0, select bank0
  2400  173C  00A2               	movwf	___flge@ff1+2
  2401  173D  1683               	bsf	3,5	;RP0=1, select bank1
  2402  173E  1303               	bcf	3,6	;RP1=0, select bank1
  2403  173F  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  2404  1740  1283               	bcf	3,5	;RP0=0, select bank0
  2405  1741  1303               	bcf	3,6	;RP1=0, select bank0
  2406  1742  00A1               	movwf	___flge@ff1+1
  2407  1743  1683               	bsf	3,5	;RP0=1, select bank1
  2408  1744  1303               	bcf	3,6	;RP1=0, select bank1
  2409  1745  0841               	movf	sprintf@tmpval^(0+128),w
  2410  1746  1283               	bcf	3,5	;RP0=0, select bank0
  2411  1747  1303               	bcf	3,6	;RP1=0, select bank0
  2412  1748  00A0               	movwf	___flge@ff1
  2413  1749  303F               	movlw	63
  2414  174A  00A7               	movwf	___flge@ff2+3
  2415  174B  3080               	movlw	128
  2416  174C  00A6               	movwf	___flge@ff2+2
  2417  174D  3000               	movlw	0
  2418  174E  00A5               	movwf	___flge@ff2+1
  2419  174F  3000               	movlw	0
  2420  1750  00A4               	movwf	___flge@ff2
  2421  1751  160A  158A  2525  160A  118A  	fcall	___flge
  2422  1756  1803               	btfsc	3,0
  2423  1757  2F59               	goto	u6941
  2424  1758  2F5A               	goto	u6940
  2425  1759                     u6941:
  2426  1759  2F63               	goto	l4326
  2427  175A                     u6940:
  2428  175A                     l4324:
  2429                           
  2430                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2431  175A  30FF               	movlw	255
  2432  175B  1683               	bsf	3,5	;RP0=1, select bank1
  2433  175C  1303               	bcf	3,6	;RP1=0, select bank1
  2434  175D  07C9               	addwf	sprintf@eexp^(0+128),f
  2435  175E  1803               	skipnc
  2436  175F  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  2437  1760  30FF               	movlw	255
  2438  1761  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  2439  1762  2F94               	goto	l4330
  2440  1763                     l4326:
  2441  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2442  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2443  1765  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  2444  1766  1283               	bcf	3,5	;RP0=0, select bank0
  2445  1767  1303               	bcf	3,6	;RP1=0, select bank0
  2446  1768  00A3               	movwf	___flge@ff1+3
  2447  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2448  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2449  176B  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  2450  176C  1283               	bcf	3,5	;RP0=0, select bank0
  2451  176D  1303               	bcf	3,6	;RP1=0, select bank0
  2452  176E  00A2               	movwf	___flge@ff1+2
  2453  176F  1683               	bsf	3,5	;RP0=1, select bank1
  2454  1770  1303               	bcf	3,6	;RP1=0, select bank1
  2455  1771  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  2456  1772  1283               	bcf	3,5	;RP0=0, select bank0
  2457  1773  1303               	bcf	3,6	;RP1=0, select bank0
  2458  1774  00A1               	movwf	___flge@ff1+1
  2459  1775  1683               	bsf	3,5	;RP0=1, select bank1
  2460  1776  1303               	bcf	3,6	;RP1=0, select bank1
  2461  1777  0841               	movf	sprintf@tmpval^(0+128),w
  2462  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2463  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2464  177A  00A0               	movwf	___flge@ff1
  2465  177B  3041               	movlw	65
  2466  177C  00A7               	movwf	___flge@ff2+3
  2467  177D  3020               	movlw	32
  2468  177E  00A6               	movwf	___flge@ff2+2
  2469  177F  3000               	movlw	0
  2470  1780  00A5               	movwf	___flge@ff2+1
  2471  1781  3000               	movlw	0
  2472  1782  00A4               	movwf	___flge@ff2
  2473  1783  160A  158A  2525  160A  118A  	fcall	___flge
  2474  1788  1C03               	btfss	3,0
  2475  1789  2F8B               	goto	u6951
  2476  178A  2F8C               	goto	u6950
  2477  178B                     u6951:
  2478  178B  2F94               	goto	l4330
  2479  178C                     u6950:
  2480  178C                     l4328:
  2481                           
  2482                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2483  178C  3001               	movlw	1
  2484  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2485  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2486  178F  07C9               	addwf	sprintf@eexp^(0+128),f
  2487  1790  1803               	skipnc
  2488  1791  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  2489  1792  3000               	movlw	0
  2490  1793  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  2491  1794                     l4330:
  2492                           
  2493                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(prec <= 12)
  2494  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2495  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2496  1796  0851               	movf	(sprintf@prec+1)^(0+128),w
  2497  1797  3A80               	xorlw	128
  2498  1798  00FF               	movwf	btemp+1
  2499  1799  3080               	movlw	128
  2500  179A  027F               	subwf	btemp+1,w
  2501  179B  1D03               	skipz
  2502  179C  2F9F               	goto	u6965
  2503  179D  300D               	movlw	13
  2504  179E  0250               	subwf	sprintf@prec^(0+128),w
  2505  179F                     u6965:
  2506  179F  1803               	skipnc
  2507  17A0  2FA2               	goto	u6961
  2508  17A1  2FA3               	goto	u6960
  2509  17A2                     u6961:
  2510  17A2  2FEA               	goto	l4334
  2511  17A3                     u6960:
  2512  17A3                     l4332:
  2513                           
  2514                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval += fround((uns
      +                          igned int)prec);
  2515  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2516  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2517  17A5  0850               	movf	sprintf@prec^(0+128),w
  2518  17A6  160A  118A  2061  160A  118A  	fcall	_fround
  2519  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2520  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2521  17AD  0847               	movf	?_fround+3,w
  2522  17AE  00DB               	movwf	___fladd@b+3
  2523  17AF  0846               	movf	?_fround+2,w
  2524  17B0  00DA               	movwf	___fladd@b+2
  2525  17B1  0845               	movf	?_fround+1,w
  2526  17B2  00D9               	movwf	___fladd@b+1
  2527  17B3  0844               	movf	?_fround,w
  2528  17B4  00D8               	movwf	___fladd@b
  2529  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2530  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2531  17B7  084E               	movf	(sprintf@fval+3)^(0+128),w
  2532  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2533  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2534  17BA  00DF               	movwf	___fladd@a+3
  2535  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2536  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2537  17BD  084D               	movf	(sprintf@fval+2)^(0+128),w
  2538  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2539  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2540  17C0  00DE               	movwf	___fladd@a+2
  2541  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2542  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2543  17C3  084C               	movf	(sprintf@fval+1)^(0+128),w
  2544  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2545  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2546  17C6  00DD               	movwf	___fladd@a+1
  2547  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2548  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2549  17C9  084B               	movf	sprintf@fval^(0+128),w
  2550  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2551  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2552  17CC  00DC               	movwf	___fladd@a
  2553  17CD  160A  118A  226E  160A  118A  	fcall	___fladd
  2554  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2555  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2556  17D4  085B               	movf	?___fladd+3,w
  2557  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2558  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2559  17D7  00CE               	movwf	(sprintf@fval+3)^(0+128)
  2560  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2561  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2562  17DA  085A               	movf	?___fladd+2,w
  2563  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2564  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2565  17DD  00CD               	movwf	(sprintf@fval+2)^(0+128)
  2566  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2567  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2568  17E0  0859               	movf	?___fladd+1,w
  2569  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2570  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2571  17E3  00CC               	movwf	(sprintf@fval+1)^(0+128)
  2572  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2573  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2574  17E6  0858               	movf	?___fladd,w
  2575  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2576  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2577  17E9  00CB               	movwf	sprintf@fval^(0+128)
  2578  17EA                     l4334:
  2579                           
  2580                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eexp > 9)||(fval 
      +                          != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2581  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2582  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2583  17EC  084A               	movf	(sprintf@eexp+1)^(0+128),w
  2584  17ED  3A80               	xorlw	128
  2585  17EE  00FF               	movwf	btemp+1
  2586  17EF  3080               	movlw	128
  2587  17F0  027F               	subwf	btemp+1,w
  2588  17F1  1D03               	skipz
  2589  17F2  2FF5               	goto	u6975
  2590  17F3  300A               	movlw	10
  2591  17F4  0249               	subwf	sprintf@eexp^(0+128),w
  2592  17F5                     u6975:
  2593  17F5  1803               	skipnc
  2594  17F6  2FFA               	goto	u6971
  2595  17F7  120A  118A  281E   	goto	u6970
  2596  17FA                     u6971:
  2597  17FA  120A  118A  287D   	goto	l4342
  2598  17FD                     L3:
  2599  17FD                     L2:
  2600  17FD  120A  118A  2E9B   	ljmp	l4524
  2601                           
  2602                           	psect	text2
  2603  0C9D                     __ptext2:	
  2604 ;; *************** function _scale *****************
  2605 ;; Defined at:
  2606 ;;		line 433 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;  scl             1    wreg     char 
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;  scl             1   54[BANK0 ] char 
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  4   36[BANK0 ] char 
  2613 ;; Registers used:
  2614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2620 ;;      Params:         0       4       0       0       0
  2621 ;;      Locals:         0       5       0       0       0
  2622 ;;      Temps:          0      10       0       0       0
  2623 ;;      Totals:         0      19       0       0       0
  2624 ;;Total ram usage:       19 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:    4
  2627 ;; This function calls:
  2628 ;;		___awdiv
  2629 ;;		___awmod
  2630 ;;		___flmul
  2631 ;; This function is called by:
  2632 ;;		_sprintf
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           
  2637                           ;psect for function _scale
  2638  0C9D                     _scale:
  2639                           
  2640                           ;incstack = 0
  2641                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2642                           ;scale@scl stored from wreg
  2643  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2644  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2645  0C9F  00D6               	movwf	scale@scl
  2646  0CA0                     l3966:
  2647                           
  2648                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed char scl);D:\
      +                          Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;D:\Microchip\xc8\v2.31\pic\s
      +                          ources\c90\common\doprnt.c: 436:  if(scl < 0) {
  2649  0CA0  1FD6               	btfss	scale@scl,7
  2650  0CA1  2CA3               	goto	u6091
  2651  0CA2  2CA4               	goto	u6090
  2652  0CA3                     u6091:
  2653  0CA3  2E53               	goto	l3988
  2654  0CA4                     u6090:
  2655  0CA4                     l3968:
  2656                           
  2657                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl;
  2658  0CA4  09D6               	comf	scale@scl,f
  2659  0CA5  0AD6               	incf	scale@scl,f
  2660  0CA6                     l3970:
  2661                           
  2662                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=110)
  2663  0CA6  0856               	movf	scale@scl,w
  2664  0CA7  3A80               	xorlw	128
  2665  0CA8  3E12               	addlw	-238
  2666  0CA9  1C03               	skipc
  2667  0CAA  2CAC               	goto	u6101
  2668  0CAB  2CAD               	goto	u6100
  2669  0CAC                     u6101:
  2670  0CAC  2D97               	goto	l3978
  2671  0CAD                     u6100:
  2672  0CAD                     l3972:
  2673                           
  2674                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsig
      +                          ned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigne
      +                          d char)(scl%10)];
  2675  0CAD  300A               	movlw	10
  2676  0CAE  00A2               	movwf	___awdiv@divisor
  2677  0CAF  3000               	movlw	0
  2678  0CB0  00A3               	movwf	___awdiv@divisor+1
  2679  0CB1  0856               	movf	scale@scl,w
  2680  0CB2  00F5               	movwf	___awmod@dividend
  2681  0CB3  01F6               	clrf	___awmod@dividend+1
  2682  0CB4  1BF5               	btfsc	___awmod@dividend,7
  2683  0CB5  03F6               	decf	___awmod@dividend+1,f
  2684  0CB6  3064               	movlw	100
  2685  0CB7  00F3               	movwf	___awmod@divisor
  2686  0CB8  3000               	movlw	0
  2687  0CB9  00F4               	movwf	___awmod@divisor+1
  2688  0CBA  160A  118A  2006  120A  158A  	fcall	___awmod
  2689  0CBF  0874               	movf	?___awmod+1,w
  2690  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2691  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2692  0CC2  00A5               	movwf	___awdiv@dividend+1
  2693  0CC3  0873               	movf	?___awmod,w
  2694  0CC4  00A4               	movwf	___awdiv@dividend
  2695  0CC5  120A  158A  20D3  120A  158A  	fcall	___awdiv
  2696  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2697  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2698  0CCC  0822               	movf	?___awdiv,w
  2699  0CCD  00C8               	movwf	??_scale
  2700  0CCE  3001               	movlw	1
  2701  0CCF                     u6115:
  2702  0CCF  1003               	clrc
  2703  0CD0  0DC8               	rlf	??_scale,f
  2704  0CD1  3EFF               	addlw	-1
  2705  0CD2  1D03               	skipz
  2706  0CD3  2CCF               	goto	u6115
  2707  0CD4  1003               	clrc
  2708  0CD5  0D48               	rlf	??_scale,w
  2709  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2710  0CD7  0084               	movwf	4
  2711  0CD8  120A  158A  200A  120A  158A  	fcall	stringdir
  2712  0CDD  00C9               	movwf	??_scale+1
  2713  0CDE  120A  158A  200A  120A  158A  	fcall	stringdir
  2714  0CE3  00CA               	movwf	??_scale+2
  2715  0CE4  120A  158A  200A  120A  158A  	fcall	stringdir
  2716  0CE9  00CB               	movwf	??_scale+3
  2717  0CEA  120A  158A  200A  120A  158A  	fcall	stringdir
  2718  0CEF  00CC               	movwf	??_scale+4
  2719  0CF0  084C               	movf	??_scale+4,w
  2720  0CF1  00AD               	movwf	___flmul@b+3
  2721  0CF2  084B               	movf	??_scale+3,w
  2722  0CF3  00AC               	movwf	___flmul@b+2
  2723  0CF4  084A               	movf	??_scale+2,w
  2724  0CF5  00AB               	movwf	___flmul@b+1
  2725  0CF6  0849               	movf	??_scale+1,w
  2726  0CF7  00AA               	movwf	___flmul@b
  2727  0CF8  3064               	movlw	100
  2728  0CF9  00A2               	movwf	___awdiv@divisor
  2729  0CFA  3000               	movlw	0
  2730  0CFB  00A3               	movwf	___awdiv@divisor+1
  2731  0CFC  0856               	movf	scale@scl,w
  2732  0CFD  00A4               	movwf	___awdiv@dividend
  2733  0CFE  01A5               	clrf	___awdiv@dividend+1
  2734  0CFF  1BA4               	btfsc	___awdiv@dividend,7
  2735  0D00  03A5               	decf	___awdiv@dividend+1,f
  2736  0D01  120A  158A  20D3  120A  158A  	fcall	___awdiv
  2737  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2738  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2739  0D08  0822               	movf	?___awdiv,w
  2740  0D09  00CD               	movwf	??_scale+5
  2741  0D0A  3001               	movlw	1
  2742  0D0B                     u6125:
  2743  0D0B  1003               	clrc
  2744  0D0C  0DCD               	rlf	??_scale+5,f
  2745  0D0D  3EFF               	addlw	-1
  2746  0D0E  1D03               	skipz
  2747  0D0F  2D0B               	goto	u6125
  2748  0D10  1003               	clrc
  2749  0D11  0D4D               	rlf	??_scale+5,w
  2750  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2751  0D13  0084               	movwf	4
  2752  0D14  120A  158A  200A  120A  158A  	fcall	stringdir
  2753  0D19  00CE               	movwf	??_scale+6
  2754  0D1A  120A  158A  200A  120A  158A  	fcall	stringdir
  2755  0D1F  00CF               	movwf	??_scale+7
  2756  0D20  120A  158A  200A  120A  158A  	fcall	stringdir
  2757  0D25  00D0               	movwf	??_scale+8
  2758  0D26  120A  158A  200A  120A  158A  	fcall	stringdir
  2759  0D2B  00D1               	movwf	??_scale+9
  2760  0D2C  0851               	movf	??_scale+9,w
  2761  0D2D  00B1               	movwf	___flmul@a+3
  2762  0D2E  0850               	movf	??_scale+8,w
  2763  0D2F  00B0               	movwf	___flmul@a+2
  2764  0D30  084F               	movf	??_scale+7,w
  2765  0D31  00AF               	movwf	___flmul@a+1
  2766  0D32  084E               	movf	??_scale+6,w
  2767  0D33  00AE               	movwf	___flmul@a
  2768  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2769  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2770  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2771  0D3B  082D               	movf	?___flmul+3,w
  2772  0D3C  00D5               	movwf	_scale$1239+3
  2773  0D3D  082C               	movf	?___flmul+2,w
  2774  0D3E  00D4               	movwf	_scale$1239+2
  2775  0D3F  082B               	movf	?___flmul+1,w
  2776  0D40  00D3               	movwf	_scale$1239+1
  2777  0D41  082A               	movf	?___flmul,w
  2778  0D42  00D2               	movwf	_scale$1239
  2779                           
  2780                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsig
      +                          ned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigne
      +                          d char)(scl%10)];
  2781  0D43  300A               	movlw	10
  2782  0D44  00F3               	movwf	___awmod@divisor
  2783  0D45  3000               	movlw	0
  2784  0D46  00F4               	movwf	___awmod@divisor+1
  2785  0D47  0856               	movf	scale@scl,w
  2786  0D48  00F5               	movwf	___awmod@dividend
  2787  0D49  01F6               	clrf	___awmod@dividend+1
  2788  0D4A  1BF5               	btfsc	___awmod@dividend,7
  2789  0D4B  03F6               	decf	___awmod@dividend+1,f
  2790  0D4C  160A  118A  2006  120A  158A  	fcall	___awmod
  2791  0D51  0873               	movf	?___awmod,w
  2792  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2793  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2794  0D54  00C8               	movwf	??_scale
  2795  0D55  3001               	movlw	1
  2796  0D56                     u6135:
  2797  0D56  1003               	clrc
  2798  0D57  0DC8               	rlf	??_scale,f
  2799  0D58  3EFF               	addlw	-1
  2800  0D59  1D03               	skipz
  2801  0D5A  2D56               	goto	u6135
  2802  0D5B  1003               	clrc
  2803  0D5C  0D48               	rlf	??_scale,w
  2804  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2805  0D5E  0084               	movwf	4
  2806  0D5F  120A  158A  200A  120A  158A  	fcall	stringdir
  2807  0D64  00C9               	movwf	??_scale+1
  2808  0D65  120A  158A  200A  120A  158A  	fcall	stringdir
  2809  0D6A  00CA               	movwf	??_scale+2
  2810  0D6B  120A  158A  200A  120A  158A  	fcall	stringdir
  2811  0D70  00CB               	movwf	??_scale+3
  2812  0D71  120A  158A  200A  120A  158A  	fcall	stringdir
  2813  0D76  00CC               	movwf	??_scale+4
  2814  0D77  084C               	movf	??_scale+4,w
  2815  0D78  00AD               	movwf	___flmul@b+3
  2816  0D79  084B               	movf	??_scale+3,w
  2817  0D7A  00AC               	movwf	___flmul@b+2
  2818  0D7B  084A               	movf	??_scale+2,w
  2819  0D7C  00AB               	movwf	___flmul@b+1
  2820  0D7D  0849               	movf	??_scale+1,w
  2821  0D7E  00AA               	movwf	___flmul@b
  2822  0D7F  0855               	movf	_scale$1239+3,w
  2823  0D80  00B1               	movwf	___flmul@a+3
  2824  0D81  0854               	movf	_scale$1239+2,w
  2825  0D82  00B0               	movwf	___flmul@a+2
  2826  0D83  0853               	movf	_scale$1239+1,w
  2827  0D84  00AF               	movwf	___flmul@a+1
  2828  0D85  0852               	movf	_scale$1239,w
  2829  0D86  00AE               	movwf	___flmul@a
  2830  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2831  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2832  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2833  0D8E  082D               	movf	?___flmul+3,w
  2834  0D8F  00C7               	movwf	?_scale+3
  2835  0D90  082C               	movf	?___flmul+2,w
  2836  0D91  00C6               	movwf	?_scale+2
  2837  0D92  082B               	movf	?___flmul+1,w
  2838  0D93  00C5               	movwf	?_scale+1
  2839  0D94  082A               	movf	?___flmul,w
  2840  0D95  00C4               	movwf	?_scale
  2841  0D96  2FFF               	goto	l355
  2842  0D97                     l3978:
  2843  0D97  0856               	movf	scale@scl,w
  2844  0D98  3A80               	xorlw	128
  2845  0D99  3E75               	addlw	-139
  2846  0D9A  1C03               	skipc
  2847  0D9B  2D9D               	goto	u6141
  2848  0D9C  2D9E               	goto	u6140
  2849  0D9D                     u6141:
  2850  0D9D  2E26               	goto	l3984
  2851  0D9E                     u6140:
  2852  0D9E                     l3980:
  2853                           
  2854                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _npowers_[(unsig
      +                          ned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2855  0D9E  300A               	movlw	10
  2856  0D9F  00F3               	movwf	___awmod@divisor
  2857  0DA0  3000               	movlw	0
  2858  0DA1  00F4               	movwf	___awmod@divisor+1
  2859  0DA2  0856               	movf	scale@scl,w
  2860  0DA3  00F5               	movwf	___awmod@dividend
  2861  0DA4  01F6               	clrf	___awmod@dividend+1
  2862  0DA5  1BF5               	btfsc	___awmod@dividend,7
  2863  0DA6  03F6               	decf	___awmod@dividend+1,f
  2864  0DA7  160A  118A  2006  120A  158A  	fcall	___awmod
  2865  0DAC  0873               	movf	?___awmod,w
  2866  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2867  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2868  0DAF  00C8               	movwf	??_scale
  2869  0DB0  3001               	movlw	1
  2870  0DB1                     u6155:
  2871  0DB1  1003               	clrc
  2872  0DB2  0DC8               	rlf	??_scale,f
  2873  0DB3  3EFF               	addlw	-1
  2874  0DB4  1D03               	skipz
  2875  0DB5  2DB1               	goto	u6155
  2876  0DB6  1003               	clrc
  2877  0DB7  0D48               	rlf	??_scale,w
  2878  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2879  0DB9  0084               	movwf	4
  2880  0DBA  120A  158A  200A  120A  158A  	fcall	stringdir
  2881  0DBF  00C9               	movwf	??_scale+1
  2882  0DC0  120A  158A  200A  120A  158A  	fcall	stringdir
  2883  0DC5  00CA               	movwf	??_scale+2
  2884  0DC6  120A  158A  200A  120A  158A  	fcall	stringdir
  2885  0DCB  00CB               	movwf	??_scale+3
  2886  0DCC  120A  158A  200A  120A  158A  	fcall	stringdir
  2887  0DD1  00CC               	movwf	??_scale+4
  2888  0DD2  084C               	movf	??_scale+4,w
  2889  0DD3  00AD               	movwf	___flmul@b+3
  2890  0DD4  084B               	movf	??_scale+3,w
  2891  0DD5  00AC               	movwf	___flmul@b+2
  2892  0DD6  084A               	movf	??_scale+2,w
  2893  0DD7  00AB               	movwf	___flmul@b+1
  2894  0DD8  0849               	movf	??_scale+1,w
  2895  0DD9  00AA               	movwf	___flmul@b
  2896  0DDA  300A               	movlw	10
  2897  0DDB  00A2               	movwf	___awdiv@divisor
  2898  0DDC  3000               	movlw	0
  2899  0DDD  00A3               	movwf	___awdiv@divisor+1
  2900  0DDE  0856               	movf	scale@scl,w
  2901  0DDF  00A4               	movwf	___awdiv@dividend
  2902  0DE0  01A5               	clrf	___awdiv@dividend+1
  2903  0DE1  1BA4               	btfsc	___awdiv@dividend,7
  2904  0DE2  03A5               	decf	___awdiv@dividend+1,f
  2905  0DE3  120A  158A  20D3  120A  158A  	fcall	___awdiv
  2906  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2907  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2908  0DEA  0822               	movf	?___awdiv,w
  2909  0DEB  00CD               	movwf	??_scale+5
  2910  0DEC  3001               	movlw	1
  2911  0DED                     u6165:
  2912  0DED  1003               	clrc
  2913  0DEE  0DCD               	rlf	??_scale+5,f
  2914  0DEF  3EFF               	addlw	-1
  2915  0DF0  1D03               	skipz
  2916  0DF1  2DED               	goto	u6165
  2917  0DF2  1003               	clrc
  2918  0DF3  0D4D               	rlf	??_scale+5,w
  2919  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2920  0DF5  0084               	movwf	4
  2921  0DF6  120A  158A  200A  120A  158A  	fcall	stringdir
  2922  0DFB  00CE               	movwf	??_scale+6
  2923  0DFC  120A  158A  200A  120A  158A  	fcall	stringdir
  2924  0E01  00CF               	movwf	??_scale+7
  2925  0E02  120A  158A  200A  120A  158A  	fcall	stringdir
  2926  0E07  00D0               	movwf	??_scale+8
  2927  0E08  120A  158A  200A  120A  158A  	fcall	stringdir
  2928  0E0D  00D1               	movwf	??_scale+9
  2929  0E0E  0851               	movf	??_scale+9,w
  2930  0E0F  00B1               	movwf	___flmul@a+3
  2931  0E10  0850               	movf	??_scale+8,w
  2932  0E11  00B0               	movwf	___flmul@a+2
  2933  0E12  084F               	movf	??_scale+7,w
  2934  0E13  00AF               	movwf	___flmul@a+1
  2935  0E14  084E               	movf	??_scale+6,w
  2936  0E15  00AE               	movwf	___flmul@a
  2937  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2938  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2939  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2940  0E1D  082D               	movf	?___flmul+3,w
  2941  0E1E  00C7               	movwf	?_scale+3
  2942  0E1F  082C               	movf	?___flmul+2,w
  2943  0E20  00C6               	movwf	?_scale+2
  2944  0E21  082B               	movf	?___flmul+1,w
  2945  0E22  00C5               	movwf	?_scale+1
  2946  0E23  082A               	movf	?___flmul,w
  2947  0E24  00C4               	movwf	?_scale
  2948  0E25  2FFF               	goto	l355
  2949  0E26                     l3984:
  2950                           
  2951                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _npowers_[(unsign
      +                          ed char)scl];
  2952  0E26  0856               	movf	scale@scl,w
  2953  0E27  00C8               	movwf	??_scale
  2954  0E28  3001               	movlw	1
  2955  0E29                     u6175:
  2956  0E29  1003               	clrc
  2957  0E2A  0DC8               	rlf	??_scale,f
  2958  0E2B  3EFF               	addlw	-1
  2959  0E2C  1D03               	skipz
  2960  0E2D  2E29               	goto	u6175
  2961  0E2E  1003               	clrc
  2962  0E2F  0D48               	rlf	??_scale,w
  2963  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2964  0E31  0084               	movwf	4
  2965  0E32  120A  158A  200A  120A  158A  	fcall	stringdir
  2966  0E37  00C9               	movwf	??_scale+1
  2967  0E38  120A  158A  200A  120A  158A  	fcall	stringdir
  2968  0E3D  00CA               	movwf	??_scale+2
  2969  0E3E  120A  158A  200A  120A  158A  	fcall	stringdir
  2970  0E43  00CB               	movwf	??_scale+3
  2971  0E44  120A  158A  200A  120A  158A  	fcall	stringdir
  2972  0E49  00CC               	movwf	??_scale+4
  2973  0E4A  084C               	movf	??_scale+4,w
  2974  0E4B  00C7               	movwf	?_scale+3
  2975  0E4C  084B               	movf	??_scale+3,w
  2976  0E4D  00C6               	movwf	?_scale+2
  2977  0E4E  084A               	movf	??_scale+2,w
  2978  0E4F  00C5               	movwf	?_scale+1
  2979  0E50  0849               	movf	??_scale+1,w
  2980  0E51  00C4               	movwf	?_scale
  2981  0E52  2FFF               	goto	l355
  2982  0E53                     l3988:
  2983                           
  2984                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110)
  2985  0E53  0856               	movf	scale@scl,w
  2986  0E54  3A80               	xorlw	128
  2987  0E55  3E12               	addlw	-238
  2988  0E56  1C03               	skipc
  2989  0E57  2E59               	goto	u6181
  2990  0E58  2E5A               	goto	u6180
  2991  0E59                     u6181:
  2992  0E59  2F44               	goto	l3996
  2993  0E5A                     u6180:
  2994  0E5A                     l3990:
  2995                           
  2996                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigne
      +                          d char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned ch
      +                          ar)(scl%10)];
  2997  0E5A  300A               	movlw	10
  2998  0E5B  00A2               	movwf	___awdiv@divisor
  2999  0E5C  3000               	movlw	0
  3000  0E5D  00A3               	movwf	___awdiv@divisor+1
  3001  0E5E  0856               	movf	scale@scl,w
  3002  0E5F  00F5               	movwf	___awmod@dividend
  3003  0E60  01F6               	clrf	___awmod@dividend+1
  3004  0E61  1BF5               	btfsc	___awmod@dividend,7
  3005  0E62  03F6               	decf	___awmod@dividend+1,f
  3006  0E63  3064               	movlw	100
  3007  0E64  00F3               	movwf	___awmod@divisor
  3008  0E65  3000               	movlw	0
  3009  0E66  00F4               	movwf	___awmod@divisor+1
  3010  0E67  160A  118A  2006  120A  158A  	fcall	___awmod
  3011  0E6C  0874               	movf	?___awmod+1,w
  3012  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3013  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3014  0E6F  00A5               	movwf	___awdiv@dividend+1
  3015  0E70  0873               	movf	?___awmod,w
  3016  0E71  00A4               	movwf	___awdiv@dividend
  3017  0E72  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3018  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3019  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3020  0E79  0822               	movf	?___awdiv,w
  3021  0E7A  00C8               	movwf	??_scale
  3022  0E7B  3001               	movlw	1
  3023  0E7C                     u6195:
  3024  0E7C  1003               	clrc
  3025  0E7D  0DC8               	rlf	??_scale,f
  3026  0E7E  3EFF               	addlw	-1
  3027  0E7F  1D03               	skipz
  3028  0E80  2E7C               	goto	u6195
  3029  0E81  1003               	clrc
  3030  0E82  0D48               	rlf	??_scale,w
  3031  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3032  0E84  0084               	movwf	4
  3033  0E85  120A  158A  200A  120A  158A  	fcall	stringdir
  3034  0E8A  00C9               	movwf	??_scale+1
  3035  0E8B  120A  158A  200A  120A  158A  	fcall	stringdir
  3036  0E90  00CA               	movwf	??_scale+2
  3037  0E91  120A  158A  200A  120A  158A  	fcall	stringdir
  3038  0E96  00CB               	movwf	??_scale+3
  3039  0E97  120A  158A  200A  120A  158A  	fcall	stringdir
  3040  0E9C  00CC               	movwf	??_scale+4
  3041  0E9D  084C               	movf	??_scale+4,w
  3042  0E9E  00AD               	movwf	___flmul@b+3
  3043  0E9F  084B               	movf	??_scale+3,w
  3044  0EA0  00AC               	movwf	___flmul@b+2
  3045  0EA1  084A               	movf	??_scale+2,w
  3046  0EA2  00AB               	movwf	___flmul@b+1
  3047  0EA3  0849               	movf	??_scale+1,w
  3048  0EA4  00AA               	movwf	___flmul@b
  3049  0EA5  3064               	movlw	100
  3050  0EA6  00A2               	movwf	___awdiv@divisor
  3051  0EA7  3000               	movlw	0
  3052  0EA8  00A3               	movwf	___awdiv@divisor+1
  3053  0EA9  0856               	movf	scale@scl,w
  3054  0EAA  00A4               	movwf	___awdiv@dividend
  3055  0EAB  01A5               	clrf	___awdiv@dividend+1
  3056  0EAC  1BA4               	btfsc	___awdiv@dividend,7
  3057  0EAD  03A5               	decf	___awdiv@dividend+1,f
  3058  0EAE  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3059  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3060  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3061  0EB5  0822               	movf	?___awdiv,w
  3062  0EB6  00CD               	movwf	??_scale+5
  3063  0EB7  3001               	movlw	1
  3064  0EB8                     u6205:
  3065  0EB8  1003               	clrc
  3066  0EB9  0DCD               	rlf	??_scale+5,f
  3067  0EBA  3EFF               	addlw	-1
  3068  0EBB  1D03               	skipz
  3069  0EBC  2EB8               	goto	u6205
  3070  0EBD  1003               	clrc
  3071  0EBE  0D4D               	rlf	??_scale+5,w
  3072  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3073  0EC0  0084               	movwf	4
  3074  0EC1  120A  158A  200A  120A  158A  	fcall	stringdir
  3075  0EC6  00CE               	movwf	??_scale+6
  3076  0EC7  120A  158A  200A  120A  158A  	fcall	stringdir
  3077  0ECC  00CF               	movwf	??_scale+7
  3078  0ECD  120A  158A  200A  120A  158A  	fcall	stringdir
  3079  0ED2  00D0               	movwf	??_scale+8
  3080  0ED3  120A  158A  200A  120A  158A  	fcall	stringdir
  3081  0ED8  00D1               	movwf	??_scale+9
  3082  0ED9  0851               	movf	??_scale+9,w
  3083  0EDA  00B1               	movwf	___flmul@a+3
  3084  0EDB  0850               	movf	??_scale+8,w
  3085  0EDC  00B0               	movwf	___flmul@a+2
  3086  0EDD  084F               	movf	??_scale+7,w
  3087  0EDE  00AF               	movwf	___flmul@a+1
  3088  0EDF  084E               	movf	??_scale+6,w
  3089  0EE0  00AE               	movwf	___flmul@a
  3090  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3091  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3092  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3093  0EE8  082D               	movf	?___flmul+3,w
  3094  0EE9  00D5               	movwf	_scale$1239+3
  3095  0EEA  082C               	movf	?___flmul+2,w
  3096  0EEB  00D4               	movwf	_scale$1239+2
  3097  0EEC  082B               	movf	?___flmul+1,w
  3098  0EED  00D3               	movwf	_scale$1239+1
  3099  0EEE  082A               	movf	?___flmul,w
  3100  0EEF  00D2               	movwf	_scale$1239
  3101                           
  3102                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigne
      +                          d char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned ch
      +                          ar)(scl%10)];
  3103  0EF0  300A               	movlw	10
  3104  0EF1  00F3               	movwf	___awmod@divisor
  3105  0EF2  3000               	movlw	0
  3106  0EF3  00F4               	movwf	___awmod@divisor+1
  3107  0EF4  0856               	movf	scale@scl,w
  3108  0EF5  00F5               	movwf	___awmod@dividend
  3109  0EF6  01F6               	clrf	___awmod@dividend+1
  3110  0EF7  1BF5               	btfsc	___awmod@dividend,7
  3111  0EF8  03F6               	decf	___awmod@dividend+1,f
  3112  0EF9  160A  118A  2006  120A  158A  	fcall	___awmod
  3113  0EFE  0873               	movf	?___awmod,w
  3114  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3115  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3116  0F01  00C8               	movwf	??_scale
  3117  0F02  3001               	movlw	1
  3118  0F03                     u6215:
  3119  0F03  1003               	clrc
  3120  0F04  0DC8               	rlf	??_scale,f
  3121  0F05  3EFF               	addlw	-1
  3122  0F06  1D03               	skipz
  3123  0F07  2F03               	goto	u6215
  3124  0F08  1003               	clrc
  3125  0F09  0D48               	rlf	??_scale,w
  3126  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3127  0F0B  0084               	movwf	4
  3128  0F0C  120A  158A  200A  120A  158A  	fcall	stringdir
  3129  0F11  00C9               	movwf	??_scale+1
  3130  0F12  120A  158A  200A  120A  158A  	fcall	stringdir
  3131  0F17  00CA               	movwf	??_scale+2
  3132  0F18  120A  158A  200A  120A  158A  	fcall	stringdir
  3133  0F1D  00CB               	movwf	??_scale+3
  3134  0F1E  120A  158A  200A  120A  158A  	fcall	stringdir
  3135  0F23  00CC               	movwf	??_scale+4
  3136  0F24  084C               	movf	??_scale+4,w
  3137  0F25  00AD               	movwf	___flmul@b+3
  3138  0F26  084B               	movf	??_scale+3,w
  3139  0F27  00AC               	movwf	___flmul@b+2
  3140  0F28  084A               	movf	??_scale+2,w
  3141  0F29  00AB               	movwf	___flmul@b+1
  3142  0F2A  0849               	movf	??_scale+1,w
  3143  0F2B  00AA               	movwf	___flmul@b
  3144  0F2C  0855               	movf	_scale$1239+3,w
  3145  0F2D  00B1               	movwf	___flmul@a+3
  3146  0F2E  0854               	movf	_scale$1239+2,w
  3147  0F2F  00B0               	movwf	___flmul@a+2
  3148  0F30  0853               	movf	_scale$1239+1,w
  3149  0F31  00AF               	movwf	___flmul@a+1
  3150  0F32  0852               	movf	_scale$1239,w
  3151  0F33  00AE               	movwf	___flmul@a
  3152  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3153  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3154  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3155  0F3B  082D               	movf	?___flmul+3,w
  3156  0F3C  00C7               	movwf	?_scale+3
  3157  0F3D  082C               	movf	?___flmul+2,w
  3158  0F3E  00C6               	movwf	?_scale+2
  3159  0F3F  082B               	movf	?___flmul+1,w
  3160  0F40  00C5               	movwf	?_scale+1
  3161  0F41  082A               	movf	?___flmul,w
  3162  0F42  00C4               	movwf	?_scale
  3163  0F43  2FFF               	goto	l355
  3164  0F44                     l3996:
  3165  0F44  0856               	movf	scale@scl,w
  3166  0F45  3A80               	xorlw	128
  3167  0F46  3E75               	addlw	-139
  3168  0F47  1C03               	skipc
  3169  0F48  2F4A               	goto	u6221
  3170  0F49  2F4B               	goto	u6220
  3171  0F4A                     u6221:
  3172  0F4A  2FD3               	goto	l4002
  3173  0F4B                     u6220:
  3174  0F4B                     l3998:
  3175                           
  3176                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _powers_[(unsigne
      +                          d char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3177  0F4B  300A               	movlw	10
  3178  0F4C  00F3               	movwf	___awmod@divisor
  3179  0F4D  3000               	movlw	0
  3180  0F4E  00F4               	movwf	___awmod@divisor+1
  3181  0F4F  0856               	movf	scale@scl,w
  3182  0F50  00F5               	movwf	___awmod@dividend
  3183  0F51  01F6               	clrf	___awmod@dividend+1
  3184  0F52  1BF5               	btfsc	___awmod@dividend,7
  3185  0F53  03F6               	decf	___awmod@dividend+1,f
  3186  0F54  160A  118A  2006  120A  158A  	fcall	___awmod
  3187  0F59  0873               	movf	?___awmod,w
  3188  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3189  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3190  0F5C  00C8               	movwf	??_scale
  3191  0F5D  3001               	movlw	1
  3192  0F5E                     u6235:
  3193  0F5E  1003               	clrc
  3194  0F5F  0DC8               	rlf	??_scale,f
  3195  0F60  3EFF               	addlw	-1
  3196  0F61  1D03               	skipz
  3197  0F62  2F5E               	goto	u6235
  3198  0F63  1003               	clrc
  3199  0F64  0D48               	rlf	??_scale,w
  3200  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3201  0F66  0084               	movwf	4
  3202  0F67  120A  158A  200A  120A  158A  	fcall	stringdir
  3203  0F6C  00C9               	movwf	??_scale+1
  3204  0F6D  120A  158A  200A  120A  158A  	fcall	stringdir
  3205  0F72  00CA               	movwf	??_scale+2
  3206  0F73  120A  158A  200A  120A  158A  	fcall	stringdir
  3207  0F78  00CB               	movwf	??_scale+3
  3208  0F79  120A  158A  200A  120A  158A  	fcall	stringdir
  3209  0F7E  00CC               	movwf	??_scale+4
  3210  0F7F  084C               	movf	??_scale+4,w
  3211  0F80  00AD               	movwf	___flmul@b+3
  3212  0F81  084B               	movf	??_scale+3,w
  3213  0F82  00AC               	movwf	___flmul@b+2
  3214  0F83  084A               	movf	??_scale+2,w
  3215  0F84  00AB               	movwf	___flmul@b+1
  3216  0F85  0849               	movf	??_scale+1,w
  3217  0F86  00AA               	movwf	___flmul@b
  3218  0F87  300A               	movlw	10
  3219  0F88  00A2               	movwf	___awdiv@divisor
  3220  0F89  3000               	movlw	0
  3221  0F8A  00A3               	movwf	___awdiv@divisor+1
  3222  0F8B  0856               	movf	scale@scl,w
  3223  0F8C  00A4               	movwf	___awdiv@dividend
  3224  0F8D  01A5               	clrf	___awdiv@dividend+1
  3225  0F8E  1BA4               	btfsc	___awdiv@dividend,7
  3226  0F8F  03A5               	decf	___awdiv@dividend+1,f
  3227  0F90  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3228  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3229  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3230  0F97  0822               	movf	?___awdiv,w
  3231  0F98  00CD               	movwf	??_scale+5
  3232  0F99  3001               	movlw	1
  3233  0F9A                     u6245:
  3234  0F9A  1003               	clrc
  3235  0F9B  0DCD               	rlf	??_scale+5,f
  3236  0F9C  3EFF               	addlw	-1
  3237  0F9D  1D03               	skipz
  3238  0F9E  2F9A               	goto	u6245
  3239  0F9F  1003               	clrc
  3240  0FA0  0D4D               	rlf	??_scale+5,w
  3241  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3242  0FA2  0084               	movwf	4
  3243  0FA3  120A  158A  200A  120A  158A  	fcall	stringdir
  3244  0FA8  00CE               	movwf	??_scale+6
  3245  0FA9  120A  158A  200A  120A  158A  	fcall	stringdir
  3246  0FAE  00CF               	movwf	??_scale+7
  3247  0FAF  120A  158A  200A  120A  158A  	fcall	stringdir
  3248  0FB4  00D0               	movwf	??_scale+8
  3249  0FB5  120A  158A  200A  120A  158A  	fcall	stringdir
  3250  0FBA  00D1               	movwf	??_scale+9
  3251  0FBB  0851               	movf	??_scale+9,w
  3252  0FBC  00B1               	movwf	___flmul@a+3
  3253  0FBD  0850               	movf	??_scale+8,w
  3254  0FBE  00B0               	movwf	___flmul@a+2
  3255  0FBF  084F               	movf	??_scale+7,w
  3256  0FC0  00AF               	movwf	___flmul@a+1
  3257  0FC1  084E               	movf	??_scale+6,w
  3258  0FC2  00AE               	movwf	___flmul@a
  3259  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3260  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3261  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3262  0FCA  082D               	movf	?___flmul+3,w
  3263  0FCB  00C7               	movwf	?_scale+3
  3264  0FCC  082C               	movf	?___flmul+2,w
  3265  0FCD  00C6               	movwf	?_scale+2
  3266  0FCE  082B               	movf	?___flmul+1,w
  3267  0FCF  00C5               	movwf	?_scale+1
  3268  0FD0  082A               	movf	?___flmul,w
  3269  0FD1  00C4               	movwf	?_scale
  3270  0FD2  2FFF               	goto	l355
  3271  0FD3                     l4002:
  3272                           
  3273                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _powers_[(unsigned
      +                           char)scl];
  3274  0FD3  0856               	movf	scale@scl,w
  3275  0FD4  00C8               	movwf	??_scale
  3276  0FD5  3001               	movlw	1
  3277  0FD6                     u6255:
  3278  0FD6  1003               	clrc
  3279  0FD7  0DC8               	rlf	??_scale,f
  3280  0FD8  3EFF               	addlw	-1
  3281  0FD9  1D03               	skipz
  3282  0FDA  2FD6               	goto	u6255
  3283  0FDB  1003               	clrc
  3284  0FDC  0D48               	rlf	??_scale,w
  3285  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3286  0FDE  0084               	movwf	4
  3287  0FDF  120A  158A  200A  120A  158A  	fcall	stringdir
  3288  0FE4  00C9               	movwf	??_scale+1
  3289  0FE5  120A  158A  200A  120A  158A  	fcall	stringdir
  3290  0FEA  00CA               	movwf	??_scale+2
  3291  0FEB  120A  158A  200A  120A  158A  	fcall	stringdir
  3292  0FF0  00CB               	movwf	??_scale+3
  3293  0FF1  120A  158A  200A  120A  158A  	fcall	stringdir
  3294  0FF6  00CC               	movwf	??_scale+4
  3295  0FF7  084C               	movf	??_scale+4,w
  3296  0FF8  00C7               	movwf	?_scale+3
  3297  0FF9  084B               	movf	??_scale+3,w
  3298  0FFA  00C6               	movwf	?_scale+2
  3299  0FFB  084A               	movf	??_scale+2,w
  3300  0FFC  00C5               	movwf	?_scale+1
  3301  0FFD  0849               	movf	??_scale+1,w
  3302  0FFE  00C4               	movwf	?_scale
  3303  0FFF                     l355:
  3304  0FFF  0008               	return
  3305  1000                     __end_of_scale:
  3306                           
  3307                           	psect	text3
  3308  1006                     __ptext3:	
  3309 ;; *************** function ___awmod *****************
  3310 ;; Defined at:
  3311 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  divisor         2    3[COMMON] int 
  3314 ;;  dividend        2    5[COMMON] int 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  sign            1    1[BANK0 ] unsigned char 
  3317 ;;  counter         1    0[BANK0 ] unsigned char 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  2    3[COMMON] int 
  3320 ;; Registers used:
  3321 ;;		wreg, status,2, status,0
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3327 ;;      Params:         4       0       0       0       0
  3328 ;;      Locals:         0       2       0       0       0
  3329 ;;      Temps:          1       0       0       0       0
  3330 ;;      Totals:         5       2       0       0       0
  3331 ;;Total ram usage:        7 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    2
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_scale
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           
  3342                           ;psect for function ___awmod
  3343  1006                     ___awmod:
  3344  1006                     l3860:	
  3345                           ;incstack = 0
  3346                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3347                           
  3348  1006  1283               	bcf	3,5	;RP0=0, select bank0
  3349  1007  1303               	bcf	3,6	;RP1=0, select bank0
  3350  1008  01A1               	clrf	___awmod@sign
  3351  1009                     l3862:
  3352  1009  1FF6               	btfss	___awmod@dividend+1,7
  3353  100A  280C               	goto	u5851
  3354  100B  280D               	goto	u5850
  3355  100C                     u5851:
  3356  100C  2814               	goto	l3868
  3357  100D                     u5850:
  3358  100D                     l3864:
  3359  100D  09F5               	comf	___awmod@dividend,f
  3360  100E  09F6               	comf	___awmod@dividend+1,f
  3361  100F  0AF5               	incf	___awmod@dividend,f
  3362  1010  1903               	skipnz
  3363  1011  0AF6               	incf	___awmod@dividend+1,f
  3364  1012                     l3866:
  3365  1012  01A1               	clrf	___awmod@sign
  3366  1013  0AA1               	incf	___awmod@sign,f
  3367  1014                     l3868:
  3368  1014  1FF4               	btfss	___awmod@divisor+1,7
  3369  1015  2817               	goto	u5861
  3370  1016  2818               	goto	u5860
  3371  1017                     u5861:
  3372  1017  281D               	goto	l3872
  3373  1018                     u5860:
  3374  1018                     l3870:
  3375  1018  09F3               	comf	___awmod@divisor,f
  3376  1019  09F4               	comf	___awmod@divisor+1,f
  3377  101A  0AF3               	incf	___awmod@divisor,f
  3378  101B  1903               	skipnz
  3379  101C  0AF4               	incf	___awmod@divisor+1,f
  3380  101D                     l3872:
  3381  101D  0873               	movf	___awmod@divisor,w
  3382  101E  0474               	iorwf	___awmod@divisor+1,w
  3383  101F  1903               	btfsc	3,2
  3384  1020  2822               	goto	u5871
  3385  1021  2823               	goto	u5870
  3386  1022                     u5871:
  3387  1022  2852               	goto	l3890
  3388  1023                     u5870:
  3389  1023                     l3874:
  3390  1023  01A0               	clrf	___awmod@counter
  3391  1024  0AA0               	incf	___awmod@counter,f
  3392  1025  2831               	goto	l3880
  3393  1026                     l3876:
  3394  1026  3001               	movlw	1
  3395  1027                     u5885:
  3396  1027  1003               	clrc
  3397  1028  0DF3               	rlf	___awmod@divisor,f
  3398  1029  0DF4               	rlf	___awmod@divisor+1,f
  3399  102A  3EFF               	addlw	-1
  3400  102B  1D03               	skipz
  3401  102C  2827               	goto	u5885
  3402  102D                     l3878:
  3403  102D  3001               	movlw	1
  3404  102E  00F7               	movwf	??___awmod
  3405  102F  0877               	movf	??___awmod,w
  3406  1030  07A0               	addwf	___awmod@counter,f
  3407  1031                     l3880:
  3408  1031  1FF4               	btfss	___awmod@divisor+1,7
  3409  1032  2834               	goto	u5891
  3410  1033  2835               	goto	u5890
  3411  1034                     u5891:
  3412  1034  2826               	goto	l3876
  3413  1035                     u5890:
  3414  1035                     l3882:
  3415  1035  0874               	movf	___awmod@divisor+1,w
  3416  1036  0276               	subwf	___awmod@dividend+1,w
  3417  1037  1D03               	skipz
  3418  1038  283B               	goto	u5905
  3419  1039  0873               	movf	___awmod@divisor,w
  3420  103A  0275               	subwf	___awmod@dividend,w
  3421  103B                     u5905:
  3422  103B  1C03               	skipc
  3423  103C  283E               	goto	u5901
  3424  103D  283F               	goto	u5900
  3425  103E                     u5901:
  3426  103E  2845               	goto	l3886
  3427  103F                     u5900:
  3428  103F                     l3884:
  3429  103F  0873               	movf	___awmod@divisor,w
  3430  1040  02F5               	subwf	___awmod@dividend,f
  3431  1041  0874               	movf	___awmod@divisor+1,w
  3432  1042  1C03               	skipc
  3433  1043  03F6               	decf	___awmod@dividend+1,f
  3434  1044  02F6               	subwf	___awmod@dividend+1,f
  3435  1045                     l3886:
  3436  1045  3001               	movlw	1
  3437  1046                     u5915:
  3438  1046  1003               	clrc
  3439  1047  0CF4               	rrf	___awmod@divisor+1,f
  3440  1048  0CF3               	rrf	___awmod@divisor,f
  3441  1049  3EFF               	addlw	-1
  3442  104A  1D03               	skipz
  3443  104B  2846               	goto	u5915
  3444  104C                     l3888:
  3445  104C  3001               	movlw	1
  3446  104D  02A0               	subwf	___awmod@counter,f
  3447  104E  1D03               	btfss	3,2
  3448  104F  2851               	goto	u5921
  3449  1050  2852               	goto	u5920
  3450  1051                     u5921:
  3451  1051  2835               	goto	l3882
  3452  1052                     u5920:
  3453  1052                     l3890:
  3454  1052  0821               	movf	___awmod@sign,w
  3455  1053  1903               	btfsc	3,2
  3456  1054  2856               	goto	u5931
  3457  1055  2857               	goto	u5930
  3458  1056                     u5931:
  3459  1056  285C               	goto	l3894
  3460  1057                     u5930:
  3461  1057                     l3892:
  3462  1057  09F5               	comf	___awmod@dividend,f
  3463  1058  09F6               	comf	___awmod@dividend+1,f
  3464  1059  0AF5               	incf	___awmod@dividend,f
  3465  105A  1903               	skipnz
  3466  105B  0AF6               	incf	___awmod@dividend+1,f
  3467  105C                     l3894:
  3468  105C  0876               	movf	___awmod@dividend+1,w
  3469  105D  00F4               	movwf	?___awmod+1
  3470  105E  0875               	movf	___awmod@dividend,w
  3471  105F  00F3               	movwf	?___awmod
  3472  1060                     l617:
  3473  1060  0008               	return
  3474  1061                     __end_of___awmod:
  3475                           
  3476                           	psect	text4
  3477  08D3                     __ptext4:	
  3478 ;; *************** function ___awdiv *****************
  3479 ;; Defined at:
  3480 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  divisor         2    2[BANK0 ] int 
  3483 ;;  dividend        2    4[BANK0 ] int 
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;  quotient        2    8[BANK0 ] int 
  3486 ;;  sign            1    7[BANK0 ] unsigned char 
  3487 ;;  counter         1    6[BANK0 ] unsigned char 
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  2    2[BANK0 ] int 
  3490 ;; Registers used:
  3491 ;;		wreg, status,2, status,0
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3497 ;;      Params:         0       4       0       0       0
  3498 ;;      Locals:         0       4       0       0       0
  3499 ;;      Temps:          1       0       0       0       0
  3500 ;;      Totals:         1       8       0       0       0
  3501 ;;Total ram usage:        9 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    2
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_scale
  3508 ;;		_sprintf
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           
  3513                           ;psect for function ___awdiv
  3514  08D3                     ___awdiv:
  3515  08D3                     l2470:	
  3516                           ;incstack = 0
  3517                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3518                           
  3519  08D3  1283               	bcf	3,5	;RP0=0, select bank0
  3520  08D4  1303               	bcf	3,6	;RP1=0, select bank0
  3521  08D5  01A7               	clrf	___awdiv@sign
  3522  08D6                     l2472:
  3523  08D6  1FA3               	btfss	___awdiv@divisor+1,7
  3524  08D7  28D9               	goto	u3001
  3525  08D8  28DA               	goto	u3000
  3526  08D9                     u3001:
  3527  08D9  28E1               	goto	l2478
  3528  08DA                     u3000:
  3529  08DA                     l2474:
  3530  08DA  09A2               	comf	___awdiv@divisor,f
  3531  08DB  09A3               	comf	___awdiv@divisor+1,f
  3532  08DC  0AA2               	incf	___awdiv@divisor,f
  3533  08DD  1903               	skipnz
  3534  08DE  0AA3               	incf	___awdiv@divisor+1,f
  3535  08DF                     l2476:
  3536  08DF  01A7               	clrf	___awdiv@sign
  3537  08E0  0AA7               	incf	___awdiv@sign,f
  3538  08E1                     l2478:
  3539  08E1  1FA5               	btfss	___awdiv@dividend+1,7
  3540  08E2  28E4               	goto	u3011
  3541  08E3  28E5               	goto	u3010
  3542  08E4                     u3011:
  3543  08E4  28EE               	goto	l2484
  3544  08E5                     u3010:
  3545  08E5                     l2480:
  3546  08E5  09A4               	comf	___awdiv@dividend,f
  3547  08E6  09A5               	comf	___awdiv@dividend+1,f
  3548  08E7  0AA4               	incf	___awdiv@dividend,f
  3549  08E8  1903               	skipnz
  3550  08E9  0AA5               	incf	___awdiv@dividend+1,f
  3551  08EA                     l2482:
  3552  08EA  3001               	movlw	1
  3553  08EB  00F8               	movwf	??___awdiv
  3554  08EC  0878               	movf	??___awdiv,w
  3555  08ED  06A7               	xorwf	___awdiv@sign,f
  3556  08EE                     l2484:
  3557  08EE  01A8               	clrf	___awdiv@quotient
  3558  08EF  01A9               	clrf	___awdiv@quotient+1
  3559  08F0                     l2486:
  3560  08F0  0822               	movf	___awdiv@divisor,w
  3561  08F1  0423               	iorwf	___awdiv@divisor+1,w
  3562  08F2  1903               	btfsc	3,2
  3563  08F3  28F5               	goto	u3021
  3564  08F4  28F6               	goto	u3020
  3565  08F5                     u3021:
  3566  08F5  292D               	goto	l2506
  3567  08F6                     u3020:
  3568  08F6                     l2488:
  3569  08F6  01A6               	clrf	___awdiv@counter
  3570  08F7  0AA6               	incf	___awdiv@counter,f
  3571  08F8  2904               	goto	l2494
  3572  08F9                     l2490:
  3573  08F9  3001               	movlw	1
  3574  08FA                     u3035:
  3575  08FA  1003               	clrc
  3576  08FB  0DA2               	rlf	___awdiv@divisor,f
  3577  08FC  0DA3               	rlf	___awdiv@divisor+1,f
  3578  08FD  3EFF               	addlw	-1
  3579  08FE  1D03               	skipz
  3580  08FF  28FA               	goto	u3035
  3581  0900                     l2492:
  3582  0900  3001               	movlw	1
  3583  0901  00F8               	movwf	??___awdiv
  3584  0902  0878               	movf	??___awdiv,w
  3585  0903  07A6               	addwf	___awdiv@counter,f
  3586  0904                     l2494:
  3587  0904  1FA3               	btfss	___awdiv@divisor+1,7
  3588  0905  2907               	goto	u3041
  3589  0906  2908               	goto	u3040
  3590  0907                     u3041:
  3591  0907  28F9               	goto	l2490
  3592  0908                     u3040:
  3593  0908                     l2496:
  3594  0908  3001               	movlw	1
  3595  0909                     u3055:
  3596  0909  1003               	clrc
  3597  090A  0DA8               	rlf	___awdiv@quotient,f
  3598  090B  0DA9               	rlf	___awdiv@quotient+1,f
  3599  090C  3EFF               	addlw	-1
  3600  090D  1D03               	skipz
  3601  090E  2909               	goto	u3055
  3602  090F  0823               	movf	___awdiv@divisor+1,w
  3603  0910  0225               	subwf	___awdiv@dividend+1,w
  3604  0911  1D03               	skipz
  3605  0912  2915               	goto	u3065
  3606  0913  0822               	movf	___awdiv@divisor,w
  3607  0914  0224               	subwf	___awdiv@dividend,w
  3608  0915                     u3065:
  3609  0915  1C03               	skipc
  3610  0916  2918               	goto	u3061
  3611  0917  2919               	goto	u3060
  3612  0918                     u3061:
  3613  0918  2920               	goto	l2502
  3614  0919                     u3060:
  3615  0919                     l2498:
  3616  0919  0822               	movf	___awdiv@divisor,w
  3617  091A  02A4               	subwf	___awdiv@dividend,f
  3618  091B  0823               	movf	___awdiv@divisor+1,w
  3619  091C  1C03               	skipc
  3620  091D  03A5               	decf	___awdiv@dividend+1,f
  3621  091E  02A5               	subwf	___awdiv@dividend+1,f
  3622  091F                     l2500:
  3623  091F  1428               	bsf	___awdiv@quotient,0
  3624  0920                     l2502:
  3625  0920  3001               	movlw	1
  3626  0921                     u3075:
  3627  0921  1003               	clrc
  3628  0922  0CA3               	rrf	___awdiv@divisor+1,f
  3629  0923  0CA2               	rrf	___awdiv@divisor,f
  3630  0924  3EFF               	addlw	-1
  3631  0925  1D03               	skipz
  3632  0926  2921               	goto	u3075
  3633  0927                     l2504:
  3634  0927  3001               	movlw	1
  3635  0928  02A6               	subwf	___awdiv@counter,f
  3636  0929  1D03               	btfss	3,2
  3637  092A  292C               	goto	u3081
  3638  092B  292D               	goto	u3080
  3639  092C                     u3081:
  3640  092C  2908               	goto	l2496
  3641  092D                     u3080:
  3642  092D                     l2506:
  3643  092D  0827               	movf	___awdiv@sign,w
  3644  092E  1903               	btfsc	3,2
  3645  092F  2931               	goto	u3091
  3646  0930  2932               	goto	u3090
  3647  0931                     u3091:
  3648  0931  2937               	goto	l2510
  3649  0932                     u3090:
  3650  0932                     l2508:
  3651  0932  09A8               	comf	___awdiv@quotient,f
  3652  0933  09A9               	comf	___awdiv@quotient+1,f
  3653  0934  0AA8               	incf	___awdiv@quotient,f
  3654  0935  1903               	skipnz
  3655  0936  0AA9               	incf	___awdiv@quotient+1,f
  3656  0937                     l2510:
  3657  0937  0829               	movf	___awdiv@quotient+1,w
  3658  0938  00A3               	movwf	?___awdiv+1
  3659  0939  0828               	movf	___awdiv@quotient,w
  3660  093A  00A2               	movwf	?___awdiv
  3661  093B                     l604:
  3662  093B  0008               	return
  3663  093C                     __end_of___awdiv:
  3664                           
  3665                           	psect	text5
  3666  1888                     __ptext5:	
  3667 ;; *************** function _isdigit *****************
  3668 ;; Defined at:
  3669 ;;		line 8 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  c               1    wreg     unsigned char 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  c               1    4[COMMON] unsigned char 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;		None               void
  3676 ;; Registers used:
  3677 ;;		wreg, status,2, status,0
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3683 ;;      Params:         0       0       0       0       0
  3684 ;;      Locals:         2       0       0       0       0
  3685 ;;      Temps:          0       0       0       0       0
  3686 ;;      Totals:         2       0       0       0       0
  3687 ;;Total ram usage:        2 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:    2
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_sprintf
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           
  3698                           ;psect for function _isdigit
  3699  1888                     _isdigit:
  3700                           
  3701                           ;incstack = 0
  3702                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3703                           ;isdigit@c stored from wreg
  3704  1888  00F4               	movwf	isdigit@c
  3705  1889                     l3060:
  3706  1889  01F3               	clrf	_isdigit$1061
  3707  188A                     l3062:
  3708  188A  303A               	movlw	58
  3709  188B  0274               	subwf	isdigit@c,w
  3710  188C  1803               	skipnc
  3711  188D  288F               	goto	u4411
  3712  188E  2890               	goto	u4410
  3713  188F                     u4411:
  3714  188F  2898               	goto	l3068
  3715  1890                     u4410:
  3716  1890                     l3064:
  3717  1890  3030               	movlw	48
  3718  1891  0274               	subwf	isdigit@c,w
  3719  1892  1C03               	skipc
  3720  1893  2895               	goto	u4421
  3721  1894  2896               	goto	u4420
  3722  1895                     u4421:
  3723  1895  2898               	goto	l3068
  3724  1896                     u4420:
  3725  1896                     l3066:
  3726  1896  01F3               	clrf	_isdigit$1061
  3727  1897  0AF3               	incf	_isdigit$1061,f
  3728  1898                     l3068:
  3729  1898  0C73               	rrf	_isdigit$1061,w
  3730  1899                     l938:
  3731  1899  0008               	return
  3732  189A                     __end_of_isdigit:
  3733                           
  3734                           	psect	text6
  3735  1061                     __ptext6:	
  3736 ;; *************** function _fround *****************
  3737 ;; Defined at:
  3738 ;;		line 417 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  prec            1    wreg     unsigned char 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  prec            1   55[BANK0 ] unsigned char 
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  4   36[BANK0 ] unsigned char 
  3745 ;; Registers used:
  3746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3752 ;;      Params:         0       4       0       0       0
  3753 ;;      Locals:         0       9       0       0       0
  3754 ;;      Temps:          0       7       0       0       0
  3755 ;;      Totals:         0      20       0       0       0
  3756 ;;Total ram usage:       20 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; Hardware stack levels required when called:    4
  3759 ;; This function calls:
  3760 ;;		___flmul
  3761 ;;		___lwdiv
  3762 ;;		___lwmod
  3763 ;; This function is called by:
  3764 ;;		_sprintf
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           
  3769                           ;psect for function _fround
  3770  1061                     _fround:
  3771                           
  3772                           ;incstack = 0
  3773                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3774                           ;fround@prec stored from wreg
  3775  1061  1283               	bcf	3,5	;RP0=0, select bank0
  3776  1062  1303               	bcf	3,6	;RP1=0, select bank0
  3777  1063  00D7               	movwf	fround@prec
  3778  1064                     l3948:
  3779                           
  3780                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsigned char prec)
      +                          ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418: {;D:\Microchip\xc8\v2.31\p
      +                          ic\sources\c90\common\doprnt.c: 421:  if(prec>=110)
  3781  1064  306E               	movlw	110
  3782  1065  0257               	subwf	fround@prec,w
  3783  1066  1C03               	skipc
  3784  1067  2869               	goto	u6011
  3785  1068  286A               	goto	u6010
  3786  1069                     u6011:
  3787  1069  2979               	goto	l3956
  3788  106A                     u6010:
  3789  106A                     l3950:
  3790                           
  3791                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[p
      +                          rec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3792  106A  303F               	movlw	63
  3793  106B  00AD               	movwf	___flmul@b+3
  3794  106C  3000               	movlw	0
  3795  106D  00AC               	movwf	___flmul@b+2
  3796  106E  3000               	movlw	0
  3797  106F  00AB               	movwf	___flmul@b+1
  3798  1070  3000               	movlw	0
  3799  1071  00AA               	movwf	___flmul@b
  3800  1072  3064               	movlw	100
  3801  1073  00A0               	movwf	___lwdiv@divisor
  3802  1074  3000               	movlw	0
  3803  1075  00A1               	movwf	___lwdiv@divisor+1
  3804  1076  0857               	movf	fround@prec,w
  3805  1077  00C8               	movwf	??_fround
  3806  1078  01C9               	clrf	??_fround+1
  3807  1079  0848               	movf	??_fround,w
  3808  107A  00A2               	movwf	___lwdiv@dividend
  3809  107B  0849               	movf	??_fround+1,w
  3810  107C  00A3               	movwf	___lwdiv@dividend+1
  3811  107D  160A  158A  223F  160A  118A  	fcall	___lwdiv
  3812  1082  1283               	bcf	3,5	;RP0=0, select bank0
  3813  1083  1303               	bcf	3,6	;RP1=0, select bank0
  3814  1084  0820               	movf	?___lwdiv,w
  3815  1085  00CA               	movwf	??_fround+2
  3816  1086  3001               	movlw	1
  3817  1087                     u6025:
  3818  1087  1003               	clrc
  3819  1088  0DCA               	rlf	??_fround+2,f
  3820  1089  3EFF               	addlw	-1
  3821  108A  1D03               	skipz
  3822  108B  2887               	goto	u6025
  3823  108C  1003               	clrc
  3824  108D  0D4A               	rlf	??_fround+2,w
  3825  108E  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3826  108F  0084               	movwf	4
  3827  1090  120A  158A  200A  160A  118A  	fcall	stringdir
  3828  1095  00CB               	movwf	??_fround+3
  3829  1096  120A  158A  200A  160A  118A  	fcall	stringdir
  3830  109B  00CC               	movwf	??_fround+4
  3831  109C  120A  158A  200A  160A  118A  	fcall	stringdir
  3832  10A1  00CD               	movwf	??_fround+5
  3833  10A2  120A  158A  200A  160A  118A  	fcall	stringdir
  3834  10A7  00CE               	movwf	??_fround+6
  3835  10A8  084E               	movf	??_fround+6,w
  3836  10A9  00B1               	movwf	___flmul@a+3
  3837  10AA  084D               	movf	??_fround+5,w
  3838  10AB  00B0               	movwf	___flmul@a+2
  3839  10AC  084C               	movf	??_fround+4,w
  3840  10AD  00AF               	movwf	___flmul@a+1
  3841  10AE  084B               	movf	??_fround+3,w
  3842  10AF  00AE               	movwf	___flmul@a
  3843  10B0  120A  158A  213C  160A  118A  	fcall	___flmul
  3844  10B5  1283               	bcf	3,5	;RP0=0, select bank0
  3845  10B6  1303               	bcf	3,6	;RP1=0, select bank0
  3846  10B7  082D               	movf	?___flmul+3,w
  3847  10B8  00D6               	movwf	_fround$1237+3
  3848  10B9  082C               	movf	?___flmul+2,w
  3849  10BA  00D5               	movwf	_fround$1237+2
  3850  10BB  082B               	movf	?___flmul+1,w
  3851  10BC  00D4               	movwf	_fround$1237+1
  3852  10BD  082A               	movf	?___flmul,w
  3853  10BE  00D3               	movwf	_fround$1237
  3854                           
  3855                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[p
      +                          rec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3856  10BF  300A               	movlw	10
  3857  10C0  00A0               	movwf	___lwdiv@divisor
  3858  10C1  3000               	movlw	0
  3859  10C2  00A1               	movwf	___lwdiv@divisor+1
  3860  10C3  0857               	movf	fround@prec,w
  3861  10C4  00C8               	movwf	??_fround
  3862  10C5  01C9               	clrf	??_fround+1
  3863  10C6  0848               	movf	??_fround,w
  3864  10C7  00F5               	movwf	___lwmod@dividend
  3865  10C8  0849               	movf	??_fround+1,w
  3866  10C9  00F6               	movwf	___lwmod@dividend+1
  3867  10CA  3064               	movlw	100
  3868  10CB  00F3               	movwf	___lwmod@divisor
  3869  10CC  3000               	movlw	0
  3870  10CD  00F4               	movwf	___lwmod@divisor+1
  3871  10CE  160A  158A  21BF  160A  118A  	fcall	___lwmod
  3872  10D3  0874               	movf	?___lwmod+1,w
  3873  10D4  1283               	bcf	3,5	;RP0=0, select bank0
  3874  10D5  1303               	bcf	3,6	;RP1=0, select bank0
  3875  10D6  00A3               	movwf	___lwdiv@dividend+1
  3876  10D7  0873               	movf	?___lwmod,w
  3877  10D8  00A2               	movwf	___lwdiv@dividend
  3878  10D9  160A  158A  223F  160A  118A  	fcall	___lwdiv
  3879  10DE  1283               	bcf	3,5	;RP0=0, select bank0
  3880  10DF  1303               	bcf	3,6	;RP1=0, select bank0
  3881  10E0  0820               	movf	?___lwdiv,w
  3882  10E1  00CA               	movwf	??_fround+2
  3883  10E2  3001               	movlw	1
  3884  10E3                     u6035:
  3885  10E3  1003               	clrc
  3886  10E4  0DCA               	rlf	??_fround+2,f
  3887  10E5  3EFF               	addlw	-1
  3888  10E6  1D03               	skipz
  3889  10E7  28E3               	goto	u6035
  3890  10E8  1003               	clrc
  3891  10E9  0D4A               	rlf	??_fround+2,w
  3892  10EA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3893  10EB  0084               	movwf	4
  3894  10EC  120A  158A  200A  160A  118A  	fcall	stringdir
  3895  10F1  00CB               	movwf	??_fround+3
  3896  10F2  120A  158A  200A  160A  118A  	fcall	stringdir
  3897  10F7  00CC               	movwf	??_fround+4
  3898  10F8  120A  158A  200A  160A  118A  	fcall	stringdir
  3899  10FD  00CD               	movwf	??_fround+5
  3900  10FE  120A  158A  200A  160A  118A  	fcall	stringdir
  3901  1103  00CE               	movwf	??_fround+6
  3902  1104  084E               	movf	??_fround+6,w
  3903  1105  00AD               	movwf	___flmul@b+3
  3904  1106  084D               	movf	??_fround+5,w
  3905  1107  00AC               	movwf	___flmul@b+2
  3906  1108  084C               	movf	??_fround+4,w
  3907  1109  00AB               	movwf	___flmul@b+1
  3908  110A  084B               	movf	??_fround+3,w
  3909  110B  00AA               	movwf	___flmul@b
  3910  110C  0856               	movf	_fround$1237+3,w
  3911  110D  00B1               	movwf	___flmul@a+3
  3912  110E  0855               	movf	_fround$1237+2,w
  3913  110F  00B0               	movwf	___flmul@a+2
  3914  1110  0854               	movf	_fround$1237+1,w
  3915  1111  00AF               	movwf	___flmul@a+1
  3916  1112  0853               	movf	_fround$1237,w
  3917  1113  00AE               	movwf	___flmul@a
  3918  1114  120A  158A  213C  160A  118A  	fcall	___flmul
  3919  1119  1283               	bcf	3,5	;RP0=0, select bank0
  3920  111A  1303               	bcf	3,6	;RP1=0, select bank0
  3921  111B  082D               	movf	?___flmul+3,w
  3922  111C  00D2               	movwf	_fround$1238+3
  3923  111D  082C               	movf	?___flmul+2,w
  3924  111E  00D1               	movwf	_fround$1238+2
  3925  111F  082B               	movf	?___flmul+1,w
  3926  1120  00D0               	movwf	_fround$1238+1
  3927  1121  082A               	movf	?___flmul,w
  3928  1122  00CF               	movwf	_fround$1238
  3929                           
  3930                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[p
      +                          rec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3931  1123  300A               	movlw	10
  3932  1124  00F3               	movwf	___lwmod@divisor
  3933  1125  3000               	movlw	0
  3934  1126  00F4               	movwf	___lwmod@divisor+1
  3935  1127  0857               	movf	fround@prec,w
  3936  1128  00C8               	movwf	??_fround
  3937  1129  01C9               	clrf	??_fround+1
  3938  112A  0848               	movf	??_fround,w
  3939  112B  00F5               	movwf	___lwmod@dividend
  3940  112C  0849               	movf	??_fround+1,w
  3941  112D  00F6               	movwf	___lwmod@dividend+1
  3942  112E  160A  158A  21BF  160A  118A  	fcall	___lwmod
  3943  1133  0873               	movf	?___lwmod,w
  3944  1134  1283               	bcf	3,5	;RP0=0, select bank0
  3945  1135  1303               	bcf	3,6	;RP1=0, select bank0
  3946  1136  00CA               	movwf	??_fround+2
  3947  1137  3001               	movlw	1
  3948  1138                     u6045:
  3949  1138  1003               	clrc
  3950  1139  0DCA               	rlf	??_fround+2,f
  3951  113A  3EFF               	addlw	-1
  3952  113B  1D03               	skipz
  3953  113C  2938               	goto	u6045
  3954  113D  1003               	clrc
  3955  113E  0D4A               	rlf	??_fround+2,w
  3956  113F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3957  1140  0084               	movwf	4
  3958  1141  120A  158A  200A  160A  118A  	fcall	stringdir
  3959  1146  00CB               	movwf	??_fround+3
  3960  1147  120A  158A  200A  160A  118A  	fcall	stringdir
  3961  114C  00CC               	movwf	??_fround+4
  3962  114D  120A  158A  200A  160A  118A  	fcall	stringdir
  3963  1152  00CD               	movwf	??_fround+5
  3964  1153  120A  158A  200A  160A  118A  	fcall	stringdir
  3965  1158  00CE               	movwf	??_fround+6
  3966  1159  084E               	movf	??_fround+6,w
  3967  115A  00AD               	movwf	___flmul@b+3
  3968  115B  084D               	movf	??_fround+5,w
  3969  115C  00AC               	movwf	___flmul@b+2
  3970  115D  084C               	movf	??_fround+4,w
  3971  115E  00AB               	movwf	___flmul@b+1
  3972  115F  084B               	movf	??_fround+3,w
  3973  1160  00AA               	movwf	___flmul@b
  3974  1161  0852               	movf	_fround$1238+3,w
  3975  1162  00B1               	movwf	___flmul@a+3
  3976  1163  0851               	movf	_fround$1238+2,w
  3977  1164  00B0               	movwf	___flmul@a+2
  3978  1165  0850               	movf	_fround$1238+1,w
  3979  1166  00AF               	movwf	___flmul@a+1
  3980  1167  084F               	movf	_fround$1238,w
  3981  1168  00AE               	movwf	___flmul@a
  3982  1169  120A  158A  213C  160A  118A  	fcall	___flmul
  3983  116E  1283               	bcf	3,5	;RP0=0, select bank0
  3984  116F  1303               	bcf	3,6	;RP1=0, select bank0
  3985  1170  082D               	movf	?___flmul+3,w
  3986  1171  00C7               	movwf	?_fround+3
  3987  1172  082C               	movf	?___flmul+2,w
  3988  1173  00C6               	movwf	?_fround+2
  3989  1174  082B               	movf	?___flmul+1,w
  3990  1175  00C5               	movwf	?_fround+1
  3991  1176  082A               	movf	?___flmul,w
  3992  1177  00C4               	movwf	?_fround
  3993  1178  2A6D               	goto	l348
  3994  1179                     l3956:
  3995  1179  300B               	movlw	11
  3996  117A  0257               	subwf	fround@prec,w
  3997  117B  1C03               	skipc
  3998  117C  297E               	goto	u6051
  3999  117D  297F               	goto	u6050
  4000  117E                     u6051:
  4001  117E  2A2A               	goto	l3962
  4002  117F                     u6050:
  4003  117F                     l3958:
  4004                           
  4005                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[p
      +                          rec/10U+9U] * _npowers_[prec%10U];
  4006  117F  303F               	movlw	63
  4007  1180  00AD               	movwf	___flmul@b+3
  4008  1181  3000               	movlw	0
  4009  1182  00AC               	movwf	___flmul@b+2
  4010  1183  3000               	movlw	0
  4011  1184  00AB               	movwf	___flmul@b+1
  4012  1185  3000               	movlw	0
  4013  1186  00AA               	movwf	___flmul@b
  4014  1187  300A               	movlw	10
  4015  1188  00A0               	movwf	___lwdiv@divisor
  4016  1189  3000               	movlw	0
  4017  118A  00A1               	movwf	___lwdiv@divisor+1
  4018  118B  0857               	movf	fround@prec,w
  4019  118C  00C8               	movwf	??_fround
  4020  118D  01C9               	clrf	??_fround+1
  4021  118E  0848               	movf	??_fround,w
  4022  118F  00A2               	movwf	___lwdiv@dividend
  4023  1190  0849               	movf	??_fround+1,w
  4024  1191  00A3               	movwf	___lwdiv@dividend+1
  4025  1192  160A  158A  223F  160A  118A  	fcall	___lwdiv
  4026  1197  1283               	bcf	3,5	;RP0=0, select bank0
  4027  1198  1303               	bcf	3,6	;RP1=0, select bank0
  4028  1199  0820               	movf	?___lwdiv,w
  4029  119A  00CA               	movwf	??_fround+2
  4030  119B  3001               	movlw	1
  4031  119C                     u6065:
  4032  119C  1003               	clrc
  4033  119D  0DCA               	rlf	??_fround+2,f
  4034  119E  3EFF               	addlw	-1
  4035  119F  1D03               	skipz
  4036  11A0  299C               	goto	u6065
  4037  11A1  1003               	clrc
  4038  11A2  0D4A               	rlf	??_fround+2,w
  4039  11A3  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4040  11A4  0084               	movwf	4
  4041  11A5  120A  158A  200A  160A  118A  	fcall	stringdir
  4042  11AA  00CB               	movwf	??_fround+3
  4043  11AB  120A  158A  200A  160A  118A  	fcall	stringdir
  4044  11B0  00CC               	movwf	??_fround+4
  4045  11B1  120A  158A  200A  160A  118A  	fcall	stringdir
  4046  11B6  00CD               	movwf	??_fround+5
  4047  11B7  120A  158A  200A  160A  118A  	fcall	stringdir
  4048  11BC  00CE               	movwf	??_fround+6
  4049  11BD  084E               	movf	??_fround+6,w
  4050  11BE  00B1               	movwf	___flmul@a+3
  4051  11BF  084D               	movf	??_fround+5,w
  4052  11C0  00B0               	movwf	___flmul@a+2
  4053  11C1  084C               	movf	??_fround+4,w
  4054  11C2  00AF               	movwf	___flmul@a+1
  4055  11C3  084B               	movf	??_fround+3,w
  4056  11C4  00AE               	movwf	___flmul@a
  4057  11C5  120A  158A  213C  160A  118A  	fcall	___flmul
  4058  11CA  1283               	bcf	3,5	;RP0=0, select bank0
  4059  11CB  1303               	bcf	3,6	;RP1=0, select bank0
  4060  11CC  082D               	movf	?___flmul+3,w
  4061  11CD  00D6               	movwf	_fround$1237+3
  4062  11CE  082C               	movf	?___flmul+2,w
  4063  11CF  00D5               	movwf	_fround$1237+2
  4064  11D0  082B               	movf	?___flmul+1,w
  4065  11D1  00D4               	movwf	_fround$1237+1
  4066  11D2  082A               	movf	?___flmul,w
  4067  11D3  00D3               	movwf	_fround$1237
  4068                           
  4069                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[p
      +                          rec/10U+9U] * _npowers_[prec%10U];
  4070  11D4  300A               	movlw	10
  4071  11D5  00F3               	movwf	___lwmod@divisor
  4072  11D6  3000               	movlw	0
  4073  11D7  00F4               	movwf	___lwmod@divisor+1
  4074  11D8  0857               	movf	fround@prec,w
  4075  11D9  00C8               	movwf	??_fround
  4076  11DA  01C9               	clrf	??_fround+1
  4077  11DB  0848               	movf	??_fround,w
  4078  11DC  00F5               	movwf	___lwmod@dividend
  4079  11DD  0849               	movf	??_fround+1,w
  4080  11DE  00F6               	movwf	___lwmod@dividend+1
  4081  11DF  160A  158A  21BF  160A  118A  	fcall	___lwmod
  4082  11E4  0873               	movf	?___lwmod,w
  4083  11E5  1283               	bcf	3,5	;RP0=0, select bank0
  4084  11E6  1303               	bcf	3,6	;RP1=0, select bank0
  4085  11E7  00CA               	movwf	??_fround+2
  4086  11E8  3001               	movlw	1
  4087  11E9                     u6075:
  4088  11E9  1003               	clrc
  4089  11EA  0DCA               	rlf	??_fround+2,f
  4090  11EB  3EFF               	addlw	-1
  4091  11EC  1D03               	skipz
  4092  11ED  29E9               	goto	u6075
  4093  11EE  1003               	clrc
  4094  11EF  0D4A               	rlf	??_fround+2,w
  4095  11F0  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4096  11F1  0084               	movwf	4
  4097  11F2  120A  158A  200A  160A  118A  	fcall	stringdir
  4098  11F7  00CB               	movwf	??_fround+3
  4099  11F8  120A  158A  200A  160A  118A  	fcall	stringdir
  4100  11FD  00CC               	movwf	??_fround+4
  4101  11FE  120A  158A  200A  160A  118A  	fcall	stringdir
  4102  1203  00CD               	movwf	??_fround+5
  4103  1204  120A  158A  200A  160A  118A  	fcall	stringdir
  4104  1209  00CE               	movwf	??_fround+6
  4105  120A  084E               	movf	??_fround+6,w
  4106  120B  00AD               	movwf	___flmul@b+3
  4107  120C  084D               	movf	??_fround+5,w
  4108  120D  00AC               	movwf	___flmul@b+2
  4109  120E  084C               	movf	??_fround+4,w
  4110  120F  00AB               	movwf	___flmul@b+1
  4111  1210  084B               	movf	??_fround+3,w
  4112  1211  00AA               	movwf	___flmul@b
  4113  1212  0856               	movf	_fround$1237+3,w
  4114  1213  00B1               	movwf	___flmul@a+3
  4115  1214  0855               	movf	_fround$1237+2,w
  4116  1215  00B0               	movwf	___flmul@a+2
  4117  1216  0854               	movf	_fround$1237+1,w
  4118  1217  00AF               	movwf	___flmul@a+1
  4119  1218  0853               	movf	_fround$1237,w
  4120  1219  00AE               	movwf	___flmul@a
  4121  121A  120A  158A  213C  160A  118A  	fcall	___flmul
  4122  121F  1283               	bcf	3,5	;RP0=0, select bank0
  4123  1220  1303               	bcf	3,6	;RP1=0, select bank0
  4124  1221  082D               	movf	?___flmul+3,w
  4125  1222  00C7               	movwf	?_fround+3
  4126  1223  082C               	movf	?___flmul+2,w
  4127  1224  00C6               	movwf	?_fround+2
  4128  1225  082B               	movf	?___flmul+1,w
  4129  1226  00C5               	movwf	?_fround+1
  4130  1227  082A               	movf	?___flmul,w
  4131  1228  00C4               	movwf	?_fround
  4132  1229  2A6D               	goto	l348
  4133  122A                     l3962:
  4134                           
  4135                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 * _npowers_[pr
      +                          ec];
  4136  122A  303F               	movlw	63
  4137  122B  00AD               	movwf	___flmul@b+3
  4138  122C  3000               	movlw	0
  4139  122D  00AC               	movwf	___flmul@b+2
  4140  122E  3000               	movlw	0
  4141  122F  00AB               	movwf	___flmul@b+1
  4142  1230  3000               	movlw	0
  4143  1231  00AA               	movwf	___flmul@b
  4144  1232  0857               	movf	fround@prec,w
  4145  1233  00C8               	movwf	??_fround
  4146  1234  3001               	movlw	1
  4147  1235                     u6085:
  4148  1235  1003               	clrc
  4149  1236  0DC8               	rlf	??_fround,f
  4150  1237  3EFF               	addlw	-1
  4151  1238  1D03               	skipz
  4152  1239  2A35               	goto	u6085
  4153  123A  1003               	clrc
  4154  123B  0D48               	rlf	??_fround,w
  4155  123C  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4156  123D  0084               	movwf	4
  4157  123E  120A  158A  200A  160A  118A  	fcall	stringdir
  4158  1243  00C9               	movwf	??_fround+1
  4159  1244  120A  158A  200A  160A  118A  	fcall	stringdir
  4160  1249  00CA               	movwf	??_fround+2
  4161  124A  120A  158A  200A  160A  118A  	fcall	stringdir
  4162  124F  00CB               	movwf	??_fround+3
  4163  1250  120A  158A  200A  160A  118A  	fcall	stringdir
  4164  1255  00CC               	movwf	??_fround+4
  4165  1256  084C               	movf	??_fround+4,w
  4166  1257  00B1               	movwf	___flmul@a+3
  4167  1258  084B               	movf	??_fround+3,w
  4168  1259  00B0               	movwf	___flmul@a+2
  4169  125A  084A               	movf	??_fround+2,w
  4170  125B  00AF               	movwf	___flmul@a+1
  4171  125C  0849               	movf	??_fround+1,w
  4172  125D  00AE               	movwf	___flmul@a
  4173  125E  120A  158A  213C  160A  118A  	fcall	___flmul
  4174  1263  1283               	bcf	3,5	;RP0=0, select bank0
  4175  1264  1303               	bcf	3,6	;RP1=0, select bank0
  4176  1265  082D               	movf	?___flmul+3,w
  4177  1266  00C7               	movwf	?_fround+3
  4178  1267  082C               	movf	?___flmul+2,w
  4179  1268  00C6               	movwf	?_fround+2
  4180  1269  082B               	movf	?___flmul+1,w
  4181  126A  00C5               	movwf	?_fround+1
  4182  126B  082A               	movf	?___flmul,w
  4183  126C  00C4               	movwf	?_fround
  4184  126D                     l348:
  4185  126D  0008               	return
  4186  126E                     __end_of_fround:
  4187                           
  4188                           	psect	text7
  4189  19BF                     __ptext7:	
  4190 ;; *************** function ___lwmod *****************
  4191 ;; Defined at:
  4192 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;  divisor         2    3[COMMON] unsigned int 
  4195 ;;  dividend        2    5[COMMON] unsigned int 
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  counter         1    8[COMMON] unsigned char 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  2    3[COMMON] unsigned int 
  4200 ;; Registers used:
  4201 ;;		wreg, status,2, status,0
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4207 ;;      Params:         4       0       0       0       0
  4208 ;;      Locals:         1       0       0       0       0
  4209 ;;      Temps:          1       0       0       0       0
  4210 ;;      Totals:         6       0       0       0       0
  4211 ;;Total ram usage:        6 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    2
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_fround
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           
  4222                           ;psect for function ___lwmod
  4223  19BF                     ___lwmod:
  4224  19BF                     l2578:	
  4225                           ;incstack = 0
  4226                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4227                           
  4228  19BF  0873               	movf	___lwmod@divisor,w
  4229  19C0  0474               	iorwf	___lwmod@divisor+1,w
  4230  19C1  1903               	btfsc	3,2
  4231  19C2  29C4               	goto	u3261
  4232  19C3  29C5               	goto	u3260
  4233  19C4                     u3261:
  4234  19C4  29F4               	goto	l2596
  4235  19C5                     u3260:
  4236  19C5                     l2580:
  4237  19C5  01F8               	clrf	___lwmod@counter
  4238  19C6  0AF8               	incf	___lwmod@counter,f
  4239  19C7  29D3               	goto	l2586
  4240  19C8                     l2582:
  4241  19C8  3001               	movlw	1
  4242  19C9                     u3275:
  4243  19C9  1003               	clrc
  4244  19CA  0DF3               	rlf	___lwmod@divisor,f
  4245  19CB  0DF4               	rlf	___lwmod@divisor+1,f
  4246  19CC  3EFF               	addlw	-1
  4247  19CD  1D03               	skipz
  4248  19CE  29C9               	goto	u3275
  4249  19CF                     l2584:
  4250  19CF  3001               	movlw	1
  4251  19D0  00F7               	movwf	??___lwmod
  4252  19D1  0877               	movf	??___lwmod,w
  4253  19D2  07F8               	addwf	___lwmod@counter,f
  4254  19D3                     l2586:
  4255  19D3  1FF4               	btfss	___lwmod@divisor+1,7
  4256  19D4  29D6               	goto	u3281
  4257  19D5  29D7               	goto	u3280
  4258  19D6                     u3281:
  4259  19D6  29C8               	goto	l2582
  4260  19D7                     u3280:
  4261  19D7                     l2588:
  4262  19D7  0874               	movf	___lwmod@divisor+1,w
  4263  19D8  0276               	subwf	___lwmod@dividend+1,w
  4264  19D9  1D03               	skipz
  4265  19DA  29DD               	goto	u3295
  4266  19DB  0873               	movf	___lwmod@divisor,w
  4267  19DC  0275               	subwf	___lwmod@dividend,w
  4268  19DD                     u3295:
  4269  19DD  1C03               	skipc
  4270  19DE  29E0               	goto	u3291
  4271  19DF  29E1               	goto	u3290
  4272  19E0                     u3291:
  4273  19E0  29E7               	goto	l2592
  4274  19E1                     u3290:
  4275  19E1                     l2590:
  4276  19E1  0873               	movf	___lwmod@divisor,w
  4277  19E2  02F5               	subwf	___lwmod@dividend,f
  4278  19E3  0874               	movf	___lwmod@divisor+1,w
  4279  19E4  1C03               	skipc
  4280  19E5  03F6               	decf	___lwmod@dividend+1,f
  4281  19E6  02F6               	subwf	___lwmod@dividend+1,f
  4282  19E7                     l2592:
  4283  19E7  3001               	movlw	1
  4284  19E8                     u3305:
  4285  19E8  1003               	clrc
  4286  19E9  0CF4               	rrf	___lwmod@divisor+1,f
  4287  19EA  0CF3               	rrf	___lwmod@divisor,f
  4288  19EB  3EFF               	addlw	-1
  4289  19EC  1D03               	skipz
  4290  19ED  29E8               	goto	u3305
  4291  19EE                     l2594:
  4292  19EE  3001               	movlw	1
  4293  19EF  02F8               	subwf	___lwmod@counter,f
  4294  19F0  1D03               	btfss	3,2
  4295  19F1  29F3               	goto	u3311
  4296  19F2  29F4               	goto	u3310
  4297  19F3                     u3311:
  4298  19F3  29D7               	goto	l2588
  4299  19F4                     u3310:
  4300  19F4                     l2596:
  4301  19F4  0876               	movf	___lwmod@dividend+1,w
  4302  19F5  00F4               	movwf	?___lwmod+1
  4303  19F6  0875               	movf	___lwmod@dividend,w
  4304  19F7  00F3               	movwf	?___lwmod
  4305  19F8                     l767:
  4306  19F8  0008               	return
  4307  19F9                     __end_of___lwmod:
  4308                           
  4309                           	psect	text8
  4310  1A3F                     __ptext8:	
  4311 ;; *************** function ___lwdiv *****************
  4312 ;; Defined at:
  4313 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  divisor         2    0[BANK0 ] unsigned int 
  4316 ;;  dividend        2    2[BANK0 ] unsigned int 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  quotient        2    6[BANK0 ] unsigned int 
  4319 ;;  counter         1    5[BANK0 ] unsigned char 
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  2    0[BANK0 ] unsigned int 
  4322 ;; Registers used:
  4323 ;;		wreg, status,2, status,0
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4329 ;;      Params:         0       4       0       0       0
  4330 ;;      Locals:         0       3       0       0       0
  4331 ;;      Temps:          0       1       0       0       0
  4332 ;;      Totals:         0       8       0       0       0
  4333 ;;Total ram usage:        8 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; Hardware stack levels required when called:    2
  4336 ;; This function calls:
  4337 ;;		Nothing
  4338 ;; This function is called by:
  4339 ;;		_fround
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           
  4344                           ;psect for function ___lwdiv
  4345  1A3F                     ___lwdiv:
  4346  1A3F                     l3898:	
  4347                           ;incstack = 0
  4348                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4349                           
  4350  1A3F  1283               	bcf	3,5	;RP0=0, select bank0
  4351  1A40  1303               	bcf	3,6	;RP1=0, select bank0
  4352  1A41  01A6               	clrf	___lwdiv@quotient
  4353  1A42  01A7               	clrf	___lwdiv@quotient+1
  4354  1A43                     l3900:
  4355  1A43  0820               	movf	___lwdiv@divisor,w
  4356  1A44  0421               	iorwf	___lwdiv@divisor+1,w
  4357  1A45  1903               	btfsc	3,2
  4358  1A46  2A48               	goto	u5941
  4359  1A47  2A49               	goto	u5940
  4360  1A48                     u5941:
  4361  1A48  2A80               	goto	l3920
  4362  1A49                     u5940:
  4363  1A49                     l3902:
  4364  1A49  01A5               	clrf	___lwdiv@counter
  4365  1A4A  0AA5               	incf	___lwdiv@counter,f
  4366  1A4B  2A57               	goto	l3908
  4367  1A4C                     l3904:
  4368  1A4C  3001               	movlw	1
  4369  1A4D                     u5955:
  4370  1A4D  1003               	clrc
  4371  1A4E  0DA0               	rlf	___lwdiv@divisor,f
  4372  1A4F  0DA1               	rlf	___lwdiv@divisor+1,f
  4373  1A50  3EFF               	addlw	-1
  4374  1A51  1D03               	skipz
  4375  1A52  2A4D               	goto	u5955
  4376  1A53                     l3906:
  4377  1A53  3001               	movlw	1
  4378  1A54  00A4               	movwf	??___lwdiv
  4379  1A55  0824               	movf	??___lwdiv,w
  4380  1A56  07A5               	addwf	___lwdiv@counter,f
  4381  1A57                     l3908:
  4382  1A57  1FA1               	btfss	___lwdiv@divisor+1,7
  4383  1A58  2A5A               	goto	u5961
  4384  1A59  2A5B               	goto	u5960
  4385  1A5A                     u5961:
  4386  1A5A  2A4C               	goto	l3904
  4387  1A5B                     u5960:
  4388  1A5B                     l3910:
  4389  1A5B  3001               	movlw	1
  4390  1A5C                     u5975:
  4391  1A5C  1003               	clrc
  4392  1A5D  0DA6               	rlf	___lwdiv@quotient,f
  4393  1A5E  0DA7               	rlf	___lwdiv@quotient+1,f
  4394  1A5F  3EFF               	addlw	-1
  4395  1A60  1D03               	skipz
  4396  1A61  2A5C               	goto	u5975
  4397  1A62  0821               	movf	___lwdiv@divisor+1,w
  4398  1A63  0223               	subwf	___lwdiv@dividend+1,w
  4399  1A64  1D03               	skipz
  4400  1A65  2A68               	goto	u5985
  4401  1A66  0820               	movf	___lwdiv@divisor,w
  4402  1A67  0222               	subwf	___lwdiv@dividend,w
  4403  1A68                     u5985:
  4404  1A68  1C03               	skipc
  4405  1A69  2A6B               	goto	u5981
  4406  1A6A  2A6C               	goto	u5980
  4407  1A6B                     u5981:
  4408  1A6B  2A73               	goto	l3916
  4409  1A6C                     u5980:
  4410  1A6C                     l3912:
  4411  1A6C  0820               	movf	___lwdiv@divisor,w
  4412  1A6D  02A2               	subwf	___lwdiv@dividend,f
  4413  1A6E  0821               	movf	___lwdiv@divisor+1,w
  4414  1A6F  1C03               	skipc
  4415  1A70  03A3               	decf	___lwdiv@dividend+1,f
  4416  1A71  02A3               	subwf	___lwdiv@dividend+1,f
  4417  1A72                     l3914:
  4418  1A72  1426               	bsf	___lwdiv@quotient,0
  4419  1A73                     l3916:
  4420  1A73  3001               	movlw	1
  4421  1A74                     u5995:
  4422  1A74  1003               	clrc
  4423  1A75  0CA1               	rrf	___lwdiv@divisor+1,f
  4424  1A76  0CA0               	rrf	___lwdiv@divisor,f
  4425  1A77  3EFF               	addlw	-1
  4426  1A78  1D03               	skipz
  4427  1A79  2A74               	goto	u5995
  4428  1A7A                     l3918:
  4429  1A7A  3001               	movlw	1
  4430  1A7B  02A5               	subwf	___lwdiv@counter,f
  4431  1A7C  1D03               	btfss	3,2
  4432  1A7D  2A7F               	goto	u6001
  4433  1A7E  2A80               	goto	u6000
  4434  1A7F                     u6001:
  4435  1A7F  2A5B               	goto	l3910
  4436  1A80                     u6000:
  4437  1A80                     l3920:
  4438  1A80  0827               	movf	___lwdiv@quotient+1,w
  4439  1A81  00A1               	movwf	?___lwdiv+1
  4440  1A82  0826               	movf	___lwdiv@quotient,w
  4441  1A83  00A0               	movwf	?___lwdiv
  4442  1A84                     l757:
  4443  1A84  0008               	return
  4444  1A85                     __end_of___lwdiv:
  4445                           
  4446                           	psect	text9
  4447  1E85                     __ptext9:	
  4448 ;; *************** function __tdiv_to_l_ *****************
  4449 ;; Defined at:
  4450 ;;		line 60 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;  f1              4    0[BANK0 ] float 
  4453 ;;  f2              4    4[BANK0 ] float 
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;  quot            4    8[BANK0 ] unsigned long 
  4456 ;;  exp1            1   13[BANK0 ] unsigned char 
  4457 ;;  cntr            1   12[BANK0 ] unsigned char 
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  4    0[BANK0 ] unsigned long 
  4460 ;; Registers used:
  4461 ;;		wreg, status,2, status,0
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4467 ;;      Params:         0       8       0       0       0
  4468 ;;      Locals:         0       6       0       0       0
  4469 ;;      Temps:          4       0       0       0       0
  4470 ;;      Totals:         4      14       0       0       0
  4471 ;;Total ram usage:       18 bytes
  4472 ;; Hardware stack levels used:    1
  4473 ;; Hardware stack levels required when called:    2
  4474 ;; This function calls:
  4475 ;;		Nothing
  4476 ;; This function is called by:
  4477 ;;		_sprintf
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           
  4482                           ;psect for function __tdiv_to_l_
  4483  1E85                     __tdiv_to_l_:
  4484  1E85                     l4006:	
  4485                           ;incstack = 0
  4486                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4487                           
  4488  1E85  1283               	bcf	3,5	;RP0=0, select bank0
  4489  1E86  1303               	bcf	3,6	;RP1=0, select bank0
  4490  1E87  0820               	movf	__tdiv_to_l_@f1,w
  4491  1E88  00F3               	movwf	??__tdiv_to_l_
  4492  1E89  0821               	movf	__tdiv_to_l_@f1+1,w
  4493  1E8A  00F4               	movwf	??__tdiv_to_l_+1
  4494  1E8B  0822               	movf	__tdiv_to_l_@f1+2,w
  4495  1E8C  00F5               	movwf	??__tdiv_to_l_+2
  4496  1E8D  1003               	clrc
  4497  1E8E  0D74               	rlf	??__tdiv_to_l_+1,w
  4498  1E8F  0D75               	rlf	??__tdiv_to_l_+2,w
  4499  1E90  00F6               	movwf	??__tdiv_to_l_+3
  4500  1E91  0876               	movf	??__tdiv_to_l_+3,w
  4501  1E92  00AD               	movwf	__tdiv_to_l_@exp1
  4502  1E93  082D               	movf	__tdiv_to_l_@exp1,w
  4503  1E94  1D03               	btfss	3,2
  4504  1E95  2E97               	goto	u6261
  4505  1E96  2E98               	goto	u6260
  4506  1E97                     u6261:
  4507  1E97  2EA1               	goto	l4012
  4508  1E98                     u6260:
  4509  1E98                     l4008:
  4510  1E98  3000               	movlw	0
  4511  1E99  00A3               	movwf	?__tdiv_to_l_+3
  4512  1E9A  3000               	movlw	0
  4513  1E9B  00A2               	movwf	?__tdiv_to_l_+2
  4514  1E9C  3000               	movlw	0
  4515  1E9D  00A1               	movwf	?__tdiv_to_l_+1
  4516  1E9E  3000               	movlw	0
  4517  1E9F  00A0               	movwf	?__tdiv_to_l_
  4518  1EA0  2F41               	goto	l668
  4519  1EA1                     l4012:
  4520  1EA1  0824               	movf	__tdiv_to_l_@f2,w
  4521  1EA2  00F3               	movwf	??__tdiv_to_l_
  4522  1EA3  0825               	movf	__tdiv_to_l_@f2+1,w
  4523  1EA4  00F4               	movwf	??__tdiv_to_l_+1
  4524  1EA5  0826               	movf	__tdiv_to_l_@f2+2,w
  4525  1EA6  00F5               	movwf	??__tdiv_to_l_+2
  4526  1EA7  1003               	clrc
  4527  1EA8  0D74               	rlf	??__tdiv_to_l_+1,w
  4528  1EA9  0D75               	rlf	??__tdiv_to_l_+2,w
  4529  1EAA  00F6               	movwf	??__tdiv_to_l_+3
  4530  1EAB  0876               	movf	??__tdiv_to_l_+3,w
  4531  1EAC  00AC               	movwf	__tdiv_to_l_@cntr
  4532  1EAD  082C               	movf	__tdiv_to_l_@cntr,w
  4533  1EAE  1D03               	btfss	3,2
  4534  1EAF  2EB1               	goto	u6271
  4535  1EB0  2EB2               	goto	u6270
  4536  1EB1                     u6271:
  4537  1EB1  2EB3               	goto	l669
  4538  1EB2                     u6270:
  4539  1EB2  2E98               	goto	l4008
  4540  1EB3                     l669:
  4541  1EB3  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4542  1EB4                     l4018:
  4543  1EB4  30FF               	movlw	255
  4544  1EB5  05A0               	andwf	__tdiv_to_l_@f1,f
  4545  1EB6  30FF               	movlw	255
  4546  1EB7  05A1               	andwf	__tdiv_to_l_@f1+1,f
  4547  1EB8  3000               	movlw	0
  4548  1EB9  05A2               	andwf	__tdiv_to_l_@f1+2,f
  4549  1EBA                     l4020:
  4550  1EBA  17A5               	bsf	__tdiv_to_l_@f2+1,7
  4551  1EBB  30FF               	movlw	255
  4552  1EBC  05A4               	andwf	__tdiv_to_l_@f2,f
  4553  1EBD  30FF               	movlw	255
  4554  1EBE  05A5               	andwf	__tdiv_to_l_@f2+1,f
  4555  1EBF  3000               	movlw	0
  4556  1EC0  05A6               	andwf	__tdiv_to_l_@f2+2,f
  4557  1EC1  3000               	movlw	0
  4558  1EC2  00AB               	movwf	__tdiv_to_l_@quot+3
  4559  1EC3  3000               	movlw	0
  4560  1EC4  00AA               	movwf	__tdiv_to_l_@quot+2
  4561  1EC5  3000               	movlw	0
  4562  1EC6  00A9               	movwf	__tdiv_to_l_@quot+1
  4563  1EC7  3000               	movlw	0
  4564  1EC8  00A8               	movwf	__tdiv_to_l_@quot
  4565  1EC9                     l4022:
  4566  1EC9  307F               	movlw	127
  4567  1ECA  02AD               	subwf	__tdiv_to_l_@exp1,f
  4568  1ECB                     l4024:
  4569  1ECB  3098               	movlw	152
  4570  1ECC  072C               	addwf	__tdiv_to_l_@cntr,w
  4571  1ECD  00F3               	movwf	??__tdiv_to_l_
  4572  1ECE  0873               	movf	??__tdiv_to_l_,w
  4573  1ECF  02AD               	subwf	__tdiv_to_l_@exp1,f
  4574  1ED0  3018               	movlw	24
  4575  1ED1  00F3               	movwf	??__tdiv_to_l_
  4576  1ED2  0873               	movf	??__tdiv_to_l_,w
  4577  1ED3  00AC               	movwf	__tdiv_to_l_@cntr
  4578  1ED4                     l4026:
  4579  1ED4  3001               	movlw	1
  4580  1ED5  00F3               	movwf	??__tdiv_to_l_
  4581  1ED6                     u6285:
  4582  1ED6  1003               	clrc
  4583  1ED7  0DA8               	rlf	__tdiv_to_l_@quot,f
  4584  1ED8  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  4585  1ED9  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  4586  1EDA  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  4587  1EDB  0BF3               	decfsz	??__tdiv_to_l_,f
  4588  1EDC  2ED6               	goto	u6285
  4589  1EDD                     l4028:
  4590  1EDD  0826               	movf	__tdiv_to_l_@f2+2,w
  4591  1EDE  0222               	subwf	__tdiv_to_l_@f1+2,w
  4592  1EDF  1D03               	skipz
  4593  1EE0  2EE7               	goto	u6295
  4594  1EE1  0825               	movf	__tdiv_to_l_@f2+1,w
  4595  1EE2  0221               	subwf	__tdiv_to_l_@f1+1,w
  4596  1EE3  1D03               	skipz
  4597  1EE4  2EE7               	goto	u6295
  4598  1EE5  0824               	movf	__tdiv_to_l_@f2,w
  4599  1EE6  0220               	subwf	__tdiv_to_l_@f1,w
  4600  1EE7                     u6295:
  4601  1EE7  1C03               	skipc
  4602  1EE8  2EEA               	goto	u6291
  4603  1EE9  2EEB               	goto	u6290
  4604  1EEA                     u6291:
  4605  1EEA  2EF6               	goto	l4034
  4606  1EEB                     u6290:
  4607  1EEB                     l4030:
  4608  1EEB  0824               	movf	__tdiv_to_l_@f2,w
  4609  1EEC  02A0               	subwf	__tdiv_to_l_@f1,f
  4610  1EED  0825               	movf	__tdiv_to_l_@f2+1,w
  4611  1EEE  1C03               	skipc
  4612  1EEF  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  4613  1EF0  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4614  1EF1  0826               	movf	__tdiv_to_l_@f2+2,w
  4615  1EF2  1C03               	skipc
  4616  1EF3  0A26               	incf	__tdiv_to_l_@f2+2,w
  4617  1EF4  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4618  1EF5                     l4032:
  4619  1EF5  1428               	bsf	__tdiv_to_l_@quot,0
  4620  1EF6                     l4034:
  4621  1EF6  3001               	movlw	1
  4622  1EF7                     u6305:
  4623  1EF7  1003               	clrc
  4624  1EF8  0DA0               	rlf	__tdiv_to_l_@f1,f
  4625  1EF9  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  4626  1EFA  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  4627  1EFB  3EFF               	addlw	-1
  4628  1EFC  1D03               	skipz
  4629  1EFD  2EF7               	goto	u6305
  4630  1EFE                     l4036:
  4631  1EFE  3001               	movlw	1
  4632  1EFF  02AC               	subwf	__tdiv_to_l_@cntr,f
  4633  1F00  1D03               	btfss	3,2
  4634  1F01  2F03               	goto	u6311
  4635  1F02  2F04               	goto	u6310
  4636  1F03                     u6311:
  4637  1F03  2ED4               	goto	l4026
  4638  1F04                     u6310:
  4639  1F04                     l672:
  4640  1F04  1FAD               	btfss	__tdiv_to_l_@exp1,7
  4641  1F05  2F07               	goto	u6321
  4642  1F06  2F08               	goto	u6320
  4643  1F07                     u6321:
  4644  1F07  2F22               	goto	l4046
  4645  1F08                     u6320:
  4646  1F08                     l4038:
  4647  1F08  082D               	movf	__tdiv_to_l_@exp1,w
  4648  1F09  3A80               	xorlw	128
  4649  1F0A  3E97               	addlw	151
  4650  1F0B  1803               	skipnc
  4651  1F0C  2F0E               	goto	u6331
  4652  1F0D  2F0F               	goto	u6330
  4653  1F0E                     u6331:
  4654  1F0E  2F10               	goto	l4044
  4655  1F0F                     u6330:
  4656  1F0F  2E98               	goto	l4008
  4657  1F10                     l4044:
  4658  1F10  3001               	movlw	1
  4659  1F11                     u6345:
  4660  1F11  1003               	clrc
  4661  1F12  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  4662  1F13  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  4663  1F14  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  4664  1F15  0CA8               	rrf	__tdiv_to_l_@quot,f
  4665  1F16  3EFF               	addlw	-1
  4666  1F17  1D03               	skipz
  4667  1F18  2F11               	goto	u6345
  4668  1F19  3001               	movlw	1
  4669  1F1A  00F3               	movwf	??__tdiv_to_l_
  4670  1F1B  0873               	movf	??__tdiv_to_l_,w
  4671  1F1C  07AD               	addwf	__tdiv_to_l_@exp1,f
  4672  1F1D  1D03               	btfss	3,2
  4673  1F1E  2F20               	goto	u6351
  4674  1F1F  2F21               	goto	u6350
  4675  1F20                     u6351:
  4676  1F20  2F10               	goto	l4044
  4677  1F21                     u6350:
  4678  1F21  2F39               	goto	l4054
  4679  1F22                     l4046:
  4680  1F22  3018               	movlw	24
  4681  1F23  022D               	subwf	__tdiv_to_l_@exp1,w
  4682  1F24  1C03               	skipc
  4683  1F25  2F27               	goto	u6361
  4684  1F26  2F28               	goto	u6360
  4685  1F27                     u6361:
  4686  1F27  2F34               	goto	l679
  4687  1F28                     u6360:
  4688  1F28  2E98               	goto	l4008
  4689  1F29                     l4052:
  4690  1F29  3001               	movlw	1
  4691  1F2A  00F3               	movwf	??__tdiv_to_l_
  4692  1F2B                     u6375:
  4693  1F2B  1003               	clrc
  4694  1F2C  0DA8               	rlf	__tdiv_to_l_@quot,f
  4695  1F2D  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  4696  1F2E  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  4697  1F2F  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  4698  1F30  0BF3               	decfsz	??__tdiv_to_l_,f
  4699  1F31  2F2B               	goto	u6375
  4700  1F32  3001               	movlw	1
  4701  1F33  02AD               	subwf	__tdiv_to_l_@exp1,f
  4702  1F34                     l679:
  4703  1F34  082D               	movf	__tdiv_to_l_@exp1,w
  4704  1F35  1D03               	btfss	3,2
  4705  1F36  2F38               	goto	u6381
  4706  1F37  2F39               	goto	u6380
  4707  1F38                     u6381:
  4708  1F38  2F29               	goto	l4052
  4709  1F39                     u6380:
  4710  1F39                     l4054:
  4711  1F39  082B               	movf	__tdiv_to_l_@quot+3,w
  4712  1F3A  00A3               	movwf	?__tdiv_to_l_+3
  4713  1F3B  082A               	movf	__tdiv_to_l_@quot+2,w
  4714  1F3C  00A2               	movwf	?__tdiv_to_l_+2
  4715  1F3D  0829               	movf	__tdiv_to_l_@quot+1,w
  4716  1F3E  00A1               	movwf	?__tdiv_to_l_+1
  4717  1F3F  0828               	movf	__tdiv_to_l_@quot,w
  4718  1F40  00A0               	movwf	?__tdiv_to_l_
  4719  1F41                     l668:
  4720  1F41  0008               	return
  4721  1F42                     __end_of__tdiv_to_l_:
  4722                           
  4723                           	psect	text10
  4724  1F42                     __ptext10:	
  4725 ;; *************** function __div_to_l_ *****************
  4726 ;; Defined at:
  4727 ;;		line 60 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  f1              4    0[BANK0 ] unsigned long 
  4730 ;;  f2              4    4[BANK0 ] unsigned long 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  quot            4    8[BANK0 ] unsigned long 
  4733 ;;  exp1            1   13[BANK0 ] unsigned char 
  4734 ;;  cntr            1   12[BANK0 ] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  4    0[BANK0 ] unsigned long 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4744 ;;      Params:         0       8       0       0       0
  4745 ;;      Locals:         0       6       0       0       0
  4746 ;;      Temps:          1       0       0       0       0
  4747 ;;      Totals:         1      14       0       0       0
  4748 ;;Total ram usage:       15 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    2
  4751 ;; This function calls:
  4752 ;;		Nothing
  4753 ;; This function is called by:
  4754 ;;		_sprintf
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           
  4759                           ;psect for function __div_to_l_
  4760  1F42                     __div_to_l_:
  4761  1F42                     l4058:	
  4762                           ;incstack = 0
  4763                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  4764                           
  4765  1F42  1003               	clrc
  4766  1F43  1283               	bcf	3,5	;RP0=0, select bank0
  4767  1F44  1303               	bcf	3,6	;RP1=0, select bank0
  4768  1F45  0D22               	rlf	__div_to_l_@f1+2,w
  4769  1F46  0D23               	rlf	__div_to_l_@f1+3,w
  4770  1F47  00F3               	movwf	??__div_to_l_
  4771  1F48  0873               	movf	??__div_to_l_,w
  4772  1F49  00AD               	movwf	__div_to_l_@exp1
  4773  1F4A  082D               	movf	__div_to_l_@exp1,w
  4774  1F4B  1D03               	btfss	3,2
  4775  1F4C  2F4E               	goto	u6391
  4776  1F4D  2F4F               	goto	u6390
  4777  1F4E                     u6391:
  4778  1F4E  2F58               	goto	l4064
  4779  1F4F                     u6390:
  4780  1F4F                     l4060:
  4781  1F4F  3000               	movlw	0
  4782  1F50  00A3               	movwf	?__div_to_l_+3
  4783  1F51  3000               	movlw	0
  4784  1F52  00A2               	movwf	?__div_to_l_+2
  4785  1F53  3000               	movlw	0
  4786  1F54  00A1               	movwf	?__div_to_l_+1
  4787  1F55  3000               	movlw	0
  4788  1F56  00A0               	movwf	?__div_to_l_
  4789  1F57  2FFF               	goto	l621
  4790  1F58                     l4064:
  4791  1F58  1003               	clrc
  4792  1F59  0D26               	rlf	__div_to_l_@f2+2,w
  4793  1F5A  0D27               	rlf	__div_to_l_@f2+3,w
  4794  1F5B  00F3               	movwf	??__div_to_l_
  4795  1F5C  0873               	movf	??__div_to_l_,w
  4796  1F5D  00AC               	movwf	__div_to_l_@cntr
  4797  1F5E  082C               	movf	__div_to_l_@cntr,w
  4798  1F5F  1D03               	btfss	3,2
  4799  1F60  2F62               	goto	u6401
  4800  1F61  2F63               	goto	u6400
  4801  1F62                     u6401:
  4802  1F62  2F64               	goto	l622
  4803  1F63                     u6400:
  4804  1F63  2F4F               	goto	l4060
  4805  1F64                     l622:
  4806  1F64  17A2               	bsf	__div_to_l_@f1+2,7
  4807  1F65                     l4070:
  4808  1F65  30FF               	movlw	255
  4809  1F66  05A0               	andwf	__div_to_l_@f1,f
  4810  1F67  30FF               	movlw	255
  4811  1F68  05A1               	andwf	__div_to_l_@f1+1,f
  4812  1F69  30FF               	movlw	255
  4813  1F6A  05A2               	andwf	__div_to_l_@f1+2,f
  4814  1F6B  3000               	movlw	0
  4815  1F6C  05A3               	andwf	__div_to_l_@f1+3,f
  4816  1F6D                     l4072:
  4817  1F6D  17A6               	bsf	__div_to_l_@f2+2,7
  4818  1F6E  30FF               	movlw	255
  4819  1F6F  05A4               	andwf	__div_to_l_@f2,f
  4820  1F70  30FF               	movlw	255
  4821  1F71  05A5               	andwf	__div_to_l_@f2+1,f
  4822  1F72  30FF               	movlw	255
  4823  1F73  05A6               	andwf	__div_to_l_@f2+2,f
  4824  1F74  3000               	movlw	0
  4825  1F75  05A7               	andwf	__div_to_l_@f2+3,f
  4826  1F76  3000               	movlw	0
  4827  1F77  00AB               	movwf	__div_to_l_@quot+3
  4828  1F78  3000               	movlw	0
  4829  1F79  00AA               	movwf	__div_to_l_@quot+2
  4830  1F7A  3000               	movlw	0
  4831  1F7B  00A9               	movwf	__div_to_l_@quot+1
  4832  1F7C  3000               	movlw	0
  4833  1F7D  00A8               	movwf	__div_to_l_@quot
  4834  1F7E                     l4074:
  4835  1F7E  307F               	movlw	127
  4836  1F7F  02AD               	subwf	__div_to_l_@exp1,f
  4837  1F80                     l4076:
  4838  1F80  30A0               	movlw	160
  4839  1F81  072C               	addwf	__div_to_l_@cntr,w
  4840  1F82  00F3               	movwf	??__div_to_l_
  4841  1F83  0873               	movf	??__div_to_l_,w
  4842  1F84  02AD               	subwf	__div_to_l_@exp1,f
  4843  1F85  3020               	movlw	32
  4844  1F86  00F3               	movwf	??__div_to_l_
  4845  1F87  0873               	movf	??__div_to_l_,w
  4846  1F88  00AC               	movwf	__div_to_l_@cntr
  4847  1F89                     l4078:
  4848  1F89  3001               	movlw	1
  4849  1F8A  00F3               	movwf	??__div_to_l_
  4850  1F8B                     u6415:
  4851  1F8B  1003               	clrc
  4852  1F8C  0DA8               	rlf	__div_to_l_@quot,f
  4853  1F8D  0DA9               	rlf	__div_to_l_@quot+1,f
  4854  1F8E  0DAA               	rlf	__div_to_l_@quot+2,f
  4855  1F8F  0DAB               	rlf	__div_to_l_@quot+3,f
  4856  1F90  0BF3               	decfsz	??__div_to_l_,f
  4857  1F91  2F8B               	goto	u6415
  4858  1F92                     l4080:
  4859  1F92  0827               	movf	__div_to_l_@f2+3,w
  4860  1F93  0223               	subwf	__div_to_l_@f1+3,w
  4861  1F94  1D03               	skipz
  4862  1F95  2FA0               	goto	u6425
  4863  1F96  0826               	movf	__div_to_l_@f2+2,w
  4864  1F97  0222               	subwf	__div_to_l_@f1+2,w
  4865  1F98  1D03               	skipz
  4866  1F99  2FA0               	goto	u6425
  4867  1F9A  0825               	movf	__div_to_l_@f2+1,w
  4868  1F9B  0221               	subwf	__div_to_l_@f1+1,w
  4869  1F9C  1D03               	skipz
  4870  1F9D  2FA0               	goto	u6425
  4871  1F9E  0824               	movf	__div_to_l_@f2,w
  4872  1F9F  0220               	subwf	__div_to_l_@f1,w
  4873  1FA0                     u6425:
  4874  1FA0  1C03               	skipc
  4875  1FA1  2FA3               	goto	u6421
  4876  1FA2  2FA4               	goto	u6420
  4877  1FA3                     u6421:
  4878  1FA3  2FB3               	goto	l4086
  4879  1FA4                     u6420:
  4880  1FA4                     l4082:
  4881  1FA4  0824               	movf	__div_to_l_@f2,w
  4882  1FA5  02A0               	subwf	__div_to_l_@f1,f
  4883  1FA6  0825               	movf	__div_to_l_@f2+1,w
  4884  1FA7  1C03               	skipc
  4885  1FA8  0F25               	incfsz	__div_to_l_@f2+1,w
  4886  1FA9  02A1               	subwf	__div_to_l_@f1+1,f
  4887  1FAA  0826               	movf	__div_to_l_@f2+2,w
  4888  1FAB  1C03               	skipc
  4889  1FAC  0F26               	incfsz	__div_to_l_@f2+2,w
  4890  1FAD  02A2               	subwf	__div_to_l_@f1+2,f
  4891  1FAE  0827               	movf	__div_to_l_@f2+3,w
  4892  1FAF  1C03               	skipc
  4893  1FB0  0F27               	incfsz	__div_to_l_@f2+3,w
  4894  1FB1  02A3               	subwf	__div_to_l_@f1+3,f
  4895  1FB2                     l4084:
  4896  1FB2  1428               	bsf	__div_to_l_@quot,0
  4897  1FB3                     l4086:
  4898  1FB3  3001               	movlw	1
  4899  1FB4  00F3               	movwf	??__div_to_l_
  4900  1FB5                     u6435:
  4901  1FB5  1003               	clrc
  4902  1FB6  0DA0               	rlf	__div_to_l_@f1,f
  4903  1FB7  0DA1               	rlf	__div_to_l_@f1+1,f
  4904  1FB8  0DA2               	rlf	__div_to_l_@f1+2,f
  4905  1FB9  0DA3               	rlf	__div_to_l_@f1+3,f
  4906  1FBA  0BF3               	decfsz	??__div_to_l_,f
  4907  1FBB  2FB5               	goto	u6435
  4908  1FBC                     l4088:
  4909  1FBC  3001               	movlw	1
  4910  1FBD  02AC               	subwf	__div_to_l_@cntr,f
  4911  1FBE  1D03               	btfss	3,2
  4912  1FBF  2FC1               	goto	u6441
  4913  1FC0  2FC2               	goto	u6440
  4914  1FC1                     u6441:
  4915  1FC1  2F89               	goto	l4078
  4916  1FC2                     u6440:
  4917  1FC2                     l625:
  4918  1FC2  1FAD               	btfss	__div_to_l_@exp1,7
  4919  1FC3  2FC5               	goto	u6451
  4920  1FC4  2FC6               	goto	u6450
  4921  1FC5                     u6451:
  4922  1FC5  2FE0               	goto	l4098
  4923  1FC6                     u6450:
  4924  1FC6                     l4090:
  4925  1FC6  082D               	movf	__div_to_l_@exp1,w
  4926  1FC7  3A80               	xorlw	128
  4927  1FC8  3E9F               	addlw	159
  4928  1FC9  1803               	skipnc
  4929  1FCA  2FCC               	goto	u6461
  4930  1FCB  2FCD               	goto	u6460
  4931  1FCC                     u6461:
  4932  1FCC  2FCE               	goto	l4096
  4933  1FCD                     u6460:
  4934  1FCD  2F4F               	goto	l4060
  4935  1FCE                     l4096:
  4936  1FCE  3001               	movlw	1
  4937  1FCF                     u6475:
  4938  1FCF  1003               	clrc
  4939  1FD0  0CAB               	rrf	__div_to_l_@quot+3,f
  4940  1FD1  0CAA               	rrf	__div_to_l_@quot+2,f
  4941  1FD2  0CA9               	rrf	__div_to_l_@quot+1,f
  4942  1FD3  0CA8               	rrf	__div_to_l_@quot,f
  4943  1FD4  3EFF               	addlw	-1
  4944  1FD5  1D03               	skipz
  4945  1FD6  2FCF               	goto	u6475
  4946  1FD7  3001               	movlw	1
  4947  1FD8  00F3               	movwf	??__div_to_l_
  4948  1FD9  0873               	movf	??__div_to_l_,w
  4949  1FDA  07AD               	addwf	__div_to_l_@exp1,f
  4950  1FDB  1D03               	btfss	3,2
  4951  1FDC  2FDE               	goto	u6481
  4952  1FDD  2FDF               	goto	u6480
  4953  1FDE                     u6481:
  4954  1FDE  2FCE               	goto	l4096
  4955  1FDF                     u6480:
  4956  1FDF  2FF7               	goto	l4106
  4957  1FE0                     l4098:
  4958  1FE0  3020               	movlw	32
  4959  1FE1  022D               	subwf	__div_to_l_@exp1,w
  4960  1FE2  1C03               	skipc
  4961  1FE3  2FE5               	goto	u6491
  4962  1FE4  2FE6               	goto	u6490
  4963  1FE5                     u6491:
  4964  1FE5  2FF2               	goto	l632
  4965  1FE6                     u6490:
  4966  1FE6  2F4F               	goto	l4060
  4967  1FE7                     l4104:
  4968  1FE7  3001               	movlw	1
  4969  1FE8  00F3               	movwf	??__div_to_l_
  4970  1FE9                     u6505:
  4971  1FE9  1003               	clrc
  4972  1FEA  0DA8               	rlf	__div_to_l_@quot,f
  4973  1FEB  0DA9               	rlf	__div_to_l_@quot+1,f
  4974  1FEC  0DAA               	rlf	__div_to_l_@quot+2,f
  4975  1FED  0DAB               	rlf	__div_to_l_@quot+3,f
  4976  1FEE  0BF3               	decfsz	??__div_to_l_,f
  4977  1FEF  2FE9               	goto	u6505
  4978  1FF0  3001               	movlw	1
  4979  1FF1  02AD               	subwf	__div_to_l_@exp1,f
  4980  1FF2                     l632:
  4981  1FF2  082D               	movf	__div_to_l_@exp1,w
  4982  1FF3  1D03               	btfss	3,2
  4983  1FF4  2FF6               	goto	u6511
  4984  1FF5  2FF7               	goto	u6510
  4985  1FF6                     u6511:
  4986  1FF6  2FE7               	goto	l4104
  4987  1FF7                     u6510:
  4988  1FF7                     l4106:
  4989  1FF7  082B               	movf	__div_to_l_@quot+3,w
  4990  1FF8  00A3               	movwf	?__div_to_l_+3
  4991  1FF9  082A               	movf	__div_to_l_@quot+2,w
  4992  1FFA  00A2               	movwf	?__div_to_l_+2
  4993  1FFB  0829               	movf	__div_to_l_@quot+1,w
  4994  1FFC  00A1               	movwf	?__div_to_l_+1
  4995  1FFD  0828               	movf	__div_to_l_@quot,w
  4996  1FFE  00A0               	movwf	?__div_to_l_
  4997  1FFF                     l621:
  4998  1FFF  0008               	return
  4999  2000                     __end_of__div_to_l_:
  5000                           
  5001                           	psect	text11
  5002  18F4                     __ptext11:	
  5003 ;; *************** function ___wmul *****************
  5004 ;; Defined at:
  5005 ;;		line 15 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  multiplier      2    3[COMMON] unsigned int 
  5008 ;;  multiplicand    2    5[COMMON] unsigned int 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;  product         2    7[COMMON] unsigned int 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  2    3[COMMON] unsigned int 
  5013 ;; Registers used:
  5014 ;;		wreg, status,2, status,0
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5020 ;;      Params:         4       0       0       0       0
  5021 ;;      Locals:         2       0       0       0       0
  5022 ;;      Temps:          0       0       0       0       0
  5023 ;;      Totals:         6       0       0       0       0
  5024 ;;Total ram usage:        6 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    2
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_sprintf
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           
  5035                           ;psect for function ___wmul
  5036  18F4                     ___wmul:
  5037  18F4                     l3176:	
  5038                           ;incstack = 0
  5039                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5040                           
  5041  18F4  01F7               	clrf	___wmul@product
  5042  18F5  01F8               	clrf	___wmul@product+1
  5043  18F6                     l3178:
  5044  18F6  1C73               	btfss	___wmul@multiplier,0
  5045  18F7  28F9               	goto	u4691
  5046  18F8  28FA               	goto	u4690
  5047  18F9                     u4691:
  5048  18F9  2900               	goto	l451
  5049  18FA                     u4690:
  5050  18FA                     l3180:
  5051  18FA  0875               	movf	___wmul@multiplicand,w
  5052  18FB  07F7               	addwf	___wmul@product,f
  5053  18FC  1803               	skipnc
  5054  18FD  0AF8               	incf	___wmul@product+1,f
  5055  18FE  0876               	movf	___wmul@multiplicand+1,w
  5056  18FF  07F8               	addwf	___wmul@product+1,f
  5057  1900                     l451:
  5058  1900  3001               	movlw	1
  5059  1901                     u4705:
  5060  1901  1003               	clrc
  5061  1902  0DF5               	rlf	___wmul@multiplicand,f
  5062  1903  0DF6               	rlf	___wmul@multiplicand+1,f
  5063  1904  3EFF               	addlw	-1
  5064  1905  1D03               	skipz
  5065  1906  2901               	goto	u4705
  5066  1907                     l3182:
  5067  1907  3001               	movlw	1
  5068  1908                     u4715:
  5069  1908  1003               	clrc
  5070  1909  0CF4               	rrf	___wmul@multiplier+1,f
  5071  190A  0CF3               	rrf	___wmul@multiplier,f
  5072  190B  3EFF               	addlw	-1
  5073  190C  1D03               	skipz
  5074  190D  2908               	goto	u4715
  5075  190E                     l3184:
  5076  190E  0873               	movf	___wmul@multiplier,w
  5077  190F  0474               	iorwf	___wmul@multiplier+1,w
  5078  1910  1D03               	btfss	3,2
  5079  1911  2913               	goto	u4721
  5080  1912  2914               	goto	u4720
  5081  1913                     u4721:
  5082  1913  28F6               	goto	l3178
  5083  1914                     u4720:
  5084  1914                     l3186:
  5085  1914  0878               	movf	___wmul@product+1,w
  5086  1915  00F4               	movwf	?___wmul+1
  5087  1916  0877               	movf	___wmul@product,w
  5088  1917  00F3               	movwf	?___wmul
  5089  1918                     l453:
  5090  1918  0008               	return
  5091  1919                     __end_of___wmul:
  5092                           
  5093                           	psect	text12
  5094  1B74                     __ptext12:	
  5095 ;; *************** function ___llmod *****************
  5096 ;; Defined at:
  5097 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;  divisor         4    8[BANK0 ] unsigned long 
  5100 ;;  dividend        4   12[BANK0 ] unsigned long 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  counter         1   17[BANK0 ] unsigned char 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  4    8[BANK0 ] unsigned long 
  5105 ;; Registers used:
  5106 ;;		wreg, status,2, status,0
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5112 ;;      Params:         0       8       0       0       0
  5113 ;;      Locals:         0       1       0       0       0
  5114 ;;      Temps:          0       1       0       0       0
  5115 ;;      Totals:         0      10       0       0       0
  5116 ;;Total ram usage:       10 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; Hardware stack levels required when called:    2
  5119 ;; This function calls:
  5120 ;;		Nothing
  5121 ;; This function is called by:
  5122 ;;		_sprintf
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           
  5127                           ;psect for function ___llmod
  5128  1B74                     ___llmod:
  5129  1B74                     l3290:	
  5130                           ;incstack = 0
  5131                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5132                           
  5133  1B74  1283               	bcf	3,5	;RP0=0, select bank0
  5134  1B75  1303               	bcf	3,6	;RP1=0, select bank0
  5135  1B76  082B               	movf	___llmod@divisor+3,w
  5136  1B77  042A               	iorwf	___llmod@divisor+2,w
  5137  1B78  0429               	iorwf	___llmod@divisor+1,w
  5138  1B79  0428               	iorwf	___llmod@divisor,w
  5139  1B7A  1903               	skipnz
  5140  1B7B  2B7D               	goto	u5011
  5141  1B7C  2B7E               	goto	u5010
  5142  1B7D                     u5011:
  5143  1B7D  2BC1               	goto	l3306
  5144  1B7E                     u5010:
  5145  1B7E                     l3292:
  5146  1B7E  01B1               	clrf	___llmod@counter
  5147  1B7F  0AB1               	incf	___llmod@counter,f
  5148  1B80  2B8E               	goto	l3296
  5149  1B81                     l3294:
  5150  1B81  3001               	movlw	1
  5151  1B82  00B0               	movwf	??___llmod
  5152  1B83                     u5025:
  5153  1B83  1003               	clrc
  5154  1B84  0DA8               	rlf	___llmod@divisor,f
  5155  1B85  0DA9               	rlf	___llmod@divisor+1,f
  5156  1B86  0DAA               	rlf	___llmod@divisor+2,f
  5157  1B87  0DAB               	rlf	___llmod@divisor+3,f
  5158  1B88  0BB0               	decfsz	??___llmod,f
  5159  1B89  2B83               	goto	u5025
  5160  1B8A  3001               	movlw	1
  5161  1B8B  00B0               	movwf	??___llmod
  5162  1B8C  0830               	movf	??___llmod,w
  5163  1B8D  07B1               	addwf	___llmod@counter,f
  5164  1B8E                     l3296:
  5165  1B8E  1FAB               	btfss	___llmod@divisor+3,7
  5166  1B8F  2B91               	goto	u5031
  5167  1B90  2B92               	goto	u5030
  5168  1B91                     u5031:
  5169  1B91  2B81               	goto	l3294
  5170  1B92                     u5030:
  5171  1B92                     l3298:
  5172  1B92  082B               	movf	___llmod@divisor+3,w
  5173  1B93  022F               	subwf	___llmod@dividend+3,w
  5174  1B94  1D03               	skipz
  5175  1B95  2BA0               	goto	u5045
  5176  1B96  082A               	movf	___llmod@divisor+2,w
  5177  1B97  022E               	subwf	___llmod@dividend+2,w
  5178  1B98  1D03               	skipz
  5179  1B99  2BA0               	goto	u5045
  5180  1B9A  0829               	movf	___llmod@divisor+1,w
  5181  1B9B  022D               	subwf	___llmod@dividend+1,w
  5182  1B9C  1D03               	skipz
  5183  1B9D  2BA0               	goto	u5045
  5184  1B9E  0828               	movf	___llmod@divisor,w
  5185  1B9F  022C               	subwf	___llmod@dividend,w
  5186  1BA0                     u5045:
  5187  1BA0  1C03               	skipc
  5188  1BA1  2BA3               	goto	u5041
  5189  1BA2  2BA4               	goto	u5040
  5190  1BA3                     u5041:
  5191  1BA3  2BB2               	goto	l3302
  5192  1BA4                     u5040:
  5193  1BA4                     l3300:
  5194  1BA4  0828               	movf	___llmod@divisor,w
  5195  1BA5  02AC               	subwf	___llmod@dividend,f
  5196  1BA6  0829               	movf	___llmod@divisor+1,w
  5197  1BA7  1C03               	skipc
  5198  1BA8  0F29               	incfsz	___llmod@divisor+1,w
  5199  1BA9  02AD               	subwf	___llmod@dividend+1,f
  5200  1BAA  082A               	movf	___llmod@divisor+2,w
  5201  1BAB  1C03               	skipc
  5202  1BAC  0F2A               	incfsz	___llmod@divisor+2,w
  5203  1BAD  02AE               	subwf	___llmod@dividend+2,f
  5204  1BAE  082B               	movf	___llmod@divisor+3,w
  5205  1BAF  1C03               	skipc
  5206  1BB0  0F2B               	incfsz	___llmod@divisor+3,w
  5207  1BB1  02AF               	subwf	___llmod@dividend+3,f
  5208  1BB2                     l3302:
  5209  1BB2  3001               	movlw	1
  5210  1BB3                     u5055:
  5211  1BB3  1003               	clrc
  5212  1BB4  0CAB               	rrf	___llmod@divisor+3,f
  5213  1BB5  0CAA               	rrf	___llmod@divisor+2,f
  5214  1BB6  0CA9               	rrf	___llmod@divisor+1,f
  5215  1BB7  0CA8               	rrf	___llmod@divisor,f
  5216  1BB8  3EFF               	addlw	-1
  5217  1BB9  1D03               	skipz
  5218  1BBA  2BB3               	goto	u5055
  5219  1BBB                     l3304:
  5220  1BBB  3001               	movlw	1
  5221  1BBC  02B1               	subwf	___llmod@counter,f
  5222  1BBD  1D03               	btfss	3,2
  5223  1BBE  2BC0               	goto	u5061
  5224  1BBF  2BC1               	goto	u5060
  5225  1BC0                     u5061:
  5226  1BC0  2B92               	goto	l3298
  5227  1BC1                     u5060:
  5228  1BC1                     l3306:
  5229  1BC1  082F               	movf	___llmod@dividend+3,w
  5230  1BC2  00AB               	movwf	?___llmod+3
  5231  1BC3  082E               	movf	___llmod@dividend+2,w
  5232  1BC4  00AA               	movwf	?___llmod+2
  5233  1BC5  082D               	movf	___llmod@dividend+1,w
  5234  1BC6  00A9               	movwf	?___llmod+1
  5235  1BC7  082C               	movf	___llmod@dividend,w
  5236  1BC8  00A8               	movwf	?___llmod
  5237  1BC9                     l707:
  5238  1BC9  0008               	return
  5239  1BCA                     __end_of___llmod:
  5240                           
  5241                           	psect	text13
  5242  1C21                     __ptext13:	
  5243 ;; *************** function ___lldiv *****************
  5244 ;; Defined at:
  5245 ;;		line 5 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;  divisor         4    0[BANK0 ] unsigned long 
  5248 ;;  dividend        4    4[BANK0 ] unsigned long 
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  quotient        4    4[COMMON] unsigned long 
  5251 ;;  counter         1    8[COMMON] unsigned char 
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  4    0[BANK0 ] unsigned long 
  5254 ;; Registers used:
  5255 ;;		wreg, status,2, status,0
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5261 ;;      Params:         0       8       0       0       0
  5262 ;;      Locals:         5       0       0       0       0
  5263 ;;      Temps:          1       0       0       0       0
  5264 ;;      Totals:         6       8       0       0       0
  5265 ;;Total ram usage:       14 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; Hardware stack levels required when called:    2
  5268 ;; This function calls:
  5269 ;;		Nothing
  5270 ;; This function is called by:
  5271 ;;		_sprintf
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           
  5276                           ;psect for function ___lldiv
  5277  1C21                     ___lldiv:
  5278  1C21                     l4110:	
  5279                           ;incstack = 0
  5280                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5281                           
  5282  1C21  3000               	movlw	0
  5283  1C22  00F7               	movwf	___lldiv@quotient+3
  5284  1C23  3000               	movlw	0
  5285  1C24  00F6               	movwf	___lldiv@quotient+2
  5286  1C25  3000               	movlw	0
  5287  1C26  00F5               	movwf	___lldiv@quotient+1
  5288  1C27  3000               	movlw	0
  5289  1C28  00F4               	movwf	___lldiv@quotient
  5290  1C29  1283               	bcf	3,5	;RP0=0, select bank0
  5291  1C2A  1303               	bcf	3,6	;RP1=0, select bank0
  5292  1C2B  0823               	movf	___lldiv@divisor+3,w
  5293  1C2C  0422               	iorwf	___lldiv@divisor+2,w
  5294  1C2D  0421               	iorwf	___lldiv@divisor+1,w
  5295  1C2E  0420               	iorwf	___lldiv@divisor,w
  5296  1C2F  1903               	skipnz
  5297  1C30  2C32               	goto	u6521
  5298  1C31  2C33               	goto	u6520
  5299  1C32                     u6521:
  5300  1C32  2C80               	goto	l4130
  5301  1C33                     u6520:
  5302  1C33                     l4112:
  5303  1C33  01F8               	clrf	___lldiv@counter
  5304  1C34  0AF8               	incf	___lldiv@counter,f
  5305  1C35  2C43               	goto	l4116
  5306  1C36                     l4114:
  5307  1C36  3001               	movlw	1
  5308  1C37  00F3               	movwf	??___lldiv
  5309  1C38                     u6535:
  5310  1C38  1003               	clrc
  5311  1C39  0DA0               	rlf	___lldiv@divisor,f
  5312  1C3A  0DA1               	rlf	___lldiv@divisor+1,f
  5313  1C3B  0DA2               	rlf	___lldiv@divisor+2,f
  5314  1C3C  0DA3               	rlf	___lldiv@divisor+3,f
  5315  1C3D  0BF3               	decfsz	??___lldiv,f
  5316  1C3E  2C38               	goto	u6535
  5317  1C3F  3001               	movlw	1
  5318  1C40  00F3               	movwf	??___lldiv
  5319  1C41  0873               	movf	??___lldiv,w
  5320  1C42  07F8               	addwf	___lldiv@counter,f
  5321  1C43                     l4116:
  5322  1C43  1FA3               	btfss	___lldiv@divisor+3,7
  5323  1C44  2C46               	goto	u6541
  5324  1C45  2C47               	goto	u6540
  5325  1C46                     u6541:
  5326  1C46  2C36               	goto	l4114
  5327  1C47                     u6540:
  5328  1C47                     l4118:
  5329  1C47  3001               	movlw	1
  5330  1C48  00F3               	movwf	??___lldiv
  5331  1C49                     u6555:
  5332  1C49  1003               	clrc
  5333  1C4A  0DF4               	rlf	___lldiv@quotient,f
  5334  1C4B  0DF5               	rlf	___lldiv@quotient+1,f
  5335  1C4C  0DF6               	rlf	___lldiv@quotient+2,f
  5336  1C4D  0DF7               	rlf	___lldiv@quotient+3,f
  5337  1C4E  0BF3               	decfsz	??___lldiv,f
  5338  1C4F  2C49               	goto	u6555
  5339  1C50                     l4120:
  5340  1C50  0823               	movf	___lldiv@divisor+3,w
  5341  1C51  0227               	subwf	___lldiv@dividend+3,w
  5342  1C52  1D03               	skipz
  5343  1C53  2C5E               	goto	u6565
  5344  1C54  0822               	movf	___lldiv@divisor+2,w
  5345  1C55  0226               	subwf	___lldiv@dividend+2,w
  5346  1C56  1D03               	skipz
  5347  1C57  2C5E               	goto	u6565
  5348  1C58  0821               	movf	___lldiv@divisor+1,w
  5349  1C59  0225               	subwf	___lldiv@dividend+1,w
  5350  1C5A  1D03               	skipz
  5351  1C5B  2C5E               	goto	u6565
  5352  1C5C  0820               	movf	___lldiv@divisor,w
  5353  1C5D  0224               	subwf	___lldiv@dividend,w
  5354  1C5E                     u6565:
  5355  1C5E  1C03               	skipc
  5356  1C5F  2C61               	goto	u6561
  5357  1C60  2C62               	goto	u6560
  5358  1C61                     u6561:
  5359  1C61  2C71               	goto	l4126
  5360  1C62                     u6560:
  5361  1C62                     l4122:
  5362  1C62  0820               	movf	___lldiv@divisor,w
  5363  1C63  02A4               	subwf	___lldiv@dividend,f
  5364  1C64  0821               	movf	___lldiv@divisor+1,w
  5365  1C65  1C03               	skipc
  5366  1C66  0F21               	incfsz	___lldiv@divisor+1,w
  5367  1C67  02A5               	subwf	___lldiv@dividend+1,f
  5368  1C68  0822               	movf	___lldiv@divisor+2,w
  5369  1C69  1C03               	skipc
  5370  1C6A  0F22               	incfsz	___lldiv@divisor+2,w
  5371  1C6B  02A6               	subwf	___lldiv@dividend+2,f
  5372  1C6C  0823               	movf	___lldiv@divisor+3,w
  5373  1C6D  1C03               	skipc
  5374  1C6E  0F23               	incfsz	___lldiv@divisor+3,w
  5375  1C6F  02A7               	subwf	___lldiv@dividend+3,f
  5376  1C70                     l4124:
  5377  1C70  1474               	bsf	___lldiv@quotient,0
  5378  1C71                     l4126:
  5379  1C71  3001               	movlw	1
  5380  1C72                     u6575:
  5381  1C72  1003               	clrc
  5382  1C73  0CA3               	rrf	___lldiv@divisor+3,f
  5383  1C74  0CA2               	rrf	___lldiv@divisor+2,f
  5384  1C75  0CA1               	rrf	___lldiv@divisor+1,f
  5385  1C76  0CA0               	rrf	___lldiv@divisor,f
  5386  1C77  3EFF               	addlw	-1
  5387  1C78  1D03               	skipz
  5388  1C79  2C72               	goto	u6575
  5389  1C7A                     l4128:
  5390  1C7A  3001               	movlw	1
  5391  1C7B  02F8               	subwf	___lldiv@counter,f
  5392  1C7C  1D03               	btfss	3,2
  5393  1C7D  2C7F               	goto	u6581
  5394  1C7E  2C80               	goto	u6580
  5395  1C7F                     u6581:
  5396  1C7F  2C47               	goto	l4118
  5397  1C80                     u6580:
  5398  1C80                     l4130:
  5399  1C80  0877               	movf	___lldiv@quotient+3,w
  5400  1C81  00A3               	movwf	?___lldiv+3
  5401  1C82  0876               	movf	___lldiv@quotient+2,w
  5402  1C83  00A2               	movwf	?___lldiv+2
  5403  1C84  0875               	movf	___lldiv@quotient+1,w
  5404  1C85  00A1               	movwf	?___lldiv+1
  5405  1C86  0874               	movf	___lldiv@quotient,w
  5406  1C87  00A0               	movwf	?___lldiv
  5407  1C88                     l487:
  5408  1C88  0008               	return
  5409  1C89                     __end_of___lldiv:
  5410                           
  5411                           	psect	text14
  5412  0777                     __ptext14:	
  5413 ;; *************** function ___fltol *****************
  5414 ;; Defined at:
  5415 ;;		line 43 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  f1              4   55[BANK0 ] unsigned long 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  exp1            1   65[BANK0 ] unsigned char 
  5420 ;;  sign1           1   64[BANK0 ] unsigned char 
  5421 ;; Return value:  Size  Location     Type
  5422 ;;                  4   55[BANK0 ] long 
  5423 ;; Registers used:
  5424 ;;		wreg, status,2, status,0
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5430 ;;      Params:         0       4       0       0       0
  5431 ;;      Locals:         0       2       0       0       0
  5432 ;;      Temps:          0       5       0       0       0
  5433 ;;      Totals:         0      11       0       0       0
  5434 ;;Total ram usage:       11 bytes
  5435 ;; Hardware stack levels used:    1
  5436 ;; Hardware stack levels required when called:    2
  5437 ;; This function calls:
  5438 ;;		Nothing
  5439 ;; This function is called by:
  5440 ;;		_sprintf
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           
  5445                           ;psect for function ___fltol
  5446  0777                     ___fltol:
  5447  0777                     l3254:	
  5448                           ;incstack = 0
  5449                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5450                           
  5451  0777  1003               	clrc
  5452  0778  1283               	bcf	3,5	;RP0=0, select bank0
  5453  0779  1303               	bcf	3,6	;RP1=0, select bank0
  5454  077A  0D59               	rlf	___fltol@f1+2,w
  5455  077B  0D5A               	rlf	___fltol@f1+3,w
  5456  077C  00DB               	movwf	??___fltol
  5457  077D  085B               	movf	??___fltol,w
  5458  077E  00E1               	movwf	___fltol@exp1
  5459  077F  0861               	movf	___fltol@exp1,w
  5460  0780  1D03               	btfss	3,2
  5461  0781  2F83               	goto	u4911
  5462  0782  2F84               	goto	u4910
  5463  0783                     u4911:
  5464  0783  2F8D               	goto	l3260
  5465  0784                     u4910:
  5466  0784                     l3256:
  5467  0784  3000               	movlw	0
  5468  0785  00DA               	movwf	?___fltol+3
  5469  0786  3000               	movlw	0
  5470  0787  00D9               	movwf	?___fltol+2
  5471  0788  3000               	movlw	0
  5472  0789  00D8               	movwf	?___fltol+1
  5473  078A  3000               	movlw	0
  5474  078B  00D7               	movwf	?___fltol
  5475  078C  2FF2               	goto	l654
  5476  078D                     l3260:
  5477  078D  0857               	movf	___fltol@f1,w
  5478  078E  00DB               	movwf	??___fltol
  5479  078F  0858               	movf	___fltol@f1+1,w
  5480  0790  00DC               	movwf	??___fltol+1
  5481  0791  0859               	movf	___fltol@f1+2,w
  5482  0792  00DD               	movwf	??___fltol+2
  5483  0793  085A               	movf	___fltol@f1+3,w
  5484  0794  00DE               	movwf	??___fltol+3
  5485  0795  301F               	movlw	31
  5486  0796                     u4925:
  5487  0796  1003               	clrc
  5488  0797  0CDE               	rrf	??___fltol+3,f
  5489  0798  0CDD               	rrf	??___fltol+2,f
  5490  0799  0CDC               	rrf	??___fltol+1,f
  5491  079A  0CDB               	rrf	??___fltol,f
  5492  079B                     u4920:
  5493  079B  3EFF               	addlw	-1
  5494  079C  1D03               	skipz
  5495  079D  2F96               	goto	u4925
  5496  079E  085B               	movf	??___fltol,w
  5497  079F  00DF               	movwf	??___fltol+4
  5498  07A0  085F               	movf	??___fltol+4,w
  5499  07A1  00E0               	movwf	___fltol@sign1
  5500  07A2                     l3262:
  5501  07A2  17D9               	bsf	___fltol@f1+2,7
  5502  07A3                     l3264:
  5503  07A3  30FF               	movlw	255
  5504  07A4  05D7               	andwf	___fltol@f1,f
  5505  07A5  30FF               	movlw	255
  5506  07A6  05D8               	andwf	___fltol@f1+1,f
  5507  07A7  30FF               	movlw	255
  5508  07A8  05D9               	andwf	___fltol@f1+2,f
  5509  07A9  3000               	movlw	0
  5510  07AA  05DA               	andwf	___fltol@f1+3,f
  5511  07AB                     l3266:
  5512  07AB  3096               	movlw	150
  5513  07AC  02E1               	subwf	___fltol@exp1,f
  5514  07AD                     l3268:
  5515  07AD  1FE1               	btfss	___fltol@exp1,7
  5516  07AE  2FB0               	goto	u4931
  5517  07AF  2FB1               	goto	u4930
  5518  07B0                     u4931:
  5519  07B0  2FCB               	goto	l3278
  5520  07B1                     u4930:
  5521  07B1                     l3270:
  5522  07B1  0861               	movf	___fltol@exp1,w
  5523  07B2  3A80               	xorlw	128
  5524  07B3  3E97               	addlw	151
  5525  07B4  1803               	skipnc
  5526  07B5  2FB7               	goto	u4941
  5527  07B6  2FB8               	goto	u4940
  5528  07B7                     u4941:
  5529  07B7  2FB9               	goto	l3276
  5530  07B8                     u4940:
  5531  07B8  2F84               	goto	l3256
  5532  07B9                     l3276:
  5533  07B9  3001               	movlw	1
  5534  07BA                     u4955:
  5535  07BA  1003               	clrc
  5536  07BB  0CDA               	rrf	___fltol@f1+3,f
  5537  07BC  0CD9               	rrf	___fltol@f1+2,f
  5538  07BD  0CD8               	rrf	___fltol@f1+1,f
  5539  07BE  0CD7               	rrf	___fltol@f1,f
  5540  07BF  3EFF               	addlw	-1
  5541  07C0  1D03               	skipz
  5542  07C1  2FBA               	goto	u4955
  5543  07C2  3001               	movlw	1
  5544  07C3  00DB               	movwf	??___fltol
  5545  07C4  085B               	movf	??___fltol,w
  5546  07C5  07E1               	addwf	___fltol@exp1,f
  5547  07C6  1D03               	btfss	3,2
  5548  07C7  2FC9               	goto	u4961
  5549  07C8  2FCA               	goto	u4960
  5550  07C9                     u4961:
  5551  07C9  2FB9               	goto	l3276
  5552  07CA                     u4960:
  5553  07CA  2FE2               	goto	l3286
  5554  07CB                     l3278:
  5555  07CB  3020               	movlw	32
  5556  07CC  0261               	subwf	___fltol@exp1,w
  5557  07CD  1C03               	skipc
  5558  07CE  2FD0               	goto	u4971
  5559  07CF  2FD1               	goto	u4970
  5560  07D0                     u4971:
  5561  07D0  2FDD               	goto	l661
  5562  07D1                     u4970:
  5563  07D1  2F84               	goto	l3256
  5564  07D2                     l3284:
  5565  07D2  3001               	movlw	1
  5566  07D3  00DB               	movwf	??___fltol
  5567  07D4                     u4985:
  5568  07D4  1003               	clrc
  5569  07D5  0DD7               	rlf	___fltol@f1,f
  5570  07D6  0DD8               	rlf	___fltol@f1+1,f
  5571  07D7  0DD9               	rlf	___fltol@f1+2,f
  5572  07D8  0DDA               	rlf	___fltol@f1+3,f
  5573  07D9  0BDB               	decfsz	??___fltol,f
  5574  07DA  2FD4               	goto	u4985
  5575  07DB  3001               	movlw	1
  5576  07DC  02E1               	subwf	___fltol@exp1,f
  5577  07DD                     l661:
  5578  07DD  0861               	movf	___fltol@exp1,w
  5579  07DE  1D03               	btfss	3,2
  5580  07DF  2FE1               	goto	u4991
  5581  07E0  2FE2               	goto	u4990
  5582  07E1                     u4991:
  5583  07E1  2FD2               	goto	l3284
  5584  07E2                     u4990:
  5585  07E2                     l3286:
  5586  07E2  0860               	movf	___fltol@sign1,w
  5587  07E3  1903               	btfsc	3,2
  5588  07E4  2FE6               	goto	u5001
  5589  07E5  2FE7               	goto	u5000
  5590  07E6                     u5001:
  5591  07E6  2FF2               	goto	l664
  5592  07E7                     u5000:
  5593  07E7                     l3288:
  5594  07E7  09D7               	comf	___fltol@f1,f
  5595  07E8  09D8               	comf	___fltol@f1+1,f
  5596  07E9  09D9               	comf	___fltol@f1+2,f
  5597  07EA  09DA               	comf	___fltol@f1+3,f
  5598  07EB  0AD7               	incf	___fltol@f1,f
  5599  07EC  1903               	skipnz
  5600  07ED  0AD8               	incf	___fltol@f1+1,f
  5601  07EE  1903               	skipnz
  5602  07EF  0AD9               	incf	___fltol@f1+2,f
  5603  07F0  1903               	skipnz
  5604  07F1  0ADA               	incf	___fltol@f1+3,f
  5605  07F2                     l664:
  5606  07F2                     l654:
  5607  07F2  0008               	return
  5608  07F3                     __end_of___fltol:
  5609                           
  5610                           	psect	text15
  5611  1B24                     __ptext15:	
  5612 ;; *************** function ___flsub *****************
  5613 ;; Defined at:
  5614 ;;		line 242 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;  a               4    0[BANK1 ] long 
  5617 ;;  b               4    4[BANK1 ] long 
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;		None
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  4    0[BANK1 ] long 
  5622 ;; Registers used:
  5623 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5629 ;;      Params:         0       0       8       0       0
  5630 ;;      Locals:         0       0       0       0       0
  5631 ;;      Temps:          0       0       0       0       0
  5632 ;;      Totals:         0       0       8       0       0
  5633 ;;Total ram usage:        8 bytes
  5634 ;; Hardware stack levels used:    1
  5635 ;; Hardware stack levels required when called:    3
  5636 ;; This function calls:
  5637 ;;		___fladd
  5638 ;; This function is called by:
  5639 ;;		_sprintf
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           
  5644                           ;psect for function ___flsub
  5645  1B24                     ___flsub:
  5646  1B24                     l3310:	
  5647                           ;incstack = 0
  5648                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5649                           
  5650  1B24  3080               	movlw	128
  5651  1B25  1683               	bsf	3,5	;RP0=1, select bank1
  5652  1B26  1303               	bcf	3,6	;RP1=0, select bank1
  5653  1B27  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5654  1B28                     l3312:
  5655  1B28  0827               	movf	(___flsub@b+3)^(0+128),w
  5656  1B29  1283               	bcf	3,5	;RP0=0, select bank0
  5657  1B2A  1303               	bcf	3,6	;RP1=0, select bank0
  5658  1B2B  00DB               	movwf	___fladd@b+3
  5659  1B2C  1683               	bsf	3,5	;RP0=1, select bank1
  5660  1B2D  1303               	bcf	3,6	;RP1=0, select bank1
  5661  1B2E  0826               	movf	(___flsub@b+2)^(0+128),w
  5662  1B2F  1283               	bcf	3,5	;RP0=0, select bank0
  5663  1B30  1303               	bcf	3,6	;RP1=0, select bank0
  5664  1B31  00DA               	movwf	___fladd@b+2
  5665  1B32  1683               	bsf	3,5	;RP0=1, select bank1
  5666  1B33  1303               	bcf	3,6	;RP1=0, select bank1
  5667  1B34  0825               	movf	(___flsub@b+1)^(0+128),w
  5668  1B35  1283               	bcf	3,5	;RP0=0, select bank0
  5669  1B36  1303               	bcf	3,6	;RP1=0, select bank0
  5670  1B37  00D9               	movwf	___fladd@b+1
  5671  1B38  1683               	bsf	3,5	;RP0=1, select bank1
  5672  1B39  1303               	bcf	3,6	;RP1=0, select bank1
  5673  1B3A  0824               	movf	___flsub@b^(0+128),w
  5674  1B3B  1283               	bcf	3,5	;RP0=0, select bank0
  5675  1B3C  1303               	bcf	3,6	;RP1=0, select bank0
  5676  1B3D  00D8               	movwf	___fladd@b
  5677  1B3E  1683               	bsf	3,5	;RP0=1, select bank1
  5678  1B3F  1303               	bcf	3,6	;RP1=0, select bank1
  5679  1B40  0823               	movf	(___flsub@a+3)^(0+128),w
  5680  1B41  1283               	bcf	3,5	;RP0=0, select bank0
  5681  1B42  1303               	bcf	3,6	;RP1=0, select bank0
  5682  1B43  00DF               	movwf	___fladd@a+3
  5683  1B44  1683               	bsf	3,5	;RP0=1, select bank1
  5684  1B45  1303               	bcf	3,6	;RP1=0, select bank1
  5685  1B46  0822               	movf	(___flsub@a+2)^(0+128),w
  5686  1B47  1283               	bcf	3,5	;RP0=0, select bank0
  5687  1B48  1303               	bcf	3,6	;RP1=0, select bank0
  5688  1B49  00DE               	movwf	___fladd@a+2
  5689  1B4A  1683               	bsf	3,5	;RP0=1, select bank1
  5690  1B4B  1303               	bcf	3,6	;RP1=0, select bank1
  5691  1B4C  0821               	movf	(___flsub@a+1)^(0+128),w
  5692  1B4D  1283               	bcf	3,5	;RP0=0, select bank0
  5693  1B4E  1303               	bcf	3,6	;RP1=0, select bank0
  5694  1B4F  00DD               	movwf	___fladd@a+1
  5695  1B50  1683               	bsf	3,5	;RP0=1, select bank1
  5696  1B51  1303               	bcf	3,6	;RP1=0, select bank1
  5697  1B52  0820               	movf	___flsub@a^(0+128),w
  5698  1B53  1283               	bcf	3,5	;RP0=0, select bank0
  5699  1B54  1303               	bcf	3,6	;RP1=0, select bank0
  5700  1B55  00DC               	movwf	___fladd@a
  5701  1B56  160A  118A  226E  160A  158A  	fcall	___fladd
  5702  1B5B  1283               	bcf	3,5	;RP0=0, select bank0
  5703  1B5C  1303               	bcf	3,6	;RP1=0, select bank0
  5704  1B5D  085B               	movf	?___fladd+3,w
  5705  1B5E  1683               	bsf	3,5	;RP0=1, select bank1
  5706  1B5F  1303               	bcf	3,6	;RP1=0, select bank1
  5707  1B60  00A3               	movwf	(?___flsub+3)^(0+128)
  5708  1B61  1283               	bcf	3,5	;RP0=0, select bank0
  5709  1B62  1303               	bcf	3,6	;RP1=0, select bank0
  5710  1B63  085A               	movf	?___fladd+2,w
  5711  1B64  1683               	bsf	3,5	;RP0=1, select bank1
  5712  1B65  1303               	bcf	3,6	;RP1=0, select bank1
  5713  1B66  00A2               	movwf	(?___flsub+2)^(0+128)
  5714  1B67  1283               	bcf	3,5	;RP0=0, select bank0
  5715  1B68  1303               	bcf	3,6	;RP1=0, select bank0
  5716  1B69  0859               	movf	?___fladd+1,w
  5717  1B6A  1683               	bsf	3,5	;RP0=1, select bank1
  5718  1B6B  1303               	bcf	3,6	;RP1=0, select bank1
  5719  1B6C  00A1               	movwf	(?___flsub+1)^(0+128)
  5720  1B6D  1283               	bcf	3,5	;RP0=0, select bank0
  5721  1B6E  1303               	bcf	3,6	;RP1=0, select bank0
  5722  1B6F  0858               	movf	?___fladd,w
  5723  1B70  1683               	bsf	3,5	;RP0=1, select bank1
  5724  1B71  1303               	bcf	3,6	;RP1=0, select bank1
  5725  1B72  00A0               	movwf	?___flsub^(0+128)
  5726  1B73                     l824:
  5727  1B73  0008               	return
  5728  1B74                     __end_of___flsub:
  5729                           
  5730                           	psect	text16
  5731  126E                     __ptext16:	
  5732 ;; *************** function ___fladd *****************
  5733 ;; Defined at:
  5734 ;;		line 10 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  b               4   56[BANK0 ] long 
  5737 ;;  a               4   60[BANK0 ] long 
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;  grs             1   75[BANK0 ] unsigned char 
  5740 ;;  bexp            1   74[BANK0 ] unsigned char 
  5741 ;;  aexp            1   73[BANK0 ] unsigned char 
  5742 ;;  signs           1   72[BANK0 ] unsigned char 
  5743 ;; Return value:  Size  Location     Type
  5744 ;;                  4   56[BANK0 ] unsigned char 
  5745 ;; Registers used:
  5746 ;;		wreg, status,2, status,0, btemp+1
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5752 ;;      Params:         0       8       0       0       0
  5753 ;;      Locals:         0       4       0       0       0
  5754 ;;      Temps:          0       8       0       0       0
  5755 ;;      Totals:         0      20       0       0       0
  5756 ;;Total ram usage:       20 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; Hardware stack levels required when called:    2
  5759 ;; This function calls:
  5760 ;;		Nothing
  5761 ;; This function is called by:
  5762 ;;		_sprintf
  5763 ;;		___flsub
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           
  5768                           ;psect for function ___fladd
  5769  126E                     ___fladd:
  5770  126E                     l2600:	
  5771                           ;incstack = 0
  5772                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5773                           
  5774  126E  1283               	bcf	3,5	;RP0=0, select bank0
  5775  126F  1303               	bcf	3,6	;RP1=0, select bank0
  5776  1270  085B               	movf	___fladd@b+3,w
  5777  1271  3980               	andlw	128
  5778  1272  00E0               	movwf	??___fladd
  5779  1273  0860               	movf	??___fladd,w
  5780  1274  00E8               	movwf	___fladd@signs
  5781  1275                     l2602:
  5782  1275  085B               	movf	___fladd@b+3,w
  5783  1276  00E0               	movwf	??___fladd
  5784  1277  0760               	addwf	??___fladd,w
  5785  1278  00E1               	movwf	??___fladd+1
  5786  1279  0861               	movf	??___fladd+1,w
  5787  127A  00EA               	movwf	___fladd@bexp
  5788  127B                     l2604:
  5789  127B  1FDA               	btfss	___fladd@b+2,7
  5790  127C  2A7E               	goto	u3321
  5791  127D  2A7F               	goto	u3320
  5792  127E                     u3321:
  5793  127E  2A80               	goto	l2608
  5794  127F                     u3320:
  5795  127F                     l2606:
  5796  127F  146A               	bsf	___fladd@bexp,0
  5797  1280                     l2608:
  5798  1280  086A               	movf	___fladd@bexp,w
  5799  1281  1903               	btfsc	3,2
  5800  1282  2A84               	goto	u3331
  5801  1283  2A85               	goto	u3330
  5802  1284                     u3331:
  5803  1284  2A95               	goto	l2618
  5804  1285                     u3330:
  5805  1285                     l2610:
  5806  1285  0A6A               	incf	___fladd@bexp,w
  5807  1286  1D03               	btfss	3,2
  5808  1287  2A89               	goto	u3341
  5809  1288  2A8A               	goto	u3340
  5810  1289                     u3341:
  5811  1289  2A92               	goto	l2614
  5812  128A                     u3340:
  5813  128A                     l2612:
  5814  128A  3000               	movlw	0
  5815  128B  00DB               	movwf	___fladd@b+3
  5816  128C  3000               	movlw	0
  5817  128D  00DA               	movwf	___fladd@b+2
  5818  128E  3000               	movlw	0
  5819  128F  00D9               	movwf	___fladd@b+1
  5820  1290  3000               	movlw	0
  5821  1291  00D8               	movwf	___fladd@b
  5822  1292                     l2614:
  5823  1292  17DA               	bsf	___fladd@b+2,7
  5824  1293                     l2616:
  5825  1293  01DB               	clrf	___fladd@b+3
  5826  1294  2A9D               	goto	l2620
  5827  1295                     l2618:
  5828  1295  3000               	movlw	0
  5829  1296  00DB               	movwf	___fladd@b+3
  5830  1297  3000               	movlw	0
  5831  1298  00DA               	movwf	___fladd@b+2
  5832  1299  3000               	movlw	0
  5833  129A  00D9               	movwf	___fladd@b+1
  5834  129B  3000               	movlw	0
  5835  129C  00D8               	movwf	___fladd@b
  5836  129D                     l2620:
  5837  129D  085F               	movf	___fladd@a+3,w
  5838  129E  3980               	andlw	128
  5839  129F  00E0               	movwf	??___fladd
  5840  12A0  0860               	movf	??___fladd,w
  5841  12A1  00E9               	movwf	___fladd@aexp
  5842  12A2                     l2622:
  5843  12A2  0869               	movf	___fladd@aexp,w
  5844  12A3  0668               	xorwf	___fladd@signs,w
  5845  12A4  1903               	skipnz
  5846  12A5  2AA7               	goto	u3351
  5847  12A6  2AA8               	goto	u3350
  5848  12A7                     u3351:
  5849  12A7  2AA9               	goto	l2626
  5850  12A8                     u3350:
  5851  12A8                     l2624:
  5852  12A8  1768               	bsf	___fladd@signs,6
  5853  12A9                     l2626:
  5854  12A9  085F               	movf	___fladd@a+3,w
  5855  12AA  00E0               	movwf	??___fladd
  5856  12AB  0760               	addwf	??___fladd,w
  5857  12AC  00E1               	movwf	??___fladd+1
  5858  12AD  0861               	movf	??___fladd+1,w
  5859  12AE  00E9               	movwf	___fladd@aexp
  5860  12AF                     l2628:
  5861  12AF  1FDE               	btfss	___fladd@a+2,7
  5862  12B0  2AB2               	goto	u3361
  5863  12B1  2AB3               	goto	u3360
  5864  12B2                     u3361:
  5865  12B2  2AB4               	goto	l2632
  5866  12B3                     u3360:
  5867  12B3                     l2630:
  5868  12B3  1469               	bsf	___fladd@aexp,0
  5869  12B4                     l2632:
  5870  12B4  0869               	movf	___fladd@aexp,w
  5871  12B5  1903               	btfsc	3,2
  5872  12B6  2AB8               	goto	u3371
  5873  12B7  2AB9               	goto	u3370
  5874  12B8                     u3371:
  5875  12B8  2AC9               	goto	l2642
  5876  12B9                     u3370:
  5877  12B9                     l2634:
  5878  12B9  0A69               	incf	___fladd@aexp,w
  5879  12BA  1D03               	btfss	3,2
  5880  12BB  2ABD               	goto	u3381
  5881  12BC  2ABE               	goto	u3380
  5882  12BD                     u3381:
  5883  12BD  2AC6               	goto	l2638
  5884  12BE                     u3380:
  5885  12BE                     l2636:
  5886  12BE  3000               	movlw	0
  5887  12BF  00DF               	movwf	___fladd@a+3
  5888  12C0  3000               	movlw	0
  5889  12C1  00DE               	movwf	___fladd@a+2
  5890  12C2  3000               	movlw	0
  5891  12C3  00DD               	movwf	___fladd@a+1
  5892  12C4  3000               	movlw	0
  5893  12C5  00DC               	movwf	___fladd@a
  5894  12C6                     l2638:
  5895  12C6  17DE               	bsf	___fladd@a+2,7
  5896  12C7                     l2640:
  5897  12C7  01DF               	clrf	___fladd@a+3
  5898  12C8  2AD1               	goto	l778
  5899  12C9                     l2642:
  5900  12C9  3000               	movlw	0
  5901  12CA  00DF               	movwf	___fladd@a+3
  5902  12CB  3000               	movlw	0
  5903  12CC  00DE               	movwf	___fladd@a+2
  5904  12CD  3000               	movlw	0
  5905  12CE  00DD               	movwf	___fladd@a+1
  5906  12CF  3000               	movlw	0
  5907  12D0  00DC               	movwf	___fladd@a
  5908  12D1                     l778:
  5909  12D1  086A               	movf	___fladd@bexp,w
  5910  12D2  0269               	subwf	___fladd@aexp,w
  5911  12D3  1803               	skipnc
  5912  12D4  2AD6               	goto	u3391
  5913  12D5  2AD7               	goto	u3390
  5914  12D6                     u3391:
  5915  12D6  2B1B               	goto	l2678
  5916  12D7                     u3390:
  5917  12D7                     l2644:
  5918  12D7  1F68               	btfss	___fladd@signs,6
  5919  12D8  2ADA               	goto	u3401
  5920  12D9  2ADB               	goto	u3400
  5921  12DA                     u3401:
  5922  12DA  2ADF               	goto	l2648
  5923  12DB                     u3400:
  5924  12DB                     l2646:
  5925  12DB  3080               	movlw	128
  5926  12DC  00E0               	movwf	??___fladd
  5927  12DD  0860               	movf	??___fladd,w
  5928  12DE  06E8               	xorwf	___fladd@signs,f
  5929  12DF                     l2648:
  5930  12DF  086A               	movf	___fladd@bexp,w
  5931  12E0  00E0               	movwf	??___fladd
  5932  12E1  0860               	movf	??___fladd,w
  5933  12E2  00EB               	movwf	___fladd@grs
  5934  12E3                     l2650:
  5935  12E3  0869               	movf	___fladd@aexp,w
  5936  12E4  00E0               	movwf	??___fladd
  5937  12E5  0860               	movf	??___fladd,w
  5938  12E6  00EA               	movwf	___fladd@bexp
  5939  12E7                     l2652:
  5940  12E7  086B               	movf	___fladd@grs,w
  5941  12E8  00E0               	movwf	??___fladd
  5942  12E9  0860               	movf	??___fladd,w
  5943  12EA  00E9               	movwf	___fladd@aexp
  5944  12EB                     l2654:
  5945  12EB  0858               	movf	___fladd@b,w
  5946  12EC  00E0               	movwf	??___fladd
  5947  12ED  0860               	movf	??___fladd,w
  5948  12EE  00EB               	movwf	___fladd@grs
  5949  12EF                     l2656:
  5950  12EF  085C               	movf	___fladd@a,w
  5951  12F0  00E0               	movwf	??___fladd
  5952  12F1  0860               	movf	??___fladd,w
  5953  12F2  00D8               	movwf	___fladd@b
  5954  12F3                     l2658:
  5955  12F3  086B               	movf	___fladd@grs,w
  5956  12F4  00E0               	movwf	??___fladd
  5957  12F5  0860               	movf	??___fladd,w
  5958  12F6  00DC               	movwf	___fladd@a
  5959  12F7                     l2660:
  5960  12F7  0859               	movf	___fladd@b+1,w
  5961  12F8  00E0               	movwf	??___fladd
  5962  12F9  0860               	movf	??___fladd,w
  5963  12FA  00EB               	movwf	___fladd@grs
  5964  12FB                     l2662:
  5965  12FB  085D               	movf	___fladd@a+1,w
  5966  12FC  00E0               	movwf	??___fladd
  5967  12FD  0860               	movf	??___fladd,w
  5968  12FE  00D9               	movwf	___fladd@b+1
  5969  12FF                     l2664:
  5970  12FF  086B               	movf	___fladd@grs,w
  5971  1300  00E0               	movwf	??___fladd
  5972  1301  0860               	movf	??___fladd,w
  5973  1302  00DD               	movwf	___fladd@a+1
  5974  1303                     l2666:
  5975  1303  085A               	movf	___fladd@b+2,w
  5976  1304  00E0               	movwf	??___fladd
  5977  1305  0860               	movf	??___fladd,w
  5978  1306  00EB               	movwf	___fladd@grs
  5979  1307                     l2668:
  5980  1307  085E               	movf	___fladd@a+2,w
  5981  1308  00E0               	movwf	??___fladd
  5982  1309  0860               	movf	??___fladd,w
  5983  130A  00DA               	movwf	___fladd@b+2
  5984  130B                     l2670:
  5985  130B  086B               	movf	___fladd@grs,w
  5986  130C  00E0               	movwf	??___fladd
  5987  130D  0860               	movf	??___fladd,w
  5988  130E  00DE               	movwf	___fladd@a+2
  5989  130F                     l2672:
  5990  130F  085B               	movf	___fladd@b+3,w
  5991  1310  00E0               	movwf	??___fladd
  5992  1311  0860               	movf	??___fladd,w
  5993  1312  00EB               	movwf	___fladd@grs
  5994  1313                     l2674:
  5995  1313  085F               	movf	___fladd@a+3,w
  5996  1314  00E0               	movwf	??___fladd
  5997  1315  0860               	movf	??___fladd,w
  5998  1316  00DB               	movwf	___fladd@b+3
  5999  1317                     l2676:
  6000  1317  086B               	movf	___fladd@grs,w
  6001  1318  00E0               	movwf	??___fladd
  6002  1319  0860               	movf	??___fladd,w
  6003  131A  00DF               	movwf	___fladd@a+3
  6004  131B                     l2678:
  6005  131B  01EB               	clrf	___fladd@grs
  6006  131C                     l2680:
  6007  131C  0869               	movf	___fladd@aexp,w
  6008  131D  00E0               	movwf	??___fladd
  6009  131E  01E1               	clrf	??___fladd+1
  6010  131F  0861               	movf	??___fladd+1,w
  6011  1320  00E3               	movwf	??___fladd+3
  6012  1321  086A               	movf	___fladd@bexp,w
  6013  1322  0260               	subwf	??___fladd,w
  6014  1323  00E2               	movwf	??___fladd+2
  6015  1324  1C03               	skipc
  6016  1325  03E3               	decf	??___fladd+3,f
  6017  1326  0863               	movf	??___fladd+3,w
  6018  1327  3A80               	xorlw	128
  6019  1328  00FF               	movwf	btemp+1
  6020  1329  3080               	movlw	128
  6021  132A  027F               	subwf	btemp+1,w
  6022  132B  1D03               	skipz
  6023  132C  2B2F               	goto	u3415
  6024  132D  301A               	movlw	26
  6025  132E  0262               	subwf	??___fladd+2,w
  6026  132F                     u3415:
  6027  132F  1C03               	skipc
  6028  1330  2B32               	goto	u3411
  6029  1331  2B33               	goto	u3410
  6030  1332                     u3411:
  6031  1332  2B70               	goto	l2696
  6032  1333                     u3410:
  6033  1333                     l2682:
  6034  1333  1283               	bcf	3,5	;RP0=0, select bank0
  6035  1334  1303               	bcf	3,6	;RP1=0, select bank0
  6036  1335  085B               	movf	___fladd@b+3,w
  6037  1336  045A               	iorwf	___fladd@b+2,w
  6038  1337  0459               	iorwf	___fladd@b+1,w
  6039  1338  0458               	iorwf	___fladd@b,w
  6040  1339  1D03               	skipz
  6041  133A  2B3C               	goto	u3421
  6042  133B  2B3E               	goto	u3420
  6043  133C                     u3421:
  6044  133C  3001               	movlw	1
  6045  133D  2B3F               	goto	u3430
  6046  133E                     u3420:
  6047  133E  3000               	movlw	0
  6048  133F                     u3430:
  6049  133F  00E0               	movwf	??___fladd
  6050  1340  0860               	movf	??___fladd,w
  6051  1341  00EB               	movwf	___fladd@grs
  6052  1342  3000               	movlw	0
  6053  1343  00DB               	movwf	___fladd@b+3
  6054  1344  3000               	movlw	0
  6055  1345  00DA               	movwf	___fladd@b+2
  6056  1346  3000               	movlw	0
  6057  1347  00D9               	movwf	___fladd@b+1
  6058  1348  3000               	movlw	0
  6059  1349  00D8               	movwf	___fladd@b
  6060  134A  0869               	movf	___fladd@aexp,w
  6061  134B  00E0               	movwf	??___fladd
  6062  134C  0860               	movf	??___fladd,w
  6063  134D  00EA               	movwf	___fladd@bexp
  6064  134E  2B78               	goto	l782
  6065  134F                     l784:
  6066  134F  1C6B               	btfss	___fladd@grs,0
  6067  1350  2B52               	goto	u3441
  6068  1351  2B53               	goto	u3440
  6069  1352                     u3441:
  6070  1352  2B5C               	goto	l2686
  6071  1353                     u3440:
  6072  1353                     l2684:
  6073  1353  086B               	movf	___fladd@grs,w
  6074  1354  00E0               	movwf	??___fladd
  6075  1355  1003               	clrc
  6076  1356  0C60               	rrf	??___fladd,w
  6077  1357  3801               	iorlw	1
  6078  1358  00E1               	movwf	??___fladd+1
  6079  1359  0861               	movf	??___fladd+1,w
  6080  135A  00EB               	movwf	___fladd@grs
  6081  135B  2B5E               	goto	l2688
  6082  135C                     l2686:
  6083  135C  1003               	clrc
  6084  135D  0CEB               	rrf	___fladd@grs,f
  6085  135E                     l2688:
  6086  135E  1C58               	btfss	___fladd@b,0
  6087  135F  2B61               	goto	u3451
  6088  1360  2B62               	goto	u3450
  6089  1361                     u3451:
  6090  1361  2B63               	goto	l2692
  6091  1362                     u3450:
  6092  1362                     l2690:
  6093  1362  17EB               	bsf	___fladd@grs,7
  6094  1363                     l2692:
  6095  1363  3001               	movlw	1
  6096  1364  00E0               	movwf	??___fladd
  6097  1365                     u3465:
  6098  1365  0D5B               	rlf	___fladd@b+3,w
  6099  1366  0CDB               	rrf	___fladd@b+3,f
  6100  1367  0CDA               	rrf	___fladd@b+2,f
  6101  1368  0CD9               	rrf	___fladd@b+1,f
  6102  1369  0CD8               	rrf	___fladd@b,f
  6103  136A  0BE0               	decfsz	??___fladd& (0+127),f
  6104  136B  2B65               	goto	u3465
  6105  136C                     l2694:
  6106  136C  3001               	movlw	1
  6107  136D  00E0               	movwf	??___fladd
  6108  136E  0860               	movf	??___fladd,w
  6109  136F  07EA               	addwf	___fladd@bexp,f
  6110  1370                     l2696:
  6111  1370  1283               	bcf	3,5	;RP0=0, select bank0
  6112  1371  1303               	bcf	3,6	;RP1=0, select bank0
  6113  1372  0869               	movf	___fladd@aexp,w
  6114  1373  026A               	subwf	___fladd@bexp,w
  6115  1374  1C03               	skipc
  6116  1375  2B77               	goto	u3471
  6117  1376  2B78               	goto	u3470
  6118  1377                     u3471:
  6119  1377  2B4F               	goto	l784
  6120  1378                     u3470:
  6121  1378                     l782:
  6122  1378  1B68               	btfsc	___fladd@signs,6
  6123  1379  2B7B               	goto	u3481
  6124  137A  2B7C               	goto	u3480
  6125  137B                     u3481:
  6126  137B  2BC7               	goto	l2722
  6127  137C                     u3480:
  6128  137C                     l2698:
  6129  137C  086A               	movf	___fladd@bexp,w
  6130  137D  1D03               	btfss	3,2
  6131  137E  2B80               	goto	u3491
  6132  137F  2B81               	goto	u3490
  6133  1380                     u3491:
  6134  1380  2B8A               	goto	l2704
  6135  1381                     u3490:
  6136  1381                     l2700:
  6137  1381  3000               	movlw	0
  6138  1382  00DB               	movwf	?___fladd+3
  6139  1383  3000               	movlw	0
  6140  1384  00DA               	movwf	?___fladd+2
  6141  1385  3000               	movlw	0
  6142  1386  00D9               	movwf	?___fladd+1
  6143  1387  3000               	movlw	0
  6144  1388  00D8               	movwf	?___fladd
  6145  1389  2CF5               	goto	l791
  6146  138A                     l2704:
  6147  138A  085C               	movf	___fladd@a,w
  6148  138B  07D8               	addwf	___fladd@b,f
  6149  138C  085D               	movf	___fladd@a+1,w
  6150  138D  1103               	clrz
  6151  138E  1803               	skipnc
  6152  138F  3E01               	addlw	1
  6153  1390  1903               	skipnz
  6154  1391  2B93               	goto	u3501
  6155  1392  07D9               	addwf	___fladd@b+1,f
  6156  1393                     u3501:
  6157  1393  085E               	movf	___fladd@a+2,w
  6158  1394  1103               	clrz
  6159  1395  1803               	skipnc
  6160  1396  3E01               	addlw	1
  6161  1397  1903               	skipnz
  6162  1398  2B9A               	goto	u3502
  6163  1399  07DA               	addwf	___fladd@b+2,f
  6164  139A                     u3502:
  6165  139A  085F               	movf	___fladd@a+3,w
  6166  139B  1103               	clrz
  6167  139C  1803               	skipnc
  6168  139D  3E01               	addlw	1
  6169  139E  1903               	skipnz
  6170  139F  2BA1               	goto	u3503
  6171  13A0  07DB               	addwf	___fladd@b+3,f
  6172  13A1                     u3503:
  6173  13A1                     l2706:
  6174  13A1  1C5B               	btfss	___fladd@b+3,0
  6175  13A2  2BA4               	goto	u3511
  6176  13A3  2BA5               	goto	u3510
  6177  13A4                     u3511:
  6178  13A4  2C7B               	goto	l2756
  6179  13A5                     u3510:
  6180  13A5                     l2708:
  6181  13A5  1C6B               	btfss	___fladd@grs,0
  6182  13A6  2BA8               	goto	u3521
  6183  13A7  2BA9               	goto	u3520
  6184  13A8                     u3521:
  6185  13A8  2BB2               	goto	l2712
  6186  13A9                     u3520:
  6187  13A9                     l2710:
  6188  13A9  086B               	movf	___fladd@grs,w
  6189  13AA  00E0               	movwf	??___fladd
  6190  13AB  1003               	clrc
  6191  13AC  0C60               	rrf	??___fladd,w
  6192  13AD  3801               	iorlw	1
  6193  13AE  00E1               	movwf	??___fladd+1
  6194  13AF  0861               	movf	??___fladd+1,w
  6195  13B0  00EB               	movwf	___fladd@grs
  6196  13B1  2BB4               	goto	l2714
  6197  13B2                     l2712:
  6198  13B2  1003               	clrc
  6199  13B3  0CEB               	rrf	___fladd@grs,f
  6200  13B4                     l2714:
  6201  13B4  1C58               	btfss	___fladd@b,0
  6202  13B5  2BB7               	goto	u3531
  6203  13B6  2BB8               	goto	u3530
  6204  13B7                     u3531:
  6205  13B7  2BB9               	goto	l2718
  6206  13B8                     u3530:
  6207  13B8                     l2716:
  6208  13B8  17EB               	bsf	___fladd@grs,7
  6209  13B9                     l2718:
  6210  13B9  3001               	movlw	1
  6211  13BA  00E0               	movwf	??___fladd
  6212  13BB                     u3545:
  6213  13BB  0D5B               	rlf	___fladd@b+3,w
  6214  13BC  0CDB               	rrf	___fladd@b+3,f
  6215  13BD  0CDA               	rrf	___fladd@b+2,f
  6216  13BE  0CD9               	rrf	___fladd@b+1,f
  6217  13BF  0CD8               	rrf	___fladd@b,f
  6218  13C0  0BE0               	decfsz	??___fladd& (0+127),f
  6219  13C1  2BBB               	goto	u3545
  6220  13C2                     l2720:
  6221  13C2  3001               	movlw	1
  6222  13C3  00E0               	movwf	??___fladd
  6223  13C4  0860               	movf	??___fladd,w
  6224  13C5  07EA               	addwf	___fladd@bexp,f
  6225  13C6  2C7B               	goto	l2756
  6226  13C7                     l2722:
  6227  13C7  085B               	movf	___fladd@b+3,w
  6228  13C8  3A80               	xorlw	128
  6229  13C9  00FF               	movwf	btemp+1
  6230  13CA  085F               	movf	___fladd@a+3,w
  6231  13CB  3A80               	xorlw	128
  6232  13CC  027F               	subwf	btemp+1,w
  6233  13CD  1D03               	skipz
  6234  13CE  2BD9               	goto	u3553
  6235  13CF  085E               	movf	___fladd@a+2,w
  6236  13D0  025A               	subwf	___fladd@b+2,w
  6237  13D1  1D03               	skipz
  6238  13D2  2BD9               	goto	u3553
  6239  13D3  085D               	movf	___fladd@a+1,w
  6240  13D4  0259               	subwf	___fladd@b+1,w
  6241  13D5  1D03               	skipz
  6242  13D6  2BD9               	goto	u3553
  6243  13D7  085C               	movf	___fladd@a,w
  6244  13D8  0258               	subwf	___fladd@b,w
  6245  13D9                     u3553:
  6246  13D9  1803               	skipnc
  6247  13DA  2BDC               	goto	u3551
  6248  13DB  2BDD               	goto	u3550
  6249  13DC                     u3551:
  6250  13DC  2C35               	goto	l2732
  6251  13DD                     u3550:
  6252  13DD                     l2724:
  6253  13DD  30FF               	movlw	255
  6254  13DE  00E0               	movwf	??___fladd
  6255  13DF  30FF               	movlw	255
  6256  13E0  00E1               	movwf	??___fladd+1
  6257  13E1  30FF               	movlw	255
  6258  13E2  00E2               	movwf	??___fladd+2
  6259  13E3  30FF               	movlw	255
  6260  13E4  00E3               	movwf	??___fladd+3
  6261  13E5  085C               	movf	___fladd@a,w
  6262  13E6  00E4               	movwf	??___fladd+4
  6263  13E7  085D               	movf	___fladd@a+1,w
  6264  13E8  00E5               	movwf	??___fladd+5
  6265  13E9  085E               	movf	___fladd@a+2,w
  6266  13EA  00E6               	movwf	??___fladd+6
  6267  13EB  085F               	movf	___fladd@a+3,w
  6268  13EC  00E7               	movwf	??___fladd+7
  6269  13ED  0858               	movf	___fladd@b,w
  6270  13EE  02E4               	subwf	??___fladd+4,f
  6271  13EF  0859               	movf	___fladd@b+1,w
  6272  13F0  1C03               	skipc
  6273  13F1  0F59               	incfsz	___fladd@b+1,w
  6274  13F2  2BF4               	goto	u3561
  6275  13F3  2BF5               	goto	u3562
  6276  13F4                     u3561:
  6277  13F4  02E5               	subwf	??___fladd+5,f
  6278  13F5                     u3562:
  6279  13F5  085A               	movf	___fladd@b+2,w
  6280  13F6  1C03               	skipc
  6281  13F7  0F5A               	incfsz	___fladd@b+2,w
  6282  13F8  2BFA               	goto	u3563
  6283  13F9  2BFB               	goto	u3564
  6284  13FA                     u3563:
  6285  13FA  02E6               	subwf	??___fladd+6,f
  6286  13FB                     u3564:
  6287  13FB  085B               	movf	___fladd@b+3,w
  6288  13FC  1C03               	skipc
  6289  13FD  0F5B               	incfsz	___fladd@b+3,w
  6290  13FE  2C00               	goto	u3565
  6291  13FF  2C01               	goto	u3566
  6292  1400                     u3565:
  6293  1400  02E7               	subwf	??___fladd+7,f
  6294  1401                     u3566:
  6295  1401  0864               	movf	??___fladd+4,w
  6296  1402  07E0               	addwf	??___fladd,f
  6297  1403  0865               	movf	??___fladd+5,w
  6298  1404  1803               	skipnc
  6299  1405  0F65               	incfsz	??___fladd+5,w
  6300  1406  2C08               	goto	u3570
  6301  1407  2C09               	goto	u3571
  6302  1408                     u3570:
  6303  1408  07E1               	addwf	??___fladd+1,f
  6304  1409                     u3571:
  6305  1409  0866               	movf	??___fladd+6,w
  6306  140A  1803               	skipnc
  6307  140B  0F66               	incfsz	??___fladd+6,w
  6308  140C  2C0E               	goto	u3572
  6309  140D  2C0F               	goto	u3573
  6310  140E                     u3572:
  6311  140E  07E2               	addwf	??___fladd+2,f
  6312  140F                     u3573:
  6313  140F  0867               	movf	??___fladd+7,w
  6314  1410  1803               	skipnc
  6315  1411  0A67               	incf	??___fladd+7,w
  6316  1412  07E3               	addwf	??___fladd+3,f
  6317  1413  0863               	movf	??___fladd+3,w
  6318  1414  00DB               	movwf	___fladd@b+3
  6319  1415  0862               	movf	??___fladd+2,w
  6320  1416  00DA               	movwf	___fladd@b+2
  6321  1417  0861               	movf	??___fladd+1,w
  6322  1418  00D9               	movwf	___fladd@b+1
  6323  1419  0860               	movf	??___fladd,w
  6324  141A  00D8               	movwf	___fladd@b
  6325  141B                     l2726:
  6326  141B  3080               	movlw	128
  6327  141C  00E0               	movwf	??___fladd
  6328  141D  0860               	movf	??___fladd,w
  6329  141E  06E8               	xorwf	___fladd@signs,f
  6330  141F  09EB               	comf	___fladd@grs,f
  6331  1420  0AEB               	incf	___fladd@grs,f
  6332  1421                     l2728:
  6333  1421  086B               	movf	___fladd@grs,w
  6334  1422  1D03               	btfss	3,2
  6335  1423  2C25               	goto	u3581
  6336  1424  2C26               	goto	u3580
  6337  1425                     u3581:
  6338  1425  2C43               	goto	l799
  6339  1426                     u3580:
  6340  1426                     l2730:
  6341  1426  3001               	movlw	1
  6342  1427  07D8               	addwf	___fladd@b,f
  6343  1428  3000               	movlw	0
  6344  1429  1803               	skipnc
  6345  142A  3001               	movlw	1
  6346  142B  07D9               	addwf	___fladd@b+1,f
  6347  142C  3000               	movlw	0
  6348  142D  1803               	skipnc
  6349  142E  3001               	movlw	1
  6350  142F  07DA               	addwf	___fladd@b+2,f
  6351  1430  3000               	movlw	0
  6352  1431  1803               	skipnc
  6353  1432  3001               	movlw	1
  6354  1433  07DB               	addwf	___fladd@b+3,f
  6355  1434  2C43               	goto	l799
  6356  1435                     l2732:
  6357  1435  085C               	movf	___fladd@a,w
  6358  1436  02D8               	subwf	___fladd@b,f
  6359  1437  085D               	movf	___fladd@a+1,w
  6360  1438  1C03               	skipc
  6361  1439  0F5D               	incfsz	___fladd@a+1,w
  6362  143A  02D9               	subwf	___fladd@b+1,f
  6363  143B  085E               	movf	___fladd@a+2,w
  6364  143C  1C03               	skipc
  6365  143D  0F5E               	incfsz	___fladd@a+2,w
  6366  143E  02DA               	subwf	___fladd@b+2,f
  6367  143F  085F               	movf	___fladd@a+3,w
  6368  1440  1C03               	skipc
  6369  1441  0F5F               	incfsz	___fladd@a+3,w
  6370  1442  02DB               	subwf	___fladd@b+3,f
  6371  1443                     l799:
  6372  1443  085B               	movf	___fladd@b+3,w
  6373  1444  045A               	iorwf	___fladd@b+2,w
  6374  1445  0459               	iorwf	___fladd@b+1,w
  6375  1446  0458               	iorwf	___fladd@b,w
  6376  1447  1D03               	skipz
  6377  1448  2C4A               	goto	u3591
  6378  1449  2C4B               	goto	u3590
  6379  144A                     u3591:
  6380  144A  2C77               	goto	l2754
  6381  144B                     u3590:
  6382  144B                     l2734:
  6383  144B  086B               	movf	___fladd@grs,w
  6384  144C  1D03               	btfss	3,2
  6385  144D  2C4F               	goto	u3601
  6386  144E  2C50               	goto	u3600
  6387  144F                     u3601:
  6388  144F  2C77               	goto	l2754
  6389  1450                     u3600:
  6390  1450                     l2736:
  6391  1450  3000               	movlw	0
  6392  1451  00DB               	movwf	?___fladd+3
  6393  1452  3000               	movlw	0
  6394  1453  00DA               	movwf	?___fladd+2
  6395  1454  3000               	movlw	0
  6396  1455  00D9               	movwf	?___fladd+1
  6397  1456  3000               	movlw	0
  6398  1457  00D8               	movwf	?___fladd
  6399  1458  2CF5               	goto	l791
  6400  1459                     l2740:
  6401  1459  3001               	movlw	1
  6402  145A  00E0               	movwf	??___fladd
  6403  145B                     u3615:
  6404  145B  1003               	clrc
  6405  145C  0DD8               	rlf	___fladd@b,f
  6406  145D  0DD9               	rlf	___fladd@b+1,f
  6407  145E  0DDA               	rlf	___fladd@b+2,f
  6408  145F  0DDB               	rlf	___fladd@b+3,f
  6409  1460  0BE0               	decfsz	??___fladd,f
  6410  1461  2C5B               	goto	u3615
  6411  1462                     l2742:
  6412  1462  1FEB               	btfss	___fladd@grs,7
  6413  1463  2C65               	goto	u3621
  6414  1464  2C66               	goto	u3620
  6415  1465                     u3621:
  6416  1465  2C67               	goto	l803
  6417  1466                     u3620:
  6418  1466                     l2744:
  6419  1466  1458               	bsf	___fladd@b,0
  6420  1467                     l803:
  6421  1467  1C6B               	btfss	___fladd@grs,0
  6422  1468  2C6A               	goto	u3631
  6423  1469  2C6B               	goto	u3630
  6424  146A                     u3631:
  6425  146A  2C6E               	goto	l2748
  6426  146B                     u3630:
  6427  146B                     l2746:
  6428  146B  1403               	setc
  6429  146C  0DEB               	rlf	___fladd@grs,f
  6430  146D  2C70               	goto	l2750
  6431  146E                     l2748:
  6432  146E  1003               	clrc
  6433  146F  0DEB               	rlf	___fladd@grs,f
  6434  1470                     l2750:
  6435  1470  086A               	movf	___fladd@bexp,w
  6436  1471  1903               	btfsc	3,2
  6437  1472  2C74               	goto	u3641
  6438  1473  2C75               	goto	u3640
  6439  1474                     u3641:
  6440  1474  2C77               	goto	l2754
  6441  1475                     u3640:
  6442  1475                     l2752:
  6443  1475  3001               	movlw	1
  6444  1476  02EA               	subwf	___fladd@bexp,f
  6445  1477                     l2754:
  6446  1477  1FDA               	btfss	___fladd@b+2,7
  6447  1478  2C7A               	goto	u3651
  6448  1479  2C7B               	goto	u3650
  6449  147A                     u3651:
  6450  147A  2C59               	goto	l2740
  6451  147B                     u3650:
  6452  147B                     l2756:
  6453  147B  01E9               	clrf	___fladd@aexp
  6454  147C                     l2758:
  6455  147C  1FEB               	btfss	___fladd@grs,7
  6456  147D  2C7F               	goto	u3661
  6457  147E  2C80               	goto	u3660
  6458  147F                     u3661:
  6459  147F  2C8E               	goto	l2766
  6460  1480                     u3660:
  6461  1480                     l2760:
  6462  1480  086B               	movf	___fladd@grs,w
  6463  1481  397F               	andlw	127
  6464  1482  1903               	btfsc	3,2
  6465  1483  2C85               	goto	u3671
  6466  1484  2C86               	goto	u3670
  6467  1485                     u3671:
  6468  1485  2C89               	goto	l809
  6469  1486                     u3670:
  6470  1486                     l2762:
  6471  1486  01E9               	clrf	___fladd@aexp
  6472  1487  0AE9               	incf	___fladd@aexp,f
  6473  1488  2C8E               	goto	l2766
  6474  1489                     l809:
  6475  1489  1C58               	btfss	___fladd@b,0
  6476  148A  2C8C               	goto	u3681
  6477  148B  2C8D               	goto	u3680
  6478  148C                     u3681:
  6479  148C  2C8E               	goto	l2766
  6480  148D                     u3680:
  6481  148D  2C86               	goto	l2762
  6482  148E                     l2766:
  6483  148E  0869               	movf	___fladd@aexp,w
  6484  148F  1903               	btfsc	3,2
  6485  1490  2C92               	goto	u3691
  6486  1491  2C93               	goto	u3690
  6487  1492                     u3691:
  6488  1492  2CC7               	goto	l812
  6489  1493                     u3690:
  6490  1493                     l2768:
  6491  1493  3001               	movlw	1
  6492  1494  07D8               	addwf	___fladd@b,f
  6493  1495  3000               	movlw	0
  6494  1496  1803               	skipnc
  6495  1497  3001               	movlw	1
  6496  1498  07D9               	addwf	___fladd@b+1,f
  6497  1499  3000               	movlw	0
  6498  149A  1803               	skipnc
  6499  149B  3001               	movlw	1
  6500  149C  07DA               	addwf	___fladd@b+2,f
  6501  149D  3000               	movlw	0
  6502  149E  1803               	skipnc
  6503  149F  3001               	movlw	1
  6504  14A0  07DB               	addwf	___fladd@b+3,f
  6505  14A1                     l2770:
  6506  14A1  1C5B               	btfss	___fladd@b+3,0
  6507  14A2  2CA4               	goto	u3701
  6508  14A3  2CA5               	goto	u3700
  6509  14A4                     u3701:
  6510  14A4  2CC7               	goto	l812
  6511  14A5                     u3700:
  6512  14A5                     l2772:
  6513  14A5  0858               	movf	___fladd@b,w
  6514  14A6  00E0               	movwf	??___fladd
  6515  14A7  0859               	movf	___fladd@b+1,w
  6516  14A8  00E1               	movwf	??___fladd+1
  6517  14A9  085A               	movf	___fladd@b+2,w
  6518  14AA  00E2               	movwf	??___fladd+2
  6519  14AB  085B               	movf	___fladd@b+3,w
  6520  14AC  00E3               	movwf	??___fladd+3
  6521  14AD  3001               	movlw	1
  6522  14AE  00E4               	movwf	??___fladd+4
  6523  14AF                     u3715:
  6524  14AF  0D63               	rlf	??___fladd+3,w
  6525  14B0  0CE3               	rrf	??___fladd+3,f
  6526  14B1  0CE2               	rrf	??___fladd+2,f
  6527  14B2  0CE1               	rrf	??___fladd+1,f
  6528  14B3  0CE0               	rrf	??___fladd,f
  6529  14B4                     u3710:
  6530  14B4  0BE4               	decfsz	??___fladd+4,f
  6531  14B5  2CAF               	goto	u3715
  6532  14B6  0863               	movf	??___fladd+3,w
  6533  14B7  00DB               	movwf	___fladd@b+3
  6534  14B8  0862               	movf	??___fladd+2,w
  6535  14B9  00DA               	movwf	___fladd@b+2
  6536  14BA  0861               	movf	??___fladd+1,w
  6537  14BB  00D9               	movwf	___fladd@b+1
  6538  14BC  0860               	movf	??___fladd,w
  6539  14BD  00D8               	movwf	___fladd@b
  6540  14BE  0A6A               	incf	___fladd@bexp,w
  6541  14BF  1903               	btfsc	3,2
  6542  14C0  2CC2               	goto	u3721
  6543  14C1  2CC3               	goto	u3720
  6544  14C2                     u3721:
  6545  14C2  2CC7               	goto	l812
  6546  14C3                     u3720:
  6547  14C3                     l2774:
  6548  14C3  3001               	movlw	1
  6549  14C4  00E0               	movwf	??___fladd
  6550  14C5  0860               	movf	??___fladd,w
  6551  14C6  07EA               	addwf	___fladd@bexp,f
  6552  14C7                     l812:
  6553  14C7  0A6A               	incf	___fladd@bexp,w
  6554  14C8  1903               	btfsc	3,2
  6555  14C9  2CCB               	goto	u3731
  6556  14CA  2CCC               	goto	u3730
  6557  14CB                     u3731:
  6558  14CB  2CD1               	goto	l2778
  6559  14CC                     u3730:
  6560  14CC                     l2776:
  6561  14CC  086A               	movf	___fladd@bexp,w
  6562  14CD  1D03               	btfss	3,2
  6563  14CE  2CD0               	goto	u3741
  6564  14CF  2CD1               	goto	u3740
  6565  14D0                     u3741:
  6566  14D0  2CDF               	goto	l2784
  6567  14D1                     u3740:
  6568  14D1                     l2778:
  6569  14D1  3000               	movlw	0
  6570  14D2  00DB               	movwf	___fladd@b+3
  6571  14D3  3000               	movlw	0
  6572  14D4  00DA               	movwf	___fladd@b+2
  6573  14D5  3000               	movlw	0
  6574  14D6  00D9               	movwf	___fladd@b+1
  6575  14D7  3000               	movlw	0
  6576  14D8  00D8               	movwf	___fladd@b
  6577  14D9                     l2780:
  6578  14D9  086A               	movf	___fladd@bexp,w
  6579  14DA  1D03               	btfss	3,2
  6580  14DB  2CDD               	goto	u3751
  6581  14DC  2CDE               	goto	u3750
  6582  14DD                     u3751:
  6583  14DD  2CDF               	goto	l2784
  6584  14DE                     u3750:
  6585  14DE                     l2782:
  6586  14DE  01E8               	clrf	___fladd@signs
  6587  14DF                     l2784:
  6588  14DF  1C6A               	btfss	___fladd@bexp,0
  6589  14E0  2CE2               	goto	u3761
  6590  14E1  2CE3               	goto	u3760
  6591  14E2                     u3761:
  6592  14E2  2CE5               	goto	l2788
  6593  14E3                     u3760:
  6594  14E3                     l2786:
  6595  14E3  17DA               	bsf	___fladd@b+2,7
  6596  14E4  2CE9               	goto	l820
  6597  14E5                     l2788:
  6598  14E5  307F               	movlw	127
  6599  14E6  00E0               	movwf	??___fladd
  6600  14E7  0860               	movf	??___fladd,w
  6601  14E8  05DA               	andwf	___fladd@b+2,f
  6602  14E9                     l820:
  6603  14E9  086A               	movf	___fladd@bexp,w
  6604  14EA  00E0               	movwf	??___fladd
  6605  14EB  1003               	clrc
  6606  14EC  0C60               	rrf	??___fladd,w
  6607  14ED  00E1               	movwf	??___fladd+1
  6608  14EE  0861               	movf	??___fladd+1,w
  6609  14EF  00DB               	movwf	___fladd@b+3
  6610  14F0                     l2790:
  6611  14F0  1FE8               	btfss	___fladd@signs,7
  6612  14F1  2CF3               	goto	u3771
  6613  14F2  2CF4               	goto	u3770
  6614  14F3                     u3771:
  6615  14F3  2CF5               	goto	l821
  6616  14F4                     u3770:
  6617  14F4                     l2792:
  6618  14F4  17DB               	bsf	___fladd@b+3,7
  6619  14F5                     l821:
  6620  14F5                     l791:
  6621  14F5  0008               	return
  6622  14F6                     __end_of___fladd:
  6623                           
  6624                           	psect	text17
  6625  1864                     __ptext17:	
  6626 ;; *************** function ___flneg *****************
  6627 ;; Defined at:
  6628 ;;		line 15 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;  f1              4    3[COMMON] unsigned char 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;		None
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  4    3[COMMON] unsigned char 
  6635 ;; Registers used:
  6636 ;;		wreg
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6642 ;;      Params:         4       0       0       0       0
  6643 ;;      Locals:         0       0       0       0       0
  6644 ;;      Temps:          0       0       0       0       0
  6645 ;;      Totals:         4       0       0       0       0
  6646 ;;Total ram usage:        4 bytes
  6647 ;; Hardware stack levels used:    1
  6648 ;; Hardware stack levels required when called:    2
  6649 ;; This function calls:
  6650 ;;		Nothing
  6651 ;; This function is called by:
  6652 ;;		_sprintf
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656                           
  6657                           ;psect for function ___flneg
  6658  1864                     ___flneg:
  6659  1864                     l3246:	
  6660                           ;incstack = 0
  6661                           ; Regs used in ___flneg: [wreg]
  6662                           
  6663  1864  0876               	movf	___flneg@f1+3,w
  6664  1865  0475               	iorwf	___flneg@f1+2,w
  6665  1866  0474               	iorwf	___flneg@f1+1,w
  6666  1867  0473               	iorwf	___flneg@f1,w
  6667  1868  1903               	skipnz
  6668  1869  286B               	goto	u4901
  6669  186A  286C               	goto	u4900
  6670  186B                     u4901:
  6671  186B  286E               	goto	l3250
  6672  186C                     u4900:
  6673  186C                     l3248:
  6674  186C  3080               	movlw	128
  6675  186D  06F6               	xorwf	___flneg@f1+3,f
  6676  186E                     l3250:
  6677  186E                     l650:
  6678  186E  0008               	return
  6679  186F                     __end_of___flneg:
  6680                           
  6681                           	psect	text18
  6682  1D25                     __ptext18:	
  6683 ;; *************** function ___flge *****************
  6684 ;; Defined at:
  6685 ;;		line 4 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  ff1             4    0[BANK0 ] unsigned char 
  6688 ;;  ff2             4    4[BANK0 ] unsigned char 
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;		None
  6691 ;; Return value:  Size  Location     Type
  6692 ;;		None               void
  6693 ;; Registers used:
  6694 ;;		wreg, status,2, status,0
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6700 ;;      Params:         0       8       0       0       0
  6701 ;;      Locals:         0       0       0       0       0
  6702 ;;      Temps:          4       0       0       0       0
  6703 ;;      Totals:         4       8       0       0       0
  6704 ;;Total ram usage:       12 bytes
  6705 ;; Hardware stack levels used:    1
  6706 ;; Hardware stack levels required when called:    2
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		_sprintf
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           
  6715                           ;psect for function ___flge
  6716  1D25                     ___flge:
  6717  1D25                     l4146:	
  6718                           ;incstack = 0
  6719                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6720                           
  6721  1D25  3000               	movlw	0
  6722  1D26  1283               	bcf	3,5	;RP0=0, select bank0
  6723  1D27  1303               	bcf	3,6	;RP1=0, select bank0
  6724  1D28  0520               	andwf	___flge@ff1,w
  6725  1D29  00F3               	movwf	??___flge
  6726  1D2A  3000               	movlw	0
  6727  1D2B  0521               	andwf	___flge@ff1+1,w
  6728  1D2C  00F4               	movwf	??___flge+1
  6729  1D2D  3080               	movlw	128
  6730  1D2E  0522               	andwf	___flge@ff1+2,w
  6731  1D2F  00F5               	movwf	??___flge+2
  6732  1D30  307F               	movlw	127
  6733  1D31  0523               	andwf	___flge@ff1+3,w
  6734  1D32  00F6               	movwf	??___flge+3
  6735  1D33  0876               	movf	??___flge+3,w
  6736  1D34  0475               	iorwf	??___flge+2,w
  6737  1D35  0474               	iorwf	??___flge+1,w
  6738  1D36  0473               	iorwf	??___flge,w
  6739  1D37  1D03               	skipz
  6740  1D38  2D3A               	goto	u6621
  6741  1D39  2D3B               	goto	u6620
  6742  1D3A                     u6621:
  6743  1D3A  2D43               	goto	l642
  6744  1D3B                     u6620:
  6745  1D3B                     l4148:
  6746  1D3B  3000               	movlw	0
  6747  1D3C  00A3               	movwf	___flge@ff1+3
  6748  1D3D  3000               	movlw	0
  6749  1D3E  00A2               	movwf	___flge@ff1+2
  6750  1D3F  3000               	movlw	0
  6751  1D40  00A1               	movwf	___flge@ff1+1
  6752  1D41  3000               	movlw	0
  6753  1D42  00A0               	movwf	___flge@ff1
  6754  1D43                     l642:
  6755  1D43  3000               	movlw	0
  6756  1D44  0524               	andwf	___flge@ff2,w
  6757  1D45  00F3               	movwf	??___flge
  6758  1D46  3000               	movlw	0
  6759  1D47  0525               	andwf	___flge@ff2+1,w
  6760  1D48  00F4               	movwf	??___flge+1
  6761  1D49  3080               	movlw	128
  6762  1D4A  0526               	andwf	___flge@ff2+2,w
  6763  1D4B  00F5               	movwf	??___flge+2
  6764  1D4C  307F               	movlw	127
  6765  1D4D  0527               	andwf	___flge@ff2+3,w
  6766  1D4E  00F6               	movwf	??___flge+3
  6767  1D4F  0876               	movf	??___flge+3,w
  6768  1D50  0475               	iorwf	??___flge+2,w
  6769  1D51  0474               	iorwf	??___flge+1,w
  6770  1D52  0473               	iorwf	??___flge,w
  6771  1D53  1D03               	skipz
  6772  1D54  2D56               	goto	u6631
  6773  1D55  2D57               	goto	u6630
  6774  1D56                     u6631:
  6775  1D56  2D5F               	goto	l4152
  6776  1D57                     u6630:
  6777  1D57                     l4150:
  6778  1D57  3000               	movlw	0
  6779  1D58  00A7               	movwf	___flge@ff2+3
  6780  1D59  3000               	movlw	0
  6781  1D5A  00A6               	movwf	___flge@ff2+2
  6782  1D5B  3000               	movlw	0
  6783  1D5C  00A5               	movwf	___flge@ff2+1
  6784  1D5D  3000               	movlw	0
  6785  1D5E  00A4               	movwf	___flge@ff2
  6786  1D5F                     l4152:
  6787  1D5F  1FA3               	btfss	___flge@ff1+3,7
  6788  1D60  2D62               	goto	u6641
  6789  1D61  2D63               	goto	u6640
  6790  1D62                     u6641:
  6791  1D62  2D87               	goto	l4156
  6792  1D63                     u6640:
  6793  1D63                     l4154:
  6794  1D63  3000               	movlw	0
  6795  1D64  00F3               	movwf	??___flge
  6796  1D65  3000               	movlw	0
  6797  1D66  00F4               	movwf	??___flge+1
  6798  1D67  3000               	movlw	0
  6799  1D68  00F5               	movwf	??___flge+2
  6800  1D69  3080               	movlw	128
  6801  1D6A  00F6               	movwf	??___flge+3
  6802  1D6B  0820               	movf	___flge@ff1,w
  6803  1D6C  02F3               	subwf	??___flge,f
  6804  1D6D  0821               	movf	___flge@ff1+1,w
  6805  1D6E  1C03               	skipc
  6806  1D6F  0F21               	incfsz	___flge@ff1+1,w
  6807  1D70  2D72               	goto	u6651
  6808  1D71  2D73               	goto	u6652
  6809  1D72                     u6651:
  6810  1D72  02F4               	subwf	??___flge+1,f
  6811  1D73                     u6652:
  6812  1D73  0822               	movf	___flge@ff1+2,w
  6813  1D74  1C03               	skipc
  6814  1D75  0F22               	incfsz	___flge@ff1+2,w
  6815  1D76  2D78               	goto	u6653
  6816  1D77  2D79               	goto	u6654
  6817  1D78                     u6653:
  6818  1D78  02F5               	subwf	??___flge+2,f
  6819  1D79                     u6654:
  6820  1D79  0823               	movf	___flge@ff1+3,w
  6821  1D7A  1C03               	skipc
  6822  1D7B  0F23               	incfsz	___flge@ff1+3,w
  6823  1D7C  2D7E               	goto	u6655
  6824  1D7D  2D7F               	goto	u6656
  6825  1D7E                     u6655:
  6826  1D7E  02F6               	subwf	??___flge+3,f
  6827  1D7F                     u6656:
  6828  1D7F  0876               	movf	??___flge+3,w
  6829  1D80  00A3               	movwf	___flge@ff1+3
  6830  1D81  0875               	movf	??___flge+2,w
  6831  1D82  00A2               	movwf	___flge@ff1+2
  6832  1D83  0874               	movf	??___flge+1,w
  6833  1D84  00A1               	movwf	___flge@ff1+1
  6834  1D85  0873               	movf	??___flge,w
  6835  1D86  00A0               	movwf	___flge@ff1
  6836  1D87                     l4156:
  6837  1D87  1FA7               	btfss	___flge@ff2+3,7
  6838  1D88  2D8A               	goto	u6661
  6839  1D89  2D8B               	goto	u6660
  6840  1D8A                     u6661:
  6841  1D8A  2DAF               	goto	l645
  6842  1D8B                     u6660:
  6843  1D8B                     l4158:
  6844  1D8B  3000               	movlw	0
  6845  1D8C  00F3               	movwf	??___flge
  6846  1D8D  3000               	movlw	0
  6847  1D8E  00F4               	movwf	??___flge+1
  6848  1D8F  3000               	movlw	0
  6849  1D90  00F5               	movwf	??___flge+2
  6850  1D91  3080               	movlw	128
  6851  1D92  00F6               	movwf	??___flge+3
  6852  1D93  0824               	movf	___flge@ff2,w
  6853  1D94  02F3               	subwf	??___flge,f
  6854  1D95  0825               	movf	___flge@ff2+1,w
  6855  1D96  1C03               	skipc
  6856  1D97  0F25               	incfsz	___flge@ff2+1,w
  6857  1D98  2D9A               	goto	u6671
  6858  1D99  2D9B               	goto	u6672
  6859  1D9A                     u6671:
  6860  1D9A  02F4               	subwf	??___flge+1,f
  6861  1D9B                     u6672:
  6862  1D9B  0826               	movf	___flge@ff2+2,w
  6863  1D9C  1C03               	skipc
  6864  1D9D  0F26               	incfsz	___flge@ff2+2,w
  6865  1D9E  2DA0               	goto	u6673
  6866  1D9F  2DA1               	goto	u6674
  6867  1DA0                     u6673:
  6868  1DA0  02F5               	subwf	??___flge+2,f
  6869  1DA1                     u6674:
  6870  1DA1  0827               	movf	___flge@ff2+3,w
  6871  1DA2  1C03               	skipc
  6872  1DA3  0F27               	incfsz	___flge@ff2+3,w
  6873  1DA4  2DA6               	goto	u6675
  6874  1DA5  2DA7               	goto	u6676
  6875  1DA6                     u6675:
  6876  1DA6  02F6               	subwf	??___flge+3,f
  6877  1DA7                     u6676:
  6878  1DA7  0876               	movf	??___flge+3,w
  6879  1DA8  00A7               	movwf	___flge@ff2+3
  6880  1DA9  0875               	movf	??___flge+2,w
  6881  1DAA  00A6               	movwf	___flge@ff2+2
  6882  1DAB  0874               	movf	??___flge+1,w
  6883  1DAC  00A5               	movwf	___flge@ff2+1
  6884  1DAD  0873               	movf	??___flge,w
  6885  1DAE  00A4               	movwf	___flge@ff2
  6886  1DAF                     l645:
  6887  1DAF  3080               	movlw	128
  6888  1DB0  06A3               	xorwf	___flge@ff1+3,f
  6889  1DB1  3080               	movlw	128
  6890  1DB2  06A7               	xorwf	___flge@ff2+3,f
  6891  1DB3  0827               	movf	___flge@ff2+3,w
  6892  1DB4  0223               	subwf	___flge@ff1+3,w
  6893  1DB5  1D03               	skipz
  6894  1DB6  2DC1               	goto	u6685
  6895  1DB7  0826               	movf	___flge@ff2+2,w
  6896  1DB8  0222               	subwf	___flge@ff1+2,w
  6897  1DB9  1D03               	skipz
  6898  1DBA  2DC1               	goto	u6685
  6899  1DBB  0825               	movf	___flge@ff2+1,w
  6900  1DBC  0221               	subwf	___flge@ff1+1,w
  6901  1DBD  1D03               	skipz
  6902  1DBE  2DC1               	goto	u6685
  6903  1DBF  0824               	movf	___flge@ff2,w
  6904  1DC0  0220               	subwf	___flge@ff1,w
  6905  1DC1                     u6685:
  6906  1DC1  1803               	skipnc
  6907  1DC2  2DC4               	goto	u6681
  6908  1DC3  2DC5               	goto	u6680
  6909  1DC4                     u6681:
  6910  1DC4  2DC7               	goto	l4162
  6911  1DC5                     u6680:
  6912  1DC5                     l4160:
  6913  1DC5  1003               	clrc
  6914  1DC6  2DC8               	goto	l646
  6915  1DC7                     l4162:
  6916  1DC7  1403               	setc
  6917  1DC8                     l646:
  6918  1DC8  0008               	return
  6919  1DC9                     __end_of___flge:
  6920                           
  6921                           	psect	text19
  6922  1AD4                     __ptext19:	
  6923 ;; *************** function ___fleq *****************
  6924 ;; Defined at:
  6925 ;;		line 4 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  6926 ;; Parameters:    Size  Location     Type
  6927 ;;  ff1             4    0[BANK0 ] unsigned char 
  6928 ;;  ff2             4    4[BANK0 ] unsigned char 
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;		None
  6931 ;; Return value:  Size  Location     Type
  6932 ;;		None               void
  6933 ;; Registers used:
  6934 ;;		wreg, status,2, status,0
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6940 ;;      Params:         0       8       0       0       0
  6941 ;;      Locals:         0       0       0       0       0
  6942 ;;      Temps:          4       0       0       0       0
  6943 ;;      Totals:         4       8       0       0       0
  6944 ;;Total ram usage:       12 bytes
  6945 ;; Hardware stack levels used:    1
  6946 ;; Hardware stack levels required when called:    2
  6947 ;; This function calls:
  6948 ;;		Nothing
  6949 ;; This function is called by:
  6950 ;;		_sprintf
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           
  6955                           ;psect for function ___fleq
  6956  1AD4                     ___fleq:
  6957  1AD4                     l4134:	
  6958                           ;incstack = 0
  6959                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  6960                           
  6961  1AD4  3000               	movlw	0
  6962  1AD5  1283               	bcf	3,5	;RP0=0, select bank0
  6963  1AD6  1303               	bcf	3,6	;RP1=0, select bank0
  6964  1AD7  0520               	andwf	___fleq@ff1,w
  6965  1AD8  00F3               	movwf	??___fleq
  6966  1AD9  3000               	movlw	0
  6967  1ADA  0521               	andwf	___fleq@ff1+1,w
  6968  1ADB  00F4               	movwf	??___fleq+1
  6969  1ADC  3080               	movlw	128
  6970  1ADD  0522               	andwf	___fleq@ff1+2,w
  6971  1ADE  00F5               	movwf	??___fleq+2
  6972  1ADF  307F               	movlw	127
  6973  1AE0  0523               	andwf	___fleq@ff1+3,w
  6974  1AE1  00F6               	movwf	??___fleq+3
  6975  1AE2  0876               	movf	??___fleq+3,w
  6976  1AE3  0475               	iorwf	??___fleq+2,w
  6977  1AE4  0474               	iorwf	??___fleq+1,w
  6978  1AE5  0473               	iorwf	??___fleq,w
  6979  1AE6  1D03               	skipz
  6980  1AE7  2AE9               	goto	u6591
  6981  1AE8  2AEA               	goto	u6590
  6982  1AE9                     u6591:
  6983  1AE9  2AF2               	goto	l637
  6984  1AEA                     u6590:
  6985  1AEA                     l4136:
  6986  1AEA  3000               	movlw	0
  6987  1AEB  00A3               	movwf	___fleq@ff1+3
  6988  1AEC  3000               	movlw	0
  6989  1AED  00A2               	movwf	___fleq@ff1+2
  6990  1AEE  3000               	movlw	0
  6991  1AEF  00A1               	movwf	___fleq@ff1+1
  6992  1AF0  3000               	movlw	0
  6993  1AF1  00A0               	movwf	___fleq@ff1
  6994  1AF2                     l637:
  6995  1AF2  3000               	movlw	0
  6996  1AF3  0524               	andwf	___fleq@ff2,w
  6997  1AF4  00F3               	movwf	??___fleq
  6998  1AF5  3000               	movlw	0
  6999  1AF6  0525               	andwf	___fleq@ff2+1,w
  7000  1AF7  00F4               	movwf	??___fleq+1
  7001  1AF8  3080               	movlw	128
  7002  1AF9  0526               	andwf	___fleq@ff2+2,w
  7003  1AFA  00F5               	movwf	??___fleq+2
  7004  1AFB  307F               	movlw	127
  7005  1AFC  0527               	andwf	___fleq@ff2+3,w
  7006  1AFD  00F6               	movwf	??___fleq+3
  7007  1AFE  0876               	movf	??___fleq+3,w
  7008  1AFF  0475               	iorwf	??___fleq+2,w
  7009  1B00  0474               	iorwf	??___fleq+1,w
  7010  1B01  0473               	iorwf	??___fleq,w
  7011  1B02  1D03               	skipz
  7012  1B03  2B05               	goto	u6601
  7013  1B04  2B06               	goto	u6600
  7014  1B05                     u6601:
  7015  1B05  2B0E               	goto	l638
  7016  1B06                     u6600:
  7017  1B06                     l4138:
  7018  1B06  3000               	movlw	0
  7019  1B07  00A7               	movwf	___fleq@ff2+3
  7020  1B08  3000               	movlw	0
  7021  1B09  00A6               	movwf	___fleq@ff2+2
  7022  1B0A  3000               	movlw	0
  7023  1B0B  00A5               	movwf	___fleq@ff2+1
  7024  1B0C  3000               	movlw	0
  7025  1B0D  00A4               	movwf	___fleq@ff2
  7026  1B0E                     l638:
  7027  1B0E  0827               	movf	___fleq@ff2+3,w
  7028  1B0F  0623               	xorwf	___fleq@ff1+3,w
  7029  1B10  1D03               	skipz
  7030  1B11  2B1C               	goto	u6615
  7031  1B12  0826               	movf	___fleq@ff2+2,w
  7032  1B13  0622               	xorwf	___fleq@ff1+2,w
  7033  1B14  1D03               	skipz
  7034  1B15  2B1C               	goto	u6615
  7035  1B16  0825               	movf	___fleq@ff2+1,w
  7036  1B17  0621               	xorwf	___fleq@ff1+1,w
  7037  1B18  1D03               	skipz
  7038  1B19  2B1C               	goto	u6615
  7039  1B1A  0824               	movf	___fleq@ff2,w
  7040  1B1B  0620               	xorwf	___fleq@ff1,w
  7041  1B1C                     u6615:
  7042  1B1C  1903               	skipnz
  7043  1B1D  2B1F               	goto	u6611
  7044  1B1E  2B20               	goto	u6610
  7045  1B1F                     u6611:
  7046  1B1F  2B22               	goto	l4142
  7047  1B20                     u6610:
  7048  1B20                     l4140:
  7049  1B20  1003               	clrc
  7050  1B21  2B23               	goto	l639
  7051  1B22                     l4142:
  7052  1B22  1403               	setc
  7053  1B23                     l639:
  7054  1B23  0008               	return
  7055  1B24                     __end_of___fleq:
  7056                           
  7057                           	psect	text20
  7058  1968                     __ptext20:	
  7059 ;; *************** function _setup *****************
  7060 ;; Defined at:
  7061 ;;		line 143 in file "lab3_main.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;		None
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;		None
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  1    wreg      void 
  7068 ;; Registers used:
  7069 ;;		wreg, status,2
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7075 ;;      Params:         0       0       0       0       0
  7076 ;;      Locals:         0       0       0       0       0
  7077 ;;      Temps:          0       0       0       0       0
  7078 ;;      Totals:         0       0       0       0       0
  7079 ;;Total ram usage:        0 bytes
  7080 ;; Hardware stack levels used:    1
  7081 ;; Hardware stack levels required when called:    2
  7082 ;; This function calls:
  7083 ;;		Nothing
  7084 ;; This function is called by:
  7085 ;;		_main
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           
  7090                           ;psect for function _setup
  7091  1968                     _setup:
  7092  1968                     l3366:	
  7093                           ;incstack = 0
  7094                           ; Regs used in _setup: [wreg+status,2]
  7095                           
  7096                           
  7097                           ;lab3_main.c: 147:     TRISE = 0;
  7098  1968  1683               	bsf	3,5	;RP0=1, select bank1
  7099  1969  1303               	bcf	3,6	;RP1=0, select bank1
  7100  196A  0189               	clrf	9	;volatile
  7101                           
  7102                           ;lab3_main.c: 148:     PORTE = 0;
  7103  196B  1283               	bcf	3,5	;RP0=0, select bank0
  7104  196C  1303               	bcf	3,6	;RP1=0, select bank0
  7105  196D  0189               	clrf	9	;volatile
  7106  196E                     l3368:
  7107                           
  7108                           ;lab3_main.c: 149:     ANSEL = 0b00000011;
  7109  196E  3003               	movlw	3
  7110  196F  1683               	bsf	3,5	;RP0=1, select bank3
  7111  1970  1703               	bsf	3,6	;RP1=1, select bank3
  7112  1971  0088               	movwf	8	;volatile
  7113  1972                     l3370:
  7114                           
  7115                           ;lab3_main.c: 150:     ANSELH = 0;
  7116  1972  0189               	clrf	9	;volatile
  7117  1973                     l3372:
  7118                           
  7119                           ;lab3_main.c: 151:     TRISB = 0;
  7120  1973  1683               	bsf	3,5	;RP0=1, select bank1
  7121  1974  1303               	bcf	3,6	;RP1=0, select bank1
  7122  1975  0186               	clrf	6	;volatile
  7123  1976                     l3374:
  7124                           
  7125                           ;lab3_main.c: 152:     PORTB = 0;
  7126  1976  1283               	bcf	3,5	;RP0=0, select bank0
  7127  1977  1303               	bcf	3,6	;RP1=0, select bank0
  7128  1978  0186               	clrf	6	;volatile
  7129                           
  7130                           ;lab3_main.c: 153:     TRISC = 0b10000000;
  7131  1979  3080               	movlw	128
  7132  197A  1683               	bsf	3,5	;RP0=1, select bank1
  7133  197B  1303               	bcf	3,6	;RP1=0, select bank1
  7134  197C  0087               	movwf	7	;volatile
  7135  197D                     l3376:
  7136                           
  7137                           ;lab3_main.c: 154:     PORTC = 0;
  7138  197D  1283               	bcf	3,5	;RP0=0, select bank0
  7139  197E  1303               	bcf	3,6	;RP1=0, select bank0
  7140  197F  0187               	clrf	7	;volatile
  7141  1980                     l3378:
  7142                           
  7143                           ;lab3_main.c: 155:     TRISD = 0;
  7144  1980  1683               	bsf	3,5	;RP0=1, select bank1
  7145  1981  1303               	bcf	3,6	;RP1=0, select bank1
  7146  1982  0188               	clrf	8	;volatile
  7147  1983                     l3380:
  7148                           
  7149                           ;lab3_main.c: 156:     PORTD = 0;
  7150  1983  1283               	bcf	3,5	;RP0=0, select bank0
  7151  1984  1303               	bcf	3,6	;RP1=0, select bank0
  7152  1985  0188               	clrf	8	;volatile
  7153  1986                     l3382:
  7154                           
  7155                           ;lab3_main.c: 157:     PORTA = 0;
  7156  1986  0185               	clrf	5	;volatile
  7157                           
  7158                           ;lab3_main.c: 158:     TRISA = 0b00000011;
  7159  1987  3003               	movlw	3
  7160  1988  1683               	bsf	3,5	;RP0=1, select bank1
  7161  1989  1303               	bcf	3,6	;RP1=0, select bank1
  7162  198A  0085               	movwf	5	;volatile
  7163  198B                     l3384:
  7164                           
  7165                           ;lab3_main.c: 160:     INTCONbits.PEIE=1;
  7166  198B  170B               	bsf	11,6	;volatile
  7167  198C                     l3386:
  7168                           
  7169                           ;lab3_main.c: 161:     PIE1bits.RCIE=1;
  7170  198C  168C               	bsf	12,5	;volatile
  7171  198D                     l3388:
  7172                           
  7173                           ;lab3_main.c: 162:     PIR1bits.RCIF=0;
  7174  198D  1283               	bcf	3,5	;RP0=0, select bank0
  7175  198E  1303               	bcf	3,6	;RP1=0, select bank0
  7176  198F  128C               	bcf	12,5	;volatile
  7177  1990                     l3390:
  7178                           
  7179                           ;lab3_main.c: 163:     INTCONbits.GIE=1;
  7180  1990  178B               	bsf	11,7	;volatile
  7181  1991                     l100:
  7182  1991  0008               	return
  7183  1992                     __end_of_setup:
  7184                           
  7185                           	psect	text21
  7186  07F3                     __ptext21:	
  7187 ;; *************** function _initADC *****************
  7188 ;; Defined at:
  7189 ;;		line 6 in file "ADC.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;		None
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;		None
  7194 ;; Return value:  Size  Location     Type
  7195 ;;                  1    wreg      void 
  7196 ;; Registers used:
  7197 ;;		wreg, status,2
  7198 ;; Tracked objects:
  7199 ;;		On entry : 0/0
  7200 ;;		On exit  : 0/0
  7201 ;;		Unchanged: 0/0
  7202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7203 ;;      Params:         0       0       0       0       0
  7204 ;;      Locals:         0       0       0       0       0
  7205 ;;      Temps:          0       0       0       0       0
  7206 ;;      Totals:         0       0       0       0       0
  7207 ;;Total ram usage:        0 bytes
  7208 ;; Hardware stack levels used:    1
  7209 ;; Hardware stack levels required when called:    2
  7210 ;; This function calls:
  7211 ;;		Nothing
  7212 ;; This function is called by:
  7213 ;;		_main
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217                           
  7218                           ;psect for function _initADC
  7219  07F3                     _initADC:
  7220  07F3                     l3392:	
  7221                           ;incstack = 0
  7222                           ; Regs used in _initADC: [wreg+status,2]
  7223                           
  7224                           
  7225                           ;ADC.c: 12:     INTCONbits.PEIE = 1;
  7226  07F3  170B               	bsf	11,6	;volatile
  7227                           
  7228                           ;ADC.c: 13:     PIE1bits.ADIE = 1;
  7229  07F4  1683               	bsf	3,5	;RP0=1, select bank1
  7230  07F5  1303               	bcf	3,6	;RP1=0, select bank1
  7231  07F6  170C               	bsf	12,6	;volatile
  7232                           
  7233                           ;ADC.c: 14:     PIR1bits.ADIF = 0;
  7234  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  7235  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  7236  07F9  130C               	bcf	12,6	;volatile
  7237  07FA                     l3394:
  7238                           
  7239                           ;ADC.c: 15:     ADCON0 = 0b01000001;
  7240  07FA  3041               	movlw	65
  7241  07FB  009F               	movwf	31	;volatile
  7242  07FC                     l3396:
  7243                           
  7244                           ;ADC.c: 16:     ADCON1 = 0b00000000;
  7245  07FC  1683               	bsf	3,5	;RP0=1, select bank1
  7246  07FD  1303               	bcf	3,6	;RP1=0, select bank1
  7247  07FE  019F               	clrf	31	;volatile
  7248  07FF                     l158:
  7249  07FF  0008               	return
  7250  0800                     __end_of_initADC:
  7251                           
  7252                           	psect	text22
  7253  18B3                     __ptext22:	
  7254 ;; *************** function _USART_Write_String *****************
  7255 ;; Defined at:
  7256 ;;		line 43 in file "USART.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;  a               1    wreg     PTR unsigned char 
  7259 ;;		 -> pantalla(20), 
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;  a               1    5[COMMON] PTR unsigned char 
  7262 ;;		 -> pantalla(20), 
  7263 ;;  i               1    6[COMMON] unsigned char 
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  1    wreg      void 
  7266 ;; Registers used:
  7267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7273 ;;      Params:         0       0       0       0       0
  7274 ;;      Locals:         2       0       0       0       0
  7275 ;;      Temps:          1       0       0       0       0
  7276 ;;      Totals:         3       0       0       0       0
  7277 ;;Total ram usage:        3 bytes
  7278 ;; Hardware stack levels used:    1
  7279 ;; Hardware stack levels required when called:    3
  7280 ;; This function calls:
  7281 ;;		_USART_Write
  7282 ;; This function is called by:
  7283 ;;		_main
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           
  7288                           ;psect for function _USART_Write_String
  7289  18B3                     _USART_Write_String:
  7290                           
  7291                           ;incstack = 0
  7292                           ; Regs used in _USART_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7293                           ;USART_Write_String@a stored from wreg
  7294  18B3  00F5               	movwf	USART_Write_String@a
  7295  18B4                     l3728:
  7296                           
  7297                           ;USART.c: 44:     uint8_t i;;USART.c: 45:     for(i=0;a[i]!='\0';i++){
  7298  18B4  01F6               	clrf	USART_Write_String@i
  7299  18B5  28C5               	goto	l3734
  7300  18B6                     l3730:
  7301                           
  7302                           ;USART.c: 46:         USART_Write(a[i]);
  7303  18B6  0876               	movf	USART_Write_String@i,w
  7304  18B7  0775               	addwf	USART_Write_String@a,w
  7305  18B8  00F4               	movwf	??_USART_Write_String
  7306  18B9  0874               	movf	??_USART_Write_String,w
  7307  18BA  0084               	movwf	4
  7308  18BB  0800               	movf	0,w
  7309  18BC  160A  158A  206F  160A  158A  	fcall	_USART_Write
  7310  18C1                     l3732:
  7311                           
  7312                           ;USART.c: 47:     }
  7313  18C1  3001               	movlw	1
  7314  18C2  00F4               	movwf	??_USART_Write_String
  7315  18C3  0874               	movf	??_USART_Write_String,w
  7316  18C4  07F6               	addwf	USART_Write_String@i,f
  7317  18C5                     l3734:
  7318  18C5  0876               	movf	USART_Write_String@i,w
  7319  18C6  0775               	addwf	USART_Write_String@a,w
  7320  18C7  00F4               	movwf	??_USART_Write_String
  7321  18C8  0874               	movf	??_USART_Write_String,w
  7322  18C9  0084               	movwf	4
  7323  18CA  1383               	bcf	3,7	;select IRP bank0
  7324  18CB  0800               	movf	0,w
  7325  18CC  1D03               	btfss	3,2
  7326  18CD  28CF               	goto	u5761
  7327  18CE  28D0               	goto	u5760
  7328  18CF                     u5761:
  7329  18CF  28B6               	goto	l3730
  7330  18D0                     u5760:
  7331  18D0                     l235:
  7332  18D0  0008               	return
  7333  18D1                     __end_of_USART_Write_String:
  7334                           
  7335                           	psect	text23
  7336  186F                     __ptext23:	
  7337 ;; *************** function _USART_Write *****************
  7338 ;; Defined at:
  7339 ;;		line 39 in file "USART.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;  a               1    wreg     unsigned char 
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;  a               1    3[COMMON] unsigned char 
  7344 ;; Return value:  Size  Location     Type
  7345 ;;                  1    wreg      void 
  7346 ;; Registers used:
  7347 ;;		wreg
  7348 ;; Tracked objects:
  7349 ;;		On entry : 0/0
  7350 ;;		On exit  : 0/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7353 ;;      Params:         0       0       0       0       0
  7354 ;;      Locals:         1       0       0       0       0
  7355 ;;      Temps:          0       0       0       0       0
  7356 ;;      Totals:         1       0       0       0       0
  7357 ;;Total ram usage:        1 bytes
  7358 ;; Hardware stack levels used:    1
  7359 ;; Hardware stack levels required when called:    2
  7360 ;; This function calls:
  7361 ;;		Nothing
  7362 ;; This function is called by:
  7363 ;;		_main
  7364 ;;		_USART_Write_String
  7365 ;; This function uses a non-reentrant model
  7366 ;;
  7367                           
  7368                           
  7369                           ;psect for function _USART_Write
  7370  186F                     _USART_Write:
  7371                           
  7372                           ;incstack = 0
  7373                           ; Regs used in _USART_Write: [wreg]
  7374                           ;USART_Write@a stored from wreg
  7375  186F  00F3               	movwf	USART_Write@a
  7376  1870                     l2934:
  7377  1870                     l226:	
  7378                           ;USART.c: 40:     while(!TRMT);
  7379                           
  7380  1870  1683               	bsf	3,5	;RP0=1, select bank1
  7381  1871  1303               	bcf	3,6	;RP1=0, select bank1
  7382  1872  1C98               	btfss	24,1	;volatile
  7383  1873  2875               	goto	u4151
  7384  1874  2876               	goto	u4150
  7385  1875                     u4151:
  7386  1875  2870               	goto	l226
  7387  1876                     u4150:
  7388  1876                     l2936:
  7389                           
  7390                           ;USART.c: 41:     TXREG=a;
  7391  1876  0873               	movf	USART_Write@a,w
  7392  1877  1283               	bcf	3,5	;RP0=0, select bank0
  7393  1878  1303               	bcf	3,6	;RP1=0, select bank0
  7394  1879  0099               	movwf	25	;volatile
  7395  187A                     l229:
  7396  187A  0008               	return
  7397  187B                     __end_of_USART_Write:
  7398                           
  7399                           	psect	text24
  7400  1847                     __ptext24:	
  7401 ;; *************** function _Set_Baud_Rate *****************
  7402 ;; Defined at:
  7403 ;;		line 10 in file "USART.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;		None
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;		None
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  1    wreg      void 
  7410 ;; Registers used:
  7411 ;;		wreg
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7417 ;;      Params:         0       0       0       0       0
  7418 ;;      Locals:         0       0       0       0       0
  7419 ;;      Temps:          0       0       0       0       0
  7420 ;;      Totals:         0       0       0       0       0
  7421 ;;Total ram usage:        0 bytes
  7422 ;; Hardware stack levels used:    1
  7423 ;; Hardware stack levels required when called:    2
  7424 ;; This function calls:
  7425 ;;		Nothing
  7426 ;; This function is called by:
  7427 ;;		_main
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           
  7432                           ;psect for function _Set_Baud_Rate
  7433  1847                     _Set_Baud_Rate:
  7434  1847                     l3412:	
  7435                           ;incstack = 0
  7436                           ; Regs used in _Set_Baud_Rate: [wreg]
  7437                           
  7438                           
  7439                           ;USART.c: 11:     SPBRG = 12;
  7440  1847  300C               	movlw	12
  7441  1848  1683               	bsf	3,5	;RP0=1, select bank1
  7442  1849  1303               	bcf	3,6	;RP1=0, select bank1
  7443  184A  0099               	movwf	25	;volatile
  7444  184B                     l217:
  7445  184B  0008               	return
  7446  184C                     __end_of_Set_Baud_Rate:
  7447                           
  7448                           	psect	text25
  7449  1BCA                     __ptext25:	
  7450 ;; *************** function _LeerADC *****************
  7451 ;; Defined at:
  7452 ;;		line 176 in file "lab3_main.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;  x               1    wreg     unsigned char 
  7455 ;; Auto vars:     Size  Location     Type
  7456 ;;  x               1   44[BANK0 ] unsigned char 
  7457 ;;  a               4   45[BANK0 ] float 
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  4   36[BANK0 ] float 
  7460 ;; Registers used:
  7461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7467 ;;      Params:         0       4       0       0       0
  7468 ;;      Locals:         0       5       0       0       0
  7469 ;;      Temps:          0       4       0       0       0
  7470 ;;      Totals:         0      13       0       0       0
  7471 ;;Total ram usage:       13 bytes
  7472 ;; Hardware stack levels used:    1
  7473 ;; Hardware stack levels required when called:    4
  7474 ;; This function calls:
  7475 ;;		_ADC_Select
  7476 ;;		___flmul
  7477 ;;		___xxtofl
  7478 ;; This function is called by:
  7479 ;;		_main
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           
  7484                           ;psect for function _LeerADC
  7485  1BCA                     _LeerADC:
  7486                           
  7487                           ;incstack = 0
  7488                           ; Regs used in _LeerADC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7489                           ;LeerADC@x stored from wreg
  7490  1BCA  1283               	bcf	3,5	;RP0=0, select bank0
  7491  1BCB  1303               	bcf	3,6	;RP1=0, select bank0
  7492  1BCC  00CC               	movwf	LeerADC@x
  7493  1BCD                     l4224:
  7494  1BCD                     l4226:
  7495                           
  7496                           ;lab3_main.c: 178:     ADC_Select(x);
  7497  1BCD  084C               	movf	LeerADC@x,w
  7498  1BCE  160A  158A  2489  160A  158A  	fcall	_ADC_Select
  7499  1BD3                     l4228:
  7500                           
  7501                           ;lab3_main.c: 179:     ADCON0bits.ADON=1;
  7502  1BD3  1283               	bcf	3,5	;RP0=0, select bank0
  7503  1BD4  1303               	bcf	3,6	;RP1=0, select bank0
  7504  1BD5  141F               	bsf	31,0	;volatile
  7505  1BD6                     l4230:
  7506                           
  7507                           ;lab3_main.c: 180:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  7508  1BD6  300C               	movlw	12
  7509  1BD7  1283               	bcf	3,5	;RP0=0, select bank0
  7510  1BD8  1303               	bcf	3,6	;RP1=0, select bank0
  7511  1BD9  00C8               	movwf	??_LeerADC
  7512  1BDA                     u7437:
  7513  1BDA  0BC8               	decfsz	??_LeerADC,f
  7514  1BDB  2BDA               	goto	u7437
  7515  1BDC  0000               	nop
  7516  1BDD                     l4232:
  7517                           
  7518                           ;lab3_main.c: 181:     ADCON0bits.GO=1;
  7519  1BDD  1283               	bcf	3,5	;RP0=0, select bank0
  7520  1BDE  1303               	bcf	3,6	;RP1=0, select bank0
  7521  1BDF  149F               	bsf	31,1	;volatile
  7522  1BE0                     l103:	
  7523                           ;lab3_main.c: 182:     while(ADCON0bits.GO_DONE==1){};
  7524                           
  7525  1BE0  189F               	btfsc	31,1	;volatile
  7526  1BE1  2BE3               	goto	u6831
  7527  1BE2  2BE4               	goto	u6830
  7528  1BE3                     u6831:
  7529  1BE3  2BE0               	goto	l103
  7530  1BE4                     u6830:
  7531  1BE4                     l4234:
  7532                           
  7533                           ;lab3_main.c: 184:     a = ADRESH * 0.0196;
  7534  1BE4  303C               	movlw	60
  7535  1BE5  00AD               	movwf	___flmul@b+3
  7536  1BE6  30A0               	movlw	160
  7537  1BE7  00AC               	movwf	___flmul@b+2
  7538  1BE8  3090               	movlw	144
  7539  1BE9  00AB               	movwf	___flmul@b+1
  7540  1BEA  302E               	movlw	46
  7541  1BEB  00AA               	movwf	___flmul@b
  7542  1BEC  081E               	movf	30,w	;volatile
  7543  1BED  00C8               	movwf	??_LeerADC
  7544  1BEE  01C9               	clrf	??_LeerADC+1
  7545  1BEF  01CA               	clrf	??_LeerADC+2
  7546  1BF0  01CB               	clrf	??_LeerADC+3
  7547  1BF1  084B               	movf	??_LeerADC+3,w
  7548  1BF2  00F6               	movwf	___xxtofl@val+3
  7549  1BF3  084A               	movf	??_LeerADC+2,w
  7550  1BF4  00F5               	movwf	___xxtofl@val+2
  7551  1BF5  0849               	movf	??_LeerADC+1,w
  7552  1BF6  00F4               	movwf	___xxtofl@val+1
  7553  1BF7  0848               	movf	??_LeerADC,w
  7554  1BF8  00F3               	movwf	___xxtofl@val
  7555  1BF9  3001               	movlw	1
  7556  1BFA  160A  158A  25C9  160A  158A  	fcall	___xxtofl
  7557  1BFF  0876               	movf	?___xxtofl+3,w
  7558  1C00  1283               	bcf	3,5	;RP0=0, select bank0
  7559  1C01  1303               	bcf	3,6	;RP1=0, select bank0
  7560  1C02  00B1               	movwf	___flmul@a+3
  7561  1C03  0875               	movf	?___xxtofl+2,w
  7562  1C04  00B0               	movwf	___flmul@a+2
  7563  1C05  0874               	movf	?___xxtofl+1,w
  7564  1C06  00AF               	movwf	___flmul@a+1
  7565  1C07  0873               	movf	?___xxtofl,w
  7566  1C08  00AE               	movwf	___flmul@a
  7567  1C09  120A  158A  213C  160A  158A  	fcall	___flmul
  7568  1C0E  1283               	bcf	3,5	;RP0=0, select bank0
  7569  1C0F  1303               	bcf	3,6	;RP1=0, select bank0
  7570  1C10  082D               	movf	?___flmul+3,w
  7571  1C11  00D0               	movwf	LeerADC@a+3
  7572  1C12  082C               	movf	?___flmul+2,w
  7573  1C13  00CF               	movwf	LeerADC@a+2
  7574  1C14  082B               	movf	?___flmul+1,w
  7575  1C15  00CE               	movwf	LeerADC@a+1
  7576  1C16  082A               	movf	?___flmul,w
  7577  1C17  00CD               	movwf	LeerADC@a
  7578  1C18                     l4236:
  7579                           
  7580                           ;lab3_main.c: 185:     return a;
  7581  1C18  0850               	movf	LeerADC@a+3,w
  7582  1C19  00C7               	movwf	?_LeerADC+3
  7583  1C1A  084F               	movf	LeerADC@a+2,w
  7584  1C1B  00C6               	movwf	?_LeerADC+2
  7585  1C1C  084E               	movf	LeerADC@a+1,w
  7586  1C1D  00C5               	movwf	?_LeerADC+1
  7587  1C1E  084D               	movf	LeerADC@a,w
  7588  1C1F  00C4               	movwf	?_LeerADC
  7589  1C20                     l106:
  7590  1C20  0008               	return
  7591  1C21                     __end_of_LeerADC:
  7592                           
  7593                           	psect	text26
  7594  1DC9                     __ptext26:	
  7595 ;; *************** function ___xxtofl *****************
  7596 ;; Defined at:
  7597 ;;		line 10 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7598 ;; Parameters:    Size  Location     Type
  7599 ;;  sign            1    wreg     unsigned char 
  7600 ;;  val             4    3[COMMON] long 
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;  sign            1    4[BANK0 ] unsigned char 
  7603 ;;  arg             4    6[BANK0 ] unsigned long 
  7604 ;;  exp             1    5[BANK0 ] unsigned char 
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  4    3[COMMON] unsigned char 
  7607 ;; Registers used:
  7608 ;;		wreg, status,2, status,0
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 0/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7614 ;;      Params:         4       0       0       0       0
  7615 ;;      Locals:         0       6       0       0       0
  7616 ;;      Temps:          0       4       0       0       0
  7617 ;;      Totals:         4      10       0       0       0
  7618 ;;Total ram usage:       14 bytes
  7619 ;; Hardware stack levels used:    1
  7620 ;; Hardware stack levels required when called:    2
  7621 ;; This function calls:
  7622 ;;		Nothing
  7623 ;; This function is called by:
  7624 ;;		_LeerADC
  7625 ;;		_sprintf
  7626 ;; This function uses a non-reentrant model
  7627 ;;
  7628                           
  7629                           
  7630                           ;psect for function ___xxtofl
  7631  1DC9                     ___xxtofl:
  7632                           
  7633                           ;incstack = 0
  7634                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7635                           ;___xxtofl@sign stored from wreg
  7636  1DC9  1283               	bcf	3,5	;RP0=0, select bank0
  7637  1DCA  1303               	bcf	3,6	;RP1=0, select bank0
  7638  1DCB  00A4               	movwf	___xxtofl@sign
  7639  1DCC                     l4166:
  7640  1DCC  0824               	movf	___xxtofl@sign,w
  7641  1DCD  1903               	btfsc	3,2
  7642  1DCE  2DD0               	goto	u6691
  7643  1DCF  2DD1               	goto	u6690
  7644  1DD0                     u6691:
  7645  1DD0  2DE5               	goto	l4172
  7646  1DD1                     u6690:
  7647  1DD1                     l4168:
  7648  1DD1  1FF6               	btfss	___xxtofl@val+3,7
  7649  1DD2  2DD4               	goto	u6701
  7650  1DD3  2DD5               	goto	u6700
  7651  1DD4                     u6701:
  7652  1DD4  2DE5               	goto	l4172
  7653  1DD5                     u6700:
  7654  1DD5                     l4170:
  7655  1DD5  0973               	comf	___xxtofl@val,w
  7656  1DD6  00A6               	movwf	___xxtofl@arg
  7657  1DD7  0974               	comf	___xxtofl@val+1,w
  7658  1DD8  00A7               	movwf	___xxtofl@arg+1
  7659  1DD9  0975               	comf	___xxtofl@val+2,w
  7660  1DDA  00A8               	movwf	___xxtofl@arg+2
  7661  1DDB  0976               	comf	___xxtofl@val+3,w
  7662  1DDC  00A9               	movwf	___xxtofl@arg+3
  7663  1DDD  0AA6               	incf	___xxtofl@arg,f
  7664  1DDE  1903               	skipnz
  7665  1DDF  0AA7               	incf	___xxtofl@arg+1,f
  7666  1DE0  1903               	skipnz
  7667  1DE1  0AA8               	incf	___xxtofl@arg+2,f
  7668  1DE2  1903               	skipnz
  7669  1DE3  0AA9               	incf	___xxtofl@arg+3,f
  7670  1DE4  2DED               	goto	l918
  7671  1DE5                     l4172:
  7672  1DE5  0876               	movf	___xxtofl@val+3,w
  7673  1DE6  00A9               	movwf	___xxtofl@arg+3
  7674  1DE7  0875               	movf	___xxtofl@val+2,w
  7675  1DE8  00A8               	movwf	___xxtofl@arg+2
  7676  1DE9  0874               	movf	___xxtofl@val+1,w
  7677  1DEA  00A7               	movwf	___xxtofl@arg+1
  7678  1DEB  0873               	movf	___xxtofl@val,w
  7679  1DEC  00A6               	movwf	___xxtofl@arg
  7680  1DED                     l918:
  7681  1DED  0876               	movf	___xxtofl@val+3,w
  7682  1DEE  0475               	iorwf	___xxtofl@val+2,w
  7683  1DEF  0474               	iorwf	___xxtofl@val+1,w
  7684  1DF0  0473               	iorwf	___xxtofl@val,w
  7685  1DF1  1D03               	skipz
  7686  1DF2  2DF4               	goto	u6711
  7687  1DF3  2DF5               	goto	u6710
  7688  1DF4                     u6711:
  7689  1DF4  2DFE               	goto	l4178
  7690  1DF5                     u6710:
  7691  1DF5                     l4174:
  7692  1DF5  3000               	movlw	0
  7693  1DF6  00F6               	movwf	?___xxtofl+3
  7694  1DF7  3000               	movlw	0
  7695  1DF8  00F5               	movwf	?___xxtofl+2
  7696  1DF9  3000               	movlw	0
  7697  1DFA  00F4               	movwf	?___xxtofl+1
  7698  1DFB  3000               	movlw	0
  7699  1DFC  00F3               	movwf	?___xxtofl
  7700  1DFD  2E84               	goto	l920
  7701  1DFE                     l4178:
  7702  1DFE  3096               	movlw	150
  7703  1DFF  00A0               	movwf	??___xxtofl
  7704  1E00  0820               	movf	??___xxtofl,w
  7705  1E01  00A5               	movwf	___xxtofl@exp
  7706  1E02  2E10               	goto	l4182
  7707  1E03                     l4180:
  7708  1E03  3001               	movlw	1
  7709  1E04  00A0               	movwf	??___xxtofl
  7710  1E05  0820               	movf	??___xxtofl,w
  7711  1E06  07A5               	addwf	___xxtofl@exp,f
  7712  1E07  3001               	movlw	1
  7713  1E08                     u6725:
  7714  1E08  1003               	clrc
  7715  1E09  0CA9               	rrf	___xxtofl@arg+3,f
  7716  1E0A  0CA8               	rrf	___xxtofl@arg+2,f
  7717  1E0B  0CA7               	rrf	___xxtofl@arg+1,f
  7718  1E0C  0CA6               	rrf	___xxtofl@arg,f
  7719  1E0D  3EFF               	addlw	-1
  7720  1E0E  1D03               	skipz
  7721  1E0F  2E08               	goto	u6725
  7722  1E10                     l4182:
  7723  1E10  30FE               	movlw	254
  7724  1E11  0529               	andwf	___xxtofl@arg+3,w
  7725  1E12  1D03               	btfss	3,2
  7726  1E13  2E15               	goto	u6731
  7727  1E14  2E16               	goto	u6730
  7728  1E15                     u6731:
  7729  1E15  2E03               	goto	l4180
  7730  1E16                     u6730:
  7731  1E16  2E32               	goto	l924
  7732  1E17                     l4184:
  7733  1E17  3001               	movlw	1
  7734  1E18  00A0               	movwf	??___xxtofl
  7735  1E19  0820               	movf	??___xxtofl,w
  7736  1E1A  07A5               	addwf	___xxtofl@exp,f
  7737  1E1B                     l4186:
  7738  1E1B  3001               	movlw	1
  7739  1E1C  07A6               	addwf	___xxtofl@arg,f
  7740  1E1D  3000               	movlw	0
  7741  1E1E  1803               	skipnc
  7742  1E1F  3001               	movlw	1
  7743  1E20  07A7               	addwf	___xxtofl@arg+1,f
  7744  1E21  3000               	movlw	0
  7745  1E22  1803               	skipnc
  7746  1E23  3001               	movlw	1
  7747  1E24  07A8               	addwf	___xxtofl@arg+2,f
  7748  1E25  3000               	movlw	0
  7749  1E26  1803               	skipnc
  7750  1E27  3001               	movlw	1
  7751  1E28  07A9               	addwf	___xxtofl@arg+3,f
  7752  1E29                     l4188:
  7753  1E29  3001               	movlw	1
  7754  1E2A                     u6745:
  7755  1E2A  1003               	clrc
  7756  1E2B  0CA9               	rrf	___xxtofl@arg+3,f
  7757  1E2C  0CA8               	rrf	___xxtofl@arg+2,f
  7758  1E2D  0CA7               	rrf	___xxtofl@arg+1,f
  7759  1E2E  0CA6               	rrf	___xxtofl@arg,f
  7760  1E2F  3EFF               	addlw	-1
  7761  1E30  1D03               	skipz
  7762  1E31  2E2A               	goto	u6745
  7763  1E32                     l924:
  7764  1E32  30FF               	movlw	255
  7765  1E33  0529               	andwf	___xxtofl@arg+3,w
  7766  1E34  1D03               	btfss	3,2
  7767  1E35  2E37               	goto	u6751
  7768  1E36  2E38               	goto	u6750
  7769  1E37                     u6751:
  7770  1E37  2E17               	goto	l4184
  7771  1E38                     u6750:
  7772  1E38  2E44               	goto	l4192
  7773  1E39                     l4190:
  7774  1E39  3001               	movlw	1
  7775  1E3A  02A5               	subwf	___xxtofl@exp,f
  7776  1E3B  3001               	movlw	1
  7777  1E3C  00A0               	movwf	??___xxtofl
  7778  1E3D                     u6765:
  7779  1E3D  1003               	clrc
  7780  1E3E  0DA6               	rlf	___xxtofl@arg,f
  7781  1E3F  0DA7               	rlf	___xxtofl@arg+1,f
  7782  1E40  0DA8               	rlf	___xxtofl@arg+2,f
  7783  1E41  0DA9               	rlf	___xxtofl@arg+3,f
  7784  1E42  0BA0               	decfsz	??___xxtofl,f
  7785  1E43  2E3D               	goto	u6765
  7786  1E44                     l4192:
  7787  1E44  1BA8               	btfsc	___xxtofl@arg+2,7
  7788  1E45  2E47               	goto	u6771
  7789  1E46  2E48               	goto	u6770
  7790  1E47                     u6771:
  7791  1E47  2E4E               	goto	l931
  7792  1E48                     u6770:
  7793  1E48                     l4194:
  7794  1E48  3002               	movlw	2
  7795  1E49  0225               	subwf	___xxtofl@exp,w
  7796  1E4A  1803               	skipnc
  7797  1E4B  2E4D               	goto	u6781
  7798  1E4C  2E4E               	goto	u6780
  7799  1E4D                     u6781:
  7800  1E4D  2E39               	goto	l4190
  7801  1E4E                     u6780:
  7802  1E4E                     l931:
  7803  1E4E  1825               	btfsc	___xxtofl@exp,0
  7804  1E4F  2E51               	goto	u6791
  7805  1E50  2E52               	goto	u6790
  7806  1E51                     u6791:
  7807  1E51  2E5A               	goto	l932
  7808  1E52                     u6790:
  7809  1E52                     l4196:
  7810  1E52  30FF               	movlw	255
  7811  1E53  05A6               	andwf	___xxtofl@arg,f
  7812  1E54  30FF               	movlw	255
  7813  1E55  05A7               	andwf	___xxtofl@arg+1,f
  7814  1E56  307F               	movlw	127
  7815  1E57  05A8               	andwf	___xxtofl@arg+2,f
  7816  1E58  30FF               	movlw	255
  7817  1E59  05A9               	andwf	___xxtofl@arg+3,f
  7818  1E5A                     l932:
  7819  1E5A  1003               	clrc
  7820  1E5B  0CA5               	rrf	___xxtofl@exp,f
  7821  1E5C                     l4198:
  7822  1E5C  0825               	movf	___xxtofl@exp,w
  7823  1E5D  00A0               	movwf	??___xxtofl
  7824  1E5E  01A1               	clrf	??___xxtofl+1
  7825  1E5F  01A2               	clrf	??___xxtofl+2
  7826  1E60  01A3               	clrf	??___xxtofl+3
  7827  1E61  3018               	movlw	24
  7828  1E62                     u6805:
  7829  1E62  1003               	clrc
  7830  1E63  0DA0               	rlf	??___xxtofl,f
  7831  1E64  0DA1               	rlf	??___xxtofl+1,f
  7832  1E65  0DA2               	rlf	??___xxtofl+2,f
  7833  1E66  0DA3               	rlf	??___xxtofl+3,f
  7834  1E67                     u6800:
  7835  1E67  3EFF               	addlw	-1
  7836  1E68  1D03               	skipz
  7837  1E69  2E62               	goto	u6805
  7838  1E6A  0820               	movf	??___xxtofl,w
  7839  1E6B  04A6               	iorwf	___xxtofl@arg,f
  7840  1E6C  0821               	movf	??___xxtofl+1,w
  7841  1E6D  04A7               	iorwf	___xxtofl@arg+1,f
  7842  1E6E  0822               	movf	??___xxtofl+2,w
  7843  1E6F  04A8               	iorwf	___xxtofl@arg+2,f
  7844  1E70  0823               	movf	??___xxtofl+3,w
  7845  1E71  04A9               	iorwf	___xxtofl@arg+3,f
  7846  1E72                     l4200:
  7847  1E72  0824               	movf	___xxtofl@sign,w
  7848  1E73  1903               	btfsc	3,2
  7849  1E74  2E76               	goto	u6811
  7850  1E75  2E77               	goto	u6810
  7851  1E76                     u6811:
  7852  1E76  2E7C               	goto	l4206
  7853  1E77                     u6810:
  7854  1E77                     l4202:
  7855  1E77  1FF6               	btfss	___xxtofl@val+3,7
  7856  1E78  2E7A               	goto	u6821
  7857  1E79  2E7B               	goto	u6820
  7858  1E7A                     u6821:
  7859  1E7A  2E7C               	goto	l4206
  7860  1E7B                     u6820:
  7861  1E7B                     l4204:
  7862  1E7B  17A9               	bsf	___xxtofl@arg+3,7
  7863  1E7C                     l4206:
  7864  1E7C  0829               	movf	___xxtofl@arg+3,w
  7865  1E7D  00F6               	movwf	?___xxtofl+3
  7866  1E7E  0828               	movf	___xxtofl@arg+2,w
  7867  1E7F  00F5               	movwf	?___xxtofl+2
  7868  1E80  0827               	movf	___xxtofl@arg+1,w
  7869  1E81  00F4               	movwf	?___xxtofl+1
  7870  1E82  0826               	movf	___xxtofl@arg,w
  7871  1E83  00F3               	movwf	?___xxtofl
  7872  1E84                     l920:
  7873  1E84  0008               	return
  7874  1E85                     __end_of___xxtofl:
  7875                           
  7876                           	psect	text27
  7877  093C                     __ptext27:	
  7878 ;; *************** function ___flmul *****************
  7879 ;; Defined at:
  7880 ;;		line 8 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;  b               4   10[BANK0 ] unsigned char 
  7883 ;;  a               4   14[BANK0 ] unsigned char 
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;  prod            4   30[BANK0 ] struct .
  7886 ;;  grs             4   24[BANK0 ] unsigned long 
  7887 ;;  temp            2   34[BANK0 ] struct .
  7888 ;;  bexp            1   29[BANK0 ] unsigned char 
  7889 ;;  aexp            1   28[BANK0 ] unsigned char 
  7890 ;;  sign            1   23[BANK0 ] unsigned char 
  7891 ;; Return value:  Size  Location     Type
  7892 ;;                  4   10[BANK0 ] unsigned char 
  7893 ;; Registers used:
  7894 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7900 ;;      Params:         0       8       0       0       0
  7901 ;;      Locals:         0      13       0       0       0
  7902 ;;      Temps:          0       5       0       0       0
  7903 ;;      Totals:         0      26       0       0       0
  7904 ;;Total ram usage:       26 bytes
  7905 ;; Hardware stack levels used:    1
  7906 ;; Hardware stack levels required when called:    3
  7907 ;; This function calls:
  7908 ;;		__Umul8_16
  7909 ;; This function is called by:
  7910 ;;		_LeerADC
  7911 ;;		_fround
  7912 ;;		_scale
  7913 ;;		_sprintf
  7914 ;; This function uses a non-reentrant model
  7915 ;;
  7916                           
  7917                           
  7918                           ;psect for function ___flmul
  7919  093C                     ___flmul:
  7920  093C                     l2794:	
  7921                           ;incstack = 0
  7922                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7923                           
  7924  093C  1283               	bcf	3,5	;RP0=0, select bank0
  7925  093D  1303               	bcf	3,6	;RP1=0, select bank0
  7926  093E  082D               	movf	___flmul@b+3,w
  7927  093F  3980               	andlw	128
  7928  0940  00B2               	movwf	??___flmul
  7929  0941  0832               	movf	??___flmul,w
  7930  0942  00B7               	movwf	___flmul@sign
  7931  0943                     l2796:
  7932  0943  082D               	movf	___flmul@b+3,w
  7933  0944  00B2               	movwf	??___flmul
  7934  0945  0732               	addwf	??___flmul,w
  7935  0946  00B3               	movwf	??___flmul+1
  7936  0947  0833               	movf	??___flmul+1,w
  7937  0948  00BD               	movwf	___flmul@bexp
  7938  0949                     l2798:
  7939  0949  1FAC               	btfss	___flmul@b+2,7
  7940  094A  294C               	goto	u3781
  7941  094B  294D               	goto	u3780
  7942  094C                     u3781:
  7943  094C  294E               	goto	l2802
  7944  094D                     u3780:
  7945  094D                     l2800:
  7946  094D  143D               	bsf	___flmul@bexp,0
  7947  094E                     l2802:
  7948  094E  083D               	movf	___flmul@bexp,w
  7949  094F  1903               	btfsc	3,2
  7950  0950  2952               	goto	u3791
  7951  0951  2953               	goto	u3790
  7952  0952                     u3791:
  7953  0952  2962               	goto	l2810
  7954  0953                     u3790:
  7955  0953                     l2804:
  7956  0953  0A3D               	incf	___flmul@bexp,w
  7957  0954  1D03               	btfss	3,2
  7958  0955  2957               	goto	u3801
  7959  0956  2958               	goto	u3800
  7960  0957                     u3801:
  7961  0957  2960               	goto	l2808
  7962  0958                     u3800:
  7963  0958                     l2806:
  7964  0958  3000               	movlw	0
  7965  0959  00AD               	movwf	___flmul@b+3
  7966  095A  3000               	movlw	0
  7967  095B  00AC               	movwf	___flmul@b+2
  7968  095C  3000               	movlw	0
  7969  095D  00AB               	movwf	___flmul@b+1
  7970  095E  3000               	movlw	0
  7971  095F  00AA               	movwf	___flmul@b
  7972  0960                     l2808:
  7973  0960  17AC               	bsf	___flmul@b+2,7
  7974  0961  296A               	goto	l2812
  7975  0962                     l2810:
  7976  0962  3000               	movlw	0
  7977  0963  00AD               	movwf	___flmul@b+3
  7978  0964  3000               	movlw	0
  7979  0965  00AC               	movwf	___flmul@b+2
  7980  0966  3000               	movlw	0
  7981  0967  00AB               	movwf	___flmul@b+1
  7982  0968  3000               	movlw	0
  7983  0969  00AA               	movwf	___flmul@b
  7984  096A                     l2812:
  7985  096A  0831               	movf	___flmul@a+3,w
  7986  096B  3980               	andlw	128
  7987  096C  00B2               	movwf	??___flmul
  7988  096D  0832               	movf	??___flmul,w
  7989  096E  06B7               	xorwf	___flmul@sign,f
  7990  096F                     l2814:
  7991  096F  0831               	movf	___flmul@a+3,w
  7992  0970  00B2               	movwf	??___flmul
  7993  0971  0732               	addwf	??___flmul,w
  7994  0972  00B3               	movwf	??___flmul+1
  7995  0973  0833               	movf	??___flmul+1,w
  7996  0974  00BC               	movwf	___flmul@aexp
  7997  0975                     l2816:
  7998  0975  1FB0               	btfss	___flmul@a+2,7
  7999  0976  2978               	goto	u3811
  8000  0977  2979               	goto	u3810
  8001  0978                     u3811:
  8002  0978  297A               	goto	l2820
  8003  0979                     u3810:
  8004  0979                     l2818:
  8005  0979  143C               	bsf	___flmul@aexp,0
  8006  097A                     l2820:
  8007  097A  083C               	movf	___flmul@aexp,w
  8008  097B  1903               	btfsc	3,2
  8009  097C  297E               	goto	u3821
  8010  097D  297F               	goto	u3820
  8011  097E                     u3821:
  8012  097E  298E               	goto	l2828
  8013  097F                     u3820:
  8014  097F                     l2822:
  8015  097F  0A3C               	incf	___flmul@aexp,w
  8016  0980  1D03               	btfss	3,2
  8017  0981  2983               	goto	u3831
  8018  0982  2984               	goto	u3830
  8019  0983                     u3831:
  8020  0983  298C               	goto	l2826
  8021  0984                     u3830:
  8022  0984                     l2824:
  8023  0984  3000               	movlw	0
  8024  0985  00B1               	movwf	___flmul@a+3
  8025  0986  3000               	movlw	0
  8026  0987  00B0               	movwf	___flmul@a+2
  8027  0988  3000               	movlw	0
  8028  0989  00AF               	movwf	___flmul@a+1
  8029  098A  3000               	movlw	0
  8030  098B  00AE               	movwf	___flmul@a
  8031  098C                     l2826:
  8032  098C  17B0               	bsf	___flmul@a+2,7
  8033  098D  2996               	goto	l2830
  8034  098E                     l2828:
  8035  098E  3000               	movlw	0
  8036  098F  00B1               	movwf	___flmul@a+3
  8037  0990  3000               	movlw	0
  8038  0991  00B0               	movwf	___flmul@a+2
  8039  0992  3000               	movlw	0
  8040  0993  00AF               	movwf	___flmul@a+1
  8041  0994  3000               	movlw	0
  8042  0995  00AE               	movwf	___flmul@a
  8043  0996                     l2830:
  8044  0996  083C               	movf	___flmul@aexp,w
  8045  0997  1903               	btfsc	3,2
  8046  0998  299A               	goto	u3841
  8047  0999  299B               	goto	u3840
  8048  099A                     u3841:
  8049  099A  29A0               	goto	l2834
  8050  099B                     u3840:
  8051  099B                     l2832:
  8052  099B  083D               	movf	___flmul@bexp,w
  8053  099C  1D03               	btfss	3,2
  8054  099D  299F               	goto	u3851
  8055  099E  29A0               	goto	u3850
  8056  099F                     u3851:
  8057  099F  29A9               	goto	l2838
  8058  09A0                     u3850:
  8059  09A0                     l2834:
  8060  09A0  3000               	movlw	0
  8061  09A1  00AD               	movwf	?___flmul+3
  8062  09A2  3000               	movlw	0
  8063  09A3  00AC               	movwf	?___flmul+2
  8064  09A4  3000               	movlw	0
  8065  09A5  00AB               	movwf	?___flmul+1
  8066  09A6  3000               	movlw	0
  8067  09A7  00AA               	movwf	?___flmul
  8068  09A8  2C9C               	goto	l874
  8069  09A9                     l2838:
  8070  09A9  082A               	movf	___flmul@b,w
  8071  09AA  00B2               	movwf	??___flmul
  8072  09AB  0832               	movf	??___flmul,w
  8073  09AC  00F3               	movwf	__Umul8_16@multiplicand
  8074  09AD  0830               	movf	___flmul@a+2,w
  8075  09AE  160A  158A  213F  120A  158A  	fcall	__Umul8_16
  8076  09B3  0874               	movf	?__Umul8_16+1,w
  8077  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  8078  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  8079  09B6  00C3               	movwf	___flmul@temp+1
  8080  09B7  0873               	movf	?__Umul8_16,w
  8081  09B8  00C2               	movwf	___flmul@temp
  8082  09B9                     l2840:
  8083  09B9  0842               	movf	___flmul@temp,w
  8084  09BA  00B2               	movwf	??___flmul
  8085  09BB  01B3               	clrf	??___flmul+1
  8086  09BC  01B4               	clrf	??___flmul+2
  8087  09BD  01B5               	clrf	??___flmul+3
  8088  09BE  0835               	movf	??___flmul+3,w
  8089  09BF  00BB               	movwf	___flmul@grs+3
  8090  09C0  0834               	movf	??___flmul+2,w
  8091  09C1  00BA               	movwf	___flmul@grs+2
  8092  09C2  0833               	movf	??___flmul+1,w
  8093  09C3  00B9               	movwf	___flmul@grs+1
  8094  09C4  0832               	movf	??___flmul,w
  8095  09C5  00B8               	movwf	___flmul@grs
  8096  09C6                     l2842:
  8097  09C6  0843               	movf	___flmul@temp+1,w
  8098  09C7  00B2               	movwf	??___flmul
  8099  09C8  01B3               	clrf	??___flmul+1
  8100  09C9  01B4               	clrf	??___flmul+2
  8101  09CA  01B5               	clrf	??___flmul+3
  8102  09CB  0835               	movf	??___flmul+3,w
  8103  09CC  00C1               	movwf	___flmul@prod+3
  8104  09CD  0834               	movf	??___flmul+2,w
  8105  09CE  00C0               	movwf	___flmul@prod+2
  8106  09CF  0833               	movf	??___flmul+1,w
  8107  09D0  00BF               	movwf	___flmul@prod+1
  8108  09D1  0832               	movf	??___flmul,w
  8109  09D2  00BE               	movwf	___flmul@prod
  8110  09D3  082B               	movf	___flmul@b+1,w
  8111  09D4  00B2               	movwf	??___flmul
  8112  09D5  0832               	movf	??___flmul,w
  8113  09D6  00F3               	movwf	__Umul8_16@multiplicand
  8114  09D7  082F               	movf	___flmul@a+1,w
  8115  09D8  160A  158A  213F  120A  158A  	fcall	__Umul8_16
  8116  09DD  0874               	movf	?__Umul8_16+1,w
  8117  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  8118  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  8119  09E0  00C3               	movwf	___flmul@temp+1
  8120  09E1  0873               	movf	?__Umul8_16,w
  8121  09E2  00C2               	movwf	___flmul@temp
  8122  09E3                     l2844:
  8123  09E3  0842               	movf	___flmul@temp,w
  8124  09E4  00B2               	movwf	??___flmul
  8125  09E5  01B3               	clrf	??___flmul+1
  8126  09E6  01B4               	clrf	??___flmul+2
  8127  09E7  01B5               	clrf	??___flmul+3
  8128  09E8  0832               	movf	??___flmul,w
  8129  09E9  07B8               	addwf	___flmul@grs,f
  8130  09EA  0833               	movf	??___flmul+1,w
  8131  09EB  1103               	clrz
  8132  09EC  1803               	skipnc
  8133  09ED  3E01               	addlw	1
  8134  09EE  1903               	skipnz
  8135  09EF  29F1               	goto	u3861
  8136  09F0  07B9               	addwf	___flmul@grs+1,f
  8137  09F1                     u3861:
  8138  09F1  0834               	movf	??___flmul+2,w
  8139  09F2  1103               	clrz
  8140  09F3  1803               	skipnc
  8141  09F4  3E01               	addlw	1
  8142  09F5  1903               	skipnz
  8143  09F6  29F8               	goto	u3862
  8144  09F7  07BA               	addwf	___flmul@grs+2,f
  8145  09F8                     u3862:
  8146  09F8  0835               	movf	??___flmul+3,w
  8147  09F9  1103               	clrz
  8148  09FA  1803               	skipnc
  8149  09FB  3E01               	addlw	1
  8150  09FC  1903               	skipnz
  8151  09FD  29FF               	goto	u3863
  8152  09FE  07BB               	addwf	___flmul@grs+3,f
  8153  09FF                     u3863:
  8154  09FF                     l2846:
  8155  09FF  0843               	movf	___flmul@temp+1,w
  8156  0A00  00B2               	movwf	??___flmul
  8157  0A01  01B3               	clrf	??___flmul+1
  8158  0A02  01B4               	clrf	??___flmul+2
  8159  0A03  01B5               	clrf	??___flmul+3
  8160  0A04  0832               	movf	??___flmul,w
  8161  0A05  07BE               	addwf	___flmul@prod,f
  8162  0A06  0833               	movf	??___flmul+1,w
  8163  0A07  1103               	clrz
  8164  0A08  1803               	skipnc
  8165  0A09  3E01               	addlw	1
  8166  0A0A  1903               	skipnz
  8167  0A0B  2A0D               	goto	u3871
  8168  0A0C  07BF               	addwf	___flmul@prod+1,f
  8169  0A0D                     u3871:
  8170  0A0D  0834               	movf	??___flmul+2,w
  8171  0A0E  1103               	clrz
  8172  0A0F  1803               	skipnc
  8173  0A10  3E01               	addlw	1
  8174  0A11  1903               	skipnz
  8175  0A12  2A14               	goto	u3872
  8176  0A13  07C0               	addwf	___flmul@prod+2,f
  8177  0A14                     u3872:
  8178  0A14  0835               	movf	??___flmul+3,w
  8179  0A15  1103               	clrz
  8180  0A16  1803               	skipnc
  8181  0A17  3E01               	addlw	1
  8182  0A18  1903               	skipnz
  8183  0A19  2A1B               	goto	u3873
  8184  0A1A  07C1               	addwf	___flmul@prod+3,f
  8185  0A1B                     u3873:
  8186  0A1B  082C               	movf	___flmul@b+2,w
  8187  0A1C  00B2               	movwf	??___flmul
  8188  0A1D  0832               	movf	??___flmul,w
  8189  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  8190  0A1F  082E               	movf	___flmul@a,w
  8191  0A20  160A  158A  213F  120A  158A  	fcall	__Umul8_16
  8192  0A25  0874               	movf	?__Umul8_16+1,w
  8193  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  8194  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  8195  0A28  00C3               	movwf	___flmul@temp+1
  8196  0A29  0873               	movf	?__Umul8_16,w
  8197  0A2A  00C2               	movwf	___flmul@temp
  8198  0A2B                     l2848:
  8199  0A2B  0842               	movf	___flmul@temp,w
  8200  0A2C  00B2               	movwf	??___flmul
  8201  0A2D  01B3               	clrf	??___flmul+1
  8202  0A2E  01B4               	clrf	??___flmul+2
  8203  0A2F  01B5               	clrf	??___flmul+3
  8204  0A30  0832               	movf	??___flmul,w
  8205  0A31  07B8               	addwf	___flmul@grs,f
  8206  0A32  0833               	movf	??___flmul+1,w
  8207  0A33  1103               	clrz
  8208  0A34  1803               	skipnc
  8209  0A35  3E01               	addlw	1
  8210  0A36  1903               	skipnz
  8211  0A37  2A39               	goto	u3881
  8212  0A38  07B9               	addwf	___flmul@grs+1,f
  8213  0A39                     u3881:
  8214  0A39  0834               	movf	??___flmul+2,w
  8215  0A3A  1103               	clrz
  8216  0A3B  1803               	skipnc
  8217  0A3C  3E01               	addlw	1
  8218  0A3D  1903               	skipnz
  8219  0A3E  2A40               	goto	u3882
  8220  0A3F  07BA               	addwf	___flmul@grs+2,f
  8221  0A40                     u3882:
  8222  0A40  0835               	movf	??___flmul+3,w
  8223  0A41  1103               	clrz
  8224  0A42  1803               	skipnc
  8225  0A43  3E01               	addlw	1
  8226  0A44  1903               	skipnz
  8227  0A45  2A47               	goto	u3883
  8228  0A46  07BB               	addwf	___flmul@grs+3,f
  8229  0A47                     u3883:
  8230  0A47                     l2850:
  8231  0A47  0843               	movf	___flmul@temp+1,w
  8232  0A48  00B2               	movwf	??___flmul
  8233  0A49  01B3               	clrf	??___flmul+1
  8234  0A4A  01B4               	clrf	??___flmul+2
  8235  0A4B  01B5               	clrf	??___flmul+3
  8236  0A4C  0832               	movf	??___flmul,w
  8237  0A4D  07BE               	addwf	___flmul@prod,f
  8238  0A4E  0833               	movf	??___flmul+1,w
  8239  0A4F  1103               	clrz
  8240  0A50  1803               	skipnc
  8241  0A51  3E01               	addlw	1
  8242  0A52  1903               	skipnz
  8243  0A53  2A55               	goto	u3891
  8244  0A54  07BF               	addwf	___flmul@prod+1,f
  8245  0A55                     u3891:
  8246  0A55  0834               	movf	??___flmul+2,w
  8247  0A56  1103               	clrz
  8248  0A57  1803               	skipnc
  8249  0A58  3E01               	addlw	1
  8250  0A59  1903               	skipnz
  8251  0A5A  2A5C               	goto	u3892
  8252  0A5B  07C0               	addwf	___flmul@prod+2,f
  8253  0A5C                     u3892:
  8254  0A5C  0835               	movf	??___flmul+3,w
  8255  0A5D  1103               	clrz
  8256  0A5E  1803               	skipnc
  8257  0A5F  3E01               	addlw	1
  8258  0A60  1903               	skipnz
  8259  0A61  2A63               	goto	u3893
  8260  0A62  07C1               	addwf	___flmul@prod+3,f
  8261  0A63                     u3893:
  8262  0A63                     l2852:
  8263  0A63  3008               	movlw	8
  8264  0A64  00B2               	movwf	??___flmul
  8265  0A65                     u3905:
  8266  0A65  1003               	clrc
  8267  0A66  0DB8               	rlf	___flmul@grs,f
  8268  0A67  0DB9               	rlf	___flmul@grs+1,f
  8269  0A68  0DBA               	rlf	___flmul@grs+2,f
  8270  0A69  0DBB               	rlf	___flmul@grs+3,f
  8271  0A6A  0BB2               	decfsz	??___flmul,f
  8272  0A6B  2A65               	goto	u3905
  8273  0A6C                     l2854:
  8274  0A6C  082B               	movf	___flmul@b+1,w
  8275  0A6D  00B2               	movwf	??___flmul
  8276  0A6E  0832               	movf	??___flmul,w
  8277  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  8278  0A70  082E               	movf	___flmul@a,w
  8279  0A71  160A  158A  213F  120A  158A  	fcall	__Umul8_16
  8280  0A76  0874               	movf	?__Umul8_16+1,w
  8281  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  8282  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  8283  0A79  00C3               	movwf	___flmul@temp+1
  8284  0A7A  0873               	movf	?__Umul8_16,w
  8285  0A7B  00C2               	movwf	___flmul@temp
  8286  0A7C                     l2856:
  8287  0A7C  0842               	movf	___flmul@temp,w
  8288  0A7D  00B2               	movwf	??___flmul
  8289  0A7E  0843               	movf	___flmul@temp+1,w
  8290  0A7F  00B3               	movwf	??___flmul+1
  8291  0A80  01B4               	clrf	??___flmul+2
  8292  0A81  01B5               	clrf	??___flmul+3
  8293  0A82  0832               	movf	??___flmul,w
  8294  0A83  07B8               	addwf	___flmul@grs,f
  8295  0A84  0833               	movf	??___flmul+1,w
  8296  0A85  1103               	clrz
  8297  0A86  1803               	skipnc
  8298  0A87  3E01               	addlw	1
  8299  0A88  1903               	skipnz
  8300  0A89  2A8B               	goto	u3911
  8301  0A8A  07B9               	addwf	___flmul@grs+1,f
  8302  0A8B                     u3911:
  8303  0A8B  0834               	movf	??___flmul+2,w
  8304  0A8C  1103               	clrz
  8305  0A8D  1803               	skipnc
  8306  0A8E  3E01               	addlw	1
  8307  0A8F  1903               	skipnz
  8308  0A90  2A92               	goto	u3912
  8309  0A91  07BA               	addwf	___flmul@grs+2,f
  8310  0A92                     u3912:
  8311  0A92  0835               	movf	??___flmul+3,w
  8312  0A93  1103               	clrz
  8313  0A94  1803               	skipnc
  8314  0A95  3E01               	addlw	1
  8315  0A96  1903               	skipnz
  8316  0A97  2A99               	goto	u3913
  8317  0A98  07BB               	addwf	___flmul@grs+3,f
  8318  0A99                     u3913:
  8319  0A99                     l2858:
  8320  0A99  082A               	movf	___flmul@b,w
  8321  0A9A  00B2               	movwf	??___flmul
  8322  0A9B  0832               	movf	??___flmul,w
  8323  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  8324  0A9D  082F               	movf	___flmul@a+1,w
  8325  0A9E  160A  158A  213F  120A  158A  	fcall	__Umul8_16
  8326  0AA3  0874               	movf	?__Umul8_16+1,w
  8327  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  8328  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  8329  0AA6  00C3               	movwf	___flmul@temp+1
  8330  0AA7  0873               	movf	?__Umul8_16,w
  8331  0AA8  00C2               	movwf	___flmul@temp
  8332  0AA9                     l2860:
  8333  0AA9  0842               	movf	___flmul@temp,w
  8334  0AAA  00B2               	movwf	??___flmul
  8335  0AAB  0843               	movf	___flmul@temp+1,w
  8336  0AAC  00B3               	movwf	??___flmul+1
  8337  0AAD  01B4               	clrf	??___flmul+2
  8338  0AAE  01B5               	clrf	??___flmul+3
  8339  0AAF  0832               	movf	??___flmul,w
  8340  0AB0  07B8               	addwf	___flmul@grs,f
  8341  0AB1  0833               	movf	??___flmul+1,w
  8342  0AB2  1103               	clrz
  8343  0AB3  1803               	skipnc
  8344  0AB4  3E01               	addlw	1
  8345  0AB5  1903               	skipnz
  8346  0AB6  2AB8               	goto	u3921
  8347  0AB7  07B9               	addwf	___flmul@grs+1,f
  8348  0AB8                     u3921:
  8349  0AB8  0834               	movf	??___flmul+2,w
  8350  0AB9  1103               	clrz
  8351  0ABA  1803               	skipnc
  8352  0ABB  3E01               	addlw	1
  8353  0ABC  1903               	skipnz
  8354  0ABD  2ABF               	goto	u3922
  8355  0ABE  07BA               	addwf	___flmul@grs+2,f
  8356  0ABF                     u3922:
  8357  0ABF  0835               	movf	??___flmul+3,w
  8358  0AC0  1103               	clrz
  8359  0AC1  1803               	skipnc
  8360  0AC2  3E01               	addlw	1
  8361  0AC3  1903               	skipnz
  8362  0AC4  2AC6               	goto	u3923
  8363  0AC5  07BB               	addwf	___flmul@grs+3,f
  8364  0AC6                     u3923:
  8365  0AC6                     l2862:
  8366  0AC6  3008               	movlw	8
  8367  0AC7  00B2               	movwf	??___flmul
  8368  0AC8                     u3935:
  8369  0AC8  1003               	clrc
  8370  0AC9  0DB8               	rlf	___flmul@grs,f
  8371  0ACA  0DB9               	rlf	___flmul@grs+1,f
  8372  0ACB  0DBA               	rlf	___flmul@grs+2,f
  8373  0ACC  0DBB               	rlf	___flmul@grs+3,f
  8374  0ACD  0BB2               	decfsz	??___flmul,f
  8375  0ACE  2AC8               	goto	u3935
  8376  0ACF  082A               	movf	___flmul@b,w
  8377  0AD0  00B2               	movwf	??___flmul
  8378  0AD1  0832               	movf	??___flmul,w
  8379  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  8380  0AD3  082E               	movf	___flmul@a,w
  8381  0AD4  160A  158A  213F  120A  158A  	fcall	__Umul8_16
  8382  0AD9  0874               	movf	?__Umul8_16+1,w
  8383  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  8384  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  8385  0ADC  00C3               	movwf	___flmul@temp+1
  8386  0ADD  0873               	movf	?__Umul8_16,w
  8387  0ADE  00C2               	movwf	___flmul@temp
  8388  0ADF                     l2864:
  8389  0ADF  0842               	movf	___flmul@temp,w
  8390  0AE0  00B2               	movwf	??___flmul
  8391  0AE1  0843               	movf	___flmul@temp+1,w
  8392  0AE2  00B3               	movwf	??___flmul+1
  8393  0AE3  01B4               	clrf	??___flmul+2
  8394  0AE4  01B5               	clrf	??___flmul+3
  8395  0AE5  0832               	movf	??___flmul,w
  8396  0AE6  07B8               	addwf	___flmul@grs,f
  8397  0AE7  0833               	movf	??___flmul+1,w
  8398  0AE8  1103               	clrz
  8399  0AE9  1803               	skipnc
  8400  0AEA  3E01               	addlw	1
  8401  0AEB  1903               	skipnz
  8402  0AEC  2AEE               	goto	u3941
  8403  0AED  07B9               	addwf	___flmul@grs+1,f
  8404  0AEE                     u3941:
  8405  0AEE  0834               	movf	??___flmul+2,w
  8406  0AEF  1103               	clrz
  8407  0AF0  1803               	skipnc
  8408  0AF1  3E01               	addlw	1
  8409  0AF2  1903               	skipnz
  8410  0AF3  2AF5               	goto	u3942
  8411  0AF4  07BA               	addwf	___flmul@grs+2,f
  8412  0AF5                     u3942:
  8413  0AF5  0835               	movf	??___flmul+3,w
  8414  0AF6  1103               	clrz
  8415  0AF7  1803               	skipnc
  8416  0AF8  3E01               	addlw	1
  8417  0AF9  1903               	skipnz
  8418  0AFA  2AFC               	goto	u3943
  8419  0AFB  07BB               	addwf	___flmul@grs+3,f
  8420  0AFC                     u3943:
  8421  0AFC                     l2866:
  8422  0AFC  082B               	movf	___flmul@b+1,w
  8423  0AFD  00B2               	movwf	??___flmul
  8424  0AFE  0832               	movf	??___flmul,w
  8425  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  8426  0B00  0830               	movf	___flmul@a+2,w
  8427  0B01  160A  158A  213F  120A  158A  	fcall	__Umul8_16
  8428  0B06  0874               	movf	?__Umul8_16+1,w
  8429  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  8430  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  8431  0B09  00C3               	movwf	___flmul@temp+1
  8432  0B0A  0873               	movf	?__Umul8_16,w
  8433  0B0B  00C2               	movwf	___flmul@temp
  8434  0B0C  0842               	movf	___flmul@temp,w
  8435  0B0D  00B2               	movwf	??___flmul
  8436  0B0E  0843               	movf	___flmul@temp+1,w
  8437  0B0F  00B3               	movwf	??___flmul+1
  8438  0B10  01B4               	clrf	??___flmul+2
  8439  0B11  01B5               	clrf	??___flmul+3
  8440  0B12  0832               	movf	??___flmul,w
  8441  0B13  07BE               	addwf	___flmul@prod,f
  8442  0B14  0833               	movf	??___flmul+1,w
  8443  0B15  1103               	clrz
  8444  0B16  1803               	skipnc
  8445  0B17  3E01               	addlw	1
  8446  0B18  1903               	skipnz
  8447  0B19  2B1B               	goto	u3951
  8448  0B1A  07BF               	addwf	___flmul@prod+1,f
  8449  0B1B                     u3951:
  8450  0B1B  0834               	movf	??___flmul+2,w
  8451  0B1C  1103               	clrz
  8452  0B1D  1803               	skipnc
  8453  0B1E  3E01               	addlw	1
  8454  0B1F  1903               	skipnz
  8455  0B20  2B22               	goto	u3952
  8456  0B21  07C0               	addwf	___flmul@prod+2,f
  8457  0B22                     u3952:
  8458  0B22  0835               	movf	??___flmul+3,w
  8459  0B23  1103               	clrz
  8460  0B24  1803               	skipnc
  8461  0B25  3E01               	addlw	1
  8462  0B26  1903               	skipnz
  8463  0B27  2B29               	goto	u3953
  8464  0B28  07C1               	addwf	___flmul@prod+3,f
  8465  0B29                     u3953:
  8466  0B29                     l2868:
  8467  0B29  082C               	movf	___flmul@b+2,w
  8468  0B2A  00B2               	movwf	??___flmul
  8469  0B2B  0832               	movf	??___flmul,w
  8470  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  8471  0B2D  082F               	movf	___flmul@a+1,w
  8472  0B2E  160A  158A  213F  120A  158A  	fcall	__Umul8_16
  8473  0B33  0874               	movf	?__Umul8_16+1,w
  8474  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  8475  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  8476  0B36  00C3               	movwf	___flmul@temp+1
  8477  0B37  0873               	movf	?__Umul8_16,w
  8478  0B38  00C2               	movwf	___flmul@temp
  8479  0B39                     l2870:
  8480  0B39  0842               	movf	___flmul@temp,w
  8481  0B3A  00B2               	movwf	??___flmul
  8482  0B3B  0843               	movf	___flmul@temp+1,w
  8483  0B3C  00B3               	movwf	??___flmul+1
  8484  0B3D  01B4               	clrf	??___flmul+2
  8485  0B3E  01B5               	clrf	??___flmul+3
  8486  0B3F  0832               	movf	??___flmul,w
  8487  0B40  07BE               	addwf	___flmul@prod,f
  8488  0B41  0833               	movf	??___flmul+1,w
  8489  0B42  1103               	clrz
  8490  0B43  1803               	skipnc
  8491  0B44  3E01               	addlw	1
  8492  0B45  1903               	skipnz
  8493  0B46  2B48               	goto	u3961
  8494  0B47  07BF               	addwf	___flmul@prod+1,f
  8495  0B48                     u3961:
  8496  0B48  0834               	movf	??___flmul+2,w
  8497  0B49  1103               	clrz
  8498  0B4A  1803               	skipnc
  8499  0B4B  3E01               	addlw	1
  8500  0B4C  1903               	skipnz
  8501  0B4D  2B4F               	goto	u3962
  8502  0B4E  07C0               	addwf	___flmul@prod+2,f
  8503  0B4F                     u3962:
  8504  0B4F  0835               	movf	??___flmul+3,w
  8505  0B50  1103               	clrz
  8506  0B51  1803               	skipnc
  8507  0B52  3E01               	addlw	1
  8508  0B53  1903               	skipnz
  8509  0B54  2B56               	goto	u3963
  8510  0B55  07C1               	addwf	___flmul@prod+3,f
  8511  0B56                     u3963:
  8512  0B56  082C               	movf	___flmul@b+2,w
  8513  0B57  00B2               	movwf	??___flmul
  8514  0B58  0832               	movf	??___flmul,w
  8515  0B59  00F3               	movwf	__Umul8_16@multiplicand
  8516  0B5A  0830               	movf	___flmul@a+2,w
  8517  0B5B  160A  158A  213F  120A  158A  	fcall	__Umul8_16
  8518  0B60  0874               	movf	?__Umul8_16+1,w
  8519  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8520  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8521  0B63  00C3               	movwf	___flmul@temp+1
  8522  0B64  0873               	movf	?__Umul8_16,w
  8523  0B65  00C2               	movwf	___flmul@temp
  8524  0B66                     l2872:
  8525  0B66  0842               	movf	___flmul@temp,w
  8526  0B67  00B2               	movwf	??___flmul
  8527  0B68  0843               	movf	___flmul@temp+1,w
  8528  0B69  00B3               	movwf	??___flmul+1
  8529  0B6A  01B4               	clrf	??___flmul+2
  8530  0B6B  01B5               	clrf	??___flmul+3
  8531  0B6C  3008               	movlw	8
  8532  0B6D                     u3975:
  8533  0B6D  1003               	clrc
  8534  0B6E  0DB2               	rlf	??___flmul,f
  8535  0B6F  0DB3               	rlf	??___flmul+1,f
  8536  0B70  0DB4               	rlf	??___flmul+2,f
  8537  0B71  0DB5               	rlf	??___flmul+3,f
  8538  0B72                     u3970:
  8539  0B72  3EFF               	addlw	-1
  8540  0B73  1D03               	skipz
  8541  0B74  2B6D               	goto	u3975
  8542  0B75  0832               	movf	??___flmul,w
  8543  0B76  07BE               	addwf	___flmul@prod,f
  8544  0B77  0833               	movf	??___flmul+1,w
  8545  0B78  1103               	clrz
  8546  0B79  1803               	skipnc
  8547  0B7A  3E01               	addlw	1
  8548  0B7B  1903               	skipnz
  8549  0B7C  2B7E               	goto	u3981
  8550  0B7D  07BF               	addwf	___flmul@prod+1,f
  8551  0B7E                     u3981:
  8552  0B7E  0834               	movf	??___flmul+2,w
  8553  0B7F  1103               	clrz
  8554  0B80  1803               	skipnc
  8555  0B81  3E01               	addlw	1
  8556  0B82  1903               	skipnz
  8557  0B83  2B85               	goto	u3982
  8558  0B84  07C0               	addwf	___flmul@prod+2,f
  8559  0B85                     u3982:
  8560  0B85  0835               	movf	??___flmul+3,w
  8561  0B86  1103               	clrz
  8562  0B87  1803               	skipnc
  8563  0B88  3E01               	addlw	1
  8564  0B89  1903               	skipnz
  8565  0B8A  2B8C               	goto	u3983
  8566  0B8B  07C1               	addwf	___flmul@prod+3,f
  8567  0B8C                     u3983:
  8568  0B8C                     l2874:
  8569  0B8C  0838               	movf	___flmul@grs,w
  8570  0B8D  00B2               	movwf	??___flmul
  8571  0B8E  0839               	movf	___flmul@grs+1,w
  8572  0B8F  00B3               	movwf	??___flmul+1
  8573  0B90  083A               	movf	___flmul@grs+2,w
  8574  0B91  00B4               	movwf	??___flmul+2
  8575  0B92  083B               	movf	___flmul@grs+3,w
  8576  0B93  00B5               	movwf	??___flmul+3
  8577  0B94  3018               	movlw	24
  8578  0B95                     u3995:
  8579  0B95  1003               	clrc
  8580  0B96  0CB5               	rrf	??___flmul+3,f
  8581  0B97  0CB4               	rrf	??___flmul+2,f
  8582  0B98  0CB3               	rrf	??___flmul+1,f
  8583  0B99  0CB2               	rrf	??___flmul,f
  8584  0B9A                     u3990:
  8585  0B9A  3EFF               	addlw	-1
  8586  0B9B  1D03               	skipz
  8587  0B9C  2B95               	goto	u3995
  8588  0B9D  0832               	movf	??___flmul,w
  8589  0B9E  07BE               	addwf	___flmul@prod,f
  8590  0B9F  0833               	movf	??___flmul+1,w
  8591  0BA0  1103               	clrz
  8592  0BA1  1803               	skipnc
  8593  0BA2  3E01               	addlw	1
  8594  0BA3  1903               	skipnz
  8595  0BA4  2BA6               	goto	u4001
  8596  0BA5  07BF               	addwf	___flmul@prod+1,f
  8597  0BA6                     u4001:
  8598  0BA6  0834               	movf	??___flmul+2,w
  8599  0BA7  1103               	clrz
  8600  0BA8  1803               	skipnc
  8601  0BA9  3E01               	addlw	1
  8602  0BAA  1903               	skipnz
  8603  0BAB  2BAD               	goto	u4002
  8604  0BAC  07C0               	addwf	___flmul@prod+2,f
  8605  0BAD                     u4002:
  8606  0BAD  0835               	movf	??___flmul+3,w
  8607  0BAE  1103               	clrz
  8608  0BAF  1803               	skipnc
  8609  0BB0  3E01               	addlw	1
  8610  0BB1  1903               	skipnz
  8611  0BB2  2BB4               	goto	u4003
  8612  0BB3  07C1               	addwf	___flmul@prod+3,f
  8613  0BB4                     u4003:
  8614  0BB4                     l2876:
  8615  0BB4  3008               	movlw	8
  8616  0BB5  00B2               	movwf	??___flmul
  8617  0BB6                     u4015:
  8618  0BB6  1003               	clrc
  8619  0BB7  0DB8               	rlf	___flmul@grs,f
  8620  0BB8  0DB9               	rlf	___flmul@grs+1,f
  8621  0BB9  0DBA               	rlf	___flmul@grs+2,f
  8622  0BBA  0DBB               	rlf	___flmul@grs+3,f
  8623  0BBB  0BB2               	decfsz	??___flmul,f
  8624  0BBC  2BB6               	goto	u4015
  8625  0BBD                     l2878:
  8626  0BBD  083D               	movf	___flmul@bexp,w
  8627  0BBE  073C               	addwf	___flmul@aexp,w
  8628  0BBF  00B2               	movwf	??___flmul
  8629  0BC0  01B3               	clrf	??___flmul+1
  8630  0BC1  0DB3               	rlf	??___flmul+1,f
  8631  0BC2  0832               	movf	??___flmul,w
  8632  0BC3  3E82               	addlw	130
  8633  0BC4  00C2               	movwf	___flmul@temp
  8634  0BC5  0833               	movf	??___flmul+1,w
  8635  0BC6  1803               	skipnc
  8636  0BC7  3E01               	addlw	1
  8637  0BC8  3EFF               	addlw	255
  8638  0BC9  00C3               	movwf	___flmul@temp+1
  8639  0BCA  2BE8               	goto	l2890
  8640  0BCB                     l2880:
  8641  0BCB  3001               	movlw	1
  8642  0BCC  00B2               	movwf	??___flmul
  8643  0BCD                     u4025:
  8644  0BCD  1003               	clrc
  8645  0BCE  0DBE               	rlf	___flmul@prod,f
  8646  0BCF  0DBF               	rlf	___flmul@prod+1,f
  8647  0BD0  0DC0               	rlf	___flmul@prod+2,f
  8648  0BD1  0DC1               	rlf	___flmul@prod+3,f
  8649  0BD2  0BB2               	decfsz	??___flmul,f
  8650  0BD3  2BCD               	goto	u4025
  8651  0BD4                     l2882:
  8652  0BD4  1FBB               	btfss	___flmul@grs+3,7
  8653  0BD5  2BD7               	goto	u4031
  8654  0BD6  2BD8               	goto	u4030
  8655  0BD7                     u4031:
  8656  0BD7  2BD9               	goto	l2886
  8657  0BD8                     u4030:
  8658  0BD8                     l2884:
  8659  0BD8  143E               	bsf	___flmul@prod,0
  8660  0BD9                     l2886:
  8661  0BD9  3001               	movlw	1
  8662  0BDA  00B2               	movwf	??___flmul
  8663  0BDB                     u4045:
  8664  0BDB  1003               	clrc
  8665  0BDC  0DB8               	rlf	___flmul@grs,f
  8666  0BDD  0DB9               	rlf	___flmul@grs+1,f
  8667  0BDE  0DBA               	rlf	___flmul@grs+2,f
  8668  0BDF  0DBB               	rlf	___flmul@grs+3,f
  8669  0BE0  0BB2               	decfsz	??___flmul,f
  8670  0BE1  2BDB               	goto	u4045
  8671  0BE2                     l2888:
  8672  0BE2  30FF               	movlw	255
  8673  0BE3  07C2               	addwf	___flmul@temp,f
  8674  0BE4  1803               	skipnc
  8675  0BE5  0AC3               	incf	___flmul@temp+1,f
  8676  0BE6  30FF               	movlw	255
  8677  0BE7  07C3               	addwf	___flmul@temp+1,f
  8678  0BE8                     l2890:
  8679  0BE8  1FC0               	btfss	___flmul@prod+2,7
  8680  0BE9  2BEB               	goto	u4051
  8681  0BEA  2BEC               	goto	u4050
  8682  0BEB                     u4051:
  8683  0BEB  2BCB               	goto	l2880
  8684  0BEC                     u4050:
  8685  0BEC                     l2892:
  8686  0BEC  01BC               	clrf	___flmul@aexp
  8687  0BED                     l2894:
  8688  0BED  1FBB               	btfss	___flmul@grs+3,7
  8689  0BEE  2BF0               	goto	u4061
  8690  0BEF  2BF1               	goto	u4060
  8691  0BF0                     u4061:
  8692  0BF0  2C0D               	goto	l2902
  8693  0BF1                     u4060:
  8694  0BF1                     l2896:
  8695  0BF1  30FF               	movlw	255
  8696  0BF2  0538               	andwf	___flmul@grs,w
  8697  0BF3  00B2               	movwf	??___flmul
  8698  0BF4  30FF               	movlw	255
  8699  0BF5  0539               	andwf	___flmul@grs+1,w
  8700  0BF6  00B3               	movwf	??___flmul+1
  8701  0BF7  30FF               	movlw	255
  8702  0BF8  053A               	andwf	___flmul@grs+2,w
  8703  0BF9  00B4               	movwf	??___flmul+2
  8704  0BFA  307F               	movlw	127
  8705  0BFB  053B               	andwf	___flmul@grs+3,w
  8706  0BFC  00B5               	movwf	??___flmul+3
  8707  0BFD  0835               	movf	??___flmul+3,w
  8708  0BFE  0434               	iorwf	??___flmul+2,w
  8709  0BFF  0433               	iorwf	??___flmul+1,w
  8710  0C00  0432               	iorwf	??___flmul,w
  8711  0C01  1903               	skipnz
  8712  0C02  2C04               	goto	u4071
  8713  0C03  2C05               	goto	u4070
  8714  0C04                     u4071:
  8715  0C04  2C08               	goto	l880
  8716  0C05                     u4070:
  8717  0C05                     l2898:
  8718  0C05  01BC               	clrf	___flmul@aexp
  8719  0C06  0ABC               	incf	___flmul@aexp,f
  8720  0C07  2C0D               	goto	l2902
  8721  0C08                     l880:
  8722  0C08  1C3E               	btfss	___flmul@prod,0
  8723  0C09  2C0B               	goto	u4081
  8724  0C0A  2C0C               	goto	u4080
  8725  0C0B                     u4081:
  8726  0C0B  2C0D               	goto	l2902
  8727  0C0C                     u4080:
  8728  0C0C  2C05               	goto	l2898
  8729  0C0D                     l2902:
  8730  0C0D  083C               	movf	___flmul@aexp,w
  8731  0C0E  1903               	btfsc	3,2
  8732  0C0F  2C11               	goto	u4091
  8733  0C10  2C12               	goto	u4090
  8734  0C11                     u4091:
  8735  0C11  2C43               	goto	l2912
  8736  0C12                     u4090:
  8737  0C12                     l2904:
  8738  0C12  3001               	movlw	1
  8739  0C13  07BE               	addwf	___flmul@prod,f
  8740  0C14  3000               	movlw	0
  8741  0C15  1803               	skipnc
  8742  0C16  3001               	movlw	1
  8743  0C17  07BF               	addwf	___flmul@prod+1,f
  8744  0C18  3000               	movlw	0
  8745  0C19  1803               	skipnc
  8746  0C1A  3001               	movlw	1
  8747  0C1B  07C0               	addwf	___flmul@prod+2,f
  8748  0C1C  3000               	movlw	0
  8749  0C1D  1803               	skipnc
  8750  0C1E  3001               	movlw	1
  8751  0C1F  07C1               	addwf	___flmul@prod+3,f
  8752  0C20                     l2906:
  8753  0C20  1C41               	btfss	___flmul@prod+3,0
  8754  0C21  2C23               	goto	u4101
  8755  0C22  2C24               	goto	u4100
  8756  0C23                     u4101:
  8757  0C23  2C43               	goto	l2912
  8758  0C24                     u4100:
  8759  0C24                     l2908:
  8760  0C24  083E               	movf	___flmul@prod,w
  8761  0C25  00B2               	movwf	??___flmul
  8762  0C26  083F               	movf	___flmul@prod+1,w
  8763  0C27  00B3               	movwf	??___flmul+1
  8764  0C28  0840               	movf	___flmul@prod+2,w
  8765  0C29  00B4               	movwf	??___flmul+2
  8766  0C2A  0841               	movf	___flmul@prod+3,w
  8767  0C2B  00B5               	movwf	??___flmul+3
  8768  0C2C  3001               	movlw	1
  8769  0C2D  00B6               	movwf	??___flmul+4
  8770  0C2E                     u4115:
  8771  0C2E  0D35               	rlf	??___flmul+3,w
  8772  0C2F  0CB5               	rrf	??___flmul+3,f
  8773  0C30  0CB4               	rrf	??___flmul+2,f
  8774  0C31  0CB3               	rrf	??___flmul+1,f
  8775  0C32  0CB2               	rrf	??___flmul,f
  8776  0C33                     u4110:
  8777  0C33  0BB6               	decfsz	??___flmul+4,f
  8778  0C34  2C2E               	goto	u4115
  8779  0C35  0835               	movf	??___flmul+3,w
  8780  0C36  00C1               	movwf	___flmul@prod+3
  8781  0C37  0834               	movf	??___flmul+2,w
  8782  0C38  00C0               	movwf	___flmul@prod+2
  8783  0C39  0833               	movf	??___flmul+1,w
  8784  0C3A  00BF               	movwf	___flmul@prod+1
  8785  0C3B  0832               	movf	??___flmul,w
  8786  0C3C  00BE               	movwf	___flmul@prod
  8787  0C3D                     l2910:
  8788  0C3D  3001               	movlw	1
  8789  0C3E  07C2               	addwf	___flmul@temp,f
  8790  0C3F  1803               	skipnc
  8791  0C40  0AC3               	incf	___flmul@temp+1,f
  8792  0C41  3000               	movlw	0
  8793  0C42  07C3               	addwf	___flmul@temp+1,f
  8794  0C43                     l2912:
  8795  0C43  0843               	movf	___flmul@temp+1,w
  8796  0C44  3A80               	xorlw	128
  8797  0C45  00FF               	movwf	btemp+1
  8798  0C46  3080               	movlw	128
  8799  0C47  027F               	subwf	btemp+1,w
  8800  0C48  1D03               	skipz
  8801  0C49  2C4C               	goto	u4125
  8802  0C4A  30FF               	movlw	255
  8803  0C4B  0242               	subwf	___flmul@temp,w
  8804  0C4C                     u4125:
  8805  0C4C  1C03               	skipc
  8806  0C4D  2C4F               	goto	u4121
  8807  0C4E  2C50               	goto	u4120
  8808  0C4F                     u4121:
  8809  0C4F  2C5B               	goto	l2916
  8810  0C50                     u4120:
  8811  0C50                     l2914:
  8812  0C50  307F               	movlw	127
  8813  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  8814  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  8815  0C53  00C1               	movwf	___flmul@prod+3
  8816  0C54  3080               	movlw	128
  8817  0C55  00C0               	movwf	___flmul@prod+2
  8818  0C56  3000               	movlw	0
  8819  0C57  00BF               	movwf	___flmul@prod+1
  8820  0C58  3000               	movlw	0
  8821  0C59  00BE               	movwf	___flmul@prod
  8822  0C5A  2C90               	goto	l886
  8823  0C5B                     l2916:
  8824  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  8825  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  8826  0C5D  0843               	movf	___flmul@temp+1,w
  8827  0C5E  3A80               	xorlw	128
  8828  0C5F  00FF               	movwf	btemp+1
  8829  0C60  3080               	movlw	128
  8830  0C61  027F               	subwf	btemp+1,w
  8831  0C62  1D03               	skipz
  8832  0C63  2C66               	goto	u4135
  8833  0C64  3001               	movlw	1
  8834  0C65  0242               	subwf	___flmul@temp,w
  8835  0C66                     u4135:
  8836  0C66  1803               	skipnc
  8837  0C67  2C69               	goto	u4131
  8838  0C68  2C6A               	goto	u4130
  8839  0C69                     u4131:
  8840  0C69  2C76               	goto	l2922
  8841  0C6A                     u4130:
  8842  0C6A                     l2918:
  8843  0C6A  3000               	movlw	0
  8844  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  8845  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  8846  0C6D  00C1               	movwf	___flmul@prod+3
  8847  0C6E  3000               	movlw	0
  8848  0C6F  00C0               	movwf	___flmul@prod+2
  8849  0C70  3000               	movlw	0
  8850  0C71  00BF               	movwf	___flmul@prod+1
  8851  0C72  3000               	movlw	0
  8852  0C73  00BE               	movwf	___flmul@prod
  8853  0C74                     l2920:
  8854  0C74  01B7               	clrf	___flmul@sign
  8855  0C75  2C90               	goto	l886
  8856  0C76                     l2922:
  8857  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  8858  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  8859  0C78  0842               	movf	___flmul@temp,w
  8860  0C79  00B2               	movwf	??___flmul
  8861  0C7A  0832               	movf	??___flmul,w
  8862  0C7B  00BD               	movwf	___flmul@bexp
  8863  0C7C  30FF               	movlw	255
  8864  0C7D  05BE               	andwf	___flmul@prod,f
  8865  0C7E  30FF               	movlw	255
  8866  0C7F  05BF               	andwf	___flmul@prod+1,f
  8867  0C80  307F               	movlw	127
  8868  0C81  05C0               	andwf	___flmul@prod+2,f
  8869  0C82  3000               	movlw	0
  8870  0C83  05C1               	andwf	___flmul@prod+3,f
  8871  0C84                     l2924:
  8872  0C84  1C3D               	btfss	___flmul@bexp,0
  8873  0C85  2C87               	goto	u4141
  8874  0C86  2C88               	goto	u4140
  8875  0C87                     u4141:
  8876  0C87  2C89               	goto	l2928
  8877  0C88                     u4140:
  8878  0C88                     l2926:
  8879  0C88  17C0               	bsf	___flmul@prod+2,7
  8880  0C89                     l2928:
  8881  0C89  083D               	movf	___flmul@bexp,w
  8882  0C8A  00B2               	movwf	??___flmul
  8883  0C8B  1003               	clrc
  8884  0C8C  0C32               	rrf	??___flmul,w
  8885  0C8D  00B3               	movwf	??___flmul+1
  8886  0C8E  0833               	movf	??___flmul+1,w
  8887  0C8F  00C1               	movwf	___flmul@prod+3
  8888  0C90                     l886:
  8889  0C90  0837               	movf	___flmul@sign,w
  8890  0C91  00B2               	movwf	??___flmul
  8891  0C92  0832               	movf	??___flmul,w
  8892  0C93  04C1               	iorwf	___flmul@prod+3,f
  8893  0C94                     l2930:
  8894  0C94  0841               	movf	___flmul@prod+3,w
  8895  0C95  00AD               	movwf	?___flmul+3
  8896  0C96  0840               	movf	___flmul@prod+2,w
  8897  0C97  00AC               	movwf	?___flmul+2
  8898  0C98  083F               	movf	___flmul@prod+1,w
  8899  0C99  00AB               	movwf	?___flmul+1
  8900  0C9A  083E               	movf	___flmul@prod,w
  8901  0C9B  00AA               	movwf	?___flmul
  8902  0C9C                     l874:
  8903  0C9C  0008               	return
  8904  0C9D                     __end_of___flmul:
  8905                           
  8906                           	psect	text28
  8907  193F                     __ptext28:	
  8908 ;; *************** function __Umul8_16 *****************
  8909 ;; Defined at:
  8910 ;;		line 4 in file "D:\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  8911 ;; Parameters:    Size  Location     Type
  8912 ;;  multiplier      1    wreg     unsigned char 
  8913 ;;  multiplicand    1    3[COMMON] unsigned char 
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;  multiplier      1    4[BANK0 ] unsigned char 
  8916 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  8917 ;;  product         2    0[BANK0 ] unsigned int 
  8918 ;; Return value:  Size  Location     Type
  8919 ;;                  2    3[COMMON] unsigned int 
  8920 ;; Registers used:
  8921 ;;		wreg, status,2, status,0
  8922 ;; Tracked objects:
  8923 ;;		On entry : 0/0
  8924 ;;		On exit  : 0/0
  8925 ;;		Unchanged: 0/0
  8926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8927 ;;      Params:         2       0       0       0       0
  8928 ;;      Locals:         0       5       0       0       0
  8929 ;;      Temps:          2       0       0       0       0
  8930 ;;      Totals:         4       5       0       0       0
  8931 ;;Total ram usage:        9 bytes
  8932 ;; Hardware stack levels used:    1
  8933 ;; Hardware stack levels required when called:    2
  8934 ;; This function calls:
  8935 ;;		Nothing
  8936 ;; This function is called by:
  8937 ;;		___flmul
  8938 ;; This function uses a non-reentrant model
  8939 ;;
  8940                           
  8941                           
  8942                           ;psect for function __Umul8_16
  8943  193F                     __Umul8_16:
  8944                           
  8945                           ;incstack = 0
  8946                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8947                           ;__Umul8_16@multiplier stored from wreg
  8948  193F  1283               	bcf	3,5	;RP0=0, select bank0
  8949  1940  1303               	bcf	3,6	;RP1=0, select bank0
  8950  1941  00A4               	movwf	__Umul8_16@multiplier
  8951  1942                     l2454:
  8952  1942  01A0               	clrf	__Umul8_16@product
  8953  1943  01A1               	clrf	__Umul8_16@product+1
  8954  1944                     l2456:
  8955  1944  0873               	movf	__Umul8_16@multiplicand,w
  8956  1945  00F5               	movwf	??__Umul8_16
  8957  1946  01F6               	clrf	??__Umul8_16+1
  8958  1947  0875               	movf	??__Umul8_16,w
  8959  1948  00A2               	movwf	__Umul8_16@word_mpld
  8960  1949  0876               	movf	??__Umul8_16+1,w
  8961  194A  00A3               	movwf	__Umul8_16@word_mpld+1
  8962  194B                     l2458:
  8963  194B  1C24               	btfss	__Umul8_16@multiplier,0
  8964  194C  294E               	goto	u2971
  8965  194D  294F               	goto	u2970
  8966  194E                     u2971:
  8967  194E  2955               	goto	l893
  8968  194F                     u2970:
  8969  194F                     l2460:
  8970  194F  0822               	movf	__Umul8_16@word_mpld,w
  8971  1950  07A0               	addwf	__Umul8_16@product,f
  8972  1951  1803               	skipnc
  8973  1952  0AA1               	incf	__Umul8_16@product+1,f
  8974  1953  0823               	movf	__Umul8_16@word_mpld+1,w
  8975  1954  07A1               	addwf	__Umul8_16@product+1,f
  8976  1955                     l893:
  8977  1955  3001               	movlw	1
  8978  1956                     u2985:
  8979  1956  1003               	clrc
  8980  1957  0DA2               	rlf	__Umul8_16@word_mpld,f
  8981  1958  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  8982  1959  3EFF               	addlw	-1
  8983  195A  1D03               	skipz
  8984  195B  2956               	goto	u2985
  8985  195C  1003               	clrc
  8986  195D  0CA4               	rrf	__Umul8_16@multiplier,f
  8987  195E                     l2462:
  8988  195E  0824               	movf	__Umul8_16@multiplier,w
  8989  195F  1D03               	btfss	3,2
  8990  1960  2962               	goto	u2991
  8991  1961  2963               	goto	u2990
  8992  1962                     u2991:
  8993  1962  294B               	goto	l2458
  8994  1963                     u2990:
  8995  1963                     l2464:
  8996  1963  0821               	movf	__Umul8_16@product+1,w
  8997  1964  00F4               	movwf	?__Umul8_16+1
  8998  1965  0820               	movf	__Umul8_16@product,w
  8999  1966  00F3               	movwf	?__Umul8_16
  9000  1967                     l895:
  9001  1967  0008               	return
  9002  1968                     __end_of__Umul8_16:
  9003                           
  9004                           	psect	text29
  9005  1C89                     __ptext29:	
  9006 ;; *************** function _ADC_Select *****************
  9007 ;; Defined at:
  9008 ;;		line 19 in file "ADC.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;  a               1    wreg     unsigned char 
  9011 ;; Auto vars:     Size  Location     Type
  9012 ;;  a               1    5[COMMON] unsigned char 
  9013 ;; Return value:  Size  Location     Type
  9014 ;;                  1    wreg      void 
  9015 ;; Registers used:
  9016 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9017 ;; Tracked objects:
  9018 ;;		On entry : 0/0
  9019 ;;		On exit  : 0/0
  9020 ;;		Unchanged: 0/0
  9021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9022 ;;      Params:         0       0       0       0       0
  9023 ;;      Locals:         1       0       0       0       0
  9024 ;;      Temps:          2       0       0       0       0
  9025 ;;      Totals:         3       0       0       0       0
  9026 ;;Total ram usage:        3 bytes
  9027 ;; Hardware stack levels used:    1
  9028 ;; Hardware stack levels required when called:    2
  9029 ;; This function calls:
  9030 ;;		Nothing
  9031 ;; This function is called by:
  9032 ;;		_LeerADC
  9033 ;; This function uses a non-reentrant model
  9034 ;;
  9035                           
  9036                           
  9037                           ;psect for function _ADC_Select
  9038  1C89                     _ADC_Select:
  9039                           
  9040                           ;incstack = 0
  9041                           ; Regs used in _ADC_Select: [wreg-fsr0h+status,2+status,0]
  9042                           ;ADC_Select@a stored from wreg
  9043  1C89  00F5               	movwf	ADC_Select@a
  9044  1C8A                     l2938:
  9045                           
  9046                           ;ADC.c: 20:     switch(a){
  9047  1C8A  2CF0               	goto	l2972
  9048  1C8B                     l2940:
  9049  1C8B  30C3               	movlw	-61
  9050  1C8C  1283               	bcf	3,5	;RP0=0, select bank0
  9051  1C8D  1303               	bcf	3,6	;RP1=0, select bank0
  9052  1C8E  059F               	andwf	31,f	;volatile
  9053  1C8F  2D24               	goto	l178
  9054  1C90                     l2942:
  9055  1C90  1283               	bcf	3,5	;RP0=0, select bank0
  9056  1C91  1303               	bcf	3,6	;RP1=0, select bank0
  9057  1C92  081F               	movf	31,w	;volatile
  9058  1C93  39C3               	andlw	-61
  9059  1C94  3804               	iorlw	4
  9060  1C95  009F               	movwf	31	;volatile
  9061  1C96  2D24               	goto	l178
  9062  1C97                     l2944:
  9063  1C97  1283               	bcf	3,5	;RP0=0, select bank0
  9064  1C98  1303               	bcf	3,6	;RP1=0, select bank0
  9065  1C99  081F               	movf	31,w	;volatile
  9066  1C9A  39C3               	andlw	-61
  9067  1C9B  3808               	iorlw	8
  9068  1C9C  009F               	movwf	31	;volatile
  9069  1C9D  2D24               	goto	l178
  9070  1C9E                     l2946:
  9071  1C9E  1283               	bcf	3,5	;RP0=0, select bank0
  9072  1C9F  1303               	bcf	3,6	;RP1=0, select bank0
  9073  1CA0  081F               	movf	31,w	;volatile
  9074  1CA1  39C3               	andlw	-61
  9075  1CA2  380C               	iorlw	12
  9076  1CA3  009F               	movwf	31	;volatile
  9077  1CA4  2D24               	goto	l178
  9078  1CA5                     l2948:
  9079  1CA5  1283               	bcf	3,5	;RP0=0, select bank0
  9080  1CA6  1303               	bcf	3,6	;RP1=0, select bank0
  9081  1CA7  081F               	movf	31,w	;volatile
  9082  1CA8  39C3               	andlw	-61
  9083  1CA9  3810               	iorlw	16
  9084  1CAA  009F               	movwf	31	;volatile
  9085  1CAB  2D24               	goto	l178
  9086  1CAC                     l2950:
  9087  1CAC  1283               	bcf	3,5	;RP0=0, select bank0
  9088  1CAD  1303               	bcf	3,6	;RP1=0, select bank0
  9089  1CAE  081F               	movf	31,w	;volatile
  9090  1CAF  39C3               	andlw	-61
  9091  1CB0  3814               	iorlw	20
  9092  1CB1  009F               	movwf	31	;volatile
  9093  1CB2  2D24               	goto	l178
  9094  1CB3                     l2952:
  9095  1CB3  1283               	bcf	3,5	;RP0=0, select bank0
  9096  1CB4  1303               	bcf	3,6	;RP1=0, select bank0
  9097  1CB5  081F               	movf	31,w	;volatile
  9098  1CB6  39C3               	andlw	-61
  9099  1CB7  3818               	iorlw	24
  9100  1CB8  009F               	movwf	31	;volatile
  9101  1CB9  2D24               	goto	l178
  9102  1CBA                     l2954:
  9103  1CBA  1283               	bcf	3,5	;RP0=0, select bank0
  9104  1CBB  1303               	bcf	3,6	;RP1=0, select bank0
  9105  1CBC  081F               	movf	31,w	;volatile
  9106  1CBD  39C3               	andlw	-61
  9107  1CBE  381C               	iorlw	28
  9108  1CBF  009F               	movwf	31	;volatile
  9109  1CC0  2D24               	goto	l178
  9110  1CC1                     l2956:
  9111  1CC1  1283               	bcf	3,5	;RP0=0, select bank0
  9112  1CC2  1303               	bcf	3,6	;RP1=0, select bank0
  9113  1CC3  081F               	movf	31,w	;volatile
  9114  1CC4  39C3               	andlw	-61
  9115  1CC5  3820               	iorlw	32
  9116  1CC6  009F               	movwf	31	;volatile
  9117  1CC7  2D24               	goto	l178
  9118  1CC8                     l2958:
  9119  1CC8  1283               	bcf	3,5	;RP0=0, select bank0
  9120  1CC9  1303               	bcf	3,6	;RP1=0, select bank0
  9121  1CCA  081F               	movf	31,w	;volatile
  9122  1CCB  39C3               	andlw	-61
  9123  1CCC  3824               	iorlw	36
  9124  1CCD  009F               	movwf	31	;volatile
  9125  1CCE  2D24               	goto	l178
  9126  1CCF                     l2960:
  9127  1CCF  1283               	bcf	3,5	;RP0=0, select bank0
  9128  1CD0  1303               	bcf	3,6	;RP1=0, select bank0
  9129  1CD1  081F               	movf	31,w	;volatile
  9130  1CD2  39C3               	andlw	-61
  9131  1CD3  3828               	iorlw	40
  9132  1CD4  009F               	movwf	31	;volatile
  9133  1CD5  2D24               	goto	l178
  9134  1CD6                     l2962:
  9135  1CD6  1283               	bcf	3,5	;RP0=0, select bank0
  9136  1CD7  1303               	bcf	3,6	;RP1=0, select bank0
  9137  1CD8  081F               	movf	31,w	;volatile
  9138  1CD9  39C3               	andlw	-61
  9139  1CDA  382C               	iorlw	44
  9140  1CDB  009F               	movwf	31	;volatile
  9141  1CDC  2D24               	goto	l178
  9142  1CDD                     l2964:
  9143  1CDD  1283               	bcf	3,5	;RP0=0, select bank0
  9144  1CDE  1303               	bcf	3,6	;RP1=0, select bank0
  9145  1CDF  081F               	movf	31,w	;volatile
  9146  1CE0  39C3               	andlw	-61
  9147  1CE1  3830               	iorlw	48
  9148  1CE2  009F               	movwf	31	;volatile
  9149  1CE3  2D24               	goto	l178
  9150  1CE4                     l2966:
  9151  1CE4  1283               	bcf	3,5	;RP0=0, select bank0
  9152  1CE5  1303               	bcf	3,6	;RP1=0, select bank0
  9153  1CE6  081F               	movf	31,w	;volatile
  9154  1CE7  39C3               	andlw	-61
  9155  1CE8  3834               	iorlw	52
  9156  1CE9  009F               	movwf	31	;volatile
  9157  1CEA  2D24               	goto	l178
  9158  1CEB                     l2968:
  9159  1CEB  30C3               	movlw	-61
  9160  1CEC  1283               	bcf	3,5	;RP0=0, select bank0
  9161  1CED  1303               	bcf	3,6	;RP1=0, select bank0
  9162  1CEE  059F               	andwf	31,f	;volatile
  9163  1CEF  2D24               	goto	l178
  9164  1CF0                     l2972:
  9165  1CF0  0875               	movf	ADC_Select@a,w
  9166  1CF1  00F3               	movwf	??_ADC_Select
  9167  1CF2  01F4               	clrf	??_ADC_Select+1
  9168                           
  9169                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9170                           ; Switch size 1, requested type "simple"
  9171                           ; Number of cases is 1, Range of values is 0 to 0
  9172                           ; switch strategies available:
  9173                           ; Name         Instructions Cycles
  9174                           ; simple_byte            4     3 (average)
  9175                           ; direct_byte           11     8 (fixed)
  9176                           ; jumptable            260     6 (fixed)
  9177                           ;	Chosen strategy is simple_byte
  9178  1CF3  0874               	movf	??_ADC_Select+1,w
  9179  1CF4  3A00               	xorlw	0	; case 0
  9180  1CF5  1903               	skipnz
  9181  1CF6  2CF8               	goto	l4636
  9182  1CF7  2CEB               	goto	l2968
  9183  1CF8                     l4636:
  9184                           
  9185                           ; Switch size 1, requested type "simple"
  9186                           ; Number of cases is 14, Range of values is 0 to 13
  9187                           ; switch strategies available:
  9188                           ; Name         Instructions Cycles
  9189                           ; simple_byte           43    22 (average)
  9190                           ; direct_byte           50     8 (fixed)
  9191                           ; jumptable            260     6 (fixed)
  9192                           ;	Chosen strategy is simple_byte
  9193  1CF8  0873               	movf	??_ADC_Select,w
  9194  1CF9  3A00               	xorlw	0	; case 0
  9195  1CFA  1903               	skipnz
  9196  1CFB  2C8B               	goto	l2940
  9197  1CFC  3A01               	xorlw	1	; case 1
  9198  1CFD  1903               	skipnz
  9199  1CFE  2C90               	goto	l2942
  9200  1CFF  3A03               	xorlw	3	; case 2
  9201  1D00  1903               	skipnz
  9202  1D01  2C97               	goto	l2944
  9203  1D02  3A01               	xorlw	1	; case 3
  9204  1D03  1903               	skipnz
  9205  1D04  2C9E               	goto	l2946
  9206  1D05  3A07               	xorlw	7	; case 4
  9207  1D06  1903               	skipnz
  9208  1D07  2CA5               	goto	l2948
  9209  1D08  3A01               	xorlw	1	; case 5
  9210  1D09  1903               	skipnz
  9211  1D0A  2CAC               	goto	l2950
  9212  1D0B  3A03               	xorlw	3	; case 6
  9213  1D0C  1903               	skipnz
  9214  1D0D  2CB3               	goto	l2952
  9215  1D0E  3A01               	xorlw	1	; case 7
  9216  1D0F  1903               	skipnz
  9217  1D10  2CBA               	goto	l2954
  9218  1D11  3A0F               	xorlw	15	; case 8
  9219  1D12  1903               	skipnz
  9220  1D13  2CC1               	goto	l2956
  9221  1D14  3A01               	xorlw	1	; case 9
  9222  1D15  1903               	skipnz
  9223  1D16  2CC8               	goto	l2958
  9224  1D17  3A03               	xorlw	3	; case 10
  9225  1D18  1903               	skipnz
  9226  1D19  2CCF               	goto	l2960
  9227  1D1A  3A01               	xorlw	1	; case 11
  9228  1D1B  1903               	skipnz
  9229  1D1C  2CD6               	goto	l2962
  9230  1D1D  3A07               	xorlw	7	; case 12
  9231  1D1E  1903               	skipnz
  9232  1D1F  2CDD               	goto	l2964
  9233  1D20  3A01               	xorlw	1	; case 13
  9234  1D21  1903               	skipnz
  9235  1D22  2CE4               	goto	l2966
  9236  1D23  2CEB               	goto	l2968
  9237  1D24                     l178:
  9238  1D24  0008               	return
  9239  1D25                     __end_of_ADC_Select:
  9240                           
  9241                           	psect	text30
  9242  187B                     __ptext30:	
  9243 ;; *************** function _LCD_clear *****************
  9244 ;; Defined at:
  9245 ;;		line 40 in file "LCD.c"
  9246 ;; Parameters:    Size  Location     Type
  9247 ;;		None
  9248 ;; Auto vars:     Size  Location     Type
  9249 ;;		None
  9250 ;; Return value:  Size  Location     Type
  9251 ;;                  1    wreg      void 
  9252 ;; Registers used:
  9253 ;;		wreg, status,2, status,0, pclath, cstack
  9254 ;; Tracked objects:
  9255 ;;		On entry : 0/0
  9256 ;;		On exit  : 0/0
  9257 ;;		Unchanged: 0/0
  9258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9259 ;;      Params:         0       0       0       0       0
  9260 ;;      Locals:         0       0       0       0       0
  9261 ;;      Temps:          0       0       0       0       0
  9262 ;;      Totals:         0       0       0       0       0
  9263 ;;Total ram usage:        0 bytes
  9264 ;; Hardware stack levels used:    1
  9265 ;; Hardware stack levels required when called:    4
  9266 ;; This function calls:
  9267 ;;		_LCD_Command
  9268 ;; This function is called by:
  9269 ;;		_main
  9270 ;; This function uses a non-reentrant model
  9271 ;;
  9272                           
  9273                           
  9274                           ;psect for function _LCD_clear
  9275  187B                     _LCD_clear:
  9276  187B                     l4222:	
  9277                           ;incstack = 0
  9278                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  9279                           
  9280                           
  9281                           ;LCD.c: 41:     LCD_Command(0);
  9282  187B  3000               	movlw	0
  9283  187C  160A  158A  20D1  160A  158A  	fcall	_LCD_Command
  9284                           
  9285                           ;LCD.c: 42:     LCD_Command(1);
  9286  1881  3001               	movlw	1
  9287  1882  160A  158A  20D1  160A  158A  	fcall	_LCD_Command
  9288  1887                     l128:
  9289  1887  0008               	return
  9290  1888                     __end_of_LCD_clear:
  9291                           
  9292                           	psect	text31
  9293  19F9                     __ptext31:	
  9294 ;; *************** function _LCD_Write_String *****************
  9295 ;; Defined at:
  9296 ;;		line 76 in file "LCD.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;  a               2    6[COMMON] PTR unsigned char 
  9299 ;;		 -> STR_2(15), pantalla(20), 
  9300 ;; Auto vars:     Size  Location     Type
  9301 ;;  i               2    3[BANK0 ] int 
  9302 ;; Return value:  Size  Location     Type
  9303 ;;                  1    wreg      void 
  9304 ;; Registers used:
  9305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9306 ;; Tracked objects:
  9307 ;;		On entry : 0/0
  9308 ;;		On exit  : 0/0
  9309 ;;		Unchanged: 0/0
  9310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9311 ;;      Params:         2       0       0       0       0
  9312 ;;      Locals:         0       2       0       0       0
  9313 ;;      Temps:          0       3       0       0       0
  9314 ;;      Totals:         2       5       0       0       0
  9315 ;;Total ram usage:        7 bytes
  9316 ;; Hardware stack levels used:    1
  9317 ;; Hardware stack levels required when called:    4
  9318 ;; This function calls:
  9319 ;;		_LCD_Write_Char
  9320 ;; This function is called by:
  9321 ;;		_main
  9322 ;; This function uses a non-reentrant model
  9323 ;;
  9324                           
  9325                           
  9326                           ;psect for function _LCD_Write_String
  9327  19F9                     _LCD_Write_String:
  9328  19F9                     l4546:	
  9329                           ;incstack = 0
  9330                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9331                           
  9332                           
  9333                           ;LCD.c: 77:  int i;;LCD.c: 78:  for(i=0;a[i]!='\0';i++)
  9334  19F9  1283               	bcf	3,5	;RP0=0, select bank0
  9335  19FA  1303               	bcf	3,6	;RP1=0, select bank0
  9336  19FB  01A3               	clrf	LCD_Write_String@i
  9337  19FC  01A4               	clrf	LCD_Write_String@i+1
  9338  19FD  2A22               	goto	l4552
  9339  19FE                     l4548:
  9340                           
  9341                           ;LCD.c: 79:     LCD_Write_Char(a[i]);
  9342  19FE  0823               	movf	LCD_Write_String@i,w
  9343  19FF  0776               	addwf	LCD_Write_String@a,w
  9344  1A00  00A1               	movwf	??_LCD_Write_String+1
  9345  1A01  0877               	movf	LCD_Write_String@a+1,w
  9346  1A02  00A0               	movwf	??_LCD_Write_String
  9347  1A03  1803               	skipnc
  9348  1A04  0AA0               	incf	??_LCD_Write_String,f
  9349  1A05  1FA3               	btfss	LCD_Write_String@i,7
  9350  1A06  2A08               	goto	u7390
  9351  1A07  03A0               	decf	??_LCD_Write_String,f
  9352  1A08                     u7390:
  9353  1A08  1283               	bcf	3,5	;RP0=0, select bank0
  9354  1A09  1303               	bcf	3,6	;RP1=0, select bank0
  9355  1A0A  0820               	movf	??_LCD_Write_String,w
  9356  1A0B  00A2               	movwf	??_LCD_Write_String+2
  9357  1A0C  0822               	movf	??_LCD_Write_String+2,w
  9358  1A0D  00FF               	movwf	btemp+1
  9359  1A0E  0821               	movf	??_LCD_Write_String+1,w
  9360  1A0F  0084               	movwf	4
  9361  1A10  120A  158A  2000  160A  158A  	fcall	stringtab
  9362  1A15  160A  158A  209A  160A  158A  	fcall	_LCD_Write_Char
  9363  1A1A                     l4550:
  9364  1A1A  3001               	movlw	1
  9365  1A1B  1283               	bcf	3,5	;RP0=0, select bank0
  9366  1A1C  1303               	bcf	3,6	;RP1=0, select bank0
  9367  1A1D  07A3               	addwf	LCD_Write_String@i,f
  9368  1A1E  1803               	skipnc
  9369  1A1F  0AA4               	incf	LCD_Write_String@i+1,f
  9370  1A20  3000               	movlw	0
  9371  1A21  07A4               	addwf	LCD_Write_String@i+1,f
  9372  1A22                     l4552:
  9373  1A22  0823               	movf	LCD_Write_String@i,w
  9374  1A23  0776               	addwf	LCD_Write_String@a,w
  9375  1A24  00A1               	movwf	??_LCD_Write_String+1
  9376  1A25  0877               	movf	LCD_Write_String@a+1,w
  9377  1A26  00A0               	movwf	??_LCD_Write_String
  9378  1A27  1803               	skipnc
  9379  1A28  0AA0               	incf	??_LCD_Write_String,f
  9380  1A29  1FA3               	btfss	LCD_Write_String@i,7
  9381  1A2A  2A2C               	goto	u7400
  9382  1A2B  03A0               	decf	??_LCD_Write_String,f
  9383  1A2C                     u7400:
  9384  1A2C  1283               	bcf	3,5	;RP0=0, select bank0
  9385  1A2D  1303               	bcf	3,6	;RP1=0, select bank0
  9386  1A2E  0820               	movf	??_LCD_Write_String,w
  9387  1A2F  00A2               	movwf	??_LCD_Write_String+2
  9388  1A30  0822               	movf	??_LCD_Write_String+2,w
  9389  1A31  00FF               	movwf	btemp+1
  9390  1A32  0821               	movf	??_LCD_Write_String+1,w
  9391  1A33  0084               	movwf	4
  9392  1A34  120A  158A  2000  160A  158A  	fcall	stringtab
  9393  1A39  3A00               	xorlw	0
  9394  1A3A  1D03               	skipz
  9395  1A3B  2A3D               	goto	u7411
  9396  1A3C  2A3E               	goto	u7410
  9397  1A3D                     u7411:
  9398  1A3D  29FE               	goto	l4548
  9399  1A3E                     u7410:
  9400  1A3E                     l143:
  9401  1A3E  0008               	return
  9402  1A3F                     __end_of_LCD_Write_String:
  9403                           
  9404                           	psect	text32
  9405  189A                     __ptext32:	
  9406 ;; *************** function _LCD_Write_Char *****************
  9407 ;; Defined at:
  9408 ;;		line 9 in file "LCD.c"
  9409 ;; Parameters:    Size  Location     Type
  9410 ;;  a               1    wreg     unsigned char 
  9411 ;; Auto vars:     Size  Location     Type
  9412 ;;  a               1    5[COMMON] unsigned char 
  9413 ;; Return value:  Size  Location     Type
  9414 ;;                  1    wreg      void 
  9415 ;; Registers used:
  9416 ;;		wreg, status,2, status,0, pclath, cstack
  9417 ;; Tracked objects:
  9418 ;;		On entry : 0/0
  9419 ;;		On exit  : 0/0
  9420 ;;		Unchanged: 0/0
  9421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9422 ;;      Params:         0       0       0       0       0
  9423 ;;      Locals:         1       0       0       0       0
  9424 ;;      Temps:          1       0       0       0       0
  9425 ;;      Totals:         2       0       0       0       0
  9426 ;;Total ram usage:        2 bytes
  9427 ;; Hardware stack levels used:    1
  9428 ;; Hardware stack levels required when called:    3
  9429 ;; This function calls:
  9430 ;;		_LCD_Port
  9431 ;; This function is called by:
  9432 ;;		_LCD_Write_String
  9433 ;; This function uses a non-reentrant model
  9434 ;;
  9435                           
  9436                           
  9437                           ;psect for function _LCD_Write_Char
  9438  189A                     _LCD_Write_Char:
  9439                           
  9440                           ;incstack = 0
  9441                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9442                           ;LCD_Write_Char@a stored from wreg
  9443  189A  00F5               	movwf	LCD_Write_Char@a
  9444  189B                     l3924:
  9445                           
  9446                           ;LCD.c: 10:     RE0 = 1;
  9447  189B  1283               	bcf	3,5	;RP0=0, select bank0
  9448  189C  1303               	bcf	3,6	;RP1=0, select bank0
  9449  189D  1409               	bsf	9,0	;volatile
  9450  189E                     l3926:
  9451                           
  9452                           ;LCD.c: 11:     LCD_Port(a);
  9453  189E  0875               	movf	LCD_Write_Char@a,w
  9454  189F  160A  118A  2000  160A  158A  	fcall	_LCD_Port
  9455  18A4                     l3928:
  9456                           
  9457                           ;LCD.c: 12:     RE1 = 1;
  9458  18A4  1283               	bcf	3,5	;RP0=0, select bank0
  9459  18A5  1303               	bcf	3,6	;RP1=0, select bank0
  9460  18A6  1489               	bsf	9,1	;volatile
  9461  18A7                     l3930:
  9462                           
  9463                           ;LCD.c: 13:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  9464  18A7  300D               	movlw	13
  9465  18A8  00F4               	movwf	??_LCD_Write_Char
  9466  18A9                     u7447:
  9467  18A9  0BF4               	decfsz	??_LCD_Write_Char,f
  9468  18AA  28A9               	goto	u7447
  9469  18AB                     l3932:
  9470                           
  9471                           ;LCD.c: 14:     RE1 = 0;
  9472  18AB  1283               	bcf	3,5	;RP0=0, select bank0
  9473  18AC  1303               	bcf	3,6	;RP1=0, select bank0
  9474  18AD  1089               	bcf	9,1	;volatile
  9475  18AE                     l3934:
  9476                           
  9477                           ;LCD.c: 15:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  9478  18AE  3003               	movlw	3
  9479  18AF  00F4               	movwf	??_LCD_Write_Char
  9480  18B0                     u7457:
  9481  18B0  0BF4               	decfsz	??_LCD_Write_Char,f
  9482  18B1  28B0               	goto	u7457
  9483  18B2                     l119:
  9484  18B2  0008               	return
  9485  18B3                     __end_of_LCD_Write_Char:
  9486                           
  9487                           	psect	text33
  9488  1919                     __ptext33:	
  9489 ;; *************** function _LCD_Set_Cursor *****************
  9490 ;; Defined at:
  9491 ;;		line 62 in file "LCD.c"
  9492 ;; Parameters:    Size  Location     Type
  9493 ;;  x               1    wreg     unsigned char 
  9494 ;;  y               1    7[COMMON] unsigned char 
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;  x               1    0[BANK0 ] unsigned char 
  9497 ;;  a               1    1[BANK0 ] unsigned char 
  9498 ;; Return value:  Size  Location     Type
  9499 ;;                  1    wreg      void 
  9500 ;; Registers used:
  9501 ;;		wreg, status,2, status,0, pclath, cstack
  9502 ;; Tracked objects:
  9503 ;;		On entry : 0/0
  9504 ;;		On exit  : 0/0
  9505 ;;		Unchanged: 0/0
  9506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9507 ;;      Params:         1       0       0       0       0
  9508 ;;      Locals:         0       2       0       0       0
  9509 ;;      Temps:          1       0       0       0       0
  9510 ;;      Totals:         2       2       0       0       0
  9511 ;;Total ram usage:        4 bytes
  9512 ;; Hardware stack levels used:    1
  9513 ;; Hardware stack levels required when called:    4
  9514 ;; This function calls:
  9515 ;;		_LCD_Command
  9516 ;; This function is called by:
  9517 ;;		_main
  9518 ;; This function uses a non-reentrant model
  9519 ;;
  9520                           
  9521                           
  9522                           ;psect for function _LCD_Set_Cursor
  9523  1919                     _LCD_Set_Cursor:
  9524                           
  9525                           ;incstack = 0
  9526                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9527                           ;LCD_Set_Cursor@x stored from wreg
  9528  1919  1283               	bcf	3,5	;RP0=0, select bank0
  9529  191A  1303               	bcf	3,6	;RP1=0, select bank0
  9530  191B  00A0               	movwf	LCD_Set_Cursor@x
  9531  191C                     l4534:
  9532                           
  9533                           ;LCD.c: 63:  char a;;LCD.c: 64:  if(x == 1)
  9534  191C  0320               	decf	LCD_Set_Cursor@x,w
  9535  191D  1D03               	btfss	3,2
  9536  191E  2920               	goto	u7371
  9537  191F  2921               	goto	u7370
  9538  1920                     u7371:
  9539  1920  292D               	goto	l4540
  9540  1921                     u7370:
  9541  1921                     l4536:
  9542                           
  9543                           ;LCD.c: 65:  {;LCD.c: 66:         a = 0x80 + y;
  9544  1921  0877               	movf	LCD_Set_Cursor@y,w
  9545  1922  3E80               	addlw	128
  9546  1923  00F8               	movwf	??_LCD_Set_Cursor
  9547  1924  0878               	movf	??_LCD_Set_Cursor,w
  9548  1925  00A1               	movwf	LCD_Set_Cursor@a
  9549  1926                     l4538:
  9550                           
  9551                           ;LCD.c: 67:   LCD_Command(a);
  9552  1926  0821               	movf	LCD_Set_Cursor@a,w
  9553  1927  160A  158A  20D1  160A  158A  	fcall	_LCD_Command
  9554                           
  9555                           ;LCD.c: 68:  }
  9556  192C  293E               	goto	l137
  9557  192D                     l4540:
  9558  192D  3002               	movlw	2
  9559  192E  0620               	xorwf	LCD_Set_Cursor@x,w
  9560  192F  1D03               	btfss	3,2
  9561  1930  2932               	goto	u7381
  9562  1931  2933               	goto	u7380
  9563  1932                     u7381:
  9564  1932  293E               	goto	l137
  9565  1933                     u7380:
  9566  1933                     l4542:
  9567                           
  9568                           ;LCD.c: 70:  {;LCD.c: 71:   a = 0xC0 + y;
  9569  1933  0877               	movf	LCD_Set_Cursor@y,w
  9570  1934  3EC0               	addlw	192
  9571  1935  00F8               	movwf	??_LCD_Set_Cursor
  9572  1936  0878               	movf	??_LCD_Set_Cursor,w
  9573  1937  00A1               	movwf	LCD_Set_Cursor@a
  9574  1938                     l4544:
  9575                           
  9576                           ;LCD.c: 72:   LCD_Command(a);
  9577  1938  0821               	movf	LCD_Set_Cursor@a,w
  9578  1939  160A  158A  20D1  160A  158A  	fcall	_LCD_Command
  9579  193E                     l137:
  9580  193E  0008               	return
  9581  193F                     __end_of_LCD_Set_Cursor:
  9582                           
  9583                           	psect	text34
  9584  1A85                     __ptext34:	
  9585 ;; *************** function _LCD_Init *****************
  9586 ;; Defined at:
  9587 ;;		line 45 in file "LCD.c"
  9588 ;; Parameters:    Size  Location     Type
  9589 ;;		None
  9590 ;; Auto vars:     Size  Location     Type
  9591 ;;		None
  9592 ;; Return value:  Size  Location     Type
  9593 ;;                  1    wreg      void 
  9594 ;; Registers used:
  9595 ;;		wreg, status,2, status,0, pclath, cstack
  9596 ;; Tracked objects:
  9597 ;;		On entry : 0/0
  9598 ;;		On exit  : 0/0
  9599 ;;		Unchanged: 0/0
  9600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9601 ;;      Params:         0       0       0       0       0
  9602 ;;      Locals:         0       0       0       0       0
  9603 ;;      Temps:          2       0       0       0       0
  9604 ;;      Totals:         2       0       0       0       0
  9605 ;;Total ram usage:        2 bytes
  9606 ;; Hardware stack levels used:    1
  9607 ;; Hardware stack levels required when called:    4
  9608 ;; This function calls:
  9609 ;;		_LCD_Command
  9610 ;;		_LCD_Port
  9611 ;; This function is called by:
  9612 ;;		_main
  9613 ;; This function uses a non-reentrant model
  9614 ;;
  9615                           
  9616                           
  9617                           ;psect for function _LCD_Init
  9618  1A85                     _LCD_Init:
  9619  1A85                     l4210:	
  9620                           ;incstack = 0
  9621                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9622                           
  9623                           
  9624                           ;LCD.c: 46:     RE0=0;
  9625  1A85  1283               	bcf	3,5	;RP0=0, select bank0
  9626  1A86  1303               	bcf	3,6	;RP1=0, select bank0
  9627  1A87  1009               	bcf	9,0	;volatile
  9628                           
  9629                           ;LCD.c: 47:     RE1=0;
  9630  1A88  1089               	bcf	9,1	;volatile
  9631  1A89                     l4212:
  9632                           
  9633                           ;LCD.c: 48:     LCD_Port(0x00);
  9634  1A89  3000               	movlw	0
  9635  1A8A  160A  118A  2000  160A  158A  	fcall	_LCD_Port
  9636  1A8F                     l4214:
  9637                           
  9638                           ;LCD.c: 49:     _delay((unsigned long)((20)*(4000000/4000.0)));
  9639  1A8F  301A               	movlw	26
  9640  1A90  00F8               	movwf	??_LCD_Init+1
  9641  1A91  30F8               	movlw	248
  9642  1A92  00F7               	movwf	??_LCD_Init
  9643  1A93                     u7467:
  9644  1A93  0BF7               	decfsz	??_LCD_Init,f
  9645  1A94  2A93               	goto	u7467
  9646  1A95  0BF8               	decfsz	??_LCD_Init+1,f
  9647  1A96  2A93               	goto	u7467
  9648  1A97  0000               	nop
  9649  1A98                     l4216:
  9650                           
  9651                           ;LCD.c: 50:     LCD_Command(0x30);
  9652  1A98  3030               	movlw	48
  9653  1A99  160A  158A  20D1  160A  158A  	fcall	_LCD_Command
  9654                           
  9655                           ;LCD.c: 51:     _delay((unsigned long)((5)*(4000000/4000.0)));
  9656  1A9E  3007               	movlw	7
  9657  1A9F  00F8               	movwf	??_LCD_Init+1
  9658  1AA0  307D               	movlw	125
  9659  1AA1  00F7               	movwf	??_LCD_Init
  9660  1AA2                     u7477:
  9661  1AA2  0BF7               	decfsz	??_LCD_Init,f
  9662  1AA3  2AA2               	goto	u7477
  9663  1AA4  0BF8               	decfsz	??_LCD_Init+1,f
  9664  1AA5  2AA2               	goto	u7477
  9665  1AA6                     l4218:
  9666                           
  9667                           ;LCD.c: 52:     LCD_Command(0x30);
  9668  1AA6  3030               	movlw	48
  9669  1AA7  160A  158A  20D1  160A  158A  	fcall	_LCD_Command
  9670  1AAC                     l4220:
  9671                           
  9672                           ;LCD.c: 53:     _delay((unsigned long)((11)*(4000000/4000.0)));
  9673  1AAC  300F               	movlw	15
  9674  1AAD  00F8               	movwf	??_LCD_Init+1
  9675  1AAE  3047               	movlw	71
  9676  1AAF  00F7               	movwf	??_LCD_Init
  9677  1AB0                     u7487:
  9678  1AB0  0BF7               	decfsz	??_LCD_Init,f
  9679  1AB1  2AB0               	goto	u7487
  9680  1AB2  0BF8               	decfsz	??_LCD_Init+1,f
  9681  1AB3  2AB0               	goto	u7487
  9682  1AB4  2AB5               	nop2
  9683                           
  9684                           ;LCD.c: 54:     LCD_Command(0x30);
  9685  1AB5  3030               	movlw	48
  9686  1AB6  160A  158A  20D1  160A  158A  	fcall	_LCD_Command
  9687                           
  9688                           ;LCD.c: 55:     LCD_Command(0x38);
  9689  1ABB  3038               	movlw	56
  9690  1ABC  160A  158A  20D1  160A  158A  	fcall	_LCD_Command
  9691                           
  9692                           ;LCD.c: 56:     LCD_Command(0x0C);
  9693  1AC1  300C               	movlw	12
  9694  1AC2  160A  158A  20D1  160A  158A  	fcall	_LCD_Command
  9695                           
  9696                           ;LCD.c: 57:     LCD_Command(0x01);
  9697  1AC7  3001               	movlw	1
  9698  1AC8  160A  158A  20D1  160A  158A  	fcall	_LCD_Command
  9699                           
  9700                           ;LCD.c: 58:     LCD_Command(0x06);
  9701  1ACD  3006               	movlw	6
  9702  1ACE  160A  158A  20D1  160A  158A  	fcall	_LCD_Command
  9703  1AD3                     l131:
  9704  1AD3  0008               	return
  9705  1AD4                     __end_of_LCD_Init:
  9706                           
  9707                           	psect	text35
  9708  18D1                     __ptext35:	
  9709 ;; *************** function _LCD_Command *****************
  9710 ;; Defined at:
  9711 ;;		line 31 in file "LCD.c"
  9712 ;; Parameters:    Size  Location     Type
  9713 ;;  a               1    wreg     unsigned char 
  9714 ;; Auto vars:     Size  Location     Type
  9715 ;;  a               1    6[COMMON] unsigned char 
  9716 ;; Return value:  Size  Location     Type
  9717 ;;                  1    wreg      void 
  9718 ;; Registers used:
  9719 ;;		wreg, status,2, status,0, pclath, cstack
  9720 ;; Tracked objects:
  9721 ;;		On entry : 0/0
  9722 ;;		On exit  : 0/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9725 ;;      Params:         0       0       0       0       0
  9726 ;;      Locals:         1       0       0       0       0
  9727 ;;      Temps:          2       0       0       0       0
  9728 ;;      Totals:         3       0       0       0       0
  9729 ;;Total ram usage:        3 bytes
  9730 ;; Hardware stack levels used:    1
  9731 ;; Hardware stack levels required when called:    3
  9732 ;; This function calls:
  9733 ;;		_LCD_Port
  9734 ;; This function is called by:
  9735 ;;		_LCD_clear
  9736 ;;		_LCD_Init
  9737 ;;		_LCD_Set_Cursor
  9738 ;; This function uses a non-reentrant model
  9739 ;;
  9740                           
  9741                           
  9742                           ;psect for function _LCD_Command
  9743  18D1                     _LCD_Command:
  9744                           
  9745                           ;incstack = 0
  9746                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  9747                           ;LCD_Command@a stored from wreg
  9748  18D1  00F6               	movwf	LCD_Command@a
  9749  18D2                     l3936:
  9750                           
  9751                           ;LCD.c: 32:     RE0=0;
  9752  18D2  1283               	bcf	3,5	;RP0=0, select bank0
  9753  18D3  1303               	bcf	3,6	;RP1=0, select bank0
  9754  18D4  1009               	bcf	9,0	;volatile
  9755  18D5                     l3938:
  9756                           
  9757                           ;LCD.c: 33:     LCD_Port(a);
  9758  18D5  0876               	movf	LCD_Command@a,w
  9759  18D6  160A  118A  2000  160A  158A  	fcall	_LCD_Port
  9760  18DB                     l3940:
  9761                           
  9762                           ;LCD.c: 34:     RE1=1;
  9763  18DB  1283               	bcf	3,5	;RP0=0, select bank0
  9764  18DC  1303               	bcf	3,6	;RP1=0, select bank0
  9765  18DD  1489               	bsf	9,1	;volatile
  9766  18DE                     l3942:
  9767                           
  9768                           ;LCD.c: 35:     _delay((unsigned long)((4)*(4000000/4000.0)));
  9769  18DE  3006               	movlw	6
  9770  18DF  00F5               	movwf	??_LCD_Command+1
  9771  18E0  3030               	movlw	48
  9772  18E1  00F4               	movwf	??_LCD_Command
  9773  18E2                     u7497:
  9774  18E2  0BF4               	decfsz	??_LCD_Command,f
  9775  18E3  28E2               	goto	u7497
  9776  18E4  0BF5               	decfsz	??_LCD_Command+1,f
  9777  18E5  28E2               	goto	u7497
  9778  18E6  0000               	nop
  9779  18E7                     l3944:
  9780                           
  9781                           ;LCD.c: 36:     RE1=0;
  9782  18E7  1283               	bcf	3,5	;RP0=0, select bank0
  9783  18E8  1303               	bcf	3,6	;RP1=0, select bank0
  9784  18E9  1089               	bcf	9,1	;volatile
  9785  18EA                     l3946:
  9786                           
  9787                           ;LCD.c: 37:     _delay((unsigned long)((2)*(4000000/4000.0)));
  9788  18EA  3003               	movlw	3
  9789  18EB  00F5               	movwf	??_LCD_Command+1
  9790  18EC  3097               	movlw	151
  9791  18ED  00F4               	movwf	??_LCD_Command
  9792  18EE                     u7507:
  9793  18EE  0BF4               	decfsz	??_LCD_Command,f
  9794  18EF  28EE               	goto	u7507
  9795  18F0  0BF5               	decfsz	??_LCD_Command+1,f
  9796  18F1  28EE               	goto	u7507
  9797  18F2  28F3               	nop2
  9798  18F3                     l125:
  9799  18F3  0008               	return
  9800  18F4                     __end_of_LCD_Command:
  9801                           
  9802                           	psect	text36
  9803  1000                     __ptext36:	
  9804 ;; *************** function _LCD_Port *****************
  9805 ;; Defined at:
  9806 ;;		line 18 in file "LCD.c"
  9807 ;; Parameters:    Size  Location     Type
  9808 ;;  a               1    wreg     unsigned char 
  9809 ;; Auto vars:     Size  Location     Type
  9810 ;;  a               1    3[COMMON] unsigned char 
  9811 ;; Return value:  Size  Location     Type
  9812 ;;                  1    wreg      void 
  9813 ;; Registers used:
  9814 ;;		wreg
  9815 ;; Tracked objects:
  9816 ;;		On entry : 0/0
  9817 ;;		On exit  : 0/0
  9818 ;;		Unchanged: 0/0
  9819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9820 ;;      Params:         0       0       0       0       0
  9821 ;;      Locals:         1       0       0       0       0
  9822 ;;      Temps:          0       0       0       0       0
  9823 ;;      Totals:         1       0       0       0       0
  9824 ;;Total ram usage:        1 bytes
  9825 ;; Hardware stack levels used:    1
  9826 ;; Hardware stack levels required when called:    2
  9827 ;; This function calls:
  9828 ;;		Nothing
  9829 ;; This function is called by:
  9830 ;;		_LCD_Write_Char
  9831 ;;		_LCD_Command
  9832 ;;		_LCD_Init
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           
  9837                           ;psect for function _LCD_Port
  9838  1000                     _LCD_Port:
  9839                           
  9840                           ;incstack = 0
  9841                           ; Regs used in _LCD_Port: [wreg]
  9842                           ;LCD_Port@a stored from wreg
  9843  1000  00F3               	movwf	LCD_Port@a
  9844  1001                     l3858:
  9845                           
  9846                           ;LCD.c: 19:     PORTD = a;
  9847  1001  0873               	movf	LCD_Port@a,w
  9848  1002  1283               	bcf	3,5	;RP0=0, select bank0
  9849  1003  1303               	bcf	3,6	;RP1=0, select bank0
  9850  1004  0088               	movwf	8	;volatile
  9851  1005                     l122:
  9852  1005  0008               	return
  9853  1006                     __end_of_LCD_Port:
  9854                           
  9855                           	psect	text37
  9856  08C5                     __ptext37:	
  9857 ;; *************** function _Init_Transmit *****************
  9858 ;; Defined at:
  9859 ;;		line 14 in file "USART.c"
  9860 ;; Parameters:    Size  Location     Type
  9861 ;;		None
  9862 ;; Auto vars:     Size  Location     Type
  9863 ;;		None
  9864 ;; Return value:  Size  Location     Type
  9865 ;;                  1    wreg      void 
  9866 ;; Registers used:
  9867 ;;		None
  9868 ;; Tracked objects:
  9869 ;;		On entry : 0/0
  9870 ;;		On exit  : 0/0
  9871 ;;		Unchanged: 0/0
  9872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9873 ;;      Params:         0       0       0       0       0
  9874 ;;      Locals:         0       0       0       0       0
  9875 ;;      Temps:          0       0       0       0       0
  9876 ;;      Totals:         0       0       0       0       0
  9877 ;;Total ram usage:        0 bytes
  9878 ;; Hardware stack levels used:    1
  9879 ;; Hardware stack levels required when called:    2
  9880 ;; This function calls:
  9881 ;;		Nothing
  9882 ;; This function is called by:
  9883 ;;		_main
  9884 ;; This function uses a non-reentrant model
  9885 ;;
  9886                           
  9887                           
  9888                           ;psect for function _Init_Transmit
  9889  08C5                     _Init_Transmit:
  9890  08C5                     l3414:	
  9891                           ;incstack = 0
  9892                           ; Regs used in _Init_Transmit: []
  9893                           
  9894                           
  9895                           ;USART.c: 15:     TXSTAbits.TXEN = 1;
  9896  08C5  1683               	bsf	3,5	;RP0=1, select bank1
  9897  08C6  1303               	bcf	3,6	;RP1=0, select bank1
  9898  08C7  1698               	bsf	24,5	;volatile
  9899                           
  9900                           ;USART.c: 18:     PIR1bits.TXIF = 0;
  9901  08C8  1283               	bcf	3,5	;RP0=0, select bank0
  9902  08C9  1303               	bcf	3,6	;RP1=0, select bank0
  9903  08CA  120C               	bcf	12,4	;volatile
  9904                           
  9905                           ;USART.c: 19:     PIE1bits.TXIE = 0;
  9906  08CB  1683               	bsf	3,5	;RP0=1, select bank1
  9907  08CC  1303               	bcf	3,6	;RP1=0, select bank1
  9908  08CD  120C               	bcf	12,4	;volatile
  9909                           
  9910                           ;USART.c: 20:     INTCONbits.GIE = 0;
  9911  08CE  138B               	bcf	11,7	;volatile
  9912                           
  9913                           ;USART.c: 21:     INTCONbits.PEIE = 0;
  9914  08CF  130B               	bcf	11,6	;volatile
  9915                           
  9916                           ;USART.c: 22:     TRISCbits.TRISC7 = 1;
  9917  08D0  1787               	bsf	7,7	;volatile
  9918                           
  9919                           ;USART.c: 23:     TRISCbits.TRISC6 = 0;
  9920  08D1  1307               	bcf	7,6	;volatile
  9921  08D2                     l220:
  9922  08D2  0008               	return
  9923  08D3                     __end_of_Init_Transmit:
  9924                           
  9925                           	psect	text38
  9926  1854                     __ptext38:	
  9927 ;; *************** function _Init_Receive *****************
  9928 ;; Defined at:
  9929 ;;		line 28 in file "USART.c"
  9930 ;; Parameters:    Size  Location     Type
  9931 ;;		None
  9932 ;; Auto vars:     Size  Location     Type
  9933 ;;		None
  9934 ;; Return value:  Size  Location     Type
  9935 ;;                  1    wreg      void 
  9936 ;; Registers used:
  9937 ;;		None
  9938 ;; Tracked objects:
  9939 ;;		On entry : 0/0
  9940 ;;		On exit  : 0/0
  9941 ;;		Unchanged: 0/0
  9942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9943 ;;      Params:         0       0       0       0       0
  9944 ;;      Locals:         0       0       0       0       0
  9945 ;;      Temps:          0       0       0       0       0
  9946 ;;      Totals:         0       0       0       0       0
  9947 ;;Total ram usage:        0 bytes
  9948 ;; Hardware stack levels used:    1
  9949 ;; Hardware stack levels required when called:    2
  9950 ;; This function calls:
  9951 ;;		Nothing
  9952 ;; This function is called by:
  9953 ;;		_main
  9954 ;; This function uses a non-reentrant model
  9955 ;;
  9956                           
  9957                           
  9958                           ;psect for function _Init_Receive
  9959  1854                     _Init_Receive:
  9960  1854                     l3416:	
  9961                           ;incstack = 0
  9962                           ; Regs used in _Init_Receive: []
  9963                           
  9964                           
  9965                           ;USART.c: 29:     TXSTAbits.SYNC = 0;
  9966  1854  1683               	bsf	3,5	;RP0=1, select bank1
  9967  1855  1303               	bcf	3,6	;RP1=0, select bank1
  9968  1856  1218               	bcf	24,4	;volatile
  9969                           
  9970                           ;USART.c: 30:     RCSTAbits.SPEN = 1;
  9971  1857  1283               	bcf	3,5	;RP0=0, select bank0
  9972  1858  1303               	bcf	3,6	;RP1=0, select bank0
  9973  1859  1798               	bsf	24,7	;volatile
  9974                           
  9975                           ;USART.c: 35:     RCSTAbits.CREN = 1;
  9976  185A  1618               	bsf	24,4	;volatile
  9977  185B                     l223:
  9978  185B  0008               	return
  9979  185C                     __end_of_Init_Receive:
  9980                           
  9981                           	psect	text39
  9982  1992                     __ptext39:	
  9983 ;; *************** function _ISR *****************
  9984 ;; Defined at:
  9985 ;;		line 63 in file "lab3_main.c"
  9986 ;; Parameters:    Size  Location     Type
  9987 ;;		None
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;		None
  9990 ;; Return value:  Size  Location     Type
  9991 ;;                  1    wreg      void 
  9992 ;; Registers used:
  9993 ;;		wreg, status,2, status,0, pclath, cstack
  9994 ;; Tracked objects:
  9995 ;;		On entry : 0/0
  9996 ;;		On exit  : 0/0
  9997 ;;		Unchanged: 0/0
  9998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9999 ;;      Params:         0       0       0       0       0
 10000 ;;      Locals:         0       0       0       0       0
 10001 ;;      Temps:          3       0       0       0       0
 10002 ;;      Totals:         3       0       0       0       0
 10003 ;;Total ram usage:        3 bytes
 10004 ;; Hardware stack levels used:    1
 10005 ;; Hardware stack levels required when called:    1
 10006 ;; This function calls:
 10007 ;;		_USART_Read
 10008 ;; This function is called by:
 10009 ;;		Interrupt level 1
 10010 ;; This function uses a non-reentrant model
 10011 ;;
 10012                           
 10013                           
 10014                           ;psect for function _ISR
 10015  1992                     _ISR:
 10016  1992                     i1l3756:
 10017                           
 10018                           ;lab3_main.c: 65:     if(RCIF==1){
 10019  1992  1283               	bcf	3,5	;RP0=0, select bank0
 10020  1993  1303               	bcf	3,6	;RP1=0, select bank0
 10021  1994  1E8C               	btfss	12,5	;volatile
 10022  1995  2997               	goto	u582_21
 10023  1996  2998               	goto	u582_20
 10024  1997                     u582_21:
 10025  1997  29B8               	goto	i1l89
 10026  1998                     u582_20:
 10027  1998                     i1l3758:
 10028                           
 10029                           ;lab3_main.c: 66:         RCIF=0;
 10030  1998  128C               	bcf	12,5	;volatile
 10031  1999                     i1l3760:
 10032                           
 10033                           ;lab3_main.c: 67:         recibido = USART_Read();
 10034  1999  160A  158A  204C  160A  158A  	fcall	_USART_Read
 10035  199E  00F0               	movwf	??_ISR
 10036  199F  0870               	movf	??_ISR,w
 10037  19A0  00F9               	movwf	_recibido
 10038  19A1                     i1l3762:
 10039                           
 10040                           ;lab3_main.c: 68:         if(recibido == '+'){
 10041  19A1  302B               	movlw	43
 10042  19A2  0679               	xorwf	_recibido,w
 10043  19A3  1D03               	btfss	3,2
 10044  19A4  29A6               	goto	u583_21
 10045  19A5  29A7               	goto	u583_20
 10046  19A6                     u583_21:
 10047  19A6  29AE               	goto	i1l3766
 10048  19A7                     u583_20:
 10049  19A7                     i1l3764:
 10050                           
 10051                           ;lab3_main.c: 69:             contador++;
 10052  19A7  3001               	movlw	1
 10053  19A8  00F0               	movwf	??_ISR
 10054  19A9  0870               	movf	??_ISR,w
 10055  19AA  1683               	bsf	3,5	;RP0=1, select bank1
 10056  19AB  1303               	bcf	3,6	;RP1=0, select bank1
 10057  19AC  07DB               	addwf	_contador^(0+128),f
 10058                           
 10059                           ;lab3_main.c: 70:         }
 10060  19AD  29B8               	goto	i1l89
 10061  19AE                     i1l3766:
 10062  19AE  302D               	movlw	45
 10063  19AF  0679               	xorwf	_recibido,w
 10064  19B0  1D03               	btfss	3,2
 10065  19B1  29B3               	goto	u584_21
 10066  19B2  29B4               	goto	u584_20
 10067  19B3                     u584_21:
 10068  19B3  29B8               	goto	i1l89
 10069  19B4                     u584_20:
 10070  19B4                     i1l3768:
 10071                           
 10072                           ;lab3_main.c: 72:             contador--;
 10073  19B4  3001               	movlw	1
 10074  19B5  1683               	bsf	3,5	;RP0=1, select bank1
 10075  19B6  1303               	bcf	3,6	;RP1=0, select bank1
 10076  19B7  02DB               	subwf	_contador^(0+128),f
 10077  19B8                     i1l89:
 10078  19B8  0872               	movf	??_ISR+2,w
 10079  19B9  008A               	movwf	10
 10080  19BA  0E71               	swapf	??_ISR+1,w
 10081  19BB  0083               	movwf	3
 10082  19BC  0EFE               	swapf	btemp,f
 10083  19BD  0E7E               	swapf	btemp,w
 10084  19BE  0009               	retfie
 10085  19BF                     __end_of_ISR:
 10086                           
 10087                           	psect	intentry
 10088  0004                     __pintentry:	
 10089                           ;incstack = 0
 10090                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
 10091                           
 10092  0004                     interrupt_function:
 10093  007E                     saved_w	set	btemp
 10094  0004  00FE               	movwf	btemp
 10095  0005  0E03               	swapf	3,w
 10096  0006  00F1               	movwf	??_ISR+1
 10097  0007  080A               	movf	10,w
 10098  0008  00F2               	movwf	??_ISR+2
 10099  0009  160A  158A  2992   	ljmp	_ISR
 10100                           
 10101                           	psect	text40
 10102  184C                     __ptext40:	
 10103 ;; *************** function _USART_Read *****************
 10104 ;; Defined at:
 10105 ;;		line 49 in file "USART.c"
 10106 ;; Parameters:    Size  Location     Type
 10107 ;;		None
 10108 ;; Auto vars:     Size  Location     Type
 10109 ;;		None
 10110 ;; Return value:  Size  Location     Type
 10111 ;;                  1    wreg      unsigned char 
 10112 ;; Registers used:
 10113 ;;		wreg
 10114 ;; Tracked objects:
 10115 ;;		On entry : 0/0
 10116 ;;		On exit  : 0/0
 10117 ;;		Unchanged: 0/0
 10118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10119 ;;      Params:         0       0       0       0       0
 10120 ;;      Locals:         0       0       0       0       0
 10121 ;;      Temps:          0       0       0       0       0
 10122 ;;      Totals:         0       0       0       0       0
 10123 ;;Total ram usage:        0 bytes
 10124 ;; Hardware stack levels used:    1
 10125 ;; This function calls:
 10126 ;;		Nothing
 10127 ;; This function is called by:
 10128 ;;		_ISR
 10129 ;; This function uses a non-reentrant model
 10130 ;;
 10131                           
 10132                           
 10133                           ;psect for function _USART_Read
 10134  184C                     _USART_Read:
 10135  184C                     i1l3360:	
 10136                           ;incstack = 0
 10137                           ; Regs used in _USART_Read: [wreg]
 10138                           
 10139  184C                     i1l238:	
 10140                           ;USART.c: 50:   while(!RCIF);
 10141                           
 10142  184C  1283               	bcf	3,5	;RP0=0, select bank0
 10143  184D  1303               	bcf	3,6	;RP1=0, select bank0
 10144  184E  1E8C               	btfss	12,5	;volatile
 10145  184F  2851               	goto	u521_21
 10146  1850  2852               	goto	u521_20
 10147  1851                     u521_21:
 10148  1851  284C               	goto	i1l238
 10149  1852                     u521_20:
 10150  1852                     i1l3362:
 10151                           
 10152                           ;USART.c: 51:   return RCREG;
 10153  1852  081A               	movf	26,w	;volatile
 10154  1853                     i1l241:
 10155  1853  0008               	return
 10156  1854                     __end_of_USART_Read:
 10157  007E                     btemp	set	126	;btemp
 10158  007E                     wtemp0	set	126
 10159                           
 10160                           	psect	config
 10161                           
 10162                           ;Config register CONFIG1 @ 0x2007
 10163                           ;	Oscillator Selection bits
 10164                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
 10165                           ;	Watchdog Timer Enable bit
 10166                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10167                           ;	Power-up Timer Enable bit
 10168                           ;	PWRTE = OFF, PWRT disabled
 10169                           ;	RE3/MCLR pin function select bit
 10170                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10171                           ;	Code Protection bit
 10172                           ;	CP = OFF, Program memory code protection is disabled
 10173                           ;	Data Code Protection bit
 10174                           ;	CPD = OFF, Data memory code protection is disabled
 10175                           ;	Brown Out Reset Selection bits
 10176                           ;	BOREN = OFF, BOR disabled
 10177                           ;	Internal External Switchover bit
 10178                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10179                           ;	Fail-Safe Clock Monitor Enabled bit
 10180                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10181                           ;	Low Voltage Programming Enable bit
 10182                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10183                           ;	In-Circuit Debugger Mode bit
 10184                           ;	DEBUG = 0x1, unprogrammed default
 10185  2007                     	org	8199
 10186  2007  20D1               	dw	8401
 10187                           
 10188                           ;Config register CONFIG2 @ 0x2008
 10189                           ;	Brown-out Reset Selection bit
 10190                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10191                           ;	Flash Program Memory Self Write Enable bits
 10192                           ;	WRT = OFF, Write protection off
 10193  2008                     	org	8200
 10194  2008  3FFF               	dw	16383
 10195                           
 10196                           	psect	text1_split_1
 10197  001E                     u6970:
 10198  001E                     l4336:
 10199  001E  1683               	bsf	3,5	;RP0=1, select bank1
 10200  001F  1303               	bcf	3,6	;RP1=0, select bank1
 10201  0020  084E               	movf	(sprintf@fval+3)^(0+128),w
 10202  0021  1283               	bcf	3,5	;RP0=0, select bank0
 10203  0022  1303               	bcf	3,6	;RP1=0, select bank0
 10204  0023  00A3               	movwf	___fleq@ff1+3
 10205  0024  1683               	bsf	3,5	;RP0=1, select bank1
 10206  0025  1303               	bcf	3,6	;RP1=0, select bank1
 10207  0026  084D               	movf	(sprintf@fval+2)^(0+128),w
 10208  0027  1283               	bcf	3,5	;RP0=0, select bank0
 10209  0028  1303               	bcf	3,6	;RP1=0, select bank0
 10210  0029  00A2               	movwf	___fleq@ff1+2
 10211  002A  1683               	bsf	3,5	;RP0=1, select bank1
 10212  002B  1303               	bcf	3,6	;RP1=0, select bank1
 10213  002C  084C               	movf	(sprintf@fval+1)^(0+128),w
 10214  002D  1283               	bcf	3,5	;RP0=0, select bank0
 10215  002E  1303               	bcf	3,6	;RP1=0, select bank0
 10216  002F  00A1               	movwf	___fleq@ff1+1
 10217  0030  1683               	bsf	3,5	;RP0=1, select bank1
 10218  0031  1303               	bcf	3,6	;RP1=0, select bank1
 10219  0032  084B               	movf	sprintf@fval^(0+128),w
 10220  0033  1283               	bcf	3,5	;RP0=0, select bank0
 10221  0034  1303               	bcf	3,6	;RP1=0, select bank0
 10222  0035  00A0               	movwf	___fleq@ff1
 10223  0036  3000               	movlw	0
 10224  0037  00A7               	movwf	___fleq@ff2+3
 10225  0038  3000               	movlw	0
 10226  0039  00A6               	movwf	___fleq@ff2+2
 10227  003A  3000               	movlw	0
 10228  003B  00A5               	movwf	___fleq@ff2+1
 10229  003C  3000               	movlw	0
 10230  003D  00A4               	movwf	___fleq@ff2
 10231  003E  160A  158A  22D4  120A  118A  	fcall	___fleq
 10232  0043  1803               	btfsc	3,0
 10233  0044  2846               	goto	u6981
 10234  0045  2847               	goto	u6980
 10235  0046                     u6981:
 10236  0046  2929               	goto	l4356
 10237  0047                     u6980:
 10238  0047                     l4338:
 10239  0047  1683               	bsf	3,5	;RP0=1, select bank1
 10240  0048  1303               	bcf	3,6	;RP1=0, select bank1
 10241  0049  084E               	movf	(sprintf@fval+3)^(0+128),w
 10242  004A  1283               	bcf	3,5	;RP0=0, select bank0
 10243  004B  1303               	bcf	3,6	;RP1=0, select bank0
 10244  004C  00DA               	movwf	___fltol@f1+3
 10245  004D  1683               	bsf	3,5	;RP0=1, select bank1
 10246  004E  1303               	bcf	3,6	;RP1=0, select bank1
 10247  004F  084D               	movf	(sprintf@fval+2)^(0+128),w
 10248  0050  1283               	bcf	3,5	;RP0=0, select bank0
 10249  0051  1303               	bcf	3,6	;RP1=0, select bank0
 10250  0052  00D9               	movwf	___fltol@f1+2
 10251  0053  1683               	bsf	3,5	;RP0=1, select bank1
 10252  0054  1303               	bcf	3,6	;RP1=0, select bank1
 10253  0055  084C               	movf	(sprintf@fval+1)^(0+128),w
 10254  0056  1283               	bcf	3,5	;RP0=0, select bank0
 10255  0057  1303               	bcf	3,6	;RP1=0, select bank0
 10256  0058  00D8               	movwf	___fltol@f1+1
 10257  0059  1683               	bsf	3,5	;RP0=1, select bank1
 10258  005A  1303               	bcf	3,6	;RP1=0, select bank1
 10259  005B  084B               	movf	sprintf@fval^(0+128),w
 10260  005C  1283               	bcf	3,5	;RP0=0, select bank0
 10261  005D  1303               	bcf	3,6	;RP1=0, select bank0
 10262  005E  00D7               	movwf	___fltol@f1
 10263  005F  120A  118A  2777  120A  118A  	fcall	___fltol
 10264  0064  1283               	bcf	3,5	;RP0=0, select bank0
 10265  0065  1303               	bcf	3,6	;RP1=0, select bank0
 10266  0066  085A               	movf	?___fltol+3,w
 10267  0067  0459               	iorwf	?___fltol+2,w
 10268  0068  0458               	iorwf	?___fltol+1,w
 10269  0069  0457               	iorwf	?___fltol,w
 10270  006A  1D03               	skipz
 10271  006B  286D               	goto	u6991
 10272  006C  286E               	goto	u6990
 10273  006D                     u6991:
 10274  006D  2929               	goto	l4356
 10275  006E                     u6990:
 10276  006E                     l4340:
 10277  006E  1683               	bsf	3,5	;RP0=1, select bank1
 10278  006F  1303               	bcf	3,6	;RP1=0, select bank1
 10279  0070  084A               	movf	(sprintf@eexp+1)^(0+128),w
 10280  0071  3A80               	xorlw	128
 10281  0072  00FF               	movwf	btemp+1
 10282  0073  3080               	movlw	128
 10283  0074  027F               	subwf	btemp+1,w
 10284  0075  1D03               	skipz
 10285  0076  2879               	goto	u7005
 10286  0077  3002               	movlw	2
 10287  0078  0249               	subwf	sprintf@eexp^(0+128),w
 10288  0079                     u7005:
 10289  0079  1C03               	skipc
 10290  007A  287C               	goto	u7001
 10291  007B  287D               	goto	u7000
 10292  007C                     u7001:
 10293  007C  2929               	goto	l4356
 10294  007D                     u7000:
 10295  007D                     l4342:
 10296                           
 10297                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmpval.integ < 4.
      +                          294967296){
 10298  007D  1683               	bsf	3,5	;RP0=1, select bank1
 10299  007E  1303               	bcf	3,6	;RP1=0, select bank1
 10300  007F  0844               	movf	(sprintf@tmpval+3)^(0+128),w
 10301  0080  1283               	bcf	3,5	;RP0=0, select bank0
 10302  0081  1303               	bcf	3,6	;RP1=0, select bank0
 10303  0082  00A3               	movwf	___flge@ff1+3
 10304  0083  1683               	bsf	3,5	;RP0=1, select bank1
 10305  0084  1303               	bcf	3,6	;RP1=0, select bank1
 10306  0085  0843               	movf	(sprintf@tmpval+2)^(0+128),w
 10307  0086  1283               	bcf	3,5	;RP0=0, select bank0
 10308  0087  1303               	bcf	3,6	;RP1=0, select bank0
 10309  0088  00A2               	movwf	___flge@ff1+2
 10310  0089  1683               	bsf	3,5	;RP0=1, select bank1
 10311  008A  1303               	bcf	3,6	;RP1=0, select bank1
 10312  008B  0842               	movf	(sprintf@tmpval+1)^(0+128),w
 10313  008C  1283               	bcf	3,5	;RP0=0, select bank0
 10314  008D  1303               	bcf	3,6	;RP1=0, select bank0
 10315  008E  00A1               	movwf	___flge@ff1+1
 10316  008F  1683               	bsf	3,5	;RP0=1, select bank1
 10317  0090  1303               	bcf	3,6	;RP1=0, select bank1
 10318  0091  0841               	movf	sprintf@tmpval^(0+128),w
 10319  0092  1283               	bcf	3,5	;RP0=0, select bank0
 10320  0093  1303               	bcf	3,6	;RP1=0, select bank0
 10321  0094  00A0               	movwf	___flge@ff1
 10322  0095  3040               	movlw	64
 10323  0096  00A7               	movwf	___flge@ff2+3
 10324  0097  3089               	movlw	137
 10325  0098  00A6               	movwf	___flge@ff2+2
 10326  0099  3070               	movlw	112
 10327  009A  00A5               	movwf	___flge@ff2+1
 10328  009B  305F               	movlw	95
 10329  009C  00A4               	movwf	___flge@ff2
 10330  009D  160A  158A  2525  120A  118A  	fcall	___flge
 10331  00A2  1803               	btfsc	3,0
 10332  00A3  28A5               	goto	u7011
 10333  00A4  28A6               	goto	u7010
 10334  00A5                     u7011:
 10335  00A5  28AF               	goto	l4346
 10336  00A6                     u7010:
 10337  00A6                     l4344:
 10338                           
 10339                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp -= (sizeof dpo
      +                          wers/sizeof dpowers[0])-1;
 10340  00A6  30F7               	movlw	247
 10341  00A7  1683               	bsf	3,5	;RP0=1, select bank1
 10342  00A8  1303               	bcf	3,6	;RP1=0, select bank1
 10343  00A9  07C9               	addwf	sprintf@eexp^(0+128),f
 10344  00AA  1803               	skipnc
 10345  00AB  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
 10346  00AC  30FF               	movlw	255
 10347  00AD  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
 10348                           
 10349                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10350  00AE  28B7               	goto	l4348
 10351  00AF                     l4346:
 10352                           
 10353                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp -= (sizeof dpo
      +                          wers/sizeof dpowers[0])-2;
 10354  00AF  30F8               	movlw	248
 10355  00B0  1683               	bsf	3,5	;RP0=1, select bank1
 10356  00B1  1303               	bcf	3,6	;RP1=0, select bank1
 10357  00B2  07C9               	addwf	sprintf@eexp^(0+128),f
 10358  00B3  1803               	skipnc
 10359  00B4  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
 10360  00B5  30FF               	movlw	255
 10361  00B6  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
 10362  00B7                     l4348:
 10363                           
 10364                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = ((sizeof(doubl
      +                          e)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10365  00B7  0849               	movf	sprintf@eexp^(0+128),w
 10366  00B8  120A  158A  249D  120A  118A  	fcall	_scale
 10367  00BD  1283               	bcf	3,5	;RP0=0, select bank0
 10368  00BE  1303               	bcf	3,6	;RP1=0, select bank0
 10369  00BF  0847               	movf	?_scale+3,w
 10370  00C0  1683               	bsf	3,5	;RP0=1, select bank1
 10371  00C1  1303               	bcf	3,6	;RP1=0, select bank1
 10372  00C2  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 10373  00C3  1283               	bcf	3,5	;RP0=0, select bank0
 10374  00C4  1303               	bcf	3,6	;RP1=0, select bank0
 10375  00C5  0846               	movf	?_scale+2,w
 10376  00C6  1683               	bsf	3,5	;RP0=1, select bank1
 10377  00C7  1303               	bcf	3,6	;RP1=0, select bank1
 10378  00C8  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 10379  00C9  1283               	bcf	3,5	;RP0=0, select bank0
 10380  00CA  1303               	bcf	3,6	;RP1=0, select bank0
 10381  00CB  0845               	movf	?_scale+1,w
 10382  00CC  1683               	bsf	3,5	;RP0=1, select bank1
 10383  00CD  1303               	bcf	3,6	;RP1=0, select bank1
 10384  00CE  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 10385  00CF  1283               	bcf	3,5	;RP0=0, select bank0
 10386  00D0  1303               	bcf	3,6	;RP1=0, select bank0
 10387  00D1  0844               	movf	?_scale,w
 10388  00D2  1683               	bsf	3,5	;RP0=1, select bank1
 10389  00D3  1303               	bcf	3,6	;RP1=0, select bank1
 10390  00D4  00C1               	movwf	sprintf@tmpval^(0+128)
 10391  00D5                     l4350:
 10392  00D5  084E               	movf	(sprintf@fval+3)^(0+128),w
 10393  00D6  1283               	bcf	3,5	;RP0=0, select bank0
 10394  00D7  1303               	bcf	3,6	;RP1=0, select bank0
 10395  00D8  00A3               	movwf	__div_to_l_@f1+3
 10396  00D9  1683               	bsf	3,5	;RP0=1, select bank1
 10397  00DA  1303               	bcf	3,6	;RP1=0, select bank1
 10398  00DB  084D               	movf	(sprintf@fval+2)^(0+128),w
 10399  00DC  1283               	bcf	3,5	;RP0=0, select bank0
 10400  00DD  1303               	bcf	3,6	;RP1=0, select bank0
 10401  00DE  00A2               	movwf	__div_to_l_@f1+2
 10402  00DF  1683               	bsf	3,5	;RP0=1, select bank1
 10403  00E0  1303               	bcf	3,6	;RP1=0, select bank1
 10404  00E1  084C               	movf	(sprintf@fval+1)^(0+128),w
 10405  00E2  1283               	bcf	3,5	;RP0=0, select bank0
 10406  00E3  1303               	bcf	3,6	;RP1=0, select bank0
 10407  00E4  00A1               	movwf	__div_to_l_@f1+1
 10408  00E5  1683               	bsf	3,5	;RP0=1, select bank1
 10409  00E6  1303               	bcf	3,6	;RP1=0, select bank1
 10410  00E7  084B               	movf	sprintf@fval^(0+128),w
 10411  00E8  1283               	bcf	3,5	;RP0=0, select bank0
 10412  00E9  1303               	bcf	3,6	;RP1=0, select bank0
 10413  00EA  00A0               	movwf	__div_to_l_@f1
 10414  00EB  1683               	bsf	3,5	;RP0=1, select bank1
 10415  00EC  1303               	bcf	3,6	;RP1=0, select bank1
 10416  00ED  0844               	movf	(sprintf@tmpval+3)^(0+128),w
 10417  00EE  1283               	bcf	3,5	;RP0=0, select bank0
 10418  00EF  1303               	bcf	3,6	;RP1=0, select bank0
 10419  00F0  00A7               	movwf	__div_to_l_@f2+3
 10420  00F1  1683               	bsf	3,5	;RP0=1, select bank1
 10421  00F2  1303               	bcf	3,6	;RP1=0, select bank1
 10422  00F3  0843               	movf	(sprintf@tmpval+2)^(0+128),w
 10423  00F4  1283               	bcf	3,5	;RP0=0, select bank0
 10424  00F5  1303               	bcf	3,6	;RP1=0, select bank0
 10425  00F6  00A6               	movwf	__div_to_l_@f2+2
 10426  00F7  1683               	bsf	3,5	;RP0=1, select bank1
 10427  00F8  1303               	bcf	3,6	;RP1=0, select bank1
 10428  00F9  0842               	movf	(sprintf@tmpval+1)^(0+128),w
 10429  00FA  1283               	bcf	3,5	;RP0=0, select bank0
 10430  00FB  1303               	bcf	3,6	;RP1=0, select bank0
 10431  00FC  00A5               	movwf	__div_to_l_@f2+1
 10432  00FD  1683               	bsf	3,5	;RP0=1, select bank1
 10433  00FE  1303               	bcf	3,6	;RP1=0, select bank1
 10434  00FF  0841               	movf	sprintf@tmpval^(0+128),w
 10435  0100  1283               	bcf	3,5	;RP0=0, select bank0
 10436  0101  1303               	bcf	3,6	;RP1=0, select bank0
 10437  0102  00A4               	movwf	__div_to_l_@f2
 10438  0103  160A  158A  2742  120A  118A  	fcall	__div_to_l_
 10439  0108  1283               	bcf	3,5	;RP0=0, select bank0
 10440  0109  1303               	bcf	3,6	;RP1=0, select bank0
 10441  010A  0823               	movf	?__div_to_l_+3,w
 10442  010B  1683               	bsf	3,5	;RP0=1, select bank1
 10443  010C  1303               	bcf	3,6	;RP1=0, select bank1
 10444  010D  00C8               	movwf	(sprintf@val+3)^(0+128)
 10445  010E  1283               	bcf	3,5	;RP0=0, select bank0
 10446  010F  1303               	bcf	3,6	;RP1=0, select bank0
 10447  0110  0822               	movf	?__div_to_l_+2,w
 10448  0111  1683               	bsf	3,5	;RP0=1, select bank1
 10449  0112  1303               	bcf	3,6	;RP1=0, select bank1
 10450  0113  00C7               	movwf	(sprintf@val+2)^(0+128)
 10451  0114  1283               	bcf	3,5	;RP0=0, select bank0
 10452  0115  1303               	bcf	3,6	;RP1=0, select bank0
 10453  0116  0821               	movf	?__div_to_l_+1,w
 10454  0117  1683               	bsf	3,5	;RP0=1, select bank1
 10455  0118  1303               	bcf	3,6	;RP1=0, select bank1
 10456  0119  00C6               	movwf	(sprintf@val+1)^(0+128)
 10457  011A  1283               	bcf	3,5	;RP0=0, select bank0
 10458  011B  1303               	bcf	3,6	;RP1=0, select bank0
 10459  011C  0820               	movf	?__div_to_l_,w
 10460  011D  1683               	bsf	3,5	;RP0=1, select bank1
 10461  011E  1303               	bcf	3,6	;RP1=0, select bank1
 10462  011F  00C5               	movwf	sprintf@val^(0+128)
 10463  0120                     l4354:
 10464                           
 10465                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval = 0.0;
 10466  0120  3000               	movlw	0
 10467  0121  00CE               	movwf	(sprintf@fval+3)^(0+128)
 10468  0122  3000               	movlw	0
 10469  0123  00CD               	movwf	(sprintf@fval+2)^(0+128)
 10470  0124  3000               	movlw	0
 10471  0125  00CC               	movwf	(sprintf@fval+1)^(0+128)
 10472  0126  3000               	movlw	0
 10473  0127  00CB               	movwf	sprintf@fval^(0+128)
 10474                           
 10475                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else {
 10476  0128  298F               	goto	l4362
 10477  0129                     l4356:
 10478                           
 10479                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = (unsigned long
      +                          )fval;
 10480  0129  1683               	bsf	3,5	;RP0=1, select bank1
 10481  012A  1303               	bcf	3,6	;RP1=0, select bank1
 10482  012B  084E               	movf	(sprintf@fval+3)^(0+128),w
 10483  012C  1283               	bcf	3,5	;RP0=0, select bank0
 10484  012D  1303               	bcf	3,6	;RP1=0, select bank0
 10485  012E  00DA               	movwf	___fltol@f1+3
 10486  012F  1683               	bsf	3,5	;RP0=1, select bank1
 10487  0130  1303               	bcf	3,6	;RP1=0, select bank1
 10488  0131  084D               	movf	(sprintf@fval+2)^(0+128),w
 10489  0132  1283               	bcf	3,5	;RP0=0, select bank0
 10490  0133  1303               	bcf	3,6	;RP1=0, select bank0
 10491  0134  00D9               	movwf	___fltol@f1+2
 10492  0135  1683               	bsf	3,5	;RP0=1, select bank1
 10493  0136  1303               	bcf	3,6	;RP1=0, select bank1
 10494  0137  084C               	movf	(sprintf@fval+1)^(0+128),w
 10495  0138  1283               	bcf	3,5	;RP0=0, select bank0
 10496  0139  1303               	bcf	3,6	;RP1=0, select bank0
 10497  013A  00D8               	movwf	___fltol@f1+1
 10498  013B  1683               	bsf	3,5	;RP0=1, select bank1
 10499  013C  1303               	bcf	3,6	;RP1=0, select bank1
 10500  013D  084B               	movf	sprintf@fval^(0+128),w
 10501  013E  1283               	bcf	3,5	;RP0=0, select bank0
 10502  013F  1303               	bcf	3,6	;RP1=0, select bank0
 10503  0140  00D7               	movwf	___fltol@f1
 10504  0141  120A  118A  2777  120A  118A  	fcall	___fltol
 10505  0146  1283               	bcf	3,5	;RP0=0, select bank0
 10506  0147  1303               	bcf	3,6	;RP1=0, select bank0
 10507  0148  085A               	movf	?___fltol+3,w
 10508  0149  1683               	bsf	3,5	;RP0=1, select bank1
 10509  014A  1303               	bcf	3,6	;RP1=0, select bank1
 10510  014B  00C8               	movwf	(sprintf@val+3)^(0+128)
 10511  014C  1283               	bcf	3,5	;RP0=0, select bank0
 10512  014D  1303               	bcf	3,6	;RP1=0, select bank0
 10513  014E  0859               	movf	?___fltol+2,w
 10514  014F  1683               	bsf	3,5	;RP0=1, select bank1
 10515  0150  1303               	bcf	3,6	;RP1=0, select bank1
 10516  0151  00C7               	movwf	(sprintf@val+2)^(0+128)
 10517  0152  1283               	bcf	3,5	;RP0=0, select bank0
 10518  0153  1303               	bcf	3,6	;RP1=0, select bank0
 10519  0154  0858               	movf	?___fltol+1,w
 10520  0155  1683               	bsf	3,5	;RP0=1, select bank1
 10521  0156  1303               	bcf	3,6	;RP1=0, select bank1
 10522  0157  00C6               	movwf	(sprintf@val+1)^(0+128)
 10523  0158  1283               	bcf	3,5	;RP0=0, select bank0
 10524  0159  1303               	bcf	3,6	;RP1=0, select bank0
 10525  015A  0857               	movf	?___fltol,w
 10526  015B  1683               	bsf	3,5	;RP0=1, select bank1
 10527  015C  1303               	bcf	3,6	;RP1=0, select bank1
 10528  015D  00C5               	movwf	sprintf@val^(0+128)
 10529  015E                     l4358:
 10530                           
 10531                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -= (double)val;
 10532  015E  0848               	movf	(sprintf@val+3)^(0+128),w
 10533  015F  00F6               	movwf	___xxtofl@val+3
 10534  0160  0847               	movf	(sprintf@val+2)^(0+128),w
 10535  0161  00F5               	movwf	___xxtofl@val+2
 10536  0162  0846               	movf	(sprintf@val+1)^(0+128),w
 10537  0163  00F4               	movwf	___xxtofl@val+1
 10538  0164  0845               	movf	sprintf@val^(0+128),w
 10539  0165  00F3               	movwf	___xxtofl@val
 10540  0166  3000               	movlw	0
 10541  0167  160A  158A  25C9  120A  118A  	fcall	___xxtofl
 10542  016C  0876               	movf	?___xxtofl+3,w
 10543  016D  1683               	bsf	3,5	;RP0=1, select bank1
 10544  016E  1303               	bcf	3,6	;RP1=0, select bank1
 10545  016F  00A3               	movwf	(___flsub@a+3)^(0+128)
 10546  0170  0875               	movf	?___xxtofl+2,w
 10547  0171  00A2               	movwf	(___flsub@a+2)^(0+128)
 10548  0172  0874               	movf	?___xxtofl+1,w
 10549  0173  00A1               	movwf	(___flsub@a+1)^(0+128)
 10550  0174  0873               	movf	?___xxtofl,w
 10551  0175  00A0               	movwf	___flsub@a^(0+128)
 10552  0176  084E               	movf	(sprintf@fval+3)^(0+128),w
 10553  0177  00A7               	movwf	(___flsub@b+3)^(0+128)
 10554  0178  084D               	movf	(sprintf@fval+2)^(0+128),w
 10555  0179  00A6               	movwf	(___flsub@b+2)^(0+128)
 10556  017A  084C               	movf	(sprintf@fval+1)^(0+128),w
 10557  017B  00A5               	movwf	(___flsub@b+1)^(0+128)
 10558  017C  084B               	movf	sprintf@fval^(0+128),w
 10559  017D  00A4               	movwf	___flsub@b^(0+128)
 10560  017E  160A  158A  2324  120A  118A  	fcall	___flsub
 10561  0183  1683               	bsf	3,5	;RP0=1, select bank1
 10562  0184  1303               	bcf	3,6	;RP1=0, select bank1
 10563  0185  0823               	movf	(?___flsub+3)^(0+128),w
 10564  0186  00CE               	movwf	(sprintf@fval+3)^(0+128)
 10565  0187  0822               	movf	(?___flsub+2)^(0+128),w
 10566  0188  00CD               	movwf	(sprintf@fval+2)^(0+128)
 10567  0189  0821               	movf	(?___flsub+1)^(0+128),w
 10568  018A  00CC               	movwf	(sprintf@fval+1)^(0+128)
 10569  018B  0820               	movf	?___flsub^(0+128),w
 10570  018C  00CB               	movwf	sprintf@fval^(0+128)
 10571  018D                     l4360:
 10572                           
 10573                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp = 0;
 10574  018D  01C9               	clrf	sprintf@eexp^(0+128)
 10575  018E  01CA               	clrf	(sprintf@eexp+1)^(0+128)
 10576  018F                     l4362:
 10577                           
 10578                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c = 1 ; c != (siz
      +                          eof dpowers/sizeof dpowers[0]) ; c++)
 10579  018F  01D2               	clrf	sprintf@c^(0+128)
 10580  0190  0AD2               	incf	sprintf@c^(0+128),f
 10581  0191                     l4368:
 10582                           
 10583                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val < dpowers[c])
 10584  0191  0852               	movf	sprintf@c^(0+128),w
 10585  0192  00B3               	movwf	??_sprintf^(0+128)
 10586  0193  3001               	movlw	1
 10587  0194                     u7025:
 10588  0194  1003               	clrc
 10589  0195  0DB3               	rlf	??_sprintf^(0+128),f
 10590  0196  3EFF               	addlw	-1
 10591  0197  1D03               	skipz
 10592  0198  2994               	goto	u7025
 10593  0199  1003               	clrc
 10594  019A  0D33               	rlf	??_sprintf^(0+128),w
 10595  019B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10596  019C  0084               	movwf	4
 10597  019D  120A  158A  200A  120A  118A  	fcall	stringdir
 10598  01A2  00B4               	movwf	(??_sprintf+1)^(0+128)
 10599  01A3  120A  158A  200A  120A  118A  	fcall	stringdir
 10600  01A8  00B5               	movwf	((??_sprintf+1)^(0+128)+1)
 10601  01A9  120A  158A  200A  120A  118A  	fcall	stringdir
 10602  01AE  00B6               	movwf	((??_sprintf+1)^(0+128)+2)
 10603  01AF  120A  158A  200A  120A  118A  	fcall	stringdir
 10604  01B4  00B7               	movwf	((??_sprintf+1)^(0+128)+3)
 10605  01B5  0837               	movf	(??_sprintf+4)^(0+128),w
 10606  01B6  0248               	subwf	(sprintf@val+3)^(0+128),w
 10607  01B7  1D03               	skipz
 10608  01B8  29C3               	goto	u7035
 10609  01B9  0836               	movf	(??_sprintf+3)^(0+128),w
 10610  01BA  0247               	subwf	(sprintf@val+2)^(0+128),w
 10611  01BB  1D03               	skipz
 10612  01BC  29C3               	goto	u7035
 10613  01BD  0835               	movf	(??_sprintf+2)^(0+128),w
 10614  01BE  0246               	subwf	(sprintf@val+1)^(0+128),w
 10615  01BF  1D03               	skipz
 10616  01C0  29C3               	goto	u7035
 10617  01C1  0834               	movf	(??_sprintf+1)^(0+128),w
 10618  01C2  0245               	subwf	sprintf@val^(0+128),w
 10619  01C3                     u7035:
 10620  01C3  1803               	skipnc
 10621  01C4  29C6               	goto	u7031
 10622  01C5  29C7               	goto	u7030
 10623  01C6                     u7031:
 10624  01C6  29C8               	goto	l4372
 10625  01C7                     u7030:
 10626  01C7  29D2               	goto	l4374
 10627  01C8                     l4372:
 10628  01C8  3001               	movlw	1
 10629  01C9  00B3               	movwf	??_sprintf^(0+128)
 10630  01CA  0833               	movf	??_sprintf^(0+128),w
 10631  01CB  07D2               	addwf	sprintf@c^(0+128),f
 10632  01CC  300A               	movlw	10
 10633  01CD  0652               	xorwf	sprintf@c^(0+128),w
 10634  01CE  1D03               	btfss	3,2
 10635  01CF  29D1               	goto	u7041
 10636  01D0  29D2               	goto	u7040
 10637  01D1                     u7041:
 10638  01D1  2991               	goto	l4368
 10639  01D2                     u7040:
 10640  01D2                     l4374:
 10641                           
 10642                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -= prec + c + e
      +                          exp;
 10643  01D2  0852               	movf	sprintf@c^(0+128),w
 10644  01D3  0750               	addwf	sprintf@prec^(0+128),w
 10645  01D4  00B3               	movwf	??_sprintf^(0+128)
 10646  01D5  0851               	movf	(sprintf@prec+1)^(0+128),w
 10647  01D6  1803               	skipnc
 10648  01D7  0A51               	incf	(sprintf@prec+1)^(0+128),w
 10649  01D8  00B4               	movwf	(??_sprintf^(0+128)+1)
 10650  01D9  0849               	movf	sprintf@eexp^(0+128),w
 10651  01DA  0733               	addwf	??_sprintf^(0+128),w
 10652  01DB  00B5               	movwf	(??_sprintf+2)^(0+128)
 10653  01DC  084A               	movf	(sprintf@eexp+1)^(0+128),w
 10654  01DD  1803               	skipnc
 10655  01DE  0A4A               	incf	(sprintf@eexp+1)^(0+128),w
 10656  01DF  0734               	addwf	(??_sprintf+1)^(0+128),w
 10657  01E0  00B6               	movwf	(??_sprintf+3)^(0+128)
 10658  01E1  0835               	movf	(??_sprintf+2)^(0+128),w
 10659  01E2  02BF               	subwf	sprintf@width^(0+128),f
 10660  01E3  0836               	movf	(??_sprintf+3)^(0+128),w
 10661  01E4  1C03               	skipc
 10662  01E5  03C0               	decf	(sprintf@width+1)^(0+128),f
 10663  01E6  02C0               	subwf	(sprintf@width+1)^(0+128),f
 10664                           
 10665                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10666  01E7  0850               	movf	sprintf@prec^(0+128),w
 10667  01E8  0451               	iorwf	(sprintf@prec+1)^(0+128),w
 10668  01E9  1903               	btfsc	3,2
 10669  01EA  29EC               	goto	u7051
 10670  01EB  29ED               	goto	u7050
 10671  01EC                     u7051:
 10672  01EC  29F3               	goto	l4378
 10673  01ED                     u7050:
 10674  01ED                     l4376:
 10675                           
 10676                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width--;
 10677  01ED  30FF               	movlw	255
 10678  01EE  07BF               	addwf	sprintf@width^(0+128),f
 10679  01EF  1803               	skipnc
 10680  01F0  0AC0               	incf	(sprintf@width+1)^(0+128),f
 10681  01F1  30FF               	movlw	255
 10682  01F2  07C0               	addwf	(sprintf@width+1)^(0+128),f
 10683  01F3                     l4378:
 10684                           
 10685                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag & 0x03)
 10686  01F3  3003               	movlw	3
 10687  01F4  053D               	andwf	sprintf@flag^(0+128),w
 10688  01F5  00B3               	movwf	??_sprintf^(0+128)
 10689  01F6  3000               	movlw	0
 10690  01F7  053E               	andwf	(sprintf@flag+1)^(0+128),w
 10691  01F8  00B4               	movwf	(??_sprintf+1)^(0+128)
 10692  01F9  0833               	movf	??_sprintf^(0+128),w
 10693  01FA  0434               	iorwf	(??_sprintf^(0+128)+1),w
 10694  01FB  1903               	btfsc	3,2
 10695  01FC  29FE               	goto	u7061
 10696  01FD  29FF               	goto	u7060
 10697  01FE                     u7061:
 10698  01FE  2A14               	goto	l4388
 10699  01FF                     u7060:
 10700  01FF                     l4380:
 10701                           
 10702                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width--;
 10703  01FF  30FF               	movlw	255
 10704  0200  07BF               	addwf	sprintf@width^(0+128),f
 10705  0201  1803               	skipnc
 10706  0202  0AC0               	incf	(sprintf@width+1)^(0+128),f
 10707  0203  30FF               	movlw	255
 10708  0204  07C0               	addwf	(sprintf@width+1)^(0+128),f
 10709  0205  2A14               	goto	l4388
 10710  0206                     l4382:
 10711                           
 10712                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp++ = (' ')));
 10713  0206  3020               	movlw	32
 10714  0207  1683               	bsf	3,5	;RP0=1, select bank1
 10715  0208  1303               	bcf	3,6	;RP1=0, select bank1
 10716  0209  00B3               	movwf	??_sprintf^(0+128)
 10717  020A  084F               	movf	sprintf@sp^(0+128),w
 10718  020B  0084               	movwf	4
 10719  020C  0833               	movf	??_sprintf^(0+128),w
 10720  020D  1383               	bcf	3,7	;select IRP bank0
 10721  020E  0080               	movwf	0
 10722  020F                     l4384:
 10723  020F  3001               	movlw	1
 10724  0210  00B3               	movwf	??_sprintf^(0+128)
 10725  0211  0833               	movf	??_sprintf^(0+128),w
 10726  0212  07CF               	addwf	sprintf@sp^(0+128),f
 10727  0213  29FF               	goto	l4380
 10728  0214                     l4388:
 10729                           
 10730                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(width > 0) {
 10731  0214  0840               	movf	(sprintf@width+1)^(0+128),w
 10732  0215  3A80               	xorlw	128
 10733  0216  00FF               	movwf	btemp+1
 10734  0217  3080               	movlw	128
 10735  0218  027F               	subwf	btemp+1,w
 10736  0219  1D03               	skipz
 10737  021A  2A1D               	goto	u7075
 10738  021B  3001               	movlw	1
 10739  021C  023F               	subwf	sprintf@width^(0+128),w
 10740  021D                     u7075:
 10741  021D  1803               	skipnc
 10742  021E  2A20               	goto	u7071
 10743  021F  2A21               	goto	u7070
 10744  0220                     u7071:
 10745  0220  2A06               	goto	l4382
 10746  0221                     u7070:
 10747  0221                     l4390:
 10748                           
 10749                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x03)
 10750  0221  3003               	movlw	3
 10751  0222  1683               	bsf	3,5	;RP0=1, select bank1
 10752  0223  1303               	bcf	3,6	;RP1=0, select bank1
 10753  0224  053D               	andwf	sprintf@flag^(0+128),w
 10754  0225  00B3               	movwf	??_sprintf^(0+128)
 10755  0226  3000               	movlw	0
 10756  0227  053E               	andwf	(sprintf@flag+1)^(0+128),w
 10757  0228  00B4               	movwf	(??_sprintf+1)^(0+128)
 10758  0229  0833               	movf	??_sprintf^(0+128),w
 10759  022A  0434               	iorwf	(??_sprintf^(0+128)+1),w
 10760  022B  1903               	btfsc	3,2
 10761  022C  2A2E               	goto	u7081
 10762  022D  2A2F               	goto	u7080
 10763  022E                     u7081:
 10764  022E  2AE1               	goto	l410
 10765  022F                     u7080:
 10766  022F                     l4392:
 10767                           
 10768                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp++ = ('-')));
 10769  022F  302D               	movlw	45
 10770  0230  00B3               	movwf	??_sprintf^(0+128)
 10771  0231  084F               	movf	sprintf@sp^(0+128),w
 10772  0232  0084               	movwf	4
 10773  0233  0833               	movf	??_sprintf^(0+128),w
 10774  0234  1383               	bcf	3,7	;select IRP bank0
 10775  0235  0080               	movwf	0
 10776  0236                     l4394:
 10777  0236  3001               	movlw	1
 10778  0237  00B3               	movwf	??_sprintf^(0+128)
 10779  0238  0833               	movf	??_sprintf^(0+128),w
 10780  0239  07CF               	addwf	sprintf@sp^(0+128),f
 10781  023A  2AE1               	goto	l410
 10782  023B                     l4396:
 10783                           
 10784                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;D:\Microchip\xc8\v2
      +                          .31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = val/dpowers[c];
 10785  023B  0852               	movf	sprintf@c^(0+128),w
 10786  023C  00B3               	movwf	??_sprintf^(0+128)
 10787  023D  3001               	movlw	1
 10788  023E                     u7095:
 10789  023E  1003               	clrc
 10790  023F  0DB3               	rlf	??_sprintf^(0+128),f
 10791  0240  3EFF               	addlw	-1
 10792  0241  1D03               	skipz
 10793  0242  2A3E               	goto	u7095
 10794  0243  1003               	clrc
 10795  0244  0D33               	rlf	??_sprintf^(0+128),w
 10796  0245  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10797  0246  0084               	movwf	4
 10798  0247  120A  158A  200A  120A  118A  	fcall	stringdir
 10799  024C  1283               	bcf	3,5	;RP0=0, select bank0
 10800  024D  1303               	bcf	3,6	;RP1=0, select bank0
 10801  024E  00A0               	movwf	___lldiv@divisor
 10802  024F  120A  158A  200A  120A  118A  	fcall	stringdir
 10803  0254  00A1               	movwf	___lldiv@divisor+1
 10804  0255  120A  158A  200A  120A  118A  	fcall	stringdir
 10805  025A  00A2               	movwf	___lldiv@divisor+2
 10806  025B  120A  158A  200A  120A  118A  	fcall	stringdir
 10807  0260  00A3               	movwf	___lldiv@divisor+3
 10808  0261  1683               	bsf	3,5	;RP0=1, select bank1
 10809  0262  1303               	bcf	3,6	;RP1=0, select bank1
 10810  0263  0848               	movf	(sprintf@val+3)^(0+128),w
 10811  0264  1283               	bcf	3,5	;RP0=0, select bank0
 10812  0265  1303               	bcf	3,6	;RP1=0, select bank0
 10813  0266  00A7               	movwf	___lldiv@dividend+3
 10814  0267  1683               	bsf	3,5	;RP0=1, select bank1
 10815  0268  1303               	bcf	3,6	;RP1=0, select bank1
 10816  0269  0847               	movf	(sprintf@val+2)^(0+128),w
 10817  026A  1283               	bcf	3,5	;RP0=0, select bank0
 10818  026B  1303               	bcf	3,6	;RP1=0, select bank0
 10819  026C  00A6               	movwf	___lldiv@dividend+2
 10820  026D  1683               	bsf	3,5	;RP0=1, select bank1
 10821  026E  1303               	bcf	3,6	;RP1=0, select bank1
 10822  026F  0846               	movf	(sprintf@val+1)^(0+128),w
 10823  0270  1283               	bcf	3,5	;RP0=0, select bank0
 10824  0271  1303               	bcf	3,6	;RP1=0, select bank0
 10825  0272  00A5               	movwf	___lldiv@dividend+1
 10826  0273  1683               	bsf	3,5	;RP0=1, select bank1
 10827  0274  1303               	bcf	3,6	;RP1=0, select bank1
 10828  0275  0845               	movf	sprintf@val^(0+128),w
 10829  0276  1283               	bcf	3,5	;RP0=0, select bank0
 10830  0277  1303               	bcf	3,6	;RP1=0, select bank0
 10831  0278  00A4               	movwf	___lldiv@dividend
 10832  0279  160A  158A  2421  120A  118A  	fcall	___lldiv
 10833  027E  1283               	bcf	3,5	;RP0=0, select bank0
 10834  027F  1303               	bcf	3,6	;RP1=0, select bank0
 10835  0280  0823               	movf	?___lldiv+3,w
 10836  0281  1683               	bsf	3,5	;RP0=1, select bank1
 10837  0282  1303               	bcf	3,6	;RP1=0, select bank1
 10838  0283  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 10839  0284  1283               	bcf	3,5	;RP0=0, select bank0
 10840  0285  1303               	bcf	3,6	;RP1=0, select bank0
 10841  0286  0822               	movf	?___lldiv+2,w
 10842  0287  1683               	bsf	3,5	;RP0=1, select bank1
 10843  0288  1303               	bcf	3,6	;RP1=0, select bank1
 10844  0289  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 10845  028A  1283               	bcf	3,5	;RP0=0, select bank0
 10846  028B  1303               	bcf	3,6	;RP1=0, select bank0
 10847  028C  0821               	movf	?___lldiv+1,w
 10848  028D  1683               	bsf	3,5	;RP0=1, select bank1
 10849  028E  1303               	bcf	3,6	;RP1=0, select bank1
 10850  028F  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 10851  0290  1283               	bcf	3,5	;RP0=0, select bank0
 10852  0291  1303               	bcf	3,6	;RP1=0, select bank0
 10853  0292  0820               	movf	?___lldiv,w
 10854  0293  1683               	bsf	3,5	;RP0=1, select bank1
 10855  0294  1303               	bcf	3,6	;RP1=0, select bank1
 10856  0295  00C1               	movwf	sprintf@tmpval^(0+128)
 10857  0296                     l4398:
 10858                           
 10859                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval.vd %= 10;
 10860  0296  3000               	movlw	0
 10861  0297  1283               	bcf	3,5	;RP0=0, select bank0
 10862  0298  1303               	bcf	3,6	;RP1=0, select bank0
 10863  0299  00AB               	movwf	___llmod@divisor+3
 10864  029A  3000               	movlw	0
 10865  029B  00AA               	movwf	___llmod@divisor+2
 10866  029C  3000               	movlw	0
 10867  029D  00A9               	movwf	___llmod@divisor+1
 10868  029E  300A               	movlw	10
 10869  029F  00A8               	movwf	___llmod@divisor
 10870  02A0  1683               	bsf	3,5	;RP0=1, select bank1
 10871  02A1  1303               	bcf	3,6	;RP1=0, select bank1
 10872  02A2  0844               	movf	(sprintf@tmpval+3)^(0+128),w
 10873  02A3  1283               	bcf	3,5	;RP0=0, select bank0
 10874  02A4  1303               	bcf	3,6	;RP1=0, select bank0
 10875  02A5  00AF               	movwf	___llmod@dividend+3
 10876  02A6  1683               	bsf	3,5	;RP0=1, select bank1
 10877  02A7  1303               	bcf	3,6	;RP1=0, select bank1
 10878  02A8  0843               	movf	(sprintf@tmpval+2)^(0+128),w
 10879  02A9  1283               	bcf	3,5	;RP0=0, select bank0
 10880  02AA  1303               	bcf	3,6	;RP1=0, select bank0
 10881  02AB  00AE               	movwf	___llmod@dividend+2
 10882  02AC  1683               	bsf	3,5	;RP0=1, select bank1
 10883  02AD  1303               	bcf	3,6	;RP1=0, select bank1
 10884  02AE  0842               	movf	(sprintf@tmpval+1)^(0+128),w
 10885  02AF  1283               	bcf	3,5	;RP0=0, select bank0
 10886  02B0  1303               	bcf	3,6	;RP1=0, select bank0
 10887  02B1  00AD               	movwf	___llmod@dividend+1
 10888  02B2  1683               	bsf	3,5	;RP0=1, select bank1
 10889  02B3  1303               	bcf	3,6	;RP1=0, select bank1
 10890  02B4  0841               	movf	sprintf@tmpval^(0+128),w
 10891  02B5  1283               	bcf	3,5	;RP0=0, select bank0
 10892  02B6  1303               	bcf	3,6	;RP1=0, select bank0
 10893  02B7  00AC               	movwf	___llmod@dividend
 10894  02B8  160A  158A  2374  120A  118A  	fcall	___llmod
 10895  02BD  1283               	bcf	3,5	;RP0=0, select bank0
 10896  02BE  1303               	bcf	3,6	;RP1=0, select bank0
 10897  02BF  082B               	movf	?___llmod+3,w
 10898  02C0  1683               	bsf	3,5	;RP0=1, select bank1
 10899  02C1  1303               	bcf	3,6	;RP1=0, select bank1
 10900  02C2  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 10901  02C3  1283               	bcf	3,5	;RP0=0, select bank0
 10902  02C4  1303               	bcf	3,6	;RP1=0, select bank0
 10903  02C5  082A               	movf	?___llmod+2,w
 10904  02C6  1683               	bsf	3,5	;RP0=1, select bank1
 10905  02C7  1303               	bcf	3,6	;RP1=0, select bank1
 10906  02C8  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 10907  02C9  1283               	bcf	3,5	;RP0=0, select bank0
 10908  02CA  1303               	bcf	3,6	;RP1=0, select bank0
 10909  02CB  0829               	movf	?___llmod+1,w
 10910  02CC  1683               	bsf	3,5	;RP0=1, select bank1
 10911  02CD  1303               	bcf	3,6	;RP1=0, select bank1
 10912  02CE  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 10913  02CF  1283               	bcf	3,5	;RP0=0, select bank0
 10914  02D0  1303               	bcf	3,6	;RP1=0, select bank0
 10915  02D1  0828               	movf	?___llmod,w
 10916  02D2  1683               	bsf	3,5	;RP0=1, select bank1
 10917  02D3  1303               	bcf	3,6	;RP1=0, select bank1
 10918  02D4  00C1               	movwf	sprintf@tmpval^(0+128)
 10919  02D5                     l4400:
 10920                           
 10921                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp++ = ('0' + tmp
      +                          val.vd)));
 10922  02D5  0841               	movf	sprintf@tmpval^(0+128),w
 10923  02D6  3E30               	addlw	48
 10924  02D7  00B3               	movwf	??_sprintf^(0+128)
 10925  02D8  084F               	movf	sprintf@sp^(0+128),w
 10926  02D9  0084               	movwf	4
 10927  02DA  0833               	movf	??_sprintf^(0+128),w
 10928  02DB  1383               	bcf	3,7	;select IRP bank0
 10929  02DC  0080               	movwf	0
 10930  02DD  3001               	movlw	1
 10931  02DE  00B3               	movwf	??_sprintf^(0+128)
 10932  02DF  0833               	movf	??_sprintf^(0+128),w
 10933  02E0  07CF               	addwf	sprintf@sp^(0+128),f
 10934  02E1                     l410:	
 10935                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };D:\Microchip\xc8\v2
      +                          .31\pic\sources\c90\common\doprnt.c: 1232:    }
 10936                           
 10937                           
 10938                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c--) {
 10939  02E1  3001               	movlw	1
 10940  02E2  02D2               	subwf	sprintf@c^(0+128),f
 10941  02E3  0A52               	incf	sprintf@c^(0+128),w
 10942  02E4  1D03               	btfss	3,2
 10943  02E5  2AE7               	goto	u7101
 10944  02E6  2AE8               	goto	u7100
 10945  02E7                     u7101:
 10946  02E7  2A3B               	goto	l4396
 10947  02E8                     u7100:
 10948  02E8  2AFC               	goto	l4408
 10949  02E9                     l4402:
 10950                           
 10951                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++ = ('0')));
 10952  02E9  3030               	movlw	48
 10953  02EA  1683               	bsf	3,5	;RP0=1, select bank1
 10954  02EB  1303               	bcf	3,6	;RP1=0, select bank1
 10955  02EC  00B3               	movwf	??_sprintf^(0+128)
 10956  02ED  084F               	movf	sprintf@sp^(0+128),w
 10957  02EE  0084               	movwf	4
 10958  02EF  0833               	movf	??_sprintf^(0+128),w
 10959  02F0  1383               	bcf	3,7	;select IRP bank0
 10960  02F1  0080               	movwf	0
 10961  02F2                     l4404:
 10962  02F2  3001               	movlw	1
 10963  02F3  00B3               	movwf	??_sprintf^(0+128)
 10964  02F4  0833               	movf	??_sprintf^(0+128),w
 10965  02F5  07CF               	addwf	sprintf@sp^(0+128),f
 10966  02F6                     l4406:
 10967                           
 10968                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10969  02F6  30FF               	movlw	255
 10970  02F7  07C9               	addwf	sprintf@eexp^(0+128),f
 10971  02F8  1803               	skipnc
 10972  02F9  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
 10973  02FA  30FF               	movlw	255
 10974  02FB  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
 10975  02FC                     l4408:
 10976                           
 10977                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(eexp > 0) {
 10978  02FC  084A               	movf	(sprintf@eexp+1)^(0+128),w
 10979  02FD  3A80               	xorlw	128
 10980  02FE  00FF               	movwf	btemp+1
 10981  02FF  3080               	movlw	128
 10982  0300  027F               	subwf	btemp+1,w
 10983  0301  1D03               	skipz
 10984  0302  2B05               	goto	u7115
 10985  0303  3001               	movlw	1
 10986  0304  0249               	subwf	sprintf@eexp^(0+128),w
 10987  0305                     u7115:
 10988  0305  1803               	skipnc
 10989  0306  2B08               	goto	u7111
 10990  0307  2B09               	goto	u7110
 10991  0308                     u7111:
 10992  0308  2AE9               	goto	l4402
 10993  0309                     u7110:
 10994  0309                     l4410:
 10995                           
 10996                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec > (int)((sizeo
      +                          f dpowers/sizeof dpowers[0])-2))
 10997  0309  1683               	bsf	3,5	;RP0=1, select bank1
 10998  030A  1303               	bcf	3,6	;RP1=0, select bank1
 10999  030B  0851               	movf	(sprintf@prec+1)^(0+128),w
 11000  030C  3A80               	xorlw	128
 11001  030D  00FF               	movwf	btemp+1
 11002  030E  3080               	movlw	128
 11003  030F  027F               	subwf	btemp+1,w
 11004  0310  1D03               	skipz
 11005  0311  2B14               	goto	u7125
 11006  0312  3009               	movlw	9
 11007  0313  0250               	subwf	sprintf@prec^(0+128),w
 11008  0314                     u7125:
 11009  0314  1C03               	skipc
 11010  0315  2B17               	goto	u7121
 11011  0316  2B18               	goto	u7120
 11012  0317                     u7121:
 11013  0317  2B1F               	goto	l4414
 11014  0318                     u7120:
 11015  0318                     l4412:
 11016                           
 11017                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (sizeof dpowers/s
      +                          izeof dpowers[0])-2;
 11018  0318  3008               	movlw	8
 11019  0319  1683               	bsf	3,5	;RP0=1, select bank1
 11020  031A  1303               	bcf	3,6	;RP1=0, select bank1
 11021  031B  00B3               	movwf	??_sprintf^(0+128)
 11022  031C  0833               	movf	??_sprintf^(0+128),w
 11023  031D  00D2               	movwf	sprintf@c^(0+128)
 11024  031E  2B25               	goto	l417
 11025  031F                     l4414:
 11026                           
 11027                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (char)prec;
 11028  031F  1683               	bsf	3,5	;RP0=1, select bank1
 11029  0320  1303               	bcf	3,6	;RP1=0, select bank1
 11030  0321  0850               	movf	sprintf@prec^(0+128),w
 11031  0322  00B3               	movwf	??_sprintf^(0+128)
 11032  0323  0833               	movf	??_sprintf^(0+128),w
 11033  0324  00D2               	movwf	sprintf@c^(0+128)
 11034  0325                     l417:
 11035                           
 11036                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= (int)c;
 11037  0325  0852               	movf	sprintf@c^(0+128),w
 11038  0326  00B3               	movwf	??_sprintf^(0+128)
 11039  0327  01B4               	clrf	(??_sprintf^(0+128)+1)
 11040  0328  0833               	movf	??_sprintf^(0+128),w
 11041  0329  02D0               	subwf	sprintf@prec^(0+128),f
 11042  032A  0834               	movf	(??_sprintf+1)^(0+128),w
 11043  032B  1C03               	skipc
 11044  032C  03D1               	decf	(sprintf@prec+1)^(0+128),f
 11045  032D  02D1               	subwf	(sprintf@prec+1)^(0+128),f
 11046  032E                     l4416:
 11047                           
 11048                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 11049  032E  0852               	movf	sprintf@c^(0+128),w
 11050  032F  1903               	btfsc	3,2
 11051  0330  2B32               	goto	u7131
 11052  0331  2B33               	goto	u7130
 11053  0332                     u7131:
 11054  0332  2B3E               	goto	l4422
 11055  0333                     u7130:
 11056  0333                     l4418:
 11057                           
 11058                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++ = ('.')));
 11059  0333  302E               	movlw	46
 11060  0334  00B3               	movwf	??_sprintf^(0+128)
 11061  0335  084F               	movf	sprintf@sp^(0+128),w
 11062  0336  0084               	movwf	4
 11063  0337  0833               	movf	??_sprintf^(0+128),w
 11064  0338  1383               	bcf	3,7	;select IRP bank0
 11065  0339  0080               	movwf	0
 11066  033A                     l4420:
 11067  033A  3001               	movlw	1
 11068  033B  00B3               	movwf	??_sprintf^(0+128)
 11069  033C  0833               	movf	??_sprintf^(0+128),w
 11070  033D  07CF               	addwf	sprintf@sp^(0+128),f
 11071  033E                     l4422:
 11072                           
 11073                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(
      +                          fval * scale((signed char)c));
 11074  033E  0852               	movf	sprintf@c^(0+128),w
 11075  033F  120A  158A  249D  120A  118A  	fcall	_scale
 11076  0344  1283               	bcf	3,5	;RP0=0, select bank0
 11077  0345  1303               	bcf	3,6	;RP1=0, select bank0
 11078  0346  0847               	movf	?_scale+3,w
 11079  0347  1683               	bsf	3,5	;RP0=1, select bank1
 11080  0348  1303               	bcf	3,6	;RP1=0, select bank1
 11081  0349  00BB               	movwf	(_sprintf$1240+3)^(0+128)
 11082  034A  1283               	bcf	3,5	;RP0=0, select bank0
 11083  034B  1303               	bcf	3,6	;RP1=0, select bank0
 11084  034C  0846               	movf	?_scale+2,w
 11085  034D  1683               	bsf	3,5	;RP0=1, select bank1
 11086  034E  1303               	bcf	3,6	;RP1=0, select bank1
 11087  034F  00BA               	movwf	(_sprintf$1240+2)^(0+128)
 11088  0350  1283               	bcf	3,5	;RP0=0, select bank0
 11089  0351  1303               	bcf	3,6	;RP1=0, select bank0
 11090  0352  0845               	movf	?_scale+1,w
 11091  0353  1683               	bsf	3,5	;RP0=1, select bank1
 11092  0354  1303               	bcf	3,6	;RP1=0, select bank1
 11093  0355  00B9               	movwf	(_sprintf$1240+1)^(0+128)
 11094  0356  1283               	bcf	3,5	;RP0=0, select bank0
 11095  0357  1303               	bcf	3,6	;RP1=0, select bank0
 11096  0358  0844               	movf	?_scale,w
 11097  0359  1683               	bsf	3,5	;RP0=1, select bank1
 11098  035A  1303               	bcf	3,6	;RP1=0, select bank1
 11099  035B  00B8               	movwf	_sprintf$1240^(0+128)
 11100  035C                     l4424:
 11101                           
 11102                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(
      +                          fval * scale((signed char)c));
 11103  035C  083B               	movf	(_sprintf$1240+3)^(0+128),w
 11104  035D  1283               	bcf	3,5	;RP0=0, select bank0
 11105  035E  1303               	bcf	3,6	;RP1=0, select bank0
 11106  035F  00B1               	movwf	___flmul@a+3
 11107  0360  1683               	bsf	3,5	;RP0=1, select bank1
 11108  0361  1303               	bcf	3,6	;RP1=0, select bank1
 11109  0362  083A               	movf	(_sprintf$1240+2)^(0+128),w
 11110  0363  1283               	bcf	3,5	;RP0=0, select bank0
 11111  0364  1303               	bcf	3,6	;RP1=0, select bank0
 11112  0365  00B0               	movwf	___flmul@a+2
 11113  0366  1683               	bsf	3,5	;RP0=1, select bank1
 11114  0367  1303               	bcf	3,6	;RP1=0, select bank1
 11115  0368  0839               	movf	(_sprintf$1240+1)^(0+128),w
 11116  0369  1283               	bcf	3,5	;RP0=0, select bank0
 11117  036A  1303               	bcf	3,6	;RP1=0, select bank0
 11118  036B  00AF               	movwf	___flmul@a+1
 11119  036C  1683               	bsf	3,5	;RP0=1, select bank1
 11120  036D  1303               	bcf	3,6	;RP1=0, select bank1
 11121  036E  0838               	movf	_sprintf$1240^(0+128),w
 11122  036F  1283               	bcf	3,5	;RP0=0, select bank0
 11123  0370  1303               	bcf	3,6	;RP1=0, select bank0
 11124  0371  00AE               	movwf	___flmul@a
 11125  0372  1683               	bsf	3,5	;RP0=1, select bank1
 11126  0373  1303               	bcf	3,6	;RP1=0, select bank1
 11127  0374  084E               	movf	(sprintf@fval+3)^(0+128),w
 11128  0375  1283               	bcf	3,5	;RP0=0, select bank0
 11129  0376  1303               	bcf	3,6	;RP1=0, select bank0
 11130  0377  00AD               	movwf	___flmul@b+3
 11131  0378  1683               	bsf	3,5	;RP0=1, select bank1
 11132  0379  1303               	bcf	3,6	;RP1=0, select bank1
 11133  037A  084D               	movf	(sprintf@fval+2)^(0+128),w
 11134  037B  1283               	bcf	3,5	;RP0=0, select bank0
 11135  037C  1303               	bcf	3,6	;RP1=0, select bank0
 11136  037D  00AC               	movwf	___flmul@b+2
 11137  037E  1683               	bsf	3,5	;RP0=1, select bank1
 11138  037F  1303               	bcf	3,6	;RP1=0, select bank1
 11139  0380  084C               	movf	(sprintf@fval+1)^(0+128),w
 11140  0381  1283               	bcf	3,5	;RP0=0, select bank0
 11141  0382  1303               	bcf	3,6	;RP1=0, select bank0
 11142  0383  00AB               	movwf	___flmul@b+1
 11143  0384  1683               	bsf	3,5	;RP0=1, select bank1
 11144  0385  1303               	bcf	3,6	;RP1=0, select bank1
 11145  0386  084B               	movf	sprintf@fval^(0+128),w
 11146  0387  1283               	bcf	3,5	;RP0=0, select bank0
 11147  0388  1303               	bcf	3,6	;RP1=0, select bank0
 11148  0389  00AA               	movwf	___flmul@b
 11149  038A  120A  158A  213C  120A  118A  	fcall	___flmul
 11150  038F  1283               	bcf	3,5	;RP0=0, select bank0
 11151  0390  1303               	bcf	3,6	;RP1=0, select bank0
 11152  0391  082D               	movf	?___flmul+3,w
 11153  0392  00DA               	movwf	___fltol@f1+3
 11154  0393  082C               	movf	?___flmul+2,w
 11155  0394  00D9               	movwf	___fltol@f1+2
 11156  0395  082B               	movf	?___flmul+1,w
 11157  0396  00D8               	movwf	___fltol@f1+1
 11158  0397  082A               	movf	?___flmul,w
 11159  0398  00D7               	movwf	___fltol@f1
 11160  0399  120A  118A  2777  120A  118A  	fcall	___fltol
 11161  039E  1283               	bcf	3,5	;RP0=0, select bank0
 11162  039F  1303               	bcf	3,6	;RP1=0, select bank0
 11163  03A0  085A               	movf	?___fltol+3,w
 11164  03A1  1683               	bsf	3,5	;RP0=1, select bank1
 11165  03A2  1303               	bcf	3,6	;RP1=0, select bank1
 11166  03A3  00C8               	movwf	(sprintf@val+3)^(0+128)
 11167  03A4  1283               	bcf	3,5	;RP0=0, select bank0
 11168  03A5  1303               	bcf	3,6	;RP1=0, select bank0
 11169  03A6  0859               	movf	?___fltol+2,w
 11170  03A7  1683               	bsf	3,5	;RP0=1, select bank1
 11171  03A8  1303               	bcf	3,6	;RP1=0, select bank1
 11172  03A9  00C7               	movwf	(sprintf@val+2)^(0+128)
 11173  03AA  1283               	bcf	3,5	;RP0=0, select bank0
 11174  03AB  1303               	bcf	3,6	;RP1=0, select bank0
 11175  03AC  0858               	movf	?___fltol+1,w
 11176  03AD  1683               	bsf	3,5	;RP0=1, select bank1
 11177  03AE  1303               	bcf	3,6	;RP1=0, select bank1
 11178  03AF  00C6               	movwf	(sprintf@val+1)^(0+128)
 11179  03B0  1283               	bcf	3,5	;RP0=0, select bank0
 11180  03B1  1303               	bcf	3,6	;RP1=0, select bank0
 11181  03B2  0857               	movf	?___fltol,w
 11182  03B3  1683               	bsf	3,5	;RP0=1, select bank1
 11183  03B4  1303               	bcf	3,6	;RP1=0, select bank1
 11184  03B5  00C5               	movwf	sprintf@val^(0+128)
 11185                           
 11186                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
 11187  03B6  2CB8               	goto	l4434
 11188  03B7                     l4426:
 11189                           
 11190                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.vd = val/dpowe
      +                          rs[c];
 11191  03B7  0852               	movf	sprintf@c^(0+128),w
 11192  03B8  00B3               	movwf	??_sprintf^(0+128)
 11193  03B9  3001               	movlw	1
 11194  03BA                     u7145:
 11195  03BA  1003               	clrc
 11196  03BB  0DB3               	rlf	??_sprintf^(0+128),f
 11197  03BC  3EFF               	addlw	-1
 11198  03BD  1D03               	skipz
 11199  03BE  2BBA               	goto	u7145
 11200  03BF  1003               	clrc
 11201  03C0  0D33               	rlf	??_sprintf^(0+128),w
 11202  03C1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11203  03C2  0084               	movwf	4
 11204  03C3  120A  158A  200A  120A  118A  	fcall	stringdir
 11205  03C8  1283               	bcf	3,5	;RP0=0, select bank0
 11206  03C9  1303               	bcf	3,6	;RP1=0, select bank0
 11207  03CA  00A0               	movwf	___lldiv@divisor
 11208  03CB  120A  158A  200A  120A  118A  	fcall	stringdir
 11209  03D0  00A1               	movwf	___lldiv@divisor+1
 11210  03D1  120A  158A  200A  120A  118A  	fcall	stringdir
 11211  03D6  00A2               	movwf	___lldiv@divisor+2
 11212  03D7  120A  158A  200A  120A  118A  	fcall	stringdir
 11213  03DC  00A3               	movwf	___lldiv@divisor+3
 11214  03DD  1683               	bsf	3,5	;RP0=1, select bank1
 11215  03DE  1303               	bcf	3,6	;RP1=0, select bank1
 11216  03DF  0848               	movf	(sprintf@val+3)^(0+128),w
 11217  03E0  1283               	bcf	3,5	;RP0=0, select bank0
 11218  03E1  1303               	bcf	3,6	;RP1=0, select bank0
 11219  03E2  00A7               	movwf	___lldiv@dividend+3
 11220  03E3  1683               	bsf	3,5	;RP0=1, select bank1
 11221  03E4  1303               	bcf	3,6	;RP1=0, select bank1
 11222  03E5  0847               	movf	(sprintf@val+2)^(0+128),w
 11223  03E6  1283               	bcf	3,5	;RP0=0, select bank0
 11224  03E7  1303               	bcf	3,6	;RP1=0, select bank0
 11225  03E8  00A6               	movwf	___lldiv@dividend+2
 11226  03E9  1683               	bsf	3,5	;RP0=1, select bank1
 11227  03EA  1303               	bcf	3,6	;RP1=0, select bank1
 11228  03EB  0846               	movf	(sprintf@val+1)^(0+128),w
 11229  03EC  1283               	bcf	3,5	;RP0=0, select bank0
 11230  03ED  1303               	bcf	3,6	;RP1=0, select bank0
 11231  03EE  00A5               	movwf	___lldiv@dividend+1
 11232  03EF  1683               	bsf	3,5	;RP0=1, select bank1
 11233  03F0  1303               	bcf	3,6	;RP1=0, select bank1
 11234  03F1  0845               	movf	sprintf@val^(0+128),w
 11235  03F2  1283               	bcf	3,5	;RP0=0, select bank0
 11236  03F3  1303               	bcf	3,6	;RP1=0, select bank0
 11237  03F4  00A4               	movwf	___lldiv@dividend
 11238  03F5  160A  158A  2421  120A  118A  	fcall	___lldiv
 11239  03FA  1283               	bcf	3,5	;RP0=0, select bank0
 11240  03FB  1303               	bcf	3,6	;RP1=0, select bank0
 11241  03FC  0823               	movf	?___lldiv+3,w
 11242  03FD  1683               	bsf	3,5	;RP0=1, select bank1
 11243  03FE  1303               	bcf	3,6	;RP1=0, select bank1
 11244  03FF  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 11245  0400  1283               	bcf	3,5	;RP0=0, select bank0
 11246  0401  1303               	bcf	3,6	;RP1=0, select bank0
 11247  0402  0822               	movf	?___lldiv+2,w
 11248  0403  1683               	bsf	3,5	;RP0=1, select bank1
 11249  0404  1303               	bcf	3,6	;RP1=0, select bank1
 11250  0405  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 11251  0406  1283               	bcf	3,5	;RP0=0, select bank0
 11252  0407  1303               	bcf	3,6	;RP1=0, select bank0
 11253  0408  0821               	movf	?___lldiv+1,w
 11254  0409  1683               	bsf	3,5	;RP0=1, select bank1
 11255  040A  1303               	bcf	3,6	;RP1=0, select bank1
 11256  040B  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 11257  040C  1283               	bcf	3,5	;RP0=0, select bank0
 11258  040D  1303               	bcf	3,6	;RP1=0, select bank0
 11259  040E  0820               	movf	?___lldiv,w
 11260  040F  1683               	bsf	3,5	;RP0=1, select bank1
 11261  0410  1303               	bcf	3,6	;RP1=0, select bank1
 11262  0411  00C1               	movwf	sprintf@tmpval^(0+128)
 11263  0412                     l4428:
 11264                           
 11265                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.vd %= 10;
 11266  0412  3000               	movlw	0
 11267  0413  1283               	bcf	3,5	;RP0=0, select bank0
 11268  0414  1303               	bcf	3,6	;RP1=0, select bank0
 11269  0415  00AB               	movwf	___llmod@divisor+3
 11270  0416  3000               	movlw	0
 11271  0417  00AA               	movwf	___llmod@divisor+2
 11272  0418  3000               	movlw	0
 11273  0419  00A9               	movwf	___llmod@divisor+1
 11274  041A  300A               	movlw	10
 11275  041B  00A8               	movwf	___llmod@divisor
 11276  041C  1683               	bsf	3,5	;RP0=1, select bank1
 11277  041D  1303               	bcf	3,6	;RP1=0, select bank1
 11278  041E  0844               	movf	(sprintf@tmpval+3)^(0+128),w
 11279  041F  1283               	bcf	3,5	;RP0=0, select bank0
 11280  0420  1303               	bcf	3,6	;RP1=0, select bank0
 11281  0421  00AF               	movwf	___llmod@dividend+3
 11282  0422  1683               	bsf	3,5	;RP0=1, select bank1
 11283  0423  1303               	bcf	3,6	;RP1=0, select bank1
 11284  0424  0843               	movf	(sprintf@tmpval+2)^(0+128),w
 11285  0425  1283               	bcf	3,5	;RP0=0, select bank0
 11286  0426  1303               	bcf	3,6	;RP1=0, select bank0
 11287  0427  00AE               	movwf	___llmod@dividend+2
 11288  0428  1683               	bsf	3,5	;RP0=1, select bank1
 11289  0429  1303               	bcf	3,6	;RP1=0, select bank1
 11290  042A  0842               	movf	(sprintf@tmpval+1)^(0+128),w
 11291  042B  1283               	bcf	3,5	;RP0=0, select bank0
 11292  042C  1303               	bcf	3,6	;RP1=0, select bank0
 11293  042D  00AD               	movwf	___llmod@dividend+1
 11294  042E  1683               	bsf	3,5	;RP0=1, select bank1
 11295  042F  1303               	bcf	3,6	;RP1=0, select bank1
 11296  0430  0841               	movf	sprintf@tmpval^(0+128),w
 11297  0431  1283               	bcf	3,5	;RP0=0, select bank0
 11298  0432  1303               	bcf	3,6	;RP1=0, select bank0
 11299  0433  00AC               	movwf	___llmod@dividend
 11300  0434  160A  158A  2374  120A  118A  	fcall	___llmod
 11301  0439  1283               	bcf	3,5	;RP0=0, select bank0
 11302  043A  1303               	bcf	3,6	;RP1=0, select bank0
 11303  043B  082B               	movf	?___llmod+3,w
 11304  043C  1683               	bsf	3,5	;RP0=1, select bank1
 11305  043D  1303               	bcf	3,6	;RP1=0, select bank1
 11306  043E  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 11307  043F  1283               	bcf	3,5	;RP0=0, select bank0
 11308  0440  1303               	bcf	3,6	;RP1=0, select bank0
 11309  0441  082A               	movf	?___llmod+2,w
 11310  0442  1683               	bsf	3,5	;RP0=1, select bank1
 11311  0443  1303               	bcf	3,6	;RP1=0, select bank1
 11312  0444  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 11313  0445  1283               	bcf	3,5	;RP0=0, select bank0
 11314  0446  1303               	bcf	3,6	;RP1=0, select bank0
 11315  0447  0829               	movf	?___llmod+1,w
 11316  0448  1683               	bsf	3,5	;RP0=1, select bank1
 11317  0449  1303               	bcf	3,6	;RP1=0, select bank1
 11318  044A  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 11319  044B  1283               	bcf	3,5	;RP0=0, select bank0
 11320  044C  1303               	bcf	3,6	;RP1=0, select bank0
 11321  044D  0828               	movf	?___llmod,w
 11322  044E  1683               	bsf	3,5	;RP0=1, select bank1
 11323  044F  1303               	bcf	3,6	;RP1=0, select bank1
 11324  0450  00C1               	movwf	sprintf@tmpval^(0+128)
 11325  0451                     l4430:
 11326                           
 11327                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++ = ('0' + tmpv
      +                          al.vd)));
 11328  0451  0841               	movf	sprintf@tmpval^(0+128),w
 11329  0452  3E30               	addlw	48
 11330  0453  00B3               	movwf	??_sprintf^(0+128)
 11331  0454  084F               	movf	sprintf@sp^(0+128),w
 11332  0455  0084               	movwf	4
 11333  0456  0833               	movf	??_sprintf^(0+128),w
 11334  0457  1383               	bcf	3,7	;select IRP bank0
 11335  0458  0080               	movwf	0
 11336  0459  3001               	movlw	1
 11337  045A  00B3               	movwf	??_sprintf^(0+128)
 11338  045B  0833               	movf	??_sprintf^(0+128),w
 11339  045C  07CF               	addwf	sprintf@sp^(0+128),f
 11340  045D                     l4432:
 11341                           
 11342                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= dpowers[c];
 11343  045D  0852               	movf	sprintf@c^(0+128),w
 11344  045E  00B3               	movwf	??_sprintf^(0+128)
 11345  045F  3001               	movlw	1
 11346  0460                     u7155:
 11347  0460  1003               	clrc
 11348  0461  0DB3               	rlf	??_sprintf^(0+128),f
 11349  0462  3EFF               	addlw	-1
 11350  0463  1D03               	skipz
 11351  0464  2C60               	goto	u7155
 11352  0465  1003               	clrc
 11353  0466  0D33               	rlf	??_sprintf^(0+128),w
 11354  0467  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11355  0468  0084               	movwf	4
 11356  0469  120A  158A  200A  120A  118A  	fcall	stringdir
 11357  046E  1283               	bcf	3,5	;RP0=0, select bank0
 11358  046F  1303               	bcf	3,6	;RP1=0, select bank0
 11359  0470  00A8               	movwf	___llmod@divisor
 11360  0471  120A  158A  200A  120A  118A  	fcall	stringdir
 11361  0476  00A9               	movwf	___llmod@divisor+1
 11362  0477  120A  158A  200A  120A  118A  	fcall	stringdir
 11363  047C  00AA               	movwf	___llmod@divisor+2
 11364  047D  120A  158A  200A  120A  118A  	fcall	stringdir
 11365  0482  00AB               	movwf	___llmod@divisor+3
 11366  0483  1683               	bsf	3,5	;RP0=1, select bank1
 11367  0484  1303               	bcf	3,6	;RP1=0, select bank1
 11368  0485  0848               	movf	(sprintf@val+3)^(0+128),w
 11369  0486  1283               	bcf	3,5	;RP0=0, select bank0
 11370  0487  1303               	bcf	3,6	;RP1=0, select bank0
 11371  0488  00AF               	movwf	___llmod@dividend+3
 11372  0489  1683               	bsf	3,5	;RP0=1, select bank1
 11373  048A  1303               	bcf	3,6	;RP1=0, select bank1
 11374  048B  0847               	movf	(sprintf@val+2)^(0+128),w
 11375  048C  1283               	bcf	3,5	;RP0=0, select bank0
 11376  048D  1303               	bcf	3,6	;RP1=0, select bank0
 11377  048E  00AE               	movwf	___llmod@dividend+2
 11378  048F  1683               	bsf	3,5	;RP0=1, select bank1
 11379  0490  1303               	bcf	3,6	;RP1=0, select bank1
 11380  0491  0846               	movf	(sprintf@val+1)^(0+128),w
 11381  0492  1283               	bcf	3,5	;RP0=0, select bank0
 11382  0493  1303               	bcf	3,6	;RP1=0, select bank0
 11383  0494  00AD               	movwf	___llmod@dividend+1
 11384  0495  1683               	bsf	3,5	;RP0=1, select bank1
 11385  0496  1303               	bcf	3,6	;RP1=0, select bank1
 11386  0497  0845               	movf	sprintf@val^(0+128),w
 11387  0498  1283               	bcf	3,5	;RP0=0, select bank0
 11388  0499  1303               	bcf	3,6	;RP1=0, select bank0
 11389  049A  00AC               	movwf	___llmod@dividend
 11390  049B  160A  158A  2374  120A  118A  	fcall	___llmod
 11391  04A0  1283               	bcf	3,5	;RP0=0, select bank0
 11392  04A1  1303               	bcf	3,6	;RP1=0, select bank0
 11393  04A2  082B               	movf	?___llmod+3,w
 11394  04A3  1683               	bsf	3,5	;RP0=1, select bank1
 11395  04A4  1303               	bcf	3,6	;RP1=0, select bank1
 11396  04A5  00C8               	movwf	(sprintf@val+3)^(0+128)
 11397  04A6  1283               	bcf	3,5	;RP0=0, select bank0
 11398  04A7  1303               	bcf	3,6	;RP1=0, select bank0
 11399  04A8  082A               	movf	?___llmod+2,w
 11400  04A9  1683               	bsf	3,5	;RP0=1, select bank1
 11401  04AA  1303               	bcf	3,6	;RP1=0, select bank1
 11402  04AB  00C7               	movwf	(sprintf@val+2)^(0+128)
 11403  04AC  1283               	bcf	3,5	;RP0=0, select bank0
 11404  04AD  1303               	bcf	3,6	;RP1=0, select bank0
 11405  04AE  0829               	movf	?___llmod+1,w
 11406  04AF  1683               	bsf	3,5	;RP0=1, select bank1
 11407  04B0  1303               	bcf	3,6	;RP1=0, select bank1
 11408  04B1  00C6               	movwf	(sprintf@val+1)^(0+128)
 11409  04B2  1283               	bcf	3,5	;RP0=0, select bank0
 11410  04B3  1303               	bcf	3,6	;RP1=0, select bank0
 11411  04B4  0828               	movf	?___llmod,w
 11412  04B5  1683               	bsf	3,5	;RP0=1, select bank1
 11413  04B6  1303               	bcf	3,6	;RP1=0, select bank1
 11414  04B7  00C5               	movwf	sprintf@val^(0+128)
 11415  04B8                     l4434:
 11416                           
 11417                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
 11418  04B8  3001               	movlw	1
 11419  04B9  02D2               	subwf	sprintf@c^(0+128),f
 11420  04BA  0A52               	incf	sprintf@c^(0+128),w
 11421  04BB  1D03               	btfss	3,2
 11422  04BC  2CBE               	goto	u7161
 11423  04BD  2CBF               	goto	u7160
 11424  04BE                     u7161:
 11425  04BE  2BB7               	goto	l4426
 11426  04BF                     u7160:
 11427  04BF  2CD1               	goto	l4442
 11428  04C0                     l4436:
 11429                           
 11430                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++ = ('0')));
 11431  04C0  3030               	movlw	48
 11432  04C1  00B3               	movwf	??_sprintf^(0+128)
 11433  04C2  084F               	movf	sprintf@sp^(0+128),w
 11434  04C3  0084               	movwf	4
 11435  04C4  0833               	movf	??_sprintf^(0+128),w
 11436  04C5  1383               	bcf	3,7	;select IRP bank0
 11437  04C6  0080               	movwf	0
 11438  04C7                     l4438:
 11439  04C7  3001               	movlw	1
 11440  04C8  00B3               	movwf	??_sprintf^(0+128)
 11441  04C9  0833               	movf	??_sprintf^(0+128),w
 11442  04CA  07CF               	addwf	sprintf@sp^(0+128),f
 11443  04CB                     l4440:
 11444                           
 11445                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11446  04CB  30FF               	movlw	255
 11447  04CC  07D0               	addwf	sprintf@prec^(0+128),f
 11448  04CD  1803               	skipnc
 11449  04CE  0AD1               	incf	(sprintf@prec+1)^(0+128),f
 11450  04CF  30FF               	movlw	255
 11451  04D0  07D1               	addwf	(sprintf@prec+1)^(0+128),f
 11452  04D1                     l4442:
 11453                           
 11454                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(prec) {
 11455  04D1  0850               	movf	sprintf@prec^(0+128),w
 11456  04D2  0451               	iorwf	(sprintf@prec+1)^(0+128),w
 11457  04D3  1D03               	btfss	3,2
 11458  04D4  2CD6               	goto	u7171
 11459  04D5  2CD7               	goto	u7170
 11460  04D6                     u7171:
 11461  04D6  2CC0               	goto	l4436
 11462  04D7                     u7170:
 11463  04D7  2E87               	goto	l4522
 11464  04D8                     l4444:
 11465                           
 11466                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned long)(*(int *)__va_arg((*(i
      +                          nt **)ap), (int)0));
 11467  04D8  083C               	movf	sprintf@ap^(0+128),w
 11468  04D9  0084               	movwf	4
 11469  04DA  1383               	bcf	3,7	;select IRP bank0
 11470  04DB  0800               	movf	0,w
 11471  04DC  00B3               	movwf	??_sprintf^(0+128)
 11472  04DD  0A84               	incf	4,f
 11473  04DE  0800               	movf	0,w
 11474  04DF  00B4               	movwf	(??_sprintf^(0+128)+1)
 11475  04E0  0833               	movf	??_sprintf^(0+128),w
 11476  04E1  00C5               	movwf	sprintf@val^(0+128)
 11477  04E2  0834               	movf	(??_sprintf+1)^(0+128),w
 11478  04E3  00C6               	movwf	(sprintf@val+1)^(0+128)
 11479  04E4  3000               	movlw	0
 11480  04E5  1BC6               	btfsc	(sprintf@val+1)^(0+128),7
 11481  04E6  30FF               	movlw	255
 11482  04E7  00C7               	movwf	(sprintf@val+2)^(0+128)
 11483  04E8  00C8               	movwf	(sprintf@val+3)^(0+128)
 11484  04E9                     l4446:
 11485  04E9  3002               	movlw	2
 11486  04EA  00B3               	movwf	??_sprintf^(0+128)
 11487  04EB  0833               	movf	??_sprintf^(0+128),w
 11488  04EC  07BC               	addwf	sprintf@ap^(0+128),f
 11489  04ED                     l4448:
 11490                           
 11491                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long)val < 0) {
 11492  04ED  1FC8               	btfss	(sprintf@val+3)^(0+128),7
 11493  04EE  2CF0               	goto	u7181
 11494  04EF  2CF1               	goto	u7180
 11495  04F0                     u7181:
 11496  04F0  2D00               	goto	l4454
 11497  04F1                     u7180:
 11498  04F1                     l4450:
 11499                           
 11500                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
 11501  04F1  3003               	movlw	3
 11502  04F2  04BD               	iorwf	sprintf@flag^(0+128),f
 11503  04F3  3000               	movlw	0
 11504  04F4  04BE               	iorwf	(sprintf@flag+1)^(0+128),f
 11505  04F5                     l4452:
 11506                           
 11507                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
 11508  04F5  09C5               	comf	sprintf@val^(0+128),f
 11509  04F6  09C6               	comf	(sprintf@val+1)^(0+128),f
 11510  04F7  09C7               	comf	(sprintf@val+2)^(0+128),f
 11511  04F8  09C8               	comf	(sprintf@val+3)^(0+128),f
 11512  04F9  0AC5               	incf	sprintf@val^(0+128),f
 11513  04FA  1903               	skipnz
 11514  04FB  0AC6               	incf	(sprintf@val+1)^(0+128),f
 11515  04FC  1903               	skipnz
 11516  04FD  0AC7               	incf	(sprintf@val+2)^(0+128),f
 11517  04FE  1903               	skipnz
 11518  04FF  0AC8               	incf	(sprintf@val+3)^(0+128),f
 11519  0500                     l4454:
 11520                           
 11521                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && val == 0)
 11522  0500  0850               	movf	sprintf@prec^(0+128),w
 11523  0501  0451               	iorwf	(sprintf@prec+1)^(0+128),w
 11524  0502  1D03               	btfss	3,2
 11525  0503  2D05               	goto	u7191
 11526  0504  2D06               	goto	u7190
 11527  0505                     u7191:
 11528  0505  2D14               	goto	l4460
 11529  0506                     u7190:
 11530  0506                     l4456:
 11531  0506  0848               	movf	(sprintf@val+3)^(0+128),w
 11532  0507  0447               	iorwf	(sprintf@val+2)^(0+128),w
 11533  0508  0446               	iorwf	(sprintf@val+1)^(0+128),w
 11534  0509  0445               	iorwf	sprintf@val^(0+128),w
 11535  050A  1D03               	skipz
 11536  050B  2D0D               	goto	u7201
 11537  050C  2D0E               	goto	u7200
 11538  050D                     u7201:
 11539  050D  2D14               	goto	l4460
 11540  050E                     u7200:
 11541  050E                     l4458:
 11542                           
 11543                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11544  050E  3001               	movlw	1
 11545  050F  07D0               	addwf	sprintf@prec^(0+128),f
 11546  0510  1803               	skipnc
 11547  0511  0AD1               	incf	(sprintf@prec+1)^(0+128),f
 11548  0512  3000               	movlw	0
 11549  0513  07D1               	addwf	(sprintf@prec+1)^(0+128),f
 11550  0514                     l4460:
 11551                           
 11552                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeo
      +                          f dpowers/sizeof dpowers[0] ; c++)
 11553  0514  01D2               	clrf	sprintf@c^(0+128)
 11554  0515  0AD2               	incf	sprintf@c^(0+128),f
 11555  0516                     l4466:
 11556                           
 11557                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowers[c])
 11558  0516  0852               	movf	sprintf@c^(0+128),w
 11559  0517  00B3               	movwf	??_sprintf^(0+128)
 11560  0518  3001               	movlw	1
 11561  0519                     u7215:
 11562  0519  1003               	clrc
 11563  051A  0DB3               	rlf	??_sprintf^(0+128),f
 11564  051B  3EFF               	addlw	-1
 11565  051C  1D03               	skipz
 11566  051D  2D19               	goto	u7215
 11567  051E  1003               	clrc
 11568  051F  0D33               	rlf	??_sprintf^(0+128),w
 11569  0520  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11570  0521  0084               	movwf	4
 11571  0522  120A  158A  200A  120A  118A  	fcall	stringdir
 11572  0527  00B4               	movwf	(??_sprintf+1)^(0+128)
 11573  0528  120A  158A  200A  120A  118A  	fcall	stringdir
 11574  052D  00B5               	movwf	((??_sprintf+1)^(0+128)+1)
 11575  052E  120A  158A  200A  120A  118A  	fcall	stringdir
 11576  0533  00B6               	movwf	((??_sprintf+1)^(0+128)+2)
 11577  0534  120A  158A  200A  120A  118A  	fcall	stringdir
 11578  0539  00B7               	movwf	((??_sprintf+1)^(0+128)+3)
 11579  053A  0837               	movf	(??_sprintf+4)^(0+128),w
 11580  053B  0248               	subwf	(sprintf@val+3)^(0+128),w
 11581  053C  1D03               	skipz
 11582  053D  2D48               	goto	u7225
 11583  053E  0836               	movf	(??_sprintf+3)^(0+128),w
 11584  053F  0247               	subwf	(sprintf@val+2)^(0+128),w
 11585  0540  1D03               	skipz
 11586  0541  2D48               	goto	u7225
 11587  0542  0835               	movf	(??_sprintf+2)^(0+128),w
 11588  0543  0246               	subwf	(sprintf@val+1)^(0+128),w
 11589  0544  1D03               	skipz
 11590  0545  2D48               	goto	u7225
 11591  0546  0834               	movf	(??_sprintf+1)^(0+128),w
 11592  0547  0245               	subwf	sprintf@val^(0+128),w
 11593  0548                     u7225:
 11594  0548  1803               	skipnc
 11595  0549  2D4B               	goto	u7221
 11596  054A  2D4C               	goto	u7220
 11597  054B                     u7221:
 11598  054B  2D4D               	goto	l4470
 11599  054C                     u7220:
 11600  054C  2D57               	goto	l4472
 11601  054D                     l4470:
 11602  054D  3001               	movlw	1
 11603  054E  00B3               	movwf	??_sprintf^(0+128)
 11604  054F  0833               	movf	??_sprintf^(0+128),w
 11605  0550  07D2               	addwf	sprintf@c^(0+128),f
 11606  0551  300A               	movlw	10
 11607  0552  0652               	xorwf	sprintf@c^(0+128),w
 11608  0553  1D03               	btfss	3,2
 11609  0554  2D56               	goto	u7231
 11610  0555  2D57               	goto	u7230
 11611  0556                     u7231:
 11612  0556  2D16               	goto	l4466
 11613  0557                     u7230:
 11614  0557                     l4472:
 11615                           
 11616                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < prec)
 11617  0557  0851               	movf	(sprintf@prec+1)^(0+128),w
 11618  0558  3A80               	xorlw	128
 11619  0559  3C80               	sublw	128
 11620  055A  1D03               	skipz
 11621  055B  2D5E               	goto	u7245
 11622  055C  0850               	movf	sprintf@prec^(0+128),w
 11623  055D  0252               	subwf	sprintf@c^(0+128),w
 11624  055E                     u7245:
 11625  055E  1803               	skipnc
 11626  055F  2D61               	goto	u7241
 11627  0560  2D62               	goto	u7240
 11628  0561                     u7241:
 11629  0561  2D69               	goto	l4476
 11630  0562                     u7240:
 11631  0562                     l4474:
 11632                           
 11633                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (char)prec;
 11634  0562  1683               	bsf	3,5	;RP0=1, select bank1
 11635  0563  1303               	bcf	3,6	;RP1=0, select bank1
 11636  0564  0850               	movf	sprintf@prec^(0+128),w
 11637  0565  00B3               	movwf	??_sprintf^(0+128)
 11638  0566  0833               	movf	??_sprintf^(0+128),w
 11639  0567  00D2               	movwf	sprintf@c^(0+128)
 11640  0568  2D81               	goto	l4480
 11641  0569                     l4476:
 11642  0569  1683               	bsf	3,5	;RP0=1, select bank1
 11643  056A  1303               	bcf	3,6	;RP1=0, select bank1
 11644  056B  0851               	movf	(sprintf@prec+1)^(0+128),w
 11645  056C  3A80               	xorlw	128
 11646  056D  00B3               	movwf	??_sprintf^(0+128)
 11647  056E  3080               	movlw	128
 11648  056F  0233               	subwf	??_sprintf^(0+128),w
 11649  0570  1D03               	skipz
 11650  0571  2D74               	goto	u7255
 11651  0572  0852               	movf	sprintf@c^(0+128),w
 11652  0573  0250               	subwf	sprintf@prec^(0+128),w
 11653  0574                     u7255:
 11654  0574  1803               	skipnc
 11655  0575  2D77               	goto	u7251
 11656  0576  2D78               	goto	u7250
 11657  0577                     u7251:
 11658  0577  2D81               	goto	l4480
 11659  0578                     u7250:
 11660  0578                     l4478:
 11661                           
 11662                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c;
 11663  0578  1683               	bsf	3,5	;RP0=1, select bank1
 11664  0579  1303               	bcf	3,6	;RP1=0, select bank1
 11665  057A  0852               	movf	sprintf@c^(0+128),w
 11666  057B  00B3               	movwf	??_sprintf^(0+128)
 11667  057C  01B4               	clrf	(??_sprintf^(0+128)+1)
 11668  057D  0833               	movf	??_sprintf^(0+128),w
 11669  057E  00D0               	movwf	sprintf@prec^(0+128)
 11670  057F  0834               	movf	(??_sprintf+1)^(0+128),w
 11671  0580  00D1               	movwf	(sprintf@prec+1)^(0+128)
 11672  0581                     l4480:
 11673                           
 11674                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width && flag & 0x03
      +                          )
 11675  0581  1683               	bsf	3,5	;RP0=1, select bank1
 11676  0582  1303               	bcf	3,6	;RP1=0, select bank1
 11677  0583  083F               	movf	sprintf@width^(0+128),w
 11678  0584  0440               	iorwf	(sprintf@width+1)^(0+128),w
 11679  0585  1903               	btfsc	3,2
 11680  0586  2D88               	goto	u7261
 11681  0587  2D89               	goto	u7260
 11682  0588                     u7261:
 11683  0588  2D9B               	goto	l4486
 11684  0589                     u7260:
 11685  0589                     l4482:
 11686  0589  3003               	movlw	3
 11687  058A  053D               	andwf	sprintf@flag^(0+128),w
 11688  058B  00B3               	movwf	??_sprintf^(0+128)
 11689  058C  3000               	movlw	0
 11690  058D  053E               	andwf	(sprintf@flag+1)^(0+128),w
 11691  058E  00B4               	movwf	(??_sprintf+1)^(0+128)
 11692  058F  0833               	movf	??_sprintf^(0+128),w
 11693  0590  0434               	iorwf	(??_sprintf^(0+128)+1),w
 11694  0591  1903               	btfsc	3,2
 11695  0592  2D94               	goto	u7271
 11696  0593  2D95               	goto	u7270
 11697  0594                     u7271:
 11698  0594  2D9B               	goto	l4486
 11699  0595                     u7270:
 11700  0595                     l4484:
 11701                           
 11702                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11703  0595  30FF               	movlw	255
 11704  0596  07BF               	addwf	sprintf@width^(0+128),f
 11705  0597  1803               	skipnc
 11706  0598  0AC0               	incf	(sprintf@width+1)^(0+128),f
 11707  0599  30FF               	movlw	255
 11708  059A  07C0               	addwf	(sprintf@width+1)^(0+128),f
 11709  059B                     l4486:
 11710                           
 11711                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag & 0x4000) {
 11712  059B  1F3E               	btfss	(sprintf@flag+1)^(0+128),6
 11713  059C  2D9E               	goto	u7281
 11714  059D  2D9F               	goto	u7280
 11715  059E                     u7281:
 11716  059E  2DBA               	goto	l4494
 11717  059F                     u7280:
 11718  059F                     l4488:
 11719                           
 11720                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width > prec)
 11721  059F  0851               	movf	(sprintf@prec+1)^(0+128),w
 11722  05A0  3A80               	xorlw	128
 11723  05A1  00B3               	movwf	??_sprintf^(0+128)
 11724  05A2  0840               	movf	(sprintf@width+1)^(0+128),w
 11725  05A3  3A80               	xorlw	128
 11726  05A4  0233               	subwf	??_sprintf^(0+128),w
 11727  05A5  1D03               	skipz
 11728  05A6  2DA9               	goto	u7295
 11729  05A7  083F               	movf	sprintf@width^(0+128),w
 11730  05A8  0250               	subwf	sprintf@prec^(0+128),w
 11731  05A9                     u7295:
 11732  05A9  1803               	skipnc
 11733  05AA  2DAC               	goto	u7291
 11734  05AB  2DAD               	goto	u7290
 11735  05AC                     u7291:
 11736  05AC  2DB6               	goto	l4492
 11737  05AD                     u7290:
 11738  05AD                     l4490:
 11739                           
 11740                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -= prec;
 11741  05AD  1683               	bsf	3,5	;RP0=1, select bank1
 11742  05AE  1303               	bcf	3,6	;RP1=0, select bank1
 11743  05AF  0850               	movf	sprintf@prec^(0+128),w
 11744  05B0  02BF               	subwf	sprintf@width^(0+128),f
 11745  05B1  0851               	movf	(sprintf@prec+1)^(0+128),w
 11746  05B2  1C03               	skipc
 11747  05B3  03C0               	decf	(sprintf@width+1)^(0+128),f
 11748  05B4  02C0               	subwf	(sprintf@width+1)^(0+128),f
 11749  05B5  2DBA               	goto	l4494
 11750  05B6                     l4492:
 11751                           
 11752                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width = 0;
 11753  05B6  1683               	bsf	3,5	;RP0=1, select bank1
 11754  05B7  1303               	bcf	3,6	;RP1=0, select bank1
 11755  05B8  01BF               	clrf	sprintf@width^(0+128)
 11756  05B9  01C0               	clrf	(sprintf@width+1)^(0+128)
 11757  05BA                     l4494:
 11758                           
 11759                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width > c)
 11760  05BA  0840               	movf	(sprintf@width+1)^(0+128),w
 11761  05BB  3A80               	xorlw	128
 11762  05BC  3C80               	sublw	128
 11763  05BD  1D03               	skipz
 11764  05BE  2DC1               	goto	u7305
 11765  05BF  083F               	movf	sprintf@width^(0+128),w
 11766  05C0  0252               	subwf	sprintf@c^(0+128),w
 11767  05C1                     u7305:
 11768  05C1  1803               	skipnc
 11769  05C2  2DC4               	goto	u7301
 11770  05C3  2DC5               	goto	u7300
 11771  05C4                     u7301:
 11772  05C4  2DD1               	goto	l4498
 11773  05C5                     u7300:
 11774  05C5                     l4496:
 11775                           
 11776                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -= c;
 11777  05C5  1683               	bsf	3,5	;RP0=1, select bank1
 11778  05C6  1303               	bcf	3,6	;RP1=0, select bank1
 11779  05C7  0852               	movf	sprintf@c^(0+128),w
 11780  05C8  00B3               	movwf	??_sprintf^(0+128)
 11781  05C9  01B4               	clrf	(??_sprintf^(0+128)+1)
 11782  05CA  0833               	movf	??_sprintf^(0+128),w
 11783  05CB  02BF               	subwf	sprintf@width^(0+128),f
 11784  05CC  0834               	movf	(??_sprintf+1)^(0+128),w
 11785  05CD  1C03               	skipc
 11786  05CE  03C0               	decf	(sprintf@width+1)^(0+128),f
 11787  05CF  02C0               	subwf	(sprintf@width+1)^(0+128),f
 11788  05D0  2DD5               	goto	l4500
 11789  05D1                     l4498:
 11790                           
 11791                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 0;
 11792  05D1  1683               	bsf	3,5	;RP0=1, select bank1
 11793  05D2  1303               	bcf	3,6	;RP1=0, select bank1
 11794  05D3  01BF               	clrf	sprintf@width^(0+128)
 11795  05D4  01C0               	clrf	(sprintf@width+1)^(0+128)
 11796  05D5                     l4500:
 11797                           
 11798                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;D:\Microchip\xc8\v2.3
      +                          1\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11799  05D5  083F               	movf	sprintf@width^(0+128),w
 11800  05D6  0440               	iorwf	(sprintf@width+1)^(0+128),w
 11801  05D7  1903               	btfsc	3,2
 11802  05D8  2DDA               	goto	u7311
 11803  05D9  2DDB               	goto	u7310
 11804  05DA                     u7311:
 11805  05DA  2DF2               	goto	l4508
 11806  05DB                     u7310:
 11807  05DB                     l4502:
 11808                           
 11809                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp++ = (' ')));
 11810  05DB  3020               	movlw	32
 11811  05DC  00B3               	movwf	??_sprintf^(0+128)
 11812  05DD  084F               	movf	sprintf@sp^(0+128),w
 11813  05DE  0084               	movwf	4
 11814  05DF  0833               	movf	??_sprintf^(0+128),w
 11815  05E0  1383               	bcf	3,7	;select IRP bank0
 11816  05E1  0080               	movwf	0
 11817  05E2                     l4504:
 11818  05E2  3001               	movlw	1
 11819  05E3  00B3               	movwf	??_sprintf^(0+128)
 11820  05E4  0833               	movf	??_sprintf^(0+128),w
 11821  05E5  07CF               	addwf	sprintf@sp^(0+128),f
 11822  05E6                     l4506:
 11823  05E6  30FF               	movlw	255
 11824  05E7  07BF               	addwf	sprintf@width^(0+128),f
 11825  05E8  1803               	skipnc
 11826  05E9  0AC0               	incf	(sprintf@width+1)^(0+128),f
 11827  05EA  30FF               	movlw	255
 11828  05EB  07C0               	addwf	(sprintf@width+1)^(0+128),f
 11829  05EC  083F               	movf	sprintf@width^(0+128),w
 11830  05ED  0440               	iorwf	(sprintf@width+1)^(0+128),w
 11831  05EE  1D03               	btfss	3,2
 11832  05EF  2DF1               	goto	u7321
 11833  05F0  2DF2               	goto	u7320
 11834  05F1                     u7321:
 11835  05F1  2DDB               	goto	l4502
 11836  05F2                     u7320:
 11837  05F2                     l4508:
 11838                           
 11839                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
 11840  05F2  3003               	movlw	3
 11841  05F3  053D               	andwf	sprintf@flag^(0+128),w
 11842  05F4  00B3               	movwf	??_sprintf^(0+128)
 11843  05F5  3000               	movlw	0
 11844  05F6  053E               	andwf	(sprintf@flag+1)^(0+128),w
 11845  05F7  00B4               	movwf	(??_sprintf+1)^(0+128)
 11846  05F8  0833               	movf	??_sprintf^(0+128),w
 11847  05F9  0434               	iorwf	(??_sprintf^(0+128)+1),w
 11848  05FA  1903               	btfsc	3,2
 11849  05FB  2DFD               	goto	u7331
 11850  05FC  2DFE               	goto	u7330
 11851  05FD                     u7331:
 11852  05FD  2E79               	goto	l4520
 11853  05FE                     u7330:
 11854  05FE                     l4510:
 11855                           
 11856                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
 11857  05FE  302D               	movlw	45
 11858  05FF  00B3               	movwf	??_sprintf^(0+128)
 11859  0600  084F               	movf	sprintf@sp^(0+128),w
 11860  0601  0084               	movwf	4
 11861  0602  0833               	movf	??_sprintf^(0+128),w
 11862  0603  1383               	bcf	3,7	;select IRP bank0
 11863  0604  0080               	movwf	0
 11864  0605                     l4512:
 11865  0605  3001               	movlw	1
 11866  0606  00B3               	movwf	??_sprintf^(0+128)
 11867  0607  0833               	movf	??_sprintf^(0+128),w
 11868  0608  07CF               	addwf	sprintf@sp^(0+128),f
 11869  0609  2E79               	goto	l4520
 11870  060A                     l4514:
 11871                           
 11872                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpowers[(unsigned int)prec]) % 
      +                          10 + '0';
 11873  060A  3000               	movlw	0
 11874  060B  1283               	bcf	3,5	;RP0=0, select bank0
 11875  060C  1303               	bcf	3,6	;RP1=0, select bank0
 11876  060D  00AB               	movwf	___llmod@divisor+3
 11877  060E  3000               	movlw	0
 11878  060F  00AA               	movwf	___llmod@divisor+2
 11879  0610  3000               	movlw	0
 11880  0611  00A9               	movwf	___llmod@divisor+1
 11881  0612  300A               	movlw	10
 11882  0613  00A8               	movwf	___llmod@divisor
 11883  0614  1683               	bsf	3,5	;RP0=1, select bank1
 11884  0615  1303               	bcf	3,6	;RP1=0, select bank1
 11885  0616  0850               	movf	sprintf@prec^(0+128),w
 11886  0617  00B3               	movwf	??_sprintf^(0+128)
 11887  0618  3001               	movlw	1
 11888  0619                     u7345:
 11889  0619  1003               	clrc
 11890  061A  0DB3               	rlf	??_sprintf^(0+128),f
 11891  061B  3EFF               	addlw	-1
 11892  061C  1D03               	skipz
 11893  061D  2E19               	goto	u7345
 11894  061E  1003               	clrc
 11895  061F  0D33               	rlf	??_sprintf^(0+128),w
 11896  0620  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11897  0621  0084               	movwf	4
 11898  0622  120A  158A  200A  120A  118A  	fcall	stringdir
 11899  0627  1283               	bcf	3,5	;RP0=0, select bank0
 11900  0628  1303               	bcf	3,6	;RP1=0, select bank0
 11901  0629  00A0               	movwf	___lldiv@divisor
 11902  062A  120A  158A  200A  120A  118A  	fcall	stringdir
 11903  062F  00A1               	movwf	___lldiv@divisor+1
 11904  0630  120A  158A  200A  120A  118A  	fcall	stringdir
 11905  0635  00A2               	movwf	___lldiv@divisor+2
 11906  0636  120A  158A  200A  120A  118A  	fcall	stringdir
 11907  063B  00A3               	movwf	___lldiv@divisor+3
 11908  063C  1683               	bsf	3,5	;RP0=1, select bank1
 11909  063D  1303               	bcf	3,6	;RP1=0, select bank1
 11910  063E  0848               	movf	(sprintf@val+3)^(0+128),w
 11911  063F  1283               	bcf	3,5	;RP0=0, select bank0
 11912  0640  1303               	bcf	3,6	;RP1=0, select bank0
 11913  0641  00A7               	movwf	___lldiv@dividend+3
 11914  0642  1683               	bsf	3,5	;RP0=1, select bank1
 11915  0643  1303               	bcf	3,6	;RP1=0, select bank1
 11916  0644  0847               	movf	(sprintf@val+2)^(0+128),w
 11917  0645  1283               	bcf	3,5	;RP0=0, select bank0
 11918  0646  1303               	bcf	3,6	;RP1=0, select bank0
 11919  0647  00A6               	movwf	___lldiv@dividend+2
 11920  0648  1683               	bsf	3,5	;RP0=1, select bank1
 11921  0649  1303               	bcf	3,6	;RP1=0, select bank1
 11922  064A  0846               	movf	(sprintf@val+1)^(0+128),w
 11923  064B  1283               	bcf	3,5	;RP0=0, select bank0
 11924  064C  1303               	bcf	3,6	;RP1=0, select bank0
 11925  064D  00A5               	movwf	___lldiv@dividend+1
 11926  064E  1683               	bsf	3,5	;RP0=1, select bank1
 11927  064F  1303               	bcf	3,6	;RP1=0, select bank1
 11928  0650  0845               	movf	sprintf@val^(0+128),w
 11929  0651  1283               	bcf	3,5	;RP0=0, select bank0
 11930  0652  1303               	bcf	3,6	;RP1=0, select bank0
 11931  0653  00A4               	movwf	___lldiv@dividend
 11932  0654  160A  158A  2421  120A  118A  	fcall	___lldiv
 11933  0659  1283               	bcf	3,5	;RP0=0, select bank0
 11934  065A  1303               	bcf	3,6	;RP1=0, select bank0
 11935  065B  0823               	movf	?___lldiv+3,w
 11936  065C  00AF               	movwf	___llmod@dividend+3
 11937  065D  0822               	movf	?___lldiv+2,w
 11938  065E  00AE               	movwf	___llmod@dividend+2
 11939  065F  0821               	movf	?___lldiv+1,w
 11940  0660  00AD               	movwf	___llmod@dividend+1
 11941  0661  0820               	movf	?___lldiv,w
 11942  0662  00AC               	movwf	___llmod@dividend
 11943  0663  160A  158A  2374  120A  118A  	fcall	___llmod
 11944  0668  1283               	bcf	3,5	;RP0=0, select bank0
 11945  0669  1303               	bcf	3,6	;RP1=0, select bank0
 11946  066A  0828               	movf	?___llmod,w
 11947  066B  3E30               	addlw	48
 11948  066C  1683               	bsf	3,5	;RP0=1, select bank1
 11949  066D  1303               	bcf	3,6	;RP1=0, select bank1
 11950  066E  00B4               	movwf	(??_sprintf+1)^(0+128)
 11951  066F  0834               	movf	(??_sprintf+1)^(0+128),w
 11952  0670  00D2               	movwf	sprintf@c^(0+128)
 11953  0671                     l4516:
 11954                           
 11955                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };D:\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
 11956  0671  0852               	movf	sprintf@c^(0+128),w
 11957  0672  00B3               	movwf	??_sprintf^(0+128)
 11958  0673  084F               	movf	sprintf@sp^(0+128),w
 11959  0674  0084               	movwf	4
 11960  0675  0833               	movf	??_sprintf^(0+128),w
 11961  0676  1383               	bcf	3,7	;select IRP bank0
 11962  0677  0080               	movwf	0
 11963  0678  2E05               	goto	l4512
 11964  0679                     l4520:
 11965                           
 11966                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
 11967  0679  30FF               	movlw	255
 11968  067A  07D0               	addwf	sprintf@prec^(0+128),f
 11969  067B  1803               	skipnc
 11970  067C  0AD1               	incf	(sprintf@prec+1)^(0+128),f
 11971  067D  30FF               	movlw	255
 11972  067E  07D1               	addwf	(sprintf@prec+1)^(0+128),f
 11973  067F  0A50               	incf	sprintf@prec^(0+128),w
 11974  0680  1D03               	skipz
 11975  0681  2E86               	goto	u7351
 11976  0682  0A51               	incf	(sprintf@prec+1)^(0+128),w
 11977  0683  1D03               	btfss	3,2
 11978  0684  2E86               	goto	u7351
 11979  0685  2E87               	goto	u7350
 11980  0686                     u7351:
 11981  0686  2E0A               	goto	l4514
 11982  0687                     u7350:
 11983  0687                     l4522:
 11984                           
 11985                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
 11986  0687  3001               	movlw	1
 11987  0688  07A8               	addwf	sprintf@f^(0+128),f
 11988  0689  30FF               	movlw	-1
 11989  068A  0728               	addwf	sprintf@f^(0+128),w
 11990  068B  0084               	movwf	4
 11991  068C  120A  158A  200A  120A  118A  	fcall	stringdir
 11992  0691  00B3               	movwf	??_sprintf^(0+128)
 11993  0692  0833               	movf	??_sprintf^(0+128),w
 11994  0693  00D2               	movwf	sprintf@c^(0+128)
 11995  0694  0852               	movf	sprintf@c^(0+128),w
 11996  0695  1D03               	btfss	3,2
 11997  0696  2E98               	goto	u7361
 11998  0697  2E9B               	goto	u7360
 11999  0698                     u7361:
 12000  0698  160A  118A  2D00   	goto	l4242
 12001  069B                     u7360:
 12002  069B                     l4524:
 12003                           
 12004                           ;D:\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 12005  069B  084F               	movf	sprintf@sp^(0+128),w
 12006  069C  0084               	movwf	4
 12007  069D  1383               	bcf	3,7	;select IRP bank0
 12008  069E  0180               	clrf	0
 12009  069F                     l447:
 12010  069F  0008               	return
 12011  06A0                     __end_of_sprintf:

Data Sizes:
    Strings     34
    Constant    144
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     79      79
    BANK1            80     51      80
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> pantalla(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    USART_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> pantalla(BANK1[20]), 

    LCD_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[15]), pantalla(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->_LCD_Set_Cursor
    _sprintf->___awdiv
    _sprintf->___lldiv
    _sprintf->___wmul
    _scale->___awdiv
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    _USART_Write_String->_USART_Write
    ___flmul->___awdiv
    ___flmul->___lwmod
    _LCD_clear->_LCD_Command
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Command
    _LCD_Init->_LCD_Command
    _LCD_Command->_LCD_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _LeerADC->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   41630
                                             76 BANK0      3     3      0
                       _Init_Receive
                      _Init_Transmit
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                          _LCD_clear
                            _LeerADC
                      _Set_Baud_Rate
                        _USART_Write
                 _USART_Write_String
                            _initADC
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             48    37     11   35211
                                              8 BANK1     43    32     11
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8051
                                             36 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              8 COMMON     1     1      0
                                              2 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6291
                                             36 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              0 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              8 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             55 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             56 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Write_String                                   3     3      0     145
                                              4 COMMON     3     3      0
                        _USART_Write
 ---------------------------------------------------------------------------------
 (2) _USART_Write                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Set_Baud_Rate                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LeerADC                                             13     9      4    5291
                                             36 BANK0     13     9      4
                         _ADC_Select
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                             10 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Select                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            0     0      0      62
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2     372
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     434
                                              7 COMMON     2     1      1
                                              0 BANK0      2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      93
                                              7 COMMON     2     2      0
                        _LCD_Command
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      62
                                              4 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_Transmit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Receive                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _USART_Read
 ---------------------------------------------------------------------------------
 (6) _USART_Read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Receive
   _Init_Transmit
   _LCD_Init
     _LCD_Command
       _LCD_Port
     _LCD_Port
   _LCD_Set_Cursor
     _LCD_Command
       _LCD_Port
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _LCD_clear
     _LCD_Command
       _LCD_Port
   _LeerADC
     _ADC_Select
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Set_Baud_Rate
   _USART_Write
   _USART_Write_String
     _USART_Write
   _initADC
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _ISR (ROOT)
   _USART_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AA       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     33      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AA      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 15:25:29 2021

     __size_of_Init_Transmit 000E                            pc 0002                 ?_LCD_Command 0070  
                         _V1 00D7                           _V2 00D3                 ___awdiv@sign 0027  
                         fsr 0004          ___wmul@multiplicand 0075          __Umul8_16@word_mpld 0022  
                        l100 1991                          l103 1BE0                          l122 1005  
                        l106 1C20                          l131 1AD3                          l220 08D2  
                        l125 18F3                          l223 185B                          l119 18B2  
                        l143 1A3E                          l128 1887                          l137 193E  
                        l217 184B                          l226 1870                          l410 02E1  
                        l235 18D0                          l229 187A                          l158 07FF  
                        l417 0325                          l178 1D24                          l451 1900  
                        l355 0FFF                          l348 126D                          l604 093B  
                        l453 1918                          l621 1FFF                          l622 1F64  
                        l447 069F                          l632 1FF2                          l625 1FC2  
                        l617 1060                          l377 15BD                          l642 1D43  
                        l650 186E                          l803 1467                          l707 1BC9  
                        l820 14E9                          l812 14C7                          l637 1AF2  
                        l645 1DAF                          l821 14F5                          l661 07DD  
                        l638 1B0E                          l646 1DC8                          l654 07F2  
                        l639 1B23                          l487 1C88                          l920 1E84  
                        l824 1B73                          l664 07F2                          l672 1F04  
                        l809 1489                          l931 1E4E                          l932 1E5A  
                        l924 1E32                          l668 1F41                          l669 1EB3  
                        l757 1A84                          l918 1DED                          l782 1378  
                        l791 14F5                          l679 1F34                          l767 19F8  
                        l880 0C08                          l784 134F                          l874 0C9C  
                        l778 12D1                          l938 1899                          l893 1955  
                        l886 0C90                          l895 1967                          l799 1443  
                        _RE0 0048                          _RE1 0049                          _ISR 1992  
        __size_of_ADC_Select 009C                          fsr0 0004                          indf 0000  
               ___awmod@sign 0021                 ___flmul@aexp 003C                 ___flmul@bexp 003D  
               ___flmul@sign 0037                 ___flmul@temp 0042                 ___flmul@prod 003E  
                       ?_ISR 0070               _LCD_Set_Cursor 1919                 ___fltol@exp1 0061  
                       l4002 0FD3                         l3300 1BA4                         l4020 1EBA  
                       l4012 1EA1                         l3060 1889                         l2500 091F  
                       l3310 1B24                         l4110 1C21                         l3302 1BB2  
                       l4030 1EEB                         l4022 1EC9                         l4006 1E85  
                       l3062 188A                         l2510 0937                         l2502 0920  
                       l4200 1E72                         l2600 126E                         l3312 1B28  
                       l4120 1C50                         l4112 1C33                         l3304 1BBB  
                       l4104 1FE7                         l4032 1EF5                         l4024 1ECB  
                       l4008 1E98                         l3064 1890                         l2504 0927  
                       l4210 1A85                         l4202 1E77                         l3250 186E  
                       l2610 1285                         l2602 1275                         l4122 1C62  
                       l4114 1C36                         l4130 1C80                         l3306 1BC1  
                       l4106 1FF7                         l4034 1EF6                         l4026 1ED4  
                       l4018 1EB4                         l3066 1896                         l2506 092D  
                       l4220 1AAC                         l4212 1A89                         l2460 194F  
                       l4204 1E7B                         l3412 1847                         l4140 1B20  
                       l2700 1381                         l2620 129D                         l2612 128A  
                       l2604 127B                         l3260 078D                         l4124 1C70  
                       l4116 1C43                         l3180 18FA                         l4060 1F4F  
                       l4052 1F29                         l4044 1F10                         l4036 1EFE  
                       l4028 1EDD                         l3068 1898                         l2508 0932  
                       l4300 1649                         l3414 08C5                         l4214 1A8F  
                       l4222 187B                         l2462 195E                         l2454 1942  
                       l4206 1E7C                         l4230 1BD6                         l4142 1B22  
                       l4134 1AD4                         l4150 1D57                         l3246 1864  
                       l2710 13A9                         l2630 12B3                         l2622 12A2  
                       l2614 1292                         l2606 127F                         l3270 07B1  
                       l3262 07A2                         l3254 0777                         l4126 1C71  
                       l4118 1C47                         l3182 1907                         l4070 1F65  
                       l4054 1F39                         l4038 1F08                         l4046 1F22  
                       l2470 08D3                         l4310 1689                         l4302 164D  
                       l3416 1854                         l4216 1A98                         l2464 1963  
                       l2456 1944                         l2800 094D                         l4232 1BDD  
                       l4224 1BCD                         l4136 1AEA                         l4160 1DC5  
                       l4152 1D5F                         l3248 186C                         l2720 13C2  
                       l2712 13B2                         l2704 138A                         l2640 12C7  
                       l2632 12B4                         l2624 12A8                         l2616 1293  
                       l2608 1280                         l3264 07A3                         l3256 0784  
                       l4128 1C7A                         l3184 190E                         l3176 18F4  
                       l4080 1F92                         l4072 1F6D                         l4064 1F58  
                       l2480 08E5                         l2472 08D6                         l4400 02D5  
                       l4320 16E8                         l4312 169C                         l4304 1651  
                       l4240 14F9                         l4218 1AA6                         l2458 194B  
                       l2810 0962                         l2802 094E                         l4170 1DD5  
                       l4234 1BE4                         l4226 1BCD                         l3370 1972  
                       l4138 1B06                         l4162 1DC7                         l4154 1D63  
                       l4146 1D25                         l2730 1426                         l2714 13B4  
                       l2706 13A1                         l2722 13C7                         l2650 12E3  
                       l2634 12B9                         l2642 12C9                         l2626 12A9  
                       l2618 1295                         l3266 07AB                         l3290 1B74  
                       l3186 1914                         l3178 18F6                         l4090 1FC6  
                       l4082 1FA4                         l4074 1F7E                         l4058 1F42  
                       l2490 08F9                         l2482 08EA                         l2474 08DA  
                       l4410 0309                         l4402 02E9                         l4322 1733  
                       l4314 16BF                         l4306 1678                         l4330 1794  
                       l4250 1516                         l4242 1500                         l2820 097A  
                       l2812 096A                         l2804 0953                         l4180 1E03  
                       l4172 1DE5                         l4236 1C18                         l4228 1BD3  
                       l3380 1983                         l3372 1973                         l4156 1D87  
                       l4148 1D3B                         l2740 1459                         l2724 13DD  
                       l2732 1435                         l2716 13B8                         l2708 13A5  
                       l2660 12F7                         l2652 12E7                         l2644 12D7  
                       l2636 12BE                         l2628 12AF                         l3284 07D2  
                       l3276 07B9                         l3268 07AD                         l3292 1B7E  
                       l4084 1FB2                         l4076 1F80                         l2580 19C5  
                       l2492 0900                         l2484 08EE                         l2476 08DF  
                       l4500 05D5                         l4420 033A                         l4412 0318  
                       l4404 02F2                         l4340 006E                         l4332 17A3  
                       l4324 175A                         l4316 16C3                         l4308 1683  
                       l4260 1556                         l4252 1526                         l4244 1506  
                       l2910 0C3D                         l2902 0C0D                         l2830 0996  
                       l2822 097F                         l2814 096F                         l2806 0958  
                       l4190 1E39                         l4182 1E10                         l4174 1DF5  
                       l4166 1DCC                         l3390 1990                         l3382 1986  
                       l3374 1976                         l3366 1968                         l4158 1D8B  
                       l2750 1470                         l2742 1462                         l2734 144B  
                       l2726 141B                         l2718 13B9                         l2670 130B  
                       l2662 12FB                         l2654 12EB                         l2646 12DB  
                       l2638 12C6                         l3286 07E2                         l3278 07CB  
                       l3294 1B81                         l4086 1FB3                         l4078 1F89  
                       l2590 19E1                         l2582 19C8                         l2494 0904  
                       l2486 08F0                         l2478 08E1                         l4510 05FE  
                       l4502 05DB                         l4430 0451                         l4422 033E  
                       l4414 031F                         l4406 02F6                         l4350 00D5  
                       l4342 007D                         l4334 17EA                         l4326 1763  
                       l4318 16C9                         l4270 157C                         l4254 152A  
                       l4262 1566                         l4246 150D                         l2920 0C74  
                       l2904 0C12                         l2912 0C43                         l2840 09B9  
                       l2832 099B                         l2824 0984                         l2816 0975  
                       l2808 0960                         l4192 1E44                         l4184 1E17  
                       l4168 1DD1                         l3392 07F3                         l3384 198B  
                       l3376 197D                         l3368 196E                         l2760 1480  
                       l2752 1475                         l2744 1466                         l2736 1450  
                       l2728 1421                         l2680 131C                         l2672 130F  
                       l2664 12FF                         l2656 12EF                         l2648 12DF  
                       l3288 07E7                         l3296 1B8E                         l4096 1FCE  
                       l4088 1FBC                         l2592 19E7                         l2584 19CF  
                       l2496 0908                         l2488 08F6                         l4512 0605  
                       l4520 0679                         l4504 05E2                         l4440 04CB  
                       l4432 045D                         l4424 035C                         l4416 032E  
                       l4408 02FC                         l4360 018D                         l4344 00A6  
                       l4336 001E                         l4328 178C                         l4280 15BB  
                       l4272 1591                         l4264 1574                         l4256 153F  
                       l4248 1512                         l2930 0C94                         l2922 0C76  
                       l2914 0C50                         l2906 0C20                         l2850 0A47  
                       l2842 09C6                         l2834 09A0                         l2826 098C  
                       l2818 0979                         l4194 1E48                         l4186 1E1B  
                       l4178 1DFE                         l3730 18B6                         l3394 07FA  
                       l3386 198C                         l3378 1980                         l2770 14A1  
                       l2762 1486                         l2746 146B                         l2754 1477  
                       l2690 1362                         l2682 1333                         l2674 1313  
                       l2666 1303                         l2658 12F3                         l3298 1B92  
                       l4098 1FE0                         l2594 19EE                         l2586 19D3  
                       l2578 19BF                         l2498 0919                         l4514 060A  
                       l4506 05E6                         l4450 04F1                         l4442 04D1  
                       l4426 03B7                         l4434 04B8                         l4418 0333  
                       l4362 018F                         l4354 0120                         l4346 00AF  
                       l4338 0047                         l4290 15F3                         l4274 15A4  
                       l4266 1575                         l4258 1552                         l4522 0687  
                       l4540 192D                         l2940 1C8B                         l2924 0C84  
                       l2916 0C5B                         l2908 0C24                         l2860 0AA9  
                       l2852 0A63                         l2844 09E3                         l2828 098E  
                       l4196 1E52                         l4188 1E29                         l3732 18C1  
                       l3396 07FC                         l3388 198D                         l2780 14D9  
                       l2772 14A5                         l2748 146E                         l2756 147B  
                       l2692 1363                         l2684 1353                         l2676 1317  
                       l2668 1307                         l3900 1A43                         l2588 19D7  
                       l2596 19F4                         l4516 0671                         l4508 05F2  
                       l4460 0514                         l4452 04F5                         l4436 04C0  
                       l4428 0412                         l4380 01FF                         l4372 01C8  
                       l4348 00B7                         l4356 0129                         l4292 15F7  
                       l4444 04D8                         l4524 069B                         l4284 15BF  
                       l4276 15A8                         l4268 1579                         l4542 1933  
                       l4534 191C                         l4550 1A1A                         l2950 1CAC  
                       l2942 1C90                         l2926 0C88                         l2918 0C6A  
                       l2870 0B39                         l2862 0AC6                         l2854 0A6C  
                       l2846 09FF                         l2838 09A9                         l4198 1E5C  
                       l2934 1870                         l3734 18C5                         l2790 14F0  
                       l2782 14DE                         l2774 14C3                         l2766 148E  
                       l2758 147C                         l2694 136C                         l2686 135C  
                       l2678 131B                         l3910 1A5B                         l3902 1A49  
                       l4470 054D                         l4454 0500                         l4446 04E9  
                       l4438 04C7                         l4390 0221                         l4382 0206  
                       l4374 01D2                         l4358 015E                         l4294 1605  
                       l4286 15E1                         l4278 15B9                         l4544 1938  
                       l4536 1921                         l4552 1A22                         l2960 1CCF  
                       l2952 1CB3                         l2944 1C97                         l2928 0C89  
                       l2880 0BCB                         l2872 0B66                         l2864 0ADF  
                       l2856 0A7C                         l2848 0A2B                         l2936 1876  
                       l3728 18B4                         l2792 14F4                         l2784 14DF  
                       l2776 14CC                         l2768 1493                         l2688 135E  
                       l2696 1370                         l3912 1A6C                         l3904 1A4C  
                       l3920 1A80                         l4480 0581                         l4472 0557  
                       l4456 0506                         l4448 04ED                         l4392 022F  
                       l4384 020F                         l4376 01ED                         l4368 0191  
                       l4296 1609                         l4288 15EF                         l4560 06C3  
                       l4538 1926                         l3930 18A7                         l4546 19F9  
                       l2962 1CD6                         l2954 1CBA                         l2946 1C9E  
                       l2938 1C8A                         l2882 0BD4                         l2890 0BE8  
                       l2874 0B8C                         l2866 0AFC                         l2858 0A99  
                       l2794 093C                         l2786 14E3                         l2778 14D1  
                       l2698 137C                         l3914 1A72                         l3906 1A53  
                       l4490 05AD                         l4482 0589                         l4474 0562  
                       l4466 0516                         l4458 050E                         l4394 0236  
                       l4378 01F3                         l4298 1630                         l4634 15D3  
                       l4570 0738                         l4562 06E1                         l4554 06A0  
                       l3940 18DB                         l3932 18AB                         l3924 189B  
                       l4548 19FE                         l4636 1CF8                         l2964 1CDD  
                       l2956 1CC1                         l2948 1CA5                         l2972 1CF0  
                       l2892 0BEC                         l2884 0BD8                         l2876 0BB4  
                       l2868 0B29                         l2796 0943                         l2788 14E5  
                       l3916 1A73                         l3908 1A57                         l3860 1006  
                       l4492 05B6                         l4484 0595                         l4476 0569  
                       l4396 023B                         l4388 0214                         l4580 075C  
                       l4572 073E                         l4564 06FF                         l4556 06B9  
                       l3942 18DE                         l3934 18AE                         l3926 189E  
                       l2966 1CE4                         l2958 1CC8                         l2894 0BED  
                       l2886 0BD9                         l2878 0BBD                         l2798 0949  
                       l3918 1A7A                         l3950 106A                         l3870 1018  
                       l3862 1009                         l4494 05BA                         l4486 059B  
                       l4478 0578                         l4398 0296                         l4582 0765  
                       l4574 0743                         l4566 072C                         l4558 06BE  
                       l3944 18E7                         l3936 18D2                         l3928 18A4  
                       l2968 1CEB                         l2896 0BF1                         l2888 0BE2  
                       l3880 1031                         l3872 101D                         l3864 100D  
                       l4496 05C5                         l4488 059F                         l4576 074B  
                       l4568 0732                         l3858 1001                         l3946 18EA  
                       l3938 18D5                         l2898 0C05                         l3962 122A  
                       l3882 1035                         l3874 1023                         l3890 1052  
                       l3866 1012                         l3970 0CA6                         l4498 05D1  
                       l4578 0754                         l3956 1179                         l3948 1064  
                       l3892 1057                         l3884 103F                         l3876 1026  
                       l3868 1014                         l3980 0D9E                         l3972 0CAD  
                       l3958 117F                         l3894 105C                         l3886 1045  
                       l3878 102D                         l3990 0E5A                         l3966 0CA0  
                       l3888 104C                         l3984 0E26                         l3968 0CA4  
                       l3898 1A3F                         l3978 0D97                         l3996 0F44  
                       l3988 0E53                         l3998 0F4B                         STR_1 08A0  
                       STR_2 08B3                         _BRGH 04C2                         _CREN 00C4  
                       u3000 08DA                         u3001 08D9                         u3010 08E5  
                       u3011 08E4                         u3020 08F6                         u3021 08F5  
                       u3040 0908                         u4001 0BA6                         u3041 0907  
                       u4002 0BAD                         u4003 0BB4                         u3035 08FA  
                       u4100 0C24                         u3060 0919                         u4101 0C23  
                       u3061 0918                         u4110 0C33                         u4030 0BD8  
                       u3310 19F4                         u4031 0BD7                         u4015 0BB6  
                       u3311 19F3                         u3055 0909                         u4120 0C50  
                       u3400 12DB                         u3320 127F                         u5000 07E7  
                       u3080 092D                         u4121 0C4F                         u4025 0BCD  
                       u3401 12DA                         u3321 127E                         u5001 07E6  
                       u3305 19E8                         u3081 092C                         u3065 0915  
                       u4130 0C6A                         u4050 0BEC                         u3410 1333  
                       u3330 1285                         u5010 1B7E                         u3090 0932  
                       u4131 0C69                         u4115 0C2E                         u4051 0BEB  
                       u3411 1332                         u3331 1284                         u5011 1B7D  
                       u3091 0931                         u3075 0921                         u4140 0C88  
                       u4060 0BF1                         u3420 133E                         u3340 128A  
                       u3260 19C5                         u4141 0C87                         u4125 0C4C  
                       u4061 0BF0                         u4045 0BDB                         u3501 1393  
                       u3421 133C                         u3341 1289                         u3261 19C4  
                       u4070 0C05                         u4150 1876                         u3510 13A5  
                       u3502 139A                         u3430 133F                         u3350 12A8  
                       u5030 1B92                         u4135 0C66                         u4071 0C04  
                       u4151 1875                         u3511 13A4                         u3503 13A1  
                       u3415 132F                         u3351 12A7                         u5031 1B91  
                       u4080 0C0C                         u3600 1450                         u3520 13A9  
                       u3440 1353                         u3360 12B3                         u5040 1BA4  
                       u6000 1A80                         u3280 19D7                         u4081 0C0B  
                       u3601 144F                         u3521 13A8                         u3441 1352  
                       u3361 12B2                         u5041 1BA3                         u5025 1B83  
                       u6001 1A7F                         u3281 19D6                         u4090 0C12  
                       u3530 13B8                         u3450 1362                         u3370 12B9  
                       u3290 19E1                         u6010 106A                         u4410 1890  
                       u4091 0C11                         u3531 13B7                         u3451 1361  
                       u3371 12B8                         u3291 19E0                         u3275 19C9  
                       u6011 1069                         u4411 188F                         u3700 14A5  
                       u3620 1466                         u3380 12BE                         u5060 1BC1  
                       u4420 1896                         u6100 0CAD                         u3701 14A4  
                       u3621 1465                         u3381 12BD                         u5061 1BC0  
                       u5045 1BA0                         u4421 1895                         u6101 0CAC  
                       u3710 14B4                         u3630 146B                         u3550 13DD  
                       u3470 1378                         u3390 12D7                         u3631 146A  
                       u3615 145B                         u3551 13DC                         u3471 1377  
                       u3391 12D6                         u5055 1BB3                         u3295 19DD  
                       u3800 0958                         u3720 14C3                         u3640 1475  
                       u3480 137C                         u7000 007D                         u3801 0957  
                       u3721 14C2                         u3641 1474                         u3561 13F4  
                       u3553 13D9                         u3545 13BB                         u3481 137B  
                       u3465 1365                         u6025 1087                         u7001 007C  
                       u3810 0979                         u3730 14CC                         u3650 147B  
                       u3570 1408                         u3562 13F5                         u3490 1381  
                       u6050 117F                         u7010 00A6                         u3811 0978  
                       u3731 14CB                         u3715 14AF                         u3651 147A  
                       u3571 1409                         u3563 13FA                         u3491 1380  
                       u6051 117E                         u6035 10E3                         u6115 0CCF  
                       u7011 00A5                         u3820 097F                         u3740 14D1  
                       u3660 1480                         u3580 1426                         u3572 140E  
                       u3564 13FB                         u6220 0F4B                         u6140 0D9E  
                       u7100 02E8                         u3821 097E                         u3741 14D0  
                       u3661 147F                         u3581 1425                         u3573 140F  
                       u3565 1400                         u6045 1138                         u6221 0F4A  
                       u6205 0EB8                         u6141 0D9D                         u6125 0D0B  
                       u7101 02E7                         u7005 0079                         u3830 0984  
                       u3750 14DE                         u3670 1486                         u3590 144B  
                       u3566 1401                         u6310 1F04                         u7110 0309  
                       u7030 01C7                         u3911 0A8B                         u3831 0983  
                       u3751 14DD                         u3671 1485                         u3591 144A  
                       u6311 1F03                         u6215 0F03                         u6135 0D56  
                       u7111 0308                         u7031 01C6                         u3912 0A92  
                       u3840 099B                         u3760 14E3                         u3680 148D  
                       u4720 1914                         u6400 1F63                         u6320 1F08  
                       u7200 050E                         u7120 0318                         u7040 01D2  
                       u3921 0AB8                         u3913 0A99                         u3905 0A65  
                       u3841 099A                         u3761 14E2                         u3681 148C  
                       u4721 1913                         u4705 1901                         u6401 1F62  
                       u6321 1F07                         u6305 1EF7                         u6065 119C  
                       u7201 050D                         u7121 0317                         u7041 01D1  
                       u7025 0194                         u2970 194F                         u3922 0ABF  
                       u3850 09A0                         u3770 14F4                         u3690 1493  
                       u6330 1F0F                         u6090 0CA4                         u7130 0333  
                       u7050 01ED                         u2971 194E                         u3923 0AC6  
                       u3851 099F                         u3771 14F3                         u3691 1492  
                       u4715 1908                         u6331 1F0E                         u6075 11E9  
                       u6235 0F5E                         u6155 0DB1                         u6091 0CA3  
                       u7131 0332                         u7115 0305                         u7051 01EC  
                       u7035 01C3                         u3780 094D                         u4900 186C  
                       u6420 1FA4                         u6260 1E98                         u6180 0E5A  
                       u7300 05C5                         u7220 054C                         u7060 01FF  
                       _RCIF 0065                         u3941 0AEE                         u3861 09F1  
                       u3781 094C                         u4901 186B                         u6421 1FA3  
                       u6261 1E97                         u6085 1235                         u6245 0F9A  
                       u6181 0E59                         u6165 0DED                         u7301 05C4  
                       u7221 054B                         u7125 0314                         u7061 01FE  
                       u2990 1963                         u3942 0AF5                         u3862 09F8  
                       u3790 0953                         u4910 0784                         u6510 1FF7  
                       u6350 1F21                         u6270 1EB2                         u7310 05DB  
                       u7230 0557                         u7070 0221                         u2991 1962  
                       u3951 0B1B                         u3943 0AFC                         u3935 0AC8  
                       u3871 0A0D                         u3863 09FF                         u3791 0952  
                       u4911 0783                         u6511 1FF6                         u6415 1F8B  
                       u6351 1F20                         u6271 1EB1                         u6255 0FD6  
                       u6175 0E29                         u7311 05DA                         u7231 0556  
                       u7215 0519                         u7071 0220                         u7400 1A2C  
                       u3952 0B22                         u3872 0A14                         u6600 1B06  
                       u4920 079B                         u6520 1C33                         u6440 1FC2  
                       u6360 1F28                         u7320 05F2                         u7240 0562  
                       u7160 04BF                         u7080 022F                         u2985 1956  
                       u3961 0B48                         u3953 0B29                         u3881 0A39  
                       u3873 0A1B                         u6601 1B05                         u6521 1C32  
                       u6505 1FE9                         u6441 1FC1                         u6425 1FA0  
                       u6361 1F27                         u6345 1F11                         u7321 05F1  
                       u7305 05C1                         u7241 0561                         u7225 0548  
                       u7161 04BE                         u7145 03BA                         u7081 022E  
                       u7410 1A3E                         u3970 0B72                         u3962 0B4F  
                       u3882 0A40                         u6610 1B20                         u4930 07B1  
                       u4690 18FA                         u6450 1FC6                         u6290 1EEB  
                       u7330 05FE                         u7250 0578                         u7170 04D7  
                       u7411 1A3D                         u3963 0B56                         u3891 0A55  
                       u3883 0A47                         u6611 1B1F                         u4931 07B0  
                       u4691 18F9                         u6451 1FC5                         u6435 1FB5  
                       u6291 1EEA                         u6195 0E7C                         u7331 05FD  
                       u7251 0577                         u7171 04D6                         u7155 0460  
                       u7075 021D                         u3892 0A5C                         u6700 1DD5  
                       u6620 1D3B                         u4940 07B8                         u6540 1C47  
                       u6460 1FCD                         u6380 1F39                         u5900 103F  
                       u7260 0589                         u7180 04F1                         u3981 0B7E  
                       u3893 0A63                         u6701 1DD4                         u6621 1D3A  
                       u4941 07B7                         u4925 0796                         u6541 1C46  
                       u6461 1FCC                         u6381 1F38                         u6285 1ED6  
                       u5901 103E                         u7261 0588                         u7245 055E  
                       u7181 04F0                         u3990 0B9A                         u3982 0B85  
                       u6710 1DF5                         u6630 1D57                         u6390 1F4F  
                       u7350 0687                         u7270 0595                         u7190 0506  
                       u3983 0B8C                         u3975 0B6D                         u6711 1DF4  
                       u6615 1B1C                         u6631 1D56                         u6535 1C38  
                       u6391 1F4E                         u6375 1F2B                         u6295 1EE7  
                       u7351 0686                         u7271 0594                         u7255 0574  
                       u7191 0505                         u7095 023E                         u6800 1E67  
                       u5760 18D0                         u6640 1D63                         u4960 07CA  
                       u6560 1C62                         u6480 1FDF                         u5920 1052  
                       u7360 069B                         u7280 059F                         i1l89 19B8  
                       u5761 18CF                         u6641 1D62                         u4961 07C9  
                       u6561 1C61                         u6481 1FDE                         u5921 1051  
                       u5905 103B                         u7361 0698                         u7345 0619  
                       u7281 059E                         u7370 1921                         u6810 1E77  
                       u6730 1E16                         u4970 07D1                         u6490 1FE6  
                       u5930 1057                         u5850 100D                         u7290 05AD  
                       u7507 18EE                         u7371 1920                         u3995 0B95  
                       u6811 1E76                         u6731 1E15                         u6651 1D72  
                       u4971 07D0                         u4955 07BA                         u6555 1C49  
                       u6491 1FE5                         u6475 1FCF                         u5931 1056  
                       u5915 1046                         u5851 100C                         u7291 05AC  
                       u7427 076D                         u7380 1933                         u6820 1E7B  
                       u6660 1D8B                         u6652 1D73                         u6580 1C80  
                       u5940 1A49                         u5860 1018                         u6900 15F3  
                       u7381 1932                         u6821 1E7A                         u6805 1E62  
                       u6725 1E08                         u7437 1BDA                         u6661 1D8A  
                       u6653 1D78                         u6581 1C7F                         u6565 1C5E  
                       u5941 1A48                         u5861 1017                         u6901 15F2  
                       u7390 1A08                         u6750 1E38                         u6830 1BE4  
                       u6590 1AEA                         u6654 1D79                         u4990 07E2  
                       u5870 1023                         u6910 1630                         u7447 18A9  
                       u6751 1E37                         u6831 1BE3                         u6591 1AE9  
                       u6671 1D9A                         u6655 1D7E                         u4991 07E1  
                       u6575 1C72                         u5871 1022                         u7295 05A9  
                       u6911 162F                         u6680 1DC5                         u6672 1D9B  
                       u6656 1D7F                         u5960 1A5B                         u6920 1678  
                       u6840 1506                         u7457 18B0                         u6745 1E2A  
                       u6681 1DC4                         u6673 1DA0                         u4985 07D4  
                       u5961 1A5A                         u6921 1677                         u6841 1505  
                       u6770 1E48                         u6690 1DD1                         u6674 1DA1  
                       u5890 1035                         u6930 16C3                         u6850 1526  
                       u7467 1A93                         u6771 1E47                         u6691 1DD0  
                       u6675 1DA6                         u5955 1A4D                         u5891 1034  
                       u6931 16C2                         u6851 1525                         u6780 1E4E  
                       u6676 1DA7                         u5980 1A6C                         u6940 175A  
                       u6860 1566                         u7477 1AA2                         u6781 1E4D  
                       u6765 1E3D                         u6685 1DC1                         u5981 1A6B  
                       u5885 1027                         u6941 1759                         u6861 1565  
                       u6790 1E52                         u6950 178C                         u6870 1574  
                       u7487 1AB0                         u6791 1E51                         u5975 1A5C  
                       u6951 178B                         u6871 1573                         u6960 17A3  
                       u6880 15B8                         u7497 18E2                         u5985 1A68  
                       u6961 17A2                         u6881 15B7                         u6970 001E  
                       u6890 15EF                         u5995 1A74                         u6971 17FA  
                       u6891 15EC                         u6980 0047                         u6981 0046  
                       u6965 179F                         u6990 006E                         u6991 006D  
                       u6975 17F5                         _SPEN 00C7                         _TRMT 04C1  
                       _TXEN 04C5                         _SYNC 04C4            ?_LCD_Write_String 0076  
__size_of_USART_Write_String 001E                         _main 06A0                         btemp 007E  
                       start 000C           ??_LCD_Write_String 0020           __size_of_LCD_clear 000D  
               _sprintf$1240 00B8              __end_of_LeerADC 1C21                ?_Init_Receive 0070  
                      ??_ISR 0070             __end_of_LCD_Init 1AD4             __end_of_LCD_Port 1006  
              ___fltol@sign1 0060              __end_of___fladd 14F6                        ?_main 0070  
            __end_of___awdiv 093C              __end_of___flneg 186F              __end_of___awmod 1061  
            __end_of___flmul 0C9D              __end_of___flsub 1B74              __end_of___fltol 07F3  
                      _ANSEL 0188              __end_of___lldiv 1C89              ___awdiv@divisor 0022  
            __end_of___llmod 1BCA              __end_of___lwdiv 1A85                        i1l241 1853  
                      i1l238 184C              __end_of___lwmod 19F9              ___awdiv@counter 0026  
                      _RCREG 001A                        _SPBRG 0099                        _PORTA 0005  
                      _PORTB 0006                        _PORTC 0007                        _PORTD 0008  
                      _PORTE 0009                        _TRISA 0085                        _TRISB 0086  
                      _TRISC 0087                        _TRISD 0088                        _TRISE 0089  
                      _TXREG 0019       __end_of_LCD_Set_Cursor 193F                _Init_Transmit 08C5  
            __end_of_initADC 0800              __end_of_dpowers 08A0                        _scale 0C9D  
            __end_of_isdigit 189A                        _setup 1968                 LCD_Command@a 0076  
                      pclath 000A                        status 0003                        wtemp0 007E  
            __end_of_sprintf 06A0                 USART_Write@a 0073                  ?_USART_Read 0070  
             _LCD_Write_Char 189A              __initialization 000F               ??_Init_Receive 0073  
               __end_of_main 0777                       ??_main 006C         __size_of__tdiv_to_l_ 00BD  
          __end_of_LCD_clear 1888               ?_Init_Transmit 0070              ?_LCD_Set_Cursor 0077  
                     _ADCON0 001F                       _ADCON1 009F             ___llmod@dividend 002C  
                     ?_scale 0044                       _ADRESH 001E             ___awdiv@dividend 0024  
                     ?_setup 0070                       _ANSELH 0189                       i1l3360 184C  
                     i1l3362 1852                       i1l3760 1999                       i1l3762 19A1  
                     i1l3764 19A7                       i1l3756 1992                       i1l3766 19AE  
                     i1l3758 1998                       i1l3768 19B4                       u521_20 1852  
                     u521_21 1851                       u582_20 1998                       u582_21 1997  
                     u583_20 19A7                       u583_21 19A6                       u584_20 19B4  
                     u584_21 19B3                 ??_ADC_Select 0073                    ??_LeerADC 0048  
                     _TRISC6 043E                       _TRISC7 043F             __end_of___xxtofl 1E85  
     __end_of_LCD_Write_Char 18B3             __end_of__powers_ 0844                       ___flge 1D25  
                     ___fleq 1AD4                    ??___fladd 0060                       ___wmul 18F4  
                  ??___awdiv 0078                    ??___flneg 0077                    ??___awmod 0077  
                  ??___flmul 0032                    ??___flsub 0079                    ??___fltol 005B  
                  ??___lldiv 0073                    ??___llmod 0030                    ??___lwdiv 0024  
                  ??___lwmod 0077                       _fround 1061             ___awdiv@quotient 0028  
            ___awmod@divisor 0073              ___awmod@counter 0020         __size_of_LCD_Command 0023  
                  ??_initADC 0073                    ??_isdigit 0073           __end_of_ADC_Select 1D25  
         __size_of__Umul8_16 0029                       saved_w 007E          __size_of_USART_Read 0008  
                  ??_sprintf 00B3              LCD_Set_Cursor@a 0021              LCD_Set_Cursor@x 0020  
            LCD_Set_Cursor@y 0077                   ___flge@ff1 0020                   ___flge@ff2 0024  
               ___xxtofl@arg 0026                 ___xxtofl@exp 0025                 ___xxtofl@val 0073  
                 ___fleq@ff1 0020                   ___fleq@ff2 0024      __end_of__initialization 001A  
                  ?_LCD_Init 0070                   ___flneg@f1 0073                    ?_LCD_Port 0070  
                 ___fltol@f1 0057              ?_LCD_Write_Char 0070                 ?_USART_Write 0070  
             __pcstackCOMMON 0070                    LCD_Port@a 0073                __end_of_scale 1000  
              __end_of_setup 1992       __size_of_Set_Baud_Rate 0005              ??_Init_Transmit 0073  
                 __div_to_l_ 1F42         __end_of_Init_Receive 185C              __div_to_l_@exp1 002D  
            __div_to_l_@cntr 002C                      ??_scale 0048              __div_to_l_@quot 0028  
               sprintf@width 00BF                      ??_setup 0073                   __pbssBANK1 00D3  
                 ??_LCD_Init 0077                   ??_LCD_Port 0073                __div_to_l_@f1 0020  
              __div_to_l_@f2 0024            __end_of__Umul8_16 1968                   __pmaintext 06A0  
                    ?___flge 0020                      ?___fleq 0020                      ?___wmul 0073  
                 __pintentry 0004                      ?_fround 0044    __size_of_LCD_Write_String 0046  
                  ?___xxtofl 0073   __end_of_USART_Write_String 18D1                   __stringtab 0800  
              _Set_Baud_Rate 1847                      _LeerADC 1BCA                 ??_USART_Read 0070  
          __end_of__npowers_ 0878                   _scale$1239 0052              __size_of___flge 00A4  
            __size_of___fleq 0050                      ___fladd 126E                      ___awdiv 08D3  
                    ___flneg 1864                      ___awmod 1006                      ___flmul 093C  
                    ___flsub 1B24                      ___fltol 0777                      ___lldiv 1C21  
            __size_of___wmul 0025                      ___llmod 1B74                      ___lwdiv 1A3F  
                    ___lwmod 19BF              __size_of_fround 020D             ??_LCD_Set_Cursor 0078  
                    __ptext1 14F6                      __ptext2 0C9D                      __ptext3 1006  
                    __ptext4 08D3                      __ptext5 1888                      __ptext6 1061  
                    __ptext7 19BF                      __ptext8 1A3F                      __ptext9 1E85  
                    _initADC 07F3                 __size_of_ISR 002D                  ?__div_to_l_ 0020  
                    _dpowers 0878                      _isdigit 1888                   ??___xxtofl 0020  
           ___awmod@dividend 0075           __end_of_USART_Read 1854                      _sprintf 14F6  
                    clrloop0 185D                    _LCD_clear 187B         end_of_initialization 001A  
             ?_Set_Baud_Rate 0070              ___lldiv@divisor 0020              ___lldiv@counter 0078  
                  _RCSTAbits 0018                      psplit$0 B0035         __size_of_USART_Write 000C  
             __tdiv_to_l_@f1 0020               __tdiv_to_l_@f2 0024                ??__tdiv_to_l_ 0073  
      __size_of_Init_Receive 0008                  ___fladd@grs 006B                ___xxtofl@sign 0024  
                  _TRISCbits 0087                   ?_LCD_clear 0070            LCD_Write_String@a 0076  
          LCD_Write_String@i 0023             ??_LCD_Write_Char 0074                  ___flmul@grs 0038  
                  _TXSTAbits 0098            __size_of_LCD_Init 004F          __size_of__div_to_l_ 00BE  
          __size_of_LCD_Port 0006                 _Init_Receive 1854                ??_LCD_Command 0074  
             __end_of___flge 1DC9               __end_of___fleq 1B24               __end_of___wmul 1919  
           _LCD_Write_String 19F9            pnum$text1_split_1 0035               __end_of_fround 126E  
        start_initialization 000F                  __end_of_ISR 19BF          __end_of__tdiv_to_l_ 1F42  
            ??_Set_Baud_Rate 0073              ___llmod@divisor 0028              ___llmod@counter 0031  
                   ??___flge 0073                     ??___fleq 0073                     ??___wmul 0077  
                  __Umul8_16 193F              LCD_Write_Char@a 0075                     ??_fround 0048  
              sprintf@tmpval 00C1                    ___fladd@a 005C                    ___fladd@b 0058  
                 fround@prec 0057          __end_of_LCD_Command 18F4                    ___flmul@a 002E  
                  ___flmul@b 002A                  __pbssCOMMON 0079                    ___flsub@a 00A0  
                  ___flsub@b 00A4        __end_of_Init_Transmit 08D3                    ___latbits 0002  
              __pcstackBANK0 0020                __pcstackBANK1 00A0            __size_of___xxtofl 00BC  
               _isdigit$1061 0073                  ??_LCD_clear 0077                  sprintf@flag 00BD  
                sprintf@eexp 00C9                     ?_LeerADC 0044                  sprintf@fval 00CB  
                sprintf@prec 00D0             ___lwdiv@dividend 0022           _USART_Write_String 18B3  
                   ?___fladd 0058                     ?___awdiv 0022                     ?___flneg 0073  
                   ?___awmod 0073                     ?___flmul 002A                     ?___flsub 00A0  
                   ?___fltol 0057                     ?___lldiv 0020                     ?___llmod 0028  
                  __npowers_ 0844                   ?__Umul8_16 0073                     ?___lwdiv 0020  
                   ?___lwmod 0073                    __pstrings 0800          ?_USART_Write_String 0070  
                __tdiv_to_l_ 1E85                     ?_initADC 0070                 ??__div_to_l_ 0073  
                   ?_isdigit 0070             ___lwdiv@quotient 0026                     ?_sprintf 00A8  
             __size_of_scale 0363               __size_of_setup 002A                  ADC_Select@a 0075  
       ??_USART_Write_String 0074            interrupt_function 0004                     _LCD_Init 1A85  
             ___wmul@product 0077                     _LCD_Port 1000                    clear_ram0 185C  
                   _PIE1bits 008C                     _PIR1bits 000C           __end_of__div_to_l_ 2000  
                  _valor_adc 007A                     LeerADC@a 004D                     LeerADC@x 004C  
                _LCD_Command 18D1                   _ADCON0bits 001F                  __stringbase 080F  
          ___wmul@multiplier 0073     __end_of_LCD_Write_String 1A3F                   _ADC_Select 1C89  
           __size_of_LeerADC 0057                ??_USART_Write 0073                  ??__Umul8_16 0075  
           __size_of___fladd 0288             __size_of___awdiv 0069             __size_of___flneg 000B  
           __size_of___awmod 005B             __size_of___flmul 0361             __size_of___flsub 0050  
           __size_of___fltol 007C             __size_of___lldiv 0068             __size_of___llmod 0056  
           __size_of___lwdiv 0046             __size_of___lwmod 003A                  _fround$1237 0053  
                _fround$1238 004F           __end_of__stringtab 0810                   sprintf@val 00C5  
           __size_of_initADC 000D                     ___xxtofl 1DC9             __size_of_isdigit 0012  
            ___lwdiv@divisor 0020              ___lwdiv@counter 0025                     __ptext10 1F42  
                   __ptext11 18F4                     __ptext20 1968                     __ptext12 1B74  
                   __ptext21 07F3                     __ptext13 1C21                     __ptext30 187B  
                   __ptext22 18B3                     __ptext14 0777                     __ptext31 19F9  
                   __ptext23 186F                     __ptext15 1B24                     __ptext40 184C  
                   __ptext32 189A                     __ptext24 1847                     __ptext16 126E  
                   __ptext33 1919                     __ptext25 1BCA                     __ptext17 1864  
                   __ptext34 1A85                     __ptext26 1DC9                     __ptext18 1D25  
                   __ptext35 18D1                     __ptext27 093C                     __ptext19 1AD4  
                   __ptext36 1000                     __ptext28 193F                     __ptext37 08C5  
                   __ptext29 1C89                     __ptext38 1854                     __ptext39 1992  
                   __powers_ 0810      __size_of_LCD_Set_Cursor 0026                     _contador 00DB  
           __size_of_sprintf F1AA                __size_of_main 00D7                    pnum$text1 000B  
                   _recibido 0079                     _pantalla 00DC          __end_of_USART_Write 187B  
                 _INTCONbits 000B                     isdigit@c 0074                     scale@scl 0056  
      __end_of_Set_Baud_Rate 184C                     intlevel1 0000                    sprintf@ap 00BC  
           __tdiv_to_l_@exp1 002D             __tdiv_to_l_@cntr 002C                    sprintf@sp 00CF  
           __tdiv_to_l_@quot 0028             ___lwmod@dividend 0075                  ?_ADC_Select 0070  
           ___lldiv@dividend 0024                    stringcode 080A      __size_of_LCD_Write_Char 0019  
               ?__tdiv_to_l_ 0020       __Umul8_16@multiplicand 0073                     sprintf@c 00D2  
                   sprintf@f 00A8          USART_Write_String@a 0075          USART_Write_String@i 0076  
           ___lldiv@quotient 0074              ___lwmod@divisor 0073              ___lwmod@counter 0078  
                   stringdir 080A                     stringtab 0800                ___fladd@signs 0068  
               ___fladd@aexp 0069                 ___fladd@bexp 006A         __Umul8_16@multiplier 0024  
                 _USART_Read 184C                  _USART_Write 186F            __Umul8_16@product 0020  
